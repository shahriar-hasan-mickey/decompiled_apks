record `o0.a` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `java.io.File` `o0.a.a` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `o0.a.b` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `o0.a.c` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `o0.a.d` @AccessFlag PRIVATE_FINAL;
  `int` `o0.a.e` @AccessFlag PRIVATE_FINAL;
  `long` `o0.a.f` @AccessFlag PRIVATE;
  `int` `o0.a.g` @AccessFlag PRIVATE_FINAL;
  `long` `o0.a.h` @AccessFlag PRIVATE;
  `java.io.Writer` `o0.a.i` @AccessFlag PRIVATE;
  `java.util.LinkedHashMap` `o0.a.j` @AccessFlag PRIVATE_FINAL;
  `int` `o0.a.k` @AccessFlag PRIVATE;
  `long` `o0.a.l` @AccessFlag PRIVATE;
  `java.util.concurrent.ThreadPoolExecutor` `o0.a.m` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `o0.a.n` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`o0.a` v16 @kind this, `java.io.File` v17 @kind object, `int` v18 , `int` v19 , `long` v20 ) @signature `Lo0/a;.<init>:(Ljava/io/File;IIJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L4ee710.  v0:= v16 @kind object;
  #L4ee714.  v1:= v17 @kind object;
  #L4ee718.  call `<init>`(v16) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ee71e.  v2:= 0L;
  #L4ee722.  v0.`o0.a.h` @type ^`long` := v2 @kind wide;
  #L4ee726.  v4:= new `java.util.LinkedHashMap`;
  #L4ee72a.  v5:= 0I;
  #L4ee72c.  v6:= 0.75F;
  #L4ee730.  v7:= 1I;
  #L4ee732.  call `<init>`(v4, v5, v6, v7) @signature `Ljava/util/LinkedHashMap;.<init>:(IFZ)V` @kind direct;
  #L4ee738.  v0.`o0.a.j` @type ^`java.util.LinkedHashMap` := v4 @kind object;
  #L4ee73c.  v0.`o0.a.l` @type ^`long` := v2 @kind wide;
  #L4ee740.  v2:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L4ee744.  v13:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ee748.  v14:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L4ee74c.  call `<init>`(v14) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L4ee752.  v15:= new `o0.a$b`;
  #L4ee756.  v3:= 0I;
  #L4ee758.  call `<init>`(v15, v3) @signature `Lo0/a$b;.<init>:(Lo0/a$a;)V` @kind direct;
  #L4ee75e.  v9:= 0I;
  #L4ee760.  v10:= 1I;
  #L4ee762.  v11:= 60L;
  #L4ee766.  v8:= v2 @kind object;
  #L4ee768.  call `<init>`(v8, v9, v10, v11, v13, v14, v15) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L4ee76e.  v0.`o0.a.m` @type ^`java.util.concurrent.ThreadPoolExecutor` := v2 @kind object;
  #L4ee772.  v2:= new `o0.a$a`;
  #L4ee776.  call `<init>`(v2, v0) @signature `Lo0/a$a;.<init>:(Lo0/a;)V` @kind direct;
  #L4ee77c.  v0.`o0.a.n` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L4ee780.  v0.`o0.a.a` @type ^`java.io.File` := v1 @kind object;
  #L4ee784.  v2:= v18;
  #L4ee788.  v0.`o0.a.e` @type ^`int` := v2;
  #L4ee78c.  v2:= new `java.io.File`;
  #L4ee790.  v3:= "journal" @kind object;
  #L4ee794.  call `<init>`(v2, v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4ee79a.  v0.`o0.a.b` @type ^`java.io.File` := v2 @kind object;
  #L4ee79e.  v2:= new `java.io.File`;
  #L4ee7a2.  v3:= "journal.tmp" @kind object;
  #L4ee7a6.  call `<init>`(v2, v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4ee7ac.  v0.`o0.a.c` @type ^`java.io.File` := v2 @kind object;
  #L4ee7b0.  v2:= new `java.io.File`;
  #L4ee7b4.  v3:= "journal.bkp" @kind object;
  #L4ee7b8.  call `<init>`(v2, v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4ee7be.  v0.`o0.a.d` @type ^`java.io.File` := v2 @kind object;
  #L4ee7c2.  v1:= v19;
  #L4ee7c6.  v0.`o0.a.g` @type ^`int` := v1;
  #L4ee7ca.  v1:= v20 @kind wide;
  #L4ee7ce.  v0.`o0.a.f` @type ^`long` := v1 @kind wide;
  #L4ee7d2.  return @kind void;
}
procedure `java.io.File` `K`(`o0.a` v0 @kind object) @signature `Lo0/a;.K:(Lo0/a;)Ljava/io/File;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ee37c.  v0:= v0.`o0.a.a` @type ^`java.io.File` @kind object;
  #L4ee380.  return v0 @kind object;
}
procedure `void` `R`(`o0.a` v0 @kind object, `o0.a$c` v1 @kind object, `boolean` v2 ) @signature `Lo0/a;.R:(Lo0/a;Lo0/a$c;Z)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ee7fc.  call `Y`(v0, v1, v2) @signature `Lo0/a;.Y:(Lo0/a$c;Z)V` @kind direct;
  #L4ee802.  return @kind void;
}
procedure `boolean` `T`(`o0.a` v0 @kind object) @signature `Lo0/a;.T:(Lo0/a;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ee1bc.  call temp:= `f0`(v0) @signature `Lo0/a;.f0:()Z` @kind direct;
  #L4ee1c2.  v0:= temp;
  #L4ee1c4.  return v0;
}
procedure `void` `U`(`o0.a` v0 @kind object) @signature `Lo0/a;.U:(Lo0/a;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ee814.  call `k0`(v0) @signature `Lo0/a;.k0:()V` @kind direct;
  #L4ee81a.  return @kind void;
}
procedure `int` `V`(`o0.a` v0 @kind object, `int` v1 ) @signature `Lo0/a;.V:(Lo0/a;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ee364.  v0.`o0.a.k` @type ^`int` := v1;
  #L4ee368.  return v1;
}
procedure `void` `W`(`o0.a` v2 @kind this) @signature `Lo0/a;.W:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ee82c.  v0:= v2.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee830.  if v0 == 0 then goto L4ee836;
  #L4ee834.  return @kind void;
  #L4ee836.  v0:= new `java.lang.IllegalStateException`;
  #L4ee83a.  v1:= "cache is closed" @kind object;
  #L4ee83e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ee844.  throw v0;
}
procedure `void` `X`(`java.io.Writer` v2 @kind object) @signature `Lo0/a;.X:(Ljava/io/Writer;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4ee8fc.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4ee900.  v1:= 26I;
  #L4ee904.  if v0 >= v1 then goto L4ee910;
  #L4ee908.  call `close`(v2) @signature `Ljava/io/Writer;.close:()V` @kind virtual;
  #L4ee90e.  return @kind void;
  #L4ee910.  call temp:= `getThreadPolicy`() @signature `Landroid/os/StrictMode;.getThreadPolicy:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L4ee916.  v0:= temp @kind object;
  #L4ee918.  v1:= new `android.os.StrictMode$ThreadPolicy$Builder`;
  #L4ee91c.  call `<init>`(v1, v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.<init>:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind direct;
  #L4ee922.  call temp:= `permitUnbufferedIo`(v1) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.permitUnbufferedIo:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L4ee928.  v1:= temp @kind object;
  #L4ee92a.  call temp:= `build`(v1) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.build:()Landroid/os/StrictMode$ThreadPolicy;` @kind virtual;
  #L4ee930.  v1:= temp @kind object;
  #L4ee932.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L4ee938.  call `close`(v2) @signature `Ljava/io/Writer;.close:()V` @kind virtual;
  #L4ee93e.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L4ee944.  return @kind void;
  #L4ee946.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee948.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L4ee94e.  throw v2;
  catch `java.lang.Throwable` @[L4ee938..L4ee93e] goto L4ee946;
}
procedure `void` `Y`(`o0.a` v9 @kind this, `o0.a$c` v10 @kind object, `boolean` v11 ) @signature `Lo0/a;.Y:(Lo0/a$c;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4ee96c.  @monitorenter v9
  #L4ee96e.  call temp:= `c`(v10) @signature `Lo0/a$c;.c:(Lo0/a$c;)Lo0/a$d;` @kind static;
  #L4ee974.  v0:= temp @kind object;
  #L4ee976.  call temp:= `g`(v0) @signature `Lo0/a$d;.g:(Lo0/a$d;)Lo0/a$c;` @kind static;
  #L4ee97c.  v1:= temp @kind object;
  #L4ee97e.  if v1 != v10 then goto L4eeb7c;
  #L4ee982.  v1:= 0I;
  #L4ee984.  if v11 == 0 then goto L4eea06;
  #L4ee988.  call temp:= `e`(v0) @signature `Lo0/a$d;.e:(Lo0/a$d;)Z` @kind static;
  #L4ee98e.  v2:= temp;
  #L4ee990.  if v2 != 0 then goto L4eea06;
  #L4ee994.  v2:= 0I;
  #L4ee996.  v3:= v9.`o0.a.g` @type ^`int`;
  #L4ee99a.  if v2 >= v3 then goto L4eea06;
  #L4ee99e.  call temp:= `d`(v10) @signature `Lo0/a$c;.d:(Lo0/a$c;)[Z` @kind static;
  #L4ee9a4.  v3:= temp @kind object;
  #L4ee9a6.  v3:= v3[v2] @kind boolean;
  #L4ee9aa.  if v3 == 0 then goto L4ee9d2;
  #L4ee9ae.  call temp:= `k`(v0, v2) @signature `Lo0/a$d;.k:(I)Ljava/io/File;` @kind virtual;
  #L4ee9b4.  v3:= temp @kind object;
  #L4ee9b6.  call temp:= `exists`(v3) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4ee9bc.  v3:= temp;
  #L4ee9be.  if v3 != 0 then goto L4ee9cc;
  #L4ee9c2.  call `a`(v10) @signature `Lo0/a$c;.a:()V` @kind virtual;
  #L4ee9c8.  @monitorexit v9
  #L4ee9ca.  return @kind void;
  #L4ee9cc.  v2:= v2 + 1;
  #L4ee9d0.  goto L4ee996;
  #L4ee9d2.  call `a`(v10) @signature `Lo0/a$c;.a:()V` @kind virtual;
  #L4ee9d8.  v10:= new `java.lang.IllegalStateException`;
  #L4ee9dc.  v11:= new `java.lang.StringBuilder`;
  #L4ee9e0.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ee9e6.  v0:= "Newly created entry didn't create value for index " @kind object;
  #L4ee9ea.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee9f0.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee9f6.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ee9fc.  v11:= temp @kind object;
  #L4ee9fe.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4eea04.  throw v10;
  #L4eea06.  v10:= v9.`o0.a.g` @type ^`int`;
  #L4eea0a.  if v1 >= v10 then goto L4eea6e;
  #L4eea0e.  call temp:= `k`(v0, v1) @signature `Lo0/a$d;.k:(I)Ljava/io/File;` @kind virtual;
  #L4eea14.  v10:= temp @kind object;
  #L4eea16.  if v11 == 0 then goto L4eea62;
  #L4eea1a.  call temp:= `exists`(v10) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4eea20.  v2:= temp;
  #L4eea22.  if v2 == 0 then goto L4eea68;
  #L4eea26.  call temp:= `j`(v0, v1) @signature `Lo0/a$d;.j:(I)Ljava/io/File;` @kind virtual;
  #L4eea2c.  v2:= temp @kind object;
  #L4eea2e.  call temp:= `renameTo`(v10, v2) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L4eea34.  call temp:= `a`(v0) @signature `Lo0/a$d;.a:(Lo0/a$d;)[J` @kind static;
  #L4eea3a.  v10:= temp @kind object;
  #L4eea3c.  v3:= v10[v1] @kind wide;
  #L4eea40.  call temp:= `length`(v2) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L4eea46.  v5:= temp @kind wide;
  #L4eea48.  call temp:= `a`(v0) @signature `Lo0/a$d;.a:(Lo0/a$d;)[J` @kind static;
  #L4eea4e.  v10:= temp @kind object;
  #L4eea50.  v10[v1]:= v5 @kind wide;
  #L4eea54.  v7:= v9.`o0.a.h` @type ^`long` @kind wide;
  #L4eea58.  v7:= v7 - v3 @kind long;
  #L4eea5a.  v7:= v7 + v5 @kind long;
  #L4eea5c.  v9.`o0.a.h` @type ^`long` := v7 @kind wide;
  #L4eea60.  goto L4eea68;
  #L4eea62.  call `a0`(v10) @signature `Lo0/a;.a0:(Ljava/io/File;)V` @kind static;
  #L4eea68.  v1:= v1 + 1;
  #L4eea6c.  goto L4eea06;
  #L4eea6e.  v10:= v9.`o0.a.k` @type ^`int`;
  #L4eea72.  v1:= 1I;
  #L4eea74.  v10:= v10 + v1 @kind int;
  #L4eea76.  v9.`o0.a.k` @type ^`int` := v10;
  #L4eea7a.  v10:= 0I;
  #L4eea7c.  call temp:= `h`(v0, v10) @signature `Lo0/a$d;.h:(Lo0/a$d;Lo0/a$c;)Lo0/a$c;` @kind static;
  #L4eea82.  call temp:= `e`(v0) @signature `Lo0/a$d;.e:(Lo0/a$d;)Z` @kind static;
  #L4eea88.  v10:= temp;
  #L4eea8a.  v10:= v10 ^| v11 @kind int;
  #L4eea8c.  v2:= 10I;
  #L4eea90.  v3:= 32I;
  #L4eea94.  if v10 == 0 then goto L4eeafe;
  #L4eea98.  call temp:= `f`(v0, v1) @signature `Lo0/a$d;.f:(Lo0/a$d;Z)Z` @kind static;
  #L4eea9e.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeaa2.  v1:= "CLEAN" @kind object;
  #L4eeaa6.  call temp:= `append`(v10, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4eeaac.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeab0.  call temp:= `append`(v10, v3) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4eeab6.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeaba.  call temp:= `b`(v0) @signature `Lo0/a$d;.b:(Lo0/a$d;)Ljava/lang/String;` @kind static;
  #L4eeac0.  v1:= temp @kind object;
  #L4eeac2.  call temp:= `append`(v10, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4eeac8.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeacc.  call temp:= `l`(v0) @signature `Lo0/a$d;.l:()Ljava/lang/String;` @kind virtual;
  #L4eead2.  v1:= temp @kind object;
  #L4eead4.  call temp:= `append`(v10, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4eeada.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeade.  call temp:= `append`(v10, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4eeae4.  if v11 == 0 then goto L4eeb44;
  #L4eeae8.  v10:= v9.`o0.a.l` @type ^`long` @kind wide;
  #L4eeaec.  v1:= 1L;
  #L4eeaf0.  v1:= v1 + v10 @kind long;
  #L4eeaf2.  v9.`o0.a.l` @type ^`long` := v1 @kind wide;
  #L4eeaf6.  call temp:= `d`(v0, v10) @signature `Lo0/a$d;.d:(Lo0/a$d;J)J` @kind static;
  #L4eeafc.  goto L4eeb44;
  #L4eeafe.  v10:= v9.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4eeb02.  call temp:= `b`(v0) @signature `Lo0/a$d;.b:(Lo0/a$d;)Ljava/lang/String;` @kind static;
  #L4eeb08.  v11:= temp @kind object;
  #L4eeb0a.  call temp:= `remove`(v10, v11) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4eeb10.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeb14.  v11:= "REMOVE" @kind object;
  #L4eeb18.  call temp:= `append`(v10, v11) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4eeb1e.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeb22.  call temp:= `append`(v10, v3) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4eeb28.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeb2c.  call temp:= `b`(v0) @signature `Lo0/a$d;.b:(Lo0/a$d;)Ljava/lang/String;` @kind static;
  #L4eeb32.  v11:= temp @kind object;
  #L4eeb34.  call temp:= `append`(v10, v11) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4eeb3a.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeb3e.  call temp:= `append`(v10, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4eeb44.  v10:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4eeb48.  call `d0`(v10) @signature `Lo0/a;.d0:(Ljava/io/Writer;)V` @kind static;
  #L4eeb4e.  v10:= v9.`o0.a.h` @type ^`long` @kind wide;
  #L4eeb52.  v0:= v9.`o0.a.f` @type ^`long` @kind wide;
  #L4eeb56.  v2:= lcmp(v10, v0);
  #L4eeb5a.  if v2 > 0 then goto L4eeb6a;
  #L4eeb5e.  call temp:= `f0`(v9) @signature `Lo0/a;.f0:()Z` @kind direct;
  #L4eeb64.  v10:= temp;
  #L4eeb66.  if v10 == 0 then goto L4eeb78;
  #L4eeb6a.  v10:= v9.`o0.a.m` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L4eeb6e.  v11:= v9.`o0.a.n` @type ^`java.util.concurrent.Callable` @kind object;
  #L4eeb72.  call temp:= `submit`(v10, v11) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L4eeb78.  @monitorexit v9
  #L4eeb7a.  return @kind void;
  #L4eeb7c.  v10:= new `java.lang.IllegalStateException`;
  #L4eeb80.  call `<init>`(v10) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L4eeb86.  throw v10;
  #L4eeb88.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4eeb8a.  @monitorexit v9
  #L4eeb8c.  throw v10;
  catch `java.lang.Throwable` @[L4ee96e..L4ee9c8] goto L4eeb88;
  catch `java.lang.Throwable` @[L4ee9d2..L4eeb78] goto L4eeb88;
  catch `java.lang.Throwable` @[L4eeb7c..L4eeb88] goto L4eeb88;
}
procedure `void` `a0`(`java.io.File` v1 @kind object) @signature `Lo0/a;.a0:(Ljava/io/File;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4eebe0.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4eebe6.  v0:= temp;
  #L4eebe8.  if v0 == 0 then goto L4eec06;
  #L4eebec.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L4eebf2.  v1:= temp;
  #L4eebf4.  if v1 == 0 then goto L4eebfa;
  #L4eebf8.  goto L4eec06;
  #L4eebfa.  v1:= new `java.io.IOException`;
  #L4eebfe.  call `<init>`(v1) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L4eec04.  throw v1;
  #L4eec06.  return @kind void;
}
procedure `o0.a$c` `c0`(`o0.a` v5 @kind this, `java.lang.String` v6 @kind object, `long` v7 ) @signature `Lo0/a;.c0:(Ljava/lang/String;J)Lo0/a$c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ee50c.  @monitorenter v5
  #L4ee50e.  call `W`(v5) @signature `Lo0/a;.W:()V` @kind direct;
  #L4ee514.  v0:= v5.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4ee518.  call temp:= `get`(v0, v6) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ee51e.  v0:= temp @kind object;
  #L4ee520.  v0:= (`o0.a$d`) v0 @kind object;
  #L4ee524.  v1:= -1L;
  #L4ee528.  v3:= 0I;
  #L4ee52a.  v4:= lcmp(v7, v1);
  #L4ee52e.  if v4 == 0 then goto L4ee54a;
  #L4ee532.  if v0 == 0 then goto L4ee546;
  #L4ee536.  call temp:= `c`(v0) @signature `Lo0/a$d;.c:(Lo0/a$d;)J` @kind static;
  #L4ee53c.  v1:= temp @kind wide;
  #L4ee53e.  v4:= lcmp(v1, v7);
  #L4ee542.  if v4 == 0 then goto L4ee54a;
  #L4ee546.  @monitorexit v5
  #L4ee548.  return v3 @kind object;
  #L4ee54a.  if v0 != 0 then goto L4ee564;
  #L4ee54e.  v0:= new `o0.a$d`;
  #L4ee552.  call `<init>`(v0, v5, v6, v3) @signature `Lo0/a$d;.<init>:(Lo0/a;Ljava/lang/String;Lo0/a$a;)V` @kind direct;
  #L4ee558.  v7:= v5.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4ee55c.  call temp:= `put`(v7, v6, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ee562.  goto L4ee574;
  #L4ee564.  call temp:= `g`(v0) @signature `Lo0/a$d;.g:(Lo0/a$d;)Lo0/a$c;` @kind static;
  #L4ee56a.  v7:= temp @kind object;
  #L4ee56c.  if v7 == 0 then goto L4ee574;
  #L4ee570.  @monitorexit v5
  #L4ee572.  return v3 @kind object;
  #L4ee574.  v7:= new `o0.a$c`;
  #L4ee578.  call `<init>`(v7, v5, v0, v3) @signature `Lo0/a$c;.<init>:(Lo0/a;Lo0/a$d;Lo0/a$a;)V` @kind direct;
  #L4ee57e.  call temp:= `h`(v0, v7) @signature `Lo0/a$d;.h:(Lo0/a$d;Lo0/a$c;)Lo0/a$c;` @kind static;
  #L4ee584.  v8:= v5.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee588.  v0:= "DIRTY" @kind object;
  #L4ee58c.  call temp:= `append`(v8, v0) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4ee592.  v8:= v5.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee596.  v0:= 32I;
  #L4ee59a.  call temp:= `append`(v8, v0) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4ee5a0.  v8:= v5.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee5a4.  call temp:= `append`(v8, v6) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4ee5aa.  v6:= v5.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee5ae.  v8:= 10I;
  #L4ee5b2.  call temp:= `append`(v6, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4ee5b8.  v6:= v5.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee5bc.  call `d0`(v6) @signature `Lo0/a;.d0:(Ljava/io/Writer;)V` @kind static;
  #L4ee5c2.  @monitorexit v5
  #L4ee5c4.  return v7 @kind object;
  #L4ee5c6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee5c8.  @monitorexit v5
  #L4ee5ca.  throw v6;
  catch `java.lang.Throwable` @[L4ee50e..L4ee53e] goto L4ee5c6;
  catch `java.lang.Throwable` @[L4ee54e..L4ee56c] goto L4ee5c6;
  catch `java.lang.Throwable` @[L4ee574..L4ee5c2] goto L4ee5c6;
}
procedure `void` `d0`(`java.io.Writer` v2 @kind object) @signature `Lo0/a;.d0:(Ljava/io/Writer;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4eec18.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4eec1c.  v1:= 26I;
  #L4eec20.  if v0 >= v1 then goto L4eec2c;
  #L4eec24.  call `flush`(v2) @signature `Ljava/io/Writer;.flush:()V` @kind virtual;
  #L4eec2a.  return @kind void;
  #L4eec2c.  call temp:= `getThreadPolicy`() @signature `Landroid/os/StrictMode;.getThreadPolicy:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L4eec32.  v0:= temp @kind object;
  #L4eec34.  v1:= new `android.os.StrictMode$ThreadPolicy$Builder`;
  #L4eec38.  call `<init>`(v1, v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.<init>:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind direct;
  #L4eec3e.  call temp:= `permitUnbufferedIo`(v1) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.permitUnbufferedIo:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L4eec44.  v1:= temp @kind object;
  #L4eec46.  call temp:= `build`(v1) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.build:()Landroid/os/StrictMode$ThreadPolicy;` @kind virtual;
  #L4eec4c.  v1:= temp @kind object;
  #L4eec4e.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L4eec54.  call `flush`(v2) @signature `Ljava/io/Writer;.flush:()V` @kind virtual;
  #L4eec5a.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L4eec60.  return @kind void;
  #L4eec62.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4eec64.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L4eec6a.  throw v2;
  catch `java.lang.Throwable` @[L4eec54..L4eec5a] goto L4eec62;
}
procedure `boolean` `f0`(`o0.a` v2 @kind this) @signature `Lo0/a;.f0:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ee1d8.  v0:= v2.`o0.a.k` @type ^`int`;
  #L4ee1dc.  v1:= 2000I;
  #L4ee1e0.  if v0 < v1 then goto L4ee1f8;
  #L4ee1e4.  v1:= v2.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4ee1e8.  call temp:= `size`(v1) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L4ee1ee.  v1:= temp;
  #L4ee1f0.  if v0 < v1 then goto L4ee1f8;
  #L4ee1f4.  v0:= 1I;
  #L4ee1f6.  goto L4ee1fa;
  #L4ee1f8.  v0:= 0I;
  #L4ee1fa.  return v0;
}
procedure `java.io.Writer` `g`(`o0.a` v0 @kind object) @signature `Lo0/a;.g:(Lo0/a;)Ljava/io/Writer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ee394.  v0:= v0.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee398.  return v0 @kind object;
}
procedure `o0.a` `g0`(`java.io.File` v9 @kind object, `int` v10 , `int` v11 , `long` v12 ) @signature `Lo0/a;.g0:(Ljava/io/File;IIJ)Lo0/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4ee3ac.  v0:= 0L;
  #L4ee3b0.  v2:= lcmp(v12, v0);
  #L4ee3b4.  if v2 <= 0 then goto L4ee4ba;
  #L4ee3b8.  if v11 <= 0 then goto L4ee4aa;
  #L4ee3bc.  v0:= new `java.io.File`;
  #L4ee3c0.  v1:= "journal.bkp" @kind object;
  #L4ee3c4.  call `<init>`(v0, v9, v1) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4ee3ca.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4ee3d0.  v1:= temp;
  #L4ee3d2.  if v1 == 0 then goto L4ee400;
  #L4ee3d6.  v1:= new `java.io.File`;
  #L4ee3da.  v2:= "journal" @kind object;
  #L4ee3de.  call `<init>`(v1, v9, v2) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4ee3e4.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4ee3ea.  v2:= temp;
  #L4ee3ec.  if v2 == 0 then goto L4ee3f8;
  #L4ee3f0.  call temp:= `delete`(v0) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L4ee3f6.  goto L4ee400;
  #L4ee3f8.  v2:= 0I;
  #L4ee3fa.  call `m0`(v0, v1, v2) @signature `Lo0/a;.m0:(Ljava/io/File;Ljava/io/File;Z)V` @kind static;
  #L4ee400.  v0:= new `o0.a`;
  #L4ee404.  v3:= v0 @kind object;
  #L4ee406.  v4:= v9 @kind object;
  #L4ee408.  v5:= v10;
  #L4ee40a.  v6:= v11;
  #L4ee40c.  v7:= v12 @kind wide;
  #L4ee40e.  call `<init>`(v3, v4, v5, v6, v7) @signature `Lo0/a;.<init>:(Ljava/io/File;IIJ)V` @kind direct;
  #L4ee414.  v1:= v0.`o0.a.b` @type ^`java.io.File` @kind object;
  #L4ee418.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4ee41e.  v1:= temp;
  #L4ee420.  if v1 == 0 then goto L4ee488;
  #L4ee424.  call `i0`(v0) @signature `Lo0/a;.i0:()V` @kind direct;
  #L4ee42a.  call `h0`(v0) @signature `Lo0/a;.h0:()V` @kind direct;
  #L4ee430.  return v0 @kind object;
  #L4ee432.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L4ee434.  v2:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L4ee438.  v3:= new `java.lang.StringBuilder`;
  #L4ee43c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ee442.  v4:= "DiskLruCache " @kind object;
  #L4ee446.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee44c.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee452.  v4:= " is corrupt: " @kind object;
  #L4ee456.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee45c.  call temp:= `getMessage`(v1) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L4ee462.  v1:= temp @kind object;
  #L4ee464.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee46a.  v1:= ", removing" @kind object;
  #L4ee46e.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee474.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ee47a.  v1:= temp @kind object;
  #L4ee47c.  call `println`(v2, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L4ee482.  call `Z`(v0) @signature `Lo0/a;.Z:()V` @kind virtual;
  #L4ee488.  call temp:= `mkdirs`(v9) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L4ee48e.  v0:= new `o0.a`;
  #L4ee492.  v3:= v0 @kind object;
  #L4ee494.  v4:= v9 @kind object;
  #L4ee496.  v5:= v10;
  #L4ee498.  v6:= v11;
  #L4ee49a.  v7:= v12 @kind wide;
  #L4ee49c.  call `<init>`(v3, v4, v5, v6, v7) @signature `Lo0/a;.<init>:(Ljava/io/File;IIJ)V` @kind direct;
  #L4ee4a2.  call `k0`(v0) @signature `Lo0/a;.k0:()V` @kind direct;
  #L4ee4a8.  return v0 @kind object;
  #L4ee4aa.  v9:= new `java.lang.IllegalArgumentException`;
  #L4ee4ae.  v10:= "valueCount <= 0" @kind object;
  #L4ee4b2.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ee4b8.  throw v9;
  #L4ee4ba.  v9:= new `java.lang.IllegalArgumentException`;
  #L4ee4be.  v10:= "maxSize <= 0" @kind object;
  #L4ee4c2.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ee4c8.  throw v9;
  catch `java.io.IOException` @[L4ee424..L4ee430] goto L4ee432;
}
procedure `int` `h`(`o0.a` v0 @kind object) @signature `Lo0/a;.h:(Lo0/a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ee34c.  v0:= v0.`o0.a.g` @type ^`int`;
  #L4ee350.  return v0;
}
procedure `void` `h0`(`o0.a` v8 @kind this) @signature `Lo0/a;.h0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4eec88.  v0:= v8.`o0.a.c` @type ^`java.io.File` @kind object;
  #L4eec8c.  call `a0`(v0) @signature `Lo0/a;.a0:(Ljava/io/File;)V` @kind static;
  #L4eec92.  v0:= v8.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4eec96.  call temp:= `values`(v0) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4eec9c.  v0:= temp @kind object;
  #L4eec9e.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eeca4.  v0:= temp @kind object;
  #L4eeca6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eecac.  v1:= temp;
  #L4eecae.  if v1 == 0 then goto L4eed2a;
  #L4eecb2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eecb8.  v1:= temp @kind object;
  #L4eecba.  v1:= (`o0.a$d`) v1 @kind object;
  #L4eecbe.  call temp:= `g`(v1) @signature `Lo0/a$d;.g:(Lo0/a$d;)Lo0/a$c;` @kind static;
  #L4eecc4.  v2:= temp @kind object;
  #L4eecc6.  v3:= 0I;
  #L4eecc8.  if v2 != 0 then goto L4eecf0;
  #L4eeccc.  v2:= v8.`o0.a.g` @type ^`int`;
  #L4eecd0.  if v3 >= v2 then goto L4eeca6;
  #L4eecd4.  v4:= v8.`o0.a.h` @type ^`long` @kind wide;
  #L4eecd8.  call temp:= `a`(v1) @signature `Lo0/a$d;.a:(Lo0/a$d;)[J` @kind static;
  #L4eecde.  v2:= temp @kind object;
  #L4eece0.  v6:= v2[v3] @kind wide;
  #L4eece4.  v4:= v4 + v6 @kind long;
  #L4eece6.  v8.`o0.a.h` @type ^`long` := v4 @kind wide;
  #L4eecea.  v3:= v3 + 1;
  #L4eecee.  goto L4eeccc;
  #L4eecf0.  v2:= 0I;
  #L4eecf2.  call temp:= `h`(v1, v2) @signature `Lo0/a$d;.h:(Lo0/a$d;Lo0/a$c;)Lo0/a$c;` @kind static;
  #L4eecf8.  v2:= v8.`o0.a.g` @type ^`int`;
  #L4eecfc.  if v3 >= v2 then goto L4eed22;
  #L4eed00.  call temp:= `j`(v1, v3) @signature `Lo0/a$d;.j:(I)Ljava/io/File;` @kind virtual;
  #L4eed06.  v2:= temp @kind object;
  #L4eed08.  call `a0`(v2) @signature `Lo0/a;.a0:(Ljava/io/File;)V` @kind static;
  #L4eed0e.  call temp:= `k`(v1, v3) @signature `Lo0/a$d;.k:(I)Ljava/io/File;` @kind virtual;
  #L4eed14.  v2:= temp @kind object;
  #L4eed16.  call `a0`(v2) @signature `Lo0/a;.a0:(Ljava/io/File;)V` @kind static;
  #L4eed1c.  v3:= v3 + 1;
  #L4eed20.  goto L4eecf8;
  #L4eed22.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L4eed28.  goto L4eeca6;
  #L4eed2a.  return @kind void;
}
procedure `void` `i0`(`o0.a` v9 @kind this) @signature `Lo0/a;.i0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4eed3c.  v0:= ", " @kind object;
  #L4eed40.  v1:= new `o0.b`;
  #L4eed44.  v2:= new `java.io.FileInputStream`;
  #L4eed48.  v3:= v9.`o0.a.b` @type ^`java.io.File` @kind object;
  #L4eed4c.  call `<init>`(v2, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L4eed52.  v3:= `@@o0.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L4eed56.  call `<init>`(v1, v2, v3) @signature `Lo0/b;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L4eed5c.  call temp:= `K`(v1) @signature `Lo0/b;.K:()Ljava/lang/String;` @kind virtual;
  #L4eed62.  v2:= temp @kind object;
  #L4eed64.  call temp:= `K`(v1) @signature `Lo0/b;.K:()Ljava/lang/String;` @kind virtual;
  #L4eed6a.  v3:= temp @kind object;
  #L4eed6c.  call temp:= `K`(v1) @signature `Lo0/b;.K:()Ljava/lang/String;` @kind virtual;
  #L4eed72.  v4:= temp @kind object;
  #L4eed74.  call temp:= `K`(v1) @signature `Lo0/b;.K:()Ljava/lang/String;` @kind virtual;
  #L4eed7a.  v5:= temp @kind object;
  #L4eed7c.  call temp:= `K`(v1) @signature `Lo0/b;.K:()Ljava/lang/String;` @kind virtual;
  #L4eed82.  v6:= temp @kind object;
  #L4eed84.  v7:= "libcore.io.DiskLruCache" @kind object;
  #L4eed88.  call temp:= `equals`(v7, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eed8e.  v7:= temp;
  #L4eed90.  if v7 == 0 then goto L4eee54;
  #L4eed94.  v7:= "1" @kind object;
  #L4eed98.  call temp:= `equals`(v7, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eed9e.  v7:= temp;
  #L4eeda0.  if v7 == 0 then goto L4eee54;
  #L4eeda4.  v7:= v9.`o0.a.e` @type ^`int`;
  #L4eeda8.  call temp:= `toString`(v7) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L4eedae.  v7:= temp @kind object;
  #L4eedb0.  call temp:= `equals`(v7, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eedb6.  v4:= temp;
  #L4eedb8.  if v4 == 0 then goto L4eee54;
  #L4eedbc.  v4:= v9.`o0.a.g` @type ^`int`;
  #L4eedc0.  call temp:= `toString`(v4) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L4eedc6.  v4:= temp @kind object;
  #L4eedc8.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eedce.  v4:= temp;
  #L4eedd0.  if v4 == 0 then goto L4eee54;
  #L4eedd4.  v4:= "" @kind object;
  #L4eedd8.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eedde.  v4:= temp;
  #L4eede0.  if v4 == 0 then goto L4eee54;
  #L4eede4.  v0:= 0I;
  #L4eede6.  call temp:= `K`(v1) @signature `Lo0/b;.K:()Ljava/lang/String;` @kind virtual;
  #L4eedec.  v2:= temp @kind object;
  #L4eedee.  call `j0`(v9, v2) @signature `Lo0/a;.j0:(Ljava/lang/String;)V` @kind direct;
  #L4eedf4.  v0:= v0 + 1;
  #L4eedf8.  goto L4eede6;
  #L4eedfa.  v2:= v9.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4eedfe.  call temp:= `size`(v2) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L4eee04.  v2:= temp;
  #L4eee06.  v0:= v0 - v2 @kind int;
  #L4eee08.  v9.`o0.a.k` @type ^`int` := v0;
  #L4eee0c.  call temp:= `s`(v1) @signature `Lo0/b;.s:()Z` @kind virtual;
  #L4eee12.  v0:= temp;
  #L4eee14.  if v0 == 0 then goto L4eee20;
  #L4eee18.  call `k0`(v9) @signature `Lo0/a;.k0:()V` @kind direct;
  #L4eee1e.  goto L4eee4c;
  #L4eee20.  v0:= new `java.io.BufferedWriter`;
  #L4eee24.  v2:= new `java.io.OutputStreamWriter`;
  #L4eee28.  v3:= new `java.io.FileOutputStream`;
  #L4eee2c.  v4:= v9.`o0.a.b` @type ^`java.io.File` @kind object;
  #L4eee30.  v5:= 1I;
  #L4eee32.  call `<init>`(v3, v4, v5) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L4eee38.  v4:= `@@o0.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L4eee3c.  call `<init>`(v2, v3, v4) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L4eee42.  call `<init>`(v0, v2) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L4eee48.  v9.`o0.a.i` @type ^`java.io.Writer` := v0 @kind object;
  #L4eee4c.  call `a`(v1) @signature `Lo0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4eee52.  return @kind void;
  #L4eee54.  v4:= new `java.io.IOException`;
  #L4eee58.  v7:= new `java.lang.StringBuilder`;
  #L4eee5c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4eee62.  v8:= "unexpected journal header: [" @kind object;
  #L4eee66.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eee6c.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eee72.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eee78.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eee7e.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eee84.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eee8a.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eee90.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eee96.  v0:= "]" @kind object;
  #L4eee9a.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eeea0.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4eeea6.  v0:= temp @kind object;
  #L4eeea8.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4eeeae.  throw v4;
  #L4eeeb0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4eeeb2.  call `a`(v1) @signature `Lo0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4eeeb8.  throw v0;
  catch `java.lang.Throwable` @[L4eed5c..L4eede0] goto L4eeeb0;
  catch `java.io.EOFException` @[L4eede6..L4eedf4] goto L4eedfa;
  catch `java.lang.Throwable` @[L4eede6..L4eedf4] goto L4eeeb0;
  catch `java.lang.Throwable` @[L4eedfa..L4eee4c] goto L4eeeb0;
  catch `java.lang.Throwable` @[L4eee54..L4eeeb0] goto L4eeeb0;
}
procedure `void` `j0`(`o0.a` v8 @kind this, `java.lang.String` v9 @kind object) @signature `Lo0/a;.j0:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4eeef8.  v0:= 32I;
  #L4eeefc.  call temp:= `indexOf`(v9, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4eef02.  v1:= temp;
  #L4eef04.  v2:= "unexpected journal line: " @kind object;
  #L4eef08.  v3:= -1I;
  #L4eef0a.  if v1 == v3 then goto L4ef030;
  #L4eef0e.  v4:= v1 + 1;
  #L4eef12.  call temp:= `indexOf`(v9, v0, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L4eef18.  v0:= temp;
  #L4eef1a.  if v0 != v3 then goto L4eef48;
  #L4eef1e.  call temp:= `substring`(v9, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4eef24.  v4:= temp @kind object;
  #L4eef26.  v5:= 6I;
  #L4eef28.  if v1 != v5 then goto L4eef50;
  #L4eef2c.  v5:= "REMOVE" @kind object;
  #L4eef30.  call temp:= `startsWith`(v9, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4eef36.  v5:= temp;
  #L4eef38.  if v5 == 0 then goto L4eef50;
  #L4eef3c.  v9:= v8.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4eef40.  call temp:= `remove`(v9, v4) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4eef46.  return @kind void;
  #L4eef48.  call temp:= `substring`(v9, v4, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4eef4e.  v4:= temp @kind object;
  #L4eef50.  v5:= v8.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4eef54.  call temp:= `get`(v5, v4) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4eef5a.  v5:= temp @kind object;
  #L4eef5c.  v5:= (`o0.a$d`) v5 @kind object;
  #L4eef60.  v6:= 0I;
  #L4eef62.  if v5 != 0 then goto L4eef7a;
  #L4eef66.  v5:= new `o0.a$d`;
  #L4eef6a.  call `<init>`(v5, v8, v4, v6) @signature `Lo0/a$d;.<init>:(Lo0/a;Ljava/lang/String;Lo0/a$a;)V` @kind direct;
  #L4eef70.  v7:= v8.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4eef74.  call temp:= `put`(v7, v4, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4eef7a.  v4:= 5I;
  #L4eef7c.  if v0 == v3 then goto L4eefc0;
  #L4eef80.  if v1 != v4 then goto L4eefc0;
  #L4eef84.  v7:= "CLEAN" @kind object;
  #L4eef88.  call temp:= `startsWith`(v9, v7) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4eef8e.  v7:= temp;
  #L4eef90.  if v7 == 0 then goto L4eefc0;
  #L4eef94.  v1:= 1I;
  #L4eef96.  v0:= v0 + v1 @kind int;
  #L4eef98.  call temp:= `substring`(v9, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4eef9e.  v9:= temp @kind object;
  #L4eefa0.  v0:= " " @kind object;
  #L4eefa4.  call temp:= `split`(v9, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L4eefaa.  v9:= temp @kind object;
  #L4eefac.  call temp:= `f`(v5, v1) @signature `Lo0/a$d;.f:(Lo0/a$d;Z)Z` @kind static;
  #L4eefb2.  call temp:= `h`(v5, v6) @signature `Lo0/a$d;.h:(Lo0/a$d;Lo0/a$c;)Lo0/a$c;` @kind static;
  #L4eefb8.  call `i`(v5, v9) @signature `Lo0/a$d;.i:(Lo0/a$d;[Ljava/lang/String;)V` @kind static;
  #L4eefbe.  goto L4ef004;
  #L4eefc0.  if v0 != v3 then goto L4eefea;
  #L4eefc4.  if v1 != v4 then goto L4eefea;
  #L4eefc8.  v4:= "DIRTY" @kind object;
  #L4eefcc.  call temp:= `startsWith`(v9, v4) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4eefd2.  v4:= temp;
  #L4eefd4.  if v4 == 0 then goto L4eefea;
  #L4eefd8.  v9:= new `o0.a$c`;
  #L4eefdc.  call `<init>`(v9, v8, v5, v6) @signature `Lo0/a$c;.<init>:(Lo0/a;Lo0/a$d;Lo0/a$a;)V` @kind direct;
  #L4eefe2.  call temp:= `h`(v5, v9) @signature `Lo0/a$d;.h:(Lo0/a$d;Lo0/a$c;)Lo0/a$c;` @kind static;
  #L4eefe8.  goto L4ef004;
  #L4eefea.  if v0 != v3 then goto L4ef006;
  #L4eefee.  v0:= 4I;
  #L4eeff0.  if v1 != v0 then goto L4ef006;
  #L4eeff4.  v0:= "READ" @kind object;
  #L4eeff8.  call temp:= `startsWith`(v9, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4eeffe.  v0:= temp;
  #L4ef000.  if v0 == 0 then goto L4ef006;
  #L4ef004.  return @kind void;
  #L4ef006.  v0:= new `java.io.IOException`;
  #L4ef00a.  v1:= new `java.lang.StringBuilder`;
  #L4ef00e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ef014.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef01a.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef020.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ef026.  v9:= temp @kind object;
  #L4ef028.  call `<init>`(v0, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ef02e.  throw v0;
  #L4ef030.  v0:= new `java.io.IOException`;
  #L4ef034.  v1:= new `java.lang.StringBuilder`;
  #L4ef038.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ef03e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef044.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef04a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ef050.  v9:= temp @kind object;
  #L4ef052.  call `<init>`(v0, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ef058.  throw v0;
}
procedure `void` `k0`(`o0.a` v6 @kind this) @signature `Lo0/a;.k0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ef06c.  @monitorenter v6
  #L4ef06e.  v0:= v6.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ef072.  if v0 == 0 then goto L4ef07c;
  #L4ef076.  call `X`(v0) @signature `Lo0/a;.X:(Ljava/io/Writer;)V` @kind static;
  #L4ef07c.  v0:= new `java.io.BufferedWriter`;
  #L4ef080.  v1:= new `java.io.OutputStreamWriter`;
  #L4ef084.  v2:= new `java.io.FileOutputStream`;
  #L4ef088.  v3:= v6.`o0.a.c` @type ^`java.io.File` @kind object;
  #L4ef08c.  call `<init>`(v2, v3) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L4ef092.  v3:= `@@o0.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L4ef096.  call `<init>`(v1, v2, v3) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L4ef09c.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L4ef0a2.  v1:= "libcore.io.DiskLruCache" @kind object;
  #L4ef0a6.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef0ac.  v1:= "\n" @kind object;
  #L4ef0b0.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef0b6.  v1:= "1" @kind object;
  #L4ef0ba.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef0c0.  v1:= "\n" @kind object;
  #L4ef0c4.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef0ca.  v1:= v6.`o0.a.e` @type ^`int`;
  #L4ef0ce.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L4ef0d4.  v1:= temp @kind object;
  #L4ef0d6.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef0dc.  v1:= "\n" @kind object;
  #L4ef0e0.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef0e6.  v1:= v6.`o0.a.g` @type ^`int`;
  #L4ef0ea.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L4ef0f0.  v1:= temp @kind object;
  #L4ef0f2.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef0f8.  v1:= "\n" @kind object;
  #L4ef0fc.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef102.  v1:= "\n" @kind object;
  #L4ef106.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef10c.  v1:= v6.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4ef110.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4ef116.  v1:= temp @kind object;
  #L4ef118.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ef11e.  v1:= temp @kind object;
  #L4ef120.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ef126.  v2:= temp;
  #L4ef128.  if v2 == 0 then goto L4ef1c6;
  #L4ef12c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ef132.  v2:= temp @kind object;
  #L4ef134.  v2:= (`o0.a$d`) v2 @kind object;
  #L4ef138.  call temp:= `g`(v2) @signature `Lo0/a$d;.g:(Lo0/a$d;)Lo0/a$c;` @kind static;
  #L4ef13e.  v3:= temp @kind object;
  #L4ef140.  v4:= 10I;
  #L4ef144.  if v3 == 0 then goto L4ef180;
  #L4ef148.  v3:= new `java.lang.StringBuilder`;
  #L4ef14c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ef152.  v5:= "DIRTY " @kind object;
  #L4ef156.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef15c.  call temp:= `b`(v2) @signature `Lo0/a$d;.b:(Lo0/a$d;)Ljava/lang/String;` @kind static;
  #L4ef162.  v2:= temp @kind object;
  #L4ef164.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef16a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef170.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ef176.  v2:= temp @kind object;
  #L4ef178.  call `write`(v0, v2) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef17e.  goto L4ef120;
  #L4ef180.  v3:= new `java.lang.StringBuilder`;
  #L4ef184.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ef18a.  v5:= "CLEAN " @kind object;
  #L4ef18e.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef194.  call temp:= `b`(v2) @signature `Lo0/a$d;.b:(Lo0/a$d;)Ljava/lang/String;` @kind static;
  #L4ef19a.  v5:= temp @kind object;
  #L4ef19c.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef1a2.  call temp:= `l`(v2) @signature `Lo0/a$d;.l:()Ljava/lang/String;` @kind virtual;
  #L4ef1a8.  v2:= temp @kind object;
  #L4ef1aa.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef1b0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ef1b6.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ef1bc.  v2:= temp @kind object;
  #L4ef1be.  call `write`(v0, v2) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L4ef1c4.  goto L4ef120;
  #L4ef1c6.  call `X`(v0) @signature `Lo0/a;.X:(Ljava/io/Writer;)V` @kind static;
  #L4ef1cc.  v0:= v6.`o0.a.b` @type ^`java.io.File` @kind object;
  #L4ef1d0.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4ef1d6.  v0:= temp;
  #L4ef1d8.  v1:= 1I;
  #L4ef1da.  if v0 == 0 then goto L4ef1ec;
  #L4ef1de.  v0:= v6.`o0.a.b` @type ^`java.io.File` @kind object;
  #L4ef1e2.  v2:= v6.`o0.a.d` @type ^`java.io.File` @kind object;
  #L4ef1e6.  call `m0`(v0, v2, v1) @signature `Lo0/a;.m0:(Ljava/io/File;Ljava/io/File;Z)V` @kind static;
  #L4ef1ec.  v0:= v6.`o0.a.c` @type ^`java.io.File` @kind object;
  #L4ef1f0.  v2:= v6.`o0.a.b` @type ^`java.io.File` @kind object;
  #L4ef1f4.  v3:= 0I;
  #L4ef1f6.  call `m0`(v0, v2, v3) @signature `Lo0/a;.m0:(Ljava/io/File;Ljava/io/File;Z)V` @kind static;
  #L4ef1fc.  v0:= v6.`o0.a.d` @type ^`java.io.File` @kind object;
  #L4ef200.  call temp:= `delete`(v0) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L4ef206.  v0:= new `java.io.BufferedWriter`;
  #L4ef20a.  v2:= new `java.io.OutputStreamWriter`;
  #L4ef20e.  v3:= new `java.io.FileOutputStream`;
  #L4ef212.  v4:= v6.`o0.a.b` @type ^`java.io.File` @kind object;
  #L4ef216.  call `<init>`(v3, v4, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L4ef21c.  v1:= `@@o0.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L4ef220.  call `<init>`(v2, v3, v1) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L4ef226.  call `<init>`(v0, v2) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L4ef22c.  v6.`o0.a.i` @type ^`java.io.Writer` := v0 @kind object;
  #L4ef230.  @monitorexit v6
  #L4ef232.  return @kind void;
  #L4ef234.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ef236.  call `X`(v0) @signature `Lo0/a;.X:(Ljava/io/Writer;)V` @kind static;
  #L4ef23c.  throw v1;
  #L4ef23e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ef240.  @monitorexit v6
  #L4ef242.  throw v0;
  catch `java.lang.Throwable` @[L4ef06e..L4ef0a2] goto L4ef23e;
  catch `java.lang.Throwable` @[L4ef0a2..L4ef1c4] goto L4ef234;
  catch `java.lang.Throwable` @[L4ef1c6..L4ef230] goto L4ef23e;
  catch `java.lang.Throwable` @[L4ef236..L4ef23e] goto L4ef23e;
}
procedure `void` `m0`(`java.io.File` v0 @kind object, `java.io.File` v1 @kind object, `boolean` v2 ) @signature `Lo0/a;.m0:(Ljava/io/File;Ljava/io/File;Z)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4ef27c.  if v2 == 0 then goto L4ef286;
  #L4ef280.  call `a0`(v1) @signature `Lo0/a;.a0:(Ljava/io/File;)V` @kind static;
  #L4ef286.  call temp:= `renameTo`(v0, v1) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L4ef28c.  v0:= temp;
  #L4ef28e.  if v0 == 0 then goto L4ef294;
  #L4ef292.  return @kind void;
  #L4ef294.  v0:= new `java.io.IOException`;
  #L4ef298.  call `<init>`(v0) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L4ef29e.  throw v0;
}
procedure `void` `n0`(`o0.a` v5 @kind this) @signature `Lo0/a;.n0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ef2b0.  v0:= v5.`o0.a.h` @type ^`long` @kind wide;
  #L4ef2b4.  v2:= v5.`o0.a.f` @type ^`long` @kind wide;
  #L4ef2b8.  v4:= lcmp(v0, v2);
  #L4ef2bc.  if v4 <= 0 then goto L4ef2f4;
  #L4ef2c0.  v0:= v5.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4ef2c4.  call temp:= `entrySet`(v0) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L4ef2ca.  v0:= temp @kind object;
  #L4ef2cc.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ef2d2.  v0:= temp @kind object;
  #L4ef2d4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ef2da.  v0:= temp @kind object;
  #L4ef2dc.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L4ef2e0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4ef2e6.  v0:= temp @kind object;
  #L4ef2e8.  v0:= (`java.lang.String`) v0 @kind object;
  #L4ef2ec.  call temp:= `l0`(v5, v0) @signature `Lo0/a;.l0:(Ljava/lang/String;)Z` @kind virtual;
  #L4ef2f2.  goto L4ef2b0;
  #L4ef2f4.  return @kind void;
}
procedure `void` `s`(`o0.a` v0 @kind object) @signature `Lo0/a;.s:(Lo0/a;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ee7e4.  call `n0`(v0) @signature `Lo0/a;.n0:()V` @kind direct;
  #L4ee7ea.  return @kind void;
}
procedure `void` `Z`(`o0.a` v1 @kind this) @signature `Lo0/a;.Z:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eebbc.  call `close`(v1) @signature `Lo0/a;.close:()V` @kind virtual;
  #L4eebc2.  v0:= v1.`o0.a.a` @type ^`java.io.File` @kind object;
  #L4eebc6.  call `b`(v0) @signature `Lo0/c;.b:(Ljava/io/File;)V` @kind static;
  #L4eebcc.  return @kind void;
}
procedure `o0.a$c` `b0`(`o0.a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lo0/a;.b0:(Ljava/lang/String;)Lo0/a$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ee4ec.  v0:= -1L;
  #L4ee4f0.  call temp:= `c0`(v2, v3, v0) @signature `Lo0/a;.c0:(Ljava/lang/String;J)Lo0/a$c;` @kind direct;
  #L4ee4f6.  v3:= temp @kind object;
  #L4ee4f8.  return v3 @kind object;
}
procedure `void` `close`(`o0.a` v3 @kind this) @signature `Lo0/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ee858.  @monitorenter v3
  #L4ee85a.  v0:= v3.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee85e.  if v0 != 0 then goto L4ee866;
  #L4ee862.  @monitorexit v3
  #L4ee864.  return @kind void;
  #L4ee866.  v0:= new `java.util.ArrayList`;
  #L4ee86a.  v1:= v3.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4ee86e.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4ee874.  v1:= temp @kind object;
  #L4ee876.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4ee87c.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4ee882.  v0:= temp @kind object;
  #L4ee884.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ee88a.  v1:= temp;
  #L4ee88c.  if v1 == 0 then goto L4ee8b8;
  #L4ee890.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ee896.  v1:= temp @kind object;
  #L4ee898.  v1:= (`o0.a$d`) v1 @kind object;
  #L4ee89c.  call temp:= `g`(v1) @signature `Lo0/a$d;.g:(Lo0/a$d;)Lo0/a$c;` @kind static;
  #L4ee8a2.  v2:= temp @kind object;
  #L4ee8a4.  if v2 == 0 then goto L4ee884;
  #L4ee8a8.  call temp:= `g`(v1) @signature `Lo0/a$d;.g:(Lo0/a$d;)Lo0/a$c;` @kind static;
  #L4ee8ae.  v1:= temp @kind object;
  #L4ee8b0.  call `a`(v1) @signature `Lo0/a$c;.a:()V` @kind virtual;
  #L4ee8b6.  goto L4ee884;
  #L4ee8b8.  call `n0`(v3) @signature `Lo0/a;.n0:()V` @kind direct;
  #L4ee8be.  v0:= v3.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee8c2.  call `X`(v0) @signature `Lo0/a;.X:(Ljava/io/Writer;)V` @kind static;
  #L4ee8c8.  v0:= 0I;
  #L4ee8ca.  v3.`o0.a.i` @type ^`java.io.Writer` := v0 @kind object;
  #L4ee8ce.  @monitorexit v3
  #L4ee8d0.  return @kind void;
  #L4ee8d2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee8d4.  @monitorexit v3
  #L4ee8d6.  throw v0;
  catch `java.lang.Throwable` @[L4ee85a..L4ee85e] goto L4ee8d2;
  catch `java.lang.Throwable` @[L4ee866..L4ee8ce] goto L4ee8d2;
}
procedure `o0.a$e` `e0`(`o0.a` v9 @kind this, `java.lang.String` v10 @kind object) @signature `Lo0/a;.e0:(Ljava/lang/String;)Lo0/a$e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4ee5f8.  @monitorenter v9
  #L4ee5fa.  call `W`(v9) @signature `Lo0/a;.W:()V` @kind direct;
  #L4ee600.  v0:= v9.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4ee604.  call temp:= `get`(v0, v10) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ee60a.  v0:= temp @kind object;
  #L4ee60c.  v0:= (`o0.a$d`) v0 @kind object;
  #L4ee610.  v1:= 0I;
  #L4ee612.  if v0 != 0 then goto L4ee61a;
  #L4ee616.  @monitorexit v9
  #L4ee618.  return v1 @kind object;
  #L4ee61a.  call temp:= `e`(v0) @signature `Lo0/a$d;.e:(Lo0/a$d;)Z` @kind static;
  #L4ee620.  v2:= temp;
  #L4ee622.  if v2 != 0 then goto L4ee62a;
  #L4ee626.  @monitorexit v9
  #L4ee628.  return v1 @kind object;
  #L4ee62a.  v2:= v0.`o0.a$d.c` @type ^`java.io.File`[] @kind object;
  #L4ee62e.  v3:= length @variable v2;
  #L4ee630.  v4:= 0I;
  #L4ee632.  if v4 >= v3 then goto L4ee650;
  #L4ee636.  v5:= v2[v4] @kind object;
  #L4ee63a.  call temp:= `exists`(v5) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4ee640.  v5:= temp;
  #L4ee642.  if v5 != 0 then goto L4ee64a;
  #L4ee646.  @monitorexit v9
  #L4ee648.  return v1 @kind object;
  #L4ee64a.  v4:= v4 + 1;
  #L4ee64e.  goto L4ee632;
  #L4ee650.  v1:= v9.`o0.a.k` @type ^`int`;
  #L4ee654.  v1:= v1 + 1;
  #L4ee658.  v9.`o0.a.k` @type ^`int` := v1;
  #L4ee65c.  v1:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee660.  v2:= "READ" @kind object;
  #L4ee664.  call temp:= `append`(v1, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4ee66a.  v1:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee66e.  v2:= 32I;
  #L4ee672.  call temp:= `append`(v1, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4ee678.  v1:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee67c.  call temp:= `append`(v1, v10) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4ee682.  v1:= v9.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee686.  v2:= 10I;
  #L4ee68a.  call temp:= `append`(v1, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4ee690.  call temp:= `f0`(v9) @signature `Lo0/a;.f0:()Z` @kind direct;
  #L4ee696.  v1:= temp;
  #L4ee698.  if v1 == 0 then goto L4ee6aa;
  #L4ee69c.  v1:= v9.`o0.a.m` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L4ee6a0.  v2:= v9.`o0.a.n` @type ^`java.util.concurrent.Callable` @kind object;
  #L4ee6a4.  call temp:= `submit`(v1, v2) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L4ee6aa.  v8:= new `o0.a$e`;
  #L4ee6ae.  call temp:= `c`(v0) @signature `Lo0/a$d;.c:(Lo0/a$d;)J` @kind static;
  #L4ee6b4.  v3:= temp @kind wide;
  #L4ee6b6.  v5:= v0.`o0.a$d.c` @type ^`java.io.File`[] @kind object;
  #L4ee6ba.  call temp:= `a`(v0) @signature `Lo0/a$d;.a:(Lo0/a$d;)[J` @kind static;
  #L4ee6c0.  v6:= temp @kind object;
  #L4ee6c2.  v7:= 0I;
  #L4ee6c4.  v0:= v8 @kind object;
  #L4ee6c6.  v1:= v9 @kind object;
  #L4ee6c8.  v2:= v10 @kind object;
  #L4ee6ca.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Lo0/a$e;.<init>:(Lo0/a;Ljava/lang/String;J[Ljava/io/File;[JLo0/a$a;)V` @kind direct;
  #L4ee6d0.  @monitorexit v9
  #L4ee6d2.  return v8 @kind object;
  #L4ee6d4.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee6d6.  @monitorexit v9
  #L4ee6d8.  throw v10;
  catch `java.lang.Throwable` @[L4ee5fa..L4ee610] goto L4ee6d4;
  catch `java.lang.Throwable` @[L4ee61a..L4ee622] goto L4ee6d4;
  catch `java.lang.Throwable` @[L4ee62a..L4ee642] goto L4ee6d4;
  catch `java.lang.Throwable` @[L4ee650..L4ee6d0] goto L4ee6d4;
}
procedure `boolean` `l0`(`o0.a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lo0/a;.l0:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4ee20c.  @monitorenter v7
  #L4ee20e.  call `W`(v7) @signature `Lo0/a;.W:()V` @kind direct;
  #L4ee214.  v0:= v7.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4ee218.  call temp:= `get`(v0, v8) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ee21e.  v0:= temp @kind object;
  #L4ee220.  v0:= (`o0.a$d`) v0 @kind object;
  #L4ee224.  v1:= 0I;
  #L4ee226.  if v0 == 0 then goto L4ee326;
  #L4ee22a.  call temp:= `g`(v0) @signature `Lo0/a$d;.g:(Lo0/a$d;)Lo0/a$c;` @kind static;
  #L4ee230.  v2:= temp @kind object;
  #L4ee232.  if v2 == 0 then goto L4ee23a;
  #L4ee236.  goto L4ee326;
  #L4ee23a.  v2:= v7.`o0.a.g` @type ^`int`;
  #L4ee23e.  if v1 >= v2 then goto L4ee2be;
  #L4ee242.  call temp:= `j`(v0, v1) @signature `Lo0/a$d;.j:(I)Ljava/io/File;` @kind virtual;
  #L4ee248.  v2:= temp @kind object;
  #L4ee24a.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4ee250.  v3:= temp;
  #L4ee252.  if v3 == 0 then goto L4ee292;
  #L4ee256.  call temp:= `delete`(v2) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L4ee25c.  v3:= temp;
  #L4ee25e.  if v3 == 0 then goto L4ee264;
  #L4ee262.  goto L4ee292;
  #L4ee264.  v8:= new `java.io.IOException`;
  #L4ee268.  v0:= new `java.lang.StringBuilder`;
  #L4ee26c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ee272.  v1:= "failed to delete " @kind object;
  #L4ee276.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee27c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee282.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ee288.  v0:= temp @kind object;
  #L4ee28a.  call `<init>`(v8, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ee290.  throw v8;
  #L4ee292.  v2:= v7.`o0.a.h` @type ^`long` @kind wide;
  #L4ee296.  call temp:= `a`(v0) @signature `Lo0/a$d;.a:(Lo0/a$d;)[J` @kind static;
  #L4ee29c.  v4:= temp @kind object;
  #L4ee29e.  v5:= v4[v1] @kind wide;
  #L4ee2a2.  v2:= v2 - v5 @kind long;
  #L4ee2a4.  v7.`o0.a.h` @type ^`long` := v2 @kind wide;
  #L4ee2a8.  call temp:= `a`(v0) @signature `Lo0/a$d;.a:(Lo0/a$d;)[J` @kind static;
  #L4ee2ae.  v2:= temp @kind object;
  #L4ee2b0.  v3:= 0L;
  #L4ee2b4.  v2[v1]:= v3 @kind wide;
  #L4ee2b8.  v1:= v1 + 1;
  #L4ee2bc.  goto L4ee23a;
  #L4ee2be.  v0:= v7.`o0.a.k` @type ^`int`;
  #L4ee2c2.  v1:= 1I;
  #L4ee2c4.  v0:= v0 + v1 @kind int;
  #L4ee2c6.  v7.`o0.a.k` @type ^`int` := v0;
  #L4ee2ca.  v0:= v7.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee2ce.  v2:= "REMOVE" @kind object;
  #L4ee2d2.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4ee2d8.  v0:= v7.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee2dc.  v2:= 32I;
  #L4ee2e0.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4ee2e6.  v0:= v7.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee2ea.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L4ee2f0.  v0:= v7.`o0.a.i` @type ^`java.io.Writer` @kind object;
  #L4ee2f4.  v2:= 10I;
  #L4ee2f8.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L4ee2fe.  v0:= v7.`o0.a.j` @type ^`java.util.LinkedHashMap` @kind object;
  #L4ee302.  call temp:= `remove`(v0, v8) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ee308.  call temp:= `f0`(v7) @signature `Lo0/a;.f0:()Z` @kind direct;
  #L4ee30e.  v8:= temp;
  #L4ee310.  if v8 == 0 then goto L4ee322;
  #L4ee314.  v8:= v7.`o0.a.m` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L4ee318.  v0:= v7.`o0.a.n` @type ^`java.util.concurrent.Callable` @kind object;
  #L4ee31c.  call temp:= `submit`(v8, v0) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L4ee322.  @monitorexit v7
  #L4ee324.  return v1;
  #L4ee326.  @monitorexit v7
  #L4ee328.  return v1;
  #L4ee32a.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee32c.  @monitorexit v7
  #L4ee32e.  throw v8;
  catch `java.lang.Throwable` @[L4ee20e..L4ee322] goto L4ee32a;
}
