record `o0.a$d` @kind class @AccessFlag FINAL {
  `java.lang.String` `o0.a$d.a` @AccessFlag PRIVATE_FINAL;
  `long`[] `o0.a$d.b` @AccessFlag PRIVATE_FINAL;
  `java.io.File`[] `o0.a$d.c` @AccessFlag ;
  `java.io.File`[] `o0.a$d.d` @AccessFlag ;
  `boolean` `o0.a$d.e` @AccessFlag PRIVATE;
  `o0.a$c` `o0.a$d.f` @AccessFlag PRIVATE;
  `long` `o0.a$d.g` @AccessFlag PRIVATE;
  `o0.a` `o0.a$d.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`o0.a$d` v6 @kind this, `o0.a` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lo0/a$d;.<init>:(Lo0/a;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4edfe4.  v6.`o0.a$d.h` @type ^`o0.a` := v7 @kind object;
  #L4edfe8.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4edfee.  v6.`o0.a$d.a` @type ^`java.lang.String` := v8 @kind object;
  #L4edff2.  call temp:= `h`(v7) @signature `Lo0/a;.h:(Lo0/a;)I` @kind static;
  #L4edff8.  v0:= temp;
  #L4edffa.  v0:= new `long`[v0];
  #L4edffe.  v6.`o0.a$d.b` @type ^`long`[] := v0 @kind object;
  #L4ee002.  call temp:= `h`(v7) @signature `Lo0/a;.h:(Lo0/a;)I` @kind static;
  #L4ee008.  v0:= temp;
  #L4ee00a.  v0:= new `java.io.File`[v0];
  #L4ee00e.  v6.`o0.a$d.c` @type ^`java.io.File`[] := v0 @kind object;
  #L4ee012.  call temp:= `h`(v7) @signature `Lo0/a;.h:(Lo0/a;)I` @kind static;
  #L4ee018.  v0:= temp;
  #L4ee01a.  v0:= new `java.io.File`[v0];
  #L4ee01e.  v6.`o0.a$d.d` @type ^`java.io.File`[] := v0 @kind object;
  #L4ee022.  v0:= new `java.lang.StringBuilder`;
  #L4ee026.  call `<init>`(v0, v8) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ee02c.  v8:= 46I;
  #L4ee030.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee036.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L4ee03c.  v8:= temp;
  #L4ee03e.  v1:= 0I;
  #L4ee040.  call temp:= `h`(v7) @signature `Lo0/a;.h:(Lo0/a;)I` @kind static;
  #L4ee046.  v2:= temp;
  #L4ee048.  if v1 >= v2 then goto L4ee0ac;
  #L4ee04c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee052.  v2:= v6.`o0.a$d.c` @type ^`java.io.File`[] @kind object;
  #L4ee056.  v3:= new `java.io.File`;
  #L4ee05a.  call temp:= `K`(v7) @signature `Lo0/a;.K:(Lo0/a;)Ljava/io/File;` @kind static;
  #L4ee060.  v4:= temp @kind object;
  #L4ee062.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ee068.  v5:= temp @kind object;
  #L4ee06a.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4ee070.  v2[v1]:= v3 @kind object;
  #L4ee074.  v2:= ".tmp" @kind object;
  #L4ee078.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ee07e.  v2:= v6.`o0.a$d.d` @type ^`java.io.File`[] @kind object;
  #L4ee082.  v3:= new `java.io.File`;
  #L4ee086.  call temp:= `K`(v7) @signature `Lo0/a;.K:(Lo0/a;)Ljava/io/File;` @kind static;
  #L4ee08c.  v4:= temp @kind object;
  #L4ee08e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ee094.  v5:= temp @kind object;
  #L4ee096.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4ee09c.  v2[v1]:= v3 @kind object;
  #L4ee0a0.  call `setLength`(v0, v8) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L4ee0a6.  v1:= v1 + 1;
  #L4ee0aa.  goto L4ee040;
  #L4ee0ac.  return @kind void;
}
procedure `void` `<init>`(`o0.a$d` v0 @kind this, `o0.a` v1 @kind object, `java.lang.String` v2 @kind object, `o0.a$a` v3 @kind object) @signature `Lo0/a$d;.<init>:(Lo0/a;Ljava/lang/String;Lo0/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4ee0c0.  call `<init>`(v0, v1, v2) @signature `Lo0/a$d;.<init>:(Lo0/a;Ljava/lang/String;)V` @kind direct;
  #L4ee0c6.  return @kind void;
}
procedure `long`[] `a`(`o0.a$d` v0 @kind object) @signature `Lo0/a$d;.a:(Lo0/a$d;)[J` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4edf9c.  v0:= v0.`o0.a$d.b` @type ^`long`[] @kind object;
  #L4edfa0.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`o0.a$d` v0 @kind object) @signature `Lo0/a$d;.b:(Lo0/a$d;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4edf08.  v0:= v0.`o0.a$d.a` @type ^`java.lang.String` @kind object;
  #L4edf0c.  return v0 @kind object;
}
procedure `long` `c`(`o0.a$d` v2 @kind object) @signature `Lo0/a$d;.c:(Lo0/a$d;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4edf6c.  v0:= v2.`o0.a$d.g` @type ^`long` @kind wide;
  #L4edf70.  return v0 @kind wide;
}
procedure `long` `d`(`o0.a$d` v0 @kind object, `long` v1 ) @signature `Lo0/a$d;.d:(Lo0/a$d;J)J` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4edf84.  v0.`o0.a$d.g` @type ^`long` := v1 @kind wide;
  #L4edf88.  return v1 @kind wide;
}
procedure `boolean` `e`(`o0.a$d` v0 @kind object) @signature `Lo0/a$d;.e:(Lo0/a$d;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ede58.  v0:= v0.`o0.a$d.e` @type ^`boolean` @kind boolean;
  #L4ede5c.  return v0;
}
procedure `boolean` `f`(`o0.a$d` v0 @kind object, `boolean` v1 ) @signature `Lo0/a$d;.f:(Lo0/a$d;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ede70.  v0.`o0.a$d.e` @type ^`boolean` := v1 @kind boolean;
  #L4ede74.  return v1;
}
procedure `o0.a$c` `g`(`o0.a$d` v0 @kind object) @signature `Lo0/a$d;.g:(Lo0/a$d;)Lo0/a$c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4edfb4.  v0:= v0.`o0.a$d.f` @type ^`o0.a$c` @kind object;
  #L4edfb8.  return v0 @kind object;
}
procedure `o0.a$c` `h`(`o0.a$d` v0 @kind object, `o0.a$c` v1 @kind object) @signature `Lo0/a$d;.h:(Lo0/a$d;Lo0/a$c;)Lo0/a$c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4edfcc.  v0.`o0.a$d.f` @type ^`o0.a$c` := v1 @kind object;
  #L4edfd0.  return v1 @kind object;
}
procedure `void` `i`(`o0.a$d` v0 @kind object, `java.lang.String`[] v1 @kind object) @signature `Lo0/a$d;.i:(Lo0/a$d;[Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ee0d8.  call `n`(v0, v1) @signature `Lo0/a$d;.n:([Ljava/lang/String;)V` @kind direct;
  #L4ee0de.  return @kind void;
}
procedure `java.io.IOException` `m`(`o0.a$d` v3 @kind this, `java.lang.String`[] v4 @kind object) @signature `Lo0/a$d;.m:([Ljava/lang/String;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4edec0.  v0:= new `java.io.IOException`;
  #L4edec4.  v1:= new `java.lang.StringBuilder`;
  #L4edec8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4edece.  v2:= "unexpected journal line: " @kind object;
  #L4eded2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eded8.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4edede.  v4:= temp @kind object;
  #L4edee0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4edee6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4edeec.  v4:= temp @kind object;
  #L4edeee.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4edef4.  throw v0;
}
procedure `void` `n`(`o0.a$d` v4 @kind this, `java.lang.String`[] v5 @kind object) @signature `Lo0/a$d;.n:([Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ee0f0.  v0:= length @variable v5;
  #L4ee0f2.  v1:= v4.`o0.a$d.h` @type ^`o0.a` @kind object;
  #L4ee0f6.  call temp:= `h`(v1) @signature `Lo0/a;.h:(Lo0/a;)I` @kind static;
  #L4ee0fc.  v1:= temp;
  #L4ee0fe.  if v0 != v1 then goto L4ee130;
  #L4ee102.  v0:= 0I;
  #L4ee104.  v1:= length @variable v5;
  #L4ee106.  if v0 >= v1 then goto L4ee124;
  #L4ee10a.  v1:= v4.`o0.a$d.b` @type ^`long`[] @kind object;
  #L4ee10e.  v2:= v5[v0] @kind object;
  #L4ee112.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L4ee118.  v2:= temp @kind wide;
  #L4ee11a.  v1[v0]:= v2 @kind wide;
  #L4ee11e.  v0:= v0 + 1;
  #L4ee122.  goto L4ee104;
  #L4ee124.  return @kind void;
  #L4ee126.  call temp:= `m`(v4, v5) @signature `Lo0/a$d;.m:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L4ee12c.  v5:= temp @kind object;
  #L4ee12e.  throw v5;
  #L4ee130.  call temp:= `m`(v4, v5) @signature `Lo0/a$d;.m:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L4ee136.  v5:= temp @kind object;
  #L4ee138.  throw v5;
  catch `java.lang.NumberFormatException` @[L4ee104..L4ee11e] goto L4ee126;
}
procedure `java.io.File` `j`(`o0.a$d` v1 @kind this, `int` v2 ) @signature `Lo0/a$d;.j:(I)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ede88.  v0:= v1.`o0.a$d.c` @type ^`java.io.File`[] @kind object;
  #L4ede8c.  v2:= v0[v2] @kind object;
  #L4ede90.  return v2 @kind object;
}
procedure `java.io.File` `k`(`o0.a$d` v1 @kind this, `int` v2 ) @signature `Lo0/a$d;.k:(I)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4edea4.  v0:= v1.`o0.a$d.d` @type ^`java.io.File`[] @kind object;
  #L4edea8.  v2:= v0[v2] @kind object;
  #L4edeac.  return v2 @kind object;
}
procedure `java.lang.String` `l`(`o0.a$d` v7 @kind this) @signature `Lo0/a$d;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4edf20.  v0:= new `java.lang.StringBuilder`;
  #L4edf24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4edf2a.  v1:= v7.`o0.a$d.b` @type ^`long`[] @kind object;
  #L4edf2e.  v2:= length @variable v1;
  #L4edf30.  v3:= 0I;
  #L4edf32.  if v3 >= v2 then goto L4edf50;
  #L4edf36.  v4:= v1[v3] @kind wide;
  #L4edf3a.  v6:= 32I;
  #L4edf3e.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4edf44.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4edf4a.  v3:= v3 + 1;
  #L4edf4e.  goto L4edf32;
  #L4edf50.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4edf56.  v0:= temp @kind object;
  #L4edf58.  return v0 @kind object;
}
