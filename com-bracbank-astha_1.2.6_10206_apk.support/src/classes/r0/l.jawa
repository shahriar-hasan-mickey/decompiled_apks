record `r0.l` @kind class @AccessFlag PUBLIC_ABSTRACT extends `r0.d` @kind interface {
  `android.net.Uri` `r0.l.a` @AccessFlag PRIVATE_FINAL;
  `android.content.ContentResolver` `r0.l.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `r0.l.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`r0.l` v0 @kind this, `android.content.ContentResolver` v1 @kind object, `android.net.Uri` v2 @kind object) @signature `Lr0/l;.<init>:(Landroid/content/ContentResolver;Landroid/net/Uri;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f9b80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f9b86.  v0.`r0.l.b` @type ^`android.content.ContentResolver` := v1 @kind object;
  #L4f9b8a.  v0.`r0.l.a` @type ^`android.net.Uri` := v2 @kind object;
  #L4f9b8e.  return @kind void;
}
procedure `void` `b`(`r0.l` v1 @kind this) @signature `Lr0/l;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9bb4.  v0:= v1.`r0.l.c` @type ^`java.lang.Object` @kind object;
  #L4f9bb8.  if v0 == 0 then goto L4f9bc2;
  #L4f9bbc.  call `c`(v1, v0) @signature `Lr0/l;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L4f9bc2.  return @kind void;
  catch `java.io.IOException` @[L4f9bbc..L4f9bc2] goto L4f9bc2;
}
procedure `void` `c`(`java.lang.Object` v0 @kind object) @signature `Lr0/l;.c:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `cancel`(`r0.l` v0 @kind this) @signature `Lr0/l;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L4f9ba0.  return @kind void;
}
procedure `com.bumptech.glide.load.DataSource` `d`(`r0.l` v1 @kind this) @signature `Lr0/l;.d:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9b68.  v0:= `@@com.bumptech.glide.load.DataSource.a` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4f9b6c.  return v0 @kind object;
}
procedure `void` `e`(`r0.l` v2 @kind this, `com.bumptech.glide.Priority` v3 @kind object, `r0.d$a` v4 @kind object) @signature `Lr0/l;.e:(Lcom/bumptech/glide/Priority;Lr0/d$a;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4f9be4.  v3:= v2.`r0.l.a` @type ^`android.net.Uri` @kind object;
  #L4f9be8.  v0:= v2.`r0.l.b` @type ^`android.content.ContentResolver` @kind object;
  #L4f9bec.  call temp:= `f`(v2, v3, v0) @signature `Lr0/l;.f:(Landroid/net/Uri;Landroid/content/ContentResolver;)Ljava/lang/Object;` @kind virtual;
  #L4f9bf2.  v3:= temp @kind object;
  #L4f9bf4.  v2.`r0.l.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4f9bf8.  call `f`(v4, v3) @signature `Lr0/d$a;.f:(Ljava/lang/Object;)V` @kind interface;
  #L4f9bfe.  return @kind void;
  #L4f9c00.  v3:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L4f9c02.  v0:= 3I;
  #L4f9c04.  v1:= "LocalUriFetcher" @kind object;
  #L4f9c08.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4f9c0e.  call `c`(v4, v3) @signature `Lr0/d$a;.c:(Ljava/lang/Exception;)V` @kind interface;
  #L4f9c14.  return @kind void;
  catch `java.io.FileNotFoundException` @[L4f9be4..L4f9bf8] goto L4f9c00;
}
procedure `java.lang.Object` `f`(`android.net.Uri` v0 @kind object, `android.content.ContentResolver` v1 @kind object) @signature `Lr0/l;.f:(Landroid/net/Uri;Landroid/content/ContentResolver;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
