record `r0.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `r0.d` @kind interface {
  `java.lang.String` `r0.b.a` @AccessFlag PRIVATE_FINAL;
  `android.content.res.AssetManager` `r0.b.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `r0.b.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`r0.b` v0 @kind this, `android.content.res.AssetManager` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lr0/b;.<init>:(Landroid/content/res/AssetManager;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f8d84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f8d8a.  v0.`r0.b.b` @type ^`android.content.res.AssetManager` := v1 @kind object;
  #L4f8d8e.  v0.`r0.b.a` @type ^`java.lang.String` := v2 @kind object;
  #L4f8d92.  return @kind void;
}
procedure `void` `b`(`r0.b` v1 @kind this) @signature `Lr0/b;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f8db8.  v0:= v1.`r0.b.c` @type ^`java.lang.Object` @kind object;
  #L4f8dbc.  if v0 != 0 then goto L4f8dc2;
  #L4f8dc0.  return @kind void;
  #L4f8dc2.  call `c`(v1, v0) @signature `Lr0/b;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L4f8dc8.  return @kind void;
  catch `java.io.IOException` @[L4f8dc2..L4f8dc8] goto L4f8dc8;
}
procedure `void` `c`(`java.lang.Object` v0 @kind object) @signature `Lr0/b;.c:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `cancel`(`r0.b` v0 @kind this) @signature `Lr0/b;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L4f8da4.  return @kind void;
}
procedure `com.bumptech.glide.load.DataSource` `d`(`r0.b` v1 @kind this) @signature `Lr0/b;.d:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f8d6c.  v0:= `@@com.bumptech.glide.load.DataSource.a` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4f8d70.  return v0 @kind object;
}
procedure `void` `e`(`r0.b` v2 @kind this, `com.bumptech.glide.Priority` v3 @kind object, `r0.d$a` v4 @kind object) @signature `Lr0/b;.e:(Lcom/bumptech/glide/Priority;Lr0/d$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f8dec.  v3:= v2.`r0.b.b` @type ^`android.content.res.AssetManager` @kind object;
  #L4f8df0.  v0:= v2.`r0.b.a` @type ^`java.lang.String` @kind object;
  #L4f8df4.  call temp:= `f`(v2, v3, v0) @signature `Lr0/b;.f:(Landroid/content/res/AssetManager;Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L4f8dfa.  v3:= temp @kind object;
  #L4f8dfc.  v2.`r0.b.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4f8e00.  call `f`(v4, v3) @signature `Lr0/d$a;.f:(Ljava/lang/Object;)V` @kind interface;
  #L4f8e06.  return @kind void;
  #L4f8e08.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L4f8e0a.  v0:= 3I;
  #L4f8e0c.  v1:= "AssetPathFetcher" @kind object;
  #L4f8e10.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4f8e16.  call `c`(v4, v3) @signature `Lr0/d$a;.c:(Ljava/lang/Exception;)V` @kind interface;
  #L4f8e1c.  return @kind void;
  catch `java.io.IOException` @[L4f8dec..L4f8e00] goto L4f8e08;
}
procedure `java.lang.Object` `f`(`android.content.res.AssetManager` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lr0/b;.f:(Landroid/content/res/AssetManager;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
