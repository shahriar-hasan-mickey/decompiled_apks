record `r0.f` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `r0.f.a` @AccessFlag PRIVATE_FINAL;
}
global `r0.e$a` `@@r0.f.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr0/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f9178.  v0:= new `r0.f$a`;
  #L4f917c.  call `<init>`(v0) @signature `Lr0/f$a;.<init>:()V` @kind direct;
  #L4f9182.  `@@r0.f.b` @type ^`r0.e$a` := v0 @kind object;
  #L4f9186.  return @kind void;
}
procedure `void` `<init>`(`r0.f` v1 @kind this) @signature `Lr0/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f9198.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f919e.  v0:= new `java.util.HashMap`;
  #L4f91a2.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4f91a8.  v1.`r0.f.a` @type ^`java.util.Map` := v0 @kind object;
  #L4f91ac.  return @kind void;
}
procedure `r0.e` `a`(`r0.f` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lr0/f;.a:(Ljava/lang/Object;)Lr0/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f90d4.  @monitorenter v5
  #L4f90d6.  call temp:= `d`(v6) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4f90dc.  v0:= v5.`r0.f.a` @type ^`java.util.Map` @kind object;
  #L4f90e0.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4f90e6.  v1:= temp @kind object;
  #L4f90e8.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f90ee.  v0:= temp @kind object;
  #L4f90f0.  v0:= (`r0.e$a`) v0 @kind object;
  #L4f90f4.  if v0 != 0 then goto L4f9142;
  #L4f90f8.  v1:= v5.`r0.f.a` @type ^`java.util.Map` @kind object;
  #L4f90fc.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L4f9102.  v1:= temp @kind object;
  #L4f9104.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4f910a.  v1:= temp @kind object;
  #L4f910c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4f9112.  v2:= temp;
  #L4f9114.  if v2 == 0 then goto L4f9142;
  #L4f9118.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4f911e.  v2:= temp @kind object;
  #L4f9120.  v2:= (`r0.e$a`) v2 @kind object;
  #L4f9124.  call temp:= `a`(v2) @signature `Lr0/e$a;.a:()Ljava/lang/Class;` @kind interface;
  #L4f912a.  v3:= temp @kind object;
  #L4f912c.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4f9132.  v4:= temp @kind object;
  #L4f9134.  call temp:= `isAssignableFrom`(v3, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L4f913a.  v3:= temp;
  #L4f913c.  if v3 == 0 then goto L4f910c;
  #L4f9140.  v0:= v2 @kind object;
  #L4f9142.  if v0 != 0 then goto L4f914a;
  #L4f9146.  v0:= `@@r0.f.b` @type ^`r0.e$a` @kind object;
  #L4f914a.  call temp:= `b`(v0, v6) @signature `Lr0/e$a;.b:(Ljava/lang/Object;)Lr0/e;` @kind interface;
  #L4f9150.  v6:= temp @kind object;
  #L4f9152.  @monitorexit v5
  #L4f9154.  return v6 @kind object;
  #L4f9156.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9158.  @monitorexit v5
  #L4f915a.  throw v6;
  catch `java.lang.Throwable` @[L4f90d6..L4f9152] goto L4f9156;
}
procedure `void` `b`(`r0.f` v2 @kind this, `r0.e$a` v3 @kind object) @signature `Lr0/f;.b:(Lr0/e$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f91c0.  @monitorenter v2
  #L4f91c2.  v0:= v2.`r0.f.a` @type ^`java.util.Map` @kind object;
  #L4f91c6.  call temp:= `a`(v3) @signature `Lr0/e$a;.a:()Ljava/lang/Class;` @kind interface;
  #L4f91cc.  v1:= temp @kind object;
  #L4f91ce.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f91d4.  @monitorexit v2
  #L4f91d6.  return @kind void;
  #L4f91d8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f91da.  @monitorexit v2
  #L4f91dc.  throw v3;
  catch `java.lang.Throwable` @[L4f91c2..L4f91d4] goto L4f91d8;
}
