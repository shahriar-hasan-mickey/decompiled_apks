record `r0.k$a` @kind class @AccessFlag PUBLIC_FINAL extends `r0.e$a` @kind interface {
  `u0.b` `r0.k$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r0.k$a` v0 @kind this, `u0.b` v1 @kind object) @signature `Lr0/k$a;.<init>:(Lu0/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f9aa8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f9aae.  v0.`r0.k$a.a` @type ^`u0.b` := v1 @kind object;
  #L4f9ab2.  return @kind void;
}
procedure `java.lang.Class` `a`(`r0.k$a` v1 @kind this) @signature `Lr0/k$a;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9a50.  v0:= constclass @type ^`java.io.InputStream` @kind object;
  #L4f9a54.  return v0 @kind object;
}
procedure `r0.e` `b`(`r0.k$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lr0/k$a;.b:(Ljava/lang/Object;)Lr0/e;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4f9a88.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L4f9a8c.  call temp:= `c`(v0, v1) @signature `Lr0/k$a;.c:(Ljava/io/InputStream;)Lr0/e;` @kind virtual;
  #L4f9a92.  v1:= temp @kind object;
  #L4f9a94.  return v1 @kind object;
}
procedure `r0.e` `c`(`r0.k$a` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lr0/k$a;.c:(Ljava/io/InputStream;)Lr0/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f9a68.  v0:= new `r0.k`;
  #L4f9a6c.  v1:= v2.`r0.k$a.a` @type ^`u0.b` @kind object;
  #L4f9a70.  call `<init>`(v0, v3, v1) @signature `Lr0/k;.<init>:(Ljava/io/InputStream;Lu0/b;)V` @kind direct;
  #L4f9a76.  return v0 @kind object;
}
