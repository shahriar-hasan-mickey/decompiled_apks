record `j.b$c` @kind class @AccessFlag  extends `java.util.Map$Entry` @kind interface {
  `java.lang.Object` `j.b$c.a` @AccessFlag FINAL;
  `java.lang.Object` `j.b$c.b` @AccessFlag FINAL;
  `j.b$c` `j.b$c.c` @AccessFlag ;
  `j.b$c` `j.b$c.d` @AccessFlag ;
}
procedure `void` `<init>`(`j.b$c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lj/b$c;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4eb38c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4eb392.  v0.`j.b$c.a` @type ^`java.lang.Object` := v1 @kind object;
  #L4eb396.  v0.`j.b$c.b` @type ^`java.lang.Object` := v2 @kind object;
  #L4eb39a.  return @kind void;
}
procedure `boolean` `equals`(`j.b$c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lj/b$c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4eb274.  v0:= 1I;
  #L4eb276.  if v5 != v4 then goto L4eb27c;
  #L4eb27a.  return v0;
  #L4eb27c.  v1:= instanceof @variable v5 @type ^`j.b$c` @kind boolean;
  #L4eb280.  v2:= 0I;
  #L4eb282.  if v1 != 0 then goto L4eb288;
  #L4eb286.  return v2;
  #L4eb288.  v5:= (`j.b$c`) v5 @kind object;
  #L4eb28c.  v1:= v4.`j.b$c.a` @type ^`java.lang.Object` @kind object;
  #L4eb290.  v3:= v5.`j.b$c.a` @type ^`java.lang.Object` @kind object;
  #L4eb294.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eb29a.  v1:= temp;
  #L4eb29c.  if v1 == 0 then goto L4eb2b6;
  #L4eb2a0.  v1:= v4.`j.b$c.b` @type ^`java.lang.Object` @kind object;
  #L4eb2a4.  v5:= v5.`j.b$c.b` @type ^`java.lang.Object` @kind object;
  #L4eb2a8.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eb2ae.  v5:= temp;
  #L4eb2b0.  if v5 == 0 then goto L4eb2b6;
  #L4eb2b4.  goto L4eb2b8;
  #L4eb2b6.  v0:= 0I;
  #L4eb2b8.  return v0;
}
procedure `java.lang.Object` `getKey`(`j.b$c` v1 @kind this) @signature `Lj/b$c;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eb2f8.  v0:= v1.`j.b$c.a` @type ^`java.lang.Object` @kind object;
  #L4eb2fc.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`j.b$c` v1 @kind this) @signature `Lj/b$c;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eb310.  v0:= v1.`j.b$c.b` @type ^`java.lang.Object` @kind object;
  #L4eb314.  return v0 @kind object;
}
procedure `int` `hashCode`(`j.b$c` v2 @kind this) @signature `Lj/b$c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eb2cc.  v0:= v2.`j.b$c.a` @type ^`java.lang.Object` @kind object;
  #L4eb2d0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4eb2d6.  v0:= temp;
  #L4eb2d8.  v1:= v2.`j.b$c.b` @type ^`java.lang.Object` @kind object;
  #L4eb2dc.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4eb2e2.  v1:= temp;
  #L4eb2e4.  v0:= v0 ^~ v1 @kind int;
  #L4eb2e6.  return v0;
}
procedure `java.lang.Object` `setValue`(`j.b$c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lj/b$c;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eb328.  v2:= new `java.lang.UnsupportedOperationException`;
  #L4eb32c.  v0:= "An entry modification is not supported" @kind object;
  #L4eb330.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4eb336.  throw v2;
}
procedure `java.lang.String` `toString`(`j.b$c` v2 @kind this) @signature `Lj/b$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eb348.  v0:= new `java.lang.StringBuilder`;
  #L4eb34c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4eb352.  v1:= v2.`j.b$c.a` @type ^`java.lang.Object` @kind object;
  #L4eb356.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eb35c.  v1:= "=" @kind object;
  #L4eb360.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eb366.  v1:= v2.`j.b$c.b` @type ^`java.lang.Object` @kind object;
  #L4eb36a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4eb370.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4eb376.  v0:= temp @kind object;
  #L4eb378.  return v0 @kind object;
}
