record `v0.c` @kind class @AccessFlag FINAL {
  `java.util.Map` `v0.c.a` @AccessFlag PRIVATE_FINAL;
  `v0.c$b` `v0.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v0.c` v1 @kind this) @signature `Lv0/c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4fe5b4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe5ba.  v0:= new `java.util.HashMap`;
  #L4fe5be.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4fe5c4.  v1.`v0.c.a` @type ^`java.util.Map` := v0 @kind object;
  #L4fe5c8.  v0:= new `v0.c$b`;
  #L4fe5cc.  call `<init>`(v0) @signature `Lv0/c$b;.<init>:()V` @kind direct;
  #L4fe5d2.  v1.`v0.c.b` @type ^`v0.c$b` := v0 @kind object;
  #L4fe5d6.  return @kind void;
}
procedure `void` `a`(`v0.c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lv0/c;.a:(Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4fe5e8.  @monitorenter v2
  #L4fe5ea.  v0:= v2.`v0.c.a` @type ^`java.util.Map` @kind object;
  #L4fe5ee.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fe5f4.  v0:= temp @kind object;
  #L4fe5f6.  v0:= (`v0.c$a`) v0 @kind object;
  #L4fe5fa.  if v0 != 0 then goto L4fe614;
  #L4fe5fe.  v0:= v2.`v0.c.b` @type ^`v0.c$b` @kind object;
  #L4fe602.  call temp:= `a`(v0) @signature `Lv0/c$b;.a:()Lv0/c$a;` @kind virtual;
  #L4fe608.  v0:= temp @kind object;
  #L4fe60a.  v1:= v2.`v0.c.a` @type ^`java.util.Map` @kind object;
  #L4fe60e.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fe614.  v3:= v0.`v0.c$a.b` @type ^`int`;
  #L4fe618.  v3:= v3 + 1;
  #L4fe61c.  v0.`v0.c$a.b` @type ^`int` := v3;
  #L4fe620.  @monitorexit v2
  #L4fe622.  v3:= v0.`v0.c$a.a` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L4fe626.  call `lock`(v3) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L4fe62c.  return @kind void;
  #L4fe62e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fe630.  @monitorexit v2
  #L4fe632.  throw v3;
  catch `java.lang.Throwable` @[L4fe5ea..L4fe622] goto L4fe62e;
  catch `java.lang.Throwable` @[L4fe630..L4fe632] goto L4fe62e;
}
procedure `void` `b`(`v0.c` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lv0/c;.b:(Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fe658.  @monitorenter v5
  #L4fe65a.  v0:= v5.`v0.c.a` @type ^`java.util.Map` @kind object;
  #L4fe65e.  call temp:= `get`(v0, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fe664.  v0:= temp @kind object;
  #L4fe666.  call temp:= `d`(v0) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fe66c.  v0:= temp @kind object;
  #L4fe66e.  v0:= (`v0.c$a`) v0 @kind object;
  #L4fe672.  v1:= v0.`v0.c$a.b` @type ^`int`;
  #L4fe676.  v2:= 1I;
  #L4fe678.  if v1 < v2 then goto L4fe70a;
  #L4fe67c.  v1:= v1 - v2 @kind int;
  #L4fe67e.  v0.`v0.c$a.b` @type ^`int` := v1;
  #L4fe682.  if v1 != 0 then goto L4fe6fc;
  #L4fe686.  v1:= v5.`v0.c.a` @type ^`java.util.Map` @kind object;
  #L4fe68a.  call temp:= `remove`(v1, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fe690.  v1:= temp @kind object;
  #L4fe692.  v1:= (`v0.c$a`) v1 @kind object;
  #L4fe696.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fe69c.  v2:= temp;
  #L4fe69e.  if v2 == 0 then goto L4fe6ae;
  #L4fe6a2.  v6:= v5.`v0.c.b` @type ^`v0.c$b` @kind object;
  #L4fe6a6.  call `b`(v6, v1) @signature `Lv0/c$b;.b:(Lv0/c$a;)V` @kind virtual;
  #L4fe6ac.  goto L4fe6fc;
  #L4fe6ae.  v2:= new `java.lang.IllegalStateException`;
  #L4fe6b2.  v3:= new `java.lang.StringBuilder`;
  #L4fe6b6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fe6bc.  v4:= "Removed the wrong lock, expected to remove: " @kind object;
  #L4fe6c0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe6c6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe6cc.  v0:= ", but actually removed: " @kind object;
  #L4fe6d0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe6d6.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe6dc.  v0:= ", safeKey: " @kind object;
  #L4fe6e0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe6e6.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe6ec.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fe6f2.  v6:= temp @kind object;
  #L4fe6f4.  call `<init>`(v2, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe6fa.  throw v2;
  #L4fe6fc.  @monitorexit v5
  #L4fe6fe.  v6:= v0.`v0.c$a.a` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L4fe702.  call `unlock`(v6) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L4fe708.  return @kind void;
  #L4fe70a.  v1:= new `java.lang.IllegalStateException`;
  #L4fe70e.  v2:= new `java.lang.StringBuilder`;
  #L4fe712.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fe718.  v3:= "Cannot release a lock that is not held, safeKey: " @kind object;
  #L4fe71c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe722.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe728.  v6:= ", interestedThreads: " @kind object;
  #L4fe72c.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe732.  v6:= v0.`v0.c$a.b` @type ^`int`;
  #L4fe736.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe73c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fe742.  v6:= temp @kind object;
  #L4fe744.  call `<init>`(v1, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe74a.  throw v1;
  #L4fe74c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fe74e.  @monitorexit v5
  #L4fe750.  throw v6;
  catch `java.lang.Throwable` @[L4fe65a..L4fe6fe] goto L4fe74c;
  catch `java.lang.Throwable` @[L4fe70a..L4fe750] goto L4fe74c;
}
