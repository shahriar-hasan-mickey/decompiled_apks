record `v0.j` @kind class @AccessFlag PUBLIC {
  `n1.g` `v0.j.a` @AccessFlag PRIVATE_FINAL;
  `x.e` `v0.j.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v0.j` v3 @kind this) @signature `Lv0/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4ff1f4.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ff1fa.  v0:= new `n1.g`;
  #L4ff1fe.  v1:= 1000L;
  #L4ff202.  call `<init>`(v0, v1) @signature `Ln1/g;.<init>:(J)V` @kind direct;
  #L4ff208.  v3.`v0.j.a` @type ^`n1.g` := v0 @kind object;
  #L4ff20c.  v0:= new `v0.j$a`;
  #L4ff210.  call `<init>`(v0, v3) @signature `Lv0/j$a;.<init>:(Lv0/j;)V` @kind direct;
  #L4ff216.  v1:= 10I;
  #L4ff21a.  call temp:= `d`(v1, v0) @signature `Lo1/a;.d:(ILo1/a$d;)Lx/e;` @kind static;
  #L4ff220.  v0:= temp @kind object;
  #L4ff222.  v3.`v0.j.b` @type ^`x.e` := v0 @kind object;
  #L4ff226.  return @kind void;
}
procedure `java.lang.String` `a`(`v0.j` v2 @kind this, `q0.b` v3 @kind object) @signature `Lv0/j;.a:(Lq0/b;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ff114.  v0:= v2.`v0.j.b` @type ^`x.e` @kind object;
  #L4ff118.  call temp:= `b`(v0) @signature `Lx/e;.b:()Ljava/lang/Object;` @kind interface;
  #L4ff11e.  v0:= temp @kind object;
  #L4ff120.  call temp:= `d`(v0) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ff126.  v0:= temp @kind object;
  #L4ff128.  v0:= (`v0.j$b`) v0 @kind object;
  #L4ff12c.  v1:= v0.`v0.j$b.a` @type ^`java.security.MessageDigest` @kind object;
  #L4ff130.  call `a`(v3, v1) @signature `Lq0/b;.a:(Ljava/security/MessageDigest;)V` @kind interface;
  #L4ff136.  v3:= v0.`v0.j$b.a` @type ^`java.security.MessageDigest` @kind object;
  #L4ff13a.  call temp:= `digest`(v3) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L4ff140.  v3:= temp @kind object;
  #L4ff142.  call temp:= `s`(v3) @signature `Ln1/k;.s:([B)Ljava/lang/String;` @kind static;
  #L4ff148.  v3:= temp @kind object;
  #L4ff14a.  v1:= v2.`v0.j.b` @type ^`x.e` @kind object;
  #L4ff14e.  call temp:= `a`(v1, v0) @signature `Lx/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L4ff154.  return v3 @kind object;
  #L4ff156.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ff158.  v1:= v2.`v0.j.b` @type ^`x.e` @kind object;
  #L4ff15c.  call temp:= `a`(v1, v0) @signature `Lx/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L4ff162.  throw v3;
  catch `java.lang.Throwable` @[L4ff12c..L4ff14a] goto L4ff156;
}
procedure `java.lang.String` `b`(`v0.j` v3 @kind this, `q0.b` v4 @kind object) @signature `Lv0/j;.b:(Lq0/b;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ff180.  v0:= v3.`v0.j.a` @type ^`n1.g` @kind object;
  #L4ff184.  @monitorenter v0
  #L4ff186.  v1:= v3.`v0.j.a` @type ^`n1.g` @kind object;
  #L4ff18a.  call temp:= `g`(v1, v4) @signature `Ln1/g;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ff190.  v1:= temp @kind object;
  #L4ff192.  v1:= (`java.lang.String`) v1 @kind object;
  #L4ff196.  @monitorexit v0
  #L4ff198.  if v1 != 0 then goto L4ff1a4;
  #L4ff19c.  call temp:= `a`(v3, v4) @signature `Lv0/j;.a:(Lq0/b;)Ljava/lang/String;` @kind direct;
  #L4ff1a2.  v1:= temp @kind object;
  #L4ff1a4.  v2:= v3.`v0.j.a` @type ^`n1.g` @kind object;
  #L4ff1a8.  @monitorenter v2
  #L4ff1aa.  v0:= v3.`v0.j.a` @type ^`n1.g` @kind object;
  #L4ff1ae.  call temp:= `k`(v0, v4, v1) @signature `Ln1/g;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ff1b4.  @monitorexit v2
  #L4ff1b6.  return v1 @kind object;
  #L4ff1b8.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ff1ba.  @monitorexit v2
  #L4ff1bc.  throw v4;
  #L4ff1be.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ff1c0.  @monitorexit v0
  #L4ff1c2.  throw v4;
  catch `java.lang.Throwable` @[L4ff186..L4ff198] goto L4ff1be;
  catch `java.lang.Throwable` @[L4ff1aa..L4ff1bc] goto L4ff1b8;
  catch `java.lang.Throwable` @[L4ff1c0..L4ff1c2] goto L4ff1be;
}
