record `v0.c$b` @kind class @AccessFlag  {
  `java.util.Queue` `v0.c$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v0.c$b` v1 @kind this) @signature `Lv0/c$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4fe518.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe51e.  v0:= new `java.util.ArrayDeque`;
  #L4fe522.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L4fe528.  v1.`v0.c$b.a` @type ^`java.util.Queue` := v0 @kind object;
  #L4fe52c.  return @kind void;
}
procedure `v0.c$a` `a`(`v0.c$b` v2 @kind this) @signature `Lv0/c$b;.a:()Lv0/c$a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4fe4c4.  v0:= v2.`v0.c$b.a` @type ^`java.util.Queue` @kind object;
  #L4fe4c8.  @monitorenter v0
  #L4fe4ca.  v1:= v2.`v0.c$b.a` @type ^`java.util.Queue` @kind object;
  #L4fe4ce.  call temp:= `poll`(v1) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4fe4d4.  v1:= temp @kind object;
  #L4fe4d6.  v1:= (`v0.c$a`) v1 @kind object;
  #L4fe4da.  @monitorexit v0
  #L4fe4dc.  if v1 != 0 then goto L4fe4ea;
  #L4fe4e0.  v1:= new `v0.c$a`;
  #L4fe4e4.  call `<init>`(v1) @signature `Lv0/c$a;.<init>:()V` @kind direct;
  #L4fe4ea.  return v1 @kind object;
  #L4fe4ec.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fe4ee.  @monitorexit v0
  #L4fe4f0.  throw v1;
  catch `java.lang.Throwable` @[L4fe4ca..L4fe4dc] goto L4fe4ec;
  catch `java.lang.Throwable` @[L4fe4ee..L4fe4f0] goto L4fe4ec;
}
procedure `void` `b`(`v0.c$b` v3 @kind this, `v0.c$a` v4 @kind object) @signature `Lv0/c$b;.b:(Lv0/c$a;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4fe540.  v0:= v3.`v0.c$b.a` @type ^`java.util.Queue` @kind object;
  #L4fe544.  @monitorenter v0
  #L4fe546.  v1:= v3.`v0.c$b.a` @type ^`java.util.Queue` @kind object;
  #L4fe54a.  call temp:= `size`(v1) @signature `Ljava/util/Queue;.size:()I` @kind interface;
  #L4fe550.  v1:= temp;
  #L4fe552.  v2:= 10I;
  #L4fe556.  if v1 >= v2 then goto L4fe564;
  #L4fe55a.  v1:= v3.`v0.c$b.a` @type ^`java.util.Queue` @kind object;
  #L4fe55e.  call temp:= `offer`(v1, v4) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4fe564.  @monitorexit v0
  #L4fe566.  return @kind void;
  #L4fe568.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fe56a.  @monitorexit v0
  #L4fe56c.  throw v4;
  catch `java.lang.Throwable` @[L4fe546..L4fe56c] goto L4fe568;
}
