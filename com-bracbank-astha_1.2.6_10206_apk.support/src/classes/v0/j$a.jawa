record `v0.j$a` @kind class @AccessFlag  extends `o1.a$d` @kind interface {
  `v0.j` `v0.j$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`v0.j$a` v0 @kind this, `v0.j` v1 @kind object) @signature `Lv0/j$a;.<init>:(Lv0/j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ff0b8.  v0.`v0.j$a.a` @type ^`v0.j` := v1 @kind object;
  #L4ff0bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ff0c2.  return @kind void;
}
procedure `java.lang.Object` `a`(`v0.j$a` v1 @kind this) @signature `Lv0/j$a;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4ff054.  call temp:= `b`(v1) @signature `Lv0/j$a;.b:()Lv0/j$b;` @kind virtual;
  #L4ff05a.  v0:= temp @kind object;
  #L4ff05c.  return v0 @kind object;
}
procedure `v0.j$b` `b`(`v0.j$a` v2 @kind this) @signature `Lv0/j$a;.b:()Lv0/j$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ff070.  v0:= new `v0.j$b`;
  #L4ff074.  v1:= "SHA-256" @kind object;
  #L4ff078.  call temp:= `getInstance`(v1) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L4ff07e.  v1:= temp @kind object;
  #L4ff080.  call `<init>`(v0, v1) @signature `Lv0/j$b;.<init>:(Ljava/security/MessageDigest;)V` @kind direct;
  #L4ff086.  return v0 @kind object;
  #L4ff088.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L4ff08a.  v1:= new `java.lang.RuntimeException`;
  #L4ff08e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4ff094.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[L4ff070..L4ff086] goto L4ff088;
}
