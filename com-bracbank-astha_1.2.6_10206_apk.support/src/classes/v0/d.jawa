record `v0.d` @kind class @AccessFlag PUBLIC extends `v0.a$a` @kind interface {
  `long` `v0.d.a` @AccessFlag PRIVATE_FINAL;
  `v0.d$a` `v0.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v0.d` v0 @kind this, `v0.d$a` v1 @kind object, `long` v2 ) @signature `Lv0/d;.<init>:(Lv0/d$a;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4fe7d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe7d6.  v0.`v0.d.a` @type ^`long` := v2 @kind wide;
  #L4fe7da.  v0.`v0.d.b` @type ^`v0.d$a` := v1 @kind object;
  #L4fe7de.  return @kind void;
}
procedure `v0.a` `build`(`v0.d` v3 @kind this) @signature `Lv0/d;.build:()Lv0/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fe778.  v0:= v3.`v0.d.b` @type ^`v0.d$a` @kind object;
  #L4fe77c.  call temp:= `a`(v0) @signature `Lv0/d$a;.a:()Ljava/io/File;` @kind interface;
  #L4fe782.  v0:= temp @kind object;
  #L4fe784.  v1:= 0I;
  #L4fe786.  if v0 != 0 then goto L4fe78c;
  #L4fe78a.  return v1 @kind object;
  #L4fe78c.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L4fe792.  v2:= temp;
  #L4fe794.  if v2 != 0 then goto L4fe7b2;
  #L4fe798.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4fe79e.  v2:= temp;
  #L4fe7a0.  if v2 == 0 then goto L4fe7b0;
  #L4fe7a4.  call temp:= `isDirectory`(v0) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L4fe7aa.  v2:= temp;
  #L4fe7ac.  if v2 != 0 then goto L4fe7b2;
  #L4fe7b0.  return v1 @kind object;
  #L4fe7b2.  v1:= v3.`v0.d.a` @type ^`long` @kind wide;
  #L4fe7b6.  call temp:= `c`(v0, v1) @signature `Lv0/e;.c:(Ljava/io/File;J)Lv0/a;` @kind static;
  #L4fe7bc.  v0:= temp @kind object;
  #L4fe7be.  return v0 @kind object;
}
