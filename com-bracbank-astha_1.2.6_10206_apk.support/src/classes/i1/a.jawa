record `i1.a` @kind class @AccessFlag PUBLIC {
  `java.util.List` `i1.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i1.a` v1 @kind this) @signature `Li1/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ea934.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ea93a.  v0:= new `java.util.ArrayList`;
  #L4ea93e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4ea944.  v1.`i1.a.a` @type ^`java.util.List` := v0 @kind object;
  #L4ea948.  return @kind void;
}
procedure `void` `a`(`i1.a` v2 @kind this, `java.lang.Class` v3 @kind object, `q0.a` v4 @kind object) @signature `Li1/a;.a:(Ljava/lang/Class;Lq0/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ea95c.  @monitorenter v2
  #L4ea95e.  v0:= v2.`i1.a.a` @type ^`java.util.List` @kind object;
  #L4ea962.  v1:= new `i1.a$a`;
  #L4ea966.  call `<init>`(v1, v3, v4) @signature `Li1/a$a;.<init>:(Ljava/lang/Class;Lq0/a;)V` @kind direct;
  #L4ea96c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4ea972.  @monitorexit v2
  #L4ea974.  return @kind void;
  #L4ea976.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ea978.  @monitorexit v2
  #L4ea97a.  throw v3;
  catch `java.lang.Throwable` @[L4ea95e..L4ea972] goto L4ea976;
}
procedure `q0.a` `b`(`i1.a` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Li1/a;.b:(Ljava/lang/Class;)Lq0/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ea8d0.  @monitorenter v3
  #L4ea8d2.  v0:= v3.`i1.a.a` @type ^`java.util.List` @kind object;
  #L4ea8d6.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ea8dc.  v0:= temp @kind object;
  #L4ea8de.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ea8e4.  v1:= temp;
  #L4ea8e6.  if v1 == 0 then goto L4ea90a;
  #L4ea8ea.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ea8f0.  v1:= temp @kind object;
  #L4ea8f2.  v1:= (`i1.a$a`) v1 @kind object;
  #L4ea8f6.  call temp:= `a`(v1, v4) @signature `Li1/a$a;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L4ea8fc.  v2:= temp;
  #L4ea8fe.  if v2 == 0 then goto L4ea8de;
  #L4ea902.  v4:= v1.`i1.a$a.b` @type ^`q0.a` @kind object;
  #L4ea906.  @monitorexit v3
  #L4ea908.  return v4 @kind object;
  #L4ea90a.  v4:= 0I;
  #L4ea90c.  @monitorexit v3
  #L4ea90e.  return v4 @kind object;
  #L4ea910.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ea912.  @monitorexit v3
  #L4ea914.  throw v4;
  catch `java.lang.Throwable` @[L4ea8d2..L4ea906] goto L4ea910;
}
