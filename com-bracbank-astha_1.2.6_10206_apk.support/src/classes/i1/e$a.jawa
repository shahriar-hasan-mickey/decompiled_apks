record `i1.e$a` @kind class @AccessFlag  {
  `java.lang.Class` `i1.e$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `i1.e$a.b` @AccessFlag FINAL;
  `q0.e` `i1.e$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`i1.e$a` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `q0.e` v3 @kind object) @signature `Li1/e$a;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lq0/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4eacd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4eacde.  v0.`i1.e$a.a` @type ^`java.lang.Class` := v1 @kind object;
  #L4eace2.  v0.`i1.e$a.b` @type ^`java.lang.Class` := v2 @kind object;
  #L4eace6.  v0.`i1.e$a.c` @type ^`q0.e` := v3 @kind object;
  #L4eacea.  return @kind void;
}
procedure `boolean` `a`(`i1.e$a` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Li1/e$a;.a:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eaca0.  v0:= v1.`i1.e$a.a` @type ^`java.lang.Class` @kind object;
  #L4eaca4.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L4eacaa.  v2:= temp;
  #L4eacac.  if v2 == 0 then goto L4eacc4;
  #L4eacb0.  v2:= v1.`i1.e$a.b` @type ^`java.lang.Class` @kind object;
  #L4eacb4.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L4eacba.  v2:= temp;
  #L4eacbc.  if v2 == 0 then goto L4eacc4;
  #L4eacc0.  v2:= 1I;
  #L4eacc2.  goto L4eacc6;
  #L4eacc4.  v2:= 0I;
  #L4eacc6.  return v2;
}
