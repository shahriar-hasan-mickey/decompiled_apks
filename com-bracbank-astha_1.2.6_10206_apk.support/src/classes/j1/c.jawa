record `j1.c` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.a` @kind class {
}
procedure `void` `<init>`(`j1.c` v0 @kind this) @signature `Lj1/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ebba8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/a;.<init>:()V` @kind direct;
  #L4ebbae.  return @kind void;
}
procedure `j1.c` `W`(`java.lang.Class` v1 @kind object) @signature `Lj1/c;.W:(Ljava/lang/Class;)Lj1/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ebb30.  v0:= new `j1.c`;
  #L4ebb34.  call `<init>`(v0) @signature `Lj1/c;.<init>:()V` @kind direct;
  #L4ebb3a.  call temp:= `d`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.d:(Ljava/lang/Class;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L4ebb40.  v1:= temp @kind object;
  #L4ebb42.  v1:= (`j1.c`) v1 @kind object;
  #L4ebb46.  return v1 @kind object;
}
procedure `j1.c` `X`(`t0.a` v1 @kind object) @signature `Lj1/c;.X:(Lt0/a;)Lj1/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ebb58.  v0:= new `j1.c`;
  #L4ebb5c.  call `<init>`(v0) @signature `Lj1/c;.<init>:()V` @kind direct;
  #L4ebb62.  call temp:= `e`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.e:(Lt0/a;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L4ebb68.  v1:= temp @kind object;
  #L4ebb6a.  v1:= (`j1.c`) v1 @kind object;
  #L4ebb6e.  return v1 @kind object;
}
procedure `j1.c` `Y`(`q0.b` v1 @kind object) @signature `Lj1/c;.Y:(Lq0/b;)Lj1/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ebb80.  v0:= new `j1.c`;
  #L4ebb84.  call `<init>`(v0) @signature `Lj1/c;.<init>:()V` @kind direct;
  #L4ebb8a.  call temp:= `P`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.P:(Lq0/b;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L4ebb90.  v1:= temp @kind object;
  #L4ebb92.  v1:= (`j1.c`) v1 @kind object;
  #L4ebb96.  return v1 @kind object;
}
