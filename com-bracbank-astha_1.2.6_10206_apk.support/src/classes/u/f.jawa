record `u.f` @kind class @AccessFlag FINAL extends `u.g` @kind interface {
  `java.util.Locale`[] `u.f.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `u.f.b` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Locale`[] `@@u.f.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Locale` `@@u.f.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Locale` `@@u.f.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Locale` `@@u.f.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lu/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4faea4.  v0:= 0I;
  #L4faea6.  v0:= new `java.util.Locale`[v0];
  #L4faeaa.  `@@u.f.c` @type ^`java.util.Locale`[] := v0 @kind object;
  #L4faeae.  v0:= new `java.util.Locale`;
  #L4faeb2.  v1:= "en" @kind object;
  #L4faeb6.  v2:= "XA" @kind object;
  #L4faeba.  call `<init>`(v0, v1, v2) @signature `Ljava/util/Locale;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L4faec0.  `@@u.f.d` @type ^`java.util.Locale` := v0 @kind object;
  #L4faec4.  v0:= new `java.util.Locale`;
  #L4faec8.  v1:= "ar" @kind object;
  #L4faecc.  v2:= "XB" @kind object;
  #L4faed0.  call `<init>`(v0, v1, v2) @signature `Ljava/util/Locale;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L4faed6.  `@@u.f.e` @type ^`java.util.Locale` := v0 @kind object;
  #L4faeda.  v0:= "en-Latn" @kind object;
  #L4faede.  call temp:= `b`(v0) @signature `Lu/e;.b:(Ljava/lang/String;)Ljava/util/Locale;` @kind static;
  #L4faee4.  v0:= temp @kind object;
  #L4faee6.  `@@u.f.f` @type ^`java.util.Locale` := v0 @kind object;
  #L4faeea.  return @kind void;
}
procedure `void` `<init>`(`u.f` v6 @kind this, `java.util.Locale`[] v7 @kind object) @signature `Lu/f;.<init>:([Ljava/util/Locale;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4faefc.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4faf02.  v0:= length @variable v7;
  #L4faf04.  if v0 != 0 then goto L4faf1a;
  #L4faf08.  v7:= `@@u.f.c` @type ^`java.util.Locale`[] @kind object;
  #L4faf0c.  v6.`u.f.a` @type ^`java.util.Locale`[] := v7 @kind object;
  #L4faf10.  v7:= "" @kind object;
  #L4faf14.  v6.`u.f.b` @type ^`java.lang.String` := v7 @kind object;
  #L4faf18.  goto L4fafee;
  #L4faf1a.  v0:= new `java.util.ArrayList`;
  #L4faf1e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4faf24.  v1:= new `java.util.HashSet`;
  #L4faf28.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L4faf2e.  v2:= new `java.lang.StringBuilder`;
  #L4faf32.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4faf38.  v3:= 0I;
  #L4faf3a.  v4:= length @variable v7;
  #L4faf3c.  if v3 >= v4 then goto L4fafc6;
  #L4faf40.  v4:= v7[v3] @kind object;
  #L4faf44.  if v4 == 0 then goto L4faf8e;
  #L4faf48.  call temp:= `contains`(v1, v4) @signature `Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L4faf4e.  v5:= temp;
  #L4faf50.  if v5 == 0 then goto L4faf56;
  #L4faf54.  goto L4faf88;
  #L4faf56.  call temp:= `clone`(v4) @signature `Ljava/util/Locale;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4faf5c.  v4:= temp @kind object;
  #L4faf5e.  v4:= (`java.util.Locale`) v4 @kind object;
  #L4faf62.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4faf68.  call `b`(v2, v4) @signature `Lu/f;.b:(Ljava/lang/StringBuilder;Ljava/util/Locale;)V` @kind static;
  #L4faf6e.  v5:= length @variable v7;
  #L4faf70.  v5:= v5 + -1;
  #L4faf74.  if v3 >= v5 then goto L4faf82;
  #L4faf78.  v5:= 44I;
  #L4faf7c.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4faf82.  call temp:= `add`(v1, v4) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4faf88.  v3:= v3 + 1;
  #L4faf8c.  goto L4faf3a;
  #L4faf8e.  v7:= new `java.lang.NullPointerException`;
  #L4faf92.  v0:= new `java.lang.StringBuilder`;
  #L4faf96.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4faf9c.  v1:= "list[" @kind object;
  #L4fafa0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fafa6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fafac.  v1:= "] is null" @kind object;
  #L4fafb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fafb6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fafbc.  v0:= temp @kind object;
  #L4fafbe.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fafc4.  throw v7;
  #L4fafc6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fafcc.  v7:= temp;
  #L4fafce.  v7:= new `java.util.Locale`[v7];
  #L4fafd2.  call temp:= `toArray`(v0, v7) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L4fafd8.  v7:= temp @kind object;
  #L4fafda.  v7:= (`java.util.Locale`[]) v7 @kind object;
  #L4fafde.  v6.`u.f.a` @type ^`java.util.Locale`[] := v7 @kind object;
  #L4fafe2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fafe8.  v7:= temp @kind object;
  #L4fafea.  v6.`u.f.b` @type ^`java.lang.String` := v7 @kind object;
  #L4fafee.  return @kind void;
}
procedure `void` `b`(`java.lang.StringBuilder` v1 @kind object, `java.util.Locale` v2 @kind object) @signature `Lu/f;.b:(Ljava/lang/StringBuilder;Ljava/util/Locale;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L4fb000.  call temp:= `getLanguage`(v2) @signature `Ljava/util/Locale;.getLanguage:()Ljava/lang/String;` @kind virtual;
  #L4fb006.  v0:= temp @kind object;
  #L4fb008.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb00e.  call temp:= `getCountry`(v2) @signature `Ljava/util/Locale;.getCountry:()Ljava/lang/String;` @kind virtual;
  #L4fb014.  v0:= temp @kind object;
  #L4fb016.  if v0 == 0 then goto L4fb03e;
  #L4fb01a.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fb020.  v0:= temp;
  #L4fb022.  if v0 != 0 then goto L4fb03e;
  #L4fb026.  v0:= 45I;
  #L4fb02a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb030.  call temp:= `getCountry`(v2) @signature `Ljava/util/Locale;.getCountry:()Ljava/lang/String;` @kind virtual;
  #L4fb036.  v2:= temp @kind object;
  #L4fb038.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb03e.  return @kind void;
}
procedure `java.lang.Object` `a`(`u.f` v1 @kind this) @signature `Lu/f;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fadfc.  v0:= 0I;
  #L4fadfe.  return v0 @kind object;
}
procedure `boolean` `equals`(`u.f` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lu/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fad60.  v0:= 1I;
  #L4fad62.  if v6 != v5 then goto L4fad68;
  #L4fad66.  return v0;
  #L4fad68.  v1:= instanceof @variable v6 @type ^`u.f` @kind boolean;
  #L4fad6c.  v2:= 0I;
  #L4fad6e.  if v1 != 0 then goto L4fad74;
  #L4fad72.  return v2;
  #L4fad74.  v6:= (`u.f`) v6 @kind object;
  #L4fad78.  v6:= v6.`u.f.a` @type ^`java.util.Locale`[] @kind object;
  #L4fad7c.  v1:= v5.`u.f.a` @type ^`java.util.Locale`[] @kind object;
  #L4fad80.  v1:= length @variable v1;
  #L4fad82.  v3:= length @variable v6;
  #L4fad84.  if v1 == v3 then goto L4fad8a;
  #L4fad88.  return v2;
  #L4fad8a.  v1:= 0I;
  #L4fad8c.  v3:= v5.`u.f.a` @type ^`java.util.Locale`[] @kind object;
  #L4fad90.  v4:= length @variable v3;
  #L4fad92.  if v1 >= v4 then goto L4fadb2;
  #L4fad96.  v3:= v3[v1] @kind object;
  #L4fad9a.  v4:= v6[v1] @kind object;
  #L4fad9e.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fada4.  v3:= temp;
  #L4fada6.  if v3 != 0 then goto L4fadac;
  #L4fadaa.  return v2;
  #L4fadac.  v1:= v1 + 1;
  #L4fadb0.  goto L4fad8c;
  #L4fadb2.  return v0;
}
procedure `java.util.Locale` `get`(`u.f` v2 @kind this, `int` v3 ) @signature `Lu/f;.get:(I)Ljava/util/Locale;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fae7c.  if v3 < 0 then goto L4fae90;
  #L4fae80.  v0:= v2.`u.f.a` @type ^`java.util.Locale`[] @kind object;
  #L4fae84.  v1:= length @variable v0;
  #L4fae86.  if v3 >= v1 then goto L4fae90;
  #L4fae8a.  v3:= v0[v3] @kind object;
  #L4fae8e.  goto L4fae92;
  #L4fae90.  v3:= 0I;
  #L4fae92.  return v3 @kind object;
}
procedure `int` `hashCode`(`u.f` v4 @kind this) @signature `Lu/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fadc4.  v0:= 1I;
  #L4fadc6.  v1:= 0I;
  #L4fadc8.  v2:= v4.`u.f.a` @type ^`java.util.Locale`[] @kind object;
  #L4fadcc.  v3:= length @variable v2;
  #L4fadce.  if v1 >= v3 then goto L4fadea;
  #L4fadd2.  v0:= v0 * 31;
  #L4fadd6.  v2:= v2[v1] @kind object;
  #L4fadda.  call temp:= `hashCode`(v2) @signature `Ljava/util/Locale;.hashCode:()I` @kind virtual;
  #L4fade0.  v2:= temp;
  #L4fade2.  v0:= v0 + v2 @kind int;
  #L4fade4.  v1:= v1 + 1;
  #L4fade8.  goto L4fadc8;
  #L4fadea.  return v0;
}
procedure `java.lang.String` `toString`(`u.f` v4 @kind this) @signature `Lu/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fae10.  v0:= new `java.lang.StringBuilder`;
  #L4fae14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fae1a.  v1:= "[" @kind object;
  #L4fae1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fae24.  v1:= 0I;
  #L4fae26.  v2:= v4.`u.f.a` @type ^`java.util.Locale`[] @kind object;
  #L4fae2a.  v3:= length @variable v2;
  #L4fae2c.  if v1 >= v3 then goto L4fae58;
  #L4fae30.  v2:= v2[v1] @kind object;
  #L4fae34.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fae3a.  v2:= v4.`u.f.a` @type ^`java.util.Locale`[] @kind object;
  #L4fae3e.  v2:= length @variable v2;
  #L4fae40.  v2:= v2 + -1;
  #L4fae44.  if v1 >= v2 then goto L4fae52;
  #L4fae48.  v2:= 44I;
  #L4fae4c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fae52.  v1:= v1 + 1;
  #L4fae56.  goto L4fae26;
  #L4fae58.  v1:= "]" @kind object;
  #L4fae5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fae62.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fae68.  v0:= temp @kind object;
  #L4fae6a.  return v0 @kind object;
}
