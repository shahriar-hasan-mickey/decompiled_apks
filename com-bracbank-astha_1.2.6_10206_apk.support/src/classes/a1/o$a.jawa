record `a1.o$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.locks.Lock` @kind interface {
}
procedure `void` `<init>`(`a1.o$a` v0 @kind this) @signature `La1/o$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L179a48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L179a4e.  return @kind void;
}
procedure `void` `lock`(`a1.o$a` v0 @kind this) @signature `La1/o$a;.lock:()V` @AccessFlag PUBLIC {
    temp;

  #L179a60.  return @kind void;
}
procedure `void` `lockInterruptibly`(`a1.o$a` v0 @kind this) @signature `La1/o$a;.lockInterruptibly:()V` @AccessFlag PUBLIC {
    temp;

  #L179a74.  return @kind void;
}
procedure `java.util.concurrent.locks.Condition` `newCondition`(`a1.o$a` v2 @kind this) @signature `La1/o$a;.newCondition:()Ljava/util/concurrent/locks/Condition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L179a28.  v0:= new `java.lang.UnsupportedOperationException`;
  #L179a2c.  v1:= "Should not be called" @kind object;
  #L179a30.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L179a36.  throw v0;
}
procedure `boolean` `tryLock`(`a1.o$a` v1 @kind this) @signature `La1/o$a;.tryLock:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L179a00.  v0:= 1I;
  #L179a02.  return v0;
}
procedure `boolean` `tryLock`(`a1.o$a` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `La1/o$a;.tryLock:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC {
    temp;

  #L179a14.  v1:= 1I;
  #L179a16.  return v1;
}
procedure `void` `unlock`(`a1.o$a` v0 @kind this) @signature `La1/o$a;.unlock:()V` @AccessFlag PUBLIC {
    temp;

  #L179a88.  return @kind void;
}
