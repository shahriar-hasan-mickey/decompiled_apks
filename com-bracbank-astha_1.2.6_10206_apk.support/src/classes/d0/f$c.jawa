record `d0.f$c` @kind class @AccessFlag  extends `d0.f$b` @kind class {
  `d0.f$a` `d0.f$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`d0.f$c` v1 @kind this, `android.widget.TextView` v2 @kind object) @signature `Ld0/f$c;.<init>:(Landroid/widget/TextView;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4dc584.  call `<init>`(v1) @signature `Ld0/f$b;.<init>:()V` @kind direct;
  #L4dc58a.  v0:= new `d0.f$a`;
  #L4dc58e.  call `<init>`(v0, v2) @signature `Ld0/f$a;.<init>:(Landroid/widget/TextView;)V` @kind direct;
  #L4dc594.  v1.`d0.f$c.a` @type ^`d0.f$a` := v0 @kind object;
  #L4dc598.  return @kind void;
}
procedure `boolean` `d`(`d0.f$c` v1 @kind this) @signature `Ld0/f$c;.d:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4dc564.  call temp:= `h`() @signature `Landroidx/emoji2/text/d;.h:()Z` @kind static;
  #L4dc56a.  v0:= temp;
  #L4dc56c.  v0:= v0 ^~ 1;
  #L4dc570.  return v0;
}
procedure `android.text.InputFilter`[] `a`(`d0.f$c` v1 @kind this, `android.text.InputFilter`[] v2 @kind object) @signature `Ld0/f$c;.a:([Landroid/text/InputFilter;)[Landroid/text/InputFilter;` @AccessFlag  {
    temp;
    v0;

  #L4dc538.  call temp:= `d`(v1) @signature `Ld0/f$c;.d:()Z` @kind direct;
  #L4dc53e.  v0:= temp;
  #L4dc540.  if v0 == 0 then goto L4dc546;
  #L4dc544.  return v2 @kind object;
  #L4dc546.  v0:= v1.`d0.f$c.a` @type ^`d0.f$a` @kind object;
  #L4dc54a.  call temp:= `a`(v0, v2) @signature `Ld0/f$a;.a:([Landroid/text/InputFilter;)[Landroid/text/InputFilter;` @kind virtual;
  #L4dc550.  v2:= temp @kind object;
  #L4dc552.  return v2 @kind object;
}
procedure `void` `b`(`d0.f$c` v1 @kind this, `boolean` v2 ) @signature `Ld0/f$c;.b:(Z)V` @AccessFlag  {
    temp;
    v0;

  #L4dc5ac.  call temp:= `d`(v1) @signature `Ld0/f$c;.d:()Z` @kind direct;
  #L4dc5b2.  v0:= temp;
  #L4dc5b4.  if v0 == 0 then goto L4dc5ba;
  #L4dc5b8.  return @kind void;
  #L4dc5ba.  v0:= v1.`d0.f$c.a` @type ^`d0.f$a` @kind object;
  #L4dc5be.  call `b`(v0, v2) @signature `Ld0/f$a;.b:(Z)V` @kind virtual;
  #L4dc5c4.  return @kind void;
}
procedure `void` `c`(`d0.f$c` v1 @kind this, `boolean` v2 ) @signature `Ld0/f$c;.c:(Z)V` @AccessFlag  {
    temp;
    v0;

  #L4dc5d8.  call temp:= `d`(v1) @signature `Ld0/f$c;.d:()Z` @kind direct;
  #L4dc5de.  v0:= temp;
  #L4dc5e0.  if v0 == 0 then goto L4dc5f0;
  #L4dc5e4.  v0:= v1.`d0.f$c.a` @type ^`d0.f$a` @kind object;
  #L4dc5e8.  call `g`(v0, v2) @signature `Ld0/f$a;.g:(Z)V` @kind virtual;
  #L4dc5ee.  goto L4dc5fa;
  #L4dc5f0.  v0:= v1.`d0.f$c.a` @type ^`d0.f$a` @kind object;
  #L4dc5f4.  call `c`(v0, v2) @signature `Ld0/f$a;.c:(Z)V` @kind virtual;
  #L4dc5fa.  return @kind void;
}
