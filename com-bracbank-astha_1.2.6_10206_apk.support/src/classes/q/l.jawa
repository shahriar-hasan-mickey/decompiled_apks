record `q.l` @kind class @AccessFlag PUBLIC {
}
procedure `void` `a`(`java.io.Closeable` v0 @kind object) @signature `Lq/l;.a:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4f78bc.  if v0 == 0 then goto L4f78c6;
  #L4f78c0.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L4f78c6.  return @kind void;
  catch `java.io.IOException` @[L4f78c0..L4f78c6] goto L4f78c6;
}
procedure `java.nio.ByteBuffer` `b`(`android.content.Context` v1 @kind object, `android.content.res.Resources` v2 @kind object, `int` v3 ) @signature `Lq/l;.b:(Landroid/content/Context;Landroid/content/res/Resources;I)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f7668.  call temp:= `e`(v1) @signature `Lq/l;.e:(Landroid/content/Context;)Ljava/io/File;` @kind static;
  #L4f766e.  v1:= temp @kind object;
  #L4f7670.  v0:= 0I;
  #L4f7672.  if v1 != 0 then goto L4f7678;
  #L4f7676.  return v0 @kind object;
  #L4f7678.  call temp:= `c`(v1, v2, v3) @signature `Lq/l;.c:(Ljava/io/File;Landroid/content/res/Resources;I)Z` @kind static;
  #L4f767e.  v2:= temp;
  #L4f7680.  if v2 != 0 then goto L4f768c;
  #L4f7684.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L4f768a.  return v0 @kind object;
  #L4f768c.  call temp:= `g`(v1) @signature `Lq/l;.g:(Ljava/io/File;)Ljava/nio/ByteBuffer;` @kind static;
  #L4f7692.  v2:= temp @kind object;
  #L4f7694.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L4f769a.  return v2 @kind object;
  #L4f769c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f769e.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L4f76a4.  throw v2;
  catch `java.lang.Throwable` @[L4f7678..L4f7680] goto L4f769c;
  catch `java.lang.Throwable` @[L4f768c..L4f7694] goto L4f769c;
}
procedure `boolean` `c`(`java.io.File` v0 @kind object, `android.content.res.Resources` v1 @kind object, `int` v2 ) @signature `Lq/l;.c:(Ljava/io/File;Landroid/content/res/Resources;I)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4f7478.  call temp:= `openRawResource`(v1, v2) @signature `Landroid/content/res/Resources;.openRawResource:(I)Ljava/io/InputStream;` @kind virtual;
  #L4f747e.  v1:= temp @kind object;
  #L4f7480.  call temp:= `d`(v0, v1) @signature `Lq/l;.d:(Ljava/io/File;Ljava/io/InputStream;)Z` @kind static;
  #L4f7486.  v0:= temp;
  #L4f7488.  call `a`(v1) @signature `Lq/l;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4f748e.  return v0;
  #L4f7490.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f7492.  goto L4f7498;
  #L4f7494.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f7496.  v1:= 0I;
  #L4f7498.  call `a`(v1) @signature `Lq/l;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4f749e.  throw v0;
  catch `java.lang.Throwable` @[L4f7478..L4f7480] goto L4f7494;
  catch `java.lang.Throwable` @[L4f7480..L4f7488] goto L4f7490;
}
procedure `boolean` `d`(`java.io.File` v5 @kind object, `java.io.InputStream` v6 @kind object) @signature `Lq/l;.d:(Ljava/io/File;Ljava/io/InputStream;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f74c8.  call temp:= `allowThreadDiskWrites`() @signature `Landroid/os/StrictMode;.allowThreadDiskWrites:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L4f74ce.  v0:= temp @kind object;
  #L4f74d0.  v1:= 0I;
  #L4f74d2.  v2:= 0I;
  #L4f74d4.  v3:= new `java.io.FileOutputStream`;
  #L4f74d8.  call `<init>`(v3, v5, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L4f74de.  v5:= 1024I;
  #L4f74e2.  v5:= new `byte`[v5];
  #L4f74e6.  call temp:= `read`(v6, v5) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L4f74ec.  v2:= temp;
  #L4f74ee.  v4:= -1I;
  #L4f74f0.  if v2 == v4 then goto L4f74fc;
  #L4f74f4.  call `write`(v3, v5, v1, v2) @signature `Ljava/io/FileOutputStream;.write:([BII)V` @kind virtual;
  #L4f74fa.  goto L4f74e6;
  #L4f74fc.  v5:= 1I;
  #L4f74fe.  call `a`(v3) @signature `Lq/l;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4f7504.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L4f750a.  return v5;
  #L4f750c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f750e.  v2:= v3 @kind object;
  #L4f7510.  goto L4f7560;
  #L4f7512.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L4f7514.  v2:= v3 @kind object;
  #L4f7516.  goto L4f751e;
  #L4f7518.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f751a.  goto L4f7560;
  #L4f751c.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L4f751e.  v6:= "TypefaceCompatUtil" @kind object;
  #L4f7522.  v3:= new `java.lang.StringBuilder`;
  #L4f7526.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f752c.  v4:= "Error copying resource contents to temp file: " @kind object;
  #L4f7530.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7536.  call temp:= `getMessage`(v5) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L4f753c.  v5:= temp @kind object;
  #L4f753e.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7544.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f754a.  v5:= temp @kind object;
  #L4f754c.  call temp:= `e`(v6, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4f7552.  call `a`(v2) @signature `Lq/l;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4f7558.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L4f755e.  return v1;
  #L4f7560.  call `a`(v2) @signature `Lq/l;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4f7566.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L4f756c.  throw v5;
  catch `java.io.IOException` @[L4f74d4..L4f74de] goto L4f751c;
  catch `java.lang.Throwable` @[L4f74d4..L4f74de] goto L4f7518;
  catch `java.io.IOException` @[L4f74e2..L4f74fa] goto L4f7512;
  catch `java.lang.Throwable` @[L4f74e2..L4f74fa] goto L4f750c;
  catch `java.lang.Throwable` @[L4f751e..L4f7552] goto L4f7518;
}
procedure `java.io.File` `e`(`android.content.Context` v5 @kind object) @signature `Lq/l;.e:(Landroid/content/Context;)Ljava/io/File;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f75a8.  call temp:= `getCacheDir`(v5) @signature `Landroid/content/Context;.getCacheDir:()Ljava/io/File;` @kind virtual;
  #L4f75ae.  v5:= temp @kind object;
  #L4f75b0.  v0:= 0I;
  #L4f75b2.  if v5 != 0 then goto L4f75b8;
  #L4f75b6.  return v0 @kind object;
  #L4f75b8.  v1:= new `java.lang.StringBuilder`;
  #L4f75bc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f75c2.  v2:= ".font" @kind object;
  #L4f75c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f75cc.  call temp:= `myPid`() @signature `Landroid/os/Process;.myPid:()I` @kind static;
  #L4f75d2.  v2:= temp;
  #L4f75d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f75da.  v2:= "-" @kind object;
  #L4f75de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f75e4.  call temp:= `myTid`() @signature `Landroid/os/Process;.myTid:()I` @kind static;
  #L4f75ea.  v3:= temp;
  #L4f75ec.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f75f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f75f8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f75fe.  v1:= temp @kind object;
  #L4f7600.  v2:= 0I;
  #L4f7602.  v3:= 100I;
  #L4f7606.  if v2 >= v3 then goto L4f7646;
  #L4f760a.  v3:= new `java.io.File`;
  #L4f760e.  v4:= new `java.lang.StringBuilder`;
  #L4f7612.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f7618.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f761e.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7624.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f762a.  v4:= temp @kind object;
  #L4f762c.  call `<init>`(v3, v5, v4) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4f7632.  call temp:= `createNewFile`(v3) @signature `Ljava/io/File;.createNewFile:()Z` @kind virtual;
  #L4f7638.  v4:= temp;
  #L4f763a.  if v4 == 0 then goto L4f7640;
  #L4f763e.  return v3 @kind object;
  #L4f7640.  v2:= v2 + 1;
  #L4f7644.  goto L4f7602;
  #L4f7646.  return v0 @kind object;
  catch `java.io.IOException` @[L4f7632..L4f763a] goto L4f7640;
}
procedure `java.nio.ByteBuffer` `f`(`android.content.Context` v7 @kind object, `android.os.CancellationSignal` v8 @kind object, `android.net.Uri` v9 @kind object) @signature `Lq/l;.f:(Landroid/content/Context;Landroid/os/CancellationSignal;Landroid/net/Uri;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4f76cc.  call temp:= `getContentResolver`(v7) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L4f76d2.  v7:= temp @kind object;
  #L4f76d4.  v0:= 0I;
  #L4f76d6.  v1:= "r" @kind object;
  #L4f76da.  call temp:= `openFileDescriptor`(v7, v9, v1, v8) @signature `Landroid/content/ContentResolver;.openFileDescriptor:(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L4f76e0.  v7:= temp @kind object;
  #L4f76e2.  if v7 != 0 then goto L4f76f2;
  #L4f76e6.  if v7 == 0 then goto L4f76f0;
  #L4f76ea.  call `close`(v7) @signature `Landroid/os/ParcelFileDescriptor;.close:()V` @kind virtual;
  #L4f76f0.  return v0 @kind object;
  #L4f76f2.  v8:= new `java.io.FileInputStream`;
  #L4f76f6.  call temp:= `getFileDescriptor`(v7) @signature `Landroid/os/ParcelFileDescriptor;.getFileDescriptor:()Ljava/io/FileDescriptor;` @kind virtual;
  #L4f76fc.  v9:= temp @kind object;
  #L4f76fe.  call `<init>`(v8, v9) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/FileDescriptor;)V` @kind direct;
  #L4f7704.  call temp:= `getChannel`(v8) @signature `Ljava/io/FileInputStream;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L4f770a.  v1:= temp @kind object;
  #L4f770c.  call temp:= `size`(v1) @signature `Ljava/nio/channels/FileChannel;.size:()J` @kind virtual;
  #L4f7712.  v5:= temp @kind wide;
  #L4f7714.  v2:= `@@java.nio.channels.FileChannel$MapMode.READ_ONLY` @type ^`java.nio.channels.FileChannel$MapMode` @kind object;
  #L4f7718.  v3:= 0L;
  #L4f771c.  call temp:= `map`(v1, v2, v3, v5) @signature `Ljava/nio/channels/FileChannel;.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;` @kind virtual;
  #L4f7722.  v9:= temp @kind object;
  #L4f7724.  call `close`(v8) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L4f772a.  call `close`(v7) @signature `Landroid/os/ParcelFileDescriptor;.close:()V` @kind virtual;
  #L4f7730.  return v9 @kind object;
  #L4f7732.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f7734.  call `close`(v8) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L4f773a.  goto L4f7744;
  #L4f773c.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f773e.  call `addSuppressed`(v9, v8) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f7744.  throw v9;
  #L4f7746.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f7748.  call `close`(v7) @signature `Landroid/os/ParcelFileDescriptor;.close:()V` @kind virtual;
  #L4f774e.  goto L4f7758;
  #L4f7750.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f7752.  call `addSuppressed`(v8, v7) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f7758.  throw v8;
  #L4f775a.  return v0 @kind object;
  catch `java.io.IOException` @[L4f76d6..L4f76f0] goto L4f775a;
  catch `java.lang.Throwable` @[L4f76f2..L4f7704] goto L4f7746;
  catch `java.lang.Throwable` @[L4f7704..L4f7724] goto L4f7732;
  catch `java.lang.Throwable` @[L4f7724..L4f772a] goto L4f7746;
  catch `java.io.IOException` @[L4f772a..L4f7730] goto L4f775a;
  catch `java.lang.Throwable` @[L4f7734..L4f773a] goto L4f773c;
  catch `java.lang.Throwable` @[L4f773e..L4f7746] goto L4f7746;
  catch `java.lang.Throwable` @[L4f7748..L4f774e] goto L4f7750;
  catch `java.io.IOException` @[L4f7752..L4f775a] goto L4f775a;
}
procedure `java.nio.ByteBuffer` `g`(`java.io.File` v7 @kind object) @signature `Lq/l;.g:(Ljava/io/File;)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4f77c4.  v0:= new `java.io.FileInputStream`;
  #L4f77c8.  call `<init>`(v0, v7) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L4f77ce.  call temp:= `getChannel`(v0) @signature `Ljava/io/FileInputStream;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L4f77d4.  v1:= temp @kind object;
  #L4f77d6.  call temp:= `size`(v1) @signature `Ljava/nio/channels/FileChannel;.size:()J` @kind virtual;
  #L4f77dc.  v5:= temp @kind wide;
  #L4f77de.  v2:= `@@java.nio.channels.FileChannel$MapMode.READ_ONLY` @type ^`java.nio.channels.FileChannel$MapMode` @kind object;
  #L4f77e2.  v3:= 0L;
  #L4f77e6.  call temp:= `map`(v1, v2, v3, v5) @signature `Ljava/nio/channels/FileChannel;.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;` @kind virtual;
  #L4f77ec.  v7:= temp @kind object;
  #L4f77ee.  call `close`(v0) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L4f77f4.  return v7 @kind object;
  #L4f77f6.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f77f8.  call `close`(v0) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L4f77fe.  goto L4f7808;
  #L4f7800.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f7802.  call `addSuppressed`(v7, v0) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f7808.  throw v7;
  #L4f780a.  v7:= 0I;
  #L4f780c.  return v7 @kind object;
  catch `java.io.IOException` @[L4f77c4..L4f77ce] goto L4f780a;
  catch `java.lang.Throwable` @[L4f77ce..L4f77ee] goto L4f77f6;
  catch `java.io.IOException` @[L4f77ee..L4f77f4] goto L4f780a;
  catch `java.lang.Throwable` @[L4f77f8..L4f77fe] goto L4f7800;
  catch `java.io.IOException` @[L4f7802..L4f780a] goto L4f780a;
}
procedure `java.util.Map` `h`(`android.content.Context` v5 @kind object, `v.f$b`[] v6 @kind object, `android.os.CancellationSignal` v7 @kind object) @signature `Lq/l;.h:(Landroid/content/Context;[Lv/f$b;Landroid/os/CancellationSignal;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f7854.  v0:= new `java.util.HashMap`;
  #L4f7858.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4f785e.  v1:= length @variable v6;
  #L4f7860.  v2:= 0I;
  #L4f7862.  if v2 >= v1 then goto L4f78a2;
  #L4f7866.  v3:= v6[v2] @kind object;
  #L4f786a.  call temp:= `b`(v3) @signature `Lv/f$b;.b:()I` @kind virtual;
  #L4f7870.  v4:= temp;
  #L4f7872.  if v4 == 0 then goto L4f7878;
  #L4f7876.  goto L4f789c;
  #L4f7878.  call temp:= `d`(v3) @signature `Lv/f$b;.d:()Landroid/net/Uri;` @kind virtual;
  #L4f787e.  v3:= temp @kind object;
  #L4f7880.  call temp:= `containsKey`(v0, v3) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f7886.  v4:= temp;
  #L4f7888.  if v4 == 0 then goto L4f788e;
  #L4f788c.  goto L4f789c;
  #L4f788e.  call temp:= `f`(v5, v7, v3) @signature `Lq/l;.f:(Landroid/content/Context;Landroid/os/CancellationSignal;Landroid/net/Uri;)Ljava/nio/ByteBuffer;` @kind static;
  #L4f7894.  v4:= temp @kind object;
  #L4f7896.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4f789c.  v2:= v2 + 1;
  #L4f78a0.  goto L4f7862;
  #L4f78a2.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L4f78a8.  v5:= temp @kind object;
  #L4f78aa.  return v5 @kind object;
}
