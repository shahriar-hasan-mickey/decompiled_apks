record `q.k$a` @kind class @AccessFlag  extends `q.k$b` @kind interface {
  `q.k` `q.k$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`q.k$a` v0 @kind this, `q.k` v1 @kind object) @signature `Lq/k$a;.<init>:(Lq/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f726c.  v0.`q.k$a.a` @type ^`q.k` := v1 @kind object;
  #L4f7270.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f7276.  return @kind void;
}
procedure `int` `a`(`q.k$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lq/k$a;.a:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4f7230.  v1:= (`v.f$b`) v1 @kind object;
  #L4f7234.  call temp:= `c`(v0, v1) @signature `Lq/k$a;.c:(Lv/f$b;)I` @kind virtual;
  #L4f723a.  v1:= temp;
  #L4f723c.  return v1;
}
procedure `boolean` `b`(`q.k$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lq/k$a;.b:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4f71f4.  v1:= (`v.f$b`) v1 @kind object;
  #L4f71f8.  call temp:= `d`(v0, v1) @signature `Lq/k$a;.d:(Lv/f$b;)Z` @kind virtual;
  #L4f71fe.  v1:= temp;
  #L4f7200.  return v1;
}
procedure `int` `c`(`q.k$a` v0 @kind this, `v.f$b` v1 @kind object) @signature `Lq/k$a;.c:(Lv/f$b;)I` @AccessFlag PUBLIC {
    temp;

  #L4f7250.  call temp:= `e`(v1) @signature `Lv/f$b;.e:()I` @kind virtual;
  #L4f7256.  v1:= temp;
  #L4f7258.  return v1;
}
procedure `boolean` `d`(`q.k$a` v0 @kind this, `v.f$b` v1 @kind object) @signature `Lq/k$a;.d:(Lv/f$b;)Z` @AccessFlag PUBLIC {
    temp;

  #L4f7214.  call temp:= `f`(v1) @signature `Lv/f$b;.f:()Z` @kind virtual;
  #L4f721a.  v1:= temp;
  #L4f721c.  return v1;
}
