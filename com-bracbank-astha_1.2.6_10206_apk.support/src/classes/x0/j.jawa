record `x0.j` @kind class @AccessFlag PUBLIC_FINAL extends `x0.h` @kind interface {
  `java.util.Map` `x0.j.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `x0.j.d` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`x0.j` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lx0/j;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L50229c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5022a2.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L5022a8.  v1:= temp @kind object;
  #L5022aa.  v0.`x0.j.c` @type ^`java.util.Map` := v1 @kind object;
  #L5022ae.  return @kind void;
}
procedure `java.lang.String` `a`(`x0.j` v5 @kind this, `java.util.List` v6 @kind object) @signature `Lx0/j;.a:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L502114.  v0:= new `java.lang.StringBuilder`;
  #L502118.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50211e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L502124.  v1:= temp;
  #L502126.  v2:= 0I;
  #L502128.  if v2 >= v1 then goto L502172;
  #L50212c.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L502132.  v3:= temp @kind object;
  #L502134.  v3:= (`x0.i`) v3 @kind object;
  #L502138.  call temp:= `a`(v3) @signature `Lx0/i;.a:()Ljava/lang/String;` @kind interface;
  #L50213e.  v3:= temp @kind object;
  #L502140.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L502146.  v4:= temp;
  #L502148.  if v4 != 0 then goto L50216c;
  #L50214c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L502152.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L502158.  v3:= temp;
  #L50215a.  v3:= v3 + -1;
  #L50215e.  if v2 == v3 then goto L50216c;
  #L502162.  v3:= 44I;
  #L502166.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L50216c.  v2:= v2 + 1;
  #L502170.  goto L502128;
  #L502172.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L502178.  v6:= temp @kind object;
  #L50217a.  return v6 @kind object;
}
procedure `java.util.Map` `b`(`x0.j` v5 @kind this) @signature `Lx0/j;.b:()Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5021d0.  v0:= new `java.util.HashMap`;
  #L5021d4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L5021da.  v1:= v5.`x0.j.c` @type ^`java.util.Map` @kind object;
  #L5021de.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L5021e4.  v1:= temp @kind object;
  #L5021e6.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5021ec.  v1:= temp @kind object;
  #L5021ee.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5021f4.  v2:= temp;
  #L5021f6.  if v2 == 0 then goto L502236;
  #L5021fa.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L502200.  v2:= temp @kind object;
  #L502202.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L502206.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L50220c.  v3:= temp @kind object;
  #L50220e.  v3:= (`java.util.List`) v3 @kind object;
  #L502212.  call temp:= `a`(v5, v3) @signature `Lx0/j;.a:(Ljava/util/List;)Ljava/lang/String;` @kind direct;
  #L502218.  v3:= temp @kind object;
  #L50221a.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L502220.  v4:= temp;
  #L502222.  if v4 != 0 then goto L5021ee;
  #L502226.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L50222c.  v2:= temp @kind object;
  #L50222e.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L502234.  goto L5021ee;
  #L502236.  return v0 @kind object;
}
procedure `boolean` `equals`(`x0.j` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lx0/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5020c0.  v0:= instanceof @variable v2 @type ^`x0.j` @kind boolean;
  #L5020c4.  if v0 == 0 then goto L5020de;
  #L5020c8.  v2:= (`x0.j`) v2 @kind object;
  #L5020cc.  v0:= v1.`x0.j.c` @type ^`java.util.Map` @kind object;
  #L5020d0.  v2:= v2.`x0.j.c` @type ^`java.util.Map` @kind object;
  #L5020d4.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L5020da.  v2:= temp;
  #L5020dc.  return v2;
  #L5020de.  v2:= 0I;
  #L5020e0.  return v2;
}
procedure `java.util.Map` `getHeaders`(`x0.j` v1 @kind this) @signature `Lx0/j;.getHeaders:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L502248.  v0:= v1.`x0.j.d` @type ^`java.util.Map` @kind object;
  #L50224c.  if v0 != 0 then goto L502278;
  #L502250.  @monitorenter v1
  #L502252.  v0:= v1.`x0.j.d` @type ^`java.util.Map` @kind object;
  #L502256.  if v0 != 0 then goto L50226e;
  #L50225a.  call temp:= `b`(v1) @signature `Lx0/j;.b:()Ljava/util/Map;` @kind direct;
  #L502260.  v0:= temp @kind object;
  #L502262.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L502268.  v0:= temp @kind object;
  #L50226a.  v1.`x0.j.d` @type ^`java.util.Map` := v0 @kind object;
  #L50226e.  @monitorexit v1
  #L502270.  goto L502278;
  #L502272.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L502274.  @monitorexit v1
  #L502276.  throw v0;
  #L502278.  v0:= v1.`x0.j.d` @type ^`java.util.Map` @kind object;
  #L50227c.  return v0 @kind object;
  catch `java.lang.Throwable` @[L502252..L502276] goto L502272;
}
procedure `int` `hashCode`(`x0.j` v1 @kind this) @signature `Lx0/j;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5020f4.  v0:= v1.`x0.j.c` @type ^`java.util.Map` @kind object;
  #L5020f8.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L5020fe.  v0:= temp;
  #L502100.  return v0;
}
procedure `java.lang.String` `toString`(`x0.j` v2 @kind this) @signature `Lx0/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50218c.  v0:= new `java.lang.StringBuilder`;
  #L502190.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L502196.  v1:= "LazyHeaders{headers=" @kind object;
  #L50219a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5021a0.  v1:= v2.`x0.j.c` @type ^`java.util.Map` @kind object;
  #L5021a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5021aa.  v1:= 125I;
  #L5021ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L5021b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5021ba.  v0:= temp @kind object;
  #L5021bc.  return v0 @kind object;
}
