record `x0.p` @kind class @AccessFlag PUBLIC {
  `x0.r` `x0.p.a` @AccessFlag PRIVATE_FINAL;
  `x0.p$a` `x0.p.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x0.p` v1 @kind this, `x.e` v2 @kind object) @signature `Lx0/p;.<init>:(Lx/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L5029e0.  v0:= new `x0.r`;
  #L5029e4.  call `<init>`(v0, v2) @signature `Lx0/r;.<init>:(Lx/e;)V` @kind direct;
  #L5029ea.  call `<init>`(v1, v0) @signature `Lx0/p;.<init>:(Lx0/r;)V` @kind direct;
  #L5029f0.  return @kind void;
}
procedure `void` `<init>`(`x0.p` v1 @kind this, `x0.r` v2 @kind object) @signature `Lx0/p;.<init>:(Lx0/r;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L502a04.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L502a0a.  v0:= new `x0.p$a`;
  #L502a0e.  call `<init>`(v0) @signature `Lx0/p$a;.<init>:()V` @kind direct;
  #L502a14.  v1.`x0.p.b` @type ^`x0.p$a` := v0 @kind object;
  #L502a18.  v1.`x0.p.a` @type ^`x0.r` := v2 @kind object;
  #L502a1c.  return @kind void;
}
procedure `java.lang.Class` `b`(`java.lang.Object` v0 @kind object) @signature `Lx0/p;.b:(Ljava/lang/Object;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L502894.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L50289a.  v0:= temp @kind object;
  #L50289c.  return v0 @kind object;
}
procedure `java.util.List` `e`(`x0.p` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lx0/p;.e:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L502988.  @monitorenter v2
  #L50298a.  v0:= v2.`x0.p.b` @type ^`x0.p$a` @kind object;
  #L50298e.  call temp:= `b`(v0, v3) @signature `Lx0/p$a;.b:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L502994.  v0:= temp @kind object;
  #L502996.  if v0 != 0 then goto L5029b8;
  #L50299a.  v0:= v2.`x0.p.a` @type ^`x0.r` @kind object;
  #L50299e.  call temp:= `c`(v0, v3) @signature `Lx0/r;.c:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L5029a4.  v0:= temp @kind object;
  #L5029a6.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L5029ac.  v0:= temp @kind object;
  #L5029ae.  v1:= v2.`x0.p.b` @type ^`x0.p$a` @kind object;
  #L5029b2.  call `c`(v1, v3, v0) @signature `Lx0/p$a;.c:(Ljava/lang/Class;Ljava/util/List;)V` @kind virtual;
  #L5029b8.  @monitorexit v2
  #L5029ba.  return v0 @kind object;
  #L5029bc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5029be.  @monitorexit v2
  #L5029c0.  throw v3;
  catch `java.lang.Throwable` @[L50298a..L5029b8] goto L5029bc;
}
procedure `void` `a`(`x0.p` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `x0.o` v4 @kind object) @signature `Lx0/p;.a:(Ljava/lang/Class;Ljava/lang/Class;Lx0/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L502a30.  @monitorenter v1
  #L502a32.  v0:= v1.`x0.p.a` @type ^`x0.r` @kind object;
  #L502a36.  call `b`(v0, v2, v3, v4) @signature `Lx0/r;.b:(Ljava/lang/Class;Ljava/lang/Class;Lx0/o;)V` @kind virtual;
  #L502a3c.  v2:= v1.`x0.p.b` @type ^`x0.p$a` @kind object;
  #L502a40.  call `a`(v2) @signature `Lx0/p$a;.a:()V` @kind virtual;
  #L502a46.  @monitorexit v1
  #L502a48.  return @kind void;
  #L502a4a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L502a4c.  @monitorexit v1
  #L502a4e.  throw v2;
  catch `java.lang.Throwable` @[L502a32..L502a46] goto L502a4a;
}
procedure `java.util.List` `c`(`x0.p` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lx0/p;.c:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5028b0.  @monitorenter v1
  #L5028b2.  v0:= v1.`x0.p.a` @type ^`x0.r` @kind object;
  #L5028b6.  call temp:= `g`(v0, v2) @signature `Lx0/r;.g:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L5028bc.  v2:= temp @kind object;
  #L5028be.  @monitorexit v1
  #L5028c0.  return v2 @kind object;
  #L5028c2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5028c4.  @monitorexit v1
  #L5028c6.  throw v2;
  catch `java.lang.Throwable` @[L5028b2..L5028be] goto L5028c2;
}
procedure `java.util.List` `d`(`x0.p` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lx0/p;.d:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L5028e4.  call temp:= `b`(v9) @signature `Lx0/p;.b:(Ljava/lang/Object;)Ljava/lang/Class;` @kind static;
  #L5028ea.  v0:= temp @kind object;
  #L5028ec.  call temp:= `e`(v8, v0) @signature `Lx0/p;.e:(Ljava/lang/Class;)Ljava/util/List;` @kind direct;
  #L5028f2.  v0:= temp @kind object;
  #L5028f4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L5028fa.  v1:= temp;
  #L5028fc.  if v1 != 0 then goto L50296c;
  #L502900.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L502906.  v1:= temp;
  #L502908.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L50290e.  v2:= temp @kind object;
  #L502910.  v3:= 0I;
  #L502912.  v4:= 1I;
  #L502914.  v5:= 0I;
  #L502916.  if v5 >= v1 then goto L502952;
  #L50291a.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L502920.  v6:= temp @kind object;
  #L502922.  v6:= (`x0.n`) v6 @kind object;
  #L502926.  call temp:= `b`(v6, v9) @signature `Lx0/n;.b:(Ljava/lang/Object;)Z` @kind interface;
  #L50292c.  v7:= temp;
  #L50292e.  if v7 == 0 then goto L50294c;
  #L502932.  if v4 == 0 then goto L502946;
  #L502936.  v2:= new `java.util.ArrayList`;
  #L50293a.  v4:= v1 - v5 @kind int;
  #L50293e.  call `<init>`(v2, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L502944.  v4:= 0I;
  #L502946.  call temp:= `add`(v2, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L50294c.  v5:= v5 + 1;
  #L502950.  goto L502916;
  #L502952.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L502958.  v1:= temp;
  #L50295a.  if v1 != 0 then goto L502960;
  #L50295e.  return v2 @kind object;
  #L502960.  v1:= new `com.bumptech.glide.Registry$NoModelLoaderAvailableException`;
  #L502964.  call `<init>`(v1, v9, v0) @signature `Lcom/bumptech/glide/Registry$NoModelLoaderAvailableException;.<init>:(Ljava/lang/Object;Ljava/util/List;)V` @kind direct;
  #L50296a.  throw v1;
  #L50296c.  v0:= new `com.bumptech.glide.Registry$NoModelLoaderAvailableException`;
  #L502970.  call `<init>`(v0, v9) @signature `Lcom/bumptech/glide/Registry$NoModelLoaderAvailableException;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L502976.  throw v0;
}
