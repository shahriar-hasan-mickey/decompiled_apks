record `x0.v$b` @kind class @AccessFlag  extends `r0.d` @kind interface {
  `java.lang.Object` `x0.v$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x0.v$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lx0/v$b;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L503908.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50390e.  v0.`x0.v$b.a` @type ^`java.lang.Object` := v1 @kind object;
  #L503912.  return @kind void;
}
procedure `java.lang.Class` `a`(`x0.v$b` v1 @kind this) @signature `Lx0/v$b;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5038e8.  v0:= v1.`x0.v$b.a` @type ^`java.lang.Object` @kind object;
  #L5038ec.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L5038f2.  v0:= temp @kind object;
  #L5038f4.  return v0 @kind object;
}
procedure `void` `b`(`x0.v$b` v0 @kind this) @signature `Lx0/v$b;.b:()V` @AccessFlag PUBLIC {
    temp;

  #L503938.  return @kind void;
}
procedure `void` `cancel`(`x0.v$b` v0 @kind this) @signature `Lx0/v$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L503924.  return @kind void;
}
procedure `com.bumptech.glide.load.DataSource` `d`(`x0.v$b` v1 @kind this) @signature `Lx0/v$b;.d:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5038d0.  v0:= `@@com.bumptech.glide.load.DataSource.a` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L5038d4.  return v0 @kind object;
}
procedure `void` `e`(`x0.v$b` v0 @kind this, `com.bumptech.glide.Priority` v1 @kind object, `r0.d$a` v2 @kind object) @signature `Lx0/v$b;.e:(Lcom/bumptech/glide/Priority;Lr0/d$a;)V` @AccessFlag PUBLIC {
    temp;

  #L50394c.  v1:= v0.`x0.v$b.a` @type ^`java.lang.Object` @kind object;
  #L503950.  call `f`(v2, v1) @signature `Lr0/d$a;.f:(Ljava/lang/Object;)V` @kind interface;
  #L503956.  return @kind void;
}
