record `x0.b$d$a` @kind class @AccessFlag  extends `x0.b$b` @kind interface {
  `x0.b$d` `x0.b$d$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x0.b$d$a` v0 @kind this, `x0.b$d` v1 @kind object) @signature `Lx0/b$d$a;.<init>:(Lx0/b$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5010a4.  v0.`x0.b$d$a.a` @type ^`x0.b$d` := v1 @kind object;
  #L5010a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5010ae.  return @kind void;
}
procedure `java.lang.Class` `a`(`x0.b$d$a` v1 @kind this) @signature `Lx0/b$d$a;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501070.  v0:= constclass @type ^`java.io.InputStream` @kind object;
  #L501074.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`x0.b$d$a` v0 @kind this, `byte`[] v1 @kind object) @signature `Lx0/b$d$a;.b:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L501088.  call temp:= `c`(v0, v1) @signature `Lx0/b$d$a;.c:([B)Ljava/io/InputStream;` @kind virtual;
  #L50108e.  v1:= temp @kind object;
  #L501090.  return v1 @kind object;
}
procedure `java.io.InputStream` `c`(`x0.b$d$a` v1 @kind this, `byte`[] v2 @kind object) @signature `Lx0/b$d$a;.c:([B)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501054.  v0:= new `java.io.ByteArrayInputStream`;
  #L501058.  call `<init>`(v0, v2) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L50105e.  return v0 @kind object;
}
