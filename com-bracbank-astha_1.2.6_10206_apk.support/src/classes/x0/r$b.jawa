record `x0.r$b` @kind class @AccessFlag  {
  `java.lang.Class` `x0.r$b.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `x0.r$b.b` @AccessFlag FINAL;
  `x0.o` `x0.r$b.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`x0.r$b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `x0.o` v3 @kind object) @signature `Lx0/r$b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lx0/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L502d50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L502d56.  v0.`x0.r$b.a` @type ^`java.lang.Class` := v1 @kind object;
  #L502d5a.  v0.`x0.r$b.b` @type ^`java.lang.Class` := v2 @kind object;
  #L502d5e.  v0.`x0.r$b.c` @type ^`x0.o` := v3 @kind object;
  #L502d62.  return @kind void;
}
procedure `boolean` `a`(`x0.r$b` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lx0/r$b;.a:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L502cfc.  v0:= v1.`x0.r$b.a` @type ^`java.lang.Class` @kind object;
  #L502d00.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L502d06.  v2:= temp;
  #L502d08.  return v2;
}
procedure `boolean` `b`(`x0.r$b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lx0/r$b;.b:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;

  #L502d1c.  call temp:= `a`(v0, v1) @signature `Lx0/r$b;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L502d22.  v1:= temp;
  #L502d24.  if v1 == 0 then goto L502d3c;
  #L502d28.  v1:= v0.`x0.r$b.b` @type ^`java.lang.Class` @kind object;
  #L502d2c.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L502d32.  v1:= temp;
  #L502d34.  if v1 == 0 then goto L502d3c;
  #L502d38.  v1:= 1I;
  #L502d3a.  goto L502d3e;
  #L502d3c.  v1:= 0I;
  #L502d3e.  return v1;
}
