record `x0.b$c` @kind class @AccessFlag  extends `r0.d` @kind interface {
  `byte`[] `x0.b$c.a` @AccessFlag PRIVATE_FINAL;
  `x0.b$b` `x0.b$c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x0.b$c` v0 @kind this, `byte`[] v1 @kind object, `x0.b$b` v2 @kind object) @signature `Lx0/b$c;.<init>:([BLx0/b$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L500fe4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L500fea.  v0.`x0.b$c.a` @type ^`byte`[] := v1 @kind object;
  #L500fee.  v0.`x0.b$c.b` @type ^`x0.b$b` := v2 @kind object;
  #L500ff2.  return @kind void;
}
procedure `java.lang.Class` `a`(`x0.b$c` v1 @kind this) @signature `Lx0/b$c;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500fc4.  v0:= v1.`x0.b$c.b` @type ^`x0.b$b` @kind object;
  #L500fc8.  call temp:= `a`(v0) @signature `Lx0/b$b;.a:()Ljava/lang/Class;` @kind interface;
  #L500fce.  v0:= temp @kind object;
  #L500fd0.  return v0 @kind object;
}
procedure `void` `b`(`x0.b$c` v0 @kind this) @signature `Lx0/b$c;.b:()V` @AccessFlag PUBLIC {
    temp;

  #L501018.  return @kind void;
}
procedure `void` `cancel`(`x0.b$c` v0 @kind this) @signature `Lx0/b$c;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L501004.  return @kind void;
}
procedure `com.bumptech.glide.load.DataSource` `d`(`x0.b$c` v1 @kind this) @signature `Lx0/b$c;.d:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500fac.  v0:= `@@com.bumptech.glide.load.DataSource.a` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L500fb0.  return v0 @kind object;
}
procedure `void` `e`(`x0.b$c` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object, `r0.d$a` v3 @kind object) @signature `Lx0/b$c;.e:(Lcom/bumptech/glide/Priority;Lr0/d$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50102c.  v2:= v1.`x0.b$c.b` @type ^`x0.b$b` @kind object;
  #L501030.  v0:= v1.`x0.b$c.a` @type ^`byte`[] @kind object;
  #L501034.  call temp:= `b`(v2, v0) @signature `Lx0/b$b;.b:([B)Ljava/lang/Object;` @kind interface;
  #L50103a.  v2:= temp @kind object;
  #L50103c.  call `f`(v3, v2) @signature `Lr0/d$a;.f:(Ljava/lang/Object;)V` @kind interface;
  #L501042.  return @kind void;
}
