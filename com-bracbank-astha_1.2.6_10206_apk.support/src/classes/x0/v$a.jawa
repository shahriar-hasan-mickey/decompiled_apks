record `x0.v$a` @kind class @AccessFlag PUBLIC extends `x0.o` @kind interface {
}
global `x0.v$a` `@@x0.v$a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx0/v$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L503864.  v0:= new `x0.v$a`;
  #L503868.  call `<init>`(v0) @signature `Lx0/v$a;.<init>:()V` @kind direct;
  #L50386e.  `@@x0.v$a.a` @type ^`x0.v$a` := v0 @kind object;
  #L503872.  return @kind void;
}
procedure `void` `<init>`(`x0.v$a` v0 @kind this) @signature `Lx0/v$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L503884.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50388a.  return @kind void;
}
procedure `x0.v$a` `b`() @signature `Lx0/v$a;.b:()Lx0/v$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5038b8.  v0:= `@@x0.v$a.a` @type ^`x0.v$a` @kind object;
  #L5038bc.  return v0 @kind object;
}
procedure `x0.n` `a`(`x0.v$a` v0 @kind this, `x0.r` v1 @kind object) @signature `Lx0/v$a;.a:(Lx0/r;)Lx0/n;` @AccessFlag PUBLIC {
    temp;

  #L50389c.  call temp:= `c`() @signature `Lx0/v;.c:()Lx0/v;` @kind static;
  #L5038a2.  v1:= temp @kind object;
  #L5038a4.  return v1 @kind object;
}
