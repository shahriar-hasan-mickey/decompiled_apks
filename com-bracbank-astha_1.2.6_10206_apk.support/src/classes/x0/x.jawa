record `x0.x` @kind class @AccessFlag PUBLIC extends `x0.n` @kind interface {
  `x0.n` `x0.x.a` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Set` `@@x0.x.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx0/x;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L503c8c.  v0:= new `java.util.HashSet`;
  #L503c90.  v1:= "http" @kind object;
  #L503c94.  v2:= "https" @kind object;
  #L503c98.  temp:= new `java.lang.String`[v1, v2];
  #L503c9e.  v1:= temp @kind object;
  #L503ca0.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L503ca6.  v1:= temp @kind object;
  #L503ca8.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L503cae.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L503cb4.  v0:= temp @kind object;
  #L503cb6.  `@@x0.x.b` @type ^`java.util.Set` := v0 @kind object;
  #L503cba.  return @kind void;
}
procedure `void` `<init>`(`x0.x` v0 @kind this, `x0.n` v1 @kind object) @signature `Lx0/x;.<init>:(Lx0/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L503ccc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L503cd2.  v0.`x0.x.a` @type ^`x0.n` := v1 @kind object;
  #L503cd6.  return @kind void;
}
procedure `x0.n$a` `a`(`x0.x` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `q0.d` v4 @kind object) @signature `Lx0/x;.a:(Ljava/lang/Object;IILq0/d;)Lx0/n$a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L503d18.  v1:= (`android.net.Uri`) v1 @kind object;
  #L503d1c.  call temp:= `c`(v0, v1, v2, v3, v4) @signature `Lx0/x;.c:(Landroid/net/Uri;IILq0/d;)Lx0/n$a;` @kind virtual;
  #L503d22.  v1:= temp @kind object;
  #L503d24.  return v1 @kind object;
}
procedure `boolean` `b`(`x0.x` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lx0/x;.b:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L503c6c.  v1:= (`android.net.Uri`) v1 @kind object;
  #L503c70.  call temp:= `d`(v0, v1) @signature `Lx0/x;.d:(Landroid/net/Uri;)Z` @kind virtual;
  #L503c76.  v1:= temp;
  #L503c78.  return v1;
}
procedure `x0.n$a` `c`(`x0.x` v1 @kind this, `android.net.Uri` v2 @kind object, `int` v3 , `int` v4 , `q0.d` v5 @kind object) @signature `Lx0/x;.c:(Landroid/net/Uri;IILq0/d;)Lx0/n$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503ce8.  v0:= new `x0.g`;
  #L503cec.  call temp:= `toString`(v2) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L503cf2.  v2:= temp @kind object;
  #L503cf4.  call `<init>`(v0, v2) @signature `Lx0/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L503cfa.  v2:= v1.`x0.x.a` @type ^`x0.n` @kind object;
  #L503cfe.  call temp:= `a`(v2, v0, v3, v4, v5) @signature `Lx0/n;.a:(Ljava/lang/Object;IILq0/d;)Lx0/n$a;` @kind interface;
  #L503d04.  v2:= temp @kind object;
  #L503d06.  return v2 @kind object;
}
procedure `boolean` `d`(`x0.x` v1 @kind this, `android.net.Uri` v2 @kind object) @signature `Lx0/x;.d:(Landroid/net/Uri;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503c44.  v0:= `@@x0.x.b` @type ^`java.util.Set` @kind object;
  #L503c48.  call temp:= `getScheme`(v2) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L503c4e.  v2:= temp @kind object;
  #L503c50.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L503c56.  v2:= temp;
  #L503c58.  return v2;
}
