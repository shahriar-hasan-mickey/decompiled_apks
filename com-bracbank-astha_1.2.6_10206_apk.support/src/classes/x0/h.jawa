record `x0.h` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `x0.h` `@@x0.h.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `x0.h` `@@x0.h.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx0/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L501cc8.  v0:= new `x0.h$a`;
  #L501ccc.  call `<init>`(v0) @signature `Lx0/h$a;.<init>:()V` @kind direct;
  #L501cd2.  `@@x0.h.a` @type ^`x0.h` := v0 @kind object;
  #L501cd6.  v0:= new `x0.j$a`;
  #L501cda.  call `<init>`(v0) @signature `Lx0/j$a;.<init>:()V` @kind direct;
  #L501ce0.  call temp:= `c`(v0) @signature `Lx0/j$a;.c:()Lx0/j;` @kind virtual;
  #L501ce6.  v0:= temp @kind object;
  #L501ce8.  `@@x0.h.b` @type ^`x0.h` := v0 @kind object;
  #L501cec.  return @kind void;
}
procedure `java.util.Map` `getHeaders`() @signature `Lx0/h;.getHeaders:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
