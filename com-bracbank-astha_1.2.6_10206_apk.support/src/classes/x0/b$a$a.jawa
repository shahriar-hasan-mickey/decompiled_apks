record `x0.b$a$a` @kind class @AccessFlag  extends `x0.b$b` @kind interface {
  `x0.b$a` `x0.b$a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x0.b$a$a` v0 @kind this, `x0.b$a` v1 @kind object) @signature `Lx0/b$a$a;.<init>:(Lx0/b$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L500f50.  v0.`x0.b$a$a.a` @type ^`x0.b$a` := v1 @kind object;
  #L500f54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L500f5a.  return @kind void;
}
procedure `java.lang.Class` `a`(`x0.b$a$a` v1 @kind this) @signature `Lx0/b$a$a;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500f00.  v0:= constclass @type ^`java.nio.ByteBuffer` @kind object;
  #L500f04.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`x0.b$a$a` v0 @kind this, `byte`[] v1 @kind object) @signature `Lx0/b$a$a;.b:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L500f18.  call temp:= `c`(v0, v1) @signature `Lx0/b$a$a;.c:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L500f1e.  v1:= temp @kind object;
  #L500f20.  return v1 @kind object;
}
procedure `java.nio.ByteBuffer` `c`(`x0.b$a$a` v0 @kind this, `byte`[] v1 @kind object) @signature `Lx0/b$a$a;.c:([B)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;

  #L500f34.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L500f3a.  v1:= temp @kind object;
  #L500f3c.  return v1 @kind object;
}
