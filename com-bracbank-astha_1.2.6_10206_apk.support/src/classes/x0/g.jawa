record `x0.g` @kind class @AccessFlag PUBLIC extends `q0.b` @kind interface {
  `x0.h` `x0.g.b` @AccessFlag PRIVATE_FINAL;
  `java.net.URL` `x0.g.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `x0.g.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `x0.g.e` @AccessFlag PRIVATE;
  `java.net.URL` `x0.g.f` @AccessFlag PRIVATE;
  `byte`[] `x0.g.g` @AccessFlag PRIVATE_VOLATILE;
  `int` `x0.g.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`x0.g` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lx0/g;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L501bc0.  v0:= `@@x0.h.b` @type ^`x0.h` @kind object;
  #L501bc4.  call `<init>`(v1, v2, v0) @signature `Lx0/g;.<init>:(Ljava/lang/String;Lx0/h;)V` @kind direct;
  #L501bca.  return @kind void;
}
procedure `void` `<init>`(`x0.g` v1 @kind this, `java.lang.String` v2 @kind object, `x0.h` v3 @kind object) @signature `Lx0/g;.<init>:(Ljava/lang/String;Lx0/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L501bdc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L501be2.  v0:= 0I;
  #L501be4.  v1.`x0.g.c` @type ^`java.net.URL` := v0 @kind object;
  #L501be8.  call temp:= `b`(v2) @signature `Ln1/j;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L501bee.  v2:= temp @kind object;
  #L501bf0.  v1.`x0.g.d` @type ^`java.lang.String` := v2 @kind object;
  #L501bf4.  call temp:= `d`(v3) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L501bfa.  v2:= temp @kind object;
  #L501bfc.  v2:= (`x0.h`) v2 @kind object;
  #L501c00.  v1.`x0.g.b` @type ^`x0.h` := v2 @kind object;
  #L501c04.  return @kind void;
}
procedure `void` `<init>`(`x0.g` v1 @kind this, `java.net.URL` v2 @kind object) @signature `Lx0/g;.<init>:(Ljava/net/URL;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L501c18.  v0:= `@@x0.h.b` @type ^`x0.h` @kind object;
  #L501c1c.  call `<init>`(v1, v2, v0) @signature `Lx0/g;.<init>:(Ljava/net/URL;Lx0/h;)V` @kind direct;
  #L501c22.  return @kind void;
}
procedure `void` `<init>`(`x0.g` v0 @kind this, `java.net.URL` v1 @kind object, `x0.h` v2 @kind object) @signature `Lx0/g;.<init>:(Ljava/net/URL;Lx0/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L501c34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L501c3a.  call temp:= `d`(v1) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L501c40.  v1:= temp @kind object;
  #L501c42.  v1:= (`java.net.URL`) v1 @kind object;
  #L501c46.  v0.`x0.g.c` @type ^`java.net.URL` := v1 @kind object;
  #L501c4a.  v1:= 0I;
  #L501c4c.  v0.`x0.g.d` @type ^`java.lang.String` := v1 @kind object;
  #L501c50.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L501c56.  v1:= temp @kind object;
  #L501c58.  v1:= (`x0.h`) v1 @kind object;
  #L501c5c.  v0.`x0.g.b` @type ^`x0.h` := v1 @kind object;
  #L501c60.  return @kind void;
}
procedure `byte`[] `d`(`x0.g` v2 @kind this) @signature `Lx0/g;.d:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L501a20.  v0:= v2.`x0.g.g` @type ^`byte`[] @kind object;
  #L501a24.  if v0 != 0 then goto L501a40;
  #L501a28.  call temp:= `c`(v2) @signature `Lx0/g;.c:()Ljava/lang/String;` @kind virtual;
  #L501a2e.  v0:= temp @kind object;
  #L501a30.  v1:= `@@q0.b.a` @type ^`java.nio.charset.Charset` @kind object;
  #L501a34.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L501a3a.  v0:= temp @kind object;
  #L501a3c.  v2.`x0.g.g` @type ^`byte`[] := v0 @kind object;
  #L501a40.  v0:= v2.`x0.g.g` @type ^`byte`[] @kind object;
  #L501a44.  return v0 @kind object;
}
procedure `java.lang.String` `f`(`x0.g` v2 @kind this) @signature `Lx0/g;.f:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L501ad4.  v0:= v2.`x0.g.e` @type ^`java.lang.String` @kind object;
  #L501ad8.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L501ade.  v0:= temp;
  #L501ae0.  if v0 == 0 then goto L501b1c;
  #L501ae4.  v0:= v2.`x0.g.d` @type ^`java.lang.String` @kind object;
  #L501ae8.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L501aee.  v1:= temp;
  #L501af0.  if v1 == 0 then goto L501b0c;
  #L501af4.  v0:= v2.`x0.g.c` @type ^`java.net.URL` @kind object;
  #L501af8.  call temp:= `d`(v0) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L501afe.  v0:= temp @kind object;
  #L501b00.  v0:= (`java.net.URL`) v0 @kind object;
  #L501b04.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L501b0a.  v0:= temp @kind object;
  #L501b0c.  v1:= "@#&=*+-_.,:!?()/~'%;$" @kind object;
  #L501b10.  call temp:= `encode`(v0, v1) @signature `Landroid/net/Uri;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L501b16.  v0:= temp @kind object;
  #L501b18.  v2.`x0.g.e` @type ^`java.lang.String` := v0 @kind object;
  #L501b1c.  v0:= v2.`x0.g.e` @type ^`java.lang.String` @kind object;
  #L501b20.  return v0 @kind object;
}
procedure `java.net.URL` `g`(`x0.g` v2 @kind this) @signature `Lx0/g;.g:()Ljava/net/URL;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L501b50.  v0:= v2.`x0.g.f` @type ^`java.net.URL` @kind object;
  #L501b54.  if v0 != 0 then goto L501b6e;
  #L501b58.  v0:= new `java.net.URL`;
  #L501b5c.  call temp:= `f`(v2) @signature `Lx0/g;.f:()Ljava/lang/String;` @kind direct;
  #L501b62.  v1:= temp @kind object;
  #L501b64.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L501b6a.  v2.`x0.g.f` @type ^`java.net.URL` := v0 @kind object;
  #L501b6e.  v0:= v2.`x0.g.f` @type ^`java.net.URL` @kind object;
  #L501b72.  return v0 @kind object;
}
procedure `void` `a`(`x0.g` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lx0/g;.a:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501c74.  call temp:= `d`(v1) @signature `Lx0/g;.d:()[B` @kind direct;
  #L501c7a.  v0:= temp @kind object;
  #L501c7c.  call `update`(v2, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L501c82.  return @kind void;
}
procedure `java.lang.String` `c`(`x0.g` v1 @kind this) @signature `Lx0/g;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501aa0.  v0:= v1.`x0.g.d` @type ^`java.lang.String` @kind object;
  #L501aa4.  if v0 == 0 then goto L501aaa;
  #L501aa8.  goto L501ac2;
  #L501aaa.  v0:= v1.`x0.g.c` @type ^`java.net.URL` @kind object;
  #L501aae.  call temp:= `d`(v0) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L501ab4.  v0:= temp @kind object;
  #L501ab6.  v0:= (`java.net.URL`) v0 @kind object;
  #L501aba.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L501ac0.  v0:= temp @kind object;
  #L501ac2.  return v0 @kind object;
}
procedure `java.util.Map` `e`(`x0.g` v1 @kind this) @signature `Lx0/g;.e:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501ba0.  v0:= v1.`x0.g.b` @type ^`x0.h` @kind object;
  #L501ba4.  call temp:= `getHeaders`(v0) @signature `Lx0/h;.getHeaders:()Ljava/util/Map;` @kind interface;
  #L501baa.  v0:= temp @kind object;
  #L501bac.  return v0 @kind object;
}
procedure `boolean` `equals`(`x0.g` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lx0/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5019cc.  v0:= instanceof @variable v4 @type ^`x0.g` @kind boolean;
  #L5019d0.  v1:= 0I;
  #L5019d2.  if v0 == 0 then goto L501a0c;
  #L5019d6.  v4:= (`x0.g`) v4 @kind object;
  #L5019da.  call temp:= `c`(v3) @signature `Lx0/g;.c:()Ljava/lang/String;` @kind virtual;
  #L5019e0.  v0:= temp @kind object;
  #L5019e2.  call temp:= `c`(v4) @signature `Lx0/g;.c:()Ljava/lang/String;` @kind virtual;
  #L5019e8.  v2:= temp @kind object;
  #L5019ea.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L5019f0.  v0:= temp;
  #L5019f2.  if v0 == 0 then goto L501a0c;
  #L5019f6.  v0:= v3.`x0.g.b` @type ^`x0.h` @kind object;
  #L5019fa.  v4:= v4.`x0.g.b` @type ^`x0.h` @kind object;
  #L5019fe.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L501a04.  v4:= temp;
  #L501a06.  if v4 == 0 then goto L501a0c;
  #L501a0a.  v1:= 1I;
  #L501a0c.  return v1;
}
procedure `java.net.URL` `h`(`x0.g` v1 @kind this) @signature `Lx0/g;.h:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501b84.  call temp:= `g`(v1) @signature `Lx0/g;.g:()Ljava/net/URL;` @kind direct;
  #L501b8a.  v0:= temp @kind object;
  #L501b8c.  return v0 @kind object;
}
procedure `int` `hashCode`(`x0.g` v2 @kind this) @signature `Lx0/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L501a58.  v0:= v2.`x0.g.h` @type ^`int`;
  #L501a5c.  if v0 != 0 then goto L501a8a;
  #L501a60.  call temp:= `c`(v2) @signature `Lx0/g;.c:()Ljava/lang/String;` @kind virtual;
  #L501a66.  v0:= temp @kind object;
  #L501a68.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L501a6e.  v0:= temp;
  #L501a70.  v2.`x0.g.h` @type ^`int` := v0;
  #L501a74.  v0:= v0 * 31;
  #L501a78.  v1:= v2.`x0.g.b` @type ^`x0.h` @kind object;
  #L501a7c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L501a82.  v1:= temp;
  #L501a84.  v0:= v0 + v1 @kind int;
  #L501a86.  v2.`x0.g.h` @type ^`int` := v0;
  #L501a8a.  v0:= v2.`x0.g.h` @type ^`int`;
  #L501a8e.  return v0;
}
procedure `java.lang.String` `toString`(`x0.g` v1 @kind this) @signature `Lx0/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501b34.  call temp:= `c`(v1) @signature `Lx0/g;.c:()Ljava/lang/String;` @kind virtual;
  #L501b3a.  v0:= temp @kind object;
  #L501b3c.  return v0 @kind object;
}
