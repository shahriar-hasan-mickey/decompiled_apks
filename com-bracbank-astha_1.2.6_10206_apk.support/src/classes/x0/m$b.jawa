record `x0.m$b` @kind class @AccessFlag FINAL {
  `int` `x0.m$b.a` @AccessFlag PRIVATE;
  `int` `x0.m$b.b` @AccessFlag PRIVATE;
  `java.lang.Object` `x0.m$b.c` @AccessFlag PRIVATE;
}
global `java.util.Queue` `@@x0.m$b.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx0/m$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L5025e4.  v0:= 0I;
  #L5025e6.  call temp:= `e`(v0) @signature `Ln1/k;.e:(I)Ljava/util/Queue;` @kind static;
  #L5025ec.  v0:= temp @kind object;
  #L5025ee.  `@@x0.m$b.d` @type ^`java.util.Queue` := v0 @kind object;
  #L5025f2.  return @kind void;
}
procedure `void` `<init>`(`x0.m$b` v0 @kind this) @signature `Lx0/m$b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L502604.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50260a.  return @kind void;
}
procedure `x0.m$b` `a`(`java.lang.Object` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lx0/m$b;.a:(Ljava/lang/Object;II)Lx0/m$b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L502670.  v0:= `@@x0.m$b.d` @type ^`java.util.Queue` @kind object;
  #L502674.  @monitorenter v0
  #L502676.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L50267c.  v1:= temp @kind object;
  #L50267e.  v1:= (`x0.m$b`) v1 @kind object;
  #L502682.  @monitorexit v0
  #L502684.  if v1 != 0 then goto L502692;
  #L502688.  v1:= new `x0.m$b`;
  #L50268c.  call `<init>`(v1) @signature `Lx0/m$b;.<init>:()V` @kind direct;
  #L502692.  call `b`(v1, v2, v3, v4) @signature `Lx0/m$b;.b:(Ljava/lang/Object;II)V` @kind direct;
  #L502698.  return v1 @kind object;
  #L50269a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L50269c.  @monitorexit v0
  #L50269e.  throw v2;
  catch `java.lang.Throwable` @[L502676..L502684] goto L50269a;
  catch `java.lang.Throwable` @[L50269c..L50269e] goto L50269a;
}
procedure `void` `b`(`x0.m$b` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lx0/m$b;.b:(Ljava/lang/Object;II)V` @AccessFlag PRIVATE {
    temp;

  #L50261c.  v0.`x0.m$b.c` @type ^`java.lang.Object` := v1 @kind object;
  #L502620.  v0.`x0.m$b.b` @type ^`int` := v2;
  #L502624.  v0.`x0.m$b.a` @type ^`int` := v3;
  #L502628.  return @kind void;
}
procedure `void` `c`(`x0.m$b` v2 @kind this) @signature `Lx0/m$b;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50263c.  v0:= `@@x0.m$b.d` @type ^`java.util.Queue` @kind object;
  #L502640.  @monitorenter v0
  #L502642.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L502648.  @monitorexit v0
  #L50264a.  return @kind void;
  #L50264c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L50264e.  @monitorexit v0
  #L502650.  throw v1;
  catch `java.lang.Throwable` @[L502642..L502650] goto L50264c;
}
procedure `boolean` `equals`(`x0.m$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lx0/m$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L502560.  v0:= instanceof @variable v4 @type ^`x0.m$b` @kind boolean;
  #L502564.  v1:= 0I;
  #L502566.  if v0 == 0 then goto L50259c;
  #L50256a.  v4:= (`x0.m$b`) v4 @kind object;
  #L50256e.  v0:= v3.`x0.m$b.b` @type ^`int`;
  #L502572.  v2:= v4.`x0.m$b.b` @type ^`int`;
  #L502576.  if v0 != v2 then goto L50259c;
  #L50257a.  v0:= v3.`x0.m$b.a` @type ^`int`;
  #L50257e.  v2:= v4.`x0.m$b.a` @type ^`int`;
  #L502582.  if v0 != v2 then goto L50259c;
  #L502586.  v0:= v3.`x0.m$b.c` @type ^`java.lang.Object` @kind object;
  #L50258a.  v4:= v4.`x0.m$b.c` @type ^`java.lang.Object` @kind object;
  #L50258e.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L502594.  v4:= temp;
  #L502596.  if v4 == 0 then goto L50259c;
  #L50259a.  v1:= 1I;
  #L50259c.  return v1;
}
procedure `int` `hashCode`(`x0.m$b` v2 @kind this) @signature `Lx0/m$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5025b0.  v0:= v2.`x0.m$b.a` @type ^`int`;
  #L5025b4.  v0:= v0 * 31;
  #L5025b8.  v1:= v2.`x0.m$b.b` @type ^`int`;
  #L5025bc.  v0:= v0 + v1 @kind int;
  #L5025be.  v0:= v0 * 31;
  #L5025c2.  v1:= v2.`x0.m$b.c` @type ^`java.lang.Object` @kind object;
  #L5025c6.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L5025cc.  v1:= temp;
  #L5025ce.  v0:= v0 + v1 @kind int;
  #L5025d0.  return v0;
}
