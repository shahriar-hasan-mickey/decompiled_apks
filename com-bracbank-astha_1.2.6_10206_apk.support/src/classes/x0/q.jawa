record `x0.q` @kind class @AccessFlag  extends `x0.n` @kind interface {
  `java.util.List` `x0.q.a` @AccessFlag PRIVATE_FINAL;
  `x.e` `x0.q.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x0.q` v0 @kind this, `java.util.List` v1 @kind object, `x.e` v2 @kind object) @signature `Lx0/q;.<init>:(Ljava/util/List;Lx/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5031d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5031da.  v0.`x0.q.a` @type ^`java.util.List` := v1 @kind object;
  #L5031de.  v0.`x0.q.b` @type ^`x.e` := v2 @kind object;
  #L5031e2.  return @kind void;
}
procedure `x0.n$a` `a`(`x0.q` v7 @kind this, `java.lang.Object` v8 @kind object, `int` v9 , `int` v10 , `q0.d` v11 @kind object) @signature `Lx0/q;.a:(Ljava/lang/Object;IILq0/d;)Lx0/n$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L5031f4.  v0:= v7.`x0.q.a` @type ^`java.util.List` @kind object;
  #L5031f8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L5031fe.  v0:= temp;
  #L503200.  v1:= new `java.util.ArrayList`;
  #L503204.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L50320a.  v2:= 0I;
  #L50320c.  v3:= 0I;
  #L50320e.  v4:= v2 @kind object;
  #L503210.  if v3 >= v0 then goto L503250;
  #L503214.  v5:= v7.`x0.q.a` @type ^`java.util.List` @kind object;
  #L503218.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L50321e.  v5:= temp @kind object;
  #L503220.  v5:= (`x0.n`) v5 @kind object;
  #L503224.  call temp:= `b`(v5, v8) @signature `Lx0/n;.b:(Ljava/lang/Object;)Z` @kind interface;
  #L50322a.  v6:= temp;
  #L50322c.  if v6 == 0 then goto L50324a;
  #L503230.  call temp:= `a`(v5, v8, v9, v10, v11) @signature `Lx0/n;.a:(Ljava/lang/Object;IILq0/d;)Lx0/n$a;` @kind interface;
  #L503236.  v5:= temp @kind object;
  #L503238.  if v5 == 0 then goto L50324a;
  #L50323c.  v4:= v5.`x0.n$a.a` @type ^`q0.b` @kind object;
  #L503240.  v5:= v5.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L503244.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L50324a.  v3:= v3 + 1;
  #L50324e.  goto L503210;
  #L503250.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L503256.  v8:= temp;
  #L503258.  if v8 != 0 then goto L503278;
  #L50325c.  if v4 == 0 then goto L503278;
  #L503260.  v2:= new `x0.n$a`;
  #L503264.  v8:= new `x0.q$a`;
  #L503268.  v9:= v7.`x0.q.b` @type ^`x.e` @kind object;
  #L50326c.  call `<init>`(v8, v1, v9) @signature `Lx0/q$a;.<init>:(Ljava/util/List;Lx/e;)V` @kind direct;
  #L503272.  call `<init>`(v2, v4, v8) @signature `Lx0/n$a;.<init>:(Lq0/b;Lr0/d;)V` @kind direct;
  #L503278.  return v2 @kind object;
}
procedure `boolean` `b`(`x0.q` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lx0/q;.b:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L503138.  v0:= v2.`x0.q.a` @type ^`java.util.List` @kind object;
  #L50313c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L503142.  v0:= temp @kind object;
  #L503144.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L50314a.  v1:= temp;
  #L50314c.  if v1 == 0 then goto L50316c;
  #L503150.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L503156.  v1:= temp @kind object;
  #L503158.  v1:= (`x0.n`) v1 @kind object;
  #L50315c.  call temp:= `b`(v1, v3) @signature `Lx0/n;.b:(Ljava/lang/Object;)Z` @kind interface;
  #L503162.  v1:= temp;
  #L503164.  if v1 == 0 then goto L503144;
  #L503168.  v3:= 1I;
  #L50316a.  return v3;
  #L50316c.  v3:= 0I;
  #L50316e.  return v3;
}
procedure `java.lang.String` `toString`(`x0.q` v2 @kind this) @signature `Lx0/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L503180.  v0:= new `java.lang.StringBuilder`;
  #L503184.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50318a.  v1:= "MultiModelLoader{modelLoaders=" @kind object;
  #L50318e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L503194.  v1:= v2.`x0.q.a` @type ^`java.util.List` @kind object;
  #L503198.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L50319e.  v1:= temp @kind object;
  #L5031a0.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L5031a6.  v1:= temp @kind object;
  #L5031a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5031ae.  v1:= 125I;
  #L5031b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L5031b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5031be.  v0:= temp @kind object;
  #L5031c0.  return v0 @kind object;
}
