record `x0.e$b` @kind class @AccessFlag FINAL extends `r0.d` @kind interface {
  `java.lang.String` `x0.e$b.a` @AccessFlag PRIVATE_FINAL;
  `x0.e$a` `x0.e$b.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `x0.e$b.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`x0.e$b` v0 @kind this, `java.lang.String` v1 @kind object, `x0.e$a` v2 @kind object) @signature `Lx0/e$b;.<init>:(Ljava/lang/String;Lx0/e$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5013e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5013e6.  v0.`x0.e$b.a` @type ^`java.lang.String` := v1 @kind object;
  #L5013ea.  v0.`x0.e$b.b` @type ^`x0.e$a` := v2 @kind object;
  #L5013ee.  return @kind void;
}
procedure `java.lang.Class` `a`(`x0.e$b` v1 @kind this) @signature `Lx0/e$b;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5013c0.  v0:= v1.`x0.e$b.b` @type ^`x0.e$a` @kind object;
  #L5013c4.  call temp:= `a`(v0) @signature `Lx0/e$a;.a:()Ljava/lang/Class;` @kind interface;
  #L5013ca.  v0:= temp @kind object;
  #L5013cc.  return v0 @kind object;
}
procedure `void` `b`(`x0.e$b` v2 @kind this) @signature `Lx0/e$b;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L501414.  v0:= v2.`x0.e$b.b` @type ^`x0.e$a` @kind object;
  #L501418.  v1:= v2.`x0.e$b.c` @type ^`java.lang.Object` @kind object;
  #L50141c.  call `b`(v0, v1) @signature `Lx0/e$a;.b:(Ljava/lang/Object;)V` @kind interface;
  #L501422.  return @kind void;
  catch `java.io.IOException` @[L501414..L501422] goto L501422;
}
procedure `void` `cancel`(`x0.e$b` v0 @kind this) @signature `Lx0/e$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L501400.  return @kind void;
}
procedure `com.bumptech.glide.load.DataSource` `d`(`x0.e$b` v1 @kind this) @signature `Lx0/e$b;.d:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5013a8.  v0:= `@@com.bumptech.glide.load.DataSource.a` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L5013ac.  return v0 @kind object;
}
procedure `void` `e`(`x0.e$b` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object, `r0.d$a` v3 @kind object) @signature `Lx0/e$b;.e:(Lcom/bumptech/glide/Priority;Lr0/d$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501444.  v2:= v1.`x0.e$b.b` @type ^`x0.e$a` @kind object;
  #L501448.  v0:= v1.`x0.e$b.a` @type ^`java.lang.String` @kind object;
  #L50144c.  call temp:= `c`(v2, v0) @signature `Lx0/e$a;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L501452.  v2:= temp @kind object;
  #L501454.  v1.`x0.e$b.c` @type ^`java.lang.Object` := v2 @kind object;
  #L501458.  call `f`(v3, v2) @signature `Lr0/d$a;.f:(Ljava/lang/Object;)V` @kind interface;
  #L50145e.  goto L501468;
  #L501460.  v2:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L501462.  call `c`(v3, v2) @signature `Lr0/d$a;.c:(Ljava/lang/Exception;)V` @kind interface;
  #L501468.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L501444..L50145e] goto L501460;
}
