record `n1.j` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`boolean` v0 , `java.lang.String` v1 @kind object) @signature `Ln1/j;.a:(ZLjava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4ed644.  if v0 == 0 then goto L4ed64a;
  #L4ed648.  return @kind void;
  #L4ed64a.  v0:= new `java.lang.IllegalArgumentException`;
  #L4ed64e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ed654.  throw v0;
}
procedure `java.lang.String` `b`(`java.lang.String` v1 @kind object) @signature `Ln1/j;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ed5e4.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L4ed5ea.  v0:= temp;
  #L4ed5ec.  if v0 != 0 then goto L4ed5f2;
  #L4ed5f0.  return v1 @kind object;
  #L4ed5f2.  v1:= new `java.lang.IllegalArgumentException`;
  #L4ed5f6.  v0:= "Must not be null or empty" @kind object;
  #L4ed5fa.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ed600.  throw v1;
}
procedure `java.util.Collection` `c`(`java.util.Collection` v1 @kind object) @signature `Ln1/j;.c:(Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ed614.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L4ed61a.  v0:= temp;
  #L4ed61c.  if v0 != 0 then goto L4ed622;
  #L4ed620.  return v1 @kind object;
  #L4ed622.  v1:= new `java.lang.IllegalArgumentException`;
  #L4ed626.  v0:= "Must not be empty." @kind object;
  #L4ed62a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ed630.  throw v1;
}
procedure `java.lang.Object` `d`(`java.lang.Object` v1 @kind object) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ed5ac.  v0:= "Argument must not be null" @kind object;
  #L4ed5b0.  call temp:= `e`(v1, v0) @signature `Ln1/j;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ed5b6.  v1:= temp @kind object;
  #L4ed5b8.  return v1 @kind object;
}
procedure `java.lang.Object` `e`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Ln1/j;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4ed5cc.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ed5d2.  return v0 @kind object;
}
