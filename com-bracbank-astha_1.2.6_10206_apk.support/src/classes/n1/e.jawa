record `n1.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.concurrent.Executor` `@@n1.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.Executor` `@@n1.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln1/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ecf4c.  v0:= new `n1.e$a`;
  #L4ecf50.  call `<init>`(v0) @signature `Ln1/e$a;.<init>:()V` @kind direct;
  #L4ecf56.  `@@n1.e.a` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L4ecf5a.  v0:= new `n1.e$b`;
  #L4ecf5e.  call `<init>`(v0) @signature `Ln1/e$b;.<init>:()V` @kind direct;
  #L4ecf64.  `@@n1.e.b` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L4ecf68.  return @kind void;
}
procedure `java.util.concurrent.Executor` `a`() @signature `Ln1/e;.a:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ecf1c.  v0:= `@@n1.e.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L4ecf20.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `b`() @signature `Ln1/e;.b:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ecf34.  v0:= `@@n1.e.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L4ecf38.  return v0 @kind object;
}
