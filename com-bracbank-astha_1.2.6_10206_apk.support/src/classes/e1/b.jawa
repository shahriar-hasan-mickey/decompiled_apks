record `e1.b` @kind class @AccessFlag PUBLIC_FINAL extends `p0.a$a` @kind interface {
  `u0.d` `e1.b.a` @AccessFlag PRIVATE_FINAL;
  `u0.b` `e1.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e1.b` v0 @kind this, `u0.d` v1 @kind object, `u0.b` v2 @kind object) @signature `Le1/b;.<init>:(Lu0/d;Lu0/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e4620.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e4626.  v0.`e1.b.a` @type ^`u0.d` := v1 @kind object;
  #L4e462a.  v0.`e1.b.b` @type ^`u0.b` := v2 @kind object;
  #L4e462e.  return @kind void;
}
procedure `android.graphics.Bitmap` `a`(`e1.b` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Le1/b;.a:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e45a0.  v0:= v1.`e1.b.a` @type ^`u0.d` @kind object;
  #L4e45a4.  call temp:= `e`(v0, v2, v3, v4) @signature `Lu0/d;.e:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L4e45aa.  v2:= temp @kind object;
  #L4e45ac.  return v2 @kind object;
}
procedure `int`[] `b`(`e1.b` v2 @kind this, `int` v3 ) @signature `Le1/b;.b:(I)[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e45f0.  v0:= v2.`e1.b.b` @type ^`u0.b` @kind object;
  #L4e45f4.  if v0 != 0 then goto L4e45fe;
  #L4e45f8.  v3:= new `int`[v3];
  #L4e45fc.  return v3 @kind object;
  #L4e45fe.  v1:= constclass @type ^`int`[] @kind object;
  #L4e4602.  call temp:= `d`(v0, v3, v1) @signature `Lu0/b;.d:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L4e4608.  v3:= temp @kind object;
  #L4e460a.  v3:= (`int`[]) v3 @kind object;
  #L4e460e.  return v3 @kind object;
}
procedure `void` `c`(`e1.b` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Le1/b;.c:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4640.  v0:= v1.`e1.b.a` @type ^`u0.d` @kind object;
  #L4e4644.  call `c`(v0, v2) @signature `Lu0/d;.c:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L4e464a.  return @kind void;
}
procedure `void` `d`(`e1.b` v1 @kind this, `byte`[] v2 @kind object) @signature `Le1/b;.d:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e465c.  v0:= v1.`e1.b.b` @type ^`u0.b` @kind object;
  #L4e4660.  if v0 != 0 then goto L4e4666;
  #L4e4664.  return @kind void;
  #L4e4666.  call `put`(v0, v2) @signature `Lu0/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L4e466c.  return @kind void;
}
procedure `byte`[] `e`(`e1.b` v2 @kind this, `int` v3 ) @signature `Le1/b;.e:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e45c0.  v0:= v2.`e1.b.b` @type ^`u0.b` @kind object;
  #L4e45c4.  if v0 != 0 then goto L4e45ce;
  #L4e45c8.  v3:= new `byte`[v3];
  #L4e45cc.  return v3 @kind object;
  #L4e45ce.  v1:= constclass @type ^`byte`[] @kind object;
  #L4e45d2.  call temp:= `d`(v0, v3, v1) @signature `Lu0/b;.d:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L4e45d8.  v3:= temp @kind object;
  #L4e45da.  v3:= (`byte`[]) v3 @kind object;
  #L4e45de.  return v3 @kind object;
}
procedure `void` `f`(`e1.b` v1 @kind this, `int`[] v2 @kind object) @signature `Le1/b;.f:([I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4680.  v0:= v1.`e1.b.b` @type ^`u0.b` @kind object;
  #L4e4684.  if v0 != 0 then goto L4e468a;
  #L4e4688.  return @kind void;
  #L4e468a.  call `put`(v0, v2) @signature `Lu0/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L4e4690.  return @kind void;
}
