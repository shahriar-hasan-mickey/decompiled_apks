record `e1.c` @kind class @AccessFlag PUBLIC extends `android.graphics.drawable.Drawable` @kind class, `e1.g$b` @kind interface, `android.graphics.drawable.Animatable` @kind interface {
  `e1.c$a` `e1.c.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `e1.c.b` @AccessFlag PRIVATE;
  `boolean` `e1.c.c` @AccessFlag PRIVATE;
  `boolean` `e1.c.d` @AccessFlag PRIVATE;
  `boolean` `e1.c.e` @AccessFlag PRIVATE;
  `int` `e1.c.f` @AccessFlag PRIVATE;
  `int` `e1.c.g` @AccessFlag PRIVATE;
  `boolean` `e1.c.h` @AccessFlag PRIVATE;
  `android.graphics.Paint` `e1.c.i` @AccessFlag PRIVATE;
  `android.graphics.Rect` `e1.c.j` @AccessFlag PRIVATE;
  `java.util.List` `e1.c.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e1.c` v9 @kind this, `android.content.Context` v10 @kind object, `p0.a` v11 @kind object, `q0.g` v12 @kind object, `int` v13 , `int` v14 , `android.graphics.Bitmap` v15 @kind object) @signature `Le1/c;.<init>:(Landroid/content/Context;Lp0/a;Lq0/g;IILandroid/graphics/Bitmap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4e4b8c.  v0:= new `e1.c$a`;
  #L4e4b90.  v8:= new `e1.g`;
  #L4e4b94.  call temp:= `c`(v10) @signature `Lcom/bumptech/glide/b;.c:(Landroid/content/Context;)Lcom/bumptech/glide/b;` @kind static;
  #L4e4b9a.  v2:= temp @kind object;
  #L4e4b9c.  v1:= v8 @kind object;
  #L4e4b9e.  v3:= v11 @kind object;
  #L4e4ba0.  v4:= v13;
  #L4e4ba2.  v5:= v14;
  #L4e4ba4.  v6:= v12 @kind object;
  #L4e4ba6.  v7:= v15 @kind object;
  #L4e4ba8.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Le1/g;.<init>:(Lcom/bumptech/glide/b;Lp0/a;IILq0/g;Landroid/graphics/Bitmap;)V` @kind direct;
  #L4e4bae.  call `<init>`(v0, v8) @signature `Le1/c$a;.<init>:(Le1/g;)V` @kind direct;
  #L4e4bb4.  call `<init>`(v9, v0) @signature `Le1/c;.<init>:(Le1/c$a;)V` @kind direct;
  #L4e4bba.  return @kind void;
}
procedure `void` `<init>`(`e1.c` v1 @kind this, `e1.c$a` v2 @kind object) @signature `Le1/c;.<init>:(Le1/c$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4e4bcc.  call `<init>`(v1) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L4e4bd2.  v0:= 1I;
  #L4e4bd4.  v1.`e1.c.e` @type ^`boolean` := v0 @kind boolean;
  #L4e4bd8.  v0:= -1I;
  #L4e4bda.  v1.`e1.c.g` @type ^`int` := v0;
  #L4e4bde.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4e4be4.  v2:= temp @kind object;
  #L4e4be6.  v2:= (`e1.c$a`) v2 @kind object;
  #L4e4bea.  v1.`e1.c.a` @type ^`e1.c$a` := v2 @kind object;
  #L4e4bee.  return @kind void;
}
procedure `android.graphics.drawable.Drawable$Callback` `b`(`e1.c` v2 @kind this) @signature `Le1/c;.b:()Landroid/graphics/drawable/Drawable$Callback;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4e49f4.  call temp:= `getCallback`(v2) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L4e49fa.  v0:= temp @kind object;
  #L4e49fc.  v1:= instanceof @variable v0 @type ^`android.graphics.drawable.Drawable` @kind boolean;
  #L4e4a00.  if v1 == 0 then goto L4e4a12;
  #L4e4a04.  v0:= (`android.graphics.drawable.Drawable`) v0 @kind object;
  #L4e4a08.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L4e4a0e.  v0:= temp @kind object;
  #L4e4a10.  goto L4e49fc;
  #L4e4a12.  return v0 @kind object;
}
procedure `android.graphics.Rect` `d`(`e1.c` v1 @kind this) @signature `Le1/c;.d:()Landroid/graphics/Rect;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4e49c8.  v0:= v1.`e1.c.j` @type ^`android.graphics.Rect` @kind object;
  #L4e49cc.  if v0 != 0 then goto L4e49de;
  #L4e49d0.  v0:= new `android.graphics.Rect`;
  #L4e49d4.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L4e49da.  v1.`e1.c.j` @type ^`android.graphics.Rect` := v0 @kind object;
  #L4e49de.  v0:= v1.`e1.c.j` @type ^`android.graphics.Rect` @kind object;
  #L4e49e2.  return v0 @kind object;
}
procedure `android.graphics.Paint` `h`(`e1.c` v2 @kind this) @signature `Le1/c;.h:()Landroid/graphics/Paint;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4e4998.  v0:= v2.`e1.c.i` @type ^`android.graphics.Paint` @kind object;
  #L4e499c.  if v0 != 0 then goto L4e49b0;
  #L4e49a0.  v0:= new `android.graphics.Paint`;
  #L4e49a4.  v1:= 2I;
  #L4e49a6.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L4e49ac.  v2.`e1.c.i` @type ^`android.graphics.Paint` := v0 @kind object;
  #L4e49b0.  v0:= v2.`e1.c.i` @type ^`android.graphics.Paint` @kind object;
  #L4e49b4.  return v0 @kind object;
}
procedure `void` `j`(`e1.c` v3 @kind this) @signature `Le1/c;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4e4c7c.  v0:= v3.`e1.c.k` @type ^`java.util.List` @kind object;
  #L4e4c80.  if v0 == 0 then goto L4e4cae;
  #L4e4c84.  v1:= 0I;
  #L4e4c86.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4e4c8c.  v0:= temp;
  #L4e4c8e.  if v1 >= v0 then goto L4e4cae;
  #L4e4c92.  v2:= v3.`e1.c.k` @type ^`java.util.List` @kind object;
  #L4e4c96.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4e4c9c.  v2:= temp @kind object;
  #L4e4c9e.  v2:= (`androidx.vectordrawable.graphics.drawable.b`) v2 @kind object;
  #L4e4ca2.  call `a`(v2, v3) @signature `Landroidx/vectordrawable/graphics/drawable/b;.a:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L4e4ca8.  v1:= v1 + 1;
  #L4e4cac.  goto L4e4c8e;
  #L4e4cae.  return @kind void;
}
procedure `void` `l`(`e1.c` v1 @kind this) @signature `Le1/c;.l:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4e4d7c.  v0:= 0I;
  #L4e4d7e.  v1.`e1.c.f` @type ^`int` := v0;
  #L4e4d82.  return @kind void;
}
procedure `void` `n`(`e1.c` v3 @kind this) @signature `Le1/c;.n:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4e4e20.  v0:= v3.`e1.c.d` @type ^`boolean` @kind boolean;
  #L4e4e24.  v1:= 1I;
  #L4e4e26.  v0:= v0 ^~ v1 @kind int;
  #L4e4e28.  v2:= "You cannot start a recycled Drawable. Ensure thatyou clear any references to the Drawable when clearing the corresponding request." @kind object;
  #L4e4e2c.  call `a`(v0, v2) @signature `Ln1/j;.a:(ZLjava/lang/String;)V` @kind static;
  #L4e4e32.  v0:= v3.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4e36.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4e3a.  call temp:= `f`(v0) @signature `Le1/g;.f:()I` @kind virtual;
  #L4e4e40.  v0:= temp;
  #L4e4e42.  if v0 != v1 then goto L4e4e4e;
  #L4e4e46.  call `invalidateSelf`(v3) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L4e4e4c.  goto L4e4e6e;
  #L4e4e4e.  v0:= v3.`e1.c.b` @type ^`boolean` @kind boolean;
  #L4e4e52.  if v0 != 0 then goto L4e4e6e;
  #L4e4e56.  v3.`e1.c.b` @type ^`boolean` := v1 @kind boolean;
  #L4e4e5a.  v0:= v3.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4e5e.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4e62.  call `r`(v0, v3) @signature `Le1/g;.r:(Le1/g$b;)V` @kind virtual;
  #L4e4e68.  call `invalidateSelf`(v3) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L4e4e6e.  return @kind void;
}
procedure `void` `o`(`e1.c` v1 @kind this) @signature `Le1/c;.o:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4e4ea0.  v0:= 0I;
  #L4e4ea2.  v1.`e1.c.b` @type ^`boolean` := v0 @kind boolean;
  #L4e4ea6.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4eaa.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4eae.  call `s`(v0, v1) @signature `Le1/g;.s:(Le1/g$b;)V` @kind virtual;
  #L4e4eb4.  return @kind void;
}
procedure `void` `a`(`e1.c` v2 @kind this) @signature `Le1/c;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e4ce0.  call temp:= `b`(v2) @signature `Le1/c;.b:()Landroid/graphics/drawable/Drawable$Callback;` @kind direct;
  #L4e4ce6.  v0:= temp @kind object;
  #L4e4ce8.  if v0 != 0 then goto L4e4cfa;
  #L4e4cec.  call `stop`(v2) @signature `Le1/c;.stop:()V` @kind virtual;
  #L4e4cf2.  call `invalidateSelf`(v2) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L4e4cf8.  return @kind void;
  #L4e4cfa.  call `invalidateSelf`(v2) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L4e4d00.  call temp:= `g`(v2) @signature `Le1/c;.g:()I` @kind virtual;
  #L4e4d06.  v0:= temp;
  #L4e4d08.  call temp:= `f`(v2) @signature `Le1/c;.f:()I` @kind virtual;
  #L4e4d0e.  v1:= temp;
  #L4e4d10.  v1:= v1 + -1;
  #L4e4d14.  if v0 != v1 then goto L4e4d24;
  #L4e4d18.  v0:= v2.`e1.c.f` @type ^`int`;
  #L4e4d1c.  v0:= v0 + 1;
  #L4e4d20.  v2.`e1.c.f` @type ^`int` := v0;
  #L4e4d24.  v0:= v2.`e1.c.g` @type ^`int`;
  #L4e4d28.  v1:= -1I;
  #L4e4d2a.  if v0 == v1 then goto L4e4d42;
  #L4e4d2e.  v1:= v2.`e1.c.f` @type ^`int`;
  #L4e4d32.  if v1 < v0 then goto L4e4d42;
  #L4e4d36.  call `j`(v2) @signature `Le1/c;.j:()V` @kind direct;
  #L4e4d3c.  call `stop`(v2) @signature `Le1/c;.stop:()V` @kind virtual;
  #L4e4d42.  return @kind void;
}
procedure `java.nio.ByteBuffer` `c`(`e1.c` v1 @kind this) @signature `Le1/c;.c:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4b68.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4b6c.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4b70.  call temp:= `b`(v0) @signature `Le1/g;.b:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L4e4b76.  v0:= temp @kind object;
  #L4e4b78.  return v0 @kind object;
}
procedure `void` `draw`(`e1.c` v5 @kind this, `android.graphics.Canvas` v6 @kind object) @signature `Le1/c;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4e4c00.  v0:= v5.`e1.c.d` @type ^`boolean` @kind boolean;
  #L4e4c04.  if v0 == 0 then goto L4e4c0a;
  #L4e4c08.  return @kind void;
  #L4e4c0a.  v0:= v5.`e1.c.h` @type ^`boolean` @kind boolean;
  #L4e4c0e.  if v0 == 0 then goto L4e4c42;
  #L4e4c12.  v0:= 119I;
  #L4e4c16.  call temp:= `getIntrinsicWidth`(v5) @signature `Le1/c;.getIntrinsicWidth:()I` @kind virtual;
  #L4e4c1c.  v1:= temp;
  #L4e4c1e.  call temp:= `getIntrinsicHeight`(v5) @signature `Le1/c;.getIntrinsicHeight:()I` @kind virtual;
  #L4e4c24.  v2:= temp;
  #L4e4c26.  call temp:= `getBounds`(v5) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4e4c2c.  v3:= temp @kind object;
  #L4e4c2e.  call temp:= `d`(v5) @signature `Le1/c;.d:()Landroid/graphics/Rect;` @kind direct;
  #L4e4c34.  v4:= temp @kind object;
  #L4e4c36.  call `apply`(v0, v1, v2, v3, v4) @signature `Landroid/view/Gravity;.apply:(IIILandroid/graphics/Rect;Landroid/graphics/Rect;)V` @kind static;
  #L4e4c3c.  v0:= 0I;
  #L4e4c3e.  v5.`e1.c.h` @type ^`boolean` := v0 @kind boolean;
  #L4e4c42.  v0:= v5.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4c46.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4c4a.  call temp:= `c`(v0) @signature `Le1/g;.c:()Landroid/graphics/Bitmap;` @kind virtual;
  #L4e4c50.  v0:= temp @kind object;
  #L4e4c52.  v1:= 0I;
  #L4e4c54.  call temp:= `d`(v5) @signature `Le1/c;.d:()Landroid/graphics/Rect;` @kind direct;
  #L4e4c5a.  v2:= temp @kind object;
  #L4e4c5c.  call temp:= `h`(v5) @signature `Le1/c;.h:()Landroid/graphics/Paint;` @kind direct;
  #L4e4c62.  v3:= temp @kind object;
  #L4e4c64.  call `drawBitmap`(v6, v0, v1, v2, v3) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Paint;)V` @kind virtual;
  #L4e4c6a.  return @kind void;
}
procedure `android.graphics.Bitmap` `e`(`e1.c` v1 @kind this) @signature `Le1/c;.e:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4974.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4978.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e497c.  call temp:= `e`(v0) @signature `Le1/g;.e:()Landroid/graphics/Bitmap;` @kind virtual;
  #L4e4982.  v0:= temp @kind object;
  #L4e4984.  return v0 @kind object;
}
procedure `int` `f`(`e1.c` v1 @kind this) @signature `Le1/c;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4aa0.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4aa4.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4aa8.  call temp:= `f`(v0) @signature `Le1/g;.f:()I` @kind virtual;
  #L4e4aae.  v0:= temp;
  #L4e4ab0.  return v0;
}
procedure `int` `g`(`e1.c` v1 @kind this) @signature `Le1/c;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4ac4.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4ac8.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4acc.  call temp:= `d`(v0) @signature `Le1/g;.d:()I` @kind virtual;
  #L4e4ad2.  v0:= temp;
  #L4e4ad4.  return v0;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`e1.c` v1 @kind this) @signature `Le1/c;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4a24.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4a28.  return v0 @kind object;
}
procedure `int` `getIntrinsicHeight`(`e1.c` v1 @kind this) @signature `Le1/c;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4ae8.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4aec.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4af0.  call temp:= `h`(v0) @signature `Le1/g;.h:()I` @kind virtual;
  #L4e4af6.  v0:= temp;
  #L4e4af8.  return v0;
}
procedure `int` `getIntrinsicWidth`(`e1.c` v1 @kind this) @signature `Le1/c;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4b0c.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4b10.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4b14.  call temp:= `k`(v0) @signature `Le1/g;.k:()I` @kind virtual;
  #L4e4b1a.  v0:= temp;
  #L4e4b1c.  return v0;
}
procedure `int` `getOpacity`(`e1.c` v1 @kind this) @signature `Le1/c;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4b30.  v0:= -2I;
  #L4e4b32.  return v0;
}
procedure `int` `i`(`e1.c` v1 @kind this) @signature `Le1/c;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4b44.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4b48.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4b4c.  call temp:= `j`(v0) @signature `Le1/g;.j:()I` @kind virtual;
  #L4e4b52.  v0:= temp;
  #L4e4b54.  return v0;
}
procedure `boolean` `isRunning`(`e1.c` v1 @kind this) @signature `Le1/c;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4a3c.  v0:= v1.`e1.c.b` @type ^`boolean` @kind boolean;
  #L4e4a40.  return v0;
}
procedure `void` `k`(`e1.c` v1 @kind this) @signature `Le1/c;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4d54.  v0:= 1I;
  #L4e4d56.  v1.`e1.c.d` @type ^`boolean` := v0 @kind boolean;
  #L4e4d5a.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4d5e.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4d62.  call `a`(v0) @signature `Le1/g;.a:()V` @kind virtual;
  #L4e4d68.  return @kind void;
}
procedure `void` `m`(`e1.c` v1 @kind this, `q0.g` v2 @kind object, `android.graphics.Bitmap` v3 @kind object) @signature `Le1/c;.m:(Lq0/g;Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4dd4.  v0:= v1.`e1.c.a` @type ^`e1.c$a` @kind object;
  #L4e4dd8.  v0:= v0.`e1.c$a.a` @type ^`e1.g` @kind object;
  #L4e4ddc.  call `o`(v0, v2, v3) @signature `Le1/g;.o:(Lq0/g;Landroid/graphics/Bitmap;)V` @kind virtual;
  #L4e4de2.  return @kind void;
}
procedure `void` `onBoundsChange`(`e1.c` v0 @kind this, `android.graphics.Rect` v1 @kind object) @signature `Le1/c;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;

  #L4e4cc0.  call `onBoundsChange`(v0, v1) @signature `Landroid/graphics/drawable/Drawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @kind super;
  #L4e4cc6.  v1:= 1I;
  #L4e4cc8.  v0.`e1.c.h` @type ^`boolean` := v1 @kind boolean;
  #L4e4ccc.  return @kind void;
}
procedure `void` `setAlpha`(`e1.c` v1 @kind this, `int` v2 ) @signature `Le1/c;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4d94.  call temp:= `h`(v1) @signature `Le1/c;.h:()Landroid/graphics/Paint;` @kind direct;
  #L4e4d9a.  v0:= temp @kind object;
  #L4e4d9c.  call `setAlpha`(v0, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L4e4da2.  return @kind void;
}
procedure `void` `setColorFilter`(`e1.c` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Le1/c;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4db4.  call temp:= `h`(v1) @signature `Le1/c;.h:()Landroid/graphics/Paint;` @kind direct;
  #L4e4dba.  v0:= temp @kind object;
  #L4e4dbc.  call temp:= `setColorFilter`(v0, v2) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L4e4dc2.  return @kind void;
}
procedure `boolean` `setVisible`(`e1.c` v2 @kind this, `boolean` v3 , `boolean` v4 ) @signature `Le1/c;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e4a54.  v0:= v2.`e1.c.d` @type ^`boolean` @kind boolean;
  #L4e4a58.  v0:= v0 ^~ 1;
  #L4e4a5c.  v1:= "Cannot change the visibility of a recycled resource. Ensure that you unset the Drawable from your View before changing the View's visibility." @kind object;
  #L4e4a60.  call `a`(v0, v1) @signature `Ln1/j;.a:(ZLjava/lang/String;)V` @kind static;
  #L4e4a66.  v2.`e1.c.e` @type ^`boolean` := v3 @kind boolean;
  #L4e4a6a.  if v3 != 0 then goto L4e4a76;
  #L4e4a6e.  call `o`(v2) @signature `Le1/c;.o:()V` @kind direct;
  #L4e4a74.  goto L4e4a84;
  #L4e4a76.  v0:= v2.`e1.c.c` @type ^`boolean` @kind boolean;
  #L4e4a7a.  if v0 == 0 then goto L4e4a84;
  #L4e4a7e.  call `n`(v2) @signature `Le1/c;.n:()V` @kind direct;
  #L4e4a84.  call temp:= `setVisible`(v2, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind super;
  #L4e4a8a.  v3:= temp;
  #L4e4a8c.  return v3;
}
procedure `void` `start`(`e1.c` v1 @kind this) @signature `Le1/c;.start:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4df4.  v0:= 1I;
  #L4e4df6.  v1.`e1.c.c` @type ^`boolean` := v0 @kind boolean;
  #L4e4dfa.  call `l`(v1) @signature `Le1/c;.l:()V` @kind direct;
  #L4e4e00.  v0:= v1.`e1.c.e` @type ^`boolean` @kind boolean;
  #L4e4e04.  if v0 == 0 then goto L4e4e0e;
  #L4e4e08.  call `n`(v1) @signature `Le1/c;.n:()V` @kind direct;
  #L4e4e0e.  return @kind void;
}
procedure `void` `stop`(`e1.c` v1 @kind this) @signature `Le1/c;.stop:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e4e80.  v0:= 0I;
  #L4e4e82.  v1.`e1.c.c` @type ^`boolean` := v0 @kind boolean;
  #L4e4e86.  call `o`(v1) @signature `Le1/c;.o:()V` @kind direct;
  #L4e4e8c.  return @kind void;
}
