record `e1.g` @kind class @AccessFlag  {
  `p0.a` `e1.g.a` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `e1.g.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `e1.g.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.f` `e1.g.d` @AccessFlag FINAL;
  `u0.d` `e1.g.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `e1.g.f` @AccessFlag PRIVATE;
  `boolean` `e1.g.g` @AccessFlag PRIVATE;
  `boolean` `e1.g.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.e` `e1.g.i` @AccessFlag PRIVATE;
  `e1.g$a` `e1.g.j` @AccessFlag PRIVATE;
  `boolean` `e1.g.k` @AccessFlag PRIVATE;
  `e1.g$a` `e1.g.l` @AccessFlag PRIVATE;
  `android.graphics.Bitmap` `e1.g.m` @AccessFlag PRIVATE;
  `q0.g` `e1.g.n` @AccessFlag PRIVATE;
  `e1.g$a` `e1.g.o` @AccessFlag PRIVATE;
  `e1.g$d` `e1.g.p` @AccessFlag PRIVATE;
  `int` `e1.g.q` @AccessFlag PRIVATE;
  `int` `e1.g.r` @AccessFlag PRIVATE;
  `int` `e1.g.s` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e1.g` v8 @kind this, `com.bumptech.glide.b` v9 @kind object, `p0.a` v10 @kind object, `int` v11 , `int` v12 , `q0.g` v13 @kind object, `android.graphics.Bitmap` v14 @kind object) @signature `Le1/g;.<init>:(Lcom/bumptech/glide/b;Lp0/a;IILq0/g;Landroid/graphics/Bitmap;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4e5154.  call temp:= `f`(v9) @signature `Lcom/bumptech/glide/b;.f:()Lu0/d;` @kind virtual;
  #L4e515a.  v1:= temp @kind object;
  #L4e515c.  call temp:= `h`(v9) @signature `Lcom/bumptech/glide/b;.h:()Landroid/content/Context;` @kind virtual;
  #L4e5162.  v0:= temp @kind object;
  #L4e5164.  call temp:= `t`(v0) @signature `Lcom/bumptech/glide/b;.t:(Landroid/content/Context;)Lcom/bumptech/glide/f;` @kind static;
  #L4e516a.  v2:= temp @kind object;
  #L4e516c.  call temp:= `h`(v9) @signature `Lcom/bumptech/glide/b;.h:()Landroid/content/Context;` @kind virtual;
  #L4e5172.  v9:= temp @kind object;
  #L4e5174.  call temp:= `t`(v9) @signature `Lcom/bumptech/glide/b;.t:(Landroid/content/Context;)Lcom/bumptech/glide/f;` @kind static;
  #L4e517a.  v9:= temp @kind object;
  #L4e517c.  call temp:= `i`(v9, v11, v12) @signature `Le1/g;.i:(Lcom/bumptech/glide/f;II)Lcom/bumptech/glide/e;` @kind static;
  #L4e5182.  v5:= temp @kind object;
  #L4e5184.  v4:= 0I;
  #L4e5186.  v0:= v8 @kind object;
  #L4e5188.  v3:= v10 @kind object;
  #L4e518a.  v6:= v13 @kind object;
  #L4e518c.  v7:= v14 @kind object;
  #L4e518e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Le1/g;.<init>:(Lu0/d;Lcom/bumptech/glide/f;Lp0/a;Landroid/os/Handler;Lcom/bumptech/glide/e;Lq0/g;Landroid/graphics/Bitmap;)V` @kind direct;
  #L4e5194.  return @kind void;
}
procedure `void` `<init>`(`e1.g` v1 @kind this, `u0.d` v2 @kind object, `com.bumptech.glide.f` v3 @kind object, `p0.a` v4 @kind object, `android.os.Handler` v5 @kind object, `com.bumptech.glide.e` v6 @kind object, `q0.g` v7 @kind object, `android.graphics.Bitmap` v8 @kind object) @signature `Le1/g;.<init>:(Lu0/d;Lcom/bumptech/glide/f;Lp0/a;Landroid/os/Handler;Lcom/bumptech/glide/e;Lq0/g;Landroid/graphics/Bitmap;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4e51a8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e51ae.  v0:= new `java.util.ArrayList`;
  #L4e51b2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4e51b8.  v1.`e1.g.c` @type ^`java.util.List` := v0 @kind object;
  #L4e51bc.  v1.`e1.g.d` @type ^`com.bumptech.glide.f` := v3 @kind object;
  #L4e51c0.  if v5 != 0 then goto L4e51e0;
  #L4e51c4.  v5:= new `android.os.Handler`;
  #L4e51c8.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L4e51ce.  v3:= temp @kind object;
  #L4e51d0.  v0:= new `e1.g$c`;
  #L4e51d4.  call `<init>`(v0, v1) @signature `Le1/g$c;.<init>:(Le1/g;)V` @kind direct;
  #L4e51da.  call `<init>`(v5, v3, v0) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;Landroid/os/Handler$Callback;)V` @kind direct;
  #L4e51e0.  v1.`e1.g.e` @type ^`u0.d` := v2 @kind object;
  #L4e51e4.  v1.`e1.g.b` @type ^`android.os.Handler` := v5 @kind object;
  #L4e51e8.  v1.`e1.g.i` @type ^`com.bumptech.glide.e` := v6 @kind object;
  #L4e51ec.  v1.`e1.g.a` @type ^`p0.a` := v4 @kind object;
  #L4e51f0.  call `o`(v1, v7, v8) @signature `Le1/g;.o:(Lq0/g;Landroid/graphics/Bitmap;)V` @kind virtual;
  #L4e51f6.  return @kind void;
}
procedure `q0.b` `g`() @signature `Le1/g;.g:()Lq0/b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4e5128.  v0:= new `m1.b`;
  #L4e512c.  call temp:= `random`() @signature `Ljava/lang/Math;.random:()D` @kind static;
  #L4e5132.  v1:= temp @kind wide;
  #L4e5134.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L4e513a.  v1:= temp @kind object;
  #L4e513c.  call `<init>`(v0, v1) @signature `Lm1/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4e5142.  return v0 @kind object;
}
procedure `com.bumptech.glide.e` `i`(`com.bumptech.glide.f` v2 @kind object, `int` v3 , `int` v4 ) @signature `Le1/g;.i:(Lcom/bumptech/glide/f;II)Lcom/bumptech/glide/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4e5018.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/f;.c:()Lcom/bumptech/glide/e;` @kind virtual;
  #L4e501e.  v2:= temp @kind object;
  #L4e5020.  v0:= `@@t0.a.b` @type ^`t0.a` @kind object;
  #L4e5024.  call temp:= `X`(v0) @signature `Lj1/c;.X:(Lt0/a;)Lj1/c;` @kind static;
  #L4e502a.  v0:= temp @kind object;
  #L4e502c.  v1:= 1I;
  #L4e502e.  call temp:= `V`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.V:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L4e5034.  v0:= temp @kind object;
  #L4e5036.  v0:= (`j1.c`) v0 @kind object;
  #L4e503a.  call temp:= `R`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.R:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L4e5040.  v0:= temp @kind object;
  #L4e5042.  v0:= (`j1.c`) v0 @kind object;
  #L4e5046.  call temp:= `J`(v0, v3, v4) @signature `Lcom/bumptech/glide/request/a;.J:(II)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L4e504c.  v3:= temp @kind object;
  #L4e504e.  call temp:= `X`(v2, v3) @signature `Lcom/bumptech/glide/e;.X:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/e;` @kind virtual;
  #L4e5054.  v2:= temp @kind object;
  #L4e5056.  return v2 @kind object;
}
procedure `void` `l`(`e1.g` v5 @kind this) @signature `Le1/g;.l:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4e5284.  v0:= v5.`e1.g.f` @type ^`boolean` @kind boolean;
  #L4e5288.  if v0 == 0 then goto L4e5354;
  #L4e528c.  v0:= v5.`e1.g.g` @type ^`boolean` @kind boolean;
  #L4e5290.  if v0 == 0 then goto L4e5296;
  #L4e5294.  goto L4e5354;
  #L4e5296.  v0:= v5.`e1.g.h` @type ^`boolean` @kind boolean;
  #L4e529a.  v1:= 1I;
  #L4e529c.  if v0 == 0 then goto L4e52c8;
  #L4e52a0.  v0:= v5.`e1.g.o` @type ^`e1.g$a` @kind object;
  #L4e52a4.  v2:= 0I;
  #L4e52a6.  if v0 != 0 then goto L4e52ae;
  #L4e52aa.  v0:= 1I;
  #L4e52ac.  goto L4e52b0;
  #L4e52ae.  v0:= 0I;
  #L4e52b0.  v3:= "Pending target must be null when starting from the first frame" @kind object;
  #L4e52b4.  call `a`(v0, v3) @signature `Ln1/j;.a:(ZLjava/lang/String;)V` @kind static;
  #L4e52ba.  v0:= v5.`e1.g.a` @type ^`p0.a` @kind object;
  #L4e52be.  call `f`(v0) @signature `Lp0/a;.f:()V` @kind interface;
  #L4e52c4.  v5.`e1.g.h` @type ^`boolean` := v2 @kind boolean;
  #L4e52c8.  v0:= v5.`e1.g.o` @type ^`e1.g$a` @kind object;
  #L4e52cc.  if v0 == 0 then goto L4e52de;
  #L4e52d0.  v1:= 0I;
  #L4e52d2.  v5.`e1.g.o` @type ^`e1.g$a` := v1 @kind object;
  #L4e52d6.  call `m`(v5, v0) @signature `Le1/g;.m:(Le1/g$a;)V` @kind virtual;
  #L4e52dc.  return @kind void;
  #L4e52de.  v5.`e1.g.g` @type ^`boolean` := v1 @kind boolean;
  #L4e52e2.  v0:= v5.`e1.g.a` @type ^`p0.a` @kind object;
  #L4e52e6.  call temp:= `d`(v0) @signature `Lp0/a;.d:()I` @kind interface;
  #L4e52ec.  v0:= temp;
  #L4e52ee.  call temp:= `uptimeMillis`() @signature `Landroid/os/SystemClock;.uptimeMillis:()J` @kind static;
  #L4e52f4.  v1:= temp @kind wide;
  #L4e52f6.  v3:= (`long`) v0 @kind i2l;
  #L4e52f8.  v1:= v1 + v3 @kind long;
  #L4e52fa.  v0:= v5.`e1.g.a` @type ^`p0.a` @kind object;
  #L4e52fe.  call `b`(v0) @signature `Lp0/a;.b:()V` @kind interface;
  #L4e5304.  v0:= new `e1.g$a`;
  #L4e5308.  v3:= v5.`e1.g.b` @type ^`android.os.Handler` @kind object;
  #L4e530c.  v4:= v5.`e1.g.a` @type ^`p0.a` @kind object;
  #L4e5310.  call temp:= `g`(v4) @signature `Lp0/a;.g:()I` @kind interface;
  #L4e5316.  v4:= temp;
  #L4e5318.  call `<init>`(v0, v3, v4, v1) @signature `Le1/g$a;.<init>:(Landroid/os/Handler;IJ)V` @kind direct;
  #L4e531e.  v5.`e1.g.l` @type ^`e1.g$a` := v0 @kind object;
  #L4e5322.  v0:= v5.`e1.g.i` @type ^`com.bumptech.glide.e` @kind object;
  #L4e5326.  call temp:= `g`() @signature `Le1/g;.g:()Lq0/b;` @kind static;
  #L4e532c.  v1:= temp @kind object;
  #L4e532e.  call temp:= `Y`(v1) @signature `Lj1/c;.Y:(Lq0/b;)Lj1/c;` @kind static;
  #L4e5334.  v1:= temp @kind object;
  #L4e5336.  call temp:= `X`(v0, v1) @signature `Lcom/bumptech/glide/e;.X:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/e;` @kind virtual;
  #L4e533c.  v0:= temp @kind object;
  #L4e533e.  v1:= v5.`e1.g.a` @type ^`p0.a` @kind object;
  #L4e5342.  call temp:= `i0`(v0, v1) @signature `Lcom/bumptech/glide/e;.i0:(Ljava/lang/Object;)Lcom/bumptech/glide/e;` @kind virtual;
  #L4e5348.  v0:= temp @kind object;
  #L4e534a.  v1:= v5.`e1.g.l` @type ^`e1.g$a` @kind object;
  #L4e534e.  call temp:= `e0`(v0, v1) @signature `Lcom/bumptech/glide/e;.e0:(Lk1/d;)Lk1/d;` @kind virtual;
  #L4e5354.  return @kind void;
}
procedure `void` `n`(`e1.g` v2 @kind this) @signature `Le1/g;.n:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4e5420.  v0:= v2.`e1.g.m` @type ^`android.graphics.Bitmap` @kind object;
  #L4e5424.  if v0 == 0 then goto L4e5438;
  #L4e5428.  v1:= v2.`e1.g.e` @type ^`u0.d` @kind object;
  #L4e542c.  call `c`(v1, v0) @signature `Lu0/d;.c:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L4e5432.  v0:= 0I;
  #L4e5434.  v2.`e1.g.m` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L4e5438.  return @kind void;
}
procedure `void` `p`(`e1.g` v1 @kind this) @signature `Le1/g;.p:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4e54c4.  v0:= v1.`e1.g.f` @type ^`boolean` @kind boolean;
  #L4e54c8.  if v0 == 0 then goto L4e54ce;
  #L4e54cc.  return @kind void;
  #L4e54ce.  v0:= 1I;
  #L4e54d0.  v1.`e1.g.f` @type ^`boolean` := v0 @kind boolean;
  #L4e54d4.  v0:= 0I;
  #L4e54d6.  v1.`e1.g.k` @type ^`boolean` := v0 @kind boolean;
  #L4e54da.  call `l`(v1) @signature `Le1/g;.l:()V` @kind direct;
  #L4e54e0.  return @kind void;
}
procedure `void` `q`(`e1.g` v1 @kind this) @signature `Le1/g;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4e54f4.  v0:= 0I;
  #L4e54f6.  v1.`e1.g.f` @type ^`boolean` := v0 @kind boolean;
  #L4e54fa.  return @kind void;
}
procedure `void` `a`(`e1.g` v3 @kind this) @signature `Le1/g;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4e5208.  v0:= v3.`e1.g.c` @type ^`java.util.List` @kind object;
  #L4e520c.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4e5212.  call `n`(v3) @signature `Le1/g;.n:()V` @kind direct;
  #L4e5218.  call `q`(v3) @signature `Le1/g;.q:()V` @kind direct;
  #L4e521e.  v0:= v3.`e1.g.j` @type ^`e1.g$a` @kind object;
  #L4e5222.  v1:= 0I;
  #L4e5224.  if v0 == 0 then goto L4e5236;
  #L4e5228.  v2:= v3.`e1.g.d` @type ^`com.bumptech.glide.f` @kind object;
  #L4e522c.  call `e`(v2, v0) @signature `Lcom/bumptech/glide/f;.e:(Lk1/d;)V` @kind virtual;
  #L4e5232.  v3.`e1.g.j` @type ^`e1.g$a` := v1 @kind object;
  #L4e5236.  v0:= v3.`e1.g.l` @type ^`e1.g$a` @kind object;
  #L4e523a.  if v0 == 0 then goto L4e524c;
  #L4e523e.  v2:= v3.`e1.g.d` @type ^`com.bumptech.glide.f` @kind object;
  #L4e5242.  call `e`(v2, v0) @signature `Lcom/bumptech/glide/f;.e:(Lk1/d;)V` @kind virtual;
  #L4e5248.  v3.`e1.g.l` @type ^`e1.g$a` := v1 @kind object;
  #L4e524c.  v0:= v3.`e1.g.o` @type ^`e1.g$a` @kind object;
  #L4e5250.  if v0 == 0 then goto L4e5262;
  #L4e5254.  v2:= v3.`e1.g.d` @type ^`com.bumptech.glide.f` @kind object;
  #L4e5258.  call `e`(v2, v0) @signature `Lcom/bumptech/glide/f;.e:(Lk1/d;)V` @kind virtual;
  #L4e525e.  v3.`e1.g.o` @type ^`e1.g$a` := v1 @kind object;
  #L4e5262.  v0:= v3.`e1.g.a` @type ^`p0.a` @kind object;
  #L4e5266.  call `clear`(v0) @signature `Lp0/a;.clear:()V` @kind interface;
  #L4e526c.  v0:= 1I;
  #L4e526e.  v3.`e1.g.k` @type ^`boolean` := v0 @kind boolean;
  #L4e5272.  return @kind void;
}
procedure `java.nio.ByteBuffer` `b`(`e1.g` v1 @kind this) @signature `Le1/g;.b:()Ljava/nio/ByteBuffer;` @AccessFlag  {
    temp;
    v0;

  #L4e5100.  v0:= v1.`e1.g.a` @type ^`p0.a` @kind object;
  #L4e5104.  call temp:= `getData`(v0) @signature `Lp0/a;.getData:()Ljava/nio/ByteBuffer;` @kind interface;
  #L4e510a.  v0:= temp @kind object;
  #L4e510c.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L4e5112.  v0:= temp @kind object;
  #L4e5114.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `c`(`e1.g` v1 @kind this) @signature `Le1/g;.c:()Landroid/graphics/Bitmap;` @AccessFlag  {
    temp;
    v0;

  #L4e4fd8.  v0:= v1.`e1.g.j` @type ^`e1.g$a` @kind object;
  #L4e4fdc.  if v0 == 0 then goto L4e4fea;
  #L4e4fe0.  call temp:= `a`(v0) @signature `Le1/g$a;.a:()Landroid/graphics/Bitmap;` @kind virtual;
  #L4e4fe6.  v0:= temp @kind object;
  #L4e4fe8.  goto L4e4fee;
  #L4e4fea.  v0:= v1.`e1.g.m` @type ^`android.graphics.Bitmap` @kind object;
  #L4e4fee.  return v0 @kind object;
}
procedure `int` `d`(`e1.g` v1 @kind this) @signature `Le1/g;.d:()I` @AccessFlag  {
    temp;
    v0;

  #L4e5068.  v0:= v1.`e1.g.j` @type ^`e1.g$a` @kind object;
  #L4e506c.  if v0 == 0 then goto L4e5076;
  #L4e5070.  v0:= v0.`e1.g$a.b` @type ^`int`;
  #L4e5074.  goto L4e5078;
  #L4e5076.  v0:= -1I;
  #L4e5078.  return v0;
}
procedure `android.graphics.Bitmap` `e`(`e1.g` v1 @kind this) @signature `Le1/g;.e:()Landroid/graphics/Bitmap;` @AccessFlag  {
    temp;
    v0;

  #L4e5000.  v0:= v1.`e1.g.m` @type ^`android.graphics.Bitmap` @kind object;
  #L4e5004.  return v0 @kind object;
}
procedure `int` `f`(`e1.g` v1 @kind this) @signature `Le1/g;.f:()I` @AccessFlag  {
    temp;
    v0;

  #L4e508c.  v0:= v1.`e1.g.a` @type ^`p0.a` @kind object;
  #L4e5090.  call temp:= `c`(v0) @signature `Lp0/a;.c:()I` @kind interface;
  #L4e5096.  v0:= temp;
  #L4e5098.  return v0;
}
procedure `int` `h`(`e1.g` v1 @kind this) @signature `Le1/g;.h:()I` @AccessFlag  {
    temp;
    v0;

  #L4e50ac.  v0:= v1.`e1.g.s` @type ^`int`;
  #L4e50b0.  return v0;
}
procedure `int` `j`(`e1.g` v2 @kind this) @signature `Le1/g;.j:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4e50c4.  v0:= v2.`e1.g.a` @type ^`p0.a` @kind object;
  #L4e50c8.  call temp:= `getByteSize`(v0) @signature `Lp0/a;.getByteSize:()I` @kind interface;
  #L4e50ce.  v0:= temp;
  #L4e50d0.  v1:= v2.`e1.g.q` @type ^`int`;
  #L4e50d4.  v0:= v0 + v1 @kind int;
  #L4e50d6.  return v0;
}
procedure `int` `k`(`e1.g` v1 @kind this) @signature `Le1/g;.k:()I` @AccessFlag  {
    temp;
    v0;

  #L4e50e8.  v0:= v1.`e1.g.r` @type ^`int`;
  #L4e50ec.  return v0;
}
procedure `void` `m`(`e1.g` v3 @kind this, `e1.g$a` v4 @kind object) @signature `Le1/g;.m:(Le1/g$a;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4e5368.  v0:= v3.`e1.g.p` @type ^`e1.g$d` @kind object;
  #L4e536c.  if v0 == 0 then goto L4e5376;
  #L4e5370.  call `a`(v0) @signature `Le1/g$d;.a:()V` @kind interface;
  #L4e5376.  v0:= 0I;
  #L4e5378.  v3.`e1.g.g` @type ^`boolean` := v0 @kind boolean;
  #L4e537c.  v0:= v3.`e1.g.k` @type ^`boolean` @kind boolean;
  #L4e5380.  v1:= 2I;
  #L4e5382.  if v0 == 0 then goto L4e539a;
  #L4e5386.  v0:= v3.`e1.g.b` @type ^`android.os.Handler` @kind object;
  #L4e538a.  call temp:= `obtainMessage`(v0, v1, v4) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L4e5390.  v4:= temp @kind object;
  #L4e5392.  call `sendToTarget`(v4) @signature `Landroid/os/Message;.sendToTarget:()V` @kind virtual;
  #L4e5398.  return @kind void;
  #L4e539a.  v0:= v3.`e1.g.f` @type ^`boolean` @kind boolean;
  #L4e539e.  if v0 != 0 then goto L4e53a8;
  #L4e53a2.  v3.`e1.g.o` @type ^`e1.g$a` := v4 @kind object;
  #L4e53a6.  return @kind void;
  #L4e53a8.  call temp:= `a`(v4) @signature `Le1/g$a;.a:()Landroid/graphics/Bitmap;` @kind virtual;
  #L4e53ae.  v0:= temp @kind object;
  #L4e53b0.  if v0 == 0 then goto L4e5408;
  #L4e53b4.  call `n`(v3) @signature `Le1/g;.n:()V` @kind direct;
  #L4e53ba.  v0:= v3.`e1.g.j` @type ^`e1.g$a` @kind object;
  #L4e53be.  v3.`e1.g.j` @type ^`e1.g$a` := v4 @kind object;
  #L4e53c2.  v4:= v3.`e1.g.c` @type ^`java.util.List` @kind object;
  #L4e53c6.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4e53cc.  v4:= temp;
  #L4e53ce.  v4:= v4 + -1;
  #L4e53d2.  if v4 < 0 then goto L4e53f2;
  #L4e53d6.  v2:= v3.`e1.g.c` @type ^`java.util.List` @kind object;
  #L4e53da.  call temp:= `get`(v2, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4e53e0.  v2:= temp @kind object;
  #L4e53e2.  v2:= (`e1.g$b`) v2 @kind object;
  #L4e53e6.  call `a`(v2) @signature `Le1/g$b;.a:()V` @kind interface;
  #L4e53ec.  v4:= v4 + -1;
  #L4e53f0.  goto L4e53d2;
  #L4e53f2.  if v0 == 0 then goto L4e5408;
  #L4e53f6.  v4:= v3.`e1.g.b` @type ^`android.os.Handler` @kind object;
  #L4e53fa.  call temp:= `obtainMessage`(v4, v1, v0) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L4e5400.  v4:= temp @kind object;
  #L4e5402.  call `sendToTarget`(v4) @signature `Landroid/os/Message;.sendToTarget:()V` @kind virtual;
  #L4e5408.  call `l`(v3) @signature `Le1/g;.l:()V` @kind direct;
  #L4e540e.  return @kind void;
}
procedure `void` `o`(`e1.g` v2 @kind this, `q0.g` v3 @kind object, `android.graphics.Bitmap` v4 @kind object) @signature `Le1/g;.o:(Lq0/g;Landroid/graphics/Bitmap;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4e544c.  call temp:= `d`(v3) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4e5452.  v0:= temp @kind object;
  #L4e5454.  v0:= (`q0.g`) v0 @kind object;
  #L4e5458.  v2.`e1.g.n` @type ^`q0.g` := v0 @kind object;
  #L4e545c.  call temp:= `d`(v4) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4e5462.  v0:= temp @kind object;
  #L4e5464.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L4e5468.  v2.`e1.g.m` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L4e546c.  v0:= v2.`e1.g.i` @type ^`com.bumptech.glide.e` @kind object;
  #L4e5470.  v1:= new `j1.c`;
  #L4e5474.  call `<init>`(v1) @signature `Lj1/c;.<init>:()V` @kind direct;
  #L4e547a.  call temp:= `T`(v1, v3) @signature `Lcom/bumptech/glide/request/a;.T:(Lq0/g;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L4e5480.  v3:= temp @kind object;
  #L4e5482.  call temp:= `X`(v0, v3) @signature `Lcom/bumptech/glide/e;.X:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/e;` @kind virtual;
  #L4e5488.  v3:= temp @kind object;
  #L4e548a.  v2.`e1.g.i` @type ^`com.bumptech.glide.e` := v3 @kind object;
  #L4e548e.  call temp:= `g`(v4) @signature `Ln1/k;.g:(Landroid/graphics/Bitmap;)I` @kind static;
  #L4e5494.  v3:= temp;
  #L4e5496.  v2.`e1.g.q` @type ^`int` := v3;
  #L4e549a.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L4e54a0.  v3:= temp;
  #L4e54a2.  v2.`e1.g.r` @type ^`int` := v3;
  #L4e54a6.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L4e54ac.  v3:= temp;
  #L4e54ae.  v2.`e1.g.s` @type ^`int` := v3;
  #L4e54b2.  return @kind void;
}
procedure `void` `r`(`e1.g` v2 @kind this, `e1.g$b` v3 @kind object) @signature `Le1/g;.r:(Le1/g$b;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4e550c.  v0:= v2.`e1.g.k` @type ^`boolean` @kind boolean;
  #L4e5510.  if v0 != 0 then goto L4e5556;
  #L4e5514.  v0:= v2.`e1.g.c` @type ^`java.util.List` @kind object;
  #L4e5518.  call temp:= `contains`(v0, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4e551e.  v0:= temp;
  #L4e5520.  if v0 != 0 then goto L4e5546;
  #L4e5524.  v0:= v2.`e1.g.c` @type ^`java.util.List` @kind object;
  #L4e5528.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4e552e.  v0:= temp;
  #L4e5530.  v1:= v2.`e1.g.c` @type ^`java.util.List` @kind object;
  #L4e5534.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e553a.  if v0 == 0 then goto L4e5544;
  #L4e553e.  call `p`(v2) @signature `Le1/g;.p:()V` @kind direct;
  #L4e5544.  return @kind void;
  #L4e5546.  v3:= new `java.lang.IllegalStateException`;
  #L4e554a.  v0:= "Cannot subscribe twice in a row" @kind object;
  #L4e554e.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e5554.  throw v3;
  #L4e5556.  v3:= new `java.lang.IllegalStateException`;
  #L4e555a.  v0:= "Cannot subscribe to a cleared frame loader" @kind object;
  #L4e555e.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e5564.  throw v3;
}
procedure `void` `s`(`e1.g` v1 @kind this, `e1.g$b` v2 @kind object) @signature `Le1/g;.s:(Le1/g$b;)V` @AccessFlag  {
    temp;
    v0;

  #L4e5578.  v0:= v1.`e1.g.c` @type ^`java.util.List` @kind object;
  #L4e557c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4e5582.  v2:= v1.`e1.g.c` @type ^`java.util.List` @kind object;
  #L4e5586.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4e558c.  v2:= temp;
  #L4e558e.  if v2 == 0 then goto L4e5598;
  #L4e5592.  call `q`(v1) @signature `Le1/g;.q:()V` @kind direct;
  #L4e5598.  return @kind void;
}
