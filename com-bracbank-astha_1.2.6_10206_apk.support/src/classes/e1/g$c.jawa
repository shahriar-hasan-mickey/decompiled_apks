record `e1.g$c` @kind class @AccessFlag  extends `android.os.Handler$Callback` @kind interface {
  `e1.g` `e1.g$c.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e1.g$c` v0 @kind this, `e1.g` v1 @kind object) @signature `Le1/g$c;.<init>:(Le1/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e4fbc.  v0.`e1.g$c.a` @type ^`e1.g` := v1 @kind object;
  #L4e4fc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e4fc6.  return @kind void;
}
procedure `boolean` `handleMessage`(`e1.g$c` v2 @kind this, `android.os.Message` v3 @kind object) @signature `Le1/g$c;.handleMessage:(Landroid/os/Message;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e4f6c.  v0:= v3.`android.os.Message.what` @type ^`int`;
  #L4e4f70.  v1:= 1I;
  #L4e4f72.  if v0 != v1 then goto L4e4f8a;
  #L4e4f76.  v3:= v3.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L4e4f7a.  v3:= (`e1.g$a`) v3 @kind object;
  #L4e4f7e.  v0:= v2.`e1.g$c.a` @type ^`e1.g` @kind object;
  #L4e4f82.  call `m`(v0, v3) @signature `Le1/g;.m:(Le1/g$a;)V` @kind virtual;
  #L4e4f88.  return v1;
  #L4e4f8a.  v1:= 2I;
  #L4e4f8c.  if v0 != v1 then goto L4e4fa6;
  #L4e4f90.  v3:= v3.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L4e4f94.  v3:= (`e1.g$a`) v3 @kind object;
  #L4e4f98.  v0:= v2.`e1.g$c.a` @type ^`e1.g` @kind object;
  #L4e4f9c.  v0:= v0.`e1.g.d` @type ^`com.bumptech.glide.f` @kind object;
  #L4e4fa0.  call `e`(v0, v3) @signature `Lcom/bumptech/glide/f;.e:(Lk1/d;)V` @kind virtual;
  #L4e4fa6.  v3:= 0I;
  #L4e4fa8.  return v3;
}
