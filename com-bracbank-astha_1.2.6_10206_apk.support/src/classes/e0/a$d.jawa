record `e0.a$d` @kind class @AccessFlag  {
  `long` `e0.a$d.a` @AccessFlag PUBLIC_FINAL;
  `long` `e0.a$d.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`e0.a$d` v3 @kind this, `long` v4 , `long` v6 ) @signature `Le0/a$d;.<init>:(JJ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4e0b8c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e0b92.  v0:= 0L;
  #L4e0b96.  v2:= lcmp(v6, v0);
  #L4e0b9a.  if v2 != 0 then goto L4e0bac;
  #L4e0b9e.  v3.`e0.a$d.a` @type ^`long` := v0 @kind wide;
  #L4e0ba2.  v4:= 1L;
  #L4e0ba6.  v3.`e0.a$d.b` @type ^`long` := v4 @kind wide;
  #L4e0baa.  return @kind void;
  #L4e0bac.  v3.`e0.a$d.a` @type ^`long` := v4 @kind wide;
  #L4e0bb0.  v3.`e0.a$d.b` @type ^`long` := v6 @kind wide;
  #L4e0bb4.  return @kind void;
}
procedure `double` `a`(`e0.a$d` v4 @kind this) @signature `Le0/a$d;.a:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e0b28.  v0:= v4.`e0.a$d.a` @type ^`long` @kind wide;
  #L4e0b2c.  v0:= (`double`) v0 @kind l2d;
  #L4e0b2e.  v2:= v4.`e0.a$d.b` @type ^`long` @kind wide;
  #L4e0b32.  v2:= (`double`) v2 @kind l2d;
  #L4e0b34.  v0:= v0 / v2 @kind double;
  #L4e0b36.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`e0.a$d` v3 @kind this) @signature `Le0/a$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e0b48.  v0:= new `java.lang.StringBuilder`;
  #L4e0b4c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4e0b52.  v1:= v3.`e0.a$d.a` @type ^`long` @kind wide;
  #L4e0b56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e0b5c.  v1:= "/" @kind object;
  #L4e0b60.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e0b66.  v1:= v3.`e0.a$d.b` @type ^`long` @kind wide;
  #L4e0b6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e0b70.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e0b76.  v0:= temp @kind object;
  #L4e0b78.  return v0 @kind object;
}
