record `w.a` @kind class @AccessFlag PUBLIC extends `android.text.Spannable` @kind interface {
  `android.text.Spannable` `w.a.a` @AccessFlag PRIVATE_FINAL;
  `w.a$a` `w.a.b` @AccessFlag PRIVATE_FINAL;
  `android.text.PrecomputedText` `w.a.c` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.Object` `@@w.a.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lw/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ffc44.  v0:= new `java.lang.Object`;
  #L4ffc48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ffc4e.  `@@w.a.d` @type ^`java.lang.Object` := v0 @kind object;
  #L4ffc52.  return @kind void;
}
procedure `w.a$a` `a`(`w.a` v1 @kind this) @signature `Lw/a;.a:()Lw/a$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffcfc.  v0:= v1.`w.a.b` @type ^`w.a$a` @kind object;
  #L4ffd00.  return v0 @kind object;
}
procedure `android.text.PrecomputedText` `b`(`w.a` v2 @kind this) @signature `Lw/a;.b:()Landroid/text/PrecomputedText;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ffae4.  v0:= v2.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffae8.  v1:= instanceof @variable v0 @type ^`android.text.PrecomputedText` @kind boolean;
  #L4ffaec.  if v1 == 0 then goto L4ffaf6;
  #L4ffaf0.  v0:= (`android.text.PrecomputedText`) v0 @kind object;
  #L4ffaf4.  return v0 @kind object;
  #L4ffaf6.  v0:= 0I;
  #L4ffaf8.  return v0 @kind object;
}
procedure `char` `charAt`(`w.a` v1 @kind this, `int` v2 ) @signature `Lw/a;.charAt:(I)C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffb0c.  v0:= v1.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffb10.  call temp:= `charAt`(v0, v2) @signature `Landroid/text/Spannable;.charAt:(I)C` @kind interface;
  #L4ffb16.  v2:= temp;
  #L4ffb18.  return v2;
}
procedure `int` `getSpanEnd`(`w.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lw/a;.getSpanEnd:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffb2c.  v0:= v1.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffb30.  call temp:= `getSpanEnd`(v0, v2) @signature `Landroid/text/Spannable;.getSpanEnd:(Ljava/lang/Object;)I` @kind interface;
  #L4ffb36.  v2:= temp;
  #L4ffb38.  return v2;
}
procedure `int` `getSpanFlags`(`w.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lw/a;.getSpanFlags:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffb4c.  v0:= v1.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffb50.  call temp:= `getSpanFlags`(v0, v2) @signature `Landroid/text/Spannable;.getSpanFlags:(Ljava/lang/Object;)I` @kind interface;
  #L4ffb56.  v2:= temp;
  #L4ffb58.  return v2;
}
procedure `int` `getSpanStart`(`w.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lw/a;.getSpanStart:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffb6c.  v0:= v1.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffb70.  call temp:= `getSpanStart`(v0, v2) @signature `Landroid/text/Spannable;.getSpanStart:(Ljava/lang/Object;)I` @kind interface;
  #L4ffb76.  v2:= temp;
  #L4ffb78.  return v2;
}
procedure `java.lang.Object`[] `getSpans`(`w.a` v2 @kind this, `int` v3 , `int` v4 , `java.lang.Class` v5 @kind object) @signature `Lw/a;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ffbec.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4ffbf0.  v1:= 29I;
  #L4ffbf4.  if v0 < v1 then goto L4ffc06;
  #L4ffbf8.  v0:= v2.`w.a.c` @type ^`android.text.PrecomputedText` @kind object;
  #L4ffbfc.  call temp:= `getSpans`(v0, v3, v4, v5) @signature `Landroid/text/PrecomputedText;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @kind virtual;
  #L4ffc02.  v3:= temp @kind object;
  #L4ffc04.  return v3 @kind object;
  #L4ffc06.  v0:= v2.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffc0a.  call temp:= `getSpans`(v0, v3, v4, v5) @signature `Landroid/text/Spannable;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @kind interface;
  #L4ffc10.  v3:= temp @kind object;
  #L4ffc12.  return v3 @kind object;
}
procedure `int` `length`(`w.a` v1 @kind this) @signature `Lw/a;.length:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffb8c.  v0:= v1.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffb90.  call temp:= `length`(v0) @signature `Landroid/text/Spannable;.length:()I` @kind interface;
  #L4ffb96.  v0:= temp;
  #L4ffb98.  return v0;
}
procedure `int` `nextSpanTransition`(`w.a` v1 @kind this, `int` v2 , `int` v3 , `java.lang.Class` v4 @kind object) @signature `Lw/a;.nextSpanTransition:(IILjava/lang/Class;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffbac.  v0:= v1.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffbb0.  call temp:= `nextSpanTransition`(v0, v2, v3, v4) @signature `Landroid/text/Spannable;.nextSpanTransition:(IILjava/lang/Class;)I` @kind interface;
  #L4ffbb6.  v2:= temp;
  #L4ffbb8.  return v2;
}
procedure `void` `removeSpan`(`w.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lw/a;.removeSpan:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ffc64.  v0:= instanceof @variable v3 @type ^`android.text.style.MetricAffectingSpan` @kind boolean;
  #L4ffc68.  if v0 != 0 then goto L4ffc90;
  #L4ffc6c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4ffc70.  v1:= 29I;
  #L4ffc74.  if v0 < v1 then goto L4ffc84;
  #L4ffc78.  v0:= v2.`w.a.c` @type ^`android.text.PrecomputedText` @kind object;
  #L4ffc7c.  call `removeSpan`(v0, v3) @signature `Landroid/text/PrecomputedText;.removeSpan:(Ljava/lang/Object;)V` @kind virtual;
  #L4ffc82.  goto L4ffc8e;
  #L4ffc84.  v0:= v2.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffc88.  call `removeSpan`(v0, v3) @signature `Landroid/text/Spannable;.removeSpan:(Ljava/lang/Object;)V` @kind interface;
  #L4ffc8e.  return @kind void;
  #L4ffc90.  v3:= new `java.lang.IllegalArgumentException`;
  #L4ffc94.  v0:= "MetricAffectingSpan can not be removed from PrecomputedText." @kind object;
  #L4ffc98.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ffc9e.  throw v3;
}
procedure `void` `setSpan`(`w.a` v2 @kind this, `java.lang.Object` v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lw/a;.setSpan:(Ljava/lang/Object;III)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ffcb0.  v0:= instanceof @variable v3 @type ^`android.text.style.MetricAffectingSpan` @kind boolean;
  #L4ffcb4.  if v0 != 0 then goto L4ffcdc;
  #L4ffcb8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4ffcbc.  v1:= 29I;
  #L4ffcc0.  if v0 < v1 then goto L4ffcd0;
  #L4ffcc4.  v0:= v2.`w.a.c` @type ^`android.text.PrecomputedText` @kind object;
  #L4ffcc8.  call `setSpan`(v0, v3, v4, v5, v6) @signature `Landroid/text/PrecomputedText;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L4ffcce.  goto L4ffcda;
  #L4ffcd0.  v0:= v2.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffcd4.  call `setSpan`(v0, v3, v4, v5, v6) @signature `Landroid/text/Spannable;.setSpan:(Ljava/lang/Object;III)V` @kind interface;
  #L4ffcda.  return @kind void;
  #L4ffcdc.  v3:= new `java.lang.IllegalArgumentException`;
  #L4ffce0.  v4:= "MetricAffectingSpan can not be set to PrecomputedText." @kind object;
  #L4ffce4.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ffcea.  throw v3;
}
procedure `java.lang.CharSequence` `subSequence`(`w.a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lw/a;.subSequence:(II)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffbcc.  v0:= v1.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffbd0.  call temp:= `subSequence`(v0, v2, v3) @signature `Landroid/text/Spannable;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L4ffbd6.  v2:= temp @kind object;
  #L4ffbd8.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`w.a` v1 @kind this) @signature `Lw/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffc24.  v0:= v1.`w.a.a` @type ^`android.text.Spannable` @kind object;
  #L4ffc28.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ffc2e.  v0:= temp @kind object;
  #L4ffc30.  return v0 @kind object;
}
