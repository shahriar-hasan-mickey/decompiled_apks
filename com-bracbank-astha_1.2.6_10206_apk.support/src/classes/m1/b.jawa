record `m1.b` @kind class @AccessFlag PUBLIC_FINAL extends `q0.b` @kind interface {
  `java.lang.Object` `m1.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`m1.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm1/b;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ec424.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ec42a.  call temp:= `d`(v1) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ec430.  v1:= temp @kind object;
  #L4ec432.  v0.`m1.b.b` @type ^`java.lang.Object` := v1 @kind object;
  #L4ec436.  return @kind void;
}
procedure `void` `a`(`m1.b` v2 @kind this, `java.security.MessageDigest` v3 @kind object) @signature `Lm1/b;.a:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ec448.  v0:= v2.`m1.b.b` @type ^`java.lang.Object` @kind object;
  #L4ec44c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ec452.  v0:= temp @kind object;
  #L4ec454.  v1:= `@@q0.b.a` @type ^`java.nio.charset.Charset` @kind object;
  #L4ec458.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L4ec45e.  v0:= temp @kind object;
  #L4ec460.  call `update`(v3, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L4ec466.  return @kind void;
}
procedure `boolean` `equals`(`m1.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm1/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ec38c.  v0:= instanceof @variable v2 @type ^`m1.b` @kind boolean;
  #L4ec390.  if v0 == 0 then goto L4ec3aa;
  #L4ec394.  v2:= (`m1.b`) v2 @kind object;
  #L4ec398.  v0:= v1.`m1.b.b` @type ^`java.lang.Object` @kind object;
  #L4ec39c.  v2:= v2.`m1.b.b` @type ^`java.lang.Object` @kind object;
  #L4ec3a0.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ec3a6.  v2:= temp;
  #L4ec3a8.  return v2;
  #L4ec3aa.  v2:= 0I;
  #L4ec3ac.  return v2;
}
procedure `int` `hashCode`(`m1.b` v1 @kind this) @signature `Lm1/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ec3c0.  v0:= v1.`m1.b.b` @type ^`java.lang.Object` @kind object;
  #L4ec3c4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4ec3ca.  v0:= temp;
  #L4ec3cc.  return v0;
}
procedure `java.lang.String` `toString`(`m1.b` v2 @kind this) @signature `Lm1/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ec3e0.  v0:= new `java.lang.StringBuilder`;
  #L4ec3e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ec3ea.  v1:= "ObjectKey{object=" @kind object;
  #L4ec3ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ec3f4.  v1:= v2.`m1.b.b` @type ^`java.lang.Object` @kind object;
  #L4ec3f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ec3fe.  v1:= 125I;
  #L4ec402.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ec408.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ec40e.  v0:= temp @kind object;
  #L4ec410.  return v0 @kind object;
}
