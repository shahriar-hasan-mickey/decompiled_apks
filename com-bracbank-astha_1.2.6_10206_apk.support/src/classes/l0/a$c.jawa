record `l0.a$c` @kind class @AccessFlag  {
  `boolean` `l0.a$c.a` @AccessFlag FINAL;
  `java.lang.String` `l0.a$c.b` @AccessFlag FINAL;
  `java.lang.String` `l0.a$c.c` @AccessFlag FINAL;
  `l0.a$b` `l0.a$c.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`l0.a$c` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `boolean` v5 , `l0.a$b` v6 @kind object) @signature `Ll0/a$c;.<init>:(Ljava/lang/String;Ljava/lang/String;ZLl0/a$b;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4ec148.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ec14e.  call temp:= `isEmpty`(v4) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4ec154.  v0:= temp;
  #L4ec156.  if v0 != 0 then goto L4ec19e;
  #L4ec15a.  v0:= 0I;
  #L4ec15c.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4ec162.  v0:= temp;
  #L4ec164.  v1:= 47I;
  #L4ec168.  if v0 != v1 then goto L4ec19e;
  #L4ec16c.  v0:= "/" @kind object;
  #L4ec170.  call temp:= `endsWith`(v4, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4ec176.  v0:= temp;
  #L4ec178.  if v0 == 0 then goto L4ec18e;
  #L4ec17c.  v2.`l0.a$c.b` @type ^`java.lang.String` := v3 @kind object;
  #L4ec180.  v2.`l0.a$c.c` @type ^`java.lang.String` := v4 @kind object;
  #L4ec184.  v2.`l0.a$c.a` @type ^`boolean` := v5 @kind boolean;
  #L4ec188.  v2.`l0.a$c.d` @type ^`l0.a$b` := v6 @kind object;
  #L4ec18c.  return @kind void;
  #L4ec18e.  v3:= new `java.lang.IllegalArgumentException`;
  #L4ec192.  v4:= "Path should end with a slash '/'" @kind object;
  #L4ec196.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ec19c.  throw v3;
  #L4ec19e.  v3:= new `java.lang.IllegalArgumentException`;
  #L4ec1a2.  v4:= "Path should start with a slash '/'." @kind object;
  #L4ec1a6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ec1ac.  throw v3;
}
procedure `java.lang.String` `a`(`l0.a$c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Ll0/a$c;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ec088.  v0:= v2.`l0.a$c.c` @type ^`java.lang.String` @kind object;
  #L4ec08c.  v1:= "" @kind object;
  #L4ec090.  call temp:= `replaceFirst`(v3, v0, v1) @signature `Ljava/lang/String;.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4ec096.  v3:= temp @kind object;
  #L4ec098.  return v3 @kind object;
}
procedure `l0.a$b` `b`(`l0.a$c` v3 @kind this, `android.net.Uri` v4 @kind object) @signature `Ll0/a$c;.b:(Landroid/net/Uri;)Ll0/a$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ec0ac.  call temp:= `getScheme`(v4) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L4ec0b2.  v0:= temp @kind object;
  #L4ec0b4.  v1:= "http" @kind object;
  #L4ec0b8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ec0be.  v0:= temp;
  #L4ec0c0.  v2:= 0I;
  #L4ec0c2.  if v0 == 0 then goto L4ec0d0;
  #L4ec0c6.  v0:= v3.`l0.a$c.a` @type ^`boolean` @kind boolean;
  #L4ec0ca.  if v0 != 0 then goto L4ec0d0;
  #L4ec0ce.  return v2 @kind object;
  #L4ec0d0.  call temp:= `getScheme`(v4) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L4ec0d6.  v0:= temp @kind object;
  #L4ec0d8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ec0de.  v0:= temp;
  #L4ec0e0.  if v0 != 0 then goto L4ec0fe;
  #L4ec0e4.  call temp:= `getScheme`(v4) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L4ec0ea.  v0:= temp @kind object;
  #L4ec0ec.  v1:= "https" @kind object;
  #L4ec0f0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ec0f6.  v0:= temp;
  #L4ec0f8.  if v0 != 0 then goto L4ec0fe;
  #L4ec0fc.  return v2 @kind object;
  #L4ec0fe.  call temp:= `getAuthority`(v4) @signature `Landroid/net/Uri;.getAuthority:()Ljava/lang/String;` @kind virtual;
  #L4ec104.  v0:= temp @kind object;
  #L4ec106.  v1:= v3.`l0.a$c.b` @type ^`java.lang.String` @kind object;
  #L4ec10a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ec110.  v0:= temp;
  #L4ec112.  if v0 != 0 then goto L4ec118;
  #L4ec116.  return v2 @kind object;
  #L4ec118.  call temp:= `getPath`(v4) @signature `Landroid/net/Uri;.getPath:()Ljava/lang/String;` @kind virtual;
  #L4ec11e.  v4:= temp @kind object;
  #L4ec120.  v0:= v3.`l0.a$c.c` @type ^`java.lang.String` @kind object;
  #L4ec124.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4ec12a.  v4:= temp;
  #L4ec12c.  if v4 != 0 then goto L4ec132;
  #L4ec130.  return v2 @kind object;
  #L4ec132.  v4:= v3.`l0.a$c.d` @type ^`l0.a$b` @kind object;
  #L4ec136.  return v4 @kind object;
}
