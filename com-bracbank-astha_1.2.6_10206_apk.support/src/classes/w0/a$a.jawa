record `w0.a$a` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `w0.a$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `w0.a$a.b` @AccessFlag PRIVATE;
  `int` `w0.a$a.c` @AccessFlag PRIVATE;
  `w0.a$c` `w0.a$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `w0.a$a.e` @AccessFlag PRIVATE;
  `long` `w0.a$a.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`w0.a$a` v1 @kind this, `boolean` v2 ) @signature `Lw0/a$a;.<init>:(Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4ffd14.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ffd1a.  v0:= `@@w0.a$c.d` @type ^`w0.a$c` @kind object;
  #L4ffd1e.  v1.`w0.a$a.d` @type ^`w0.a$c` := v0 @kind object;
  #L4ffd22.  v1.`w0.a$a.a` @type ^`boolean` := v2 @kind boolean;
  #L4ffd26.  return @kind void;
}
procedure `w0.a` `a`(`w0.a$a` v11 @kind this) @signature `Lw0/a$a;.a:()Lw0/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4ffd38.  v0:= v11.`w0.a$a.e` @type ^`java.lang.String` @kind object;
  #L4ffd3c.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L4ffd42.  v0:= temp;
  #L4ffd44.  if v0 != 0 then goto L4ffda8;
  #L4ffd48.  v0:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L4ffd4c.  v2:= v11.`w0.a$a.b` @type ^`int`;
  #L4ffd50.  v3:= v11.`w0.a$a.c` @type ^`int`;
  #L4ffd54.  v4:= v11.`w0.a$a.f` @type ^`long` @kind wide;
  #L4ffd58.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ffd5c.  v7:= new `java.util.concurrent.PriorityBlockingQueue`;
  #L4ffd60.  call `<init>`(v7) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.<init>:()V` @kind direct;
  #L4ffd66.  v8:= new `w0.a$b`;
  #L4ffd6a.  v1:= v11.`w0.a$a.e` @type ^`java.lang.String` @kind object;
  #L4ffd6e.  v9:= v11.`w0.a$a.d` @type ^`w0.a$c` @kind object;
  #L4ffd72.  v10:= v11.`w0.a$a.a` @type ^`boolean` @kind boolean;
  #L4ffd76.  call `<init>`(v8, v1, v9, v10) @signature `Lw0/a$b;.<init>:(Ljava/lang/String;Lw0/a$c;Z)V` @kind direct;
  #L4ffd7c.  v1:= v0 @kind object;
  #L4ffd7e.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L4ffd84.  v1:= v11.`w0.a$a.f` @type ^`long` @kind wide;
  #L4ffd88.  v3:= 0L;
  #L4ffd8c.  v5:= lcmp(v1, v3);
  #L4ffd90.  if v5 == 0 then goto L4ffd9c;
  #L4ffd94.  v1:= 1I;
  #L4ffd96.  call `allowCoreThreadTimeOut`(v0, v1) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.allowCoreThreadTimeOut:(Z)V` @kind virtual;
  #L4ffd9c.  v1:= new `w0.a`;
  #L4ffda0.  call `<init>`(v1, v0) @signature `Lw0/a;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L4ffda6.  return v1 @kind object;
  #L4ffda8.  v0:= new `java.lang.IllegalArgumentException`;
  #L4ffdac.  v1:= new `java.lang.StringBuilder`;
  #L4ffdb0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ffdb6.  v2:= "Name must be non-null and non-empty, but given: " @kind object;
  #L4ffdba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ffdc0.  v2:= v11.`w0.a$a.e` @type ^`java.lang.String` @kind object;
  #L4ffdc4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ffdca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ffdd0.  v1:= temp @kind object;
  #L4ffdd2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ffdd8.  throw v0;
}
procedure `w0.a$a` `b`(`w0.a$a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lw0/a$a;.b:(Ljava/lang/String;)Lw0/a$a;` @AccessFlag PUBLIC {
    temp;

  #L4ffdec.  v0.`w0.a$a.e` @type ^`java.lang.String` := v1 @kind object;
  #L4ffdf0.  return v0 @kind object;
}
procedure `w0.a$a` `c`(`w0.a$a` v0 @kind this, `int` v1 ) @signature `Lw0/a$a;.c:(I)Lw0/a$a;` @AccessFlag PUBLIC {
    temp;

  #L4ffe04.  v0.`w0.a$a.b` @type ^`int` := v1;
  #L4ffe08.  v0.`w0.a$a.c` @type ^`int` := v1;
  #L4ffe0c.  return v0 @kind object;
}
