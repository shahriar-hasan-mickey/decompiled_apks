record `w0.a$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.lang.String` `w0.a$b.a` @AccessFlag PRIVATE_FINAL;
  `w0.a$c` `w0.a$b.b` @AccessFlag FINAL;
  `boolean` `w0.a$b.c` @AccessFlag FINAL;
  `int` `w0.a$b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`w0.a$b` v0 @kind this, `java.lang.String` v1 @kind object, `w0.a$c` v2 @kind object, `boolean` v3 ) @signature `Lw0/a$b;.<init>:(Ljava/lang/String;Lw0/a$c;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fff28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fff2e.  v0.`w0.a$b.a` @type ^`java.lang.String` := v1 @kind object;
  #L4fff32.  v0.`w0.a$b.b` @type ^`w0.a$c` := v2 @kind object;
  #L4fff36.  v0.`w0.a$b.c` @type ^`boolean` := v3 @kind boolean;
  #L4fff3a.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`w0.a$b` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lw0/a$b;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ffeb0.  @monitorenter v3
  #L4ffeb2.  v0:= new `w0.a$b$a`;
  #L4ffeb6.  v1:= new `java.lang.StringBuilder`;
  #L4ffeba.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ffec0.  v2:= "glide-" @kind object;
  #L4ffec4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ffeca.  v2:= v3.`w0.a$b.a` @type ^`java.lang.String` @kind object;
  #L4ffece.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ffed4.  v2:= "-thread-" @kind object;
  #L4ffed8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ffede.  v2:= v3.`w0.a$b.d` @type ^`int`;
  #L4ffee2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ffee8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ffeee.  v1:= temp @kind object;
  #L4ffef0.  call `<init>`(v0, v3, v4, v1) @signature `Lw0/a$b$a;.<init>:(Lw0/a$b;Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L4ffef6.  v4:= v3.`w0.a$b.d` @type ^`int`;
  #L4ffefa.  v4:= v4 + 1;
  #L4ffefe.  v3.`w0.a$b.d` @type ^`int` := v4;
  #L4fff02.  @monitorexit v3
  #L4fff04.  return v0 @kind object;
  #L4fff06.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fff08.  @monitorexit v3
  #L4fff0a.  throw v4;
  catch `java.lang.Throwable` @[L4ffeb2..L4fff02] goto L4fff06;
}
