record `com.binimoy.clientsdk.utils.SecurityUtils` @kind class @AccessFlag PUBLIC {
}
global `int` `@@com.binimoy.clientsdk.utils.SecurityUtils.MAX_LENGTH` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.binimoy.clientsdk.utils.SecurityUtils.MIN_LENGTH` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`com.binimoy.clientsdk.utils.SecurityUtils` v0 @kind this) @signature `Lcom/binimoy/clientsdk/utils/SecurityUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L219e14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L219e1a.  return @kind void;
}
procedure `boolean` `matchedPasswordComplexity`(`com.binimoy.clientsdk.utils.SecurityUtils` v9 @kind this, `java.lang.String` v10 @kind object) @signature `Lcom/binimoy/clientsdk/utils/SecurityUtils;.matchedPasswordComplexity:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L219d44.  v0:= "0" @kind object;
  #L219d48.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L219d4e.  v0:= temp;
  #L219d50.  v1:= 0I;
  #L219d52.  v2:= 1I;
  #L219d54.  if v0 == 0 then goto L219d60;
  #L219d58.  v0:= 13I;
  #L219d5c.  v3:= 1I;
  #L219d5e.  goto L219d64;
  #L219d60.  v0:= 7I;
  #L219d62.  v3:= 0I;
  #L219d64.  if v0 == 0 then goto L219d6e;
  #L219d68.  v0:= 0I;
  #L219d6a.  v4:= 0I;
  #L219d6c.  goto L219d72;
  #L219d6e.  v0:= 1I;
  #L219d70.  v4:= 1I;
  #L219d72.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L219d78.  v5:= temp;
  #L219d7a.  v6:= `@@com.binimoy.clientsdk.utils.SecurityUtils.MAX_LENGTH` @type ^`int`;
  #L219d7e.  if v5 <= v6 then goto L219d84;
  #L219d82.  return v1;
  #L219d84.  v6:= `@@com.binimoy.clientsdk.utils.SecurityUtils.MIN_LENGTH` @type ^`int`;
  #L219d88.  if v5 >= v6 then goto L219d8e;
  #L219d8c.  return v1;
  #L219d8e.  v5:= 0I;
  #L219d90.  v6:= 0I;
  #L219d92.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L219d98.  v7:= temp;
  #L219d9a.  if v5 >= v7 then goto L219dee;
  #L219d9e.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L219da4.  v7:= temp;
  #L219da6.  if v4 != 0 then goto L219dba;
  #L219daa.  call temp:= `isLetterOrDigit`(v7) @signature `Ljava/lang/Character;.isLetterOrDigit:(C)Z` @kind static;
  #L219db0.  v8:= temp;
  #L219db2.  if v8 != 0 then goto L219dba;
  #L219db6.  v4:= 1I;
  #L219db8.  goto L219de8;
  #L219dba.  if v0 != 0 then goto L219dce;
  #L219dbe.  call temp:= `isDigit`(v7) @signature `Ljava/lang/Character;.isDigit:(C)Z` @kind static;
  #L219dc4.  v8:= temp;
  #L219dc6.  if v8 == 0 then goto L219dce;
  #L219dca.  v0:= 1I;
  #L219dcc.  goto L219de8;
  #L219dce.  if v6 == 0 then goto L219dd6;
  #L219dd2.  if v3 != 0 then goto L219de8;
  #L219dd6.  call temp:= `isUpperCase`(v7) @signature `Ljava/lang/Character;.isUpperCase:(C)Z` @kind static;
  #L219ddc.  v7:= temp;
  #L219dde.  if v7 == 0 then goto L219de6;
  #L219de2.  v6:= 1I;
  #L219de4.  goto L219de8;
  #L219de6.  v3:= 1I;
  #L219de8.  v5:= v5 + 1;
  #L219dec.  goto L219d92;
  #L219dee.  if v4 == 0 then goto L219e00;
  #L219df2.  if v0 == 0 then goto L219e00;
  #L219df6.  if v6 == 0 then goto L219e00;
  #L219dfa.  if v3 == 0 then goto L219e00;
  #L219dfe.  return v2;
  #L219e00.  return v1;
}
