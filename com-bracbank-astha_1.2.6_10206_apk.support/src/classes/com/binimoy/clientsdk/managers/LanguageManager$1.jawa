record `com.binimoy.clientsdk.managers.LanguageManager$1` @kind class @AccessFlag PUBLIC {
}
procedure `int` `substring`() @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.substring:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2143c4.  v0:= new `java.util.Random`;
  #L2143c8.  call `<init>`(v0) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L2143ce.  v1:= 75I;
  #L2143d2.  call temp:= `nextInt`(v0, v1) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L2143d8.  v0:= temp;
  #L2143da.  v0:= v0 + 1;
  #L2143de.  return v0;
  #L2143e0.  v0:= 0I;
  #L2143e2.  return v0;
  catch `com.binimoy.clientsdk.managers.LanguageManager$ArrayOutOfBoundsException` @[L2143c4..L2143da] goto L2143e0;
}
procedure `java.lang.String` `substring`(`int` v9 , `java.lang.String` v10 @kind object) @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.substring:(ILjava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L214404.  v0:= "0" @kind object;
  #L214408.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L21440e.  v1:= temp;
  #L214410.  v2:= 4I;
  #L214412.  if v1 == 0 then goto L214420;
  #L214416.  v1:= 13I;
  #L21441a.  v4:= v0 @kind object;
  #L21441c.  v3:= 4I;
  #L21441e.  goto L214430;
  #L214420.  v1:= 5I;
  #L214422.  v3:= 9I;
  #L214426.  v4:= "2" @kind object;
  #L21442a.  v1:= 9I;
  #L21442e.  v3:= 5I;
  #L214430.  v5:= 0I;
  #L214432.  v6:= 0I;
  #L214434.  v7:= 1I;
  #L214436.  if v1 == 0 then goto L21444c;
  #L21443a.  call temp:= `toCharArray`(v10) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L214440.  v10:= temp @kind object;
  #L214442.  v4:= v0 @kind object;
  #L214444.  v1:= 0I;
  #L214446.  v8:= 0I;
  #L214448.  v0:= v10 @kind object;
  #L21444a.  goto L214454;
  #L21444c.  v1:= v1 + v2 @kind int;
  #L21444e.  v10:= v5 @kind object;
  #L214450.  v0:= v10 @kind object;
  #L214452.  v8:= 1I;
  #L214454.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L21445a.  v4:= temp;
  #L21445c.  if v4 == 0 then goto L214468;
  #L214460.  v1:= v1 + 12;
  #L214464.  v10:= 1I;
  #L214466.  goto L214470;
  #L214468.  v10:= length @variable v10;
  #L21446a.  v1:= v1 + 10;
  #L21446e.  v5:= v0 @kind object;
  #L214470.  if v1 == 0 then goto L21447a;
  #L214474.  v2:= v2 ^< v3 @kind int;
  #L214476.  v0:= 1I;
  #L214478.  goto L21447e;
  #L21447a.  v0:= 0I;
  #L21447c.  v8:= 1I;
  #L21447e.  v2:= v2 - v0 @kind int;
  #L214480.  v0:= v2 ^~ 32;
  #L214484.  if v8 == v10 then goto L2144a2;
  #L214488.  v1:= v5[v8] @kind char;
  #L21448c.  v2:= v9 ^& v0 @kind int;
  #L214490.  v1:= v1 ^~ v2 @kind int;
  #L214492.  v9:= v9 + v7 @kind int;
  #L214494.  v2:= v8 + 1;
  #L214498.  v1:= (`char`) v1 @kind i2c;
  #L21449a.  v5[v8]:= v1 @kind char;
  #L21449e.  v8:= v2;
  #L2144a0.  goto L214484;
  #L2144a2.  call temp:= `valueOf`(v5, v6, v10) @signature `Ljava/lang/String;.valueOf:([CII)Ljava/lang/String;` @kind static;
  #L2144a8.  v9:= temp @kind object;
  #L2144aa.  return v9 @kind object;
}
