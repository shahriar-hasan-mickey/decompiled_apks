record `com.bumptech.glide.f$b` @kind class @AccessFlag  extends `g1.a$a` @kind interface {
  `g1.i` `com.bumptech.glide.f$b.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.f` `com.bumptech.glide.f$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.f$b` v0 @kind this, `com.bumptech.glide.f` v1 @kind object, `g1.i` v2 @kind object) @signature `Lcom/bumptech/glide/f$b;.<init>:(Lcom/bumptech/glide/f;Lg1/i;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L22021c.  v0.`com.bumptech.glide.f$b.b` @type ^`com.bumptech.glide.f` := v1 @kind object;
  #L220220.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L220226.  v0.`com.bumptech.glide.f$b.a` @type ^`g1.i` := v2 @kind object;
  #L22022a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.f$b` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/f$b;.a:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22023c.  if v2 == 0 then goto L22025a;
  #L220240.  v2:= v1.`com.bumptech.glide.f$b.b` @type ^`com.bumptech.glide.f` @kind object;
  #L220244.  @monitorenter v2
  #L220246.  v0:= v1.`com.bumptech.glide.f$b.a` @type ^`g1.i` @kind object;
  #L22024a.  call `e`(v0) @signature `Lg1/i;.e:()V` @kind virtual;
  #L220250.  @monitorexit v2
  #L220252.  goto L22025a;
  #L220254.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L220256.  @monitorexit v2
  #L220258.  throw v0;
  #L22025a.  return @kind void;
  catch `java.lang.Throwable` @[L220246..L220258] goto L220254;
}
