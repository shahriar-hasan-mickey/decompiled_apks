record `com.bumptech.glide.d` @kind class @AccessFlag PUBLIC extends `android.content.ContextWrapper` @kind class {
  `u0.b` `com.bumptech.glide.d.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.Registry` `com.bumptech.glide.d.b` @AccessFlag PRIVATE_FINAL;
  `k1.b` `com.bumptech.glide.d.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.b$a` `com.bumptech.glide.d.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.d.e` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.d.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.h` `com.bumptech.glide.d.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.d.h` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.d.i` @AccessFlag PRIVATE_FINAL;
  `j1.c` `com.bumptech.glide.d.j` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.g` `@@com.bumptech.glide.d.k` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L21df5c.  v0:= new `com.bumptech.glide.a`;
  #L21df60.  call `<init>`(v0) @signature `Lcom/bumptech/glide/a;.<init>:()V` @kind direct;
  #L21df66.  `@@com.bumptech.glide.d.k` @type ^`com.bumptech.glide.g` := v0 @kind object;
  #L21df6a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.d` v0 @kind this, `android.content.Context` v1 @kind object, `u0.b` v2 @kind object, `com.bumptech.glide.Registry` v3 @kind object, `k1.b` v4 @kind object, `com.bumptech.glide.b$a` v5 @kind object, `java.util.Map` v6 @kind object, `java.util.List` v7 @kind object, `com.bumptech.glide.load.engine.h` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lcom/bumptech/glide/d;.<init>:(Landroid/content/Context;Lu0/b;Lcom/bumptech/glide/Registry;Lk1/b;Lcom/bumptech/glide/b$a;Ljava/util/Map;Ljava/util/List;Lcom/bumptech/glide/load/engine/h;ZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L21df7c.  call temp:= `getApplicationContext`(v1) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L21df82.  v1:= temp @kind object;
  #L21df84.  call `<init>`(v0, v1) @signature `Landroid/content/ContextWrapper;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L21df8a.  v0.`com.bumptech.glide.d.a` @type ^`u0.b` := v2 @kind object;
  #L21df8e.  v0.`com.bumptech.glide.d.b` @type ^`com.bumptech.glide.Registry` := v3 @kind object;
  #L21df92.  v0.`com.bumptech.glide.d.c` @type ^`k1.b` := v4 @kind object;
  #L21df96.  v0.`com.bumptech.glide.d.d` @type ^`com.bumptech.glide.b$a` := v5 @kind object;
  #L21df9a.  v0.`com.bumptech.glide.d.e` @type ^`java.util.List` := v7 @kind object;
  #L21df9e.  v0.`com.bumptech.glide.d.f` @type ^`java.util.Map` := v6 @kind object;
  #L21dfa2.  v0.`com.bumptech.glide.d.g` @type ^`com.bumptech.glide.load.engine.h` := v8 @kind object;
  #L21dfa6.  v0.`com.bumptech.glide.d.h` @type ^`boolean` := v9 @kind boolean;
  #L21dfaa.  v0.`com.bumptech.glide.d.i` @type ^`int` := v10;
  #L21dfae.  return @kind void;
}
procedure `u0.b` `a`(`com.bumptech.glide.d` v1 @kind this) @signature `Lcom/bumptech/glide/d;.a:()Lu0/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21df44.  v0:= v1.`com.bumptech.glide.d.a` @type ^`u0.b` @kind object;
  #L21df48.  return v0 @kind object;
}
procedure `java.util.List` `b`(`com.bumptech.glide.d` v1 @kind this) @signature `Lcom/bumptech/glide/d;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21df2c.  v0:= v1.`com.bumptech.glide.d.e` @type ^`java.util.List` @kind object;
  #L21df30.  return v0 @kind object;
}
procedure `j1.c` `c`(`com.bumptech.glide.d` v1 @kind this) @signature `Lcom/bumptech/glide/d;.c:()Lj1/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21dedc.  @monitorenter v1
  #L21dede.  v0:= v1.`com.bumptech.glide.d.j` @type ^`j1.c` @kind object;
  #L21dee2.  if v0 != 0 then goto L21df02;
  #L21dee6.  v0:= v1.`com.bumptech.glide.d.d` @type ^`com.bumptech.glide.b$a` @kind object;
  #L21deea.  call temp:= `build`(v0) @signature `Lcom/bumptech/glide/b$a;.build:()Lj1/c;` @kind interface;
  #L21def0.  v0:= temp @kind object;
  #L21def2.  call temp:= `I`(v0) @signature `Lcom/bumptech/glide/request/a;.I:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L21def8.  v0:= temp @kind object;
  #L21defa.  v0:= (`j1.c`) v0 @kind object;
  #L21defe.  v1.`com.bumptech.glide.d.j` @type ^`j1.c` := v0 @kind object;
  #L21df02.  v0:= v1.`com.bumptech.glide.d.j` @type ^`j1.c` @kind object;
  #L21df06.  @monitorexit v1
  #L21df08.  return v0 @kind object;
  #L21df0a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21df0c.  @monitorexit v1
  #L21df0e.  throw v0;
  catch `java.lang.Throwable` @[L21dede..L21df06] goto L21df0a;
}
procedure `com.bumptech.glide.g` `d`(`com.bumptech.glide.d` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/d;.d:(Ljava/lang/Class;)Lcom/bumptech/glide/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21de2c.  v0:= v4.`com.bumptech.glide.d.f` @type ^`java.util.Map` @kind object;
  #L21de30.  call temp:= `get`(v0, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L21de36.  v0:= temp @kind object;
  #L21de38.  v0:= (`com.bumptech.glide.g`) v0 @kind object;
  #L21de3c.  if v0 != 0 then goto L21de92;
  #L21de40.  v1:= v4.`com.bumptech.glide.d.f` @type ^`java.util.Map` @kind object;
  #L21de44.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L21de4a.  v1:= temp @kind object;
  #L21de4c.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L21de52.  v1:= temp @kind object;
  #L21de54.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L21de5a.  v2:= temp;
  #L21de5c.  if v2 == 0 then goto L21de92;
  #L21de60.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L21de66.  v2:= temp @kind object;
  #L21de68.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L21de6c.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L21de72.  v3:= temp @kind object;
  #L21de74.  v3:= (`java.lang.Class`) v3 @kind object;
  #L21de78.  call temp:= `isAssignableFrom`(v3, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L21de7e.  v3:= temp;
  #L21de80.  if v3 == 0 then goto L21de54;
  #L21de84.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L21de8a.  v0:= temp @kind object;
  #L21de8c.  v0:= (`com.bumptech.glide.g`) v0 @kind object;
  #L21de90.  goto L21de54;
  #L21de92.  if v0 != 0 then goto L21de9a;
  #L21de96.  v0:= `@@com.bumptech.glide.d.k` @type ^`com.bumptech.glide.g` @kind object;
  #L21de9a.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.h` `e`(`com.bumptech.glide.d` v1 @kind this) @signature `Lcom/bumptech/glide/d;.e:()Lcom/bumptech/glide/load/engine/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21deac.  v0:= v1.`com.bumptech.glide.d.g` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L21deb0.  return v0 @kind object;
}
procedure `int` `f`(`com.bumptech.glide.d` v1 @kind this) @signature `Lcom/bumptech/glide/d;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21dec4.  v0:= v1.`com.bumptech.glide.d.i` @type ^`int`;
  #L21dec8.  return v0;
}
procedure `com.bumptech.glide.Registry` `g`(`com.bumptech.glide.d` v1 @kind this) @signature `Lcom/bumptech/glide/d;.g:()Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21de14.  v0:= v1.`com.bumptech.glide.d.b` @type ^`com.bumptech.glide.Registry` @kind object;
  #L21de18.  return v0 @kind object;
}
procedure `boolean` `h`(`com.bumptech.glide.d` v1 @kind this) @signature `Lcom/bumptech/glide/d;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21ddfc.  v0:= v1.`com.bumptech.glide.d.h` @type ^`boolean` @kind boolean;
  #L21de00.  return v0;
}
