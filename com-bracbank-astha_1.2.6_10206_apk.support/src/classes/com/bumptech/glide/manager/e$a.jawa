record `com.bumptech.glide.manager.e$a` @kind class @AccessFlag  extends `g1.h` @kind interface {
  `com.bumptech.glide.manager.e` `com.bumptech.glide.manager.e$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.e$a` v0 @kind this, `com.bumptech.glide.manager.e` v1 @kind object) @signature `Lcom/bumptech/glide/manager/e$a;.<init>:(Lcom/bumptech/glide/manager/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L22a390.  v0.`com.bumptech.glide.manager.e$a.a` @type ^`com.bumptech.glide.manager.e` := v1 @kind object;
  #L22a394.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22a39a.  return @kind void;
}
procedure `java.util.Set` `a`(`com.bumptech.glide.manager.e$a` v4 @kind this) @signature `Lcom/bumptech/glide/manager/e$a;.a:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22a324.  v0:= v4.`com.bumptech.glide.manager.e$a.a` @type ^`com.bumptech.glide.manager.e` @kind object;
  #L22a328.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/manager/e;.b:()Ljava/util/Set;` @kind virtual;
  #L22a32e.  v0:= temp @kind object;
  #L22a330.  v1:= new `java.util.HashSet`;
  #L22a334.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L22a33a.  v2:= temp;
  #L22a33c.  call `<init>`(v1, v2) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L22a342.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L22a348.  v0:= temp @kind object;
  #L22a34a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L22a350.  v2:= temp;
  #L22a352.  if v2 == 0 then goto L22a37e;
  #L22a356.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L22a35c.  v2:= temp @kind object;
  #L22a35e.  v2:= (`com.bumptech.glide.manager.e`) v2 @kind object;
  #L22a362.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/manager/e;.e:()Lcom/bumptech/glide/f;` @kind virtual;
  #L22a368.  v3:= temp @kind object;
  #L22a36a.  if v3 == 0 then goto L22a34a;
  #L22a36e.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/manager/e;.e:()Lcom/bumptech/glide/f;` @kind virtual;
  #L22a374.  v2:= temp @kind object;
  #L22a376.  call temp:= `add`(v1, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22a37c.  goto L22a34a;
  #L22a37e.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.manager.e$a` v2 @kind this) @signature `Lcom/bumptech/glide/manager/e$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22a2d4.  v0:= new `java.lang.StringBuilder`;
  #L22a2d8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22a2de.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L22a2e4.  v1:= temp @kind object;
  #L22a2e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a2ec.  v1:= "{fragment=" @kind object;
  #L22a2f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a2f6.  v1:= v2.`com.bumptech.glide.manager.e$a.a` @type ^`com.bumptech.glide.manager.e` @kind object;
  #L22a2fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a300.  v1:= "}" @kind object;
  #L22a304.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a30a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22a310.  v0:= temp @kind object;
  #L22a312.  return v0 @kind object;
}
