record `com.bumptech.glide.e` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.a` @kind class {
  `android.content.Context` `com.bumptech.glide.e.B` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.f` `com.bumptech.glide.e.C` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.e.D` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.b` `com.bumptech.glide.e.E` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.d` `com.bumptech.glide.e.F` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.g` `com.bumptech.glide.e.G` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.e.H` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.e.I` @AccessFlag PRIVATE;
  `com.bumptech.glide.e` `com.bumptech.glide.e.J` @AccessFlag PRIVATE;
  `com.bumptech.glide.e` `com.bumptech.glide.e.K` @AccessFlag PRIVATE;
  `java.lang.Float` `com.bumptech.glide.e.L` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.e.M` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.e.N` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.e.O` @AccessFlag PRIVATE;
}
global `j1.c` `@@com.bumptech.glide.e.P` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2200f0.  v0:= new `j1.c`;
  #L2200f4.  call `<init>`(v0) @signature `Lj1/c;.<init>:()V` @kind direct;
  #L2200fa.  v1:= `@@t0.a.c` @type ^`t0.a` @kind object;
  #L2200fe.  call temp:= `e`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.e:(Lt0/a;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L220104.  v0:= temp @kind object;
  #L220106.  v0:= (`j1.c`) v0 @kind object;
  #L22010a.  v1:= `@@com.bumptech.glide.Priority.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L22010e.  call temp:= `L`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.L:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L220114.  v0:= temp @kind object;
  #L220116.  v0:= (`j1.c`) v0 @kind object;
  #L22011a.  v1:= 1I;
  #L22011c.  call temp:= `R`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.R:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L220122.  v0:= temp @kind object;
  #L220124.  v0:= (`j1.c`) v0 @kind object;
  #L220128.  `@@com.bumptech.glide.e.P` @type ^`j1.c` := v0 @kind object;
  #L22012c.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.e` v1 @kind this, `com.bumptech.glide.b` v2 @kind object, `com.bumptech.glide.f` v3 @kind object, `java.lang.Class` v4 @kind object, `android.content.Context` v5 @kind object) @signature `Lcom/bumptech/glide/e;.<init>:(Lcom/bumptech/glide/b;Lcom/bumptech/glide/f;Ljava/lang/Class;Landroid/content/Context;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L220140.  call `<init>`(v1) @signature `Lcom/bumptech/glide/request/a;.<init>:()V` @kind direct;
  #L220146.  v0:= 1I;
  #L220148.  v1.`com.bumptech.glide.e.M` @type ^`boolean` := v0 @kind boolean;
  #L22014c.  v1.`com.bumptech.glide.e.E` @type ^`com.bumptech.glide.b` := v2 @kind object;
  #L220150.  v1.`com.bumptech.glide.e.C` @type ^`com.bumptech.glide.f` := v3 @kind object;
  #L220154.  v1.`com.bumptech.glide.e.D` @type ^`java.lang.Class` := v4 @kind object;
  #L220158.  v1.`com.bumptech.glide.e.B` @type ^`android.content.Context` := v5 @kind object;
  #L22015c.  call temp:= `h`(v3, v4) @signature `Lcom/bumptech/glide/f;.h:(Ljava/lang/Class;)Lcom/bumptech/glide/g;` @kind virtual;
  #L220162.  v4:= temp @kind object;
  #L220164.  v1.`com.bumptech.glide.e.G` @type ^`com.bumptech.glide.g` := v4 @kind object;
  #L220168.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/b;.i:()Lcom/bumptech/glide/d;` @kind virtual;
  #L22016e.  v2:= temp @kind object;
  #L220170.  v1.`com.bumptech.glide.e.F` @type ^`com.bumptech.glide.d` := v2 @kind object;
  #L220174.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/f;.f:()Ljava/util/List;` @kind virtual;
  #L22017a.  v2:= temp @kind object;
  #L22017c.  call `d0`(v1, v2) @signature `Lcom/bumptech/glide/e;.d0:(Ljava/util/List;)V` @kind direct;
  #L220182.  call temp:= `g`(v3) @signature `Lcom/bumptech/glide/f;.g:()Lj1/c;` @kind virtual;
  #L220188.  v2:= temp @kind object;
  #L22018a.  call temp:= `X`(v1, v2) @signature `Lcom/bumptech/glide/e;.X:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/e;` @kind virtual;
  #L220190.  return @kind void;
}
procedure `j1.a` `Y`(`com.bumptech.glide.e` v11 @kind this, `k1.d` v12 @kind object, `j1.b` v13 @kind object, `com.bumptech.glide.request.a` v14 @kind object, `java.util.concurrent.Executor` v15 @kind object) @signature `Lcom/bumptech/glide/e;.Y:(Lk1/d;Lj1/b;Lcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lj1/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L21fc54.  v1:= new `java.lang.Object`;
  #L21fc58.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21fc5e.  v5:= v11.`com.bumptech.glide.e.G` @type ^`com.bumptech.glide.g` @kind object;
  #L21fc62.  call temp:= `t`(v14) @signature `Lcom/bumptech/glide/request/a;.t:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L21fc68.  v6:= temp @kind object;
  #L21fc6a.  call temp:= `q`(v14) @signature `Lcom/bumptech/glide/request/a;.q:()I` @kind virtual;
  #L21fc70.  v7:= temp;
  #L21fc72.  call temp:= `p`(v14) @signature `Lcom/bumptech/glide/request/a;.p:()I` @kind virtual;
  #L21fc78.  v8:= temp;
  #L21fc7a.  v4:= 0I;
  #L21fc7c.  v0:= v11 @kind object;
  #L21fc7e.  v2:= v12 @kind object;
  #L21fc80.  v3:= v13 @kind object;
  #L21fc82.  v9:= v14 @kind object;
  #L21fc84.  v10:= v15 @kind object;
  #L21fc86.  call temp:= `Z`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/e;.Z:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lj1/a;` @kind direct;
  #L21fc8c.  v12:= temp @kind object;
  #L21fc8e.  return v12 @kind object;
}
procedure `j1.a` `Z`(`com.bumptech.glide.e` v23 @kind this, `java.lang.Object` v24 @kind object, `k1.d` v25 @kind object, `j1.b` v26 @kind object, `com.bumptech.glide.request.RequestCoordinator` v27 @kind object, `com.bumptech.glide.g` v28 @kind object, `com.bumptech.glide.Priority` v29 @kind object, `int` v30 , `int` v31 , `com.bumptech.glide.request.a` v32 @kind object, `java.util.concurrent.Executor` v33 @kind object) @signature `Lcom/bumptech/glide/e;.Z:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lj1/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L21fca0.  v11:= v23 @kind object;
  #L21fca4.  v0:= v11.`com.bumptech.glide.e.K` @type ^`com.bumptech.glide.e` @kind object;
  #L21fca8.  if v0 == 0 then goto L21fcc4;
  #L21fcac.  v0:= new `com.bumptech.glide.request.b`;
  #L21fcb0.  v13:= v24 @kind object;
  #L21fcb4.  v1:= v27 @kind object;
  #L21fcb8.  call `<init>`(v0, v13, v1) @signature `Lcom/bumptech/glide/request/b;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L21fcbe.  v4:= v0 @kind object;
  #L21fcc0.  v15:= v4 @kind object;
  #L21fcc2.  goto L21fcd2;
  #L21fcc4.  v13:= v24 @kind object;
  #L21fcc8.  v1:= v27 @kind object;
  #L21fccc.  v0:= 0I;
  #L21fcce.  v15:= v0 @kind object;
  #L21fcd0.  v4:= v1 @kind object;
  #L21fcd2.  v0:= v23 @kind object;
  #L21fcd6.  v1:= v24 @kind object;
  #L21fcda.  v2:= v25 @kind object;
  #L21fcde.  v3:= v26 @kind object;
  #L21fce2.  v5:= v28 @kind object;
  #L21fce6.  v6:= v29 @kind object;
  #L21fcea.  v7:= v30;
  #L21fcee.  v8:= v31;
  #L21fcf2.  v9:= v32 @kind object;
  #L21fcf6.  v10:= v33 @kind object;
  #L21fcfa.  call temp:= `a0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/e;.a0:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lj1/a;` @kind direct;
  #L21fd00.  v0:= temp @kind object;
  #L21fd02.  if v15 != 0 then goto L21fd08;
  #L21fd06.  return v0 @kind object;
  #L21fd08.  v1:= v11.`com.bumptech.glide.e.K` @type ^`com.bumptech.glide.e` @kind object;
  #L21fd0c.  call temp:= `q`(v1) @signature `Lcom/bumptech/glide/request/a;.q:()I` @kind virtual;
  #L21fd12.  v1:= temp;
  #L21fd14.  v2:= v11.`com.bumptech.glide.e.K` @type ^`com.bumptech.glide.e` @kind object;
  #L21fd18.  call temp:= `p`(v2) @signature `Lcom/bumptech/glide/request/a;.p:()I` @kind virtual;
  #L21fd1e.  v2:= temp;
  #L21fd20.  call temp:= `r`(v30, v31) @signature `Ln1/k;.r:(II)Z` @kind static;
  #L21fd26.  v3:= temp;
  #L21fd28.  if v3 == 0 then goto L21fd4c;
  #L21fd2c.  v3:= v11.`com.bumptech.glide.e.K` @type ^`com.bumptech.glide.e` @kind object;
  #L21fd30.  call temp:= `H`(v3) @signature `Lcom/bumptech/glide/request/a;.H:()Z` @kind virtual;
  #L21fd36.  v3:= temp;
  #L21fd38.  if v3 != 0 then goto L21fd4c;
  #L21fd3c.  call temp:= `q`(v32) @signature `Lcom/bumptech/glide/request/a;.q:()I` @kind virtual;
  #L21fd42.  v1:= temp;
  #L21fd44.  call temp:= `p`(v32) @signature `Lcom/bumptech/glide/request/a;.p:()I` @kind virtual;
  #L21fd4a.  v2:= temp;
  #L21fd4c.  v19:= v1;
  #L21fd50.  v20:= v2;
  #L21fd54.  v12:= v11.`com.bumptech.glide.e.K` @type ^`com.bumptech.glide.e` @kind object;
  #L21fd58.  v1:= v12.`com.bumptech.glide.e.G` @type ^`com.bumptech.glide.g` @kind object;
  #L21fd5c.  call temp:= `t`(v12) @signature `Lcom/bumptech/glide/request/a;.t:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L21fd62.  v18:= temp @kind object;
  #L21fd64.  v2:= v11.`com.bumptech.glide.e.K` @type ^`com.bumptech.glide.e` @kind object;
  #L21fd68.  v13:= v24 @kind object;
  #L21fd6c.  v14:= v25 @kind object;
  #L21fd70.  v3:= v15 @kind object;
  #L21fd72.  v15:= v26 @kind object;
  #L21fd76.  v16:= v3 @kind object;
  #L21fd7a.  v17:= v1 @kind object;
  #L21fd7e.  v21:= v2 @kind object;
  #L21fd82.  v22:= v33 @kind object;
  #L21fd86.  call temp:= `Z`(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22) @signature `Lcom/bumptech/glide/e;.Z:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lj1/a;` @kind direct;
  #L21fd8c.  v1:= temp @kind object;
  #L21fd8e.  call `o`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/b;.o:(Lj1/a;Lj1/a;)V` @kind virtual;
  #L21fd94.  return v3 @kind object;
}
procedure `j1.a` `a0`(`com.bumptech.glide.e` v18 @kind this, `java.lang.Object` v19 @kind object, `k1.d` v20 @kind object, `j1.b` v21 @kind object, `com.bumptech.glide.request.RequestCoordinator` v22 @kind object, `com.bumptech.glide.g` v23 @kind object, `com.bumptech.glide.Priority` v24 @kind object, `int` v25 , `int` v26 , `com.bumptech.glide.request.a` v27 @kind object, `java.util.concurrent.Executor` v28 @kind object) @signature `Lcom/bumptech/glide/e;.a0:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lj1/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L21fda8.  v11:= v18 @kind object;
  #L21fdac.  v12:= v19 @kind object;
  #L21fdb0.  v5:= v22 @kind object;
  #L21fdb4.  v13:= v24 @kind object;
  #L21fdb8.  v0:= v11.`com.bumptech.glide.e.J` @type ^`com.bumptech.glide.e` @kind object;
  #L21fdbc.  if v0 == 0 then goto L21fed0;
  #L21fdc0.  v1:= v11.`com.bumptech.glide.e.O` @type ^`boolean` @kind boolean;
  #L21fdc4.  if v1 != 0 then goto L21fec0;
  #L21fdc8.  v1:= v0.`com.bumptech.glide.e.G` @type ^`com.bumptech.glide.g` @kind object;
  #L21fdcc.  v2:= v0.`com.bumptech.glide.e.M` @type ^`boolean` @kind boolean;
  #L21fdd0.  if v2 == 0 then goto L21fdda;
  #L21fdd4.  v14:= v23 @kind object;
  #L21fdd8.  goto L21fddc;
  #L21fdda.  v14:= v1 @kind object;
  #L21fddc.  call temp:= `C`(v0) @signature `Lcom/bumptech/glide/request/a;.C:()Z` @kind virtual;
  #L21fde2.  v0:= temp;
  #L21fde4.  if v0 == 0 then goto L21fdf6;
  #L21fde8.  v0:= v11.`com.bumptech.glide.e.J` @type ^`com.bumptech.glide.e` @kind object;
  #L21fdec.  call temp:= `t`(v0) @signature `Lcom/bumptech/glide/request/a;.t:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L21fdf2.  v0:= temp @kind object;
  #L21fdf4.  goto L21fdfe;
  #L21fdf6.  call temp:= `c0`(v11, v13) @signature `Lcom/bumptech/glide/e;.c0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @kind direct;
  #L21fdfc.  v0:= temp @kind object;
  #L21fdfe.  v15:= v0 @kind object;
  #L21fe00.  v0:= v11.`com.bumptech.glide.e.J` @type ^`com.bumptech.glide.e` @kind object;
  #L21fe04.  call temp:= `q`(v0) @signature `Lcom/bumptech/glide/request/a;.q:()I` @kind virtual;
  #L21fe0a.  v0:= temp;
  #L21fe0c.  v1:= v11.`com.bumptech.glide.e.J` @type ^`com.bumptech.glide.e` @kind object;
  #L21fe10.  call temp:= `p`(v1) @signature `Lcom/bumptech/glide/request/a;.p:()I` @kind virtual;
  #L21fe16.  v1:= temp;
  #L21fe18.  call temp:= `r`(v25, v26) @signature `Ln1/k;.r:(II)Z` @kind static;
  #L21fe1e.  v2:= temp;
  #L21fe20.  if v2 == 0 then goto L21fe44;
  #L21fe24.  v2:= v11.`com.bumptech.glide.e.J` @type ^`com.bumptech.glide.e` @kind object;
  #L21fe28.  call temp:= `H`(v2) @signature `Lcom/bumptech/glide/request/a;.H:()Z` @kind virtual;
  #L21fe2e.  v2:= temp;
  #L21fe30.  if v2 != 0 then goto L21fe44;
  #L21fe34.  call temp:= `q`(v27) @signature `Lcom/bumptech/glide/request/a;.q:()I` @kind virtual;
  #L21fe3a.  v0:= temp;
  #L21fe3c.  call temp:= `p`(v27) @signature `Lcom/bumptech/glide/request/a;.p:()I` @kind virtual;
  #L21fe42.  v1:= temp;
  #L21fe44.  v16:= v0;
  #L21fe48.  v17:= v1;
  #L21fe4c.  v10:= new `com.bumptech.glide.request.c`;
  #L21fe50.  call `<init>`(v10, v12, v5) @signature `Lcom/bumptech/glide/request/c;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L21fe56.  v0:= v18 @kind object;
  #L21fe5a.  v1:= v19 @kind object;
  #L21fe5e.  v2:= v20 @kind object;
  #L21fe62.  v3:= v21 @kind object;
  #L21fe66.  v4:= v27 @kind object;
  #L21fe6a.  v5:= v10 @kind object;
  #L21fe6c.  v6:= v23 @kind object;
  #L21fe70.  v7:= v24 @kind object;
  #L21fe74.  v8:= v25;
  #L21fe78.  v9:= v26;
  #L21fe7c.  v13:= v10 @kind object;
  #L21fe7e.  v10:= v28 @kind object;
  #L21fe82.  call temp:= `k0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/e;.k0:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lj1/a;` @kind direct;
  #L21fe88.  v10:= temp @kind object;
  #L21fe8a.  v0:= 1I;
  #L21fe8c.  v11.`com.bumptech.glide.e.O` @type ^`boolean` := v0 @kind boolean;
  #L21fe90.  v9:= v11.`com.bumptech.glide.e.J` @type ^`com.bumptech.glide.e` @kind object;
  #L21fe94.  v0:= v9 @kind object;
  #L21fe96.  v4:= v13 @kind object;
  #L21fe98.  v5:= v14 @kind object;
  #L21fe9a.  v6:= v15 @kind object;
  #L21fe9c.  v7:= v16;
  #L21fea0.  v8:= v17;
  #L21fea4.  v12:= v10 @kind object;
  #L21fea6.  v10:= v28 @kind object;
  #L21feaa.  call temp:= `Z`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/e;.Z:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lj1/a;` @kind direct;
  #L21feb0.  v0:= temp @kind object;
  #L21feb2.  v1:= 0I;
  #L21feb4.  v11.`com.bumptech.glide.e.O` @type ^`boolean` := v1 @kind boolean;
  #L21feb8.  call `n`(v13, v12, v0) @signature `Lcom/bumptech/glide/request/c;.n:(Lj1/a;Lj1/a;)V` @kind virtual;
  #L21febe.  return v13 @kind object;
  #L21fec0.  v0:= new `java.lang.IllegalStateException`;
  #L21fec4.  v1:= "You cannot use a request as both the main request and a thumbnail, consider using clone() on the request(s) passed to thumbnail()" @kind object;
  #L21fec8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21fece.  throw v0;
  #L21fed0.  v0:= v11.`com.bumptech.glide.e.L` @type ^`java.lang.Float` @kind object;
  #L21fed4.  if v0 == 0 then goto L21ff50;
  #L21fed8.  v14:= new `com.bumptech.glide.request.c`;
  #L21fedc.  call `<init>`(v14, v12, v5) @signature `Lcom/bumptech/glide/request/c;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L21fee2.  v0:= v18 @kind object;
  #L21fee6.  v1:= v19 @kind object;
  #L21feea.  v2:= v20 @kind object;
  #L21feee.  v3:= v21 @kind object;
  #L21fef2.  v4:= v27 @kind object;
  #L21fef6.  v5:= v14 @kind object;
  #L21fef8.  v6:= v23 @kind object;
  #L21fefc.  v7:= v24 @kind object;
  #L21ff00.  v8:= v25;
  #L21ff04.  v9:= v26;
  #L21ff08.  v10:= v28 @kind object;
  #L21ff0c.  call temp:= `k0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/e;.k0:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lj1/a;` @kind direct;
  #L21ff12.  v15:= temp @kind object;
  #L21ff14.  call temp:= `c`(v27) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L21ff1a.  v0:= temp @kind object;
  #L21ff1c.  v1:= v11.`com.bumptech.glide.e.L` @type ^`java.lang.Float` @kind object;
  #L21ff20.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L21ff26.  v1:= temp;
  #L21ff28.  call temp:= `Q`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.Q:(F)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L21ff2e.  v4:= temp @kind object;
  #L21ff30.  call temp:= `c0`(v11, v13) @signature `Lcom/bumptech/glide/e;.c0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @kind direct;
  #L21ff36.  v7:= temp @kind object;
  #L21ff38.  v0:= v18 @kind object;
  #L21ff3c.  v1:= v19 @kind object;
  #L21ff40.  call temp:= `k0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/e;.k0:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lj1/a;` @kind direct;
  #L21ff46.  v0:= temp @kind object;
  #L21ff48.  call `n`(v14, v15, v0) @signature `Lcom/bumptech/glide/request/c;.n:(Lj1/a;Lj1/a;)V` @kind virtual;
  #L21ff4e.  return v14 @kind object;
  #L21ff50.  v0:= v18 @kind object;
  #L21ff54.  v1:= v19 @kind object;
  #L21ff58.  v2:= v20 @kind object;
  #L21ff5c.  v3:= v21 @kind object;
  #L21ff60.  v4:= v27 @kind object;
  #L21ff64.  v5:= v22 @kind object;
  #L21ff68.  v6:= v23 @kind object;
  #L21ff6c.  v7:= v24 @kind object;
  #L21ff70.  v8:= v25;
  #L21ff74.  v9:= v26;
  #L21ff78.  v10:= v28 @kind object;
  #L21ff7c.  call temp:= `k0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/e;.k0:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lj1/a;` @kind direct;
  #L21ff82.  v0:= temp @kind object;
  #L21ff84.  return v0 @kind object;
}
procedure `com.bumptech.glide.Priority` `c0`(`com.bumptech.glide.e` v2 @kind this, `com.bumptech.glide.Priority` v3 @kind object) @signature `Lcom/bumptech/glide/e;.c0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L21fad4.  v0:= `@@com.bumptech.glide.e$a.b` @type ^`int`[] @kind object;
  #L21fad8.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L21fade.  v3:= temp;
  #L21fae0.  v3:= v0[v3];
  #L21fae4.  v0:= 1I;
  #L21fae6.  if v3 == v0 then goto L21fb40;
  #L21faea.  v0:= 2I;
  #L21faec.  if v3 == v0 then goto L21fb3a;
  #L21faf0.  v0:= 3I;
  #L21faf2.  if v3 == v0 then goto L21fb34;
  #L21faf6.  v0:= 4I;
  #L21faf8.  if v3 != v0 then goto L21fafe;
  #L21fafc.  goto L21fb34;
  #L21fafe.  v3:= new `java.lang.IllegalArgumentException`;
  #L21fb02.  v0:= new `java.lang.StringBuilder`;
  #L21fb06.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21fb0c.  v1:= "unknown priority: " @kind object;
  #L21fb10.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21fb16.  call temp:= `t`(v2) @signature `Lcom/bumptech/glide/request/a;.t:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L21fb1c.  v1:= temp @kind object;
  #L21fb1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21fb24.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21fb2a.  v0:= temp @kind object;
  #L21fb2c.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21fb32.  throw v3;
  #L21fb34.  v3:= `@@com.bumptech.glide.Priority.a` @type ^`com.bumptech.glide.Priority` @kind object;
  #L21fb38.  return v3 @kind object;
  #L21fb3a.  v3:= `@@com.bumptech.glide.Priority.b` @type ^`com.bumptech.glide.Priority` @kind object;
  #L21fb3e.  return v3 @kind object;
  #L21fb40.  v3:= `@@com.bumptech.glide.Priority.c` @type ^`com.bumptech.glide.Priority` @kind object;
  #L21fb44.  return v3 @kind object;
}
procedure `void` `d0`(`com.bumptech.glide.e` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/bumptech/glide/e;.d0:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2201a4.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2201aa.  v2:= temp @kind object;
  #L2201ac.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2201b2.  v0:= temp;
  #L2201b4.  if v0 == 0 then goto L2201cc;
  #L2201b8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2201be.  v0:= temp @kind object;
  #L2201c0.  v0:= (`j1.b`) v0 @kind object;
  #L2201c4.  call temp:= `W`(v1, v0) @signature `Lcom/bumptech/glide/e;.W:(Lj1/b;)Lcom/bumptech/glide/e;` @kind virtual;
  #L2201ca.  goto L2201ac;
  #L2201cc.  return @kind void;
}
procedure `k1.d` `f0`(`com.bumptech.glide.e` v1 @kind this, `k1.d` v2 @kind object, `j1.b` v3 @kind object, `com.bumptech.glide.request.a` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Lcom/bumptech/glide/e;.f0:(Lk1/d;Lj1/b;Lcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lk1/d;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L220040.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L220046.  v0:= v1.`com.bumptech.glide.e.N` @type ^`boolean` @kind boolean;
  #L22004a.  if v0 == 0 then goto L2200b2;
  #L22004e.  call temp:= `Y`(v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/e;.Y:(Lk1/d;Lj1/b;Lcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lj1/a;` @kind direct;
  #L220054.  v3:= temp @kind object;
  #L220056.  call temp:= `getRequest`(v2) @signature `Lk1/d;.getRequest:()Lj1/a;` @kind interface;
  #L22005c.  v5:= temp @kind object;
  #L22005e.  call temp:= `f`(v3, v5) @signature `Lj1/a;.f:(Lj1/a;)Z` @kind interface;
  #L220064.  v0:= temp;
  #L220066.  if v0 == 0 then goto L220096;
  #L22006a.  call temp:= `h0`(v1, v4, v5) @signature `Lcom/bumptech/glide/e;.h0:(Lcom/bumptech/glide/request/a;Lj1/a;)Z` @kind direct;
  #L220070.  v4:= temp;
  #L220072.  if v4 != 0 then goto L220096;
  #L220076.  call temp:= `d`(v5) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22007c.  v3:= temp @kind object;
  #L22007e.  v3:= (`j1.a`) v3 @kind object;
  #L220082.  call temp:= `isRunning`(v3) @signature `Lj1/a;.isRunning:()Z` @kind interface;
  #L220088.  v3:= temp;
  #L22008a.  if v3 != 0 then goto L220094;
  #L22008e.  call `j`(v5) @signature `Lj1/a;.j:()V` @kind interface;
  #L220094.  return v2 @kind object;
  #L220096.  v4:= v1.`com.bumptech.glide.e.C` @type ^`com.bumptech.glide.f` @kind object;
  #L22009a.  call `e`(v4, v2) @signature `Lcom/bumptech/glide/f;.e:(Lk1/d;)V` @kind virtual;
  #L2200a0.  call `setRequest`(v2, v3) @signature `Lk1/d;.setRequest:(Lj1/a;)V` @kind interface;
  #L2200a6.  v4:= v1.`com.bumptech.glide.e.C` @type ^`com.bumptech.glide.f` @kind object;
  #L2200aa.  call `o`(v4, v2, v3) @signature `Lcom/bumptech/glide/f;.o:(Lk1/d;Lj1/a;)V` @kind virtual;
  #L2200b0.  return v2 @kind object;
  #L2200b2.  v2:= new `java.lang.IllegalArgumentException`;
  #L2200b6.  v3:= "You must call #load() before calling #into()" @kind object;
  #L2200ba.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2200c0.  throw v2;
}
procedure `boolean` `h0`(`com.bumptech.glide.e` v0 @kind this, `com.bumptech.glide.request.a` v1 @kind object, `j1.a` v2 @kind object) @signature `Lcom/bumptech/glide/e;.h0:(Lcom/bumptech/glide/request/a;Lj1/a;)Z` @AccessFlag PRIVATE {
    temp;

  #L21faa4.  call temp:= `B`(v1) @signature `Lcom/bumptech/glide/request/a;.B:()Z` @kind virtual;
  #L21faaa.  v1:= temp;
  #L21faac.  if v1 != 0 then goto L21fac0;
  #L21fab0.  call temp:= `k`(v2) @signature `Lj1/a;.k:()Z` @kind interface;
  #L21fab6.  v1:= temp;
  #L21fab8.  if v1 == 0 then goto L21fac0;
  #L21fabc.  v1:= 1I;
  #L21fabe.  goto L21fac2;
  #L21fac0.  v1:= 0I;
  #L21fac2.  return v1;
}
procedure `com.bumptech.glide.e` `j0`(`com.bumptech.glide.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/e;.j0:(Ljava/lang/Object;)Lcom/bumptech/glide/e;` @AccessFlag PRIVATE {
    temp;

  #L21fc00.  v0.`com.bumptech.glide.e.H` @type ^`java.lang.Object` := v1 @kind object;
  #L21fc04.  v1:= 1I;
  #L21fc06.  v0.`com.bumptech.glide.e.N` @type ^`boolean` := v1 @kind boolean;
  #L21fc0a.  return v0 @kind object;
}
procedure `j1.a` `k0`(`com.bumptech.glide.e` v17 @kind this, `java.lang.Object` v18 @kind object, `k1.d` v19 @kind object, `j1.b` v20 @kind object, `com.bumptech.glide.request.a` v21 @kind object, `com.bumptech.glide.request.RequestCoordinator` v22 @kind object, `com.bumptech.glide.g` v23 @kind object, `com.bumptech.glide.Priority` v24 @kind object, `int` v25 , `int` v26 , `java.util.concurrent.Executor` v27 @kind object) @signature `Lcom/bumptech/glide/e;.k0:(Ljava/lang/Object;Lk1/d;Lj1/b;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/g;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lj1/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L21ff98.  v0:= v17 @kind object;
  #L21ff9c.  v1:= v0.`com.bumptech.glide.e.B` @type ^`android.content.Context` @kind object;
  #L21ffa0.  v2:= v0.`com.bumptech.glide.e.F` @type ^`com.bumptech.glide.d` @kind object;
  #L21ffa4.  v4:= v0.`com.bumptech.glide.e.H` @type ^`java.lang.Object` @kind object;
  #L21ffa8.  v5:= v0.`com.bumptech.glide.e.D` @type ^`java.lang.Class` @kind object;
  #L21ffac.  v12:= v0.`com.bumptech.glide.e.I` @type ^`java.util.List` @kind object;
  #L21ffb0.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/d;.e:()Lcom/bumptech/glide/load/engine/h;` @kind virtual;
  #L21ffb6.  v14:= temp @kind object;
  #L21ffb8.  call temp:= `b`(v23) @signature `Lcom/bumptech/glide/g;.b:()Ll1/c;` @kind virtual;
  #L21ffbe.  v15:= temp @kind object;
  #L21ffc0.  v3:= v18 @kind object;
  #L21ffc4.  v6:= v21 @kind object;
  #L21ffc8.  v7:= v25;
  #L21ffcc.  v8:= v26;
  #L21ffd0.  v9:= v24 @kind object;
  #L21ffd4.  v10:= v19 @kind object;
  #L21ffd8.  v11:= v20 @kind object;
  #L21ffdc.  v13:= v22 @kind object;
  #L21ffe0.  v16:= v27 @kind object;
  #L21ffe4.  call temp:= `x`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/bumptech/glide/request/SingleRequest;.x:(Landroid/content/Context;Lcom/bumptech/glide/d;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/a;IILcom/bumptech/glide/Priority;Lk1/d;Lj1/b;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/h;Ll1/c;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/SingleRequest;` @kind static;
  #L21ffea.  v1:= temp @kind object;
  #L21ffec.  return v1 @kind object;
}
procedure `com.bumptech.glide.e` `W`(`com.bumptech.glide.e` v1 @kind this, `j1.b` v2 @kind object) @signature `Lcom/bumptech/glide/e;.W:(Lj1/b;)Lcom/bumptech/glide/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21fb58.  if v2 == 0 then goto L21fb7c;
  #L21fb5c.  v0:= v1.`com.bumptech.glide.e.I` @type ^`java.util.List` @kind object;
  #L21fb60.  if v0 != 0 then goto L21fb72;
  #L21fb64.  v0:= new `java.util.ArrayList`;
  #L21fb68.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L21fb6e.  v1.`com.bumptech.glide.e.I` @type ^`java.util.List` := v0 @kind object;
  #L21fb72.  v0:= v1.`com.bumptech.glide.e.I` @type ^`java.util.List` @kind object;
  #L21fb76.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21fb7c.  return v1 @kind object;
}
procedure `com.bumptech.glide.e` `X`(`com.bumptech.glide.e` v0 @kind this, `com.bumptech.glide.request.a` v1 @kind object) @signature `Lcom/bumptech/glide/e;.X:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/e;` @AccessFlag PUBLIC {
    temp;

  #L21fb90.  call temp:= `d`(v1) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L21fb96.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.a:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/request/a;` @kind super;
  #L21fb9c.  v1:= temp @kind object;
  #L21fb9e.  v1:= (`com.bumptech.glide.e`) v1 @kind object;
  #L21fba2.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.a` `a`(`com.bumptech.glide.e` v0 @kind this, `com.bumptech.glide.request.a` v1 @kind object) @signature `Lcom/bumptech/glide/e;.a:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L21fc1c.  call temp:= `X`(v0, v1) @signature `Lcom/bumptech/glide/e;.X:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/e;` @kind virtual;
  #L21fc22.  v1:= temp @kind object;
  #L21fc24.  return v1 @kind object;
}
procedure `com.bumptech.glide.e` `b0`(`com.bumptech.glide.e` v2 @kind this) @signature `Lcom/bumptech/glide/e;.b0:()Lcom/bumptech/glide/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21fbb4.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind super;
  #L21fbba.  v0:= temp @kind object;
  #L21fbbc.  v0:= (`com.bumptech.glide.e`) v0 @kind object;
  #L21fbc0.  v1:= v0.`com.bumptech.glide.e.G` @type ^`com.bumptech.glide.g` @kind object;
  #L21fbc4.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/g;.a:()Lcom/bumptech/glide/g;` @kind virtual;
  #L21fbca.  v1:= temp @kind object;
  #L21fbcc.  v0.`com.bumptech.glide.e.G` @type ^`com.bumptech.glide.g` := v1 @kind object;
  #L21fbd0.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `c`(`com.bumptech.glide.e` v1 @kind this) @signature `Lcom/bumptech/glide/e;.c:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L21fc38.  call temp:= `b0`(v1) @signature `Lcom/bumptech/glide/e;.b0:()Lcom/bumptech/glide/e;` @kind virtual;
  #L21fc3e.  v0:= temp @kind object;
  #L21fc40.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.e` v1 @kind this) @signature `Lcom/bumptech/glide/e;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L220000.  call temp:= `b0`(v1) @signature `Lcom/bumptech/glide/e;.b0:()Lcom/bumptech/glide/e;` @kind virtual;
  #L220006.  v0:= temp @kind object;
  #L220008.  return v0 @kind object;
}
procedure `k1.d` `e0`(`com.bumptech.glide.e` v2 @kind this, `k1.d` v3 @kind object) @signature `Lcom/bumptech/glide/e;.e0:(Lk1/d;)Lk1/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22001c.  call temp:= `b`() @signature `Ln1/e;.b:()Ljava/util/concurrent/Executor;` @kind static;
  #L220022.  v0:= temp @kind object;
  #L220024.  v1:= 0I;
  #L220026.  call temp:= `g0`(v2, v3, v1, v0) @signature `Lcom/bumptech/glide/e;.g0:(Lk1/d;Lj1/b;Ljava/util/concurrent/Executor;)Lk1/d;` @kind virtual;
  #L22002c.  v3:= temp @kind object;
  #L22002e.  return v3 @kind object;
}
procedure `k1.d` `g0`(`com.bumptech.glide.e` v0 @kind this, `k1.d` v1 @kind object, `j1.b` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/bumptech/glide/e;.g0:(Lk1/d;Lj1/b;Ljava/util/concurrent/Executor;)Lk1/d;` @AccessFlag  {
    temp;

  #L2200d4.  call temp:= `f0`(v0, v1, v2, v0, v3) @signature `Lcom/bumptech/glide/e;.f0:(Lk1/d;Lj1/b;Lcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lk1/d;` @kind direct;
  #L2200da.  v1:= temp @kind object;
  #L2200dc.  return v1 @kind object;
}
procedure `com.bumptech.glide.e` `i0`(`com.bumptech.glide.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/e;.i0:(Ljava/lang/Object;)Lcom/bumptech/glide/e;` @AccessFlag PUBLIC {
    temp;

  #L21fbe4.  call temp:= `j0`(v0, v1) @signature `Lcom/bumptech/glide/e;.j0:(Ljava/lang/Object;)Lcom/bumptech/glide/e;` @kind direct;
  #L21fbea.  v1:= temp @kind object;
  #L21fbec.  return v1 @kind object;
}
