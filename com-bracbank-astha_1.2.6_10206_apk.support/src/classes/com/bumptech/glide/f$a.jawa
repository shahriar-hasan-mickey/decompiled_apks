record `com.bumptech.glide.f$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.f` `com.bumptech.glide.f$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.f$a` v0 @kind this, `com.bumptech.glide.f` v1 @kind object) @signature `Lcom/bumptech/glide/f$a;.<init>:(Lcom/bumptech/glide/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2201e0.  v0.`com.bumptech.glide.f$a.a` @type ^`com.bumptech.glide.f` := v1 @kind object;
  #L2201e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2201ea.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.f$a` v2 @kind this) @signature `Lcom/bumptech/glide/f$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2201fc.  v0:= v2.`com.bumptech.glide.f$a.a` @type ^`com.bumptech.glide.f` @kind object;
  #L220200.  v1:= v0.`com.bumptech.glide.f.c` @type ^`g1.e` @kind object;
  #L220204.  call `b`(v1, v0) @signature `Lg1/e;.b:(Lg1/f;)V` @kind interface;
  #L22020a.  return @kind void;
}
