record `com.bumptech.glide.request.b` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.request.RequestCoordinator` @kind interface, `j1.a` @kind interface {
  `java.lang.Object` `com.bumptech.glide.request.b.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.RequestCoordinator` `com.bumptech.glide.request.b.b` @AccessFlag PRIVATE_FINAL;
  `j1.a` `com.bumptech.glide.request.b.c` @AccessFlag PRIVATE_VOLATILE;
  `j1.a` `com.bumptech.glide.request.b.d` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.request.RequestCoordinator$RequestState` `com.bumptech.glide.request.b.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.RequestCoordinator$RequestState` `com.bumptech.glide.request.b.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.b` v1 @kind this, `java.lang.Object` v2 @kind object, `com.bumptech.glide.request.RequestCoordinator` v3 @kind object) @signature `Lcom/bumptech/glide/request/b;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L22b9b4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22b9ba.  v0:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.c` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b9be.  v1.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v0 @kind object;
  #L22b9c2.  v1.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v0 @kind object;
  #L22b9c6.  v1.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` := v2 @kind object;
  #L22b9ca.  v1.`com.bumptech.glide.request.b.b` @type ^`com.bumptech.glide.request.RequestCoordinator` := v3 @kind object;
  #L22b9ce.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.request.b` v2 @kind this, `j1.a` v3 @kind object) @signature `Lcom/bumptech/glide/request/b;.a:(Lj1/a;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L22b89c.  v0:= v2.`com.bumptech.glide.request.b.c` @type ^`j1.a` @kind object;
  #L22b8a0.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22b8a6.  v0:= temp;
  #L22b8a8.  if v0 != 0 then goto L22b8ce;
  #L22b8ac.  v0:= v2.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b8b0.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b8b4.  if v0 != v1 then goto L22b8ca;
  #L22b8b8.  v0:= v2.`com.bumptech.glide.request.b.d` @type ^`j1.a` @kind object;
  #L22b8bc.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22b8c2.  v3:= temp;
  #L22b8c4.  if v3 == 0 then goto L22b8ca;
  #L22b8c8.  goto L22b8ce;
  #L22b8ca.  v3:= 0I;
  #L22b8cc.  goto L22b8d0;
  #L22b8ce.  v3:= 1I;
  #L22b8d0.  return v3;
}
procedure `boolean` `l`(`com.bumptech.glide.request.b` v1 @kind this) @signature `Lcom/bumptech/glide/request/b;.l:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L22b8e4.  v0:= v1.`com.bumptech.glide.request.b.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L22b8e8.  if v0 == 0 then goto L22b8fe;
  #L22b8ec.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.h:(Lj1/a;)Z` @kind interface;
  #L22b8f2.  v0:= temp;
  #L22b8f4.  if v0 == 0 then goto L22b8fa;
  #L22b8f8.  goto L22b8fe;
  #L22b8fa.  v0:= 0I;
  #L22b8fc.  goto L22b900;
  #L22b8fe.  v0:= 1I;
  #L22b900.  return v0;
}
procedure `boolean` `m`(`com.bumptech.glide.request.b` v1 @kind this) @signature `Lcom/bumptech/glide/request/b;.m:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L22b914.  v0:= v1.`com.bumptech.glide.request.b.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L22b918.  if v0 == 0 then goto L22b92e;
  #L22b91c.  call temp:= `i`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.i:(Lj1/a;)Z` @kind interface;
  #L22b922.  v0:= temp;
  #L22b924.  if v0 == 0 then goto L22b92a;
  #L22b928.  goto L22b92e;
  #L22b92a.  v0:= 0I;
  #L22b92c.  goto L22b930;
  #L22b92e.  v0:= 1I;
  #L22b930.  return v0;
}
procedure `boolean` `n`(`com.bumptech.glide.request.b` v1 @kind this) @signature `Lcom/bumptech/glide/request/b;.n:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L22b944.  v0:= v1.`com.bumptech.glide.request.b.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L22b948.  if v0 == 0 then goto L22b95e;
  #L22b94c.  call temp:= `d`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.d:(Lj1/a;)Z` @kind interface;
  #L22b952.  v0:= temp;
  #L22b954.  if v0 == 0 then goto L22b95a;
  #L22b958.  goto L22b95e;
  #L22b95a.  v0:= 0I;
  #L22b95c.  goto L22b960;
  #L22b95e.  v0:= 1I;
  #L22b960.  return v0;
}
procedure `boolean` `b`(`com.bumptech.glide.request.b` v2 @kind this) @signature `Lcom/bumptech/glide/request/b;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22b724.  v0:= v2.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22b728.  @monitorenter v0
  #L22b72a.  v1:= v2.`com.bumptech.glide.request.b.c` @type ^`j1.a` @kind object;
  #L22b72e.  call temp:= `b`(v1) @signature `Lj1/a;.b:()Z` @kind interface;
  #L22b734.  v1:= temp;
  #L22b736.  if v1 != 0 then goto L22b750;
  #L22b73a.  v1:= v2.`com.bumptech.glide.request.b.d` @type ^`j1.a` @kind object;
  #L22b73e.  call temp:= `b`(v1) @signature `Lj1/a;.b:()Z` @kind interface;
  #L22b744.  v1:= temp;
  #L22b746.  if v1 == 0 then goto L22b74c;
  #L22b74a.  goto L22b750;
  #L22b74c.  v1:= 0I;
  #L22b74e.  goto L22b752;
  #L22b750.  v1:= 1I;
  #L22b752.  @monitorexit v0
  #L22b754.  return v1;
  #L22b756.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22b758.  @monitorexit v0
  #L22b75a.  throw v1;
  catch `java.lang.Throwable` @[L22b72a..L22b75a] goto L22b756;
}
procedure `void` `c`(`com.bumptech.glide.request.b` v2 @kind this, `j1.a` v3 @kind object) @signature `Lcom/bumptech/glide/request/b;.c:(Lj1/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22ba7c.  v0:= v2.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22ba80.  @monitorenter v0
  #L22ba82.  v1:= v2.`com.bumptech.glide.request.b.d` @type ^`j1.a` @kind object;
  #L22ba86.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22ba8c.  v3:= temp;
  #L22ba8e.  if v3 != 0 then goto L22bab8;
  #L22ba92.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22ba96.  v2.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L22ba9a.  v3:= v2.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22ba9e.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.a` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22baa2.  if v3 == v1 then goto L22bab4;
  #L22baa6.  v2.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L22baaa.  v3:= v2.`com.bumptech.glide.request.b.d` @type ^`j1.a` @kind object;
  #L22baae.  call `j`(v3) @signature `Lj1/a;.j:()V` @kind interface;
  #L22bab4.  @monitorexit v0
  #L22bab6.  return @kind void;
  #L22bab8.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22babc.  v2.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L22bac0.  v3:= v2.`com.bumptech.glide.request.b.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L22bac4.  if v3 == 0 then goto L22bace;
  #L22bac8.  call `c`(v3, v2) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.c:(Lj1/a;)V` @kind interface;
  #L22bace.  @monitorexit v0
  #L22bad0.  return @kind void;
  #L22bad2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22bad4.  @monitorexit v0
  #L22bad6.  throw v3;
  catch `java.lang.Throwable` @[L22ba82..L22bad6] goto L22bad2;
}
procedure `void` `clear`(`com.bumptech.glide.request.b` v3 @kind this) @signature `Lcom/bumptech/glide/request/b;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22ba28.  v0:= v3.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22ba2c.  @monitorenter v0
  #L22ba2e.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.c` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22ba32.  v3.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L22ba36.  v2:= v3.`com.bumptech.glide.request.b.c` @type ^`j1.a` @kind object;
  #L22ba3a.  call `clear`(v2) @signature `Lj1/a;.clear:()V` @kind interface;
  #L22ba40.  v2:= v3.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22ba44.  if v2 == v1 then goto L22ba56;
  #L22ba48.  v3.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L22ba4c.  v1:= v3.`com.bumptech.glide.request.b.d` @type ^`j1.a` @kind object;
  #L22ba50.  call `clear`(v1) @signature `Lj1/a;.clear:()V` @kind interface;
  #L22ba56.  @monitorexit v0
  #L22ba58.  return @kind void;
  #L22ba5a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22ba5c.  @monitorexit v0
  #L22ba5e.  throw v1;
  catch `java.lang.Throwable` @[L22ba2e..L22ba5e] goto L22ba5a;
}
procedure `boolean` `d`(`com.bumptech.glide.request.b` v2 @kind this, `j1.a` v3 @kind object) @signature `Lcom/bumptech/glide/request/b;.d:(Lj1/a;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22b6d8.  v0:= v2.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22b6dc.  @monitorenter v0
  #L22b6de.  call temp:= `n`(v2) @signature `Lcom/bumptech/glide/request/b;.n:()Z` @kind direct;
  #L22b6e4.  v1:= temp;
  #L22b6e6.  if v1 == 0 then goto L22b6fa;
  #L22b6ea.  call temp:= `a`(v2, v3) @signature `Lcom/bumptech/glide/request/b;.a:(Lj1/a;)Z` @kind direct;
  #L22b6f0.  v3:= temp;
  #L22b6f2.  if v3 == 0 then goto L22b6fa;
  #L22b6f6.  v3:= 1I;
  #L22b6f8.  goto L22b6fc;
  #L22b6fa.  v3:= 0I;
  #L22b6fc.  @monitorexit v0
  #L22b6fe.  return v3;
  #L22b700.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22b702.  @monitorexit v0
  #L22b704.  throw v3;
  catch `java.lang.Throwable` @[L22b6de..L22b704] goto L22b700;
}
procedure `void` `e`(`com.bumptech.glide.request.b` v2 @kind this, `j1.a` v3 @kind object) @signature `Lcom/bumptech/glide/request/b;.e:(Lj1/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22baf4.  v0:= v2.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22baf8.  @monitorenter v0
  #L22bafa.  v1:= v2.`com.bumptech.glide.request.b.c` @type ^`j1.a` @kind object;
  #L22bafe.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22bb04.  v1:= temp;
  #L22bb06.  if v1 == 0 then goto L22bb14;
  #L22bb0a.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.d` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22bb0e.  v2.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L22bb12.  goto L22bb2c;
  #L22bb14.  v1:= v2.`com.bumptech.glide.request.b.d` @type ^`j1.a` @kind object;
  #L22bb18.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22bb1e.  v3:= temp;
  #L22bb20.  if v3 == 0 then goto L22bb2c;
  #L22bb24.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.d` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22bb28.  v2.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L22bb2c.  v3:= v2.`com.bumptech.glide.request.b.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L22bb30.  if v3 == 0 then goto L22bb3a;
  #L22bb34.  call `e`(v3, v2) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.e:(Lj1/a;)V` @kind interface;
  #L22bb3a.  @monitorexit v0
  #L22bb3c.  return @kind void;
  #L22bb3e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22bb40.  @monitorexit v0
  #L22bb42.  throw v3;
  catch `java.lang.Throwable` @[L22bafa..L22bb42] goto L22bb3e;
}
procedure `boolean` `f`(`com.bumptech.glide.request.b` v3 @kind this, `j1.a` v4 @kind object) @signature `Lcom/bumptech/glide/request/b;.f:(Lj1/a;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22b808.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.request.b` @kind boolean;
  #L22b80c.  v1:= 0I;
  #L22b80e.  if v0 == 0 then goto L22b840;
  #L22b812.  v4:= (`com.bumptech.glide.request.b`) v4 @kind object;
  #L22b816.  v0:= v3.`com.bumptech.glide.request.b.c` @type ^`j1.a` @kind object;
  #L22b81a.  v2:= v4.`com.bumptech.glide.request.b.c` @type ^`j1.a` @kind object;
  #L22b81e.  call temp:= `f`(v0, v2) @signature `Lj1/a;.f:(Lj1/a;)Z` @kind interface;
  #L22b824.  v0:= temp;
  #L22b826.  if v0 == 0 then goto L22b840;
  #L22b82a.  v0:= v3.`com.bumptech.glide.request.b.d` @type ^`j1.a` @kind object;
  #L22b82e.  v4:= v4.`com.bumptech.glide.request.b.d` @type ^`j1.a` @kind object;
  #L22b832.  call temp:= `f`(v0, v4) @signature `Lj1/a;.f:(Lj1/a;)Z` @kind interface;
  #L22b838.  v4:= temp;
  #L22b83a.  if v4 == 0 then goto L22b840;
  #L22b83e.  v1:= 1I;
  #L22b840.  return v1;
}
procedure `boolean` `g`(`com.bumptech.glide.request.b` v3 @kind this) @signature `Lcom/bumptech/glide/request/b;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22b778.  v0:= v3.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22b77c.  @monitorenter v0
  #L22b77e.  v1:= v3.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b782.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.c` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b786.  if v1 != v2 then goto L22b796;
  #L22b78a.  v1:= v3.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b78e.  if v1 != v2 then goto L22b796;
  #L22b792.  v1:= 1I;
  #L22b794.  goto L22b798;
  #L22b796.  v1:= 0I;
  #L22b798.  @monitorexit v0
  #L22b79a.  return v1;
  #L22b79c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22b79e.  @monitorexit v0
  #L22b7a0.  throw v1;
  catch `java.lang.Throwable` @[L22b77e..L22b7a0] goto L22b79c;
}
procedure `com.bumptech.glide.request.RequestCoordinator` `getRoot`(`com.bumptech.glide.request.b` v2 @kind this) @signature `Lcom/bumptech/glide/request/b;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22b974.  v0:= v2.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22b978.  @monitorenter v0
  #L22b97a.  v1:= v2.`com.bumptech.glide.request.b.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L22b97e.  if v1 == 0 then goto L22b98c;
  #L22b982.  call temp:= `getRoot`(v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @kind interface;
  #L22b988.  v1:= temp @kind object;
  #L22b98a.  goto L22b98e;
  #L22b98c.  v1:= v2 @kind object;
  #L22b98e.  @monitorexit v0
  #L22b990.  return v1 @kind object;
  #L22b992.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22b994.  @monitorexit v0
  #L22b996.  throw v1;
  catch `java.lang.Throwable` @[L22b97a..L22b996] goto L22b992;
}
procedure `boolean` `h`(`com.bumptech.glide.request.b` v2 @kind this, `j1.a` v3 @kind object) @signature `Lcom/bumptech/glide/request/b;.h:(Lj1/a;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22b640.  v0:= v2.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22b644.  @monitorenter v0
  #L22b646.  call temp:= `l`(v2) @signature `Lcom/bumptech/glide/request/b;.l:()Z` @kind direct;
  #L22b64c.  v1:= temp;
  #L22b64e.  if v1 == 0 then goto L22b662;
  #L22b652.  call temp:= `a`(v2, v3) @signature `Lcom/bumptech/glide/request/b;.a:(Lj1/a;)Z` @kind direct;
  #L22b658.  v3:= temp;
  #L22b65a.  if v3 == 0 then goto L22b662;
  #L22b65e.  v3:= 1I;
  #L22b660.  goto L22b664;
  #L22b662.  v3:= 0I;
  #L22b664.  @monitorexit v0
  #L22b666.  return v3;
  #L22b668.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22b66a.  @monitorexit v0
  #L22b66c.  throw v3;
  catch `java.lang.Throwable` @[L22b646..L22b66c] goto L22b668;
}
procedure `boolean` `i`(`com.bumptech.glide.request.b` v2 @kind this, `j1.a` v3 @kind object) @signature `Lcom/bumptech/glide/request/b;.i:(Lj1/a;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22b68c.  v0:= v2.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22b690.  @monitorenter v0
  #L22b692.  call temp:= `m`(v2) @signature `Lcom/bumptech/glide/request/b;.m:()Z` @kind direct;
  #L22b698.  v1:= temp;
  #L22b69a.  if v1 == 0 then goto L22b6ae;
  #L22b69e.  call temp:= `a`(v2, v3) @signature `Lcom/bumptech/glide/request/b;.a:(Lj1/a;)Z` @kind direct;
  #L22b6a4.  v3:= temp;
  #L22b6a6.  if v3 == 0 then goto L22b6ae;
  #L22b6aa.  v3:= 1I;
  #L22b6ac.  goto L22b6b0;
  #L22b6ae.  v3:= 0I;
  #L22b6b0.  @monitorexit v0
  #L22b6b2.  return v3;
  #L22b6b4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22b6b6.  @monitorexit v0
  #L22b6b8.  throw v3;
  catch `java.lang.Throwable` @[L22b692..L22b6b8] goto L22b6b4;
}
procedure `boolean` `isRunning`(`com.bumptech.glide.request.b` v3 @kind this) @signature `Lcom/bumptech/glide/request/b;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22b854.  v0:= v3.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22b858.  @monitorenter v0
  #L22b85a.  v1:= v3.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b85e.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.a` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b862.  if v1 == v2 then goto L22b874;
  #L22b866.  v1:= v3.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b86a.  if v1 != v2 then goto L22b870;
  #L22b86e.  goto L22b874;
  #L22b870.  v1:= 0I;
  #L22b872.  goto L22b876;
  #L22b874.  v1:= 1I;
  #L22b876.  @monitorexit v0
  #L22b878.  return v1;
  #L22b87a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22b87c.  @monitorexit v0
  #L22b87e.  throw v1;
  catch `java.lang.Throwable` @[L22b85a..L22b87e] goto L22b87a;
}
procedure `void` `j`(`com.bumptech.glide.request.b` v3 @kind this) @signature `Lcom/bumptech/glide/request/b;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22b9e0.  v0:= v3.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22b9e4.  @monitorenter v0
  #L22b9e6.  v1:= v3.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b9ea.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.a` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b9ee.  if v1 == v2 then goto L22ba00;
  #L22b9f2.  v3.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v2 @kind object;
  #L22b9f6.  v1:= v3.`com.bumptech.glide.request.b.c` @type ^`j1.a` @kind object;
  #L22b9fa.  call `j`(v1) @signature `Lj1/a;.j:()V` @kind interface;
  #L22ba00.  @monitorexit v0
  #L22ba02.  return @kind void;
  #L22ba04.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22ba06.  @monitorexit v0
  #L22ba08.  throw v1;
  catch `java.lang.Throwable` @[L22b9e6..L22ba08] goto L22ba04;
}
procedure `boolean` `k`(`com.bumptech.glide.request.b` v3 @kind this) @signature `Lcom/bumptech/glide/request/b;.k:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22b7c0.  v0:= v3.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22b7c4.  @monitorenter v0
  #L22b7c6.  v1:= v3.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b7ca.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.d` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b7ce.  if v1 == v2 then goto L22b7e0;
  #L22b7d2.  v1:= v3.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22b7d6.  if v1 != v2 then goto L22b7dc;
  #L22b7da.  goto L22b7e0;
  #L22b7dc.  v1:= 0I;
  #L22b7de.  goto L22b7e2;
  #L22b7e0.  v1:= 1I;
  #L22b7e2.  @monitorexit v0
  #L22b7e4.  return v1;
  #L22b7e6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22b7e8.  @monitorexit v0
  #L22b7ea.  throw v1;
  catch `java.lang.Throwable` @[L22b7c6..L22b7ea] goto L22b7e6;
}
procedure `void` `o`(`com.bumptech.glide.request.b` v0 @kind this, `j1.a` v1 @kind object, `j1.a` v2 @kind object) @signature `Lcom/bumptech/glide/request/b;.o:(Lj1/a;Lj1/a;)V` @AccessFlag PUBLIC {
    temp;

  #L22bbc4.  v0.`com.bumptech.glide.request.b.c` @type ^`j1.a` := v1 @kind object;
  #L22bbc8.  v0.`com.bumptech.glide.request.b.d` @type ^`j1.a` := v2 @kind object;
  #L22bbcc.  return @kind void;
}
procedure `void` `pause`(`com.bumptech.glide.request.b` v3 @kind this) @signature `Lcom/bumptech/glide/request/b;.pause:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22bb60.  v0:= v3.`com.bumptech.glide.request.b.a` @type ^`java.lang.Object` @kind object;
  #L22bb64.  @monitorenter v0
  #L22bb66.  v1:= v3.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22bb6a.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.a` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22bb6e.  if v1 != v2 then goto L22bb84;
  #L22bb72.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.b` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22bb76.  v3.`com.bumptech.glide.request.b.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L22bb7a.  v1:= v3.`com.bumptech.glide.request.b.c` @type ^`j1.a` @kind object;
  #L22bb7e.  call `pause`(v1) @signature `Lj1/a;.pause:()V` @kind interface;
  #L22bb84.  v1:= v3.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22bb88.  if v1 != v2 then goto L22bb9e;
  #L22bb8c.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.b` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L22bb90.  v3.`com.bumptech.glide.request.b.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L22bb94.  v1:= v3.`com.bumptech.glide.request.b.d` @type ^`j1.a` @kind object;
  #L22bb98.  call `pause`(v1) @signature `Lj1/a;.pause:()V` @kind interface;
  #L22bb9e.  @monitorexit v0
  #L22bba0.  return @kind void;
  #L22bba2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22bba4.  @monitorexit v0
  #L22bba6.  throw v1;
  catch `java.lang.Throwable` @[L22bb66..L22bba6] goto L22bba2;
}
