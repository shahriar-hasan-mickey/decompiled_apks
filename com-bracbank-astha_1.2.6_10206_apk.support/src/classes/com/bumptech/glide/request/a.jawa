record `com.bumptech.glide.request.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Cloneable` @kind interface {
  `boolean` `com.bumptech.glide.request.a.A` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.a` @AccessFlag PRIVATE;
  `float` `com.bumptech.glide.request.a.b` @AccessFlag PRIVATE;
  `t0.a` `com.bumptech.glide.request.a.c` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.request.a.d` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.a.e` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.f` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.a.g` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.h` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.i` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.j` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.k` @AccessFlag PRIVATE;
  `q0.b` `com.bumptech.glide.request.a.l` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.m` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.n` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.a.o` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.p` @AccessFlag PRIVATE;
  `q0.d` `com.bumptech.glide.request.a.r` @AccessFlag PRIVATE;
  `java.util.Map` `com.bumptech.glide.request.a.s` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.request.a.t` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.u` @AccessFlag PRIVATE;
  `android.content.res.Resources$Theme` `com.bumptech.glide.request.a.v` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.w` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.x` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.y` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L22b5c8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22b5ce.  v0:= 1.0F;
  #L22b5d2.  v2.`com.bumptech.glide.request.a.b` @type ^`float` := v0;
  #L22b5d6.  v0:= `@@t0.a.e` @type ^`t0.a` @kind object;
  #L22b5da.  v2.`com.bumptech.glide.request.a.c` @type ^`t0.a` := v0 @kind object;
  #L22b5de.  v0:= `@@com.bumptech.glide.Priority.c` @type ^`com.bumptech.glide.Priority` @kind object;
  #L22b5e2.  v2.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L22b5e6.  v0:= 1I;
  #L22b5e8.  v2.`com.bumptech.glide.request.a.i` @type ^`boolean` := v0 @kind boolean;
  #L22b5ec.  v1:= -1I;
  #L22b5ee.  v2.`com.bumptech.glide.request.a.j` @type ^`int` := v1;
  #L22b5f2.  v2.`com.bumptech.glide.request.a.k` @type ^`int` := v1;
  #L22b5f6.  call temp:= `c`() @signature `Lm1/a;.c:()Lm1/a;` @kind static;
  #L22b5fc.  v1:= temp @kind object;
  #L22b5fe.  v2.`com.bumptech.glide.request.a.l` @type ^`q0.b` := v1 @kind object;
  #L22b602.  v2.`com.bumptech.glide.request.a.n` @type ^`boolean` := v0 @kind boolean;
  #L22b606.  v1:= new `q0.d`;
  #L22b60a.  call `<init>`(v1) @signature `Lq0/d;.<init>:()V` @kind direct;
  #L22b610.  v2.`com.bumptech.glide.request.a.r` @type ^`q0.d` := v1 @kind object;
  #L22b614.  v1:= new `n1.b`;
  #L22b618.  call `<init>`(v1) @signature `Ln1/b;.<init>:()V` @kind direct;
  #L22b61e.  v2.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` := v1 @kind object;
  #L22b622.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L22b626.  v2.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` := v1 @kind object;
  #L22b62a.  v2.`com.bumptech.glide.request.a.z` @type ^`boolean` := v0 @kind boolean;
  #L22b62e.  return @kind void;
}
procedure `boolean` `E`(`com.bumptech.glide.request.a` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/a;.E:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L22aa54.  v0:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22aa58.  call temp:= `F`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22aa5e.  v2:= temp;
  #L22aa60.  return v2;
}
procedure `boolean` `F`(`int` v0 , `int` v1 ) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L22aa74.  v0:= v0 ^& v1 @kind int;
  #L22aa76.  if v0 == 0 then goto L22aa7e;
  #L22aa7a.  v0:= 1I;
  #L22aa7c.  goto L22aa80;
  #L22aa7e.  v0:= 0I;
  #L22aa80.  return v0;
}
procedure `com.bumptech.glide.request.a` `M`(`com.bumptech.glide.request.a` v0 @kind this) @signature `Lcom/bumptech/glide/request/a;.M:()Lcom/bumptech/glide/request/a;` @AccessFlag PRIVATE {
    temp;

  #L22b0a4.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `N`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L22b0b8.  v0:= v2.`com.bumptech.glide.request.a.u` @type ^`boolean` @kind boolean;
  #L22b0bc.  if v0 != 0 then goto L22b0ca;
  #L22b0c0.  call temp:= `M`(v2) @signature `Lcom/bumptech/glide/request/a;.M:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b0c6.  v0:= temp @kind object;
  #L22b0c8.  return v0 @kind object;
  #L22b0ca.  v0:= new `java.lang.IllegalStateException`;
  #L22b0ce.  v1:= "You cannot modify locked T, consider clone()" @kind object;
  #L22b0d2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22b0d8.  throw v0;
}
procedure `boolean` `A`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.A:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22a9ec.  v0:= v1.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L22a9f0.  return v0;
}
procedure `boolean` `B`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.B:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22aa04.  v0:= v1.`com.bumptech.glide.request.a.i` @type ^`boolean` @kind boolean;
  #L22aa08.  return v0;
}
procedure `boolean` `C`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.C:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22aa1c.  v0:= 8I;
  #L22aa20.  call temp:= `E`(v1, v0) @signature `Lcom/bumptech/glide/request/a;.E:(I)Z` @kind direct;
  #L22aa26.  v0:= temp;
  #L22aa28.  return v0;
}
procedure `boolean` `D`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.D:()Z` @AccessFlag  {
    temp;
    v0;

  #L22aa3c.  v0:= v1.`com.bumptech.glide.request.a.z` @type ^`boolean` @kind boolean;
  #L22aa40.  return v0;
}
procedure `boolean` `G`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.G:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22aa94.  v0:= v1.`com.bumptech.glide.request.a.m` @type ^`boolean` @kind boolean;
  #L22aa98.  return v0;
}
procedure `boolean` `H`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.H:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L22aaac.  v0:= v2.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L22aab0.  v1:= v2.`com.bumptech.glide.request.a.j` @type ^`int`;
  #L22aab4.  call temp:= `r`(v0, v1) @signature `Ln1/k;.r:(II)Z` @kind static;
  #L22aaba.  v0:= temp;
  #L22aabc.  return v0;
}
procedure `com.bumptech.glide.request.a` `I`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.I:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22af9c.  v0:= 1I;
  #L22af9e.  v1.`com.bumptech.glide.request.a.u` @type ^`boolean` := v0 @kind boolean;
  #L22afa2.  call temp:= `M`(v1) @signature `Lcom/bumptech/glide/request/a;.M:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22afa8.  v0:= temp @kind object;
  #L22afaa.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `J`(`com.bumptech.glide.request.a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/request/a;.J:(II)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22afbc.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22afc0.  if v0 == 0 then goto L22afd6;
  #L22afc4.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22afca.  v0:= temp @kind object;
  #L22afcc.  call temp:= `J`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/a;.J:(II)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22afd2.  v2:= temp @kind object;
  #L22afd4.  return v2 @kind object;
  #L22afd6.  v1.`com.bumptech.glide.request.a.k` @type ^`int` := v2;
  #L22afda.  v1.`com.bumptech.glide.request.a.j` @type ^`int` := v3;
  #L22afde.  v2:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22afe2.  v2:= v2 ^| 512;
  #L22afe6.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22afea.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22aff0.  v2:= temp @kind object;
  #L22aff2.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `K`(`com.bumptech.glide.request.a` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/a;.K:(I)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22b004.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22b008.  if v0 == 0 then goto L22b01e;
  #L22b00c.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b012.  v0:= temp @kind object;
  #L22b014.  call temp:= `K`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.K:(I)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b01a.  v2:= temp @kind object;
  #L22b01c.  return v2 @kind object;
  #L22b01e.  v1.`com.bumptech.glide.request.a.h` @type ^`int` := v2;
  #L22b022.  v2:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22b026.  v2:= v2 ^| 128;
  #L22b02a.  v0:= 0I;
  #L22b02c.  v1.`com.bumptech.glide.request.a.g` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L22b030.  v2:= v2 ^& -65;
  #L22b034.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22b038.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b03e.  v2:= temp @kind object;
  #L22b040.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `L`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.L:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22b054.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22b058.  if v0 == 0 then goto L22b06e;
  #L22b05c.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b062.  v0:= temp @kind object;
  #L22b064.  call temp:= `L`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.L:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b06a.  v2:= temp @kind object;
  #L22b06c.  return v2 @kind object;
  #L22b06e.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22b074.  v2:= temp @kind object;
  #L22b076.  v2:= (`com.bumptech.glide.Priority`) v2 @kind object;
  #L22b07a.  v1.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.Priority` := v2 @kind object;
  #L22b07e.  v2:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22b082.  v2:= v2 ^| 8;
  #L22b086.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22b08a.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b090.  v2:= temp @kind object;
  #L22b092.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `O`(`com.bumptech.glide.request.a` v1 @kind this, `q0.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/request/a;.O:(Lq0/c;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22b0ec.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22b0f0.  if v0 == 0 then goto L22b106;
  #L22b0f4.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b0fa.  v0:= temp @kind object;
  #L22b0fc.  call temp:= `O`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/a;.O:(Lq0/c;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b102.  v2:= temp @kind object;
  #L22b104.  return v2 @kind object;
  #L22b106.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22b10c.  call temp:= `d`(v3) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22b112.  v0:= v1.`com.bumptech.glide.request.a.r` @type ^`q0.d` @kind object;
  #L22b116.  call temp:= `e`(v0, v2, v3) @signature `Lq0/d;.e:(Lq0/c;Ljava/lang/Object;)Lq0/d;` @kind virtual;
  #L22b11c.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b122.  v2:= temp @kind object;
  #L22b124.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `P`(`com.bumptech.glide.request.a` v1 @kind this, `q0.b` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.P:(Lq0/b;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22b138.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22b13c.  if v0 == 0 then goto L22b152;
  #L22b140.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b146.  v0:= temp @kind object;
  #L22b148.  call temp:= `P`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.P:(Lq0/b;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b14e.  v2:= temp @kind object;
  #L22b150.  return v2 @kind object;
  #L22b152.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22b158.  v2:= temp @kind object;
  #L22b15a.  v2:= (`q0.b`) v2 @kind object;
  #L22b15e.  v1.`com.bumptech.glide.request.a.l` @type ^`q0.b` := v2 @kind object;
  #L22b162.  v2:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22b166.  v2:= v2 ^| 1024;
  #L22b16a.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22b16e.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b174.  v2:= temp @kind object;
  #L22b176.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `Q`(`com.bumptech.glide.request.a` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/request/a;.Q:(F)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22b188.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22b18c.  if v0 == 0 then goto L22b1a2;
  #L22b190.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b196.  v0:= temp @kind object;
  #L22b198.  call temp:= `Q`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.Q:(F)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b19e.  v2:= temp @kind object;
  #L22b1a0.  return v2 @kind object;
  #L22b1a2.  v0:= 0I;
  #L22b1a4.  v0:= fcmpg(v2, v0);
  #L22b1a8.  if v0 < 0 then goto L22b1d2;
  #L22b1ac.  v0:= 1.0F;
  #L22b1b0.  v0:= fcmpl(v2, v0);
  #L22b1b4.  if v0 > 0 then goto L22b1d2;
  #L22b1b8.  v1.`com.bumptech.glide.request.a.b` @type ^`float` := v2;
  #L22b1bc.  v2:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22b1c0.  v2:= v2 ^| 2;
  #L22b1c4.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22b1c8.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b1ce.  v2:= temp @kind object;
  #L22b1d0.  return v2 @kind object;
  #L22b1d2.  v2:= new `java.lang.IllegalArgumentException`;
  #L22b1d6.  v0:= "sizeMultiplier must be between 0 and 1" @kind object;
  #L22b1da.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22b1e0.  throw v2;
}
procedure `com.bumptech.glide.request.a` `R`(`com.bumptech.glide.request.a` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/request/a;.R:(Z)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22b1f4.  v0:= v2.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22b1f8.  v1:= 1I;
  #L22b1fa.  if v0 == 0 then goto L22b210;
  #L22b1fe.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b204.  v3:= temp @kind object;
  #L22b206.  call temp:= `R`(v3, v1) @signature `Lcom/bumptech/glide/request/a;.R:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b20c.  v3:= temp @kind object;
  #L22b20e.  return v3 @kind object;
  #L22b210.  v3:= v3 ^~ v1 @kind int;
  #L22b212.  v2.`com.bumptech.glide.request.a.i` @type ^`boolean` := v3 @kind boolean;
  #L22b216.  v3:= v2.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22b21a.  v3:= v3 ^| 256;
  #L22b21e.  v2.`com.bumptech.glide.request.a.a` @type ^`int` := v3;
  #L22b222.  call temp:= `N`(v2) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b228.  v3:= temp @kind object;
  #L22b22a.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.a` `S`(`com.bumptech.glide.request.a` v1 @kind this, `java.lang.Class` v2 @kind object, `q0.g` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/request/a;.S:(Ljava/lang/Class;Lq0/g;Z)Lcom/bumptech/glide/request/a;` @AccessFlag  {
    temp;
    v0;

  #L22b23c.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22b240.  if v0 == 0 then goto L22b256;
  #L22b244.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b24a.  v0:= temp @kind object;
  #L22b24c.  call temp:= `S`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/request/a;.S:(Ljava/lang/Class;Lq0/g;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b252.  v2:= temp @kind object;
  #L22b254.  return v2 @kind object;
  #L22b256.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22b25c.  call temp:= `d`(v3) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22b262.  v0:= v1.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L22b266.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22b26c.  v2:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22b270.  v2:= v2 ^| 2048;
  #L22b274.  v3:= 1I;
  #L22b276.  v1.`com.bumptech.glide.request.a.n` @type ^`boolean` := v3 @kind boolean;
  #L22b27a.  v0:= 65536I;
  #L22b27e.  v2:= v2 ^| v0 @kind int;
  #L22b280.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22b284.  v0:= 0I;
  #L22b286.  v1.`com.bumptech.glide.request.a.z` @type ^`boolean` := v0 @kind boolean;
  #L22b28a.  if v4 == 0 then goto L22b29c;
  #L22b28e.  v4:= 131072I;
  #L22b292.  v2:= v2 ^| v4 @kind int;
  #L22b294.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22b298.  v1.`com.bumptech.glide.request.a.m` @type ^`boolean` := v3 @kind boolean;
  #L22b29c.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b2a2.  v2:= temp @kind object;
  #L22b2a4.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `T`(`com.bumptech.glide.request.a` v1 @kind this, `q0.g` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.T:(Lq0/g;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22b2b8.  v0:= 1I;
  #L22b2ba.  call temp:= `U`(v1, v2, v0) @signature `Lcom/bumptech/glide/request/a;.U:(Lq0/g;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b2c0.  v2:= temp @kind object;
  #L22b2c2.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `U`(`com.bumptech.glide.request.a` v2 @kind this, `q0.g` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/request/a;.U:(Lq0/g;Z)Lcom/bumptech/glide/request/a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L22b2d4.  v0:= v2.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22b2d8.  if v0 == 0 then goto L22b2ee;
  #L22b2dc.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b2e2.  v0:= temp @kind object;
  #L22b2e4.  call temp:= `U`(v0, v3, v4) @signature `Lcom/bumptech/glide/request/a;.U:(Lq0/g;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b2ea.  v3:= temp @kind object;
  #L22b2ec.  return v3 @kind object;
  #L22b2ee.  v0:= new `a1.i`;
  #L22b2f2.  call `<init>`(v0, v3, v4) @signature `La1/i;.<init>:(Lq0/g;Z)V` @kind direct;
  #L22b2f8.  v1:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L22b2fc.  call temp:= `S`(v2, v1, v3, v4) @signature `Lcom/bumptech/glide/request/a;.S:(Ljava/lang/Class;Lq0/g;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b302.  v1:= constclass @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22b306.  call temp:= `S`(v2, v1, v0, v4) @signature `Lcom/bumptech/glide/request/a;.S:(Ljava/lang/Class;Lq0/g;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b30c.  v1:= constclass @type ^`android.graphics.drawable.BitmapDrawable` @kind object;
  #L22b310.  call temp:= `c`(v0) @signature `La1/i;.c:()Lq0/g;` @kind virtual;
  #L22b316.  v0:= temp @kind object;
  #L22b318.  call temp:= `S`(v2, v1, v0, v4) @signature `Lcom/bumptech/glide/request/a;.S:(Ljava/lang/Class;Lq0/g;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b31e.  v0:= constclass @type ^`e1.c` @kind object;
  #L22b322.  v1:= new `e1.f`;
  #L22b326.  call `<init>`(v1, v3) @signature `Le1/f;.<init>:(Lq0/g;)V` @kind direct;
  #L22b32c.  call temp:= `S`(v2, v0, v1, v4) @signature `Lcom/bumptech/glide/request/a;.S:(Ljava/lang/Class;Lq0/g;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b332.  call temp:= `N`(v2) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b338.  v3:= temp @kind object;
  #L22b33a.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.a` `V`(`com.bumptech.glide.request.a` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/a;.V:(Z)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22b34c.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22b350.  if v0 == 0 then goto L22b366;
  #L22b354.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b35a.  v0:= temp @kind object;
  #L22b35c.  call temp:= `V`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.V:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b362.  v2:= temp @kind object;
  #L22b364.  return v2 @kind object;
  #L22b366.  v1.`com.bumptech.glide.request.a.A` @type ^`boolean` := v2 @kind boolean;
  #L22b36a.  v2:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22b36e.  v0:= 1048576I;
  #L22b372.  v2:= v2 ^| v0 @kind int;
  #L22b374.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22b378.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22b37e.  v2:= temp @kind object;
  #L22b380.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `a`(`com.bumptech.glide.request.a` v4 @kind this, `com.bumptech.glide.request.a` v5 @kind object) @signature `Lcom/bumptech/glide/request/a;.a:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22aae8.  v0:= v4.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22aaec.  if v0 == 0 then goto L22ab02;
  #L22aaf0.  call temp:= `c`(v4) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22aaf6.  v0:= temp @kind object;
  #L22aaf8.  call temp:= `a`(v0, v5) @signature `Lcom/bumptech/glide/request/a;.a:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22aafe.  v5:= temp @kind object;
  #L22ab00.  return v5 @kind object;
  #L22ab02.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ab06.  v1:= 2I;
  #L22ab08.  call temp:= `F`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ab0e.  v0:= temp;
  #L22ab10.  if v0 == 0 then goto L22ab1c;
  #L22ab14.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`float`;
  #L22ab18.  v4.`com.bumptech.glide.request.a.b` @type ^`float` := v0;
  #L22ab1c.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ab20.  v1:= 262144I;
  #L22ab24.  call temp:= `F`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ab2a.  v0:= temp;
  #L22ab2c.  if v0 == 0 then goto L22ab38;
  #L22ab30.  v0:= v5.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L22ab34.  v4.`com.bumptech.glide.request.a.x` @type ^`boolean` := v0 @kind boolean;
  #L22ab38.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ab3c.  v1:= 1048576I;
  #L22ab40.  call temp:= `F`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ab46.  v0:= temp;
  #L22ab48.  if v0 == 0 then goto L22ab54;
  #L22ab4c.  v0:= v5.`com.bumptech.glide.request.a.A` @type ^`boolean` @kind boolean;
  #L22ab50.  v4.`com.bumptech.glide.request.a.A` @type ^`boolean` := v0 @kind boolean;
  #L22ab54.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ab58.  v1:= 4I;
  #L22ab5a.  call temp:= `F`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ab60.  v0:= temp;
  #L22ab62.  if v0 == 0 then goto L22ab6e;
  #L22ab66.  v0:= v5.`com.bumptech.glide.request.a.c` @type ^`t0.a` @kind object;
  #L22ab6a.  v4.`com.bumptech.glide.request.a.c` @type ^`t0.a` := v0 @kind object;
  #L22ab6e.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ab72.  v1:= 8I;
  #L22ab76.  call temp:= `F`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ab7c.  v0:= temp;
  #L22ab7e.  if v0 == 0 then goto L22ab8a;
  #L22ab82.  v0:= v5.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L22ab86.  v4.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L22ab8a.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ab8e.  v1:= 16I;
  #L22ab92.  call temp:= `F`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ab98.  v0:= temp;
  #L22ab9a.  v1:= 0I;
  #L22ab9c.  if v0 == 0 then goto L22abb8;
  #L22aba0.  v0:= v5.`com.bumptech.glide.request.a.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22aba4.  v4.`com.bumptech.glide.request.a.e` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L22aba8.  v4.`com.bumptech.glide.request.a.f` @type ^`int` := v1;
  #L22abac.  v0:= v4.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22abb0.  v0:= v0 ^& -33;
  #L22abb4.  v4.`com.bumptech.glide.request.a.a` @type ^`int` := v0;
  #L22abb8.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22abbc.  v2:= 32I;
  #L22abc0.  call temp:= `F`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22abc6.  v0:= temp;
  #L22abc8.  v2:= 0I;
  #L22abca.  if v0 == 0 then goto L22abe6;
  #L22abce.  v0:= v5.`com.bumptech.glide.request.a.f` @type ^`int`;
  #L22abd2.  v4.`com.bumptech.glide.request.a.f` @type ^`int` := v0;
  #L22abd6.  v4.`com.bumptech.glide.request.a.e` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L22abda.  v0:= v4.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22abde.  v0:= v0 ^& -17;
  #L22abe2.  v4.`com.bumptech.glide.request.a.a` @type ^`int` := v0;
  #L22abe6.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22abea.  v3:= 64I;
  #L22abee.  call temp:= `F`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22abf4.  v0:= temp;
  #L22abf6.  if v0 == 0 then goto L22ac12;
  #L22abfa.  v0:= v5.`com.bumptech.glide.request.a.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22abfe.  v4.`com.bumptech.glide.request.a.g` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L22ac02.  v4.`com.bumptech.glide.request.a.h` @type ^`int` := v1;
  #L22ac06.  v0:= v4.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ac0a.  v0:= v0 ^& -129;
  #L22ac0e.  v4.`com.bumptech.glide.request.a.a` @type ^`int` := v0;
  #L22ac12.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ac16.  v3:= 128I;
  #L22ac1a.  call temp:= `F`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ac20.  v0:= temp;
  #L22ac22.  if v0 == 0 then goto L22ac3e;
  #L22ac26.  v0:= v5.`com.bumptech.glide.request.a.h` @type ^`int`;
  #L22ac2a.  v4.`com.bumptech.glide.request.a.h` @type ^`int` := v0;
  #L22ac2e.  v4.`com.bumptech.glide.request.a.g` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L22ac32.  v0:= v4.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ac36.  v0:= v0 ^& -65;
  #L22ac3a.  v4.`com.bumptech.glide.request.a.a` @type ^`int` := v0;
  #L22ac3e.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ac42.  v3:= 256I;
  #L22ac46.  call temp:= `F`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ac4c.  v0:= temp;
  #L22ac4e.  if v0 == 0 then goto L22ac5a;
  #L22ac52.  v0:= v5.`com.bumptech.glide.request.a.i` @type ^`boolean` @kind boolean;
  #L22ac56.  v4.`com.bumptech.glide.request.a.i` @type ^`boolean` := v0 @kind boolean;
  #L22ac5a.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ac5e.  v3:= 512I;
  #L22ac62.  call temp:= `F`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ac68.  v0:= temp;
  #L22ac6a.  if v0 == 0 then goto L22ac7e;
  #L22ac6e.  v0:= v5.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L22ac72.  v4.`com.bumptech.glide.request.a.k` @type ^`int` := v0;
  #L22ac76.  v0:= v5.`com.bumptech.glide.request.a.j` @type ^`int`;
  #L22ac7a.  v4.`com.bumptech.glide.request.a.j` @type ^`int` := v0;
  #L22ac7e.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ac82.  v3:= 1024I;
  #L22ac86.  call temp:= `F`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ac8c.  v0:= temp;
  #L22ac8e.  if v0 == 0 then goto L22ac9a;
  #L22ac92.  v0:= v5.`com.bumptech.glide.request.a.l` @type ^`q0.b` @kind object;
  #L22ac96.  v4.`com.bumptech.glide.request.a.l` @type ^`q0.b` := v0 @kind object;
  #L22ac9a.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ac9e.  v3:= 4096I;
  #L22aca2.  call temp:= `F`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22aca8.  v0:= temp;
  #L22acaa.  if v0 == 0 then goto L22acb6;
  #L22acae.  v0:= v5.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L22acb2.  v4.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` := v0 @kind object;
  #L22acb6.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22acba.  v3:= 8192I;
  #L22acbe.  call temp:= `F`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22acc4.  v0:= temp;
  #L22acc6.  if v0 == 0 then goto L22ace2;
  #L22acca.  v0:= v5.`com.bumptech.glide.request.a.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22acce.  v4.`com.bumptech.glide.request.a.o` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L22acd2.  v4.`com.bumptech.glide.request.a.p` @type ^`int` := v1;
  #L22acd6.  v0:= v4.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22acda.  v0:= v0 ^& -16385;
  #L22acde.  v4.`com.bumptech.glide.request.a.a` @type ^`int` := v0;
  #L22ace2.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ace6.  v3:= 16384I;
  #L22acea.  call temp:= `F`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22acf0.  v0:= temp;
  #L22acf2.  if v0 == 0 then goto L22ad0e;
  #L22acf6.  v0:= v5.`com.bumptech.glide.request.a.p` @type ^`int`;
  #L22acfa.  v4.`com.bumptech.glide.request.a.p` @type ^`int` := v0;
  #L22acfe.  v4.`com.bumptech.glide.request.a.o` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L22ad02.  v0:= v4.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ad06.  v0:= v0 ^& -8193;
  #L22ad0a.  v4.`com.bumptech.glide.request.a.a` @type ^`int` := v0;
  #L22ad0e.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ad12.  v2:= 32768I;
  #L22ad18.  call temp:= `F`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ad1e.  v0:= temp;
  #L22ad20.  if v0 == 0 then goto L22ad2c;
  #L22ad24.  v0:= v5.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L22ad28.  v4.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` := v0 @kind object;
  #L22ad2c.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ad30.  v2:= 65536I;
  #L22ad34.  call temp:= `F`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ad3a.  v0:= temp;
  #L22ad3c.  if v0 == 0 then goto L22ad48;
  #L22ad40.  v0:= v5.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L22ad44.  v4.`com.bumptech.glide.request.a.n` @type ^`boolean` := v0 @kind boolean;
  #L22ad48.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ad4c.  v2:= 131072I;
  #L22ad50.  call temp:= `F`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ad56.  v0:= temp;
  #L22ad58.  if v0 == 0 then goto L22ad64;
  #L22ad5c.  v0:= v5.`com.bumptech.glide.request.a.m` @type ^`boolean` @kind boolean;
  #L22ad60.  v4.`com.bumptech.glide.request.a.m` @type ^`boolean` := v0 @kind boolean;
  #L22ad64.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ad68.  v2:= 2048I;
  #L22ad6c.  call temp:= `F`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ad72.  v0:= temp;
  #L22ad74.  if v0 == 0 then goto L22ad8e;
  #L22ad78.  v0:= v4.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L22ad7c.  v2:= v5.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L22ad80.  call `putAll`(v0, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L22ad86.  v0:= v5.`com.bumptech.glide.request.a.z` @type ^`boolean` @kind boolean;
  #L22ad8a.  v4.`com.bumptech.glide.request.a.z` @type ^`boolean` := v0 @kind boolean;
  #L22ad8e.  v0:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ad92.  v2:= 524288I;
  #L22ad96.  call temp:= `F`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.F:(II)Z` @kind static;
  #L22ad9c.  v0:= temp;
  #L22ad9e.  if v0 == 0 then goto L22adaa;
  #L22ada2.  v0:= v5.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L22ada6.  v4.`com.bumptech.glide.request.a.y` @type ^`boolean` := v0 @kind boolean;
  #L22adaa.  v0:= v4.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L22adae.  if v0 != 0 then goto L22adda;
  #L22adb2.  v0:= v4.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L22adb6.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L22adbc.  v0:= v4.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22adc0.  v0:= v0 ^& -2049;
  #L22adc4.  v4.`com.bumptech.glide.request.a.m` @type ^`boolean` := v1 @kind boolean;
  #L22adc8.  v1:= -131073I;
  #L22adce.  v0:= v0 ^& v1 @kind int;
  #L22add0.  v4.`com.bumptech.glide.request.a.a` @type ^`int` := v0;
  #L22add4.  v0:= 1I;
  #L22add6.  v4.`com.bumptech.glide.request.a.z` @type ^`boolean` := v0 @kind boolean;
  #L22adda.  v0:= v4.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22adde.  v1:= v5.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22ade2.  v0:= v0 ^| v1 @kind int;
  #L22ade4.  v4.`com.bumptech.glide.request.a.a` @type ^`int` := v0;
  #L22ade8.  v0:= v4.`com.bumptech.glide.request.a.r` @type ^`q0.d` @kind object;
  #L22adec.  v5:= v5.`com.bumptech.glide.request.a.r` @type ^`q0.d` @kind object;
  #L22adf0.  call `d`(v0, v5) @signature `Lq0/d;.d:(Lq0/d;)V` @kind virtual;
  #L22adf6.  call temp:= `N`(v4) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22adfc.  v5:= temp @kind object;
  #L22adfe.  return v5 @kind object;
}
procedure `com.bumptech.glide.request.a` `b`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.b:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22ae10.  v0:= v2.`com.bumptech.glide.request.a.u` @type ^`boolean` @kind boolean;
  #L22ae14.  if v0 == 0 then goto L22ae32;
  #L22ae18.  v0:= v2.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22ae1c.  if v0 == 0 then goto L22ae22;
  #L22ae20.  goto L22ae32;
  #L22ae22.  v0:= new `java.lang.IllegalStateException`;
  #L22ae26.  v1:= "You cannot auto lock an already locked options object, try clone() first" @kind object;
  #L22ae2a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22ae30.  throw v0;
  #L22ae32.  v0:= 1I;
  #L22ae34.  v2.`com.bumptech.glide.request.a.w` @type ^`boolean` := v0 @kind boolean;
  #L22ae38.  call temp:= `I`(v2) @signature `Lcom/bumptech/glide/request/a;.I:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22ae3e.  v0:= temp @kind object;
  #L22ae40.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `c`(`com.bumptech.glide.request.a` v3 @kind this) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22ae54.  call temp:= `clone`(v3) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind super;
  #L22ae5a.  v0:= temp @kind object;
  #L22ae5c.  v0:= (`com.bumptech.glide.request.a`) v0 @kind object;
  #L22ae60.  v1:= new `q0.d`;
  #L22ae64.  call `<init>`(v1) @signature `Lq0/d;.<init>:()V` @kind direct;
  #L22ae6a.  v0.`com.bumptech.glide.request.a.r` @type ^`q0.d` := v1 @kind object;
  #L22ae6e.  v2:= v3.`com.bumptech.glide.request.a.r` @type ^`q0.d` @kind object;
  #L22ae72.  call `d`(v1, v2) @signature `Lq0/d;.d:(Lq0/d;)V` @kind virtual;
  #L22ae78.  v1:= new `n1.b`;
  #L22ae7c.  call `<init>`(v1) @signature `Ln1/b;.<init>:()V` @kind direct;
  #L22ae82.  v0.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` := v1 @kind object;
  #L22ae86.  v2:= v3.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L22ae8a.  call `putAll`(v1, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L22ae90.  v1:= 0I;
  #L22ae92.  v0.`com.bumptech.glide.request.a.u` @type ^`boolean` := v1 @kind boolean;
  #L22ae96.  v0.`com.bumptech.glide.request.a.w` @type ^`boolean` := v1 @kind boolean;
  #L22ae9a.  return v0 @kind object;
  #L22ae9c.  v0:= Exception @type ^`java.lang.CloneNotSupportedException` @kind object;
  #L22ae9e.  v1:= new `java.lang.RuntimeException`;
  #L22aea2.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22aea8.  throw v1;
  catch `java.lang.CloneNotSupportedException` @[L22ae54..L22ae9a] goto L22ae9c;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L22b54c.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22b552.  v0:= temp @kind object;
  #L22b554.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `d`(`com.bumptech.glide.request.a` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.d:(Ljava/lang/Class;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22aecc.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22aed0.  if v0 == 0 then goto L22aee6;
  #L22aed4.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22aeda.  v0:= temp @kind object;
  #L22aedc.  call temp:= `d`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.d:(Ljava/lang/Class;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22aee2.  v2:= temp @kind object;
  #L22aee4.  return v2 @kind object;
  #L22aee6.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22aeec.  v2:= temp @kind object;
  #L22aeee.  v2:= (`java.lang.Class`) v2 @kind object;
  #L22aef2.  v1.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` := v2 @kind object;
  #L22aef6.  v2:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22aefa.  v2:= v2 ^| 4096;
  #L22aefe.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22af02.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22af08.  v2:= temp @kind object;
  #L22af0a.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `e`(`com.bumptech.glide.request.a` v1 @kind this, `t0.a` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.e:(Lt0/a;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22af1c.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L22af20.  if v0 == 0 then goto L22af36;
  #L22af24.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/request/a;.c:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22af2a.  v0:= temp @kind object;
  #L22af2c.  call temp:= `e`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.e:(Lt0/a;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22af32.  v2:= temp @kind object;
  #L22af34.  return v2 @kind object;
  #L22af36.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22af3c.  v2:= temp @kind object;
  #L22af3e.  v2:= (`t0.a`) v2 @kind object;
  #L22af42.  v1.`com.bumptech.glide.request.a.c` @type ^`t0.a` := v2 @kind object;
  #L22af46.  v2:= v1.`com.bumptech.glide.request.a.a` @type ^`int`;
  #L22af4a.  v2:= v2 ^| 4;
  #L22af4e.  v1.`com.bumptech.glide.request.a.a` @type ^`int` := v2;
  #L22af52.  call temp:= `N`(v1) @signature `Lcom/bumptech/glide/request/a;.N:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L22af58.  v2:= temp @kind object;
  #L22af5a.  return v2 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.request.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/request/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22a84c.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.request.a` @kind boolean;
  #L22a850.  v1:= 0I;
  #L22a852.  if v0 == 0 then goto L22a9a8;
  #L22a856.  v4:= (`com.bumptech.glide.request.a`) v4 @kind object;
  #L22a85a.  v0:= v4.`com.bumptech.glide.request.a.b` @type ^`float`;
  #L22a85e.  v2:= v3.`com.bumptech.glide.request.a.b` @type ^`float`;
  #L22a862.  call temp:= `compare`(v0, v2) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L22a868.  v0:= temp;
  #L22a86a.  if v0 != 0 then goto L22a9a8;
  #L22a86e.  v0:= v3.`com.bumptech.glide.request.a.f` @type ^`int`;
  #L22a872.  v2:= v4.`com.bumptech.glide.request.a.f` @type ^`int`;
  #L22a876.  if v0 != v2 then goto L22a9a8;
  #L22a87a.  v0:= v3.`com.bumptech.glide.request.a.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22a87e.  v2:= v4.`com.bumptech.glide.request.a.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22a882.  call temp:= `c`(v0, v2) @signature `Ln1/k;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L22a888.  v0:= temp;
  #L22a88a.  if v0 == 0 then goto L22a9a8;
  #L22a88e.  v0:= v3.`com.bumptech.glide.request.a.h` @type ^`int`;
  #L22a892.  v2:= v4.`com.bumptech.glide.request.a.h` @type ^`int`;
  #L22a896.  if v0 != v2 then goto L22a9a8;
  #L22a89a.  v0:= v3.`com.bumptech.glide.request.a.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22a89e.  v2:= v4.`com.bumptech.glide.request.a.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22a8a2.  call temp:= `c`(v0, v2) @signature `Ln1/k;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L22a8a8.  v0:= temp;
  #L22a8aa.  if v0 == 0 then goto L22a9a8;
  #L22a8ae.  v0:= v3.`com.bumptech.glide.request.a.p` @type ^`int`;
  #L22a8b2.  v2:= v4.`com.bumptech.glide.request.a.p` @type ^`int`;
  #L22a8b6.  if v0 != v2 then goto L22a9a8;
  #L22a8ba.  v0:= v3.`com.bumptech.glide.request.a.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22a8be.  v2:= v4.`com.bumptech.glide.request.a.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22a8c2.  call temp:= `c`(v0, v2) @signature `Ln1/k;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L22a8c8.  v0:= temp;
  #L22a8ca.  if v0 == 0 then goto L22a9a8;
  #L22a8ce.  v0:= v3.`com.bumptech.glide.request.a.i` @type ^`boolean` @kind boolean;
  #L22a8d2.  v2:= v4.`com.bumptech.glide.request.a.i` @type ^`boolean` @kind boolean;
  #L22a8d6.  if v0 != v2 then goto L22a9a8;
  #L22a8da.  v0:= v3.`com.bumptech.glide.request.a.j` @type ^`int`;
  #L22a8de.  v2:= v4.`com.bumptech.glide.request.a.j` @type ^`int`;
  #L22a8e2.  if v0 != v2 then goto L22a9a8;
  #L22a8e6.  v0:= v3.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L22a8ea.  v2:= v4.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L22a8ee.  if v0 != v2 then goto L22a9a8;
  #L22a8f2.  v0:= v3.`com.bumptech.glide.request.a.m` @type ^`boolean` @kind boolean;
  #L22a8f6.  v2:= v4.`com.bumptech.glide.request.a.m` @type ^`boolean` @kind boolean;
  #L22a8fa.  if v0 != v2 then goto L22a9a8;
  #L22a8fe.  v0:= v3.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L22a902.  v2:= v4.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L22a906.  if v0 != v2 then goto L22a9a8;
  #L22a90a.  v0:= v3.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L22a90e.  v2:= v4.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L22a912.  if v0 != v2 then goto L22a9a8;
  #L22a916.  v0:= v3.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L22a91a.  v2:= v4.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L22a91e.  if v0 != v2 then goto L22a9a8;
  #L22a922.  v0:= v3.`com.bumptech.glide.request.a.c` @type ^`t0.a` @kind object;
  #L22a926.  v2:= v4.`com.bumptech.glide.request.a.c` @type ^`t0.a` @kind object;
  #L22a92a.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a930.  v0:= temp;
  #L22a932.  if v0 == 0 then goto L22a9a8;
  #L22a936.  v0:= v3.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L22a93a.  v2:= v4.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L22a93e.  if v0 != v2 then goto L22a9a8;
  #L22a942.  v0:= v3.`com.bumptech.glide.request.a.r` @type ^`q0.d` @kind object;
  #L22a946.  v2:= v4.`com.bumptech.glide.request.a.r` @type ^`q0.d` @kind object;
  #L22a94a.  call temp:= `equals`(v0, v2) @signature `Lq0/d;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a950.  v0:= temp;
  #L22a952.  if v0 == 0 then goto L22a9a8;
  #L22a956.  v0:= v3.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L22a95a.  v2:= v4.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L22a95e.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L22a964.  v0:= temp;
  #L22a966.  if v0 == 0 then goto L22a9a8;
  #L22a96a.  v0:= v3.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L22a96e.  v2:= v4.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L22a972.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a978.  v0:= temp;
  #L22a97a.  if v0 == 0 then goto L22a9a8;
  #L22a97e.  v0:= v3.`com.bumptech.glide.request.a.l` @type ^`q0.b` @kind object;
  #L22a982.  v2:= v4.`com.bumptech.glide.request.a.l` @type ^`q0.b` @kind object;
  #L22a986.  call temp:= `c`(v0, v2) @signature `Ln1/k;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L22a98c.  v0:= temp;
  #L22a98e.  if v0 == 0 then goto L22a9a8;
  #L22a992.  v0:= v3.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L22a996.  v4:= v4.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L22a99a.  call temp:= `c`(v0, v4) @signature `Ln1/k;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L22a9a0.  v4:= temp;
  #L22a9a2.  if v4 == 0 then goto L22a9a8;
  #L22a9a6.  v1:= 1I;
  #L22a9a8.  return v1;
}
procedure `com.bumptech.glide.request.a` `f`(`com.bumptech.glide.request.a` v2 @kind this, `com.bumptech.glide.load.DecodeFormat` v3 @kind object) @signature `Lcom/bumptech/glide/request/a;.f:(Lcom/bumptech/glide/load/DecodeFormat;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22af6c.  call temp:= `d`(v3) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22af72.  v0:= `@@com.bumptech.glide.load.resource.bitmap.a.f` @type ^`q0.c` @kind object;
  #L22af76.  call temp:= `O`(v2, v0, v3) @signature `Lcom/bumptech/glide/request/a;.O:(Lq0/c;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22af7c.  v0:= temp @kind object;
  #L22af7e.  v1:= `@@e1.i.a` @type ^`q0.c` @kind object;
  #L22af82.  call temp:= `O`(v0, v1, v3) @signature `Lcom/bumptech/glide/request/a;.O:(Lq0/c;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L22af88.  v3:= temp @kind object;
  #L22af8a.  return v3 @kind object;
}
procedure `int` `hashCode`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22b424.  v0:= v2.`com.bumptech.glide.request.a.b` @type ^`float`;
  #L22b428.  call temp:= `j`(v0) @signature `Ln1/k;.j:(F)I` @kind static;
  #L22b42e.  v0:= temp;
  #L22b430.  v1:= v2.`com.bumptech.glide.request.a.f` @type ^`int`;
  #L22b434.  call temp:= `l`(v1, v0) @signature `Ln1/k;.l:(II)I` @kind static;
  #L22b43a.  v0:= temp;
  #L22b43c.  v1:= v2.`com.bumptech.glide.request.a.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22b440.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b446.  v0:= temp;
  #L22b448.  v1:= v2.`com.bumptech.glide.request.a.h` @type ^`int`;
  #L22b44c.  call temp:= `l`(v1, v0) @signature `Ln1/k;.l:(II)I` @kind static;
  #L22b452.  v0:= temp;
  #L22b454.  v1:= v2.`com.bumptech.glide.request.a.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22b458.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b45e.  v0:= temp;
  #L22b460.  v1:= v2.`com.bumptech.glide.request.a.p` @type ^`int`;
  #L22b464.  call temp:= `l`(v1, v0) @signature `Ln1/k;.l:(II)I` @kind static;
  #L22b46a.  v0:= temp;
  #L22b46c.  v1:= v2.`com.bumptech.glide.request.a.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22b470.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b476.  v0:= temp;
  #L22b478.  v1:= v2.`com.bumptech.glide.request.a.i` @type ^`boolean` @kind boolean;
  #L22b47c.  call temp:= `n`(v1, v0) @signature `Ln1/k;.n:(ZI)I` @kind static;
  #L22b482.  v0:= temp;
  #L22b484.  v1:= v2.`com.bumptech.glide.request.a.j` @type ^`int`;
  #L22b488.  call temp:= `l`(v1, v0) @signature `Ln1/k;.l:(II)I` @kind static;
  #L22b48e.  v0:= temp;
  #L22b490.  v1:= v2.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L22b494.  call temp:= `l`(v1, v0) @signature `Ln1/k;.l:(II)I` @kind static;
  #L22b49a.  v0:= temp;
  #L22b49c.  v1:= v2.`com.bumptech.glide.request.a.m` @type ^`boolean` @kind boolean;
  #L22b4a0.  call temp:= `n`(v1, v0) @signature `Ln1/k;.n:(ZI)I` @kind static;
  #L22b4a6.  v0:= temp;
  #L22b4a8.  v1:= v2.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L22b4ac.  call temp:= `n`(v1, v0) @signature `Ln1/k;.n:(ZI)I` @kind static;
  #L22b4b2.  v0:= temp;
  #L22b4b4.  v1:= v2.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L22b4b8.  call temp:= `n`(v1, v0) @signature `Ln1/k;.n:(ZI)I` @kind static;
  #L22b4be.  v0:= temp;
  #L22b4c0.  v1:= v2.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L22b4c4.  call temp:= `n`(v1, v0) @signature `Ln1/k;.n:(ZI)I` @kind static;
  #L22b4ca.  v0:= temp;
  #L22b4cc.  v1:= v2.`com.bumptech.glide.request.a.c` @type ^`t0.a` @kind object;
  #L22b4d0.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b4d6.  v0:= temp;
  #L22b4d8.  v1:= v2.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L22b4dc.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b4e2.  v0:= temp;
  #L22b4e4.  v1:= v2.`com.bumptech.glide.request.a.r` @type ^`q0.d` @kind object;
  #L22b4e8.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b4ee.  v0:= temp;
  #L22b4f0.  v1:= v2.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L22b4f4.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b4fa.  v0:= temp;
  #L22b4fc.  v1:= v2.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L22b500.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b506.  v0:= temp;
  #L22b508.  v1:= v2.`com.bumptech.glide.request.a.l` @type ^`q0.b` @kind object;
  #L22b50c.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b512.  v0:= temp;
  #L22b514.  v1:= v2.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L22b518.  call temp:= `m`(v1, v0) @signature `Ln1/k;.m:(Ljava/lang/Object;I)I` @kind static;
  #L22b51e.  v0:= temp;
  #L22b520.  return v0;
}
procedure `t0.a` `i`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.i:()Lt0/a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b5b0.  v0:= v1.`com.bumptech.glide.request.a.c` @type ^`t0.a` @kind object;
  #L22b5b4.  return v0 @kind object;
}
procedure `int` `j`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.j:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b3ac.  v0:= v1.`com.bumptech.glide.request.a.f` @type ^`int`;
  #L22b3b0.  return v0;
}
procedure `android.graphics.drawable.Drawable` `k`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.k:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22a804.  v0:= v1.`com.bumptech.glide.request.a.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22a808.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `l`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.l:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22a81c.  v0:= v1.`com.bumptech.glide.request.a.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22a820.  return v0 @kind object;
}
procedure `int` `m`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.m:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b3c4.  v0:= v1.`com.bumptech.glide.request.a.p` @type ^`int`;
  #L22b3c8.  return v0;
}
procedure `boolean` `n`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.n:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22a9bc.  v0:= v1.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L22a9c0.  return v0;
}
procedure `q0.d` `o`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.o:()Lq0/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b598.  v0:= v1.`com.bumptech.glide.request.a.r` @type ^`q0.d` @kind object;
  #L22b59c.  return v0 @kind object;
}
procedure `int` `p`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.p:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b3dc.  v0:= v1.`com.bumptech.glide.request.a.j` @type ^`int`;
  #L22b3e0.  return v0;
}
procedure `int` `q`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.q:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b3f4.  v0:= v1.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L22b3f8.  return v0;
}
procedure `android.graphics.drawable.Drawable` `r`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.r:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22a834.  v0:= v1.`com.bumptech.glide.request.a.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L22a838.  return v0 @kind object;
}
procedure `int` `s`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.s:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b40c.  v0:= v1.`com.bumptech.glide.request.a.h` @type ^`int`;
  #L22b410.  return v0;
}
procedure `com.bumptech.glide.Priority` `t`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.t:()Lcom/bumptech/glide/Priority;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22aad0.  v0:= v1.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L22aad4.  return v0 @kind object;
}
procedure `java.lang.Class` `u`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.u:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b534.  v0:= v1.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L22b538.  return v0 @kind object;
}
procedure `q0.b` `v`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.v:()Lq0/b;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b580.  v0:= v1.`com.bumptech.glide.request.a.l` @type ^`q0.b` @kind object;
  #L22b584.  return v0 @kind object;
}
procedure `float` `w`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.w:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b394.  v0:= v1.`com.bumptech.glide.request.a.b` @type ^`float`;
  #L22b398.  return v0;
}
procedure `android.content.res.Resources$Theme` `x`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.x:()Landroid/content/res/Resources$Theme;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22a7ec.  v0:= v1.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L22a7f0.  return v0 @kind object;
}
procedure `java.util.Map` `y`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.y:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22b568.  v0:= v1.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L22b56c.  return v0 @kind object;
}
procedure `boolean` `z`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.z:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L22a9d4.  v0:= v1.`com.bumptech.glide.request.a.A` @type ^`boolean` @kind boolean;
  #L22a9d8.  return v0;
}
