record `com.bumptech.glide.load.a$d` @kind class @AccessFlag  extends `com.bumptech.glide.load.a$f` @kind interface {
  `java.io.InputStream` `com.bumptech.glide.load.a$d.a` @AccessFlag FINAL_SYNTHETIC;
  `u0.b` `com.bumptech.glide.load.a$d.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.a$d` v0 @kind this, `java.io.InputStream` v1 @kind object, `u0.b` v2 @kind object) @signature `Lcom/bumptech/glide/load/a$d;.<init>:(Ljava/io/InputStream;Lu0/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L221018.  v0.`com.bumptech.glide.load.a$d.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L22101c.  v0.`com.bumptech.glide.load.a$d.b` @type ^`u0.b` := v2 @kind object;
  #L221020.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L221026.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.load.a$d` v2 @kind this, `com.bumptech.glide.load.ImageHeaderParser` v3 @kind object) @signature `Lcom/bumptech/glide/load/a$d;.a:(Lcom/bumptech/glide/load/ImageHeaderParser;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L220fd0.  v0:= v2.`com.bumptech.glide.load.a$d.a` @type ^`java.io.InputStream` @kind object;
  #L220fd4.  v1:= v2.`com.bumptech.glide.load.a$d.b` @type ^`u0.b` @kind object;
  #L220fd8.  call temp:= `b`(v3, v0, v1) @signature `Lcom/bumptech/glide/load/ImageHeaderParser;.b:(Ljava/io/InputStream;Lu0/b;)I` @kind interface;
  #L220fde.  v3:= temp;
  #L220fe0.  v0:= v2.`com.bumptech.glide.load.a$d.a` @type ^`java.io.InputStream` @kind object;
  #L220fe4.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L220fea.  return v3;
  #L220fec.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L220fee.  v0:= v2.`com.bumptech.glide.load.a$d.a` @type ^`java.io.InputStream` @kind object;
  #L220ff2.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L220ff8.  throw v3;
  catch `java.lang.Throwable` @[L220fd0..L220fe0] goto L220fec;
}
