record `com.bumptech.glide.load.engine.q` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.e` @kind interface, `r0.d$a` @kind interface {
  `com.bumptech.glide.load.engine.e$a` `com.bumptech.glide.load.engine.q.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.f` `com.bumptech.glide.load.engine.q.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.q.c` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.q.d` @AccessFlag PRIVATE;
  `q0.b` `com.bumptech.glide.load.engine.q.e` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.load.engine.q.f` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.q.g` @AccessFlag PRIVATE;
  `x0.n$a` `com.bumptech.glide.load.engine.q.h` @AccessFlag PRIVATE_VOLATILE;
  `java.io.File` `com.bumptech.glide.load.engine.q.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.r` `com.bumptech.glide.load.engine.q.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.q` v1 @kind this, `com.bumptech.glide.load.engine.f` v2 @kind object, `com.bumptech.glide.load.engine.e$a` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/q;.<init>:(Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/e$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L225f48.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L225f4e.  v0:= -1I;
  #L225f50.  v1.`com.bumptech.glide.load.engine.q.d` @type ^`int` := v0;
  #L225f54.  v1.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` := v2 @kind object;
  #L225f58.  v1.`com.bumptech.glide.load.engine.q.a` @type ^`com.bumptech.glide.load.engine.e$a` := v3 @kind object;
  #L225f5c.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.q` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/q;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L225cb4.  v0:= v2.`com.bumptech.glide.load.engine.q.g` @type ^`int`;
  #L225cb8.  v1:= v2.`com.bumptech.glide.load.engine.q.f` @type ^`java.util.List` @kind object;
  #L225cbc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L225cc2.  v1:= temp;
  #L225cc4.  if v0 >= v1 then goto L225ccc;
  #L225cc8.  v0:= 1I;
  #L225cca.  goto L225cce;
  #L225ccc.  v0:= 0I;
  #L225cce.  return v0;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.q` v14 @kind this) @signature `Lcom/bumptech/glide/load/engine/q;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L225ce0.  v0:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225ce4.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/load/engine/f;.c:()Ljava/util/List;` @kind virtual;
  #L225cea.  v0:= temp @kind object;
  #L225cec.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L225cf2.  v1:= temp;
  #L225cf4.  v2:= 0I;
  #L225cf6.  if v1 == 0 then goto L225cfc;
  #L225cfa.  return v2;
  #L225cfc.  v1:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225d00.  call temp:= `m`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.m:()Ljava/util/List;` @kind virtual;
  #L225d06.  v1:= temp @kind object;
  #L225d08.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L225d0e.  v3:= temp;
  #L225d10.  if v3 == 0 then goto L225d88;
  #L225d14.  v0:= constclass @type ^`java.io.File` @kind object;
  #L225d18.  v1:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225d1c.  call temp:= `q`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.q:()Ljava/lang/Class;` @kind virtual;
  #L225d22.  v1:= temp @kind object;
  #L225d24.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L225d2a.  v0:= temp;
  #L225d2c.  if v0 == 0 then goto L225d32;
  #L225d30.  return v2;
  #L225d32.  v0:= new `java.lang.IllegalStateException`;
  #L225d36.  v1:= new `java.lang.StringBuilder`;
  #L225d3a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L225d40.  v2:= "Failed to find any load path from " @kind object;
  #L225d44.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225d4a.  v2:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225d4e.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/load/engine/f;.i:()Ljava/lang/Class;` @kind virtual;
  #L225d54.  v2:= temp @kind object;
  #L225d56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225d5c.  v2:= " to " @kind object;
  #L225d60.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225d66.  v2:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225d6a.  call temp:= `q`(v2) @signature `Lcom/bumptech/glide/load/engine/f;.q:()Ljava/lang/Class;` @kind virtual;
  #L225d70.  v2:= temp @kind object;
  #L225d72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225d78.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L225d7e.  v1:= temp @kind object;
  #L225d80.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L225d86.  throw v0;
  #L225d88.  v3:= v14.`com.bumptech.glide.load.engine.q.f` @type ^`java.util.List` @kind object;
  #L225d8c.  v4:= 1I;
  #L225d8e.  if v3 == 0 then goto L225e4e;
  #L225d92.  call temp:= `b`(v14) @signature `Lcom/bumptech/glide/load/engine/q;.b:()Z` @kind direct;
  #L225d98.  v3:= temp;
  #L225d9a.  if v3 != 0 then goto L225da0;
  #L225d9e.  goto L225e4e;
  #L225da0.  v0:= 0I;
  #L225da2.  v14.`com.bumptech.glide.load.engine.q.h` @type ^`x0.n$a` := v0 @kind object;
  #L225da6.  if v2 != 0 then goto L225e4c;
  #L225daa.  call temp:= `b`(v14) @signature `Lcom/bumptech/glide/load/engine/q;.b:()Z` @kind direct;
  #L225db0.  v0:= temp;
  #L225db2.  if v0 == 0 then goto L225e4c;
  #L225db6.  v0:= v14.`com.bumptech.glide.load.engine.q.f` @type ^`java.util.List` @kind object;
  #L225dba.  v1:= v14.`com.bumptech.glide.load.engine.q.g` @type ^`int`;
  #L225dbe.  v3:= v1 + 1;
  #L225dc2.  v14.`com.bumptech.glide.load.engine.q.g` @type ^`int` := v3;
  #L225dc6.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L225dcc.  v0:= temp @kind object;
  #L225dce.  v0:= (`x0.n`) v0 @kind object;
  #L225dd2.  v1:= v14.`com.bumptech.glide.load.engine.q.i` @type ^`java.io.File` @kind object;
  #L225dd6.  v3:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225dda.  call temp:= `s`(v3) @signature `Lcom/bumptech/glide/load/engine/f;.s:()I` @kind virtual;
  #L225de0.  v3:= temp;
  #L225de2.  v5:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225de6.  call temp:= `f`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.f:()I` @kind virtual;
  #L225dec.  v5:= temp;
  #L225dee.  v6:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225df2.  call temp:= `k`(v6) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lq0/d;` @kind virtual;
  #L225df8.  v6:= temp @kind object;
  #L225dfa.  call temp:= `a`(v0, v1, v3, v5, v6) @signature `Lx0/n;.a:(Ljava/lang/Object;IILq0/d;)Lx0/n$a;` @kind interface;
  #L225e00.  v0:= temp @kind object;
  #L225e02.  v14.`com.bumptech.glide.load.engine.q.h` @type ^`x0.n$a` := v0 @kind object;
  #L225e06.  v0:= v14.`com.bumptech.glide.load.engine.q.h` @type ^`x0.n$a` @kind object;
  #L225e0a.  if v0 == 0 then goto L225da6;
  #L225e0e.  v0:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225e12.  v1:= v14.`com.bumptech.glide.load.engine.q.h` @type ^`x0.n$a` @kind object;
  #L225e16.  v1:= v1.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L225e1a.  call temp:= `a`(v1) @signature `Lr0/d;.a:()Ljava/lang/Class;` @kind interface;
  #L225e20.  v1:= temp @kind object;
  #L225e22.  call temp:= `t`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/f;.t:(Ljava/lang/Class;)Z` @kind virtual;
  #L225e28.  v0:= temp;
  #L225e2a.  if v0 == 0 then goto L225da6;
  #L225e2e.  v0:= v14.`com.bumptech.glide.load.engine.q.h` @type ^`x0.n$a` @kind object;
  #L225e32.  v0:= v0.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L225e36.  v1:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225e3a.  call temp:= `l`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.l:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L225e40.  v1:= temp @kind object;
  #L225e42.  call `e`(v0, v1, v14) @signature `Lr0/d;.e:(Lcom/bumptech/glide/Priority;Lr0/d$a;)V` @kind interface;
  #L225e48.  v2:= 1I;
  #L225e4a.  goto L225da6;
  #L225e4c.  return v2;
  #L225e4e.  v3:= v14.`com.bumptech.glide.load.engine.q.d` @type ^`int`;
  #L225e52.  v3:= v3 + v4 @kind int;
  #L225e54.  v14.`com.bumptech.glide.load.engine.q.d` @type ^`int` := v3;
  #L225e58.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L225e5e.  v5:= temp;
  #L225e60.  if v3 < v5 then goto L225e80;
  #L225e64.  v3:= v14.`com.bumptech.glide.load.engine.q.c` @type ^`int`;
  #L225e68.  v3:= v3 + v4 @kind int;
  #L225e6a.  v14.`com.bumptech.glide.load.engine.q.c` @type ^`int` := v3;
  #L225e6e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L225e74.  v4:= temp;
  #L225e76.  if v3 < v4 then goto L225e7c;
  #L225e7a.  return v2;
  #L225e7c.  v14.`com.bumptech.glide.load.engine.q.d` @type ^`int` := v2;
  #L225e80.  v3:= v14.`com.bumptech.glide.load.engine.q.c` @type ^`int`;
  #L225e84.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L225e8a.  v3:= temp @kind object;
  #L225e8c.  v3:= (`q0.b`) v3 @kind object;
  #L225e90.  v4:= v14.`com.bumptech.glide.load.engine.q.d` @type ^`int`;
  #L225e94.  call temp:= `get`(v1, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L225e9a.  v4:= temp @kind object;
  #L225e9c.  v11:= v4 @kind object;
  #L225e9e.  v11:= (`java.lang.Class`) v11 @kind object;
  #L225ea2.  v4:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225ea6.  call temp:= `r`(v4, v11) @signature `Lcom/bumptech/glide/load/engine/f;.r:(Ljava/lang/Class;)Lq0/g;` @kind virtual;
  #L225eac.  v10:= temp @kind object;
  #L225eae.  v13:= new `com.bumptech.glide.load.engine.r`;
  #L225eb2.  v4:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225eb6.  call temp:= `b`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.b:()Lu0/b;` @kind virtual;
  #L225ebc.  v5:= temp @kind object;
  #L225ebe.  v4:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225ec2.  call temp:= `o`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.o:()Lq0/b;` @kind virtual;
  #L225ec8.  v7:= temp @kind object;
  #L225eca.  v4:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225ece.  call temp:= `s`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.s:()I` @kind virtual;
  #L225ed4.  v8:= temp;
  #L225ed6.  v4:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225eda.  call temp:= `f`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.f:()I` @kind virtual;
  #L225ee0.  v9:= temp;
  #L225ee2.  v4:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225ee6.  call temp:= `k`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lq0/d;` @kind virtual;
  #L225eec.  v12:= temp @kind object;
  #L225eee.  v4:= v13 @kind object;
  #L225ef0.  v6:= v3 @kind object;
  #L225ef2.  call `<init>`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lcom/bumptech/glide/load/engine/r;.<init>:(Lu0/b;Lq0/b;Lq0/b;IILq0/g;Ljava/lang/Class;Lq0/d;)V` @kind direct;
  #L225ef8.  v14.`com.bumptech.glide.load.engine.q.j` @type ^`com.bumptech.glide.load.engine.r` := v13 @kind object;
  #L225efc.  v4:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225f00.  call temp:= `d`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.d:()Lv0/a;` @kind virtual;
  #L225f06.  v4:= temp @kind object;
  #L225f08.  v5:= v14.`com.bumptech.glide.load.engine.q.j` @type ^`com.bumptech.glide.load.engine.r` @kind object;
  #L225f0c.  call temp:= `a`(v4, v5) @signature `Lv0/a;.a:(Lq0/b;)Ljava/io/File;` @kind interface;
  #L225f12.  v4:= temp @kind object;
  #L225f14.  v14.`com.bumptech.glide.load.engine.q.i` @type ^`java.io.File` := v4 @kind object;
  #L225f18.  if v4 == 0 then goto L225d88;
  #L225f1c.  v14.`com.bumptech.glide.load.engine.q.e` @type ^`q0.b` := v3 @kind object;
  #L225f20.  v3:= v14.`com.bumptech.glide.load.engine.q.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L225f24.  call temp:= `j`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/f;.j:(Ljava/io/File;)Ljava/util/List;` @kind virtual;
  #L225f2a.  v3:= temp @kind object;
  #L225f2c.  v14.`com.bumptech.glide.load.engine.q.f` @type ^`java.util.List` := v3 @kind object;
  #L225f30.  v14.`com.bumptech.glide.load.engine.q.g` @type ^`int` := v2;
  #L225f34.  goto L225d88;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.q` v4 @kind this, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/q;.c:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L225fc8.  v0:= v4.`com.bumptech.glide.load.engine.q.a` @type ^`com.bumptech.glide.load.engine.e$a` @kind object;
  #L225fcc.  v1:= v4.`com.bumptech.glide.load.engine.q.j` @type ^`com.bumptech.glide.load.engine.r` @kind object;
  #L225fd0.  v2:= v4.`com.bumptech.glide.load.engine.q.h` @type ^`x0.n$a` @kind object;
  #L225fd4.  v2:= v2.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L225fd8.  v3:= `@@com.bumptech.glide.load.DataSource.d` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L225fdc.  call `c`(v0, v1, v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/e$a;.c:(Lq0/b;Ljava/lang/Exception;Lr0/d;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L225fe2.  return @kind void;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.q` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/q;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L225f70.  v0:= v1.`com.bumptech.glide.load.engine.q.h` @type ^`x0.n$a` @kind object;
  #L225f74.  if v0 == 0 then goto L225f82;
  #L225f78.  v0:= v0.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L225f7c.  call `cancel`(v0) @signature `Lr0/d;.cancel:()V` @kind interface;
  #L225f82.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.load.engine.q` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/q;.f:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L225f94.  v0:= v6.`com.bumptech.glide.load.engine.q.a` @type ^`com.bumptech.glide.load.engine.e$a` @kind object;
  #L225f98.  v1:= v6.`com.bumptech.glide.load.engine.q.e` @type ^`q0.b` @kind object;
  #L225f9c.  v2:= v6.`com.bumptech.glide.load.engine.q.h` @type ^`x0.n$a` @kind object;
  #L225fa0.  v3:= v2.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L225fa4.  v4:= `@@com.bumptech.glide.load.DataSource.d` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L225fa8.  v5:= v6.`com.bumptech.glide.load.engine.q.j` @type ^`com.bumptech.glide.load.engine.r` @kind object;
  #L225fac.  v2:= v7 @kind object;
  #L225fae.  call `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/e$a;.b:(Lq0/b;Ljava/lang/Object;Lr0/d;Lcom/bumptech/glide/load/DataSource;Lq0/b;)V` @kind interface;
  #L225fb4.  return @kind void;
}
