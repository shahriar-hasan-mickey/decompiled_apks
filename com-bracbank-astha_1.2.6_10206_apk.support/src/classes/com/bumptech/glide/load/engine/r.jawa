record `com.bumptech.glide.load.engine.r` @kind class @AccessFlag FINAL extends `q0.b` @kind interface {
  `u0.b` `com.bumptech.glide.load.engine.r.b` @AccessFlag PRIVATE_FINAL;
  `q0.b` `com.bumptech.glide.load.engine.r.c` @AccessFlag PRIVATE_FINAL;
  `q0.b` `com.bumptech.glide.load.engine.r.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.r.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.r.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.load.engine.r.g` @AccessFlag PRIVATE_FINAL;
  `q0.d` `com.bumptech.glide.load.engine.r.h` @AccessFlag PRIVATE_FINAL;
  `q0.g` `com.bumptech.glide.load.engine.r.i` @AccessFlag PRIVATE_FINAL;
}
global `n1.g` `@@com.bumptech.glide.load.engine.r.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L226224.  v0:= new `n1.g`;
  #L226228.  v1:= 50L;
  #L22622c.  call `<init>`(v0, v1) @signature `Ln1/g;.<init>:(J)V` @kind direct;
  #L226232.  `@@com.bumptech.glide.load.engine.r.j` @type ^`n1.g` := v0 @kind object;
  #L226236.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.r` v0 @kind this, `u0.b` v1 @kind object, `q0.b` v2 @kind object, `q0.b` v3 @kind object, `int` v4 , `int` v5 , `q0.g` v6 @kind object, `java.lang.Class` v7 @kind object, `q0.d` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.<init>:(Lu0/b;Lq0/b;Lq0/b;IILq0/g;Ljava/lang/Class;Lq0/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L226248.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22624e.  v0.`com.bumptech.glide.load.engine.r.b` @type ^`u0.b` := v1 @kind object;
  #L226252.  v0.`com.bumptech.glide.load.engine.r.c` @type ^`q0.b` := v2 @kind object;
  #L226256.  v0.`com.bumptech.glide.load.engine.r.d` @type ^`q0.b` := v3 @kind object;
  #L22625a.  v0.`com.bumptech.glide.load.engine.r.e` @type ^`int` := v4;
  #L22625e.  v0.`com.bumptech.glide.load.engine.r.f` @type ^`int` := v5;
  #L226262.  v0.`com.bumptech.glide.load.engine.r.i` @type ^`q0.g` := v6 @kind object;
  #L226266.  v0.`com.bumptech.glide.load.engine.r.g` @type ^`java.lang.Class` := v7 @kind object;
  #L22626a.  v0.`com.bumptech.glide.load.engine.r.h` @type ^`q0.d` := v8 @kind object;
  #L22626e.  return @kind void;
}
procedure `byte`[] `c`(`com.bumptech.glide.load.engine.r` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/r;.c:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L226094.  v0:= `@@com.bumptech.glide.load.engine.r.j` @type ^`n1.g` @kind object;
  #L226098.  v1:= v3.`com.bumptech.glide.load.engine.r.g` @type ^`java.lang.Class` @kind object;
  #L22609c.  call temp:= `g`(v0, v1) @signature `Ln1/g;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2260a2.  v1:= temp @kind object;
  #L2260a4.  v1:= (`byte`[]) v1 @kind object;
  #L2260a8.  if v1 != 0 then goto L2260ce;
  #L2260ac.  v1:= v3.`com.bumptech.glide.load.engine.r.g` @type ^`java.lang.Class` @kind object;
  #L2260b0.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2260b6.  v1:= temp @kind object;
  #L2260b8.  v2:= `@@q0.b.a` @type ^`java.nio.charset.Charset` @kind object;
  #L2260bc.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L2260c2.  v1:= temp @kind object;
  #L2260c4.  v2:= v3.`com.bumptech.glide.load.engine.r.g` @type ^`java.lang.Class` @kind object;
  #L2260c8.  call temp:= `k`(v0, v2, v1) @signature `Ln1/g;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2260ce.  return v1 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.r` v3 @kind this, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.a:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L226280.  v0:= v3.`com.bumptech.glide.load.engine.r.b` @type ^`u0.b` @kind object;
  #L226284.  v1:= constclass @type ^`byte`[] @kind object;
  #L226288.  v2:= 8I;
  #L22628c.  call temp:= `c`(v0, v2, v1) @signature `Lu0/b;.c:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L226292.  v0:= temp @kind object;
  #L226294.  v0:= (`byte`[]) v0 @kind object;
  #L226298.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L22629e.  v1:= temp @kind object;
  #L2262a0.  v2:= v3.`com.bumptech.glide.load.engine.r.e` @type ^`int`;
  #L2262a4.  call temp:= `putInt`(v1, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2262aa.  v1:= temp @kind object;
  #L2262ac.  v2:= v3.`com.bumptech.glide.load.engine.r.f` @type ^`int`;
  #L2262b0.  call temp:= `putInt`(v1, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2262b6.  v1:= temp @kind object;
  #L2262b8.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L2262be.  v1:= v3.`com.bumptech.glide.load.engine.r.d` @type ^`q0.b` @kind object;
  #L2262c2.  call `a`(v1, v4) @signature `Lq0/b;.a:(Ljava/security/MessageDigest;)V` @kind interface;
  #L2262c8.  v1:= v3.`com.bumptech.glide.load.engine.r.c` @type ^`q0.b` @kind object;
  #L2262cc.  call `a`(v1, v4) @signature `Lq0/b;.a:(Ljava/security/MessageDigest;)V` @kind interface;
  #L2262d2.  call `update`(v4, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2262d8.  v1:= v3.`com.bumptech.glide.load.engine.r.i` @type ^`q0.g` @kind object;
  #L2262dc.  if v1 == 0 then goto L2262e6;
  #L2262e0.  call `a`(v1, v4) @signature `Lq0/b;.a:(Ljava/security/MessageDigest;)V` @kind interface;
  #L2262e6.  v1:= v3.`com.bumptech.glide.load.engine.r.h` @type ^`q0.d` @kind object;
  #L2262ea.  call `a`(v1, v4) @signature `Lq0/d;.a:(Ljava/security/MessageDigest;)V` @kind virtual;
  #L2262f0.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/load/engine/r;.c:()[B` @kind direct;
  #L2262f6.  v1:= temp @kind object;
  #L2262f8.  call `update`(v4, v1) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2262fe.  v4:= v3.`com.bumptech.glide.load.engine.r.b` @type ^`u0.b` @kind object;
  #L226302.  call `put`(v4, v0) @signature `Lu0/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L226308.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.r` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L225ff4.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.r` @kind boolean;
  #L225ff8.  v1:= 0I;
  #L225ffa.  if v0 == 0 then goto L226080;
  #L225ffe.  v4:= (`com.bumptech.glide.load.engine.r`) v4 @kind object;
  #L226002.  v0:= v3.`com.bumptech.glide.load.engine.r.f` @type ^`int`;
  #L226006.  v2:= v4.`com.bumptech.glide.load.engine.r.f` @type ^`int`;
  #L22600a.  if v0 != v2 then goto L226080;
  #L22600e.  v0:= v3.`com.bumptech.glide.load.engine.r.e` @type ^`int`;
  #L226012.  v2:= v4.`com.bumptech.glide.load.engine.r.e` @type ^`int`;
  #L226016.  if v0 != v2 then goto L226080;
  #L22601a.  v0:= v3.`com.bumptech.glide.load.engine.r.i` @type ^`q0.g` @kind object;
  #L22601e.  v2:= v4.`com.bumptech.glide.load.engine.r.i` @type ^`q0.g` @kind object;
  #L226022.  call temp:= `c`(v0, v2) @signature `Ln1/k;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L226028.  v0:= temp;
  #L22602a.  if v0 == 0 then goto L226080;
  #L22602e.  v0:= v3.`com.bumptech.glide.load.engine.r.g` @type ^`java.lang.Class` @kind object;
  #L226032.  v2:= v4.`com.bumptech.glide.load.engine.r.g` @type ^`java.lang.Class` @kind object;
  #L226036.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22603c.  v0:= temp;
  #L22603e.  if v0 == 0 then goto L226080;
  #L226042.  v0:= v3.`com.bumptech.glide.load.engine.r.c` @type ^`q0.b` @kind object;
  #L226046.  v2:= v4.`com.bumptech.glide.load.engine.r.c` @type ^`q0.b` @kind object;
  #L22604a.  call temp:= `equals`(v0, v2) @signature `Lq0/b;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L226050.  v0:= temp;
  #L226052.  if v0 == 0 then goto L226080;
  #L226056.  v0:= v3.`com.bumptech.glide.load.engine.r.d` @type ^`q0.b` @kind object;
  #L22605a.  v2:= v4.`com.bumptech.glide.load.engine.r.d` @type ^`q0.b` @kind object;
  #L22605e.  call temp:= `equals`(v0, v2) @signature `Lq0/b;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L226064.  v0:= temp;
  #L226066.  if v0 == 0 then goto L226080;
  #L22606a.  v0:= v3.`com.bumptech.glide.load.engine.r.h` @type ^`q0.d` @kind object;
  #L22606e.  v4:= v4.`com.bumptech.glide.load.engine.r.h` @type ^`q0.d` @kind object;
  #L226072.  call temp:= `equals`(v0, v4) @signature `Lq0/d;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L226078.  v4:= temp;
  #L22607a.  if v4 == 0 then goto L226080;
  #L22607e.  v1:= 1I;
  #L226080.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.r` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2260e0.  v0:= v2.`com.bumptech.glide.load.engine.r.c` @type ^`q0.b` @kind object;
  #L2260e4.  call temp:= `hashCode`(v0) @signature `Lq0/b;.hashCode:()I` @kind interface;
  #L2260ea.  v0:= temp;
  #L2260ec.  v0:= v0 * 31;
  #L2260f0.  v1:= v2.`com.bumptech.glide.load.engine.r.d` @type ^`q0.b` @kind object;
  #L2260f4.  call temp:= `hashCode`(v1) @signature `Lq0/b;.hashCode:()I` @kind interface;
  #L2260fa.  v1:= temp;
  #L2260fc.  v0:= v0 + v1 @kind int;
  #L2260fe.  v0:= v0 * 31;
  #L226102.  v1:= v2.`com.bumptech.glide.load.engine.r.e` @type ^`int`;
  #L226106.  v0:= v0 + v1 @kind int;
  #L226108.  v0:= v0 * 31;
  #L22610c.  v1:= v2.`com.bumptech.glide.load.engine.r.f` @type ^`int`;
  #L226110.  v0:= v0 + v1 @kind int;
  #L226112.  v1:= v2.`com.bumptech.glide.load.engine.r.i` @type ^`q0.g` @kind object;
  #L226116.  if v1 == 0 then goto L226128;
  #L22611a.  v0:= v0 * 31;
  #L22611e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L226124.  v1:= temp;
  #L226126.  v0:= v0 + v1 @kind int;
  #L226128.  v0:= v0 * 31;
  #L22612c.  v1:= v2.`com.bumptech.glide.load.engine.r.g` @type ^`java.lang.Class` @kind object;
  #L226130.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L226136.  v1:= temp;
  #L226138.  v0:= v0 + v1 @kind int;
  #L22613a.  v0:= v0 * 31;
  #L22613e.  v1:= v2.`com.bumptech.glide.load.engine.r.h` @type ^`q0.d` @kind object;
  #L226142.  call temp:= `hashCode`(v1) @signature `Lq0/d;.hashCode:()I` @kind virtual;
  #L226148.  v1:= temp;
  #L22614a.  v0:= v0 + v1 @kind int;
  #L22614c.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.r` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L226160.  v0:= new `java.lang.StringBuilder`;
  #L226164.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22616a.  v1:= "ResourceCacheKey{sourceKey=" @kind object;
  #L22616e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226174.  v1:= v2.`com.bumptech.glide.load.engine.r.c` @type ^`q0.b` @kind object;
  #L226178.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22617e.  v1:= ", signature=" @kind object;
  #L226182.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226188.  v1:= v2.`com.bumptech.glide.load.engine.r.d` @type ^`q0.b` @kind object;
  #L22618c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226192.  v1:= ", width=" @kind object;
  #L226196.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22619c.  v1:= v2.`com.bumptech.glide.load.engine.r.e` @type ^`int`;
  #L2261a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2261a6.  v1:= ", height=" @kind object;
  #L2261aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2261b0.  v1:= v2.`com.bumptech.glide.load.engine.r.f` @type ^`int`;
  #L2261b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2261ba.  v1:= ", decodedResourceClass=" @kind object;
  #L2261be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2261c4.  v1:= v2.`com.bumptech.glide.load.engine.r.g` @type ^`java.lang.Class` @kind object;
  #L2261c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2261ce.  v1:= ", transformation='" @kind object;
  #L2261d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2261d8.  v1:= v2.`com.bumptech.glide.load.engine.r.i` @type ^`q0.g` @kind object;
  #L2261dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2261e2.  v1:= 39I;
  #L2261e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2261ec.  v1:= ", options=" @kind object;
  #L2261f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2261f6.  v1:= v2.`com.bumptech.glide.load.engine.r.h` @type ^`q0.d` @kind object;
  #L2261fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226200.  v1:= 125I;
  #L226204.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22620a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L226210.  v0:= temp @kind object;
  #L226212.  return v0 @kind object;
}
