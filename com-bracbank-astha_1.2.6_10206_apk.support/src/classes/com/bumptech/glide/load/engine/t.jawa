record `com.bumptech.glide.load.engine.t` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.e` @kind interface, `com.bumptech.glide.load.engine.e$a` @kind interface {
  `com.bumptech.glide.load.engine.f` `com.bumptech.glide.load.engine.t.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.e$a` `com.bumptech.glide.load.engine.t.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.t.c` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.b` `com.bumptech.glide.load.engine.t.d` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.load.engine.t.e` @AccessFlag PRIVATE;
  `x0.n$a` `com.bumptech.glide.load.engine.t.f` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.load.engine.c` `com.bumptech.glide.load.engine.t.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.t` v0 @kind this, `com.bumptech.glide.load.engine.f` v1 @kind object, `com.bumptech.glide.load.engine.e$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.<init>:(Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/e$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2265b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2265be.  v0.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` := v1 @kind object;
  #L2265c2.  v0.`com.bumptech.glide.load.engine.t.b` @type ^`com.bumptech.glide.load.engine.e$a` := v2 @kind object;
  #L2265c6.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.t` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.e:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2265d8.  v0:= "SourceGenerator" @kind object;
  #L2265dc.  call temp:= `b`() @signature `Ln1/f;.b:()J` @kind static;
  #L2265e2.  v1:= temp @kind wide;
  #L2265e4.  v3:= v8.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L2265e8.  call temp:= `p`(v3, v9) @signature `Lcom/bumptech/glide/load/engine/f;.p:(Ljava/lang/Object;)Lq0/a;` @kind virtual;
  #L2265ee.  v3:= temp @kind object;
  #L2265f0.  v4:= new `com.bumptech.glide.load.engine.d`;
  #L2265f4.  v5:= v8.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L2265f8.  call temp:= `k`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lq0/d;` @kind virtual;
  #L2265fe.  v5:= temp @kind object;
  #L226600.  call `<init>`(v4, v3, v9, v5) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lq0/a;Ljava/lang/Object;Lq0/d;)V` @kind direct;
  #L226606.  v5:= new `com.bumptech.glide.load.engine.c`;
  #L22660a.  v6:= v8.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L22660e.  v6:= v6.`x0.n$a.a` @type ^`q0.b` @kind object;
  #L226612.  v7:= v8.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L226616.  call temp:= `o`(v7) @signature `Lcom/bumptech/glide/load/engine/f;.o:()Lq0/b;` @kind virtual;
  #L22661c.  v7:= temp @kind object;
  #L22661e.  call `<init>`(v5, v6, v7) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Lq0/b;Lq0/b;)V` @kind direct;
  #L226624.  v8.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.c` := v5 @kind object;
  #L226628.  v5:= v8.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L22662c.  call temp:= `d`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.d:()Lv0/a;` @kind virtual;
  #L226632.  v5:= temp @kind object;
  #L226634.  v6:= v8.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.c` @kind object;
  #L226638.  call `b`(v5, v6, v4) @signature `Lv0/a;.b:(Lq0/b;Lv0/a$b;)V` @kind interface;
  #L22663e.  v4:= 2I;
  #L226640.  call temp:= `isLoggable`(v0, v4) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L226646.  v4:= temp;
  #L226648.  if v4 == 0 then goto L2266b0;
  #L22664c.  v4:= new `java.lang.StringBuilder`;
  #L226650.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L226656.  v5:= "Finished encoding source to cache, key: " @kind object;
  #L22665a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226660.  v5:= v8.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.c` @kind object;
  #L226664.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22666a.  v5:= ", data: " @kind object;
  #L22666e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226674.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22667a.  v9:= ", encoder: " @kind object;
  #L22667e.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226684.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22668a.  v9:= ", duration: " @kind object;
  #L22668e.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226694.  call temp:= `a`(v1) @signature `Ln1/f;.a:(J)D` @kind static;
  #L22669a.  v1:= temp @kind wide;
  #L22669c.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2266a2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2266a8.  v9:= temp @kind object;
  #L2266aa.  call temp:= `v`(v0, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2266b0.  v9:= v8.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L2266b4.  v9:= v9.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L2266b8.  call `b`(v9) @signature `Lr0/d;.b:()V` @kind interface;
  #L2266be.  v9:= new `com.bumptech.glide.load.engine.b`;
  #L2266c2.  v0:= v8.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L2266c6.  v0:= v0.`x0.n$a.a` @type ^`q0.b` @kind object;
  #L2266ca.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2266d0.  v0:= temp @kind object;
  #L2266d2.  v1:= v8.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L2266d6.  call `<init>`(v9, v0, v1, v8) @signature `Lcom/bumptech/glide/load/engine/b;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/e$a;)V` @kind direct;
  #L2266dc.  v8.`com.bumptech.glide.load.engine.t.d` @type ^`com.bumptech.glide.load.engine.b` := v9 @kind object;
  #L2266e0.  return @kind void;
  #L2266e2.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2266e4.  v0:= v8.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L2266e8.  v0:= v0.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L2266ec.  call `b`(v0) @signature `Lr0/d;.b:()V` @kind interface;
  #L2266f2.  throw v9;
  catch `java.lang.Throwable` @[L2265e4..L2266b0] goto L2266e2;
}
procedure `boolean` `f`(`com.bumptech.glide.load.engine.t` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.f:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L226480.  v0:= v2.`com.bumptech.glide.load.engine.t.c` @type ^`int`;
  #L226484.  v1:= v2.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L226488.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @kind virtual;
  #L22648e.  v1:= temp @kind object;
  #L226490.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L226496.  v1:= temp;
  #L226498.  if v0 >= v1 then goto L2264a0;
  #L22649c.  v0:= 1I;
  #L22649e.  goto L2264a2;
  #L2264a0.  v0:= 0I;
  #L2264a2.  return v0;
}
procedure `void` `j`(`com.bumptech.glide.load.engine.t` v3 @kind this, `x0.n$a` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.j:(Lx0/n$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L226848.  v0:= v3.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L22684c.  v0:= v0.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L226850.  v1:= v3.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L226854.  call temp:= `l`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.l:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L22685a.  v1:= temp @kind object;
  #L22685c.  v2:= new `com.bumptech.glide.load.engine.t$a`;
  #L226860.  call `<init>`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/t$a;.<init>:(Lcom/bumptech/glide/load/engine/t;Lx0/n$a;)V` @kind direct;
  #L226866.  call `e`(v0, v1, v2) @signature `Lr0/d;.e:(Lcom/bumptech/glide/Priority;Lr0/d$a;)V` @kind interface;
  #L22686c.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.t` v5 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2264d8.  v0:= v5.`com.bumptech.glide.load.engine.t.e` @type ^`java.lang.Object` @kind object;
  #L2264dc.  v1:= 0I;
  #L2264de.  if v0 == 0 then goto L2264ec;
  #L2264e2.  v5.`com.bumptech.glide.load.engine.t.e` @type ^`java.lang.Object` := v1 @kind object;
  #L2264e6.  call `e`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/t;.e:(Ljava/lang/Object;)V` @kind direct;
  #L2264ec.  v0:= v5.`com.bumptech.glide.load.engine.t.d` @type ^`com.bumptech.glide.load.engine.b` @kind object;
  #L2264f0.  v2:= 1I;
  #L2264f2.  if v0 == 0 then goto L226504;
  #L2264f6.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/b;.a:()Z` @kind virtual;
  #L2264fc.  v0:= temp;
  #L2264fe.  if v0 == 0 then goto L226504;
  #L226502.  return v2;
  #L226504.  v5.`com.bumptech.glide.load.engine.t.d` @type ^`com.bumptech.glide.load.engine.b` := v1 @kind object;
  #L226508.  v5.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` := v1 @kind object;
  #L22650c.  v0:= 0I;
  #L22650e.  if v0 != 0 then goto L2265a4;
  #L226512.  call temp:= `f`(v5) @signature `Lcom/bumptech/glide/load/engine/t;.f:()Z` @kind direct;
  #L226518.  v1:= temp;
  #L22651a.  if v1 == 0 then goto L2265a4;
  #L22651e.  v1:= v5.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L226522.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @kind virtual;
  #L226528.  v1:= temp @kind object;
  #L22652a.  v3:= v5.`com.bumptech.glide.load.engine.t.c` @type ^`int`;
  #L22652e.  v4:= v3 + 1;
  #L226532.  v5.`com.bumptech.glide.load.engine.t.c` @type ^`int` := v4;
  #L226536.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22653c.  v1:= temp @kind object;
  #L22653e.  v1:= (`x0.n$a`) v1 @kind object;
  #L226542.  v5.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` := v1 @kind object;
  #L226546.  v1:= v5.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L22654a.  if v1 == 0 then goto L22650e;
  #L22654e.  v1:= v5.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L226552.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.e:()Lt0/a;` @kind virtual;
  #L226558.  v1:= temp @kind object;
  #L22655a.  v3:= v5.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L22655e.  v3:= v3.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L226562.  call temp:= `d`(v3) @signature `Lr0/d;.d:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L226568.  v3:= temp @kind object;
  #L22656a.  call temp:= `c`(v1, v3) @signature `Lt0/a;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @kind virtual;
  #L226570.  v1:= temp;
  #L226572.  if v1 != 0 then goto L226596;
  #L226576.  v1:= v5.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L22657a.  v3:= v5.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L22657e.  v3:= v3.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L226582.  call temp:= `a`(v3) @signature `Lr0/d;.a:()Ljava/lang/Class;` @kind interface;
  #L226588.  v3:= temp @kind object;
  #L22658a.  call temp:= `t`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/f;.t:(Ljava/lang/Class;)Z` @kind virtual;
  #L226590.  v1:= temp;
  #L226592.  if v1 == 0 then goto L22650e;
  #L226596.  v0:= v5.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L22659a.  call `j`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/t;.j:(Lx0/n$a;)V` @kind direct;
  #L2265a0.  v0:= 1I;
  #L2265a2.  goto L22650e;
  #L2265a4.  return v0;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.t` v6 @kind this, `q0.b` v7 @kind object, `java.lang.Object` v8 @kind object, `r0.d` v9 @kind object, `com.bumptech.glide.load.DataSource` v10 @kind object, `q0.b` v11 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.b:(Lq0/b;Ljava/lang/Object;Lr0/d;Lcom/bumptech/glide/load/DataSource;Lq0/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L226760.  v0:= v6.`com.bumptech.glide.load.engine.t.b` @type ^`com.bumptech.glide.load.engine.e$a` @kind object;
  #L226764.  v10:= v6.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L226768.  v10:= v10.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L22676c.  call temp:= `d`(v10) @signature `Lr0/d;.d:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L226772.  v4:= temp @kind object;
  #L226774.  v1:= v7 @kind object;
  #L226776.  v2:= v8 @kind object;
  #L226778.  v3:= v9 @kind object;
  #L22677a.  v5:= v7 @kind object;
  #L22677c.  call `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/e$a;.b:(Lq0/b;Ljava/lang/Object;Lr0/d;Lcom/bumptech/glide/load/DataSource;Lq0/b;)V` @kind interface;
  #L226782.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.t` v1 @kind this, `q0.b` v2 @kind object, `java.lang.Exception` v3 @kind object, `r0.d` v4 @kind object, `com.bumptech.glide.load.DataSource` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.c:(Lq0/b;Ljava/lang/Exception;Lr0/d;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226734.  v5:= v1.`com.bumptech.glide.load.engine.t.b` @type ^`com.bumptech.glide.load.engine.e$a` @kind object;
  #L226738.  v0:= v1.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L22673c.  v0:= v0.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L226740.  call temp:= `d`(v0) @signature `Lr0/d;.d:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L226746.  v0:= temp @kind object;
  #L226748.  call `c`(v5, v2, v3, v4, v0) @signature `Lcom/bumptech/glide/load/engine/e$a;.c:(Lq0/b;Ljava/lang/Exception;Lr0/d;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L22674e.  return @kind void;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226710.  v0:= v1.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L226714.  if v0 == 0 then goto L226722;
  #L226718.  v0:= v0.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L22671c.  call `cancel`(v0) @signature `Lr0/d;.cancel:()V` @kind interface;
  #L226722.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22682c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L226830.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L226836.  throw v0;
}
procedure `boolean` `g`(`com.bumptech.glide.load.engine.t` v1 @kind this, `x0.n$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.g:(Lx0/n$a;)Z` @AccessFlag  {
    temp;
    v0;

  #L2264b4.  v0:= v1.`com.bumptech.glide.load.engine.t.f` @type ^`x0.n$a` @kind object;
  #L2264b8.  if v0 == 0 then goto L2264c4;
  #L2264bc.  if v0 != v2 then goto L2264c4;
  #L2264c0.  v2:= 1I;
  #L2264c2.  goto L2264c6;
  #L2264c4.  v2:= 0I;
  #L2264c6.  return v2;
}
procedure `void` `h`(`com.bumptech.glide.load.engine.t` v6 @kind this, `x0.n$a` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.h:(Lx0/n$a;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L226794.  v0:= v6.`com.bumptech.glide.load.engine.t.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L226798.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/load/engine/f;.e:()Lt0/a;` @kind virtual;
  #L22679e.  v0:= temp @kind object;
  #L2267a0.  if v8 == 0 then goto L2267cc;
  #L2267a4.  v1:= v7.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L2267a8.  call temp:= `d`(v1) @signature `Lr0/d;.d:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L2267ae.  v1:= temp @kind object;
  #L2267b0.  call temp:= `c`(v0, v1) @signature `Lt0/a;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @kind virtual;
  #L2267b6.  v0:= temp;
  #L2267b8.  if v0 == 0 then goto L2267cc;
  #L2267bc.  v6.`com.bumptech.glide.load.engine.t.e` @type ^`java.lang.Object` := v8 @kind object;
  #L2267c0.  v7:= v6.`com.bumptech.glide.load.engine.t.b` @type ^`com.bumptech.glide.load.engine.e$a` @kind object;
  #L2267c4.  call `d`(v7) @signature `Lcom/bumptech/glide/load/engine/e$a;.d:()V` @kind interface;
  #L2267ca.  goto L2267ec;
  #L2267cc.  v0:= v6.`com.bumptech.glide.load.engine.t.b` @type ^`com.bumptech.glide.load.engine.e$a` @kind object;
  #L2267d0.  v1:= v7.`x0.n$a.a` @type ^`q0.b` @kind object;
  #L2267d4.  v3:= v7.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L2267d8.  call temp:= `d`(v3) @signature `Lr0/d;.d:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L2267de.  v4:= temp @kind object;
  #L2267e0.  v5:= v6.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.c` @kind object;
  #L2267e4.  v2:= v8 @kind object;
  #L2267e6.  call `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/e$a;.b:(Lq0/b;Ljava/lang/Object;Lr0/d;Lcom/bumptech/glide/load/DataSource;Lq0/b;)V` @kind interface;
  #L2267ec.  return @kind void;
}
procedure `void` `i`(`com.bumptech.glide.load.engine.t` v3 @kind this, `x0.n$a` v4 @kind object, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.i:(Lx0/n$a;Ljava/lang/Exception;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L226800.  v0:= v3.`com.bumptech.glide.load.engine.t.b` @type ^`com.bumptech.glide.load.engine.e$a` @kind object;
  #L226804.  v1:= v3.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.c` @kind object;
  #L226808.  v4:= v4.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L22680c.  call temp:= `d`(v4) @signature `Lr0/d;.d:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L226812.  v2:= temp @kind object;
  #L226814.  call `c`(v0, v1, v5, v4, v2) @signature `Lcom/bumptech/glide/load/engine/e$a;.c:(Lq0/b;Ljava/lang/Exception;Lr0/d;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L22681a.  return @kind void;
}
