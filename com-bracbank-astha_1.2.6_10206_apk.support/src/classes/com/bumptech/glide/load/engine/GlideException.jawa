record `com.bumptech.glide.load.engine.GlideException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Exception` @kind class {
  `java.util.List` `com.bumptech.glide.load.engine.GlideException.causes` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.load.engine.GlideException.dataClass` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.DataSource` `com.bumptech.glide.load.engine.GlideException.dataSource` @AccessFlag PRIVATE;
  `java.lang.String` `com.bumptech.glide.load.engine.GlideException.detailMessage` @AccessFlag PRIVATE;
  `java.lang.Exception` `com.bumptech.glide.load.engine.GlideException.exception` @AccessFlag PRIVATE;
  `q0.b` `com.bumptech.glide.load.engine.GlideException.key` @AccessFlag PRIVATE;
}
global `java.lang.StackTraceElement`[] `@@com.bumptech.glide.load.engine.GlideException.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.bumptech.glide.load.engine.GlideException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/GlideException;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L22543c.  v0:= 0I;
  #L22543e.  v0:= new `java.lang.StackTraceElement`[v0];
  #L225442.  `@@com.bumptech.glide.load.engine.GlideException.a` @type ^`java.lang.StackTraceElement`[] := v0 @kind object;
  #L225446.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L225458.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L22545e.  v0:= temp @kind object;
  #L225460.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L225466.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L225478.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L22547e.  v2:= temp @kind object;
  #L225480.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L225486.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L225498.  call `<init>`(v0) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L22549e.  v0.`com.bumptech.glide.load.engine.GlideException.detailMessage` @type ^`java.lang.String` := v1 @kind object;
  #L2254a2.  v1:= `@@com.bumptech.glide.load.engine.GlideException.a` @type ^`java.lang.StackTraceElement`[] @kind object;
  #L2254a6.  call `setStackTrace`(v0, v1) @signature `Ljava/lang/Exception;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L2254ac.  v0.`com.bumptech.glide.load.engine.GlideException.causes` @type ^`java.util.List` := v2 @kind object;
  #L2254b0.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this, `java.lang.Throwable` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.a:(Ljava/lang/Throwable;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2254c4.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.engine.GlideException` @kind boolean;
  #L2254c8.  if v0 == 0 then goto L225500;
  #L2254cc.  v2:= (`com.bumptech.glide.load.engine.GlideException`) v2 @kind object;
  #L2254d0.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/load/engine/GlideException;.e:()Ljava/util/List;` @kind virtual;
  #L2254d6.  v2:= temp @kind object;
  #L2254d8.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2254de.  v2:= temp @kind object;
  #L2254e0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2254e6.  v0:= temp;
  #L2254e8.  if v0 == 0 then goto L225506;
  #L2254ec.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2254f2.  v0:= temp @kind object;
  #L2254f4.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L2254f8.  call `a`(v1, v0, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException;.a:(Ljava/lang/Throwable;Ljava/util/List;)V` @kind direct;
  #L2254fe.  goto L2254e0;
  #L225500.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L225506.  return @kind void;
}
procedure `void` `b`(`java.util.List` v0 @kind object, `java.lang.Appendable` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.b:(Ljava/util/List;Ljava/lang/Appendable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L225518.  call `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.c:(Ljava/util/List;Ljava/lang/Appendable;)V` @kind static;
  #L22551e.  return @kind void;
  #L225520.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L225522.  v1:= new `java.lang.RuntimeException`;
  #L225526.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22552c.  throw v1;
  catch `java.io.IOException` @[L225518..L22551e] goto L225520;
}
procedure `void` `c`(`java.util.List` v5 @kind object, `java.lang.Appendable` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.c:(Ljava/util/List;Ljava/lang/Appendable;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L225550.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L225556.  v0:= temp;
  #L225558.  v1:= 0I;
  #L22555a.  if v1 >= v0 then goto L2255ce;
  #L22555e.  v2:= "Cause (" @kind object;
  #L225562.  call temp:= `append`(v6, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L225568.  v2:= temp @kind object;
  #L22556a.  v3:= v1 + 1;
  #L22556e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L225574.  v4:= temp @kind object;
  #L225576.  call temp:= `append`(v2, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L22557c.  v2:= temp @kind object;
  #L22557e.  v4:= " of " @kind object;
  #L225582.  call temp:= `append`(v2, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L225588.  v2:= temp @kind object;
  #L22558a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L225590.  v4:= temp @kind object;
  #L225592.  call temp:= `append`(v2, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L225598.  v2:= temp @kind object;
  #L22559a.  v4:= "): " @kind object;
  #L22559e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2255a4.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2255aa.  v1:= temp @kind object;
  #L2255ac.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2255b0.  v2:= instanceof @variable v1 @type ^`com.bumptech.glide.load.engine.GlideException` @kind boolean;
  #L2255b4.  if v2 == 0 then goto L2255c4;
  #L2255b8.  v1:= (`com.bumptech.glide.load.engine.GlideException`) v1 @kind object;
  #L2255bc.  call `h`(v1, v6) @signature `Lcom/bumptech/glide/load/engine/GlideException;.h:(Ljava/lang/Appendable;)V` @kind direct;
  #L2255c2.  goto L2255ca;
  #L2255c4.  call `d`(v1, v6) @signature `Lcom/bumptech/glide/load/engine/GlideException;.d:(Ljava/lang/Throwable;Ljava/lang/Appendable;)V` @kind static;
  #L2255ca.  v1:= v3;
  #L2255cc.  goto L22555a;
  #L2255ce.  return @kind void;
}
procedure `void` `d`(`java.lang.Throwable` v1 @kind object, `java.lang.Appendable` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.d:(Ljava/lang/Throwable;Ljava/lang/Appendable;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2255e0.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2255e6.  v0:= temp @kind object;
  #L2255e8.  call temp:= `toString`(v0) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L2255ee.  v0:= temp @kind object;
  #L2255f0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2255f6.  v2:= temp @kind object;
  #L2255f8.  v0:= ": " @kind object;
  #L2255fc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L225602.  v2:= temp @kind object;
  #L225604.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L22560a.  v0:= temp @kind object;
  #L22560c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L225612.  v2:= temp @kind object;
  #L225614.  v0:= 10I;
  #L225618.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L22561e.  return @kind void;
  #L225620.  v2:= new `java.lang.RuntimeException`;
  #L225624.  call `<init>`(v2, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22562a.  throw v2;
  catch `java.io.IOException` @[L2255e0..L22561e] goto L225620;
}
procedure `void` `h`(`com.bumptech.glide.load.engine.GlideException` v2 @kind this, `java.lang.Appendable` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.h:(Ljava/lang/Appendable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L225718.  call `d`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException;.d:(Ljava/lang/Throwable;Ljava/lang/Appendable;)V` @kind static;
  #L22571e.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/load/engine/GlideException;.e:()Ljava/util/List;` @kind virtual;
  #L225724.  v0:= temp @kind object;
  #L225726.  v1:= new `com.bumptech.glide.load.engine.GlideException$a`;
  #L22572a.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException$a;.<init>:(Ljava/lang/Appendable;)V` @kind direct;
  #L225730.  call `b`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.b:(Ljava/util/List;Ljava/lang/Appendable;)V` @kind static;
  #L225736.  return @kind void;
}
procedure `java.util.List` `e`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.e:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L225400.  v0:= v1.`com.bumptech.glide.load.engine.GlideException.causes` @type ^`java.util.List` @kind object;
  #L225404.  return v0 @kind object;
}
procedure `java.util.List` `f`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.f:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L225418.  v0:= new `java.util.ArrayList`;
  #L22541c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L225422.  call `a`(v1, v1, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.a:(Ljava/lang/Throwable;Ljava/util/List;)V` @kind direct;
  #L225428.  return v0 @kind object;
}
procedure `java.lang.Throwable` `fillInStackTrace`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.fillInStackTrace:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L2253ec.  return v0 @kind object;
}
procedure `void` `g`(`com.bumptech.glide.load.engine.GlideException` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.g:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22564c.  call temp:= `f`(v6) @signature `Lcom/bumptech/glide/load/engine/GlideException;.f:()Ljava/util/List;` @kind virtual;
  #L225652.  v0:= temp @kind object;
  #L225654.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22565a.  v1:= temp;
  #L22565c.  v2:= 0I;
  #L22565e.  if v2 >= v1 then goto L2256b8;
  #L225662.  v3:= new `java.lang.StringBuilder`;
  #L225666.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22566c.  v4:= "Root cause (" @kind object;
  #L225670.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225676.  v4:= v2 + 1;
  #L22567a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L225680.  v5:= " of " @kind object;
  #L225684.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22568a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L225690.  v5:= ")" @kind object;
  #L225694.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22569a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2256a0.  v3:= temp @kind object;
  #L2256a2.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2256a8.  v2:= temp @kind object;
  #L2256aa.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L2256ae.  call temp:= `i`(v7, v3, v2) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2256b4.  v2:= v4;
  #L2256b6.  goto L22565e;
  #L2256b8.  return @kind void;
}
procedure `java.lang.String` `getMessage`(`com.bumptech.glide.load.engine.GlideException` v5 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.getMessage:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L225250.  v0:= new `java.lang.StringBuilder`;
  #L225254.  v1:= 71I;
  #L225258.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L22525e.  v1:= v5.`com.bumptech.glide.load.engine.GlideException.detailMessage` @type ^`java.lang.String` @kind object;
  #L225262.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225268.  v1:= v5.`com.bumptech.glide.load.engine.GlideException.dataClass` @type ^`java.lang.Class` @kind object;
  #L22526c.  v2:= ", " @kind object;
  #L225270.  v3:= "" @kind object;
  #L225274.  if v1 == 0 then goto L22529c;
  #L225278.  v1:= new `java.lang.StringBuilder`;
  #L22527c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L225282.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225288.  v4:= v5.`com.bumptech.glide.load.engine.GlideException.dataClass` @type ^`java.lang.Class` @kind object;
  #L22528c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225292.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L225298.  v1:= temp @kind object;
  #L22529a.  goto L22529e;
  #L22529c.  v1:= v3 @kind object;
  #L22529e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2252a4.  v1:= v5.`com.bumptech.glide.load.engine.GlideException.dataSource` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L2252a8.  if v1 == 0 then goto L2252d0;
  #L2252ac.  v1:= new `java.lang.StringBuilder`;
  #L2252b0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2252b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2252bc.  v4:= v5.`com.bumptech.glide.load.engine.GlideException.dataSource` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L2252c0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2252c6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2252cc.  v1:= temp @kind object;
  #L2252ce.  goto L2252d2;
  #L2252d0.  v1:= v3 @kind object;
  #L2252d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2252d8.  v1:= v5.`com.bumptech.glide.load.engine.GlideException.key` @type ^`q0.b` @kind object;
  #L2252dc.  if v1 == 0 then goto L225302;
  #L2252e0.  v1:= new `java.lang.StringBuilder`;
  #L2252e4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2252ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2252f0.  v2:= v5.`com.bumptech.glide.load.engine.GlideException.key` @type ^`q0.b` @kind object;
  #L2252f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2252fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L225300.  v3:= temp @kind object;
  #L225302.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225308.  call temp:= `f`(v5) @signature `Lcom/bumptech/glide/load/engine/GlideException;.f:()Ljava/util/List;` @kind virtual;
  #L22530e.  v1:= temp @kind object;
  #L225310.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L225316.  v2:= temp;
  #L225318.  if v2 == 0 then goto L225326;
  #L22531c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L225322.  v0:= temp @kind object;
  #L225324.  return v0 @kind object;
  #L225326.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22532c.  v2:= temp;
  #L22532e.  v3:= 1I;
  #L225330.  if v2 != v3 then goto L225340;
  #L225334.  v2:= "\nThere was 1 cause:" @kind object;
  #L225338.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22533e.  goto L225362;
  #L225340.  v2:= "\nThere were " @kind object;
  #L225344.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22534a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L225350.  v2:= temp;
  #L225352.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L225358.  v2:= " causes:" @kind object;
  #L22535c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225362.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L225368.  v1:= temp @kind object;
  #L22536a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L225370.  v2:= temp;
  #L225372.  if v2 == 0 then goto L2253c6;
  #L225376.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L22537c.  v2:= temp @kind object;
  #L22537e.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L225382.  v3:= 10I;
  #L225386.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22538c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L225392.  v3:= temp @kind object;
  #L225394.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L22539a.  v3:= temp @kind object;
  #L22539c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2253a2.  v3:= 40I;
  #L2253a6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2253ac.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2253b2.  v2:= temp @kind object;
  #L2253b4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2253ba.  v2:= 41I;
  #L2253be.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2253c4.  goto L22536a;
  #L2253c6.  v1:= "\n call GlideException#logRootCauses(String) for more detail" @kind object;
  #L2253ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2253d0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2253d6.  v0:= temp @kind object;
  #L2253d8.  return v0 @kind object;
}
procedure `void` `i`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this, `q0.b` v2 @kind object, `com.bumptech.glide.load.DataSource` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.i:(Lq0/b;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag  {
    temp;
    v0;

  #L225748.  v0:= 0I;
  #L22574a.  call `j`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.j:(Lq0/b;Lcom/bumptech/glide/load/DataSource;Ljava/lang/Class;)V` @kind virtual;
  #L225750.  return @kind void;
}
procedure `void` `j`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `q0.b` v1 @kind object, `com.bumptech.glide.load.DataSource` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.j:(Lq0/b;Lcom/bumptech/glide/load/DataSource;Ljava/lang/Class;)V` @AccessFlag  {
    temp;

  #L225764.  v0.`com.bumptech.glide.load.engine.GlideException.key` @type ^`q0.b` := v1 @kind object;
  #L225768.  v0.`com.bumptech.glide.load.engine.GlideException.dataSource` @type ^`com.bumptech.glide.load.DataSource` := v2 @kind object;
  #L22576c.  v0.`com.bumptech.glide.load.engine.GlideException.dataClass` @type ^`java.lang.Class` := v3 @kind object;
  #L225770.  return @kind void;
}
procedure `void` `k`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.lang.Exception` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.k:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;

  #L225784.  v0.`com.bumptech.glide.load.engine.GlideException.exception` @type ^`java.lang.Exception` := v1 @kind object;
  #L225788.  return @kind void;
}
procedure `void` `printStackTrace`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.printStackTrace:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2256cc.  v0:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L2256d0.  call `printStackTrace`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.printStackTrace:(Ljava/io/PrintStream;)V` @kind virtual;
  #L2256d6.  return @kind void;
}
procedure `void` `printStackTrace`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.io.PrintStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.printStackTrace:(Ljava/io/PrintStream;)V` @AccessFlag PUBLIC {
    temp;

  #L2256e8.  call `h`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.h:(Ljava/lang/Appendable;)V` @kind direct;
  #L2256ee.  return @kind void;
}
procedure `void` `printStackTrace`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.io.PrintWriter` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.printStackTrace:(Ljava/io/PrintWriter;)V` @AccessFlag PUBLIC {
    temp;

  #L225700.  call `h`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.h:(Ljava/lang/Appendable;)V` @kind direct;
  #L225706.  return @kind void;
}
