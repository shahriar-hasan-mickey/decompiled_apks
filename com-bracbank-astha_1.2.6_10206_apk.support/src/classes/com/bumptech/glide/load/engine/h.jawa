record `com.bumptech.glide.load.engine.h` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.j` @kind interface, `v0.h$a` @kind interface, `com.bumptech.glide.load.engine.m$a` @kind interface {
  `com.bumptech.glide.load.engine.n` `com.bumptech.glide.load.engine.h.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.l` `com.bumptech.glide.load.engine.h.b` @AccessFlag PRIVATE_FINAL;
  `v0.h` `com.bumptech.glide.load.engine.h.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.h$b` `com.bumptech.glide.load.engine.h.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.s` `com.bumptech.glide.load.engine.h.e` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.h$c` `com.bumptech.glide.load.engine.h.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.h$a` `com.bumptech.glide.load.engine.h.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.a` `com.bumptech.glide.load.engine.h.h` @AccessFlag PRIVATE_FINAL;
}
global `boolean` `@@com.bumptech.glide.load.engine.h.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L224e7c.  v0:= "Engine" @kind object;
  #L224e80.  v1:= 2I;
  #L224e82.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L224e88.  v0:= temp;
  #L224e8a.  `@@com.bumptech.glide.load.engine.h.i` @type ^`boolean` := v0 @kind boolean;
  #L224e8e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h` v11 @kind this, `v0.h` v12 @kind object, `v0.a$a` v13 @kind object, `w0.a` v14 @kind object, `w0.a` v15 @kind object, `w0.a` v16 @kind object, `w0.a` v17 @kind object, `com.bumptech.glide.load.engine.n` v18 @kind object, `com.bumptech.glide.load.engine.l` v19 @kind object, `com.bumptech.glide.load.engine.a` v20 @kind object, `com.bumptech.glide.load.engine.h$b` v21 @kind object, `com.bumptech.glide.load.engine.h$a` v22 @kind object, `com.bumptech.glide.load.engine.s` v23 @kind object, `boolean` v24 ) @signature `Lcom/bumptech/glide/load/engine/h;.<init>:(Lv0/h;Lv0/a$a;Lw0/a;Lw0/a;Lw0/a;Lw0/a;Lcom/bumptech/glide/load/engine/n;Lcom/bumptech/glide/load/engine/l;Lcom/bumptech/glide/load/engine/a;Lcom/bumptech/glide/load/engine/h$b;Lcom/bumptech/glide/load/engine/h$a;Lcom/bumptech/glide/load/engine/s;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L224ee0.  v7:= v11 @kind object;
  #L224ee2.  v8:= v12 @kind object;
  #L224ee4.  call `<init>`(v11) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L224eea.  v7.`com.bumptech.glide.load.engine.h.c` @type ^`v0.h` := v8 @kind object;
  #L224eee.  v9:= new `com.bumptech.glide.load.engine.h$c`;
  #L224ef2.  v0:= v13 @kind object;
  #L224ef4.  call `<init>`(v9, v13) @signature `Lcom/bumptech/glide/load/engine/h$c;.<init>:(Lv0/a$a;)V` @kind direct;
  #L224efa.  v7.`com.bumptech.glide.load.engine.h.f` @type ^`com.bumptech.glide.load.engine.h$c` := v9 @kind object;
  #L224efe.  if v20 != 0 then goto L224f12;
  #L224f02.  v0:= new `com.bumptech.glide.load.engine.a`;
  #L224f06.  v1:= v24;
  #L224f0a.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/a;.<init>:(Z)V` @kind direct;
  #L224f10.  goto L224f16;
  #L224f12.  v0:= v20 @kind object;
  #L224f16.  v7.`com.bumptech.glide.load.engine.h.h` @type ^`com.bumptech.glide.load.engine.a` := v0 @kind object;
  #L224f1a.  call `f`(v0, v11) @signature `Lcom/bumptech/glide/load/engine/a;.f:(Lcom/bumptech/glide/load/engine/m$a;)V` @kind virtual;
  #L224f20.  if v19 != 0 then goto L224f30;
  #L224f24.  v0:= new `com.bumptech.glide.load.engine.l`;
  #L224f28.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/l;.<init>:()V` @kind direct;
  #L224f2e.  goto L224f34;
  #L224f30.  v0:= v19 @kind object;
  #L224f34.  v7.`com.bumptech.glide.load.engine.h.b` @type ^`com.bumptech.glide.load.engine.l` := v0 @kind object;
  #L224f38.  if v18 != 0 then goto L224f48;
  #L224f3c.  v0:= new `com.bumptech.glide.load.engine.n`;
  #L224f40.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/n;.<init>:()V` @kind direct;
  #L224f46.  goto L224f4c;
  #L224f48.  v0:= v18 @kind object;
  #L224f4c.  v7.`com.bumptech.glide.load.engine.h.a` @type ^`com.bumptech.glide.load.engine.n` := v0 @kind object;
  #L224f50.  if v21 != 0 then goto L224f72;
  #L224f54.  v10:= new `com.bumptech.glide.load.engine.h$b`;
  #L224f58.  v0:= v10 @kind object;
  #L224f5a.  v1:= v14 @kind object;
  #L224f5c.  v2:= v15 @kind object;
  #L224f5e.  v3:= v16 @kind object;
  #L224f62.  v4:= v17 @kind object;
  #L224f66.  v5:= v11 @kind object;
  #L224f68.  v6:= v11 @kind object;
  #L224f6a.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/h$b;.<init>:(Lw0/a;Lw0/a;Lw0/a;Lw0/a;Lcom/bumptech/glide/load/engine/j;Lcom/bumptech/glide/load/engine/m$a;)V` @kind direct;
  #L224f70.  goto L224f76;
  #L224f72.  v10:= v21 @kind object;
  #L224f76.  v7.`com.bumptech.glide.load.engine.h.d` @type ^`com.bumptech.glide.load.engine.h$b` := v10 @kind object;
  #L224f7a.  if v22 != 0 then goto L224f8a;
  #L224f7e.  v0:= new `com.bumptech.glide.load.engine.h$a`;
  #L224f82.  call `<init>`(v0, v9) @signature `Lcom/bumptech/glide/load/engine/h$a;.<init>:(Lcom/bumptech/glide/load/engine/DecodeJob$e;)V` @kind direct;
  #L224f88.  goto L224f8e;
  #L224f8a.  v0:= v22 @kind object;
  #L224f8e.  v7.`com.bumptech.glide.load.engine.h.g` @type ^`com.bumptech.glide.load.engine.h$a` := v0 @kind object;
  #L224f92.  if v23 != 0 then goto L224fa2;
  #L224f96.  v0:= new `com.bumptech.glide.load.engine.s`;
  #L224f9a.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/s;.<init>:()V` @kind direct;
  #L224fa0.  goto L224fa6;
  #L224fa2.  v0:= v23 @kind object;
  #L224fa6.  v7.`com.bumptech.glide.load.engine.h.e` @type ^`com.bumptech.glide.load.engine.s` := v0 @kind object;
  #L224faa.  call `e`(v12, v11) @signature `Lv0/h;.e:(Lv0/h$a;)V` @kind interface;
  #L224fb0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h` v14 @kind this, `v0.h` v15 @kind object, `v0.a$a` v16 @kind object, `w0.a` v17 @kind object, `w0.a` v18 @kind object, `w0.a` v19 @kind object, `w0.a` v20 @kind object, `boolean` v21 ) @signature `Lcom/bumptech/glide/load/engine/h;.<init>:(Lv0/h;Lv0/a$a;Lw0/a;Lw0/a;Lw0/a;Lw0/a;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L224ea0.  v7:= 0I;
  #L224ea2.  v8:= 0I;
  #L224ea4.  v9:= 0I;
  #L224ea6.  v10:= 0I;
  #L224ea8.  v11:= 0I;
  #L224eaa.  v12:= 0I;
  #L224eac.  v0:= v14 @kind object;
  #L224eae.  v1:= v15 @kind object;
  #L224eb0.  v2:= v16 @kind object;
  #L224eb4.  v3:= v17 @kind object;
  #L224eb8.  v4:= v18 @kind object;
  #L224ebc.  v5:= v19 @kind object;
  #L224ec0.  v6:= v20 @kind object;
  #L224ec4.  v13:= v21;
  #L224ec8.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/bumptech/glide/load/engine/h;.<init>:(Lv0/h;Lv0/a$a;Lw0/a;Lw0/a;Lw0/a;Lw0/a;Lcom/bumptech/glide/load/engine/n;Lcom/bumptech/glide/load/engine/l;Lcom/bumptech/glide/load/engine/a;Lcom/bumptech/glide/load/engine/h$b;Lcom/bumptech/glide/load/engine/h$a;Lcom/bumptech/glide/load/engine/s;Z)V` @kind direct;
  #L224ece.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.m` `e`(`com.bumptech.glide.load.engine.h` v7 @kind this, `q0.b` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.e:(Lq0/b;)Lcom/bumptech/glide/load/engine/m;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L224d7c.  v0:= v7.`com.bumptech.glide.load.engine.h.c` @type ^`v0.h` @kind object;
  #L224d80.  call temp:= `c`(v0, v8) @signature `Lv0/h;.c:(Lq0/b;)Lt0/c;` @kind interface;
  #L224d86.  v2:= temp @kind object;
  #L224d88.  if v2 != 0 then goto L224d90;
  #L224d8c.  v8:= 0I;
  #L224d8e.  goto L224db6;
  #L224d90.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.engine.m` @kind boolean;
  #L224d94.  if v0 == 0 then goto L224da0;
  #L224d98.  v8:= v2 @kind object;
  #L224d9a.  v8:= (`com.bumptech.glide.load.engine.m`) v8 @kind object;
  #L224d9e.  goto L224db6;
  #L224da0.  v0:= new `com.bumptech.glide.load.engine.m`;
  #L224da4.  v3:= 1I;
  #L224da6.  v4:= 1I;
  #L224da8.  v1:= v0 @kind object;
  #L224daa.  v5:= v8 @kind object;
  #L224dac.  v6:= v7 @kind object;
  #L224dae.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/m;.<init>:(Lt0/c;ZZLq0/b;Lcom/bumptech/glide/load/engine/m$a;)V` @kind direct;
  #L224db4.  v8:= v0 @kind object;
  #L224db6.  return v8 @kind object;
}
procedure `com.bumptech.glide.load.engine.m` `g`(`com.bumptech.glide.load.engine.h` v1 @kind this, `q0.b` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.g:(Lq0/b;)Lcom/bumptech/glide/load/engine/m;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L224dc8.  v0:= v1.`com.bumptech.glide.load.engine.h.h` @type ^`com.bumptech.glide.load.engine.a` @kind object;
  #L224dcc.  call temp:= `e`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/a;.e:(Lq0/b;)Lcom/bumptech/glide/load/engine/m;` @kind virtual;
  #L224dd2.  v2:= temp @kind object;
  #L224dd4.  if v2 == 0 then goto L224dde;
  #L224dd8.  call `a`(v2) @signature `Lcom/bumptech/glide/load/engine/m;.a:()V` @kind virtual;
  #L224dde.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.m` `h`(`com.bumptech.glide.load.engine.h` v2 @kind this, `q0.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.h:(Lq0/b;)Lcom/bumptech/glide/load/engine/m;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L224df0.  call temp:= `e`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/h;.e:(Lq0/b;)Lcom/bumptech/glide/load/engine/m;` @kind direct;
  #L224df6.  v0:= temp @kind object;
  #L224df8.  if v0 == 0 then goto L224e0c;
  #L224dfc.  call `a`(v0) @signature `Lcom/bumptech/glide/load/engine/m;.a:()V` @kind virtual;
  #L224e02.  v1:= v2.`com.bumptech.glide.load.engine.h.h` @type ^`com.bumptech.glide.load.engine.a` @kind object;
  #L224e06.  call `a`(v1, v3, v0) @signature `Lcom/bumptech/glide/load/engine/a;.a:(Lq0/b;Lcom/bumptech/glide/load/engine/m;)V` @kind virtual;
  #L224e0c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.m` `i`(`com.bumptech.glide.load.engine.h` v1 @kind this, `com.bumptech.glide.load.engine.k` v2 @kind object, `boolean` v3 , `long` v4 ) @signature `Lcom/bumptech/glide/load/engine/h;.i:(Lcom/bumptech/glide/load/engine/k;ZJ)Lcom/bumptech/glide/load/engine/m;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L224e20.  v0:= 0I;
  #L224e22.  if v3 != 0 then goto L224e28;
  #L224e26.  return v0 @kind object;
  #L224e28.  call temp:= `g`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/h;.g:(Lq0/b;)Lcom/bumptech/glide/load/engine/m;` @kind direct;
  #L224e2e.  v3:= temp @kind object;
  #L224e30.  if v3 == 0 then goto L224e48;
  #L224e34.  v0:= `@@com.bumptech.glide.load.engine.h.i` @type ^`boolean` @kind boolean;
  #L224e38.  if v0 == 0 then goto L224e46;
  #L224e3c.  v0:= "Loaded resource from active resources" @kind object;
  #L224e40.  call `j`(v0, v4, v2) @signature `Lcom/bumptech/glide/load/engine/h;.j:(Ljava/lang/String;JLq0/b;)V` @kind static;
  #L224e46.  return v3 @kind object;
  #L224e48.  call temp:= `h`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/h;.h:(Lq0/b;)Lcom/bumptech/glide/load/engine/m;` @kind direct;
  #L224e4e.  v3:= temp @kind object;
  #L224e50.  if v3 == 0 then goto L224e68;
  #L224e54.  v0:= `@@com.bumptech.glide.load.engine.h.i` @type ^`boolean` @kind boolean;
  #L224e58.  if v0 == 0 then goto L224e66;
  #L224e5c.  v0:= "Loaded resource from cache" @kind object;
  #L224e60.  call `j`(v0, v4, v2) @signature `Lcom/bumptech/glide/load/engine/h;.j:(Ljava/lang/String;JLq0/b;)V` @kind static;
  #L224e66.  return v3 @kind object;
  #L224e68.  return v0 @kind object;
}
procedure `void` `j`(`java.lang.String` v1 @kind object, `long` v2 , `q0.b` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.j:(Ljava/lang/String;JLq0/b;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L224fc4.  v0:= new `java.lang.StringBuilder`;
  #L224fc8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L224fce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L224fd4.  v1:= " in " @kind object;
  #L224fd8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L224fde.  call temp:= `a`(v2) @signature `Ln1/f;.a:(J)D` @kind static;
  #L224fe4.  v1:= temp @kind wide;
  #L224fe6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L224fec.  v1:= "ms, key: " @kind object;
  #L224ff0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L224ff6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L224ffc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L225002.  v1:= temp @kind object;
  #L225004.  v2:= "Engine" @kind object;
  #L225008.  call temp:= `v`(v2, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L22500e.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.h$d` `l`(`com.bumptech.glide.load.engine.h` v20 @kind this, `com.bumptech.glide.d` v21 @kind object, `java.lang.Object` v22 @kind object, `q0.b` v23 @kind object, `int` v24 , `int` v25 , `java.lang.Class` v26 @kind object, `java.lang.Class` v27 @kind object, `com.bumptech.glide.Priority` v28 @kind object, `t0.a` v29 @kind object, `java.util.Map` v30 @kind object, `boolean` v31 , `boolean` v32 , `q0.d` v33 @kind object, `boolean` v34 , `boolean` v35 , `boolean` v36 , `boolean` v37 , `j1.d` v38 @kind object, `java.util.concurrent.Executor` v39 @kind object, `com.bumptech.glide.load.engine.k` v40 @kind object, `long` v41 ) @signature `Lcom/bumptech/glide/load/engine/h;.l:(Lcom/bumptech/glide/d;Ljava/lang/Object;Lq0/b;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lt0/a;Ljava/util/Map;ZZLq0/d;ZZZZLj1/d;Ljava/util/concurrent/Executor;Lcom/bumptech/glide/load/engine/k;J)Lcom/bumptech/glide/load/engine/h$d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L224c6c.  v0:= v20 @kind object;
  #L224c70.  v1:= v38 @kind object;
  #L224c74.  v2:= v39 @kind object;
  #L224c78.  v15:= v40 @kind object;
  #L224c7c.  v13:= v41 @kind wide;
  #L224c80.  v3:= v0.`com.bumptech.glide.load.engine.h.a` @type ^`com.bumptech.glide.load.engine.n` @kind object;
  #L224c84.  v12:= v37;
  #L224c88.  call temp:= `a`(v3, v15, v12) @signature `Lcom/bumptech/glide/load/engine/n;.a:(Lq0/b;Z)Lcom/bumptech/glide/load/engine/i;` @kind virtual;
  #L224c8e.  v3:= temp @kind object;
  #L224c90.  if v3 == 0 then goto L224cb8;
  #L224c94.  call `b`(v3, v1, v2) @signature `Lcom/bumptech/glide/load/engine/i;.b:(Lj1/d;Ljava/util/concurrent/Executor;)V` @kind virtual;
  #L224c9a.  v2:= `@@com.bumptech.glide.load.engine.h.i` @type ^`boolean` @kind boolean;
  #L224c9e.  if v2 == 0 then goto L224cac;
  #L224ca2.  v2:= "Added to existing load" @kind object;
  #L224ca6.  call `j`(v2, v13, v15) @signature `Lcom/bumptech/glide/load/engine/h;.j:(Ljava/lang/String;JLq0/b;)V` @kind static;
  #L224cac.  v2:= new `com.bumptech.glide.load.engine.h$d`;
  #L224cb0.  call `<init>`(v2, v0, v1, v3) @signature `Lcom/bumptech/glide/load/engine/h$d;.<init>:(Lcom/bumptech/glide/load/engine/h;Lj1/d;Lcom/bumptech/glide/load/engine/i;)V` @kind direct;
  #L224cb6.  return v2 @kind object;
  #L224cb8.  v3:= v0.`com.bumptech.glide.load.engine.h.d` @type ^`com.bumptech.glide.load.engine.h$b` @kind object;
  #L224cbc.  v4:= v40 @kind object;
  #L224cc0.  v5:= v34;
  #L224cc4.  v6:= v35;
  #L224cc8.  v7:= v36;
  #L224ccc.  v8:= v37;
  #L224cd0.  call temp:= `a`(v3, v4, v5, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/h$b;.a:(Lq0/b;ZZZZ)Lcom/bumptech/glide/load/engine/i;` @kind virtual;
  #L224cd6.  v11:= temp @kind object;
  #L224cd8.  v19:= v11 @kind object;
  #L224cdc.  v3:= v0.`com.bumptech.glide.load.engine.h.g` @type ^`com.bumptech.glide.load.engine.h$a` @kind object;
  #L224ce0.  v4:= v21 @kind object;
  #L224ce4.  v5:= v22 @kind object;
  #L224ce8.  v6:= v40 @kind object;
  #L224cec.  v7:= v23 @kind object;
  #L224cf0.  v8:= v24;
  #L224cf4.  v9:= v25;
  #L224cf8.  v10:= v26 @kind object;
  #L224cfc.  v1:= v11 @kind object;
  #L224cfe.  v11:= v27 @kind object;
  #L224d02.  v12:= v28 @kind object;
  #L224d06.  v13:= v29 @kind object;
  #L224d0a.  v14:= v30 @kind object;
  #L224d0e.  v2:= v15 @kind object;
  #L224d10.  v15:= v31;
  #L224d14.  v16:= v32;
  #L224d18.  v17:= v37;
  #L224d1c.  v18:= v33 @kind object;
  #L224d20.  call temp:= `a`(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19) @signature `Lcom/bumptech/glide/load/engine/h$a;.a:(Lcom/bumptech/glide/d;Ljava/lang/Object;Lcom/bumptech/glide/load/engine/k;Lq0/b;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lt0/a;Ljava/util/Map;ZZZLq0/d;Lcom/bumptech/glide/load/engine/DecodeJob$b;)Lcom/bumptech/glide/load/engine/DecodeJob;` @kind virtual;
  #L224d26.  v3:= temp @kind object;
  #L224d28.  v4:= v0.`com.bumptech.glide.load.engine.h.a` @type ^`com.bumptech.glide.load.engine.n` @kind object;
  #L224d2c.  call `c`(v4, v2, v1) @signature `Lcom/bumptech/glide/load/engine/n;.c:(Lq0/b;Lcom/bumptech/glide/load/engine/i;)V` @kind virtual;
  #L224d32.  v5:= v1 @kind object;
  #L224d34.  v4:= v2 @kind object;
  #L224d36.  v1:= v38 @kind object;
  #L224d3a.  v2:= v39 @kind object;
  #L224d3e.  call `b`(v5, v1, v2) @signature `Lcom/bumptech/glide/load/engine/i;.b:(Lj1/d;Ljava/util/concurrent/Executor;)V` @kind virtual;
  #L224d44.  call `s`(v5, v3) @signature `Lcom/bumptech/glide/load/engine/i;.s:(Lcom/bumptech/glide/load/engine/DecodeJob;)V` @kind virtual;
  #L224d4a.  v2:= `@@com.bumptech.glide.load.engine.h.i` @type ^`boolean` @kind boolean;
  #L224d4e.  if v2 == 0 then goto L224d60;
  #L224d52.  v2:= "Started new load" @kind object;
  #L224d56.  v6:= v41 @kind wide;
  #L224d5a.  call `j`(v2, v6, v4) @signature `Lcom/bumptech/glide/load/engine/h;.j:(Ljava/lang/String;JLq0/b;)V` @kind static;
  #L224d60.  v2:= new `com.bumptech.glide.load.engine.h$d`;
  #L224d64.  call `<init>`(v2, v0, v1, v5) @signature `Lcom/bumptech/glide/load/engine/h$d;.<init>:(Lcom/bumptech/glide/load/engine/h;Lj1/d;Lcom/bumptech/glide/load/engine/i;)V` @kind direct;
  #L224d6a.  return v2 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.h` v1 @kind this, `com.bumptech.glide.load.engine.i` v2 @kind object, `q0.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.a:(Lcom/bumptech/glide/load/engine/i;Lq0/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L225020.  @monitorenter v1
  #L225022.  v0:= v1.`com.bumptech.glide.load.engine.h.a` @type ^`com.bumptech.glide.load.engine.n` @kind object;
  #L225026.  call `d`(v0, v3, v2) @signature `Lcom/bumptech/glide/load/engine/n;.d:(Lq0/b;Lcom/bumptech/glide/load/engine/i;)V` @kind virtual;
  #L22502c.  @monitorexit v1
  #L22502e.  return @kind void;
  #L225030.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L225032.  @monitorexit v1
  #L225034.  throw v2;
  catch `java.lang.Throwable` @[L225022..L22502c] goto L225030;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.h` v1 @kind this, `q0.b` v2 @kind object, `com.bumptech.glide.load.engine.m` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.b:(Lq0/b;Lcom/bumptech/glide/load/engine/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2250a0.  v0:= v1.`com.bumptech.glide.load.engine.h.h` @type ^`com.bumptech.glide.load.engine.a` @kind object;
  #L2250a4.  call `d`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/a;.d:(Lq0/b;)V` @kind virtual;
  #L2250aa.  call temp:= `e`(v3) @signature `Lcom/bumptech/glide/load/engine/m;.e:()Z` @kind virtual;
  #L2250b0.  v0:= temp;
  #L2250b2.  if v0 == 0 then goto L2250c2;
  #L2250b6.  v0:= v1.`com.bumptech.glide.load.engine.h.c` @type ^`v0.h` @kind object;
  #L2250ba.  call temp:= `d`(v0, v2, v3) @signature `Lv0/h;.d:(Lq0/b;Lt0/c;)Lt0/c;` @kind interface;
  #L2250c0.  goto L2250ce;
  #L2250c2.  v2:= v1.`com.bumptech.glide.load.engine.h.e` @type ^`com.bumptech.glide.load.engine.s` @kind object;
  #L2250c6.  v0:= 0I;
  #L2250c8.  call `a`(v2, v3, v0) @signature `Lcom/bumptech/glide/load/engine/s;.a:(Lt0/c;Z)V` @kind virtual;
  #L2250ce.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.h` v2 @kind this, `t0.c` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.c:(Lt0/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2250e0.  v0:= v2.`com.bumptech.glide.load.engine.h.e` @type ^`com.bumptech.glide.load.engine.s` @kind object;
  #L2250e4.  v1:= 1I;
  #L2250e6.  call `a`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/engine/s;.a:(Lt0/c;Z)V` @kind virtual;
  #L2250ec.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.h` v1 @kind this, `com.bumptech.glide.load.engine.i` v2 @kind object, `q0.b` v3 @kind object, `com.bumptech.glide.load.engine.m` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.d:(Lcom/bumptech/glide/load/engine/i;Lq0/b;Lcom/bumptech/glide/load/engine/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L225054.  @monitorenter v1
  #L225056.  if v4 == 0 then goto L225070;
  #L22505a.  call temp:= `e`(v4) @signature `Lcom/bumptech/glide/load/engine/m;.e:()Z` @kind virtual;
  #L225060.  v0:= temp;
  #L225062.  if v0 == 0 then goto L225070;
  #L225066.  v0:= v1.`com.bumptech.glide.load.engine.h.h` @type ^`com.bumptech.glide.load.engine.a` @kind object;
  #L22506a.  call `a`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/engine/a;.a:(Lq0/b;Lcom/bumptech/glide/load/engine/m;)V` @kind virtual;
  #L225070.  v4:= v1.`com.bumptech.glide.load.engine.h.a` @type ^`com.bumptech.glide.load.engine.n` @kind object;
  #L225074.  call `d`(v4, v3, v2) @signature `Lcom/bumptech/glide/load/engine/n;.d:(Lq0/b;Lcom/bumptech/glide/load/engine/i;)V` @kind virtual;
  #L22507a.  @monitorexit v1
  #L22507c.  return @kind void;
  #L22507e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L225080.  @monitorexit v1
  #L225082.  throw v2;
  catch `java.lang.Throwable` @[L22505a..L22507a] goto L22507e;
}
procedure `com.bumptech.glide.load.engine.h$d` `f`(`com.bumptech.glide.load.engine.h` v24 @kind this, `com.bumptech.glide.d` v25 @kind object, `java.lang.Object` v26 @kind object, `q0.b` v27 @kind object, `int` v28 , `int` v29 , `java.lang.Class` v30 @kind object, `java.lang.Class` v31 @kind object, `com.bumptech.glide.Priority` v32 @kind object, `t0.a` v33 @kind object, `java.util.Map` v34 @kind object, `boolean` v35 , `boolean` v36 , `q0.d` v37 @kind object, `boolean` v38 , `boolean` v39 , `boolean` v40 , `boolean` v41 , `j1.d` v42 @kind object, `java.util.concurrent.Executor` v43 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.f:(Lcom/bumptech/glide/d;Ljava/lang/Object;Lq0/b;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lt0/a;Ljava/util/Map;ZZLq0/d;ZZZZLj1/d;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/load/engine/h$d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L224b70.  v15:= v24 @kind object;
  #L224b74.  v0:= `@@com.bumptech.glide.load.engine.h.i` @type ^`boolean` @kind boolean;
  #L224b78.  if v0 == 0 then goto L224b86;
  #L224b7c.  call temp:= `b`() @signature `Ln1/f;.b:()J` @kind static;
  #L224b82.  v0:= temp @kind wide;
  #L224b84.  goto L224b8a;
  #L224b86.  v0:= 0L;
  #L224b8a.  v13:= v0 @kind wide;
  #L224b8c.  v0:= v15.`com.bumptech.glide.load.engine.h.b` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L224b90.  v1:= v26 @kind object;
  #L224b94.  v2:= v27 @kind object;
  #L224b98.  v3:= v28;
  #L224b9c.  v4:= v29;
  #L224ba0.  v5:= v34 @kind object;
  #L224ba4.  v6:= v30 @kind object;
  #L224ba8.  v7:= v31 @kind object;
  #L224bac.  v8:= v37 @kind object;
  #L224bb0.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/l;.a:(Ljava/lang/Object;Lq0/b;IILjava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Lq0/d;)Lcom/bumptech/glide/load/engine/k;` @kind virtual;
  #L224bb6.  v0:= temp @kind object;
  #L224bb8.  @monitorenter v24
  #L224bba.  v12:= v38;
  #L224bbe.  call temp:= `i`(v15, v0, v12, v13) @signature `Lcom/bumptech/glide/load/engine/h;.i:(Lcom/bumptech/glide/load/engine/k;ZJ)Lcom/bumptech/glide/load/engine/m;` @kind direct;
  #L224bc4.  v1:= temp @kind object;
  #L224bc6.  if v1 != 0 then goto L224c2e;
  #L224bca.  v1:= v24 @kind object;
  #L224bce.  v2:= v25 @kind object;
  #L224bd2.  v3:= v26 @kind object;
  #L224bd6.  v4:= v27 @kind object;
  #L224bda.  v5:= v28;
  #L224bde.  v6:= v29;
  #L224be2.  v7:= v30 @kind object;
  #L224be6.  v8:= v31 @kind object;
  #L224bea.  v9:= v32 @kind object;
  #L224bee.  v10:= v33 @kind object;
  #L224bf2.  v11:= v34 @kind object;
  #L224bf6.  v12:= v35;
  #L224bfa.  v22:= v13 @kind wide;
  #L224bfe.  v13:= v36;
  #L224c02.  v14:= v37 @kind object;
  #L224c06.  v15:= v38;
  #L224c0a.  v16:= v39;
  #L224c0e.  v17:= v40;
  #L224c12.  v18:= v41;
  #L224c16.  v19:= v42 @kind object;
  #L224c1a.  v20:= v43 @kind object;
  #L224c1e.  v21:= v0 @kind object;
  #L224c22.  call temp:= `l`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22) @signature `Lcom/bumptech/glide/load/engine/h;.l:(Lcom/bumptech/glide/d;Ljava/lang/Object;Lq0/b;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lt0/a;Ljava/util/Map;ZZLq0/d;ZZZZLj1/d;Ljava/util/concurrent/Executor;Lcom/bumptech/glide/load/engine/k;J)Lcom/bumptech/glide/load/engine/h$d;` @kind direct;
  #L224c28.  v0:= temp @kind object;
  #L224c2a.  @monitorexit v24
  #L224c2c.  return v0 @kind object;
  #L224c2e.  @monitorexit v24
  #L224c30.  v0:= `@@com.bumptech.glide.load.DataSource.e` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L224c34.  v2:= v42 @kind object;
  #L224c38.  call `c`(v2, v1, v0) @signature `Lj1/d;.c:(Lt0/c;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L224c3e.  v0:= 0I;
  #L224c40.  return v0 @kind object;
  #L224c42.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L224c44.  @monitorexit v24
  #L224c46.  throw v0;
  catch `java.lang.Throwable` @[L224bbe..L224c30] goto L224c42;
  catch `java.lang.Throwable` @[L224c44..L224c46] goto L224c42;
}
procedure `void` `k`(`com.bumptech.glide.load.engine.h` v1 @kind this, `t0.c` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h;.k:(Lt0/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L225100.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.engine.m` @kind boolean;
  #L225104.  if v0 == 0 then goto L225114;
  #L225108.  v2:= (`com.bumptech.glide.load.engine.m`) v2 @kind object;
  #L22510c.  call `f`(v2) @signature `Lcom/bumptech/glide/load/engine/m;.f:()V` @kind virtual;
  #L225112.  return @kind void;
  #L225114.  v2:= new `java.lang.IllegalArgumentException`;
  #L225118.  v0:= "Cannot release anything but an EngineResource" @kind object;
  #L22511c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L225122.  throw v2;
}
