record `com.bumptech.glide.load.engine.g` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.load.engine.g.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.g.b` @AccessFlag PRIVATE_FINAL;
  `f1.e` `com.bumptech.glide.load.engine.g.c` @AccessFlag PRIVATE_FINAL;
  `x.e` `com.bumptech.glide.load.engine.g.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.engine.g.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.g` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object, `f1.e` v5 @kind object, `x.e` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lf1/e;Lx/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L223650.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L223656.  v0.`com.bumptech.glide.load.engine.g.a` @type ^`java.lang.Class` := v1 @kind object;
  #L22365a.  v0.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` := v4 @kind object;
  #L22365e.  v0.`com.bumptech.glide.load.engine.g.c` @type ^`f1.e` := v5 @kind object;
  #L223662.  v0.`com.bumptech.glide.load.engine.g.d` @type ^`x.e` := v6 @kind object;
  #L223666.  v4:= new `java.lang.StringBuilder`;
  #L22366a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223670.  v5:= "Failed DecodePath{" @kind object;
  #L223674.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22367a.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L223680.  v1:= temp @kind object;
  #L223682.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223688.  v1:= "->" @kind object;
  #L22368c.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223692.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L223698.  v2:= temp @kind object;
  #L22369a.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2236a0.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2236a6.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2236ac.  v1:= temp @kind object;
  #L2236ae.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2236b4.  v1:= "}" @kind object;
  #L2236b8.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2236be.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2236c4.  v1:= temp @kind object;
  #L2236c6.  v0.`com.bumptech.glide.load.engine.g.e` @type ^`java.lang.String` := v1 @kind object;
  #L2236ca.  return @kind void;
}
procedure `t0.c` `b`(`com.bumptech.glide.load.engine.g` v7 @kind this, `r0.e` v8 @kind object, `int` v9 , `int` v10 , `q0.d` v11 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.b:(Lr0/e;IILq0/d;)Lt0/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L223508.  v0:= v7.`com.bumptech.glide.load.engine.g.d` @type ^`x.e` @kind object;
  #L22350c.  call temp:= `b`(v0) @signature `Lx/e;.b:()Ljava/lang/Object;` @kind interface;
  #L223512.  v0:= temp @kind object;
  #L223514.  call temp:= `d`(v0) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22351a.  v0:= temp @kind object;
  #L22351c.  v0:= (`java.util.List`) v0 @kind object;
  #L223520.  v1:= v7 @kind object;
  #L223522.  v2:= v8 @kind object;
  #L223524.  v3:= v9;
  #L223526.  v4:= v10;
  #L223528.  v5:= v11 @kind object;
  #L22352a.  v6:= v0 @kind object;
  #L22352c.  call temp:= `c`(v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/g;.c:(Lr0/e;IILq0/d;Ljava/util/List;)Lt0/c;` @kind direct;
  #L223532.  v8:= temp @kind object;
  #L223534.  v9:= v7.`com.bumptech.glide.load.engine.g.d` @type ^`x.e` @kind object;
  #L223538.  call temp:= `a`(v9, v0) @signature `Lx/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L22353e.  return v8 @kind object;
  #L223540.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L223542.  v9:= v7.`com.bumptech.glide.load.engine.g.d` @type ^`x.e` @kind object;
  #L223546.  call temp:= `a`(v9, v0) @signature `Lx/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L22354c.  throw v8;
  catch `java.lang.Throwable` @[L22352c..L223534] goto L223540;
}
procedure `t0.c` `c`(`com.bumptech.glide.load.engine.g` v8 @kind this, `r0.e` v9 @kind object, `int` v10 , `int` v11 , `q0.d` v12 @kind object, `java.util.List` v13 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.c:(Lr0/e;IILq0/d;Ljava/util/List;)Lt0/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L22356c.  v0:= v8.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L223570.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L223576.  v0:= temp;
  #L223578.  v1:= 0I;
  #L22357a.  v2:= 0I;
  #L22357c.  if v2 >= v0 then goto L22360c;
  #L223580.  v3:= v8.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L223584.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22358a.  v3:= temp @kind object;
  #L22358c.  v3:= (`q0.e`) v3 @kind object;
  #L223590.  call temp:= `a`(v9) @signature `Lr0/e;.a:()Ljava/lang/Object;` @kind interface;
  #L223596.  v4:= temp @kind object;
  #L223598.  call temp:= `b`(v3, v4, v12) @signature `Lq0/e;.b:(Ljava/lang/Object;Lq0/d;)Z` @kind interface;
  #L22359e.  v4:= temp;
  #L2235a0.  if v4 == 0 then goto L223600;
  #L2235a4.  call temp:= `a`(v9) @signature `Lr0/e;.a:()Ljava/lang/Object;` @kind interface;
  #L2235aa.  v4:= temp @kind object;
  #L2235ac.  call temp:= `a`(v3, v4, v10, v11, v12) @signature `Lq0/e;.a:(Ljava/lang/Object;IILq0/d;)Lt0/c;` @kind interface;
  #L2235b2.  v1:= temp @kind object;
  #L2235b4.  goto L223600;
  #L2235b6.  v4:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2235b8.  goto L2235c0;
  #L2235ba.  v4:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L2235bc.  goto L2235c0;
  #L2235be.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L2235c0.  v5:= 2I;
  #L2235c2.  v6:= "DecodePath" @kind object;
  #L2235c6.  call temp:= `isLoggable`(v6, v5) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2235cc.  v5:= temp;
  #L2235ce.  if v5 == 0 then goto L2235fa;
  #L2235d2.  v5:= new `java.lang.StringBuilder`;
  #L2235d6.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2235dc.  v7:= "Failed to decode data for " @kind object;
  #L2235e0.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2235e6.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2235ec.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2235f2.  v3:= temp @kind object;
  #L2235f4.  call temp:= `v`(v6, v3, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2235fa.  call temp:= `add`(v13, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L223600.  if v1 == 0 then goto L223606;
  #L223604.  goto L22360c;
  #L223606.  v2:= v2 + 1;
  #L22360a.  goto L22357c;
  #L22360c.  if v1 == 0 then goto L223612;
  #L223610.  return v1 @kind object;
  #L223612.  v9:= new `com.bumptech.glide.load.engine.GlideException`;
  #L223616.  v10:= v8.`com.bumptech.glide.load.engine.g.e` @type ^`java.lang.String` @kind object;
  #L22361a.  v11:= new `java.util.ArrayList`;
  #L22361e.  call `<init>`(v11, v13) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L223624.  call `<init>`(v9, v10, v11) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L22362a.  throw v9;
  catch `java.io.IOException` @[L223590..L2235b4] goto L2235be;
  catch `java.lang.RuntimeException` @[L223590..L2235b4] goto L2235ba;
  catch `java.lang.OutOfMemoryError` @[L223590..L2235b4] goto L2235b6;
}
procedure `t0.c` `a`(`com.bumptech.glide.load.engine.g` v0 @kind this, `r0.e` v1 @kind object, `int` v2 , `int` v3 , `q0.d` v4 @kind object, `com.bumptech.glide.load.engine.g$a` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Lr0/e;IILq0/d;Lcom/bumptech/glide/load/engine/g$a;)Lt0/c;` @AccessFlag PUBLIC {
    temp;

  #L2234d8.  call temp:= `b`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/g;.b:(Lr0/e;IILq0/d;)Lt0/c;` @kind direct;
  #L2234de.  v1:= temp @kind object;
  #L2234e0.  call temp:= `a`(v5, v1) @signature `Lcom/bumptech/glide/load/engine/g$a;.a:(Lt0/c;)Lt0/c;` @kind interface;
  #L2234e6.  v1:= temp @kind object;
  #L2234e8.  v2:= v0.`com.bumptech.glide.load.engine.g.c` @type ^`f1.e` @kind object;
  #L2234ec.  call temp:= `a`(v2, v1, v4) @signature `Lf1/e;.a:(Lt0/c;Lq0/d;)Lt0/c;` @kind interface;
  #L2234f2.  v1:= temp @kind object;
  #L2234f4.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22346c.  v0:= new `java.lang.StringBuilder`;
  #L223470.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223476.  v1:= "DecodePath{ dataClass=" @kind object;
  #L22347a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223480.  v1:= v2.`com.bumptech.glide.load.engine.g.a` @type ^`java.lang.Class` @kind object;
  #L223484.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22348a.  v1:= ", decoders=" @kind object;
  #L22348e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223494.  v1:= v2.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L223498.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22349e.  v1:= ", transcoder=" @kind object;
  #L2234a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2234a8.  v1:= v2.`com.bumptech.glide.load.engine.g.c` @type ^`f1.e` @kind object;
  #L2234ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2234b2.  v1:= 125I;
  #L2234b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2234bc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2234c2.  v0:= temp @kind object;
  #L2234c4.  return v0 @kind object;
}
