record `com.bumptech.glide.load.engine.a$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.load.engine.a` `com.bumptech.glide.load.engine.a$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.a$b` v0 @kind this, `com.bumptech.glide.load.engine.a` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/a$b;.<init>:(Lcom/bumptech/glide/load/engine/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2213e0.  v0.`com.bumptech.glide.load.engine.a$b.a` @type ^`com.bumptech.glide.load.engine.a` := v1 @kind object;
  #L2213e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2213ea.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.a$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/a$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2213fc.  v0:= v1.`com.bumptech.glide.load.engine.a$b.a` @type ^`com.bumptech.glide.load.engine.a` @kind object;
  #L221400.  call `b`(v0) @signature `Lcom/bumptech/glide/load/engine/a;.b:()V` @kind virtual;
  #L221406.  return @kind void;
}
