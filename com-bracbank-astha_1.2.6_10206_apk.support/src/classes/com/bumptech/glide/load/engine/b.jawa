record `com.bumptech.glide.load.engine.b` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.e` @kind interface, `r0.d$a` @kind interface {
  `java.util.List` `com.bumptech.glide.load.engine.b.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.f` `com.bumptech.glide.load.engine.b.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.e$a` `com.bumptech.glide.load.engine.b.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.b.d` @AccessFlag PRIVATE;
  `q0.b` `com.bumptech.glide.load.engine.b.e` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.load.engine.b.f` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.b.g` @AccessFlag PRIVATE;
  `x0.n$a` `com.bumptech.glide.load.engine.b.h` @AccessFlag PRIVATE_VOLATILE;
  `java.io.File` `com.bumptech.glide.load.engine.b.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.b` v1 @kind this, `com.bumptech.glide.load.engine.f` v2 @kind object, `com.bumptech.glide.load.engine.e$a` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/b;.<init>:(Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/e$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2218e0.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/load/engine/f;.c:()Ljava/util/List;` @kind virtual;
  #L2218e6.  v0:= temp @kind object;
  #L2218e8.  call `<init>`(v1, v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/b;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/e$a;)V` @kind direct;
  #L2218ee.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.b` v1 @kind this, `java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.f` v3 @kind object, `com.bumptech.glide.load.engine.e$a` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/b;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/e$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L221900.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L221906.  v0:= -1I;
  #L221908.  v1.`com.bumptech.glide.load.engine.b.d` @type ^`int` := v0;
  #L22190c.  v1.`com.bumptech.glide.load.engine.b.a` @type ^`java.util.List` := v2 @kind object;
  #L221910.  v1.`com.bumptech.glide.load.engine.b.b` @type ^`com.bumptech.glide.load.engine.f` := v3 @kind object;
  #L221914.  v1.`com.bumptech.glide.load.engine.b.c` @type ^`com.bumptech.glide.load.engine.e$a` := v4 @kind object;
  #L221918.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.b` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/b;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L22175c.  v0:= v2.`com.bumptech.glide.load.engine.b.g` @type ^`int`;
  #L221760.  v1:= v2.`com.bumptech.glide.load.engine.b.f` @type ^`java.util.List` @kind object;
  #L221764.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22176a.  v1:= temp;
  #L22176c.  if v0 >= v1 then goto L221774;
  #L221770.  v0:= 1I;
  #L221772.  goto L221776;
  #L221774.  v0:= 0I;
  #L221776.  return v0;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.b` v7 @kind this) @signature `Lcom/bumptech/glide/load/engine/b;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L221788.  v0:= v7.`com.bumptech.glide.load.engine.b.f` @type ^`java.util.List` @kind object;
  #L22178c.  v1:= 0I;
  #L22178e.  v2:= 1I;
  #L221790.  if v0 == 0 then goto L221850;
  #L221794.  call temp:= `b`(v7) @signature `Lcom/bumptech/glide/load/engine/b;.b:()Z` @kind direct;
  #L22179a.  v0:= temp;
  #L22179c.  if v0 != 0 then goto L2217a2;
  #L2217a0.  goto L221850;
  #L2217a2.  v0:= 0I;
  #L2217a4.  v7.`com.bumptech.glide.load.engine.b.h` @type ^`x0.n$a` := v0 @kind object;
  #L2217a8.  if v1 != 0 then goto L22184e;
  #L2217ac.  call temp:= `b`(v7) @signature `Lcom/bumptech/glide/load/engine/b;.b:()Z` @kind direct;
  #L2217b2.  v0:= temp;
  #L2217b4.  if v0 == 0 then goto L22184e;
  #L2217b8.  v0:= v7.`com.bumptech.glide.load.engine.b.f` @type ^`java.util.List` @kind object;
  #L2217bc.  v3:= v7.`com.bumptech.glide.load.engine.b.g` @type ^`int`;
  #L2217c0.  v4:= v3 + 1;
  #L2217c4.  v7.`com.bumptech.glide.load.engine.b.g` @type ^`int` := v4;
  #L2217c8.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2217ce.  v0:= temp @kind object;
  #L2217d0.  v0:= (`x0.n`) v0 @kind object;
  #L2217d4.  v3:= v7.`com.bumptech.glide.load.engine.b.i` @type ^`java.io.File` @kind object;
  #L2217d8.  v4:= v7.`com.bumptech.glide.load.engine.b.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L2217dc.  call temp:= `s`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.s:()I` @kind virtual;
  #L2217e2.  v4:= temp;
  #L2217e4.  v5:= v7.`com.bumptech.glide.load.engine.b.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L2217e8.  call temp:= `f`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.f:()I` @kind virtual;
  #L2217ee.  v5:= temp;
  #L2217f0.  v6:= v7.`com.bumptech.glide.load.engine.b.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L2217f4.  call temp:= `k`(v6) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lq0/d;` @kind virtual;
  #L2217fa.  v6:= temp @kind object;
  #L2217fc.  call temp:= `a`(v0, v3, v4, v5, v6) @signature `Lx0/n;.a:(Ljava/lang/Object;IILq0/d;)Lx0/n$a;` @kind interface;
  #L221802.  v0:= temp @kind object;
  #L221804.  v7.`com.bumptech.glide.load.engine.b.h` @type ^`x0.n$a` := v0 @kind object;
  #L221808.  v0:= v7.`com.bumptech.glide.load.engine.b.h` @type ^`x0.n$a` @kind object;
  #L22180c.  if v0 == 0 then goto L2217a8;
  #L221810.  v0:= v7.`com.bumptech.glide.load.engine.b.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L221814.  v3:= v7.`com.bumptech.glide.load.engine.b.h` @type ^`x0.n$a` @kind object;
  #L221818.  v3:= v3.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L22181c.  call temp:= `a`(v3) @signature `Lr0/d;.a:()Ljava/lang/Class;` @kind interface;
  #L221822.  v3:= temp @kind object;
  #L221824.  call temp:= `t`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/f;.t:(Ljava/lang/Class;)Z` @kind virtual;
  #L22182a.  v0:= temp;
  #L22182c.  if v0 == 0 then goto L2217a8;
  #L221830.  v0:= v7.`com.bumptech.glide.load.engine.b.h` @type ^`x0.n$a` @kind object;
  #L221834.  v0:= v0.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L221838.  v1:= v7.`com.bumptech.glide.load.engine.b.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L22183c.  call temp:= `l`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.l:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L221842.  v1:= temp @kind object;
  #L221844.  call `e`(v0, v1, v7) @signature `Lr0/d;.e:(Lcom/bumptech/glide/Priority;Lr0/d$a;)V` @kind interface;
  #L22184a.  v1:= 1I;
  #L22184c.  goto L2217a8;
  #L22184e.  return v1;
  #L221850.  v0:= v7.`com.bumptech.glide.load.engine.b.d` @type ^`int`;
  #L221854.  v0:= v0 + v2 @kind int;
  #L221856.  v7.`com.bumptech.glide.load.engine.b.d` @type ^`int` := v0;
  #L22185a.  v2:= v7.`com.bumptech.glide.load.engine.b.a` @type ^`java.util.List` @kind object;
  #L22185e.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L221864.  v2:= temp;
  #L221866.  if v0 < v2 then goto L22186c;
  #L22186a.  return v1;
  #L22186c.  v0:= v7.`com.bumptech.glide.load.engine.b.a` @type ^`java.util.List` @kind object;
  #L221870.  v2:= v7.`com.bumptech.glide.load.engine.b.d` @type ^`int`;
  #L221874.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22187a.  v0:= temp @kind object;
  #L22187c.  v0:= (`q0.b`) v0 @kind object;
  #L221880.  v2:= new `com.bumptech.glide.load.engine.c`;
  #L221884.  v3:= v7.`com.bumptech.glide.load.engine.b.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L221888.  call temp:= `o`(v3) @signature `Lcom/bumptech/glide/load/engine/f;.o:()Lq0/b;` @kind virtual;
  #L22188e.  v3:= temp @kind object;
  #L221890.  call `<init>`(v2, v0, v3) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Lq0/b;Lq0/b;)V` @kind direct;
  #L221896.  v3:= v7.`com.bumptech.glide.load.engine.b.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L22189a.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/load/engine/f;.d:()Lv0/a;` @kind virtual;
  #L2218a0.  v3:= temp @kind object;
  #L2218a2.  call temp:= `a`(v3, v2) @signature `Lv0/a;.a:(Lq0/b;)Ljava/io/File;` @kind interface;
  #L2218a8.  v2:= temp @kind object;
  #L2218aa.  v7.`com.bumptech.glide.load.engine.b.i` @type ^`java.io.File` := v2 @kind object;
  #L2218ae.  if v2 == 0 then goto L221788;
  #L2218b2.  v7.`com.bumptech.glide.load.engine.b.e` @type ^`q0.b` := v0 @kind object;
  #L2218b6.  v0:= v7.`com.bumptech.glide.load.engine.b.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L2218ba.  call temp:= `j`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/f;.j:(Ljava/io/File;)Ljava/util/List;` @kind virtual;
  #L2218c0.  v0:= temp @kind object;
  #L2218c2.  v7.`com.bumptech.glide.load.engine.b.f` @type ^`java.util.List` := v0 @kind object;
  #L2218c6.  v7.`com.bumptech.glide.load.engine.b.g` @type ^`int` := v1;
  #L2218ca.  goto L221788;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.b` v4 @kind this, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/b;.c:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L221984.  v0:= v4.`com.bumptech.glide.load.engine.b.c` @type ^`com.bumptech.glide.load.engine.e$a` @kind object;
  #L221988.  v1:= v4.`com.bumptech.glide.load.engine.b.e` @type ^`q0.b` @kind object;
  #L22198c.  v2:= v4.`com.bumptech.glide.load.engine.b.h` @type ^`x0.n$a` @kind object;
  #L221990.  v2:= v2.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L221994.  v3:= `@@com.bumptech.glide.load.DataSource.c` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L221998.  call `c`(v0, v1, v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/e$a;.c:(Lq0/b;Ljava/lang/Exception;Lr0/d;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L22199e.  return @kind void;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.b` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22192c.  v0:= v1.`com.bumptech.glide.load.engine.b.h` @type ^`x0.n$a` @kind object;
  #L221930.  if v0 == 0 then goto L22193e;
  #L221934.  v0:= v0.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L221938.  call `cancel`(v0) @signature `Lr0/d;.cancel:()V` @kind interface;
  #L22193e.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.load.engine.b` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/b;.f:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L221950.  v0:= v6.`com.bumptech.glide.load.engine.b.c` @type ^`com.bumptech.glide.load.engine.e$a` @kind object;
  #L221954.  v1:= v6.`com.bumptech.glide.load.engine.b.e` @type ^`q0.b` @kind object;
  #L221958.  v2:= v6.`com.bumptech.glide.load.engine.b.h` @type ^`x0.n$a` @kind object;
  #L22195c.  v3:= v2.`x0.n$a.c` @type ^`r0.d` @kind object;
  #L221960.  v4:= `@@com.bumptech.glide.load.DataSource.c` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L221964.  v5:= v6.`com.bumptech.glide.load.engine.b.e` @type ^`q0.b` @kind object;
  #L221968.  v2:= v7 @kind object;
  #L22196a.  call `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/e$a;.b:(Lq0/b;Ljava/lang/Object;Lr0/d;Lcom/bumptech/glide/load/DataSource;Lq0/b;)V` @kind interface;
  #L221970.  return @kind void;
}
