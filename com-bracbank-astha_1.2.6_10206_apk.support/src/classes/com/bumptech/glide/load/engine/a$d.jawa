record `com.bumptech.glide.load.engine.a$d` @kind class @AccessFlag FINAL extends `java.lang.ref.WeakReference` @kind class {
  `q0.b` `com.bumptech.glide.load.engine.a$d.a` @AccessFlag FINAL;
  `boolean` `com.bumptech.glide.load.engine.a$d.b` @AccessFlag FINAL;
  `t0.c` `com.bumptech.glide.load.engine.a$d.c` @AccessFlag ;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.a$d` v0 @kind this, `q0.b` v1 @kind object, `com.bumptech.glide.load.engine.m` v2 @kind object, `java.lang.ref.ReferenceQueue` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/load/engine/a$d;.<init>:(Lq0/b;Lcom/bumptech/glide/load/engine/m;Ljava/lang/ref/ReferenceQueue;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L221418.  call `<init>`(v0, v2, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L22141e.  call temp:= `d`(v1) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L221424.  v1:= temp @kind object;
  #L221426.  v1:= (`q0.b`) v1 @kind object;
  #L22142a.  v0.`com.bumptech.glide.load.engine.a$d.a` @type ^`q0.b` := v1 @kind object;
  #L22142e.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/load/engine/m;.e:()Z` @kind virtual;
  #L221434.  v1:= temp;
  #L221436.  if v1 == 0 then goto L221454;
  #L22143a.  if v4 == 0 then goto L221454;
  #L22143e.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/m;.d:()Lt0/c;` @kind virtual;
  #L221444.  v1:= temp @kind object;
  #L221446.  call temp:= `d`(v1) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22144c.  v1:= temp @kind object;
  #L22144e.  v1:= (`t0.c`) v1 @kind object;
  #L221452.  goto L221456;
  #L221454.  v1:= 0I;
  #L221456.  v0.`com.bumptech.glide.load.engine.a$d.c` @type ^`t0.c` := v1 @kind object;
  #L22145a.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/load/engine/m;.e:()Z` @kind virtual;
  #L221460.  v1:= temp;
  #L221462.  v0.`com.bumptech.glide.load.engine.a$d.b` @type ^`boolean` := v1 @kind boolean;
  #L221466.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.a$d` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/a$d;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L221478.  v0:= 0I;
  #L22147a.  v1.`com.bumptech.glide.load.engine.a$d.c` @type ^`t0.c` := v0 @kind object;
  #L22147e.  call `clear`(v1) @signature `Ljava/lang/ref/WeakReference;.clear:()V` @kind virtual;
  #L221484.  return @kind void;
}
