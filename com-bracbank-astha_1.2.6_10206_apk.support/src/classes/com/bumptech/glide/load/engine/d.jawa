record `com.bumptech.glide.load.engine.d` @kind class @AccessFlag  extends `v0.a$b` @kind interface {
  `q0.a` `com.bumptech.glide.load.engine.d.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.load.engine.d.b` @AccessFlag PRIVATE_FINAL;
  `q0.d` `com.bumptech.glide.load.engine.d.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.d` v0 @kind this, `q0.a` v1 @kind object, `java.lang.Object` v2 @kind object, `q0.d` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lq0/a;Ljava/lang/Object;Lq0/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L221af4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L221afa.  v0.`com.bumptech.glide.load.engine.d.a` @type ^`q0.a` := v1 @kind object;
  #L221afe.  v0.`com.bumptech.glide.load.engine.d.b` @type ^`java.lang.Object` := v2 @kind object;
  #L221b02.  v0.`com.bumptech.glide.load.engine.d.c` @type ^`q0.d` := v3 @kind object;
  #L221b06.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.d` v3 @kind this, `java.io.File` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.a:(Ljava/io/File;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L221acc.  v0:= v3.`com.bumptech.glide.load.engine.d.a` @type ^`q0.a` @kind object;
  #L221ad0.  v1:= v3.`com.bumptech.glide.load.engine.d.b` @type ^`java.lang.Object` @kind object;
  #L221ad4.  v2:= v3.`com.bumptech.glide.load.engine.d.c` @type ^`q0.d` @kind object;
  #L221ad8.  call temp:= `a`(v0, v1, v4, v2) @signature `Lq0/a;.a:(Ljava/lang/Object;Ljava/io/File;Lq0/d;)Z` @kind interface;
  #L221ade.  v4:= temp;
  #L221ae0.  return v4;
}
