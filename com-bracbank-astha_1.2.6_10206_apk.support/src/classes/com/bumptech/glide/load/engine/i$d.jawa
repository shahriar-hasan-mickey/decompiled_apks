record `com.bumptech.glide.load.engine.i$d` @kind class @AccessFlag FINAL {
  `j1.d` `com.bumptech.glide.load.engine.i$d.a` @AccessFlag FINAL;
  `java.util.concurrent.Executor` `com.bumptech.glide.load.engine.i$d.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.i$d` v0 @kind this, `j1.d` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/i$d;.<init>:(Lj1/d;Ljava/util/concurrent/Executor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L223c10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L223c16.  v0.`com.bumptech.glide.load.engine.i$d.a` @type ^`j1.d` := v1 @kind object;
  #L223c1a.  v0.`com.bumptech.glide.load.engine.i$d.b` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L223c1e.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.i$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/i$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L223bbc.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.engine.i$d` @kind boolean;
  #L223bc0.  if v0 == 0 then goto L223bda;
  #L223bc4.  v2:= (`com.bumptech.glide.load.engine.i$d`) v2 @kind object;
  #L223bc8.  v0:= v1.`com.bumptech.glide.load.engine.i$d.a` @type ^`j1.d` @kind object;
  #L223bcc.  v2:= v2.`com.bumptech.glide.load.engine.i$d.a` @type ^`j1.d` @kind object;
  #L223bd0.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L223bd6.  v2:= temp;
  #L223bd8.  return v2;
  #L223bda.  v2:= 0I;
  #L223bdc.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.i$d` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/i$d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L223bf0.  v0:= v1.`com.bumptech.glide.load.engine.i$d.a` @type ^`j1.d` @kind object;
  #L223bf4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L223bfa.  v0:= temp;
  #L223bfc.  return v0;
}
