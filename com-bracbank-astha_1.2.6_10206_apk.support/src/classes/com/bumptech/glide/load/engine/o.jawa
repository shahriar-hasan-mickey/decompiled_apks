record `com.bumptech.glide.load.engine.o` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.load.engine.o.a` @AccessFlag PRIVATE_FINAL;
  `x.e` `com.bumptech.glide.load.engine.o.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.o.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.engine.o.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.o` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object, `x.e` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/o;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lx/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2259d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2259da.  v0.`com.bumptech.glide.load.engine.o.a` @type ^`java.lang.Class` := v1 @kind object;
  #L2259de.  v0.`com.bumptech.glide.load.engine.o.b` @type ^`x.e` := v5 @kind object;
  #L2259e2.  call temp:= `c`(v4) @signature `Ln1/j;.c:(Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L2259e8.  v4:= temp @kind object;
  #L2259ea.  v4:= (`java.util.List`) v4 @kind object;
  #L2259ee.  v0.`com.bumptech.glide.load.engine.o.c` @type ^`java.util.List` := v4 @kind object;
  #L2259f2.  v4:= new `java.lang.StringBuilder`;
  #L2259f6.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2259fc.  v5:= "Failed LoadPath{" @kind object;
  #L225a00.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225a06.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L225a0c.  v1:= temp @kind object;
  #L225a0e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225a14.  v1:= "->" @kind object;
  #L225a18.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225a1e.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L225a24.  v2:= temp @kind object;
  #L225a26.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225a2c.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225a32.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L225a38.  v1:= temp @kind object;
  #L225a3a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225a40.  v1:= "}" @kind object;
  #L225a44.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225a4a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L225a50.  v1:= temp @kind object;
  #L225a52.  v0.`com.bumptech.glide.load.engine.o.d` @type ^`java.lang.String` := v1 @kind object;
  #L225a56.  return @kind void;
}
procedure `t0.c` `b`(`com.bumptech.glide.load.engine.o` v12 @kind this, `r0.e` v13 @kind object, `q0.d` v14 @kind object, `int` v15 , `int` v16 , `com.bumptech.glide.load.engine.g$a` v17 @kind object, `java.util.List` v18 @kind object) @signature `Lcom/bumptech/glide/load/engine/o;.b:(Lr0/e;Lq0/d;IILcom/bumptech/glide/load/engine/g$a;Ljava/util/List;)Lt0/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L225934.  v1:= v12 @kind object;
  #L225936.  v2:= v18 @kind object;
  #L22593a.  v0:= v1.`com.bumptech.glide.load.engine.o.c` @type ^`java.util.List` @kind object;
  #L22593e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L225944.  v3:= temp;
  #L225946.  v0:= 0I;
  #L225948.  v4:= 0I;
  #L22594a.  v4:= v0 @kind object;
  #L22594c.  v5:= 0I;
  #L22594e.  if v5 >= v3 then goto L225994;
  #L225952.  v0:= v1.`com.bumptech.glide.load.engine.o.c` @type ^`java.util.List` @kind object;
  #L225956.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22595c.  v0:= temp @kind object;
  #L22595e.  v6:= v0 @kind object;
  #L225960.  v6:= (`com.bumptech.glide.load.engine.g`) v6 @kind object;
  #L225964.  v7:= v13 @kind object;
  #L225966.  v8:= v15;
  #L225968.  v9:= v16;
  #L22596c.  v10:= v14 @kind object;
  #L22596e.  v11:= v17 @kind object;
  #L225972.  call temp:= `a`(v6, v7, v8, v9, v10, v11) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Lr0/e;IILq0/d;Lcom/bumptech/glide/load/engine/g$a;)Lt0/c;` @kind virtual;
  #L225978.  v0:= temp @kind object;
  #L22597a.  v4:= v0 @kind object;
  #L22597c.  goto L225988;
  #L22597e.  v0:= Exception @type ^`com.bumptech.glide.load.engine.GlideException` @kind object;
  #L225980.  v6:= v0 @kind object;
  #L225982.  call temp:= `add`(v2, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L225988.  if v4 == 0 then goto L22598e;
  #L22598c.  goto L225994;
  #L22598e.  v5:= v5 + 1;
  #L225992.  goto L22594e;
  #L225994.  if v4 == 0 then goto L22599a;
  #L225998.  return v4 @kind object;
  #L22599a.  v0:= new `com.bumptech.glide.load.engine.GlideException`;
  #L22599e.  v3:= v1.`com.bumptech.glide.load.engine.o.d` @type ^`java.lang.String` @kind object;
  #L2259a2.  v4:= new `java.util.ArrayList`;
  #L2259a6.  call `<init>`(v4, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2259ac.  call `<init>`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L2259b2.  throw v0;
  catch `com.bumptech.glide.load.engine.GlideException` @[L225972..L22597a] goto L22597e;
}
procedure `t0.c` `a`(`com.bumptech.glide.load.engine.o` v8 @kind this, `r0.e` v9 @kind object, `q0.d` v10 @kind object, `int` v11 , `int` v12 , `com.bumptech.glide.load.engine.g$a` v13 @kind object) @signature `Lcom/bumptech/glide/load/engine/o;.a:(Lr0/e;Lq0/d;IILcom/bumptech/glide/load/engine/g$a;)Lt0/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2258d0.  v0:= v8.`com.bumptech.glide.load.engine.o.b` @type ^`x.e` @kind object;
  #L2258d4.  call temp:= `b`(v0) @signature `Lx/e;.b:()Ljava/lang/Object;` @kind interface;
  #L2258da.  v0:= temp @kind object;
  #L2258dc.  call temp:= `d`(v0) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2258e2.  v0:= temp @kind object;
  #L2258e4.  v0:= (`java.util.List`) v0 @kind object;
  #L2258e8.  v1:= v8 @kind object;
  #L2258ea.  v2:= v9 @kind object;
  #L2258ec.  v3:= v10 @kind object;
  #L2258ee.  v4:= v11;
  #L2258f0.  v5:= v12;
  #L2258f2.  v6:= v13 @kind object;
  #L2258f4.  v7:= v0 @kind object;
  #L2258f6.  call temp:= `b`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/engine/o;.b:(Lr0/e;Lq0/d;IILcom/bumptech/glide/load/engine/g$a;Ljava/util/List;)Lt0/c;` @kind direct;
  #L2258fc.  v9:= temp @kind object;
  #L2258fe.  v10:= v8.`com.bumptech.glide.load.engine.o.b` @type ^`x.e` @kind object;
  #L225902.  call temp:= `a`(v10, v0) @signature `Lx/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L225908.  return v9 @kind object;
  #L22590a.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22590c.  v10:= v8.`com.bumptech.glide.load.engine.o.b` @type ^`x.e` @kind object;
  #L225910.  call temp:= `a`(v10, v0) @signature `Lx/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L225916.  throw v9;
  catch `java.lang.Throwable` @[L2258f6..L2258fe] goto L22590a;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.o` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22587c.  v0:= new `java.lang.StringBuilder`;
  #L225880.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L225886.  v1:= "LoadPath{decodePaths=" @kind object;
  #L22588a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L225890.  v1:= v2.`com.bumptech.glide.load.engine.o.c` @type ^`java.util.List` @kind object;
  #L225894.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L22589a.  v1:= temp @kind object;
  #L22589c.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2258a2.  v1:= temp @kind object;
  #L2258a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2258aa.  v1:= 125I;
  #L2258ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2258b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2258ba.  v0:= temp @kind object;
  #L2258bc.  return v0 @kind object;
}
