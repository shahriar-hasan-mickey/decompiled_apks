record `com.bumptech.glide.load.engine.h$b` @kind class @AccessFlag  {
  `w0.a` `com.bumptech.glide.load.engine.h$b.a` @AccessFlag FINAL;
  `w0.a` `com.bumptech.glide.load.engine.h$b.b` @AccessFlag FINAL;
  `w0.a` `com.bumptech.glide.load.engine.h$b.c` @AccessFlag FINAL;
  `w0.a` `com.bumptech.glide.load.engine.h$b.d` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.j` `com.bumptech.glide.load.engine.h$b.e` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.m$a` `com.bumptech.glide.load.engine.h$b.f` @AccessFlag FINAL;
  `x.e` `com.bumptech.glide.load.engine.h$b.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$b` v2 @kind this, `w0.a` v3 @kind object, `w0.a` v4 @kind object, `w0.a` v5 @kind object, `w0.a` v6 @kind object, `com.bumptech.glide.load.engine.j` v7 @kind object, `com.bumptech.glide.load.engine.m$a` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$b;.<init>:(Lw0/a;Lw0/a;Lw0/a;Lw0/a;Lcom/bumptech/glide/load/engine/j;Lcom/bumptech/glide/load/engine/m$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2238c4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2238ca.  v0:= new `com.bumptech.glide.load.engine.h$b$a`;
  #L2238ce.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/h$b$a;.<init>:(Lcom/bumptech/glide/load/engine/h$b;)V` @kind direct;
  #L2238d4.  v1:= 150I;
  #L2238d8.  call temp:= `d`(v1, v0) @signature `Lo1/a;.d:(ILo1/a$d;)Lx/e;` @kind static;
  #L2238de.  v0:= temp @kind object;
  #L2238e0.  v2.`com.bumptech.glide.load.engine.h$b.g` @type ^`x.e` := v0 @kind object;
  #L2238e4.  v2.`com.bumptech.glide.load.engine.h$b.a` @type ^`w0.a` := v3 @kind object;
  #L2238e8.  v2.`com.bumptech.glide.load.engine.h$b.b` @type ^`w0.a` := v4 @kind object;
  #L2238ec.  v2.`com.bumptech.glide.load.engine.h$b.c` @type ^`w0.a` := v5 @kind object;
  #L2238f0.  v2.`com.bumptech.glide.load.engine.h$b.d` @type ^`w0.a` := v6 @kind object;
  #L2238f4.  v2.`com.bumptech.glide.load.engine.h$b.e` @type ^`com.bumptech.glide.load.engine.j` := v7 @kind object;
  #L2238f8.  v2.`com.bumptech.glide.load.engine.h$b.f` @type ^`com.bumptech.glide.load.engine.m$a` := v8 @kind object;
  #L2238fc.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.i` `a`(`com.bumptech.glide.load.engine.h$b` v7 @kind this, `q0.b` v8 @kind object, `boolean` v9 , `boolean` v10 , `boolean` v11 , `boolean` v12 ) @signature `Lcom/bumptech/glide/load/engine/h$b;.a:(Lq0/b;ZZZZ)Lcom/bumptech/glide/load/engine/i;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L223880.  v0:= v7.`com.bumptech.glide.load.engine.h$b.g` @type ^`x.e` @kind object;
  #L223884.  call temp:= `b`(v0) @signature `Lx/e;.b:()Ljava/lang/Object;` @kind interface;
  #L22388a.  v0:= temp @kind object;
  #L22388c.  v0:= (`com.bumptech.glide.load.engine.i`) v0 @kind object;
  #L223890.  call temp:= `d`(v0) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L223896.  v0:= temp @kind object;
  #L223898.  v1:= v0 @kind object;
  #L22389a.  v1:= (`com.bumptech.glide.load.engine.i`) v1 @kind object;
  #L22389e.  v2:= v8 @kind object;
  #L2238a0.  v3:= v9;
  #L2238a2.  v4:= v10;
  #L2238a4.  v5:= v11;
  #L2238a6.  v6:= v12;
  #L2238a8.  call temp:= `l`(v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/i;.l:(Lq0/b;ZZZZ)Lcom/bumptech/glide/load/engine/i;` @kind virtual;
  #L2238ae.  v8:= temp @kind object;
  #L2238b0.  return v8 @kind object;
}
