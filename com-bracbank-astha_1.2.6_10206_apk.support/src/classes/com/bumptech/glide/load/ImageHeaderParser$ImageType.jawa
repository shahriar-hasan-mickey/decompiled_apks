record `com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `boolean` `com.bumptech.glide.load.ImageHeaderParser$ImageType.hasAlpha` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.ImageHeaderParser$ImageType`[] `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.RAW` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L220d70.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L220d74.  v1:= "GIF" @kind object;
  #L220d78.  v2:= 0I;
  #L220d7a.  v3:= 1I;
  #L220d7c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L220d82.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L220d86.  v1:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L220d8a.  v4:= "JPEG" @kind object;
  #L220d8e.  call `<init>`(v1, v4, v3, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L220d94.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v1 @kind object;
  #L220d98.  v4:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L220d9c.  v5:= "RAW" @kind object;
  #L220da0.  v6:= 2I;
  #L220da2.  call `<init>`(v4, v5, v6, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L220da8.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.RAW` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v4 @kind object;
  #L220dac.  v5:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L220db0.  v7:= "PNG_A" @kind object;
  #L220db4.  v8:= 3I;
  #L220db6.  call `<init>`(v5, v7, v8, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L220dbc.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v5 @kind object;
  #L220dc0.  v7:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L220dc4.  v9:= "PNG" @kind object;
  #L220dc8.  v10:= 4I;
  #L220dca.  call `<init>`(v7, v9, v10, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L220dd0.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v7 @kind object;
  #L220dd4.  v9:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L220dd8.  v11:= "WEBP_A" @kind object;
  #L220ddc.  v12:= 5I;
  #L220dde.  call `<init>`(v9, v11, v12, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L220de4.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v9 @kind object;
  #L220de8.  v11:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L220dec.  v13:= "WEBP" @kind object;
  #L220df0.  v14:= 6I;
  #L220df2.  call `<init>`(v11, v13, v14, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L220df8.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v11 @kind object;
  #L220dfc.  v13:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L220e00.  v15:= "UNKNOWN" @kind object;
  #L220e04.  v14:= 7I;
  #L220e06.  call `<init>`(v13, v15, v14, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L220e0c.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v13 @kind object;
  #L220e10.  v15:= 8I;
  #L220e14.  v15:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`[v15];
  #L220e18.  v15[v2]:= v0 @kind object;
  #L220e1c.  v15[v3]:= v1 @kind object;
  #L220e20.  v15[v6]:= v4 @kind object;
  #L220e24.  v15[v8]:= v5 @kind object;
  #L220e28.  v15[v10]:= v7 @kind object;
  #L220e2c.  v15[v12]:= v9 @kind object;
  #L220e30.  v0:= 6I;
  #L220e32.  v15[v0]:= v11 @kind object;
  #L220e36.  v15[v14]:= v13 @kind object;
  #L220e3a.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.$VALUES` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType`[] := v15 @kind object;
  #L220e3e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.ImageHeaderParser$ImageType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L220e50.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L220e56.  v0.`com.bumptech.glide.load.ImageHeaderParser$ImageType.hasAlpha` @type ^`boolean` := v3 @kind boolean;
  #L220e5a.  return @kind void;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L220d28.  v0:= constclass @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L220d2c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L220d32.  v1:= temp @kind object;
  #L220d34.  v1:= (`com.bumptech.glide.load.ImageHeaderParser$ImageType`) v1 @kind object;
  #L220d38.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType`[] `values`() @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.values:()[Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L220d4c.  v0:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.$VALUES` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType`[] @kind object;
  #L220d50.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L220d56.  v0:= temp @kind object;
  #L220d58.  v0:= (`com.bumptech.glide.load.ImageHeaderParser$ImageType`[]) v0 @kind object;
  #L220d5c.  return v0 @kind object;
}
procedure `boolean` `hasAlpha`(`com.bumptech.glide.load.ImageHeaderParser$ImageType` v1 @kind this) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.hasAlpha:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L220d10.  v0:= v1.`com.bumptech.glide.load.ImageHeaderParser$ImageType.hasAlpha` @type ^`boolean` @kind boolean;
  #L220d14.  return v0;
}
