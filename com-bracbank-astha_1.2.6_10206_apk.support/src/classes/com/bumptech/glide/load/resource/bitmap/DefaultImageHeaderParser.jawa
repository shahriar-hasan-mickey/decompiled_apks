record `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.ImageHeaderParser` @kind interface {
}
global `byte`[] `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2272e0.  v0:= "UTF-8" @kind object;
  #L2272e4.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2272ea.  v0:= temp @kind object;
  #L2272ec.  v1:= "Exif\u0000\u0000" @kind object;
  #L2272f0.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L2272f6.  v0:= temp @kind object;
  #L2272f8.  `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] := v0 @kind object;
  #L2272fc.  v0:= 13I;
  #L227300.  v0:= new `int`[v0];
  #L227304.  goto L227310;
  #L22730a.  `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @type ^`int`[] := v0 @kind object;
  #L22730e.  return @kind void;
  #L227310.  v0:= (0I, 1I, 1I, 2I, 4I, 8I, 1I, 1I, 2I, 4I, 8I, 4I, 8I) @kind object;
  #L22734b.  goto L22730a;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L22735c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L227362.  return @kind void;
}
procedure `int` `d`(`int` v0 , `int` v1 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.d:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L226e38.  v0:= v0 + 2;
  #L226e3c.  v1:= v1 * 12;
  #L226e40.  v0:= v0 + v1 @kind int;
  #L226e42.  return v0;
}
procedure `int` `e`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v5 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v6 @kind object, `u0.b` v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.e:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lu0/b;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L226e54.  v0:= -1I;
  #L226e56.  call temp:= `g`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.g:()I` @kind interface;
  #L226e5c.  v1:= temp;
  #L226e5e.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.g:(I)Z` @kind static;
  #L226e64.  v2:= temp;
  #L226e66.  v3:= 3I;
  #L226e68.  v4:= "DfltImageHeaderParser" @kind object;
  #L226e6c.  if v2 != 0 then goto L226e98;
  #L226e70.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L226e76.  v6:= temp;
  #L226e78.  if v6 == 0 then goto L226e96;
  #L226e7c.  v6:= new `java.lang.StringBuilder`;
  #L226e80.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L226e86.  v7:= "Parser doesn't handle magic number: " @kind object;
  #L226e8a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226e90.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L226e96.  return v0;
  #L226e98.  call temp:= `i`(v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.i:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)I` @kind direct;
  #L226e9e.  v1:= temp;
  #L226ea0.  if v1 != v0 then goto L226eac;
  #L226ea4.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L226eaa.  return v0;
  #L226eac.  v2:= constclass @type ^`byte`[] @kind object;
  #L226eb0.  call temp:= `d`(v7, v1, v2) @signature `Lu0/b;.d:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L226eb6.  v2:= temp @kind object;
  #L226eb8.  v2:= (`byte`[]) v2 @kind object;
  #L226ebc.  call temp:= `k`(v5, v6, v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.k:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;[BI)I` @kind direct;
  #L226ec2.  v6:= temp;
  #L226ec4.  call `put`(v7, v2) @signature `Lu0/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L226eca.  return v6;
  #L226ecc.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L226ece.  call `put`(v7, v2) @signature `Lu0/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L226ed4.  throw v6;
  #L226ed6.  return v0;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L226e56..L226e66] goto L226ed6;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L226e70..L226ebc] goto L226ed6;
  catch `java.lang.Throwable` @[L226ebc..L226ec4] goto L226ecc;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L226ec4..L226ed6] goto L226ed6;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `f`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v5 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.f:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L226c5c.  call temp:= `g`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.g:()I` @kind interface;
  #L226c62.  v0:= temp;
  #L226c64.  v1:= 65496I;
  #L226c6a.  if v0 != v1 then goto L226c74;
  #L226c6e.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226c72.  return v6 @kind object;
  #L226c74.  v0:= v0 ^< 8;
  #L226c78.  call temp:= `i`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.i:()S` @kind interface;
  #L226c7e.  v1:= temp;
  #L226c80.  v0:= v0 ^| v1 @kind int;
  #L226c82.  v1:= 4671814I;
  #L226c88.  if v0 != v1 then goto L226c92;
  #L226c8c.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226c90.  return v6 @kind object;
  #L226c92.  v0:= v0 ^< 8;
  #L226c96.  call temp:= `i`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.i:()S` @kind interface;
  #L226c9c.  v1:= temp;
  #L226c9e.  v0:= v0 ^| v1 @kind int;
  #L226ca0.  v1:= -1991225785I;
  #L226ca6.  if v0 != v1 then goto L226cd4;
  #L226caa.  v0:= 21L;
  #L226cae.  call temp:= `f`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.f:(J)J` @kind interface;
  #L226cb4.  call temp:= `i`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.i:()S` @kind interface;
  #L226cba.  v6:= temp;
  #L226cbc.  v0:= 3I;
  #L226cbe.  if v6 < v0 then goto L226cc8;
  #L226cc2.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226cc6.  goto L226ccc;
  #L226cc8.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226ccc.  return v6 @kind object;
  #L226cce.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226cd2.  return v6 @kind object;
  #L226cd4.  v1:= 1380533830I;
  #L226cda.  if v0 == v1 then goto L226ce4;
  #L226cde.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226ce2.  return v6 @kind object;
  #L226ce4.  v0:= 4L;
  #L226ce8.  call temp:= `f`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.f:(J)J` @kind interface;
  #L226cee.  call temp:= `g`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.g:()I` @kind interface;
  #L226cf4.  v2:= temp;
  #L226cf6.  v2:= v2 ^< 16;
  #L226cfa.  call temp:= `g`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.g:()I` @kind interface;
  #L226d00.  v3:= temp;
  #L226d02.  v2:= v2 ^| v3 @kind int;
  #L226d04.  v3:= 1464156752I;
  #L226d0a.  if v2 == v3 then goto L226d14;
  #L226d0e.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226d12.  return v6 @kind object;
  #L226d14.  call temp:= `g`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.g:()I` @kind interface;
  #L226d1a.  v2:= temp;
  #L226d1c.  v2:= v2 ^< 16;
  #L226d20.  call temp:= `g`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.g:()I` @kind interface;
  #L226d26.  v3:= temp;
  #L226d28.  v2:= v2 ^| v3 @kind int;
  #L226d2a.  v3:= v2 ^& -256;
  #L226d2e.  v4:= 1448097792I;
  #L226d34.  if v3 == v4 then goto L226d3e;
  #L226d38.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226d3c.  return v6 @kind object;
  #L226d3e.  v2:= v2 ^& 255;
  #L226d42.  v3:= 88I;
  #L226d46.  if v2 != v3 then goto L226d6c;
  #L226d4a.  call temp:= `f`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.f:(J)J` @kind interface;
  #L226d50.  call temp:= `i`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.i:()S` @kind interface;
  #L226d56.  v6:= temp;
  #L226d58.  v6:= v6 ^& 16;
  #L226d5c.  if v6 == 0 then goto L226d66;
  #L226d60.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226d64.  goto L226d6a;
  #L226d66.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226d6a.  return v6 @kind object;
  #L226d6c.  v3:= 76I;
  #L226d70.  if v2 != v3 then goto L226d96;
  #L226d74.  call temp:= `f`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.f:(J)J` @kind interface;
  #L226d7a.  call temp:= `i`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.i:()S` @kind interface;
  #L226d80.  v6:= temp;
  #L226d82.  v6:= v6 ^& 8;
  #L226d86.  if v6 == 0 then goto L226d90;
  #L226d8a.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226d8e.  goto L226d94;
  #L226d90.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226d94.  return v6 @kind object;
  #L226d96.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226d9a.  return v6 @kind object;
  #L226d9c.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L226da0.  return v6 @kind object;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L226c5c..L226cb4] goto L226d9c;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L226cb4..L226ccc] goto L226cce;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L226cce..L226d9a] goto L226d9c;
}
procedure `boolean` `g`(`int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.g:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L226bd4.  v0:= 65496I;
  #L226bda.  v1:= v2 ^& v0 @kind int;
  #L226bde.  if v1 == v0 then goto L226bf8;
  #L226be2.  v0:= 19789I;
  #L226be6.  if v2 == v0 then goto L226bf8;
  #L226bea.  v0:= 18761I;
  #L226bee.  if v2 != v0 then goto L226bf4;
  #L226bf2.  goto L226bf8;
  #L226bf4.  v2:= 0I;
  #L226bf6.  goto L226bfa;
  #L226bf8.  v2:= 1I;
  #L226bfa.  return v2;
}
procedure `boolean` `h`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.h:([BI)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L226c0c.  v0:= 0I;
  #L226c0e.  if v5 == 0 then goto L226c20;
  #L226c12.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] @kind object;
  #L226c16.  v1:= length @variable v1;
  #L226c18.  if v6 <= v1 then goto L226c20;
  #L226c1c.  v6:= 1I;
  #L226c1e.  goto L226c22;
  #L226c20.  v6:= 0I;
  #L226c22.  if v6 == 0 then goto L226c46;
  #L226c26.  v1:= 0I;
  #L226c28.  v2:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] @kind object;
  #L226c2c.  v3:= length @variable v2;
  #L226c2e.  if v1 >= v3 then goto L226c46;
  #L226c32.  v3:= v5[v1] @kind byte;
  #L226c36.  v2:= v2[v1] @kind byte;
  #L226c3a.  if v3 == v2 then goto L226c40;
  #L226c3e.  goto L226c48;
  #L226c40.  v1:= v1 + 1;
  #L226c44.  goto L226c28;
  #L226c46.  v0:= v6;
  #L226c48.  return v0;
}
procedure `int` `i`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v10 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v11 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.i:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L226f4c.  call temp:= `i`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.i:()S` @kind interface;
  #L226f52.  v0:= temp;
  #L226f54.  v1:= 255I;
  #L226f58.  v2:= 3I;
  #L226f5a.  v3:= "DfltImageHeaderParser" @kind object;
  #L226f5e.  v4:= -1I;
  #L226f60.  if v0 == v1 then goto L226f8c;
  #L226f64.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L226f6a.  v11:= temp;
  #L226f6c.  if v11 == 0 then goto L226f8a;
  #L226f70.  v11:= new `java.lang.StringBuilder`;
  #L226f74.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L226f7a.  v1:= "Unknown segmentId=" @kind object;
  #L226f7e.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226f84.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L226f8a.  return v4;
  #L226f8c.  call temp:= `i`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.i:()S` @kind interface;
  #L226f92.  v0:= temp;
  #L226f94.  v1:= 218I;
  #L226f98.  if v0 != v1 then goto L226f9e;
  #L226f9c.  return v4;
  #L226f9e.  v1:= 217I;
  #L226fa2.  if v0 != v1 then goto L226fae;
  #L226fa6.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L226fac.  return v4;
  #L226fae.  call temp:= `g`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.g:()I` @kind interface;
  #L226fb4.  v1:= temp;
  #L226fb6.  v1:= v1 + -2;
  #L226fba.  v5:= 225I;
  #L226fbe.  if v0 == v5 then goto L22701c;
  #L226fc2.  v5:= (`long`) v1 @kind i2l;
  #L226fc4.  call temp:= `f`(v11, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.f:(J)J` @kind interface;
  #L226fca.  v7:= temp @kind wide;
  #L226fcc.  v9:= lcmp(v7, v5);
  #L226fd0.  if v9 == 0 then goto L226f4c;
  #L226fd4.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L226fda.  v11:= temp;
  #L226fdc.  if v11 == 0 then goto L22701a;
  #L226fe0.  v11:= new `java.lang.StringBuilder`;
  #L226fe4.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L226fea.  v2:= "Unable to skip enough data, type: " @kind object;
  #L226fee.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226ff4.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L226ffa.  v0:= ", wanted to skip: " @kind object;
  #L226ffe.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227004.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L22700a.  v0:= ", but actually skipped: " @kind object;
  #L22700e.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227014.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L22701a.  return v4;
  #L22701c.  return v1;
}
procedure `int` `j`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v12 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.j:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L227030.  v0:= 6I;
  #L227032.  call temp:= `a`(v12, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L227038.  v1:= temp;
  #L22703a.  v2:= 18761I;
  #L22703e.  v3:= 3I;
  #L227040.  v4:= "DfltImageHeaderParser" @kind object;
  #L227044.  if v1 == v2 then goto L227082;
  #L227048.  v2:= 19789I;
  #L22704c.  if v1 == v2 then goto L22707c;
  #L227050.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L227056.  v2:= temp;
  #L227058.  if v2 == 0 then goto L227076;
  #L22705c.  v2:= new `java.lang.StringBuilder`;
  #L227060.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L227066.  v5:= "Unknown endianness = " @kind object;
  #L22706a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227070.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L227076.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L22707a.  goto L227086;
  #L22707c.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L227080.  goto L227086;
  #L227082.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L227086.  call `e`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.e:(Ljava/nio/ByteOrder;)V` @kind virtual;
  #L22708c.  v1:= 10I;
  #L227090.  call temp:= `b`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @kind virtual;
  #L227096.  v1:= temp;
  #L227098.  v1:= v1 + v0 @kind int;
  #L22709a.  call temp:= `a`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L2270a0.  v0:= temp;
  #L2270a2.  v2:= 0I;
  #L2270a4.  if v2 >= v0 then goto L227248;
  #L2270a8.  call temp:= `d`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.d:(II)I` @kind static;
  #L2270ae.  v5:= temp;
  #L2270b0.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L2270b6.  v6:= temp;
  #L2270b8.  v7:= 274I;
  #L2270bc.  if v6 == v7 then goto L2270c4;
  #L2270c0.  goto L227240;
  #L2270c4.  v7:= v5 + 2;
  #L2270c8.  call temp:= `a`(v12, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L2270ce.  v7:= temp;
  #L2270d0.  v8:= 1I;
  #L2270d2.  if v7 < v8 then goto L22721a;
  #L2270d6.  v8:= 12I;
  #L2270da.  if v7 <= v8 then goto L2270e2;
  #L2270de.  goto L22721a;
  #L2270e2.  v8:= v5 + 4;
  #L2270e6.  call temp:= `b`(v12, v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @kind virtual;
  #L2270ec.  v8:= temp;
  #L2270ee.  if v8 >= 0 then goto L2270fc;
  #L2270f2.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2270f8.  goto L227240;
  #L2270fc.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L227102.  v9:= temp;
  #L227104.  v10:= " tagType=" @kind object;
  #L227108.  if v9 == 0 then goto L227152;
  #L22710c.  v9:= new `java.lang.StringBuilder`;
  #L227110.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L227116.  v11:= "Got tagIndex=" @kind object;
  #L22711a.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227120.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L227126.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22712c.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L227132.  v11:= " formatCode=" @kind object;
  #L227136.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22713c.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L227142.  v11:= " componentCount=" @kind object;
  #L227146.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22714c.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L227152.  v9:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @type ^`int`[] @kind object;
  #L227156.  v9:= v9[v7];
  #L22715a.  v8:= v8 + v9 @kind int;
  #L22715c.  v9:= 4I;
  #L22715e.  if v8 <= v9 then goto L22718a;
  #L227162.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L227168.  v5:= temp;
  #L22716a.  if v5 == 0 then goto L227240;
  #L22716e.  v5:= new `java.lang.StringBuilder`;
  #L227172.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L227178.  v6:= "Got byte count > 4, not orientation, continuing, formatCode=" @kind object;
  #L22717c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227182.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L227188.  goto L227240;
  #L22718a.  v5:= v5 + 8;
  #L22718e.  if v5 < 0 then goto L2271e6;
  #L227192.  call temp:= `d`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.d:()I` @kind virtual;
  #L227198.  v7:= temp;
  #L22719a.  if v5 <= v7 then goto L2271a0;
  #L22719e.  goto L2271e6;
  #L2271a0.  if v8 < 0 then goto L2271be;
  #L2271a4.  v8:= v8 + v5 @kind int;
  #L2271a6.  call temp:= `d`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.d:()I` @kind virtual;
  #L2271ac.  v7:= temp;
  #L2271ae.  if v8 <= v7 then goto L2271b4;
  #L2271b2.  goto L2271be;
  #L2271b4.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L2271ba.  v12:= temp;
  #L2271bc.  return v12;
  #L2271be.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2271c4.  v5:= temp;
  #L2271c6.  if v5 == 0 then goto L227240;
  #L2271ca.  v5:= new `java.lang.StringBuilder`;
  #L2271ce.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2271d4.  v7:= "Illegal number of bytes for TI tag data tagType=" @kind object;
  #L2271d8.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2271de.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2271e4.  goto L227240;
  #L2271e6.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2271ec.  v7:= temp;
  #L2271ee.  if v7 == 0 then goto L227240;
  #L2271f2.  v7:= new `java.lang.StringBuilder`;
  #L2271f6.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2271fc.  v8:= "Illegal tagValueOffset=" @kind object;
  #L227200.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227206.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L22720c.  call temp:= `append`(v7, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227212.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L227218.  goto L227240;
  #L22721a.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L227220.  v5:= temp;
  #L227222.  if v5 == 0 then goto L227240;
  #L227226.  v5:= new `java.lang.StringBuilder`;
  #L22722a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L227230.  v6:= "Got invalid format code = " @kind object;
  #L227234.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22723a.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L227240.  v2:= v2 + 1;
  #L227244.  goto L2270a4;
  #L227248.  v12:= -1I;
  #L22724a.  return v12;
}
procedure `int` `k`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v3 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v4 @kind object, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.k:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;[BI)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L22725c.  call temp:= `h`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.h:([BI)I` @kind interface;
  #L227262.  v4:= temp;
  #L227264.  v0:= -1I;
  #L227266.  v1:= 3I;
  #L227268.  v2:= "DfltImageHeaderParser" @kind object;
  #L22726c.  if v4 == v6 then goto L2272a8;
  #L227270.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L227276.  v5:= temp;
  #L227278.  if v5 == 0 then goto L2272a6;
  #L22727c.  v5:= new `java.lang.StringBuilder`;
  #L227280.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L227286.  v1:= "Unable to read exif segment data, length: " @kind object;
  #L22728a.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227290.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L227296.  v6:= ", actually read: " @kind object;
  #L22729a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2272a0.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2272a6.  return v0;
  #L2272a8.  call temp:= `h`(v3, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.h:([BI)Z` @kind direct;
  #L2272ae.  v4:= temp;
  #L2272b0.  if v4 == 0 then goto L2272c8;
  #L2272b4.  v4:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b`;
  #L2272b8.  call `<init>`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.<init>:([BI)V` @kind direct;
  #L2272be.  call temp:= `j`(v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.j:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;)I` @kind static;
  #L2272c4.  v4:= temp;
  #L2272c6.  return v4;
  #L2272c8.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2272ce.  return v0;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226e08.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a`;
  #L226e0c.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L226e12.  v2:= temp @kind object;
  #L226e14.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L226e18.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L226e1e.  call temp:= `f`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.f:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L226e24.  v2:= temp @kind object;
  #L226e26.  return v2 @kind object;
}
procedure `int` `b`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.io.InputStream` v2 @kind object, `u0.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.b:(Ljava/io/InputStream;Lu0/b;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226f10.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c`;
  #L226f14.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L226f1a.  v2:= temp @kind object;
  #L226f1c.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L226f20.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L226f26.  call temp:= `d`(v3) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L226f2c.  v2:= temp @kind object;
  #L226f2e.  v2:= (`u0.b`) v2 @kind object;
  #L226f32.  call temp:= `e`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.e:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lu0/b;)I` @kind direct;
  #L226f38.  v2:= temp;
  #L226f3a.  return v2;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `c`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.c:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226dd8.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c`;
  #L226ddc.  call temp:= `d`(v2) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L226de2.  v2:= temp @kind object;
  #L226de4.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L226de8.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L226dee.  call temp:= `f`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.f:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L226df4.  v2:= temp @kind object;
  #L226df6.  return v2 @kind object;
}
