record `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` @kind interface {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L226968.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22696e.  v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a.a` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L226972.  v0:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L226976.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L22697c.  return @kind void;
}
procedure `long` `f`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a` v2 @kind this, `long` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.f:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2268e4.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2268e8.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L2268ee.  v0:= temp;
  #L2268f0.  v0:= (`long`) v0 @kind i2l;
  #L2268f2.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2268f8.  v3:= temp @kind wide;
  #L2268fa.  v4:= (`int`) v3 @kind l2i;
  #L2268fc.  v3:= v2.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L226900.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L226906.  v0:= temp;
  #L226908.  v0:= v0 + v4 @kind int;
  #L22690a.  call temp:= `position`(v3, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L226910.  v3:= (`long`) v4 @kind i2l;
  #L226912.  return v3 @kind wide;
}
procedure `int` `g`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L226880.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.i:()S` @kind virtual;
  #L226886.  v0:= temp;
  #L226888.  v0:= v0 ^< 8;
  #L22688c.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.i:()S` @kind virtual;
  #L226892.  v1:= temp;
  #L226894.  v0:= v0 ^| v1 @kind int;
  #L226896.  return v0;
}
procedure `int` `h`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.h:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2268a8.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2268ac.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L2268b2.  v0:= temp;
  #L2268b4.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2268ba.  v4:= temp;
  #L2268bc.  if v4 != 0 then goto L2268c4;
  #L2268c0.  v3:= -1I;
  #L2268c2.  return v3;
  #L2268c4.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2268c8.  v1:= 0I;
  #L2268ca.  call temp:= `get`(v0, v3, v1, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2268d0.  return v4;
}
procedure `short` `i`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.i:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L226924.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L226928.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L22692e.  v0:= temp;
  #L226930.  v1:= 1I;
  #L226932.  if v0 < v1 then goto L22694a;
  #L226936.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L22693a.  call temp:= `get`(v0) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L226940.  v0:= temp;
  #L226942.  v0:= v0 ^& 255;
  #L226946.  v0:= (`short`) v0 @kind i2s;
  #L226948.  return v0;
  #L22694a.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException`;
  #L22694e.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader$EndOfFileException;.<init>:()V` @kind direct;
  #L226954.  throw v0;
}
