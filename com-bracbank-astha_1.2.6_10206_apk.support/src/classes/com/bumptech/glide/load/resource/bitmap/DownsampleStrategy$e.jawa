record `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$e` @kind class @AccessFlag  extends `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$e` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2275ac.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;.<init>:()V` @kind direct;
  #L2275b2.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` `a`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$e` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$e;.a:(IIII)Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$SampleSizeRounding;` @AccessFlag PUBLIC {
    temp;

  #L227534.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.i` @type ^`boolean` @kind boolean;
  #L227538.  if v1 == 0 then goto L227542;
  #L22753c.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding.b` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` @kind object;
  #L227540.  return v1 @kind object;
  #L227542.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding.a` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` @kind object;
  #L227546.  return v1 @kind object;
}
procedure `float` `b`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$e` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$e;.b:(IIII)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L227558.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.i` @type ^`boolean` @kind boolean;
  #L22755c.  if v0 == 0 then goto L227576;
  #L227560.  v4:= (`float`) v4 @kind i2f;
  #L227562.  v2:= (`float`) v2 @kind i2f;
  #L227564.  v4:= v4 / v2 @kind float;
  #L227566.  v2:= (`float`) v5 @kind i2f;
  #L227568.  v3:= (`float`) v3 @kind i2f;
  #L22756a.  v2:= v2 / v3 @kind float;
  #L22756c.  call temp:= `min`(v4, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L227572.  v2:= temp;
  #L227574.  return v2;
  #L227576.  v3:= v3 / v5 @kind int;
  #L227578.  v2:= v2 / v4 @kind int;
  #L22757a.  call temp:= `max`(v3, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L227580.  v2:= temp;
  #L227582.  v3:= 1.0F;
  #L227586.  if v2 != 0 then goto L22758c;
  #L22758a.  goto L227598;
  #L22758c.  call temp:= `highestOneBit`(v2) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L227592.  v2:= temp;
  #L227594.  v2:= (`float`) v2 @kind i2f;
  #L227596.  v3:= v3 / v2 @kind float;
  #L227598.  return v3;
}
