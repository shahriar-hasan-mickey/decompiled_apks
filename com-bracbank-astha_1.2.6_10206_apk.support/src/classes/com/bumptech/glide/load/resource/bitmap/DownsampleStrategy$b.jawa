record `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$b` @kind class @AccessFlag  extends `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$b` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L227448.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;.<init>:()V` @kind direct;
  #L22744e.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` `a`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$b` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$b;.a:(IIII)Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$SampleSizeRounding;` @AccessFlag PUBLIC {
    temp;

  #L2273d8.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding.a` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` @kind object;
  #L2273dc.  return v1 @kind object;
}
procedure `float` `b`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$b` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$b;.b:(IIII)F` @AccessFlag PUBLIC {
    temp;

  #L2273f0.  v2:= (`float`) v2 @kind i2f;
  #L2273f2.  v4:= (`float`) v4 @kind i2f;
  #L2273f4.  v2:= v2 / v4 @kind float;
  #L2273f6.  v1:= (`float`) v1 @kind i2f;
  #L2273f8.  v3:= (`float`) v3 @kind i2f;
  #L2273fa.  v1:= v1 / v3 @kind float;
  #L2273fc.  call temp:= `max`(v2, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L227402.  v1:= temp;
  #L227404.  v1:= (`double`) v1 @kind f2d;
  #L227406.  call temp:= `ceil`(v1) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L22740c.  v1:= temp @kind wide;
  #L22740e.  v1:= (`int`) v1 @kind d2i;
  #L227410.  call temp:= `highestOneBit`(v1) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L227416.  v2:= temp;
  #L227418.  v3:= 1I;
  #L22741a.  call temp:= `max`(v3, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L227420.  v2:= temp;
  #L227422.  if v2 >= v1 then goto L227428;
  #L227426.  goto L22742a;
  #L227428.  v3:= 0I;
  #L22742a.  v1:= v2 ^< v3 @kind int;
  #L22742e.  v2:= 1.0F;
  #L227432.  v1:= (`float`) v1 @kind i2f;
  #L227434.  v2:= v2 / v1 @kind float;
  #L227436.  return v2;
}
