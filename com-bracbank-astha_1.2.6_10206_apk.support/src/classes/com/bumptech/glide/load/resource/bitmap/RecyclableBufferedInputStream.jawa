record `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind class @AccessFlag PUBLIC extends `java.io.FilterInputStream` @kind class {
  `byte`[] `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @AccessFlag PRIVATE_VOLATILE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @AccessFlag PRIVATE;
  `u0.b` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this, `java.io.InputStream` v2 @kind object, `u0.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lu0/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2292e8.  v0:= 65536I;
  #L2292ec.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lu0/b;I)V` @kind direct;
  #L2292f2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `u0.b` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lu0/b;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L229304.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L22930a.  v1:= -1I;
  #L22930c.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v1;
  #L229310.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`u0.b` := v2 @kind object;
  #L229314.  v1:= constclass @type ^`byte`[] @kind object;
  #L229318.  call temp:= `d`(v2, v3, v1) @signature `Lu0/b;.d:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L22931e.  v1:= temp @kind object;
  #L229320.  v1:= (`byte`[]) v1 @kind object;
  #L229324.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v1 @kind object;
  #L229328.  return @kind void;
}
procedure `int` `g`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this, `java.io.InputStream` v6 @kind object, `byte`[] v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.g:(Ljava/io/InputStream;[B)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L228ea8.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L228eac.  v1:= -1I;
  #L228eae.  v2:= 0I;
  #L228eb0.  if v0 == v1 then goto L228f56;
  #L228eb4.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L228eb8.  v3:= v3 - v0 @kind int;
  #L228eba.  v4:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L228ebe.  if v3 < v4 then goto L228ec4;
  #L228ec2.  goto L228f56;
  #L228ec4.  if v0 != 0 then goto L228f14;
  #L228ec8.  v1:= length @variable v7;
  #L228eca.  if v4 <= v1 then goto L228f14;
  #L228ece.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L228ed2.  v3:= length @variable v7;
  #L228ed4.  if v1 != v3 then goto L228f14;
  #L228ed8.  v0:= length @variable v7;
  #L228eda.  v0:= v0 * 2;
  #L228ede.  if v0 <= v4 then goto L228ee4;
  #L228ee2.  goto L228ee6;
  #L228ee4.  v4:= v0;
  #L228ee6.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`u0.b` @kind object;
  #L228eea.  v1:= constclass @type ^`byte`[] @kind object;
  #L228eee.  call temp:= `d`(v0, v4, v1) @signature `Lu0/b;.d:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L228ef4.  v0:= temp @kind object;
  #L228ef6.  v0:= (`byte`[]) v0 @kind object;
  #L228efa.  v1:= length @variable v7;
  #L228efc.  call `arraycopy`(v7, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L228f02.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v0 @kind object;
  #L228f06.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`u0.b` @kind object;
  #L228f0a.  call `put`(v1, v7) @signature `Lu0/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L228f10.  v7:= v0 @kind object;
  #L228f12.  goto L228f22;
  #L228f14.  if v0 <= 0 then goto L228f22;
  #L228f18.  v1:= length @variable v7;
  #L228f1a.  v1:= v1 - v0 @kind int;
  #L228f1c.  call `arraycopy`(v7, v0, v7, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L228f22.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L228f26.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L228f2a.  v0:= v0 - v1 @kind int;
  #L228f2c.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v0;
  #L228f30.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v2;
  #L228f34.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int` := v2;
  #L228f38.  v1:= length @variable v7;
  #L228f3a.  v1:= v1 - v0 @kind int;
  #L228f3c.  call temp:= `read`(v6, v7, v0, v1) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L228f42.  v6:= temp;
  #L228f44.  v7:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L228f48.  if v6 > 0 then goto L228f4e;
  #L228f4c.  goto L228f50;
  #L228f4e.  v7:= v7 + v6 @kind int;
  #L228f50.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int` := v7;
  #L228f54.  return v6;
  #L228f56.  call temp:= `read`(v6, v7) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L228f5c.  v6:= temp;
  #L228f5e.  if v6 <= 0 then goto L228f6e;
  #L228f62.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v1;
  #L228f66.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v2;
  #L228f6a.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int` := v6;
  #L228f6e.  return v6;
}
procedure `java.io.IOException` `s`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.s:()Ljava/io/IOException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2291a4.  v0:= new `java.io.IOException`;
  #L2291a8.  v1:= "BufferedInputStream is closed" @kind object;
  #L2291ac.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2291b2.  throw v0;
}
procedure `int` `available`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L228e48.  @monitorenter v3
  #L228e4a.  v0:= v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L228e4e.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L228e52.  if v1 == 0 then goto L228e72;
  #L228e56.  if v0 == 0 then goto L228e72;
  #L228e5a.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L228e5e.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L228e62.  v1:= v1 - v2 @kind int;
  #L228e64.  call temp:= `available`(v0) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L228e6a.  v0:= temp;
  #L228e6c.  v1:= v1 + v0 @kind int;
  #L228e6e.  @monitorexit v3
  #L228e70.  return v1;
  #L228e72.  call temp:= `s`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.s:()Ljava/io/IOException;` @kind static;
  #L228e78.  v0:= temp @kind object;
  #L228e7a.  throw v0;
  #L228e7c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L228e7e.  @monitorexit v3
  #L228e80.  throw v0;
  catch `java.lang.Throwable` @[L228e4a..L228e6c] goto L228e7c;
  catch `java.lang.Throwable` @[L228e72..L228e7c] goto L228e7c;
}
procedure `void` `close`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22933c.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L229340.  v1:= 0I;
  #L229342.  if v0 == 0 then goto L229358;
  #L229346.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`u0.b` @kind object;
  #L22934a.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L22934e.  call `put`(v0, v2) @signature `Lu0/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L229354.  v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v1 @kind object;
  #L229358.  v0:= v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L22935c.  v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` := v1 @kind object;
  #L229360.  if v0 == 0 then goto L22936a;
  #L229364.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L22936a.  return @kind void;
}
procedure `void` `h`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22937c.  @monitorenter v1
  #L22937e.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L229382.  v0:= length @variable v0;
  #L229384.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int` := v0;
  #L229388.  @monitorexit v1
  #L22938a.  return @kind void;
  #L22938c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22938e.  @monitorexit v1
  #L229390.  throw v0;
  catch `java.lang.Throwable` @[L22937e..L229388] goto L22938c;
}
procedure `void` `mark`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2293b0.  @monitorenter v1
  #L2293b2.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L2293b6.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2293bc.  v2:= temp;
  #L2293be.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int` := v2;
  #L2293c2.  v2:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L2293c6.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v2;
  #L2293ca.  @monitorexit v1
  #L2293cc.  return @kind void;
  #L2293ce.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2293d0.  @monitorexit v1
  #L2293d2.  throw v2;
  catch `java.lang.Throwable` @[L2293b2..L2293ca] goto L2293ce;
}
procedure `boolean` `markSupported`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L228e34.  v0:= 1I;
  #L228e36.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L228f80.  @monitorenter v5
  #L228f82.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L228f86.  v1:= v5.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L228f8a.  if v0 == 0 then goto L228ff2;
  #L228f8e.  if v1 == 0 then goto L228ff2;
  #L228f92.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L228f96.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L228f9a.  v4:= -1I;
  #L228f9c.  if v2 < v3 then goto L228fb0;
  #L228fa0.  call temp:= `g`(v5, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.g:(Ljava/io/InputStream;[B)I` @kind direct;
  #L228fa6.  v1:= temp;
  #L228fa8.  if v1 != v4 then goto L228fb0;
  #L228fac.  @monitorexit v5
  #L228fae.  return v4;
  #L228fb0.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L228fb4.  if v0 == v1 then goto L228fcc;
  #L228fb8.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L228fbc.  if v0 == 0 then goto L228fc2;
  #L228fc0.  goto L228fcc;
  #L228fc2.  call temp:= `s`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.s:()Ljava/io/IOException;` @kind static;
  #L228fc8.  v0:= temp @kind object;
  #L228fca.  throw v0;
  #L228fcc.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L228fd0.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L228fd4.  v1:= v1 - v2 @kind int;
  #L228fd6.  if v1 <= 0 then goto L228fee;
  #L228fda.  v1:= v2 + 1;
  #L228fde.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L228fe2.  v0:= v0[v2] @kind byte;
  #L228fe6.  v0:= v0 ^& 255;
  #L228fea.  @monitorexit v5
  #L228fec.  return v0;
  #L228fee.  @monitorexit v5
  #L228ff0.  return v4;
  #L228ff2.  call temp:= `s`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.s:()Ljava/io/IOException;` @kind static;
  #L228ff8.  v0:= temp @kind object;
  #L228ffa.  throw v0;
  #L228ffc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L228ffe.  @monitorexit v5
  #L229000.  throw v0;
  catch `java.lang.Throwable` @[L228f82..L228fa8] goto L228ffc;
  catch `java.lang.Throwable` @[L228fb0..L228fe6] goto L228ffc;
  catch `java.lang.Throwable` @[L228ff2..L228ffc] goto L228ffc;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L229030.  @monitorenter v6
  #L229032.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L229036.  if v0 == 0 then goto L229146;
  #L22903a.  if v9 != 0 then goto L229044;
  #L22903e.  v7:= 0I;
  #L229040.  @monitorexit v6
  #L229042.  return v7;
  #L229044.  v1:= v6.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L229048.  if v1 == 0 then goto L22913c;
  #L22904c.  v2:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L229050.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L229054.  if v2 >= v3 then goto L229094;
  #L229058.  v4:= v3 - v2 @kind int;
  #L22905c.  if v4 < v9 then goto L229064;
  #L229060.  v3:= v9;
  #L229062.  goto L229066;
  #L229064.  v3:= v3 - v2 @kind int;
  #L229066.  call `arraycopy`(v0, v2, v7, v8, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L22906c.  v2:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L229070.  v2:= v2 + v3 @kind int;
  #L229072.  v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v2;
  #L229076.  if v3 == v9 then goto L229090;
  #L22907a.  call temp:= `available`(v1) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L229080.  v2:= temp;
  #L229082.  if v2 != 0 then goto L229088;
  #L229086.  goto L229090;
  #L229088.  v8:= v8 + v3 @kind int;
  #L22908a.  v2:= v9 - v3 @kind int;
  #L22908e.  goto L229096;
  #L229090.  @monitorexit v6
  #L229092.  return v3;
  #L229094.  v2:= v9;
  #L229096.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L22909a.  v4:= -1I;
  #L22909c.  if v3 != v4 then goto L2290c0;
  #L2290a0.  v3:= length @variable v0;
  #L2290a2.  if v2 < v3 then goto L2290c0;
  #L2290a6.  call temp:= `read`(v1, v7, v8, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L2290ac.  v3:= temp;
  #L2290ae.  if v3 != v4 then goto L22911c;
  #L2290b2.  if v2 != v9 then goto L2290b8;
  #L2290b6.  goto L2290bc;
  #L2290b8.  v4:= v9 - v2 @kind int;
  #L2290bc.  @monitorexit v6
  #L2290be.  return v4;
  #L2290c0.  call temp:= `g`(v6, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.g:(Ljava/io/InputStream;[B)I` @kind direct;
  #L2290c6.  v3:= temp;
  #L2290c8.  if v3 != v4 then goto L2290da;
  #L2290cc.  if v2 != v9 then goto L2290d2;
  #L2290d0.  goto L2290d6;
  #L2290d2.  v4:= v9 - v2 @kind int;
  #L2290d6.  @monitorexit v6
  #L2290d8.  return v4;
  #L2290da.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L2290de.  if v0 == v3 then goto L2290f6;
  #L2290e2.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L2290e6.  if v0 == 0 then goto L2290ec;
  #L2290ea.  goto L2290f6;
  #L2290ec.  call temp:= `s`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.s:()Ljava/io/IOException;` @kind static;
  #L2290f2.  v7:= temp @kind object;
  #L2290f4.  throw v7;
  #L2290f6.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L2290fa.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L2290fe.  v5:= v3 - v4 @kind int;
  #L229102.  if v5 < v2 then goto L22910a;
  #L229106.  v3:= v2;
  #L229108.  goto L22910c;
  #L22910a.  v3:= v3 - v4 @kind int;
  #L22910c.  call `arraycopy`(v0, v4, v7, v8, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L229112.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L229116.  v4:= v4 + v3 @kind int;
  #L229118.  v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v4;
  #L22911c.  v2:= v2 - v3 @kind int;
  #L22911e.  if v2 != 0 then goto L229126;
  #L229122.  @monitorexit v6
  #L229124.  return v9;
  #L229126.  call temp:= `available`(v1) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L22912c.  v4:= temp;
  #L22912e.  if v4 != 0 then goto L229138;
  #L229132.  v9:= v9 - v2 @kind int;
  #L229134.  @monitorexit v6
  #L229136.  return v9;
  #L229138.  v8:= v8 + v3 @kind int;
  #L22913a.  goto L229096;
  #L22913c.  call temp:= `s`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.s:()Ljava/io/IOException;` @kind static;
  #L229142.  v7:= temp @kind object;
  #L229144.  throw v7;
  #L229146.  call temp:= `s`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.s:()Ljava/io/IOException;` @kind static;
  #L22914c.  v7:= temp @kind object;
  #L22914e.  throw v7;
  #L229150.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L229152.  @monitorexit v6
  #L229154.  throw v7;
  catch `java.lang.Throwable` @[L229032..L229036] goto L229150;
  catch `java.lang.Throwable` @[L229044..L229082] goto L229150;
  catch `java.lang.Throwable` @[L229096..L2290ae] goto L229150;
  catch `java.lang.Throwable` @[L2290c0..L2290c8] goto L229150;
  catch `java.lang.Throwable` @[L2290da..L22911c] goto L229150;
  catch `java.lang.Throwable` @[L229126..L22912e] goto L229150;
  catch `java.lang.Throwable` @[L22913c..L229150] goto L229150;
}
procedure `void` `release`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.release:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2293f0.  @monitorenter v2
  #L2293f2.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L2293f6.  if v0 == 0 then goto L22940e;
  #L2293fa.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`u0.b` @kind object;
  #L2293fe.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L229402.  call `put`(v0, v1) @signature `Lu0/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L229408.  v0:= 0I;
  #L22940a.  v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v0 @kind object;
  #L22940e.  @monitorexit v2
  #L229410.  return @kind void;
  #L229412.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L229414.  @monitorexit v2
  #L229416.  throw v0;
  catch `java.lang.Throwable` @[L2293f2..L22940e] goto L229412;
}
procedure `void` `reset`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L229434.  @monitorenter v3
  #L229436.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L22943a.  if v0 == 0 then goto L229496;
  #L22943e.  v0:= -1I;
  #L229440.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L229444.  if v0 == v1 then goto L229450;
  #L229448.  v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L22944c.  @monitorexit v3
  #L22944e.  return @kind void;
  #L229450.  v0:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException`;
  #L229454.  v1:= new `java.lang.StringBuilder`;
  #L229458.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22945e.  v2:= "Mark has been invalidated, pos: " @kind object;
  #L229462.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L229468.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L22946c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L229472.  v2:= " markLimit: " @kind object;
  #L229476.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22947c.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L229480.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L229486.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22948c.  v1:= temp @kind object;
  #L22948e.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream$InvalidMarkException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L229494.  throw v0;
  #L229496.  v0:= new `java.io.IOException`;
  #L22949a.  v1:= "Stream is closed" @kind object;
  #L22949e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2294a4.  throw v0;
  #L2294a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2294a8.  @monitorexit v3
  #L2294aa.  throw v0;
  catch `java.lang.Throwable` @[L229436..L22944c] goto L2294a6;
  catch `java.lang.Throwable` @[L229450..L2294a6] goto L2294a6;
}
procedure `long` `skip`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v9 @kind this, `long` v10 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2291c4.  @monitorenter v9
  #L2291c6.  v0:= 1L;
  #L2291ca.  v2:= lcmp(v10, v0);
  #L2291ce.  if v2 >= 0 then goto L2291da;
  #L2291d2.  v10:= 0L;
  #L2291d6.  @monitorexit v9
  #L2291d8.  return v10 @kind wide;
  #L2291da.  v0:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L2291de.  if v0 == 0 then goto L229294;
  #L2291e2.  v1:= v9.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L2291e6.  if v1 == 0 then goto L22928a;
  #L2291ea.  v2:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L2291ee.  v3:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L2291f2.  v4:= v2 - v3 @kind int;
  #L2291f6.  v4:= (`long`) v4 @kind i2l;
  #L2291f8.  v6:= lcmp(v4, v10);
  #L2291fc.  if v6 < 0 then goto L22920e;
  #L229200.  v0:= (`long`) v3 @kind i2l;
  #L229202.  v0:= v0 + v10 @kind long;
  #L229204.  v1:= (`int`) v0 @kind l2i;
  #L229206.  v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L22920a.  @monitorexit v9
  #L22920c.  return v10 @kind wide;
  #L22920e.  v4:= (`long`) v2 @kind i2l;
  #L229210.  v6:= (`long`) v3 @kind i2l;
  #L229212.  v4:= v4 - v6 @kind long;
  #L229214.  v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v2;
  #L229218.  v2:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L22921c.  v3:= -1I;
  #L22921e.  if v2 == v3 then goto L22927a;
  #L229222.  v2:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L229226.  v6:= (`long`) v2 @kind i2l;
  #L229228.  v2:= lcmp(v10, v6);
  #L22922c.  if v2 > 0 then goto L22927a;
  #L229230.  call temp:= `g`(v9, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.g:(Ljava/io/InputStream;[B)I` @kind direct;
  #L229236.  v0:= temp;
  #L229238.  if v0 != v3 then goto L229240;
  #L22923c.  @monitorexit v9
  #L22923e.  return v4 @kind wide;
  #L229240.  v0:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L229244.  v1:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L229248.  v2:= v0 - v1 @kind int;
  #L22924c.  v2:= (`long`) v2 @kind i2l;
  #L22924e.  v6:= v10 - v4 @kind long;
  #L229252.  v8:= lcmp(v2, v6);
  #L229256.  if v8 < 0 then goto L22926a;
  #L22925a.  v0:= (`long`) v1 @kind i2l;
  #L22925c.  v0:= v0 + v10 @kind long;
  #L22925e.  v0:= v0 - v4 @kind long;
  #L229260.  v1:= (`int`) v0 @kind l2i;
  #L229262.  v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L229266.  @monitorexit v9
  #L229268.  return v10 @kind wide;
  #L22926a.  v10:= (`long`) v0 @kind i2l;
  #L22926c.  v4:= v4 + v10 @kind long;
  #L22926e.  v10:= (`long`) v1 @kind i2l;
  #L229270.  v4:= v4 - v10 @kind long;
  #L229272.  v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v0;
  #L229276.  @monitorexit v9
  #L229278.  return v4 @kind wide;
  #L22927a.  v10:= v10 - v4 @kind long;
  #L22927c.  call temp:= `skip`(v1, v10) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L229282.  v10:= temp @kind wide;
  #L229284.  v4:= v4 + v10 @kind long;
  #L229286.  @monitorexit v9
  #L229288.  return v4 @kind wide;
  #L22928a.  call temp:= `s`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.s:()Ljava/io/IOException;` @kind static;
  #L229290.  v10:= temp @kind object;
  #L229292.  throw v10;
  #L229294.  call temp:= `s`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.s:()Ljava/io/IOException;` @kind static;
  #L22929a.  v10:= temp @kind object;
  #L22929c.  throw v10;
  #L22929e.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2292a0.  @monitorexit v9
  #L2292a2.  throw v10;
  catch `java.lang.Throwable` @[L2291da..L22920a] goto L22929e;
  catch `java.lang.Throwable` @[L229214..L229238] goto L22929e;
  catch `java.lang.Throwable` @[L229240..L229266] goto L22929e;
  catch `java.lang.Throwable` @[L229272..L229276] goto L22929e;
  catch `java.lang.Throwable` @[L22927c..L229284] goto L22929e;
  catch `java.lang.Throwable` @[L22928a..L22929e] goto L22929e;
}
