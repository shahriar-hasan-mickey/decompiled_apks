record `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` @kind interface {
  `java.io.InputStream` `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L226bb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L226bbe.  v0.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L226bc2.  return @kind void;
}
procedure `long` `f`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v7 @kind this, `long` v8 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.f:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L226b24.  v0:= 0L;
  #L226b28.  v2:= lcmp(v8, v0);
  #L226b2c.  if v2 >= 0 then goto L226b32;
  #L226b30.  return v0 @kind wide;
  #L226b32.  v2:= v8 @kind wide;
  #L226b34.  v4:= lcmp(v2, v0);
  #L226b38.  if v4 <= 0 then goto L226b6e;
  #L226b3c.  v4:= v7.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` @kind object;
  #L226b40.  call temp:= `skip`(v4, v2) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L226b46.  v4:= temp @kind wide;
  #L226b48.  v6:= lcmp(v4, v0);
  #L226b4c.  if v6 <= 0 then goto L226b54;
  #L226b50.  v2:= v2 - v4 @kind long;
  #L226b52.  goto L226b34;
  #L226b54.  v4:= v7.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` @kind object;
  #L226b58.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L226b5e.  v4:= temp;
  #L226b60.  v5:= -1I;
  #L226b62.  if v4 != v5 then goto L226b68;
  #L226b66.  goto L226b6e;
  #L226b68.  v4:= 1L;
  #L226b6c.  goto L226b50;
  #L226b6e.  v8:= v8 - v2 @kind long;
  #L226b70.  return v8 @kind wide;
}
procedure `int` `g`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L226ab0.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.i:()S` @kind virtual;
  #L226ab6.  v0:= temp;
  #L226ab8.  v0:= v0 ^< 8;
  #L226abc.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.i:()S` @kind virtual;
  #L226ac2.  v1:= temp;
  #L226ac4.  v0:= v0 ^| v1 @kind int;
  #L226ac6.  return v0;
}
procedure `int` `h`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.h:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L226ad8.  v0:= 0I;
  #L226ada.  v1:= 0I;
  #L226adc.  v2:= -1I;
  #L226ade.  if v0 >= v6 then goto L226afa;
  #L226ae2.  v1:= v4.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` @kind object;
  #L226ae6.  v3:= v6 - v0 @kind int;
  #L226aea.  call temp:= `read`(v1, v5, v0, v3) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L226af0.  v1:= temp;
  #L226af2.  if v1 == v2 then goto L226afa;
  #L226af6.  v0:= v0 + v1 @kind int;
  #L226af8.  goto L226adc;
  #L226afa.  if v0 != 0 then goto L226b10;
  #L226afe.  if v1 == v2 then goto L226b04;
  #L226b02.  goto L226b10;
  #L226b04.  v5:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException`;
  #L226b08.  call `<init>`(v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader$EndOfFileException;.<init>:()V` @kind direct;
  #L226b0e.  throw v5;
  #L226b10.  return v0;
}
procedure `short` `i`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.i:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L226b84.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` @kind object;
  #L226b88.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L226b8e.  v0:= temp;
  #L226b90.  v1:= -1I;
  #L226b92.  if v0 == v1 then goto L226b9a;
  #L226b96.  v0:= (`short`) v0 @kind i2s;
  #L226b98.  return v0;
  #L226b9a.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException`;
  #L226b9e.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader$EndOfFileException;.<init>:()V` @kind direct;
  #L226ba4.  throw v0;
}
