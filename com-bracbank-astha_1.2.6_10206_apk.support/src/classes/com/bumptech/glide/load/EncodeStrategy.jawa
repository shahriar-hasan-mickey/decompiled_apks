record `com.bumptech.glide.load.EncodeStrategy` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.bumptech.glide.load.EncodeStrategy` `@@com.bumptech.glide.load.EncodeStrategy.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.EncodeStrategy` `@@com.bumptech.glide.load.EncodeStrategy.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.EncodeStrategy` `@@com.bumptech.glide.load.EncodeStrategy.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.EncodeStrategy`[] `@@com.bumptech.glide.load.EncodeStrategy.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L220c04.  v0:= new `com.bumptech.glide.load.EncodeStrategy`;
  #L220c08.  v1:= "SOURCE" @kind object;
  #L220c0c.  v2:= 0I;
  #L220c0e.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L220c14.  `@@com.bumptech.glide.load.EncodeStrategy.a` @type ^`com.bumptech.glide.load.EncodeStrategy` := v0 @kind object;
  #L220c18.  v1:= new `com.bumptech.glide.load.EncodeStrategy`;
  #L220c1c.  v3:= "TRANSFORMED" @kind object;
  #L220c20.  v4:= 1I;
  #L220c22.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L220c28.  `@@com.bumptech.glide.load.EncodeStrategy.b` @type ^`com.bumptech.glide.load.EncodeStrategy` := v1 @kind object;
  #L220c2c.  v3:= new `com.bumptech.glide.load.EncodeStrategy`;
  #L220c30.  v5:= "NONE" @kind object;
  #L220c34.  v6:= 2I;
  #L220c36.  call `<init>`(v3, v5, v6) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L220c3c.  `@@com.bumptech.glide.load.EncodeStrategy.c` @type ^`com.bumptech.glide.load.EncodeStrategy` := v3 @kind object;
  #L220c40.  v5:= 3I;
  #L220c42.  v5:= new `com.bumptech.glide.load.EncodeStrategy`[v5];
  #L220c46.  v5[v2]:= v0 @kind object;
  #L220c4a.  v5[v4]:= v1 @kind object;
  #L220c4e.  v5[v6]:= v3 @kind object;
  #L220c52.  `@@com.bumptech.glide.load.EncodeStrategy.d` @type ^`com.bumptech.glide.load.EncodeStrategy`[] := v5 @kind object;
  #L220c56.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.EncodeStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L220c68.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L220c6e.  return @kind void;
}
procedure `com.bumptech.glide.load.EncodeStrategy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/EncodeStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L220bbc.  v0:= constclass @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L220bc0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L220bc6.  v1:= temp @kind object;
  #L220bc8.  v1:= (`com.bumptech.glide.load.EncodeStrategy`) v1 @kind object;
  #L220bcc.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.EncodeStrategy`[] `values`() @signature `Lcom/bumptech/glide/load/EncodeStrategy;.values:()[Lcom/bumptech/glide/load/EncodeStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L220be0.  v0:= `@@com.bumptech.glide.load.EncodeStrategy.d` @type ^`com.bumptech.glide.load.EncodeStrategy`[] @kind object;
  #L220be4.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/EncodeStrategy;.clone:()Ljava/lang/Object;` @kind virtual;
  #L220bea.  v0:= temp @kind object;
  #L220bec.  v0:= (`com.bumptech.glide.load.EncodeStrategy`[]) v0 @kind object;
  #L220bf0.  return v0 @kind object;
}
