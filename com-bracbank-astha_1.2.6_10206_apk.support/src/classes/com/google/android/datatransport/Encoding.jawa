record `com.google.android.datatransport.Encoding` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `com.google.android.datatransport.Encoding.name` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.datatransport.Encoding` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/android/datatransport/Encoding;.<init>:(Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L22dbe0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22dbe6.  v0:= "name is null" @kind object;
  #L22dbea.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L22dbf0.  v1.`com.google.android.datatransport.Encoding.name` @type ^`java.lang.String` := v2 @kind object;
  #L22dbf4.  return @kind void;
}
procedure `com.google.android.datatransport.Encoding` `of`(`java.lang.String` v1 @kind object) @signature `Lcom/google/android/datatransport/Encoding;.of:(Ljava/lang/String;)Lcom/google/android/datatransport/Encoding;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22db40.  v0:= new `com.google.android.datatransport.Encoding`;
  #L22db44.  call `<init>`(v0, v1) @signature `Lcom/google/android/datatransport/Encoding;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22db4a.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.google.android.datatransport.Encoding` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/android/datatransport/Encoding;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22db04.  if v1 != v2 then goto L22db0c;
  #L22db08.  v2:= 1I;
  #L22db0a.  return v2;
  #L22db0c.  v0:= instanceof @variable v2 @type ^`com.google.android.datatransport.Encoding` @kind boolean;
  #L22db10.  if v0 != 0 then goto L22db18;
  #L22db14.  v2:= 0I;
  #L22db16.  return v2;
  #L22db18.  v0:= v1.`com.google.android.datatransport.Encoding.name` @type ^`java.lang.String` @kind object;
  #L22db1c.  v2:= (`com.google.android.datatransport.Encoding`) v2 @kind object;
  #L22db20.  v2:= v2.`com.google.android.datatransport.Encoding.name` @type ^`java.lang.String` @kind object;
  #L22db24.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22db2a.  v2:= temp;
  #L22db2c.  return v2;
}
procedure `java.lang.String` `getName`(`com.google.android.datatransport.Encoding` v1 @kind this) @signature `Lcom/google/android/datatransport/Encoding;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22db84.  v0:= v1.`com.google.android.datatransport.Encoding.name` @type ^`java.lang.String` @kind object;
  #L22db88.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.google.android.datatransport.Encoding` v2 @kind this) @signature `Lcom/google/android/datatransport/Encoding;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22db5c.  v0:= v2.`com.google.android.datatransport.Encoding.name` @type ^`java.lang.String` @kind object;
  #L22db60.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L22db66.  v0:= temp;
  #L22db68.  v1:= 1000003I;
  #L22db6e.  v0:= v0 ^~ v1 @kind int;
  #L22db70.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.android.datatransport.Encoding` v2 @kind this) @signature `Lcom/google/android/datatransport/Encoding;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22db9c.  v0:= new `java.lang.StringBuilder`;
  #L22dba0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22dba6.  v1:= "Encoding{name=\"" @kind object;
  #L22dbaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22dbb0.  v1:= v2.`com.google.android.datatransport.Encoding.name` @type ^`java.lang.String` @kind object;
  #L22dbb4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22dbba.  v1:= "\"}" @kind object;
  #L22dbbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22dbc4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22dbca.  v0:= temp @kind object;
  #L22dbcc.  return v0 @kind object;
}
