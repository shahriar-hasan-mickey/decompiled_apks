record `com.google.android.datatransport.runtime.scheduling.persistence.c0` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration` @kind interface {
}
global `com.google.android.datatransport.runtime.scheduling.persistence.c0` `@@com.google.android.datatransport.runtime.scheduling.persistence.c0.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c0;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L23c030.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.c0`;
  #L23c034.  call `<init>`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c0;.<init>:()V` @kind direct;
  #L23c03a.  `@@com.google.android.datatransport.runtime.scheduling.persistence.c0.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.c0` := v0 @kind object;
  #L23c03e.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.scheduling.persistence.c0` v0 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c0;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23c050.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23c056.  return @kind void;
}
procedure `void` `upgrade`(`com.google.android.datatransport.runtime.scheduling.persistence.c0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c0;.upgrade:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L23c068.  call `g`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SchemaManager;.g:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L23c06e.  return @kind void;
}
