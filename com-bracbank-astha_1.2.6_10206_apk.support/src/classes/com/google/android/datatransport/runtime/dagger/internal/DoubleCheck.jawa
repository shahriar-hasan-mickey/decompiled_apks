record `com.google.android.datatransport.runtime.dagger.internal.DoubleCheck` @kind class @AccessFlag PUBLIC_FINAL extends `o2.a` @kind interface, `com.google.android.datatransport.runtime.dagger.Lazy` @kind interface {
  `java.lang.Object` `com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.instance` @AccessFlag PRIVATE_VOLATILE;
  `o2.a` `com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.provider` @AccessFlag PRIVATE_VOLATILE;
}
global `boolean` `@@com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `java.lang.Object` `@@com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.UNINITIALIZED` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DoubleCheck;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2353c4.  v0:= new `java.lang.Object`;
  #L2353c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2353ce.  `@@com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.UNINITIALIZED` @type ^`java.lang.Object` := v0 @kind object;
  #L2353d2.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck` v1 @kind this, `o2.a` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DoubleCheck;.<init>:(Lo2/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2353e4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2353ea.  v0:= `@@com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.UNINITIALIZED` @type ^`java.lang.Object` @kind object;
  #L2353ee.  v1.`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.instance` @type ^`java.lang.Object` := v0 @kind object;
  #L2353f2.  v1.`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.provider` @type ^`o2.a` := v2 @kind object;
  #L2353f6.  return @kind void;
}
procedure `com.google.android.datatransport.runtime.dagger.Lazy` `lazy`(`o2.a` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DoubleCheck;.lazy:(Lo2/a;)Lcom/google/android/datatransport/runtime/dagger/Lazy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L235284.  v0:= instanceof @variable v1 @type ^`com.google.android.datatransport.runtime.dagger.Lazy` @kind boolean;
  #L235288.  if v0 == 0 then goto L235292;
  #L23528c.  v1:= (`com.google.android.datatransport.runtime.dagger.Lazy`) v1 @kind object;
  #L235290.  return v1 @kind object;
  #L235292.  v0:= new `com.google.android.datatransport.runtime.dagger.internal.DoubleCheck`;
  #L235296.  call temp:= `checkNotNull`(v1) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L23529c.  v1:= temp @kind object;
  #L23529e.  v1:= (`o2.a`) v1 @kind object;
  #L2352a2.  call `<init>`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DoubleCheck;.<init>:(Lo2/a;)V` @kind direct;
  #L2352a8.  return v0 @kind object;
}
procedure `o2.a` `provider`(`o2.a` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DoubleCheck;.provider:(Lo2/a;)Lo2/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L235398.  call temp:= `checkNotNull`(v1) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L23539e.  v0:= instanceof @variable v1 @type ^`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck` @kind boolean;
  #L2353a2.  if v0 == 0 then goto L2353a8;
  #L2353a6.  return v1 @kind object;
  #L2353a8.  v0:= new `com.google.android.datatransport.runtime.dagger.internal.DoubleCheck`;
  #L2353ac.  call `<init>`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DoubleCheck;.<init>:(Lo2/a;)V` @kind direct;
  #L2353b2.  return v0 @kind object;
}
procedure `java.lang.Object` `reentrantCheck`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DoubleCheck;.reentrantCheck:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23531c.  v0:= `@@com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.UNINITIALIZED` @type ^`java.lang.Object` @kind object;
  #L235320.  if v3 == v0 then goto L235330;
  #L235324.  v0:= instanceof @variable v3 @type ^`com.google.android.datatransport.runtime.dagger.internal.MemoizedSentinel` @kind boolean;
  #L235328.  if v0 != 0 then goto L235330;
  #L23532c.  v0:= 1I;
  #L23532e.  goto L235332;
  #L235330.  v0:= 0I;
  #L235332.  if v0 == 0 then goto L235384;
  #L235336.  if v3 != v4 then goto L23533c;
  #L23533a.  goto L235384;
  #L23533c.  v0:= new `java.lang.IllegalStateException`;
  #L235340.  v1:= new `java.lang.StringBuilder`;
  #L235344.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23534a.  v2:= "Scoped provider was invoked recursively returning different results: " @kind object;
  #L23534e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235354.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23535a.  v3:= " & " @kind object;
  #L23535e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235364.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23536a.  v3:= ". This is likely due to a circular dependency." @kind object;
  #L23536e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235374.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23537a.  v3:= temp @kind object;
  #L23537c.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L235382.  throw v0;
  #L235384.  return v4 @kind object;
}
procedure `java.lang.Object` `get`(`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck` v2 @kind this) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DoubleCheck;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2352bc.  v0:= v2.`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.instance` @type ^`java.lang.Object` @kind object;
  #L2352c0.  v1:= `@@com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.UNINITIALIZED` @type ^`java.lang.Object` @kind object;
  #L2352c4.  if v0 != v1 then goto L2352fe;
  #L2352c8.  @monitorenter v2
  #L2352ca.  v0:= v2.`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.instance` @type ^`java.lang.Object` @kind object;
  #L2352ce.  if v0 != v1 then goto L2352f4;
  #L2352d2.  v0:= v2.`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.provider` @type ^`o2.a` @kind object;
  #L2352d6.  call temp:= `get`(v0) @signature `Lo2/a;.get:()Ljava/lang/Object;` @kind interface;
  #L2352dc.  v0:= temp @kind object;
  #L2352de.  v1:= v2.`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.instance` @type ^`java.lang.Object` @kind object;
  #L2352e2.  call temp:= `reentrantCheck`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DoubleCheck;.reentrantCheck:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2352e8.  v1:= temp @kind object;
  #L2352ea.  v2.`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.instance` @type ^`java.lang.Object` := v1 @kind object;
  #L2352ee.  v1:= 0I;
  #L2352f0.  v2.`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck.provider` @type ^`o2.a` := v1 @kind object;
  #L2352f4.  @monitorexit v2
  #L2352f6.  goto L2352fe;
  #L2352f8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2352fa.  @monitorexit v2
  #L2352fc.  throw v0;
  #L2352fe.  return v0 @kind object;
  catch `java.lang.Throwable` @[L2352ca..L2352fc] goto L2352f8;
}
