record `com.google.android.datatransport.runtime.scheduling.persistence.t` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Producer` @kind interface {
  `com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` `com.google.android.datatransport.runtime.scheduling.persistence.t.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.scheduling.persistence.t` v0 @kind this, `com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/t;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SchemaManager;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23a100.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23a106.  v0.`com.google.android.datatransport.runtime.scheduling.persistence.t.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` := v1 @kind object;
  #L23a10a.  return @kind void;
}
procedure `java.lang.Object` `produce`(`com.google.android.datatransport.runtime.scheduling.persistence.t` v1 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/t;.produce:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L23a0e0.  v0:= v1.`com.google.android.datatransport.runtime.scheduling.persistence.t.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` @kind object;
  #L23a0e4.  call temp:= `getWritableDatabase`(v0) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L23a0ea.  v0:= temp @kind object;
  #L23a0ec.  return v0 @kind object;
}
