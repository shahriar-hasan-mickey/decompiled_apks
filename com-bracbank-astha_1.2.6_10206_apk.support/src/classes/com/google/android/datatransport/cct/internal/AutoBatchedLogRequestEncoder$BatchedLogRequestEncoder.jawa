record `com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder` @kind class @AccessFlag FINAL extends `com.google.firebase.encoders.ObjectEncoder` @kind interface {
}
global `com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder` `@@com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder.INSTANCE` @AccessFlag STATIC_FINAL;
global `com.google.firebase.encoders.FieldDescriptor` `@@com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder.LOGREQUEST_DESCRIPTOR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/datatransport/cct/internal/AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L22f1b0.  v0:= new `com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder`;
  #L22f1b4.  call `<init>`(v0) @signature `Lcom/google/android/datatransport/cct/internal/AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder;.<init>:()V` @kind direct;
  #L22f1ba.  `@@com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder.INSTANCE` @type ^`com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder` := v0 @kind object;
  #L22f1be.  v0:= "logRequest" @kind object;
  #L22f1c2.  call temp:= `of`(v0) @signature `Lcom/google/firebase/encoders/FieldDescriptor;.of:(Ljava/lang/String;)Lcom/google/firebase/encoders/FieldDescriptor;` @kind static;
  #L22f1c8.  v0:= temp @kind object;
  #L22f1ca.  `@@com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder.LOGREQUEST_DESCRIPTOR` @type ^`com.google.firebase.encoders.FieldDescriptor` := v0 @kind object;
  #L22f1ce.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder` v0 @kind this) @signature `Lcom/google/android/datatransport/cct/internal/AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L22f1e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22f1e6.  return @kind void;
}
procedure `void` `encode`(`com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder` v1 @kind this, `com.google.android.datatransport.cct.internal.BatchedLogRequest` v2 @kind object, `com.google.firebase.encoders.ObjectEncoderContext` v3 @kind object) @signature `Lcom/google/android/datatransport/cct/internal/AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder;.encode:(Lcom/google/android/datatransport/cct/internal/BatchedLogRequest;Lcom/google/firebase/encoders/ObjectEncoderContext;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f1f8.  v0:= `@@com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder.LOGREQUEST_DESCRIPTOR` @type ^`com.google.firebase.encoders.FieldDescriptor` @kind object;
  #L22f1fc.  call temp:= `getLogRequests`(v2) @signature `Lcom/google/android/datatransport/cct/internal/BatchedLogRequest;.getLogRequests:()Ljava/util/List;` @kind virtual;
  #L22f202.  v2:= temp @kind object;
  #L22f204.  call temp:= `add`(v3, v0, v2) @signature `Lcom/google/firebase/encoders/ObjectEncoderContext;.add:(Lcom/google/firebase/encoders/FieldDescriptor;Ljava/lang/Object;)Lcom/google/firebase/encoders/ObjectEncoderContext;` @kind interface;
  #L22f20a.  return @kind void;
}
procedure `void` `encode`(`com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/android/datatransport/cct/internal/AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder;.encode:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L22f21c.  v1:= (`com.google.android.datatransport.cct.internal.BatchedLogRequest`) v1 @kind object;
  #L22f220.  v2:= (`com.google.firebase.encoders.ObjectEncoderContext`) v2 @kind object;
  #L22f224.  call `encode`(v0, v1, v2) @signature `Lcom/google/android/datatransport/cct/internal/AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder;.encode:(Lcom/google/android/datatransport/cct/internal/BatchedLogRequest;Lcom/google/firebase/encoders/ObjectEncoderContext;)V` @kind virtual;
  #L22f22a.  return @kind void;
}
