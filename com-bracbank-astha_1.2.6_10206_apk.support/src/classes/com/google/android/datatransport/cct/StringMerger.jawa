record `com.google.android.datatransport.cct.StringMerger` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.android.datatransport.cct.StringMerger` v0 @kind this) @signature `Lcom/google/android/datatransport/cct/StringMerger;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L22ef48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22ef4e.  return @kind void;
}
procedure `java.lang.String` `mergeStrings`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/google/android/datatransport/cct/StringMerger;.mergeStrings:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22eea8.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22eeae.  v0:= temp;
  #L22eeb0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22eeb6.  v1:= temp;
  #L22eeb8.  v0:= v0 - v1 @kind int;
  #L22eeba.  if v0 < 0 then goto L22ef26;
  #L22eebe.  v1:= 1I;
  #L22eec0.  if v0 > v1 then goto L22ef26;
  #L22eec4.  v0:= new `java.lang.StringBuilder`;
  #L22eec8.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22eece.  v1:= temp;
  #L22eed0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22eed6.  v2:= temp;
  #L22eed8.  v1:= v1 + v2 @kind int;
  #L22eeda.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L22eee0.  v1:= 0I;
  #L22eee2.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22eee8.  v2:= temp;
  #L22eeea.  if v1 >= v2 then goto L22ef1c;
  #L22eeee.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22eef4.  v2:= temp;
  #L22eef6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22eefc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22ef02.  v2:= temp;
  #L22ef04.  if v2 <= v1 then goto L22ef16;
  #L22ef08.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22ef0e.  v2:= temp;
  #L22ef10.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ef16.  v1:= v1 + 1;
  #L22ef1a.  goto L22eee2;
  #L22ef1c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22ef22.  v3:= temp @kind object;
  #L22ef24.  return v3 @kind object;
  #L22ef26.  v3:= new `java.lang.IllegalArgumentException`;
  #L22ef2a.  v4:= "Invalid input received" @kind object;
  #L22ef2e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22ef34.  throw v3;
}
