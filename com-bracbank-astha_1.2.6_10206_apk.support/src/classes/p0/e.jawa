record `p0.e` @kind class @AccessFlag PUBLIC extends `p0.a` @kind interface {
  `int`[] `p0.e.a` @AccessFlag PRIVATE;
  `int`[] `p0.e.b` @AccessFlag PRIVATE_FINAL;
  `p0.a$a` `p0.e.c` @AccessFlag PRIVATE_FINAL;
  `java.nio.ByteBuffer` `p0.e.d` @AccessFlag PRIVATE;
  `byte`[] `p0.e.e` @AccessFlag PRIVATE;
  `short`[] `p0.e.f` @AccessFlag PRIVATE;
  `byte`[] `p0.e.g` @AccessFlag PRIVATE;
  `byte`[] `p0.e.h` @AccessFlag PRIVATE;
  `byte`[] `p0.e.i` @AccessFlag PRIVATE;
  `int`[] `p0.e.j` @AccessFlag PRIVATE;
  `int` `p0.e.k` @AccessFlag PRIVATE;
  `p0.c` `p0.e.l` @AccessFlag PRIVATE;
  `android.graphics.Bitmap` `p0.e.m` @AccessFlag PRIVATE;
  `boolean` `p0.e.n` @AccessFlag PRIVATE;
  `int` `p0.e.o` @AccessFlag PRIVATE;
  `int` `p0.e.p` @AccessFlag PRIVATE;
  `int` `p0.e.q` @AccessFlag PRIVATE;
  `int` `p0.e.r` @AccessFlag PRIVATE;
  `java.lang.Boolean` `p0.e.s` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$Config` `p0.e.t` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@p0.e.u` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lp0/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L4f3da4.  return @kind void;
}
procedure `void` `<init>`(`p0.e` v1 @kind this, `p0.a$a` v2 @kind object) @signature `Lp0/e;.<init>:(Lp0/a$a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f3db8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f3dbe.  v0:= 256I;
  #L4f3dc2.  v0:= new `int`[v0];
  #L4f3dc6.  v1.`p0.e.b` @type ^`int`[] := v0 @kind object;
  #L4f3dca.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4f3dce.  v1.`p0.e.t` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L4f3dd2.  v1.`p0.e.c` @type ^`p0.a$a` := v2 @kind object;
  #L4f3dd6.  v2:= new `p0.c`;
  #L4f3dda.  call `<init>`(v2) @signature `Lp0/c;.<init>:()V` @kind direct;
  #L4f3de0.  v1.`p0.e.l` @type ^`p0.c` := v2 @kind object;
  #L4f3de4.  return @kind void;
}
procedure `void` `<init>`(`p0.e` v0 @kind this, `p0.a$a` v1 @kind object, `p0.c` v2 @kind object, `java.nio.ByteBuffer` v3 @kind object, `int` v4 ) @signature `Lp0/e;.<init>:(Lp0/a$a;Lp0/c;Ljava/nio/ByteBuffer;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f3df8.  call `<init>`(v0, v1) @signature `Lp0/e;.<init>:(Lp0/a$a;)V` @kind direct;
  #L4f3dfe.  call `p`(v0, v2, v3, v4) @signature `Lp0/e;.p:(Lp0/c;Ljava/nio/ByteBuffer;I)V` @kind virtual;
  #L4f3e04.  return @kind void;
}
procedure `int` `h`(`p0.e` v9 @kind this, `int` v10 , `int` v11 , `int` v12 ) @signature `Lp0/e;.h:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4f3b58.  v0:= 0I;
  #L4f3b5a.  v1:= v10;
  #L4f3b5c.  v2:= 0I;
  #L4f3b5e.  v3:= 0I;
  #L4f3b60.  v4:= 0I;
  #L4f3b62.  v5:= 0I;
  #L4f3b64.  v6:= 0I;
  #L4f3b66.  v7:= v9.`p0.e.p` @type ^`int`;
  #L4f3b6a.  v7:= v7 + v10 @kind int;
  #L4f3b6c.  if v1 >= v7 then goto L4f3bc0;
  #L4f3b70.  v7:= v9.`p0.e.i` @type ^`byte`[] @kind object;
  #L4f3b74.  v8:= length @variable v7;
  #L4f3b76.  if v1 >= v8 then goto L4f3bc0;
  #L4f3b7a.  if v1 >= v11 then goto L4f3bc0;
  #L4f3b7e.  v7:= v7[v1] @kind byte;
  #L4f3b82.  v7:= v7 ^& 255;
  #L4f3b86.  v8:= v9.`p0.e.a` @type ^`int`[] @kind object;
  #L4f3b8a.  v7:= v8[v7];
  #L4f3b8e.  if v7 == 0 then goto L4f3bba;
  #L4f3b92.  v8:= v7 ^> 24;
  #L4f3b96.  v8:= v8 ^& 255;
  #L4f3b9a.  v2:= v2 + v8 @kind int;
  #L4f3b9c.  v8:= v7 ^> 16;
  #L4f3ba0.  v8:= v8 ^& 255;
  #L4f3ba4.  v3:= v3 + v8 @kind int;
  #L4f3ba6.  v8:= v7 ^> 8;
  #L4f3baa.  v8:= v8 ^& 255;
  #L4f3bae.  v4:= v4 + v8 @kind int;
  #L4f3bb0.  v7:= v7 ^& 255;
  #L4f3bb4.  v5:= v5 + v7 @kind int;
  #L4f3bb6.  v6:= v6 + 1;
  #L4f3bba.  v1:= v1 + 1;
  #L4f3bbe.  goto L4f3b66;
  #L4f3bc0.  v10:= v10 + v12 @kind int;
  #L4f3bc2.  v12:= v10;
  #L4f3bc4.  v1:= v9.`p0.e.p` @type ^`int`;
  #L4f3bc8.  v1:= v1 + v10 @kind int;
  #L4f3bca.  if v12 >= v1 then goto L4f3c1e;
  #L4f3bce.  v1:= v9.`p0.e.i` @type ^`byte`[] @kind object;
  #L4f3bd2.  v7:= length @variable v1;
  #L4f3bd4.  if v12 >= v7 then goto L4f3c1e;
  #L4f3bd8.  if v12 >= v11 then goto L4f3c1e;
  #L4f3bdc.  v1:= v1[v12] @kind byte;
  #L4f3be0.  v1:= v1 ^& 255;
  #L4f3be4.  v7:= v9.`p0.e.a` @type ^`int`[] @kind object;
  #L4f3be8.  v1:= v7[v1];
  #L4f3bec.  if v1 == 0 then goto L4f3c18;
  #L4f3bf0.  v7:= v1 ^> 24;
  #L4f3bf4.  v7:= v7 ^& 255;
  #L4f3bf8.  v2:= v2 + v7 @kind int;
  #L4f3bfa.  v7:= v1 ^> 16;
  #L4f3bfe.  v7:= v7 ^& 255;
  #L4f3c02.  v3:= v3 + v7 @kind int;
  #L4f3c04.  v7:= v1 ^> 8;
  #L4f3c08.  v7:= v7 ^& 255;
  #L4f3c0c.  v4:= v4 + v7 @kind int;
  #L4f3c0e.  v1:= v1 ^& 255;
  #L4f3c12.  v5:= v5 + v1 @kind int;
  #L4f3c14.  v6:= v6 + 1;
  #L4f3c18.  v12:= v12 + 1;
  #L4f3c1c.  goto L4f3bc4;
  #L4f3c1e.  if v6 != 0 then goto L4f3c24;
  #L4f3c22.  return v0;
  #L4f3c24.  v2:= v2 / v6 @kind int;
  #L4f3c26.  v10:= v2 ^< 24;
  #L4f3c2a.  v3:= v3 / v6 @kind int;
  #L4f3c2c.  v11:= v3 ^< 16;
  #L4f3c30.  v10:= v10 ^| v11 @kind int;
  #L4f3c32.  v4:= v4 / v6 @kind int;
  #L4f3c34.  v11:= v4 ^< 8;
  #L4f3c38.  v10:= v10 ^| v11 @kind int;
  #L4f3c3a.  v5:= v5 / v6 @kind int;
  #L4f3c3c.  v10:= v10 ^| v5 @kind int;
  #L4f3c3e.  return v10;
}
procedure `void` `i`(`p0.e` v23 @kind this, `p0.b` v24 @kind object) @signature `Lp0/e;.i:(Lp0/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L4f3eac.  v0:= v23 @kind object;
  #L4f3eb0.  v1:= v24 @kind object;
  #L4f3eb4.  v2:= v0.`p0.e.j` @type ^`int`[] @kind object;
  #L4f3eb8.  v3:= v1.`p0.b.d` @type ^`int`;
  #L4f3ebc.  v4:= v0.`p0.e.p` @type ^`int`;
  #L4f3ec0.  v3:= v3 / v4 @kind int;
  #L4f3ec2.  v5:= v1.`p0.b.b` @type ^`int`;
  #L4f3ec6.  v5:= v5 / v4 @kind int;
  #L4f3ec8.  v6:= v1.`p0.b.c` @type ^`int`;
  #L4f3ecc.  v6:= v6 / v4 @kind int;
  #L4f3ece.  v7:= v1.`p0.b.a` @type ^`int`;
  #L4f3ed2.  v7:= v7 / v4 @kind int;
  #L4f3ed4.  v8:= v0.`p0.e.k` @type ^`int`;
  #L4f3ed8.  if v8 != 0 then goto L4f3ee0;
  #L4f3edc.  v8:= 1I;
  #L4f3ede.  goto L4f3ee2;
  #L4f3ee0.  v8:= 0I;
  #L4f3ee2.  v11:= v0.`p0.e.r` @type ^`int`;
  #L4f3ee6.  v12:= v0.`p0.e.q` @type ^`int`;
  #L4f3eea.  v13:= v0.`p0.e.i` @type ^`byte`[] @kind object;
  #L4f3eee.  v14:= v0.`p0.e.a` @type ^`int`[] @kind object;
  #L4f3ef2.  v15:= v0.`p0.e.s` @type ^`java.lang.Boolean` @kind object;
  #L4f3ef6.  v16:= 8I;
  #L4f3efa.  v9:= 0I;
  #L4f3efc.  v10:= 0I;
  #L4f3efe.  v18:= 1I;
  #L4f3f02.  if v9 >= v3 then goto L4f405c;
  #L4f3f06.  v19:= v15 @kind object;
  #L4f3f0a.  v15:= v1.`p0.b.e` @type ^`boolean` @kind boolean;
  #L4f3f0e.  if v15 == 0 then goto L4f3f64;
  #L4f3f12.  v15:= 2I;
  #L4f3f14.  if v10 < v3 then goto L4f3f5a;
  #L4f3f18.  v21:= v3;
  #L4f3f1c.  v3:= v18 + 1;
  #L4f3f20.  if v3 == v15 then goto L4f3f50;
  #L4f3f24.  v15:= 3I;
  #L4f3f26.  if v3 == v15 then goto L4f3f42;
  #L4f3f2a.  v15:= 4I;
  #L4f3f2c.  if v3 == v15 then goto L4f3f36;
  #L4f3f30.  v18:= v3;
  #L4f3f34.  goto L4f3f5e;
  #L4f3f36.  v18:= v3;
  #L4f3f3a.  v10:= 1I;
  #L4f3f3c.  v16:= 2I;
  #L4f3f40.  goto L4f3f5e;
  #L4f3f42.  v15:= 4I;
  #L4f3f44.  v18:= v3;
  #L4f3f48.  v10:= 2I;
  #L4f3f4a.  v16:= 4I;
  #L4f3f4e.  goto L4f3f5e;
  #L4f3f50.  v15:= 4I;
  #L4f3f52.  v18:= v3;
  #L4f3f56.  v10:= 4I;
  #L4f3f58.  goto L4f3f5e;
  #L4f3f5a.  v21:= v3;
  #L4f3f5e.  v3:= v10 + v16 @kind int;
  #L4f3f62.  goto L4f3f6c;
  #L4f3f64.  v21:= v3;
  #L4f3f68.  v3:= v10;
  #L4f3f6a.  v10:= v9;
  #L4f3f6c.  v10:= v10 + v5 @kind int;
  #L4f3f6e.  v15:= 1I;
  #L4f3f70.  if v4 != v15 then goto L4f3f7a;
  #L4f3f74.  v17:= 1I;
  #L4f3f78.  goto L4f3f7e;
  #L4f3f7a.  v17:= 0I;
  #L4f3f7e.  if v10 >= v12 then goto L4f4034;
  #L4f3f82.  v10:= v10 * v11 @kind int;
  #L4f3f86.  v20:= v10 + v7 @kind int;
  #L4f3f8a.  v15:= v20 + v6 @kind int;
  #L4f3f8e.  v10:= v10 + v11 @kind int;
  #L4f3f90.  if v10 >= v15 then goto L4f3f96;
  #L4f3f94.  v15:= v10;
  #L4f3f96.  v10:= v9 * v4 @kind int;
  #L4f3f9a.  v22:= v3;
  #L4f3f9e.  v3:= v1.`p0.b.c` @type ^`int`;
  #L4f3fa2.  v10:= v10 * v3 @kind int;
  #L4f3fa6.  if v17 == 0 then goto L4f3fe8;
  #L4f3faa.  v3:= v20;
  #L4f3fae.  if v3 >= v15 then goto L4f4038;
  #L4f3fb2.  v17:= v5;
  #L4f3fb6.  v5:= v13[v10] @kind byte;
  #L4f3fba.  v5:= v5 ^& 255;
  #L4f3fbe.  v5:= v14[v5];
  #L4f3fc2.  if v5 == 0 then goto L4f3fcc;
  #L4f3fc6.  v2[v3]:= v5;
  #L4f3fca.  goto L4f3fdc;
  #L4f3fcc.  if v8 == 0 then goto L4f3fdc;
  #L4f3fd0.  if v19 != 0 then goto L4f3fdc;
  #L4f3fd4.  v5:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4f3fd8.  v19:= v5 @kind object;
  #L4f3fdc.  v10:= v10 + v4 @kind int;
  #L4f3fde.  v3:= v3 + 1;
  #L4f3fe2.  v5:= v17;
  #L4f3fe6.  goto L4f3fae;
  #L4f3fe8.  v17:= v5;
  #L4f3fec.  v3:= v15 - v20 @kind int;
  #L4f3ff0.  v3:= v3 * v4 @kind int;
  #L4f3ff4.  v3:= v3 + v10 @kind int;
  #L4f3ff6.  v5:= v20;
  #L4f3ffa.  v20:= v6;
  #L4f3ffe.  if v5 >= v15 then goto L4f4040;
  #L4f4002.  v6:= v1.`p0.b.c` @type ^`int`;
  #L4f4006.  call temp:= `h`(v0, v10, v3, v6) @signature `Lp0/e;.h:(III)I` @kind direct;
  #L4f400c.  v6:= temp;
  #L4f400e.  if v6 == 0 then goto L4f4018;
  #L4f4012.  v2[v5]:= v6;
  #L4f4016.  goto L4f4028;
  #L4f4018.  if v8 == 0 then goto L4f4028;
  #L4f401c.  if v19 != 0 then goto L4f4028;
  #L4f4020.  v6:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4f4024.  v19:= v6 @kind object;
  #L4f4028.  v10:= v10 + v4 @kind int;
  #L4f402a.  v5:= v5 + 1;
  #L4f402e.  v6:= v20;
  #L4f4032.  goto L4f3ffa;
  #L4f4034.  v22:= v3;
  #L4f4038.  v17:= v5;
  #L4f403c.  v20:= v6;
  #L4f4040.  v15:= v19 @kind object;
  #L4f4044.  v9:= v9 + 1;
  #L4f4048.  v5:= v17;
  #L4f404c.  v6:= v20;
  #L4f4050.  v3:= v21;
  #L4f4054.  v10:= v22;
  #L4f4058.  goto L4f3f02;
  #L4f405c.  v19:= v15 @kind object;
  #L4f4060.  v1:= v0.`p0.e.s` @type ^`java.lang.Boolean` @kind object;
  #L4f4064.  if v1 != 0 then goto L4f4084;
  #L4f4068.  if v19 != 0 then goto L4f4070;
  #L4f406c.  v9:= 0I;
  #L4f406e.  goto L4f4078;
  #L4f4070.  call temp:= `booleanValue`(v19) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4f4076.  v9:= temp;
  #L4f4078.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4f407e.  v1:= temp @kind object;
  #L4f4080.  v0.`p0.e.s` @type ^`java.lang.Boolean` := v1 @kind object;
  #L4f4084.  return @kind void;
}
procedure `void` `j`(`p0.e` v18 @kind this, `p0.b` v19 @kind object) @signature `Lp0/e;.j:(Lp0/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L4f4098.  v0:= v18 @kind object;
  #L4f409c.  v1:= v19 @kind object;
  #L4f40a0.  v2:= v0.`p0.e.j` @type ^`int`[] @kind object;
  #L4f40a4.  v3:= v1.`p0.b.d` @type ^`int`;
  #L4f40a8.  v4:= v1.`p0.b.b` @type ^`int`;
  #L4f40ac.  v5:= v1.`p0.b.c` @type ^`int`;
  #L4f40b0.  v6:= v1.`p0.b.a` @type ^`int`;
  #L4f40b4.  v7:= v0.`p0.e.k` @type ^`int`;
  #L4f40b8.  if v7 != 0 then goto L4f40c0;
  #L4f40bc.  v7:= 1I;
  #L4f40be.  goto L4f40c2;
  #L4f40c0.  v7:= 0I;
  #L4f40c2.  v10:= v0.`p0.e.r` @type ^`int`;
  #L4f40c6.  v11:= v0.`p0.e.i` @type ^`byte`[] @kind object;
  #L4f40ca.  v12:= v0.`p0.e.a` @type ^`int`[] @kind object;
  #L4f40ce.  v14:= 0I;
  #L4f40d0.  v15:= -1I;
  #L4f40d2.  if v14 >= v3 then goto L4f4140;
  #L4f40d6.  v16:= v14 + v4 @kind int;
  #L4f40da.  v16:= v16 * v10 @kind int;
  #L4f40de.  v17:= v16 + v6 @kind int;
  #L4f40e2.  v8:= v17 + v5 @kind int;
  #L4f40e6.  v9:= v16 + v10 @kind int;
  #L4f40ea.  if v9 >= v8 then goto L4f40f0;
  #L4f40ee.  v8:= v9;
  #L4f40f0.  v9:= v1.`p0.b.c` @type ^`int`;
  #L4f40f4.  v9:= v9 * v14 @kind int;
  #L4f40f8.  v13:= v17;
  #L4f40fc.  if v13 >= v8 then goto L4f4132;
  #L4f4100.  v1:= v11[v9] @kind byte;
  #L4f4104.  v17:= v3;
  #L4f4108.  v3:= v1 ^& 255;
  #L4f410c.  if v3 == v15 then goto L4f4120;
  #L4f4110.  v3:= v12[v3];
  #L4f4114.  if v3 == 0 then goto L4f411e;
  #L4f4118.  v2[v13]:= v3;
  #L4f411c.  goto L4f4120;
  #L4f411e.  v15:= v1;
  #L4f4120.  v9:= v9 + 1;
  #L4f4124.  v13:= v13 + 1;
  #L4f4128.  v1:= v19 @kind object;
  #L4f412c.  v3:= v17;
  #L4f4130.  goto L4f40fc;
  #L4f4132.  v17:= v3;
  #L4f4136.  v14:= v14 + 1;
  #L4f413a.  v1:= v19 @kind object;
  #L4f413e.  goto L4f40d2;
  #L4f4140.  v1:= v0.`p0.e.s` @type ^`java.lang.Boolean` @kind object;
  #L4f4144.  if v1 == 0 then goto L4f4154;
  #L4f4148.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4f414e.  v1:= temp;
  #L4f4150.  if v1 != 0 then goto L4f4166;
  #L4f4154.  v1:= v0.`p0.e.s` @type ^`java.lang.Boolean` @kind object;
  #L4f4158.  if v1 != 0 then goto L4f416a;
  #L4f415c.  if v7 == 0 then goto L4f416a;
  #L4f4160.  v1:= -1I;
  #L4f4162.  if v15 == v1 then goto L4f416a;
  #L4f4166.  v8:= 1I;
  #L4f4168.  goto L4f416c;
  #L4f416a.  v8:= 0I;
  #L4f416c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4f4172.  v1:= temp @kind object;
  #L4f4174.  v0.`p0.e.s` @type ^`java.lang.Boolean` := v1 @kind object;
  #L4f4178.  return @kind void;
}
procedure `void` `k`(`p0.e` v28 @kind this, `p0.b` v29 @kind object) @signature `Lp0/e;.k:(Lp0/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;

  #L4f418c.  v0:= v28 @kind object;
  #L4f4190.  v1:= v29 @kind object;
  #L4f4194.  if v1 == 0 then goto L4f41a6;
  #L4f4198.  v2:= v0.`p0.e.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4f419c.  v3:= v1.`p0.b.j` @type ^`int`;
  #L4f41a0.  call temp:= `position`(v2, v3) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L4f41a6.  if v1 != 0 then goto L4f41b8;
  #L4f41aa.  v1:= v0.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f41ae.  v2:= v1.`p0.c.f` @type ^`int`;
  #L4f41b2.  v1:= v1.`p0.c.g` @type ^`int`;
  #L4f41b6.  goto L4f41c0;
  #L4f41b8.  v2:= v1.`p0.b.c` @type ^`int`;
  #L4f41bc.  v1:= v1.`p0.b.d` @type ^`int`;
  #L4f41c0.  v2:= v2 * v1 @kind int;
  #L4f41c4.  v1:= v0.`p0.e.i` @type ^`byte`[] @kind object;
  #L4f41c8.  if v1 == 0 then goto L4f41d2;
  #L4f41cc.  v1:= length @variable v1;
  #L4f41ce.  if v1 >= v2 then goto L4f41e2;
  #L4f41d2.  v1:= v0.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f41d6.  call temp:= `e`(v1, v2) @signature `Lp0/a$a;.e:(I)[B` @kind interface;
  #L4f41dc.  v1:= temp @kind object;
  #L4f41de.  v0.`p0.e.i` @type ^`byte`[] := v1 @kind object;
  #L4f41e2.  v1:= v0.`p0.e.i` @type ^`byte`[] @kind object;
  #L4f41e6.  v3:= v0.`p0.e.f` @type ^`short`[] @kind object;
  #L4f41ea.  v4:= 4096I;
  #L4f41ee.  if v3 != 0 then goto L4f41fa;
  #L4f41f2.  v3:= new `short`[v4];
  #L4f41f6.  v0.`p0.e.f` @type ^`short`[] := v3 @kind object;
  #L4f41fa.  v3:= v0.`p0.e.f` @type ^`short`[] @kind object;
  #L4f41fe.  v5:= v0.`p0.e.g` @type ^`byte`[] @kind object;
  #L4f4202.  if v5 != 0 then goto L4f420e;
  #L4f4206.  v5:= new `byte`[v4];
  #L4f420a.  v0.`p0.e.g` @type ^`byte`[] := v5 @kind object;
  #L4f420e.  v5:= v0.`p0.e.g` @type ^`byte`[] @kind object;
  #L4f4212.  v6:= v0.`p0.e.h` @type ^`byte`[] @kind object;
  #L4f4216.  if v6 != 0 then goto L4f4226;
  #L4f421a.  v6:= 4097I;
  #L4f421e.  v6:= new `byte`[v6];
  #L4f4222.  v0.`p0.e.h` @type ^`byte`[] := v6 @kind object;
  #L4f4226.  v6:= v0.`p0.e.h` @type ^`byte`[] @kind object;
  #L4f422a.  call temp:= `o`(v28) @signature `Lp0/e;.o:()I` @kind direct;
  #L4f4230.  v7:= temp;
  #L4f4232.  v8:= 1I;
  #L4f4234.  v9:= v8 ^< v7 @kind int;
  #L4f4238.  v10:= v9 + 1;
  #L4f423c.  v11:= v9 + 2;
  #L4f4240.  v7:= v7 + v8 @kind int;
  #L4f4242.  v12:= v8 ^< v7 @kind int;
  #L4f4246.  v12:= v12 - v8 @kind int;
  #L4f4248.  v13:= 0I;
  #L4f424a.  v14:= 0I;
  #L4f424c.  if v14 >= v9 then goto L4f4260;
  #L4f4250.  v3[v14]:= v13 @kind short;
  #L4f4254.  v15:= (`byte`) v14 @kind i2b;
  #L4f4256.  v5[v14]:= v15 @kind byte;
  #L4f425a.  v14:= v14 + 1;
  #L4f425e.  goto L4f424c;
  #L4f4260.  v14:= v0.`p0.e.e` @type ^`byte`[] @kind object;
  #L4f4264.  v15:= -1I;
  #L4f4266.  v23:= v7;
  #L4f426a.  v21:= v11;
  #L4f426e.  v22:= v12;
  #L4f4272.  v16:= 0I;
  #L4f4276.  v17:= 0I;
  #L4f427a.  v18:= 0I;
  #L4f427e.  v19:= 0I;
  #L4f4282.  v20:= 0I;
  #L4f4286.  v24:= -1I;
  #L4f428a.  v25:= 0I;
  #L4f428e.  v26:= 0I;
  #L4f4292.  if v13 >= v2 then goto L4f4424;
  #L4f4296.  if v16 != 0 then goto L4f42b4;
  #L4f429a.  call temp:= `n`(v28) @signature `Lp0/e;.n:()I` @kind direct;
  #L4f42a0.  v16:= temp;
  #L4f42a2.  if v16 > 0 then goto L4f42b0;
  #L4f42a6.  v3:= 3I;
  #L4f42a8.  v0.`p0.e.o` @type ^`int` := v3;
  #L4f42ac.  goto L4f4424;
  #L4f42b0.  v17:= 0I;
  #L4f42b4.  v4:= v14[v17] @kind byte;
  #L4f42b8.  v4:= v4 ^& 255;
  #L4f42bc.  v4:= v4 ^< v18 @kind int;
  #L4f42c0.  v19:= v19 + v4 @kind int;
  #L4f42c4.  v18:= v18 + 8;
  #L4f42c8.  v17:= v17 + 1;
  #L4f42cc.  v16:= v16 + -1;
  #L4f42d0.  v4:= v18;
  #L4f42d4.  v8:= v21;
  #L4f42d8.  v15:= v23;
  #L4f42dc.  v0:= v24;
  #L4f42e0.  v23:= v7;
  #L4f42e4.  v7:= v25;
  #L4f42e8.  if v4 < v15 then goto L4f43f8;
  #L4f42ec.  v24:= v11;
  #L4f42f0.  v11:= v19 ^& v22 @kind int;
  #L4f42f4.  v19:= v19 ^> v15 @kind int;
  #L4f42f8.  v4:= v4 - v15 @kind int;
  #L4f42fa.  if v11 != v9 then goto L4f4310;
  #L4f42fe.  v22:= v12;
  #L4f4302.  v15:= v23;
  #L4f4306.  v8:= v24;
  #L4f430a.  v11:= v8;
  #L4f430c.  v0:= -1I;
  #L4f430e.  goto L4f42e8;
  #L4f4310.  if v11 != v10 then goto L4f433e;
  #L4f4314.  v18:= v4;
  #L4f4318.  v25:= v7;
  #L4f431c.  v21:= v8;
  #L4f4320.  v7:= v23;
  #L4f4324.  v11:= v24;
  #L4f4328.  v4:= 4096I;
  #L4f432c.  v8:= 1I;
  #L4f432e.  v24:= v0;
  #L4f4332.  v23:= v15;
  #L4f4336.  v15:= -1I;
  #L4f4338.  v0:= v28 @kind object;
  #L4f433c.  goto L4f4292;
  #L4f433e.  v25:= v4;
  #L4f4342.  v4:= -1I;
  #L4f4344.  if v0 != v4 then goto L4f4366;
  #L4f4348.  v0:= v5[v11] @kind byte;
  #L4f434c.  v1[v20]:= v0 @kind byte;
  #L4f4350.  v20:= v20 + 1;
  #L4f4354.  v13:= v13 + 1;
  #L4f4358.  v0:= v11;
  #L4f435a.  v7:= v0;
  #L4f435c.  v11:= v24;
  #L4f4360.  v4:= v25;
  #L4f4364.  goto L4f42e8;
  #L4f4366.  if v11 < v8 then goto L4f4378;
  #L4f436a.  v7:= (`byte`) v7 @kind i2b;
  #L4f436c.  v6[v26]:= v7 @kind byte;
  #L4f4370.  v26:= v26 + 1;
  #L4f4374.  v7:= v0;
  #L4f4376.  goto L4f437a;
  #L4f4378.  v7:= v11;
  #L4f437a.  if v7 < v9 then goto L4f4390;
  #L4f437e.  v21:= v5[v7] @kind byte;
  #L4f4382.  v6[v26]:= v21 @kind byte;
  #L4f4386.  v26:= v26 + 1;
  #L4f438a.  v7:= v3[v7] @kind short;
  #L4f438e.  goto L4f437a;
  #L4f4390.  v7:= v5[v7] @kind byte;
  #L4f4394.  v7:= v7 ^& 255;
  #L4f4398.  v4:= (`byte`) v7 @kind i2b;
  #L4f439a.  v1[v20]:= v4 @kind byte;
  #L4f439e.  v20:= v20 + 1;
  #L4f43a2.  v13:= v13 + 1;
  #L4f43a6.  if v26 <= 0 then goto L4f43b8;
  #L4f43aa.  v26:= v26 + -1;
  #L4f43ae.  v27:= v6[v26] @kind byte;
  #L4f43b2.  v1[v20]:= v27 @kind byte;
  #L4f43b6.  goto L4f439e;
  #L4f43b8.  v27:= v6 @kind object;
  #L4f43bc.  v6:= 4096I;
  #L4f43c0.  if v8 >= v6 then goto L4f43e6;
  #L4f43c4.  v0:= (`short`) v0 @kind i2s;
  #L4f43c6.  v3[v8]:= v0 @kind short;
  #L4f43ca.  v5[v8]:= v4 @kind byte;
  #L4f43ce.  v8:= v8 + 1;
  #L4f43d2.  v0:= v8 ^& v22 @kind int;
  #L4f43d6.  if v0 != 0 then goto L4f43e6;
  #L4f43da.  if v8 >= v6 then goto L4f43e6;
  #L4f43de.  v15:= v15 + 1;
  #L4f43e2.  v22:= v22 + v8 @kind int;
  #L4f43e6.  v0:= v11;
  #L4f43e8.  v11:= v24;
  #L4f43ec.  v4:= v25;
  #L4f43f0.  v6:= v27 @kind object;
  #L4f43f4.  goto L4f42e8;
  #L4f43f8.  v25:= v4;
  #L4f43fc.  v24:= v0;
  #L4f4400.  v21:= v8;
  #L4f4404.  v18:= v25;
  #L4f4408.  v4:= 4096I;
  #L4f440c.  v8:= 1I;
  #L4f440e.  v0:= v28 @kind object;
  #L4f4412.  v25:= v7;
  #L4f4416.  v7:= v23;
  #L4f441a.  v23:= v15;
  #L4f441e.  v15:= -1I;
  #L4f4420.  goto L4f4292;
  #L4f4424.  v13:= v20;
  #L4f4428.  v0:= 0I;
  #L4f442a.  call `fill`(v1, v13, v2, v0) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L4f4430.  return @kind void;
}
procedure `android.graphics.Bitmap` `m`(`p0.e` v4 @kind this) @signature `Lp0/e;.m:()Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f37a8.  v0:= v4.`p0.e.s` @type ^`java.lang.Boolean` @kind object;
  #L4f37ac.  if v0 == 0 then goto L4f37c4;
  #L4f37b0.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4f37b6.  v0:= temp;
  #L4f37b8.  if v0 == 0 then goto L4f37be;
  #L4f37bc.  goto L4f37c4;
  #L4f37be.  v0:= v4.`p0.e.t` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4f37c2.  goto L4f37c8;
  #L4f37c4.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4f37c8.  v1:= v4.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f37cc.  v2:= v4.`p0.e.r` @type ^`int`;
  #L4f37d0.  v3:= v4.`p0.e.q` @type ^`int`;
  #L4f37d4.  call temp:= `a`(v1, v2, v3, v0) @signature `Lp0/a$a;.a:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L4f37da.  v0:= temp @kind object;
  #L4f37dc.  v1:= 1I;
  #L4f37de.  call `setHasAlpha`(v0, v1) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L4f37e4.  return v0 @kind object;
}
procedure `int` `n`(`p0.e` v5 @kind this) @signature `Lp0/e;.n:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f3d28.  call temp:= `o`(v5) @signature `Lp0/e;.o:()I` @kind direct;
  #L4f3d2e.  v0:= temp;
  #L4f3d30.  if v0 > 0 then goto L4f3d36;
  #L4f3d34.  return v0;
  #L4f3d36.  v1:= v5.`p0.e.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4f3d3a.  v2:= v5.`p0.e.e` @type ^`byte`[] @kind object;
  #L4f3d3e.  v3:= 0I;
  #L4f3d40.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L4f3d46.  v4:= temp;
  #L4f3d48.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4f3d4e.  v4:= temp;
  #L4f3d50.  call temp:= `get`(v1, v2, v3, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4f3d56.  return v0;
}
procedure `int` `o`(`p0.e` v1 @kind this) @signature `Lp0/e;.o:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4f3d68.  v0:= v1.`p0.e.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4f3d6c.  call temp:= `get`(v0) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L4f3d72.  v0:= temp;
  #L4f3d74.  v0:= v0 ^& 255;
  #L4f3d78.  return v0;
}
procedure `android.graphics.Bitmap` `q`(`p0.e` v9 @kind this, `p0.b` v10 @kind object, `p0.b` v11 @kind object) @signature `Lp0/e;.q:(Lp0/b;Lp0/b;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4f39c8.  v8:= v9.`p0.e.j` @type ^`int`[] @kind object;
  #L4f39cc.  v0:= 0I;
  #L4f39ce.  if v11 != 0 then goto L4f39f0;
  #L4f39d2.  v1:= v9.`p0.e.m` @type ^`android.graphics.Bitmap` @kind object;
  #L4f39d6.  if v1 == 0 then goto L4f39e4;
  #L4f39da.  v2:= v9.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f39de.  call `c`(v2, v1) @signature `Lp0/a$a;.c:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L4f39e4.  v1:= 0I;
  #L4f39e6.  v9.`p0.e.m` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L4f39ea.  call `fill`(v8, v0) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L4f39f0.  v1:= 3I;
  #L4f39f2.  if v11 == 0 then goto L4f3a0c;
  #L4f39f6.  v2:= v11.`p0.b.g` @type ^`int`;
  #L4f39fa.  if v2 != v1 then goto L4f3a0c;
  #L4f39fe.  v2:= v9.`p0.e.m` @type ^`android.graphics.Bitmap` @kind object;
  #L4f3a02.  if v2 != 0 then goto L4f3a0c;
  #L4f3a06.  call `fill`(v8, v0) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L4f3a0c.  if v11 == 0 then goto L4f3ab6;
  #L4f3a10.  v2:= v11.`p0.b.g` @type ^`int`;
  #L4f3a14.  if v2 <= 0 then goto L4f3ab6;
  #L4f3a18.  v3:= 2I;
  #L4f3a1a.  if v2 != v3 then goto L4f3a92;
  #L4f3a1e.  v1:= v10.`p0.b.f` @type ^`boolean` @kind boolean;
  #L4f3a22.  if v1 != 0 then goto L4f3a46;
  #L4f3a26.  v1:= v9.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f3a2a.  v2:= v1.`p0.c.l` @type ^`int`;
  #L4f3a2e.  v3:= v10.`p0.b.k` @type ^`int`[] @kind object;
  #L4f3a32.  if v3 == 0 then goto L4f3a44;
  #L4f3a36.  v1:= v1.`p0.c.j` @type ^`int`;
  #L4f3a3a.  v3:= v10.`p0.b.h` @type ^`int`;
  #L4f3a3e.  if v1 != v3 then goto L4f3a44;
  #L4f3a42.  goto L4f3a46;
  #L4f3a44.  v0:= v2;
  #L4f3a46.  v1:= v11.`p0.b.d` @type ^`int`;
  #L4f3a4a.  v2:= v9.`p0.e.p` @type ^`int`;
  #L4f3a4e.  v1:= v1 / v2 @kind int;
  #L4f3a50.  v3:= v11.`p0.b.b` @type ^`int`;
  #L4f3a54.  v3:= v3 / v2 @kind int;
  #L4f3a56.  v4:= v11.`p0.b.c` @type ^`int`;
  #L4f3a5a.  v4:= v4 / v2 @kind int;
  #L4f3a5c.  v11:= v11.`p0.b.a` @type ^`int`;
  #L4f3a60.  v11:= v11 / v2 @kind int;
  #L4f3a62.  v2:= v9.`p0.e.r` @type ^`int`;
  #L4f3a66.  v3:= v3 * v2 @kind int;
  #L4f3a6a.  v3:= v3 + v11 @kind int;
  #L4f3a6c.  v1:= v1 * v2 @kind int;
  #L4f3a70.  v1:= v1 + v3 @kind int;
  #L4f3a72.  if v3 >= v1 then goto L4f3ab6;
  #L4f3a76.  v11:= v3 + v4 @kind int;
  #L4f3a7a.  v2:= v3;
  #L4f3a7c.  if v2 >= v11 then goto L4f3a8a;
  #L4f3a80.  v8[v2]:= v0;
  #L4f3a84.  v2:= v2 + 1;
  #L4f3a88.  goto L4f3a7c;
  #L4f3a8a.  v11:= v9.`p0.e.r` @type ^`int`;
  #L4f3a8e.  v3:= v3 + v11 @kind int;
  #L4f3a90.  goto L4f3a72;
  #L4f3a92.  if v2 != v1 then goto L4f3ab6;
  #L4f3a96.  v0:= v9.`p0.e.m` @type ^`android.graphics.Bitmap` @kind object;
  #L4f3a9a.  if v0 == 0 then goto L4f3ab6;
  #L4f3a9e.  v2:= 0I;
  #L4f3aa0.  v6:= v9.`p0.e.r` @type ^`int`;
  #L4f3aa4.  v4:= 0I;
  #L4f3aa6.  v5:= 0I;
  #L4f3aa8.  v7:= v9.`p0.e.q` @type ^`int`;
  #L4f3aac.  v1:= v8 @kind object;
  #L4f3aae.  v3:= v6;
  #L4f3ab0.  call `getPixels`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.getPixels:([IIIIIII)V` @kind virtual;
  #L4f3ab6.  call `k`(v9, v10) @signature `Lp0/e;.k:(Lp0/b;)V` @kind direct;
  #L4f3abc.  v11:= v10.`p0.b.e` @type ^`boolean` @kind boolean;
  #L4f3ac0.  v0:= 1I;
  #L4f3ac2.  if v11 != 0 then goto L4f3ad8;
  #L4f3ac6.  v11:= v9.`p0.e.p` @type ^`int`;
  #L4f3aca.  if v11 == v0 then goto L4f3ad0;
  #L4f3ace.  goto L4f3ad8;
  #L4f3ad0.  call `j`(v9, v10) @signature `Lp0/e;.j:(Lp0/b;)V` @kind direct;
  #L4f3ad6.  goto L4f3ade;
  #L4f3ad8.  call `i`(v9, v10) @signature `Lp0/e;.i:(Lp0/b;)V` @kind direct;
  #L4f3ade.  v11:= v9.`p0.e.n` @type ^`boolean` @kind boolean;
  #L4f3ae2.  if v11 == 0 then goto L4f3b22;
  #L4f3ae6.  v10:= v10.`p0.b.g` @type ^`int`;
  #L4f3aea.  if v10 == 0 then goto L4f3af2;
  #L4f3aee.  if v10 != v0 then goto L4f3b22;
  #L4f3af2.  v10:= v9.`p0.e.m` @type ^`android.graphics.Bitmap` @kind object;
  #L4f3af6.  if v10 != 0 then goto L4f3b06;
  #L4f3afa.  call temp:= `m`(v9) @signature `Lp0/e;.m:()Landroid/graphics/Bitmap;` @kind direct;
  #L4f3b00.  v10:= temp @kind object;
  #L4f3b02.  v9.`p0.e.m` @type ^`android.graphics.Bitmap` := v10 @kind object;
  #L4f3b06.  v0:= v9.`p0.e.m` @type ^`android.graphics.Bitmap` @kind object;
  #L4f3b0a.  v2:= 0I;
  #L4f3b0c.  v6:= v9.`p0.e.r` @type ^`int`;
  #L4f3b10.  v4:= 0I;
  #L4f3b12.  v5:= 0I;
  #L4f3b14.  v7:= v9.`p0.e.q` @type ^`int`;
  #L4f3b18.  v1:= v8 @kind object;
  #L4f3b1a.  v3:= v6;
  #L4f3b1c.  call `setPixels`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.setPixels:([IIIIIII)V` @kind virtual;
  #L4f3b22.  call temp:= `m`(v9) @signature `Lp0/e;.m:()Landroid/graphics/Bitmap;` @kind direct;
  #L4f3b28.  v10:= temp @kind object;
  #L4f3b2a.  v2:= 0I;
  #L4f3b2c.  v6:= v9.`p0.e.r` @type ^`int`;
  #L4f3b30.  v4:= 0I;
  #L4f3b32.  v5:= 0I;
  #L4f3b34.  v7:= v9.`p0.e.q` @type ^`int`;
  #L4f3b38.  v0:= v10 @kind object;
  #L4f3b3a.  v1:= v8 @kind object;
  #L4f3b3c.  v3:= v6;
  #L4f3b3e.  call `setPixels`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.setPixels:([IIIIIII)V` @kind virtual;
  #L4f3b44.  return v10 @kind object;
}
procedure `android.graphics.Bitmap` `a`(`p0.e` v8 @kind this) @signature `Lp0/e;.a:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4f37f8.  @monitorenter v8
  #L4f37fa.  v0:= v8.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f37fe.  v0:= v0.`p0.c.c` @type ^`int`;
  #L4f3802.  v1:= 3I;
  #L4f3804.  v2:= 1I;
  #L4f3806.  if v0 <= 0 then goto L4f3812;
  #L4f380a.  v0:= v8.`p0.e.k` @type ^`int`;
  #L4f380e.  if v0 >= 0 then goto L4f385c;
  #L4f3812.  v0:= `@@p0.e.u` @type ^`java.lang.String` @kind object;
  #L4f3816.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4f381c.  v0:= temp;
  #L4f381e.  if v0 == 0 then goto L4f3858;
  #L4f3822.  v0:= new `java.lang.StringBuilder`;
  #L4f3826.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f382c.  v3:= "Unable to decode frame, frameCount=" @kind object;
  #L4f3830.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f3836.  v3:= v8.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f383a.  v3:= v3.`p0.c.c` @type ^`int`;
  #L4f383e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f3844.  v3:= ", framePointer=" @kind object;
  #L4f3848.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f384e.  v3:= v8.`p0.e.k` @type ^`int`;
  #L4f3852.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f3858.  v8.`p0.e.o` @type ^`int` := v2;
  #L4f385c.  v0:= v8.`p0.e.o` @type ^`int`;
  #L4f3860.  v3:= 0I;
  #L4f3862.  if v0 == v2 then goto L4f3964;
  #L4f3866.  v4:= 2I;
  #L4f3868.  if v0 != v4 then goto L4f3870;
  #L4f386c.  goto L4f3964;
  #L4f3870.  v0:= 0I;
  #L4f3872.  v8.`p0.e.o` @type ^`int` := v0;
  #L4f3876.  v5:= v8.`p0.e.e` @type ^`byte`[] @kind object;
  #L4f387a.  if v5 != 0 then goto L4f3892;
  #L4f387e.  v5:= v8.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f3882.  v6:= 255I;
  #L4f3886.  call temp:= `e`(v5, v6) @signature `Lp0/a$a;.e:(I)[B` @kind interface;
  #L4f388c.  v5:= temp @kind object;
  #L4f388e.  v8.`p0.e.e` @type ^`byte`[] := v5 @kind object;
  #L4f3892.  v5:= v8.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f3896.  v5:= v5.`p0.c.e` @type ^`java.util.List` @kind object;
  #L4f389a.  v6:= v8.`p0.e.k` @type ^`int`;
  #L4f389e.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f38a4.  v5:= temp @kind object;
  #L4f38a6.  v5:= (`p0.b`) v5 @kind object;
  #L4f38aa.  v6:= v8.`p0.e.k` @type ^`int`;
  #L4f38ae.  v6:= v6 - v2 @kind int;
  #L4f38b0.  if v6 < 0 then goto L4f38ca;
  #L4f38b4.  v7:= v8.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f38b8.  v7:= v7.`p0.c.e` @type ^`java.util.List` @kind object;
  #L4f38bc.  call temp:= `get`(v7, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f38c2.  v6:= temp @kind object;
  #L4f38c4.  v6:= (`p0.b`) v6 @kind object;
  #L4f38c8.  goto L4f38cc;
  #L4f38ca.  v6:= v3 @kind object;
  #L4f38cc.  v7:= v5.`p0.b.k` @type ^`int`[] @kind object;
  #L4f38d0.  if v7 == 0 then goto L4f38d6;
  #L4f38d4.  goto L4f38de;
  #L4f38d6.  v7:= v8.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f38da.  v7:= v7.`p0.c.a` @type ^`int`[] @kind object;
  #L4f38de.  v8.`p0.e.a` @type ^`int`[] := v7 @kind object;
  #L4f38e2.  if v7 != 0 then goto L4f391c;
  #L4f38e6.  v0:= `@@p0.e.u` @type ^`java.lang.String` @kind object;
  #L4f38ea.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4f38f0.  v0:= temp;
  #L4f38f2.  if v0 == 0 then goto L4f3914;
  #L4f38f6.  v0:= new `java.lang.StringBuilder`;
  #L4f38fa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f3900.  v1:= "No valid color table found for frame #" @kind object;
  #L4f3904.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f390a.  v1:= v8.`p0.e.k` @type ^`int`;
  #L4f390e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f3914.  v8.`p0.e.o` @type ^`int` := v2;
  #L4f3918.  @monitorexit v8
  #L4f391a.  return v3 @kind object;
  #L4f391c.  v1:= v5.`p0.b.f` @type ^`boolean` @kind boolean;
  #L4f3920.  if v1 == 0 then goto L4f3958;
  #L4f3924.  v1:= v8.`p0.e.b` @type ^`int`[] @kind object;
  #L4f3928.  v2:= length @variable v7;
  #L4f392a.  call `arraycopy`(v7, v0, v1, v0, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4f3930.  v1:= v8.`p0.e.b` @type ^`int`[] @kind object;
  #L4f3934.  v8.`p0.e.a` @type ^`int`[] := v1 @kind object;
  #L4f3938.  v2:= v5.`p0.b.h` @type ^`int`;
  #L4f393c.  v1[v2]:= v0;
  #L4f3940.  v0:= v5.`p0.b.g` @type ^`int`;
  #L4f3944.  if v0 != v4 then goto L4f3958;
  #L4f3948.  v0:= v8.`p0.e.k` @type ^`int`;
  #L4f394c.  if v0 != 0 then goto L4f3958;
  #L4f3950.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4f3954.  v8.`p0.e.s` @type ^`java.lang.Boolean` := v0 @kind object;
  #L4f3958.  call temp:= `q`(v8, v5, v6) @signature `Lp0/e;.q:(Lp0/b;Lp0/b;)Landroid/graphics/Bitmap;` @kind direct;
  #L4f395e.  v0:= temp @kind object;
  #L4f3960.  @monitorexit v8
  #L4f3962.  return v0 @kind object;
  #L4f3964.  v0:= `@@p0.e.u` @type ^`java.lang.String` @kind object;
  #L4f3968.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4f396e.  v0:= temp;
  #L4f3970.  if v0 == 0 then goto L4f3992;
  #L4f3974.  v0:= new `java.lang.StringBuilder`;
  #L4f3978.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f397e.  v1:= "Unable to decode frame, status=" @kind object;
  #L4f3982.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f3988.  v1:= v8.`p0.e.o` @type ^`int`;
  #L4f398c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f3992.  @monitorexit v8
  #L4f3994.  return v3 @kind object;
  #L4f3996.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f3998.  @monitorexit v8
  #L4f399a.  throw v0;
  catch `java.lang.Throwable` @[L4f37fa..L4f3918] goto L4f3996;
  catch `java.lang.Throwable` @[L4f391c..L4f3960] goto L4f3996;
  catch `java.lang.Throwable` @[L4f3964..L4f3992] goto L4f3996;
}
procedure `void` `b`(`p0.e` v2 @kind this) @signature `Lp0/e;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f3e18.  v0:= v2.`p0.e.k` @type ^`int`;
  #L4f3e1c.  v0:= v0 + 1;
  #L4f3e20.  v1:= v2.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f3e24.  v1:= v1.`p0.c.c` @type ^`int`;
  #L4f3e28.  v0:= v0 %% v1 @kind int;
  #L4f3e2a.  v2.`p0.e.k` @type ^`int` := v0;
  #L4f3e2e.  return @kind void;
}
procedure `int` `c`(`p0.e` v1 @kind this) @signature `Lp0/e;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3cd8.  v0:= v1.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f3cdc.  v0:= v0.`p0.c.c` @type ^`int`;
  #L4f3ce0.  return v0;
}
procedure `void` `clear`(`p0.e` v3 @kind this) @signature `Lp0/e;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f3e40.  v0:= 0I;
  #L4f3e42.  v3.`p0.e.l` @type ^`p0.c` := v0 @kind object;
  #L4f3e46.  v1:= v3.`p0.e.i` @type ^`byte`[] @kind object;
  #L4f3e4a.  if v1 == 0 then goto L4f3e58;
  #L4f3e4e.  v2:= v3.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f3e52.  call `d`(v2, v1) @signature `Lp0/a$a;.d:([B)V` @kind interface;
  #L4f3e58.  v1:= v3.`p0.e.j` @type ^`int`[] @kind object;
  #L4f3e5c.  if v1 == 0 then goto L4f3e6a;
  #L4f3e60.  v2:= v3.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f3e64.  call `f`(v2, v1) @signature `Lp0/a$a;.f:([I)V` @kind interface;
  #L4f3e6a.  v1:= v3.`p0.e.m` @type ^`android.graphics.Bitmap` @kind object;
  #L4f3e6e.  if v1 == 0 then goto L4f3e7c;
  #L4f3e72.  v2:= v3.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f3e76.  call `c`(v2, v1) @signature `Lp0/a$a;.c:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L4f3e7c.  v3.`p0.e.m` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L4f3e80.  v3.`p0.e.d` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L4f3e84.  v3.`p0.e.s` @type ^`java.lang.Boolean` := v0 @kind object;
  #L4f3e88.  v0:= v3.`p0.e.e` @type ^`byte`[] @kind object;
  #L4f3e8c.  if v0 == 0 then goto L4f3e9a;
  #L4f3e90.  v1:= v3.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f3e94.  call `d`(v1, v0) @signature `Lp0/a$a;.d:([B)V` @kind interface;
  #L4f3e9a.  return @kind void;
}
procedure `int` `d`(`p0.e` v1 @kind this) @signature `Lp0/e;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3cf4.  v0:= v1.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f3cf8.  v0:= v0.`p0.c.c` @type ^`int`;
  #L4f3cfc.  if v0 <= 0 then goto L4f3d14;
  #L4f3d00.  v0:= v1.`p0.e.k` @type ^`int`;
  #L4f3d04.  if v0 >= 0 then goto L4f3d0a;
  #L4f3d08.  goto L4f3d14;
  #L4f3d0a.  call temp:= `l`(v1, v0) @signature `Lp0/e;.l:(I)I` @kind virtual;
  #L4f3d10.  v0:= temp;
  #L4f3d12.  return v0;
  #L4f3d14.  v0:= 0I;
  #L4f3d16.  return v0;
}
procedure `void` `e`(`p0.e` v3 @kind this, `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lp0/e;.e:(Landroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f457c.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4f4580.  if v4 == v0 then goto L4f45e4;
  #L4f4584.  v0:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4f4588.  if v4 != v0 then goto L4f458e;
  #L4f458c.  goto L4f45e4;
  #L4f458e.  v0:= new `java.lang.IllegalArgumentException`;
  #L4f4592.  v1:= new `java.lang.StringBuilder`;
  #L4f4596.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f459c.  v2:= "Unsupported format: " @kind object;
  #L4f45a0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f45a6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f45ac.  v4:= ", must be one of " @kind object;
  #L4f45b0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f45b6.  v4:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4f45ba.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f45c0.  v4:= " or " @kind object;
  #L4f45c4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f45ca.  v4:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4f45ce.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f45d4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f45da.  v4:= temp @kind object;
  #L4f45dc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f45e2.  throw v0;
  #L4f45e4.  v3.`p0.e.t` @type ^`android.graphics.Bitmap$Config` := v4 @kind object;
  #L4f45e8.  return @kind void;
}
procedure `void` `f`(`p0.e` v1 @kind this) @signature `Lp0/e;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f4444.  v0:= -1I;
  #L4f4446.  v1.`p0.e.k` @type ^`int` := v0;
  #L4f444a.  return @kind void;
}
procedure `int` `g`(`p0.e` v1 @kind this) @signature `Lp0/e;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3c84.  v0:= v1.`p0.e.k` @type ^`int`;
  #L4f3c88.  return v0;
}
procedure `int` `getByteSize`(`p0.e` v2 @kind this) @signature `Lp0/e;.getByteSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f3c50.  v0:= v2.`p0.e.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4f3c54.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L4f3c5a.  v0:= temp;
  #L4f3c5c.  v1:= v2.`p0.e.i` @type ^`byte`[] @kind object;
  #L4f3c60.  v1:= length @variable v1;
  #L4f3c62.  v0:= v0 + v1 @kind int;
  #L4f3c64.  v1:= v2.`p0.e.j` @type ^`int`[] @kind object;
  #L4f3c68.  v1:= length @variable v1;
  #L4f3c6a.  v1:= v1 * 4;
  #L4f3c6e.  v0:= v0 + v1 @kind int;
  #L4f3c70.  return v0;
}
procedure `java.nio.ByteBuffer` `getData`(`p0.e` v1 @kind this) @signature `Lp0/e;.getData:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3d8c.  v0:= v1.`p0.e.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4f3d90.  return v0 @kind object;
}
procedure `int` `l`(`p0.e` v2 @kind this, `int` v3 ) @signature `Lp0/e;.l:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f3c9c.  if v3 < 0 then goto L4f3cc2;
  #L4f3ca0.  v0:= v2.`p0.e.l` @type ^`p0.c` @kind object;
  #L4f3ca4.  v1:= v0.`p0.c.c` @type ^`int`;
  #L4f3ca8.  if v3 >= v1 then goto L4f3cc2;
  #L4f3cac.  v0:= v0.`p0.c.e` @type ^`java.util.List` @kind object;
  #L4f3cb0.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f3cb6.  v3:= temp @kind object;
  #L4f3cb8.  v3:= (`p0.b`) v3 @kind object;
  #L4f3cbc.  v3:= v3.`p0.b.i` @type ^`int`;
  #L4f3cc0.  goto L4f3cc4;
  #L4f3cc2.  v3:= -1I;
  #L4f3cc4.  return v3;
}
procedure `void` `p`(`p0.e` v2 @kind this, `p0.c` v3 @kind object, `java.nio.ByteBuffer` v4 @kind object, `int` v5 ) @signature `Lp0/e;.p:(Lp0/c;Ljava/nio/ByteBuffer;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f445c.  @monitorenter v2
  #L4f445e.  if v5 <= 0 then goto L4f4526;
  #L4f4462.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L4f4468.  v5:= temp;
  #L4f446a.  v0:= 0I;
  #L4f446c.  v2.`p0.e.o` @type ^`int` := v0;
  #L4f4470.  v2.`p0.e.l` @type ^`p0.c` := v3 @kind object;
  #L4f4474.  v1:= -1I;
  #L4f4476.  v2.`p0.e.k` @type ^`int` := v1;
  #L4f447a.  call temp:= `asReadOnlyBuffer`(v4) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L4f4480.  v4:= temp @kind object;
  #L4f4482.  v2.`p0.e.d` @type ^`java.nio.ByteBuffer` := v4 @kind object;
  #L4f4486.  call temp:= `position`(v4, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L4f448c.  v4:= v2.`p0.e.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4f4490.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L4f4494.  call temp:= `order`(v4, v1) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4f449a.  v2.`p0.e.n` @type ^`boolean` := v0 @kind boolean;
  #L4f449e.  v4:= v3.`p0.c.e` @type ^`java.util.List` @kind object;
  #L4f44a2.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4f44a8.  v4:= temp @kind object;
  #L4f44aa.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4f44b0.  v0:= temp;
  #L4f44b2.  if v0 == 0 then goto L4f44d2;
  #L4f44b6.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4f44bc.  v0:= temp @kind object;
  #L4f44be.  v0:= (`p0.b`) v0 @kind object;
  #L4f44c2.  v0:= v0.`p0.b.g` @type ^`int`;
  #L4f44c6.  v1:= 3I;
  #L4f44c8.  if v0 != v1 then goto L4f44aa;
  #L4f44cc.  v4:= 1I;
  #L4f44ce.  v2.`p0.e.n` @type ^`boolean` := v4 @kind boolean;
  #L4f44d2.  v2.`p0.e.p` @type ^`int` := v5;
  #L4f44d6.  v4:= v3.`p0.c.f` @type ^`int`;
  #L4f44da.  v0:= v4 / v5 @kind int;
  #L4f44de.  v2.`p0.e.r` @type ^`int` := v0;
  #L4f44e2.  v3:= v3.`p0.c.g` @type ^`int`;
  #L4f44e6.  v5:= v3 / v5 @kind int;
  #L4f44ea.  v2.`p0.e.q` @type ^`int` := v5;
  #L4f44ee.  v5:= v2.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f44f2.  v4:= v4 * v3 @kind int;
  #L4f44f6.  call temp:= `e`(v5, v4) @signature `Lp0/a$a;.e:(I)[B` @kind interface;
  #L4f44fc.  v3:= temp @kind object;
  #L4f44fe.  v2.`p0.e.i` @type ^`byte`[] := v3 @kind object;
  #L4f4502.  v3:= v2.`p0.e.c` @type ^`p0.a$a` @kind object;
  #L4f4506.  v4:= v2.`p0.e.r` @type ^`int`;
  #L4f450a.  v5:= v2.`p0.e.q` @type ^`int`;
  #L4f450e.  v4:= v4 * v5 @kind int;
  #L4f4512.  call temp:= `b`(v3, v4) @signature `Lp0/a$a;.b:(I)[I` @kind interface;
  #L4f4518.  v3:= temp @kind object;
  #L4f451a.  v2.`p0.e.j` @type ^`int`[] := v3 @kind object;
  #L4f451e.  @monitorexit v2
  #L4f4520.  return @kind void;
  #L4f4522.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f4524.  goto L4f4554;
  #L4f4526.  v3:= new `java.lang.IllegalArgumentException`;
  #L4f452a.  v4:= new `java.lang.StringBuilder`;
  #L4f452e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f4534.  v0:= "Sample size must be >=0, not: " @kind object;
  #L4f4538.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f453e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f4544.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f454a.  v4:= temp @kind object;
  #L4f454c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f4552.  throw v3;
  #L4f4554.  @monitorexit v2
  #L4f4556.  throw v3;
  catch `java.lang.Throwable` @[L4f4462..L4f451e] goto L4f4522;
  catch `java.lang.Throwable` @[L4f4526..L4f4554] goto L4f4522;
}
