record `p.h$d$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `int` `p.h$d$b.a` @AccessFlag FINAL_SYNTHETIC;
  `p.h$d` `p.h$d$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`p.h$d$b` v0 @kind this, `p.h$d` v1 @kind object, `int` v2 ) @signature `Lp/h$d$b;.<init>:(Lp/h$d;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f2048.  v0.`p.h$d$b.b` @type ^`p.h$d` := v1 @kind object;
  #L4f204c.  v0.`p.h$d$b.a` @type ^`int` := v2;
  #L4f2050.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f2056.  return @kind void;
}
procedure `void` `run`(`p.h$d$b` v2 @kind this) @signature `Lp/h$d$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f2068.  v0:= v2.`p.h$d$b.b` @type ^`p.h$d` @kind object;
  #L4f206c.  v1:= v2.`p.h$d$b.a` @type ^`int`;
  #L4f2070.  call `d`(v0, v1) @signature `Lp/h$d;.d:(I)V` @kind virtual;
  #L4f2076.  return @kind void;
}
