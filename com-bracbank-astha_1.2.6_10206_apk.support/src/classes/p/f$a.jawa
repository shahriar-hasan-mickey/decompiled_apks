record `p.f$a` @kind class @AccessFlag FINAL {
  `int`[] `p.f$a.a` @AccessFlag FINAL;
  `float`[] `p.f$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`p.f$a` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lp/f$a;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4f19c8.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f19ce.  v0:= 2I;
  #L4f19d0.  v1:= new `int`[v0];
  #L4f19d4.  v2:= 0I;
  #L4f19d6.  v1[v2]:= v4;
  #L4f19da.  v4:= 1I;
  #L4f19dc.  v1[v4]:= v5;
  #L4f19e0.  v3.`p.f$a.a` @type ^`int`[] := v1 @kind object;
  #L4f19e4.  v4:= new `float`[v0];
  #L4f19e8.  goto L4f19f4;
  #L4f19ee.  v3.`p.f$a.b` @type ^`float`[] := v4 @kind object;
  #L4f19f2.  return @kind void;
  #L4f19f4.  v4:= (0I, 1065353216I) @kind object;
  #L4f1a03.  goto L4f19ee;
}
procedure `void` `<init>`(`p.f$a` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Lp/f$a;.<init>:(III)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4f1a14.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f1a1a.  v0:= 3I;
  #L4f1a1c.  v1:= new `int`[v0];
  #L4f1a20.  v2:= 0I;
  #L4f1a22.  v1[v2]:= v4;
  #L4f1a26.  v4:= 1I;
  #L4f1a28.  v1[v4]:= v5;
  #L4f1a2c.  v4:= 2I;
  #L4f1a2e.  v1[v4]:= v6;
  #L4f1a32.  v3.`p.f$a.a` @type ^`int`[] := v1 @kind object;
  #L4f1a36.  v4:= new `float`[v0];
  #L4f1a3a.  goto L4f1a48;
  #L4f1a40.  v3.`p.f$a.b` @type ^`float`[] := v4 @kind object;
  #L4f1a44.  return @kind void;
  #L4f1a46.  
  #L4f1a48.  v4:= (0I, 1056964608I, 1065353216I) @kind object;
  #L4f1a5b.  goto L4f1a40;
}
procedure `void` `<init>`(`p.f$a` v4 @kind this, `java.util.List` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lp/f$a;.<init>:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f1a6c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f1a72.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4f1a78.  v0:= temp;
  #L4f1a7a.  v1:= new `int`[v0];
  #L4f1a7e.  v4.`p.f$a.a` @type ^`int`[] := v1 @kind object;
  #L4f1a82.  v1:= new `float`[v0];
  #L4f1a86.  v4.`p.f$a.b` @type ^`float`[] := v1 @kind object;
  #L4f1a8a.  v1:= 0I;
  #L4f1a8c.  if v1 >= v0 then goto L4f1ace;
  #L4f1a90.  v2:= v4.`p.f$a.a` @type ^`int`[] @kind object;
  #L4f1a94.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f1a9a.  v3:= temp @kind object;
  #L4f1a9c.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L4f1aa0.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4f1aa6.  v3:= temp;
  #L4f1aa8.  v2[v1]:= v3;
  #L4f1aac.  v2:= v4.`p.f$a.b` @type ^`float`[] @kind object;
  #L4f1ab0.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f1ab6.  v3:= temp @kind object;
  #L4f1ab8.  v3:= (`java.lang.Float`) v3 @kind object;
  #L4f1abc.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4f1ac2.  v3:= temp;
  #L4f1ac4.  v2[v1]:= v3;
  #L4f1ac8.  v1:= v1 + 1;
  #L4f1acc.  goto L4f1a8c;
  #L4f1ace.  return @kind void;
}
