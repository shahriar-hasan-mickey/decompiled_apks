record `p.g` @kind class @AccessFlag FINAL {
}
procedure `int`[] `a`(`int`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lp/g;.a:([III)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4f1e8c.  v0:= v3 + 1;
  #L4f1e90.  v1:= length @variable v2;
  #L4f1e92.  if v0 <= v1 then goto L4f1eac;
  #L4f1e96.  call temp:= `c`(v3) @signature `Lp/g;.c:(I)I` @kind static;
  #L4f1e9c.  v0:= temp;
  #L4f1e9e.  v0:= new `int`[v0];
  #L4f1ea2.  v1:= 0I;
  #L4f1ea4.  call `arraycopy`(v2, v1, v0, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4f1eaa.  v2:= v0 @kind object;
  #L4f1eac.  v2[v3]:= v4;
  #L4f1eb0.  return v2 @kind object;
}
procedure `java.lang.Object`[] `b`(`java.lang.Object`[] v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lp/g;.b:([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4f1ec4.  v0:= v3 + 1;
  #L4f1ec8.  v1:= length @variable v2;
  #L4f1eca.  if v0 <= v1 then goto L4f1efc;
  #L4f1ece.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4f1ed4.  v0:= temp @kind object;
  #L4f1ed6.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4f1edc.  v0:= temp @kind object;
  #L4f1ede.  call temp:= `c`(v3) @signature `Lp/g;.c:(I)I` @kind static;
  #L4f1ee4.  v1:= temp;
  #L4f1ee6.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L4f1eec.  v0:= temp @kind object;
  #L4f1eee.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L4f1ef2.  v1:= 0I;
  #L4f1ef4.  call `arraycopy`(v2, v1, v0, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4f1efa.  v2:= v0 @kind object;
  #L4f1efc.  v2[v3]:= v4 @kind object;
  #L4f1f00.  return v2 @kind object;
}
procedure `int` `c`(`int` v1 ) @signature `Lp/g;.c:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f1e68.  v0:= 4I;
  #L4f1e6a.  if v1 > v0 then goto L4f1e74;
  #L4f1e6e.  v1:= 8I;
  #L4f1e72.  goto L4f1e78;
  #L4f1e74.  v1:= v1 * 2;
  #L4f1e78.  return v1;
}
