record `t0.a$a` @kind class @AccessFlag  extends `t0.a` @kind class {
}
procedure `void` `<init>`(`t0.a$a` v0 @kind this) @signature `Lt0/a$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fa7c4.  call `<init>`(v0) @signature `Lt0/a;.<init>:()V` @kind direct;
  #L4fa7ca.  return @kind void;
}
procedure `boolean` `a`(`t0.a$a` v1 @kind this) @signature `Lt0/a$a;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa754.  v0:= 1I;
  #L4fa756.  return v0;
}
procedure `boolean` `b`(`t0.a$a` v1 @kind this) @signature `Lt0/a$a;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa768.  v0:= 1I;
  #L4fa76a.  return v0;
}
procedure `boolean` `c`(`t0.a$a` v1 @kind this, `com.bumptech.glide.load.DataSource` v2 @kind object) @signature `Lt0/a$a;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa77c.  v0:= `@@com.bumptech.glide.load.DataSource.b` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa780.  if v2 != v0 then goto L4fa788;
  #L4fa784.  v2:= 1I;
  #L4fa786.  goto L4fa78a;
  #L4fa788.  v2:= 0I;
  #L4fa78a.  return v2;
}
procedure `boolean` `d`(`t0.a$a` v0 @kind this, `boolean` v1 , `com.bumptech.glide.load.DataSource` v2 @kind object, `com.bumptech.glide.load.EncodeStrategy` v3 @kind object) @signature `Lt0/a$a;.d:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC {
    temp;

  #L4fa79c.  v1:= `@@com.bumptech.glide.load.DataSource.d` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa7a0.  if v2 == v1 then goto L4fa7b0;
  #L4fa7a4.  v1:= `@@com.bumptech.glide.load.DataSource.e` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa7a8.  if v2 == v1 then goto L4fa7b0;
  #L4fa7ac.  v1:= 1I;
  #L4fa7ae.  goto L4fa7b2;
  #L4fa7b0.  v1:= 0I;
  #L4fa7b2.  return v1;
}
