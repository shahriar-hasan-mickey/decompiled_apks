record `t0.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `t0.a` `@@t0.a.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `t0.a` `@@t0.a.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `t0.a` `@@t0.a.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `t0.a` `@@t0.a.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `t0.a` `@@t0.a.e` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lt0/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fa9d0.  v0:= new `t0.a$a`;
  #L4fa9d4.  call `<init>`(v0) @signature `Lt0/a$a;.<init>:()V` @kind direct;
  #L4fa9da.  `@@t0.a.a` @type ^`t0.a` := v0 @kind object;
  #L4fa9de.  v0:= new `t0.a$b`;
  #L4fa9e2.  call `<init>`(v0) @signature `Lt0/a$b;.<init>:()V` @kind direct;
  #L4fa9e8.  `@@t0.a.b` @type ^`t0.a` := v0 @kind object;
  #L4fa9ec.  v0:= new `t0.a$c`;
  #L4fa9f0.  call `<init>`(v0) @signature `Lt0/a$c;.<init>:()V` @kind direct;
  #L4fa9f6.  `@@t0.a.c` @type ^`t0.a` := v0 @kind object;
  #L4fa9fa.  v0:= new `t0.a$d`;
  #L4fa9fe.  call `<init>`(v0) @signature `Lt0/a$d;.<init>:()V` @kind direct;
  #L4faa04.  `@@t0.a.d` @type ^`t0.a` := v0 @kind object;
  #L4faa08.  v0:= new `t0.a$e`;
  #L4faa0c.  call `<init>`(v0) @signature `Lt0/a$e;.<init>:()V` @kind direct;
  #L4faa12.  `@@t0.a.e` @type ^`t0.a` := v0 @kind object;
  #L4faa16.  return @kind void;
}
procedure `void` `<init>`(`t0.a` v0 @kind this) @signature `Lt0/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4faa28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4faa2e.  return @kind void;
}
procedure `boolean` `a`() @signature `Lt0/a;.a:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `b`() @signature `Lt0/a;.b:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `c`(`com.bumptech.glide.load.DataSource` v0 @kind object) @signature `Lt0/a;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `d`(`boolean` v0 , `com.bumptech.glide.load.DataSource` v1 @kind object, `com.bumptech.glide.load.EncodeStrategy` v2 @kind object) @signature `Lt0/a;.d:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
