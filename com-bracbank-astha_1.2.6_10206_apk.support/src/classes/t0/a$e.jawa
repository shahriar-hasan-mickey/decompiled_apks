record `t0.a$e` @kind class @AccessFlag  extends `t0.a` @kind class {
}
procedure `void` `<init>`(`t0.a$e` v0 @kind this) @signature `Lt0/a$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fa9b8.  call `<init>`(v0) @signature `Lt0/a;.<init>:()V` @kind direct;
  #L4fa9be.  return @kind void;
}
procedure `boolean` `a`(`t0.a$e` v1 @kind this) @signature `Lt0/a$e;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa93c.  v0:= 1I;
  #L4fa93e.  return v0;
}
procedure `boolean` `b`(`t0.a$e` v1 @kind this) @signature `Lt0/a$e;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa950.  v0:= 1I;
  #L4fa952.  return v0;
}
procedure `boolean` `c`(`t0.a$e` v1 @kind this, `com.bumptech.glide.load.DataSource` v2 @kind object) @signature `Lt0/a$e;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa964.  v0:= `@@com.bumptech.glide.load.DataSource.b` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa968.  if v2 != v0 then goto L4fa970;
  #L4fa96c.  v2:= 1I;
  #L4fa96e.  goto L4fa972;
  #L4fa970.  v2:= 0I;
  #L4fa972.  return v2;
}
procedure `boolean` `d`(`t0.a$e` v0 @kind this, `boolean` v1 , `com.bumptech.glide.load.DataSource` v2 @kind object, `com.bumptech.glide.load.EncodeStrategy` v3 @kind object) @signature `Lt0/a$e;.d:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC {
    temp;

  #L4fa984.  if v1 == 0 then goto L4fa990;
  #L4fa988.  v1:= `@@com.bumptech.glide.load.DataSource.c` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa98c.  if v2 == v1 then goto L4fa998;
  #L4fa990.  v1:= `@@com.bumptech.glide.load.DataSource.a` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa994.  if v2 != v1 then goto L4fa9a4;
  #L4fa998.  v1:= `@@com.bumptech.glide.load.EncodeStrategy.b` @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L4fa99c.  if v3 != v1 then goto L4fa9a4;
  #L4fa9a0.  v1:= 1I;
  #L4fa9a2.  goto L4fa9a6;
  #L4fa9a4.  v1:= 0I;
  #L4fa9a6.  return v1;
}
