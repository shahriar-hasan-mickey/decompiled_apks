record `t0.a$c` @kind class @AccessFlag  extends `t0.a` @kind class {
}
procedure `void` `<init>`(`t0.a$c` v0 @kind this) @signature `Lt0/a$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fa8a8.  call `<init>`(v0) @signature `Lt0/a;.<init>:()V` @kind direct;
  #L4fa8ae.  return @kind void;
}
procedure `boolean` `a`(`t0.a$c` v1 @kind this) @signature `Lt0/a$c;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa844.  v0:= 1I;
  #L4fa846.  return v0;
}
procedure `boolean` `b`(`t0.a$c` v1 @kind this) @signature `Lt0/a$c;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa858.  v0:= 0I;
  #L4fa85a.  return v0;
}
procedure `boolean` `c`(`t0.a$c` v1 @kind this, `com.bumptech.glide.load.DataSource` v2 @kind object) @signature `Lt0/a$c;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa86c.  v0:= `@@com.bumptech.glide.load.DataSource.c` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa870.  if v2 == v0 then goto L4fa880;
  #L4fa874.  v0:= `@@com.bumptech.glide.load.DataSource.e` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa878.  if v2 == v0 then goto L4fa880;
  #L4fa87c.  v2:= 1I;
  #L4fa87e.  goto L4fa882;
  #L4fa880.  v2:= 0I;
  #L4fa882.  return v2;
}
procedure `boolean` `d`(`t0.a$c` v0 @kind this, `boolean` v1 , `com.bumptech.glide.load.DataSource` v2 @kind object, `com.bumptech.glide.load.EncodeStrategy` v3 @kind object) @signature `Lt0/a$c;.d:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC {
    temp;

  #L4fa894.  v1:= 0I;
  #L4fa896.  return v1;
}
