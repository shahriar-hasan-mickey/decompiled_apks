record `t0.a$d` @kind class @AccessFlag  extends `t0.a` @kind class {
}
procedure `void` `<init>`(`t0.a$d` v0 @kind this) @signature `Lt0/a$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fa924.  call `<init>`(v0) @signature `Lt0/a;.<init>:()V` @kind direct;
  #L4fa92a.  return @kind void;
}
procedure `boolean` `a`(`t0.a$d` v1 @kind this) @signature `Lt0/a$d;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa8c0.  v0:= 0I;
  #L4fa8c2.  return v0;
}
procedure `boolean` `b`(`t0.a$d` v1 @kind this) @signature `Lt0/a$d;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa8d4.  v0:= 1I;
  #L4fa8d6.  return v0;
}
procedure `boolean` `c`(`t0.a$d` v0 @kind this, `com.bumptech.glide.load.DataSource` v1 @kind object) @signature `Lt0/a$d;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC {
    temp;

  #L4fa8e8.  v1:= 0I;
  #L4fa8ea.  return v1;
}
procedure `boolean` `d`(`t0.a$d` v0 @kind this, `boolean` v1 , `com.bumptech.glide.load.DataSource` v2 @kind object, `com.bumptech.glide.load.EncodeStrategy` v3 @kind object) @signature `Lt0/a$d;.d:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC {
    temp;

  #L4fa8fc.  v1:= `@@com.bumptech.glide.load.DataSource.d` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa900.  if v2 == v1 then goto L4fa910;
  #L4fa904.  v1:= `@@com.bumptech.glide.load.DataSource.e` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L4fa908.  if v2 == v1 then goto L4fa910;
  #L4fa90c.  v1:= 1I;
  #L4fa90e.  goto L4fa912;
  #L4fa910.  v1:= 0I;
  #L4fa912.  return v1;
}
