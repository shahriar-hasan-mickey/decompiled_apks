record `u0.j` @kind class @AccessFlag PUBLIC extends `u0.d` @kind interface {
  `u0.k` `u0.j.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `u0.j.b` @AccessFlag PRIVATE_FINAL;
  `long` `u0.j.c` @AccessFlag PRIVATE_FINAL;
  `u0.j$a` `u0.j.d` @AccessFlag PRIVATE_FINAL;
  `long` `u0.j.e` @AccessFlag PRIVATE;
  `long` `u0.j.f` @AccessFlag PRIVATE;
  `int` `u0.j.g` @AccessFlag PRIVATE;
  `int` `u0.j.h` @AccessFlag PRIVATE;
  `int` `u0.j.i` @AccessFlag PRIVATE;
  `int` `u0.j.j` @AccessFlag PRIVATE;
}
global `android.graphics.Bitmap$Config` `@@u0.j.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lu0/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fc4ec.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4fc4f0.  `@@u0.j.k` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L4fc4f4.  return @kind void;
}
procedure `void` `<init>`(`u0.j` v2 @kind this, `long` v3 ) @signature `Lu0/j;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4fc508.  call temp:= `l`() @signature `Lu0/j;.l:()Lu0/k;` @kind static;
  #L4fc50e.  v0:= temp @kind object;
  #L4fc510.  call temp:= `k`() @signature `Lu0/j;.k:()Ljava/util/Set;` @kind static;
  #L4fc516.  v1:= temp @kind object;
  #L4fc518.  call `<init>`(v2, v3, v0, v1) @signature `Lu0/j;.<init>:(JLu0/k;Ljava/util/Set;)V` @kind direct;
  #L4fc51e.  return @kind void;
}
procedure `void` `<init>`(`u0.j` v0 @kind this, `long` v1 , `u0.k` v3 @kind object, `java.util.Set` v4 @kind object) @signature `Lu0/j;.<init>:(JLu0/k;Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fc530.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fc536.  v0.`u0.j.c` @type ^`long` := v1 @kind wide;
  #L4fc53a.  v0.`u0.j.e` @type ^`long` := v1 @kind wide;
  #L4fc53e.  v0.`u0.j.a` @type ^`u0.k` := v3 @kind object;
  #L4fc542.  v0.`u0.j.b` @type ^`java.util.Set` := v4 @kind object;
  #L4fc546.  v1:= new `u0.j$b`;
  #L4fc54a.  call `<init>`(v1) @signature `Lu0/j$b;.<init>:()V` @kind direct;
  #L4fc550.  v0.`u0.j.d` @type ^`u0.j$a` := v1 @kind object;
  #L4fc554.  return @kind void;
}
procedure `void` `f`(`android.graphics.Bitmap$Config` v3 @kind object) @signature `Lu0/j;.f:(Landroid/graphics/Bitmap$Config;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4fc568.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4fc56c.  v1:= 26I;
  #L4fc570.  if v0 >= v1 then goto L4fc576;
  #L4fc574.  return @kind void;
  #L4fc576.  v0:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4fc57a.  if v3 == v0 then goto L4fc580;
  #L4fc57e.  return @kind void;
  #L4fc580.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fc584.  v1:= new `java.lang.StringBuilder`;
  #L4fc588.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc58e.  v2:= "Cannot create a mutable Bitmap with config: " @kind object;
  #L4fc592.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc598.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc59e.  v3:= ". Consider setting Downsampler#ALLOW_HARDWARE_CONFIG to false in your RequestOptions and/or in GlideBuilder.setDefaultRequestOptions" @kind object;
  #L4fc5a2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc5a8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc5ae.  v3:= temp @kind object;
  #L4fc5b0.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc5b6.  throw v0;
}
procedure `android.graphics.Bitmap` `g`(`int` v0 , `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lu0/j;.g:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4fc2d4.  if v2 == 0 then goto L4fc2da;
  #L4fc2d8.  goto L4fc2de;
  #L4fc2da.  v2:= `@@u0.j.k` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4fc2de.  call temp:= `createBitmap`(v0, v1, v2) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L4fc2e4.  v0:= temp @kind object;
  #L4fc2e6.  return v0 @kind object;
}
procedure `void` `h`(`u0.j` v2 @kind this) @signature `Lu0/j;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fc5f0.  v0:= "LruBitmapPool" @kind object;
  #L4fc5f4.  v1:= 2I;
  #L4fc5f6.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fc5fc.  v0:= temp;
  #L4fc5fe.  if v0 == 0 then goto L4fc608;
  #L4fc602.  call `i`(v2) @signature `Lu0/j;.i:()V` @kind direct;
  #L4fc608.  return @kind void;
}
procedure `void` `i`(`u0.j` v3 @kind this) @signature `Lu0/j;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4fc61c.  v0:= new `java.lang.StringBuilder`;
  #L4fc620.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc626.  v1:= "Hits=" @kind object;
  #L4fc62a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc630.  v1:= v3.`u0.j.g` @type ^`int`;
  #L4fc634.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc63a.  v1:= ", misses=" @kind object;
  #L4fc63e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc644.  v1:= v3.`u0.j.h` @type ^`int`;
  #L4fc648.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc64e.  v1:= ", puts=" @kind object;
  #L4fc652.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc658.  v1:= v3.`u0.j.i` @type ^`int`;
  #L4fc65c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc662.  v1:= ", evictions=" @kind object;
  #L4fc666.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc66c.  v1:= v3.`u0.j.j` @type ^`int`;
  #L4fc670.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc676.  v1:= ", currentSize=" @kind object;
  #L4fc67a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc680.  v1:= v3.`u0.j.f` @type ^`long` @kind wide;
  #L4fc684.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc68a.  v1:= ", maxSize=" @kind object;
  #L4fc68e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc694.  v1:= v3.`u0.j.e` @type ^`long` @kind wide;
  #L4fc698.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc69e.  v1:= "\nStrategy=" @kind object;
  #L4fc6a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc6a8.  v1:= v3.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc6ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc6b2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc6b8.  v0:= temp @kind object;
  #L4fc6ba.  v1:= "LruBitmapPool" @kind object;
  #L4fc6be.  call temp:= `v`(v1, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4fc6c4.  return @kind void;
}
procedure `void` `j`(`u0.j` v2 @kind this) @signature `Lu0/j;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fc6d8.  v0:= v2.`u0.j.e` @type ^`long` @kind wide;
  #L4fc6dc.  call `q`(v2, v0) @signature `Lu0/j;.q:(J)V` @kind direct;
  #L4fc6e2.  return @kind void;
}
procedure `java.util.Set` `k`() @signature `Lu0/j;.k:()Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4fc464.  v0:= new `java.util.HashSet`;
  #L4fc468.  call temp:= `values`() @signature `Landroid/graphics/Bitmap$Config;.values:()[Landroid/graphics/Bitmap$Config;` @kind static;
  #L4fc46e.  v1:= temp @kind object;
  #L4fc470.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L4fc476.  v1:= temp @kind object;
  #L4fc478.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4fc47e.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4fc482.  v2:= 0I;
  #L4fc484.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc48a.  v2:= 26I;
  #L4fc48e.  if v1 < v2 then goto L4fc49c;
  #L4fc492.  v1:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4fc496.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc49c.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L4fc4a2.  v0:= temp @kind object;
  #L4fc4a4.  return v0 @kind object;
}
procedure `u0.k` `l`() @signature `Lu0/j;.l:()Lu0/k;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4fc4d0.  v0:= new `u0.m`;
  #L4fc4d4.  call `<init>`(v0) @signature `Lu0/m;.<init>:()V` @kind direct;
  #L4fc4da.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `m`(`u0.j` v5 @kind this, `int` v6 , `int` v7 , `android.graphics.Bitmap$Config` v8 @kind object) @signature `Lu0/j;.m:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fc350.  @monitorenter v5
  #L4fc352.  call `f`(v8) @signature `Lu0/j;.f:(Landroid/graphics/Bitmap$Config;)V` @kind static;
  #L4fc358.  v0:= v5.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc35c.  if v8 == 0 then goto L4fc364;
  #L4fc360.  v1:= v8 @kind object;
  #L4fc362.  goto L4fc368;
  #L4fc364.  v1:= `@@u0.j.k` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4fc368.  call temp:= `d`(v0, v6, v7, v1) @signature `Lu0/k;.d:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L4fc36e.  v0:= temp @kind object;
  #L4fc370.  if v0 != 0 then goto L4fc3ba;
  #L4fc374.  v1:= "LruBitmapPool" @kind object;
  #L4fc378.  v2:= 3I;
  #L4fc37a.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fc380.  v1:= temp;
  #L4fc382.  if v1 == 0 then goto L4fc3ac;
  #L4fc386.  v1:= new `java.lang.StringBuilder`;
  #L4fc38a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc390.  v2:= "Missing bitmap=" @kind object;
  #L4fc394.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc39a.  v2:= v5.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc39e.  call temp:= `a`(v2, v6, v7, v8) @signature `Lu0/k;.a:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind interface;
  #L4fc3a4.  v2:= temp @kind object;
  #L4fc3a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc3ac.  v1:= v5.`u0.j.h` @type ^`int`;
  #L4fc3b0.  v1:= v1 + 1;
  #L4fc3b4.  v5.`u0.j.h` @type ^`int` := v1;
  #L4fc3b8.  goto L4fc3ee;
  #L4fc3ba.  v1:= v5.`u0.j.g` @type ^`int`;
  #L4fc3be.  v1:= v1 + 1;
  #L4fc3c2.  v5.`u0.j.g` @type ^`int` := v1;
  #L4fc3c6.  v1:= v5.`u0.j.f` @type ^`long` @kind wide;
  #L4fc3ca.  v3:= v5.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc3ce.  call temp:= `b`(v3, v0) @signature `Lu0/k;.b:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L4fc3d4.  v3:= temp;
  #L4fc3d6.  v3:= (`long`) v3 @kind i2l;
  #L4fc3d8.  v1:= v1 - v3 @kind long;
  #L4fc3da.  v5.`u0.j.f` @type ^`long` := v1 @kind wide;
  #L4fc3de.  v1:= v5.`u0.j.d` @type ^`u0.j$a` @kind object;
  #L4fc3e2.  call `a`(v1, v0) @signature `Lu0/j$a;.a:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L4fc3e8.  call `p`(v0) @signature `Lu0/j;.p:(Landroid/graphics/Bitmap;)V` @kind static;
  #L4fc3ee.  v1:= "LruBitmapPool" @kind object;
  #L4fc3f2.  v2:= 2I;
  #L4fc3f4.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fc3fa.  v1:= temp;
  #L4fc3fc.  if v1 == 0 then goto L4fc438;
  #L4fc400.  v1:= "LruBitmapPool" @kind object;
  #L4fc404.  v2:= new `java.lang.StringBuilder`;
  #L4fc408.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc40e.  v3:= "Get bitmap=" @kind object;
  #L4fc412.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc418.  v3:= v5.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc41c.  call temp:= `a`(v3, v6, v7, v8) @signature `Lu0/k;.a:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind interface;
  #L4fc422.  v6:= temp @kind object;
  #L4fc424.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc42a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc430.  v6:= temp @kind object;
  #L4fc432.  call temp:= `v`(v1, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4fc438.  call `h`(v5) @signature `Lu0/j;.h:()V` @kind direct;
  #L4fc43e.  @monitorexit v5
  #L4fc440.  return v0 @kind object;
  #L4fc442.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fc444.  @monitorexit v5
  #L4fc446.  throw v6;
  catch `java.lang.Throwable` @[L4fc352..L4fc43e] goto L4fc442;
}
procedure `void` `o`(`android.graphics.Bitmap` v1 @kind object) @signature `Lu0/j;.o:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4fc6f4.  v0:= 1I;
  #L4fc6f6.  call `setPremultiplied`(v1, v0) @signature `Landroid/graphics/Bitmap;.setPremultiplied:(Z)V` @kind virtual;
  #L4fc6fc.  return @kind void;
}
procedure `void` `p`(`android.graphics.Bitmap` v1 @kind object) @signature `Lu0/j;.p:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4fc710.  v0:= 1I;
  #L4fc712.  call `setHasAlpha`(v1, v0) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L4fc718.  call `o`(v1) @signature `Lu0/j;.o:(Landroid/graphics/Bitmap;)V` @kind static;
  #L4fc71e.  return @kind void;
}
procedure `void` `q`(`u0.j` v5 @kind this, `long` v6 ) @signature `Lu0/j;.q:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fc97c.  @monitorenter v5
  #L4fc97e.  v0:= v5.`u0.j.f` @type ^`long` @kind wide;
  #L4fc982.  v2:= lcmp(v0, v6);
  #L4fc986.  if v2 <= 0 then goto L4fca40;
  #L4fc98a.  v0:= v5.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc98e.  call temp:= `removeLast`(v0) @signature `Lu0/k;.removeLast:()Landroid/graphics/Bitmap;` @kind interface;
  #L4fc994.  v0:= temp @kind object;
  #L4fc996.  if v0 != 0 then goto L4fc9cc;
  #L4fc99a.  v6:= "LruBitmapPool" @kind object;
  #L4fc99e.  v7:= 5I;
  #L4fc9a0.  call temp:= `isLoggable`(v6, v7) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fc9a6.  v6:= temp;
  #L4fc9a8.  if v6 == 0 then goto L4fc9c0;
  #L4fc9ac.  v6:= "LruBitmapPool" @kind object;
  #L4fc9b0.  v7:= "Size mismatch, resetting" @kind object;
  #L4fc9b4.  call temp:= `w`(v6, v7) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4fc9ba.  call `i`(v5) @signature `Lu0/j;.i:()V` @kind direct;
  #L4fc9c0.  v6:= 0L;
  #L4fc9c4.  v5.`u0.j.f` @type ^`long` := v6 @kind wide;
  #L4fc9c8.  @monitorexit v5
  #L4fc9ca.  return @kind void;
  #L4fc9cc.  v1:= v5.`u0.j.d` @type ^`u0.j$a` @kind object;
  #L4fc9d0.  call `a`(v1, v0) @signature `Lu0/j$a;.a:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L4fc9d6.  v1:= v5.`u0.j.f` @type ^`long` @kind wide;
  #L4fc9da.  v3:= v5.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc9de.  call temp:= `b`(v3, v0) @signature `Lu0/k;.b:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L4fc9e4.  v3:= temp;
  #L4fc9e6.  v3:= (`long`) v3 @kind i2l;
  #L4fc9e8.  v1:= v1 - v3 @kind long;
  #L4fc9ea.  v5.`u0.j.f` @type ^`long` := v1 @kind wide;
  #L4fc9ee.  v1:= v5.`u0.j.j` @type ^`int`;
  #L4fc9f2.  v1:= v1 + 1;
  #L4fc9f6.  v5.`u0.j.j` @type ^`int` := v1;
  #L4fc9fa.  v1:= "LruBitmapPool" @kind object;
  #L4fc9fe.  v2:= 3I;
  #L4fca00.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fca06.  v1:= temp;
  #L4fca08.  if v1 == 0 then goto L4fca32;
  #L4fca0c.  v1:= new `java.lang.StringBuilder`;
  #L4fca10.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fca16.  v2:= "Evicting bitmap=" @kind object;
  #L4fca1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fca20.  v2:= v5.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fca24.  call temp:= `e`(v2, v0) @signature `Lu0/k;.e:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L4fca2a.  v2:= temp @kind object;
  #L4fca2c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fca32.  call `h`(v5) @signature `Lu0/j;.h:()V` @kind direct;
  #L4fca38.  call `recycle`(v0) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L4fca3e.  goto L4fc97e;
  #L4fca40.  @monitorexit v5
  #L4fca42.  return @kind void;
  #L4fca44.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fca46.  @monitorexit v5
  #L4fca48.  throw v6;
  catch `java.lang.Throwable` @[L4fc97e..L4fc9c8] goto L4fca44;
  catch `java.lang.Throwable` @[L4fc9cc..L4fca3e] goto L4fca44;
}
procedure `void` `a`(`u0.j` v4 @kind this, `int` v5 ) @signature `Lu0/j;.a:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc8f8.  v0:= "LruBitmapPool" @kind object;
  #L4fc8fc.  v1:= 3I;
  #L4fc8fe.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fc904.  v0:= temp;
  #L4fc906.  if v0 == 0 then goto L4fc924;
  #L4fc90a.  v0:= new `java.lang.StringBuilder`;
  #L4fc90e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc914.  v1:= "trimMemory, level=" @kind object;
  #L4fc918.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc91e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc924.  v0:= 40I;
  #L4fc928.  if v5 >= v0 then goto L4fc964;
  #L4fc92c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4fc930.  v1:= 23I;
  #L4fc934.  v2:= 20I;
  #L4fc938.  if v0 < v1 then goto L4fc942;
  #L4fc93c.  if v5 < v2 then goto L4fc942;
  #L4fc940.  goto L4fc964;
  #L4fc942.  if v5 >= v2 then goto L4fc94e;
  #L4fc946.  v0:= 15I;
  #L4fc94a.  if v5 != v0 then goto L4fc96a;
  #L4fc94e.  call temp:= `n`(v4) @signature `Lu0/j;.n:()J` @kind virtual;
  #L4fc954.  v0:= temp @kind wide;
  #L4fc956.  v2:= 2L;
  #L4fc95a.  v0:= v0 / v2 @kind long;
  #L4fc95c.  call `q`(v4, v0) @signature `Lu0/j;.q:(J)V` @kind direct;
  #L4fc962.  goto L4fc96a;
  #L4fc964.  call `b`(v4) @signature `Lu0/j;.b:()V` @kind virtual;
  #L4fc96a.  return @kind void;
}
procedure `void` `b`(`u0.j` v2 @kind this) @signature `Lu0/j;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fc5c8.  v0:= "LruBitmapPool" @kind object;
  #L4fc5cc.  v1:= 3I;
  #L4fc5ce.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fc5d4.  v0:= 0L;
  #L4fc5d8.  call `q`(v2, v0) @signature `Lu0/j;.q:(J)V` @kind direct;
  #L4fc5de.  return @kind void;
}
procedure `void` `c`(`u0.j` v6 @kind this, `android.graphics.Bitmap` v7 @kind object) @signature `Lu0/j;.c:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fc730.  @monitorenter v6
  #L4fc732.  if v7 == 0 then goto L4fc8b6;
  #L4fc736.  call temp:= `isRecycled`(v7) @signature `Landroid/graphics/Bitmap;.isRecycled:()Z` @kind virtual;
  #L4fc73c.  v0:= temp;
  #L4fc73e.  if v0 != 0 then goto L4fc8a2;
  #L4fc742.  call temp:= `isMutable`(v7) @signature `Landroid/graphics/Bitmap;.isMutable:()Z` @kind virtual;
  #L4fc748.  v0:= temp;
  #L4fc74a.  v1:= 2I;
  #L4fc74c.  if v0 == 0 then goto L4fc814;
  #L4fc750.  v0:= v6.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc754.  call temp:= `b`(v0, v7) @signature `Lu0/k;.b:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L4fc75a.  v0:= temp;
  #L4fc75c.  v2:= (`long`) v0 @kind i2l;
  #L4fc75e.  v4:= v6.`u0.j.e` @type ^`long` @kind wide;
  #L4fc762.  v0:= lcmp(v2, v4);
  #L4fc766.  if v0 > 0 then goto L4fc814;
  #L4fc76a.  v0:= v6.`u0.j.b` @type ^`java.util.Set` @kind object;
  #L4fc76e.  call temp:= `getConfig`(v7) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L4fc774.  v2:= temp @kind object;
  #L4fc776.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc77c.  v0:= temp;
  #L4fc77e.  if v0 != 0 then goto L4fc784;
  #L4fc782.  goto L4fc814;
  #L4fc784.  v0:= v6.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc788.  call temp:= `b`(v0, v7) @signature `Lu0/k;.b:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L4fc78e.  v0:= temp;
  #L4fc790.  v2:= v6.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc794.  call `c`(v2, v7) @signature `Lu0/k;.c:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L4fc79a.  v2:= v6.`u0.j.d` @type ^`u0.j$a` @kind object;
  #L4fc79e.  call `b`(v2, v7) @signature `Lu0/j$a;.b:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L4fc7a4.  v2:= v6.`u0.j.i` @type ^`int`;
  #L4fc7a8.  v2:= v2 + 1;
  #L4fc7ac.  v6.`u0.j.i` @type ^`int` := v2;
  #L4fc7b0.  v2:= v6.`u0.j.f` @type ^`long` @kind wide;
  #L4fc7b4.  v4:= (`long`) v0 @kind i2l;
  #L4fc7b6.  v2:= v2 + v4 @kind long;
  #L4fc7b8.  v6.`u0.j.f` @type ^`long` := v2 @kind wide;
  #L4fc7bc.  v0:= "LruBitmapPool" @kind object;
  #L4fc7c0.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fc7c6.  v0:= temp;
  #L4fc7c8.  if v0 == 0 then goto L4fc804;
  #L4fc7cc.  v0:= "LruBitmapPool" @kind object;
  #L4fc7d0.  v1:= new `java.lang.StringBuilder`;
  #L4fc7d4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc7da.  v2:= "Put bitmap in pool=" @kind object;
  #L4fc7de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc7e4.  v2:= v6.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc7e8.  call temp:= `e`(v2, v7) @signature `Lu0/k;.e:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L4fc7ee.  v7:= temp @kind object;
  #L4fc7f0.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc7f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc7fc.  v7:= temp @kind object;
  #L4fc7fe.  call temp:= `v`(v0, v7) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4fc804.  call `h`(v6) @signature `Lu0/j;.h:()V` @kind direct;
  #L4fc80a.  call `j`(v6) @signature `Lu0/j;.j:()V` @kind direct;
  #L4fc810.  @monitorexit v6
  #L4fc812.  return @kind void;
  #L4fc814.  v0:= "LruBitmapPool" @kind object;
  #L4fc818.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fc81e.  v0:= temp;
  #L4fc820.  if v0 == 0 then goto L4fc898;
  #L4fc824.  v0:= "LruBitmapPool" @kind object;
  #L4fc828.  v1:= new `java.lang.StringBuilder`;
  #L4fc82c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc832.  v2:= "Reject bitmap from pool, bitmap: " @kind object;
  #L4fc836.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc83c.  v2:= v6.`u0.j.a` @type ^`u0.k` @kind object;
  #L4fc840.  call temp:= `e`(v2, v7) @signature `Lu0/k;.e:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L4fc846.  v2:= temp @kind object;
  #L4fc848.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc84e.  v2:= ", is mutable: " @kind object;
  #L4fc852.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc858.  call temp:= `isMutable`(v7) @signature `Landroid/graphics/Bitmap;.isMutable:()Z` @kind virtual;
  #L4fc85e.  v2:= temp;
  #L4fc860.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc866.  v2:= ", is allowed config: " @kind object;
  #L4fc86a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc870.  v2:= v6.`u0.j.b` @type ^`java.util.Set` @kind object;
  #L4fc874.  call temp:= `getConfig`(v7) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L4fc87a.  v3:= temp @kind object;
  #L4fc87c.  call temp:= `contains`(v2, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc882.  v2:= temp;
  #L4fc884.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc88a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc890.  v1:= temp @kind object;
  #L4fc892.  call temp:= `v`(v0, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4fc898.  call `recycle`(v7) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L4fc89e.  @monitorexit v6
  #L4fc8a0.  return @kind void;
  #L4fc8a2.  v7:= new `java.lang.IllegalStateException`;
  #L4fc8a6.  v0:= "Cannot pool recycled bitmap" @kind object;
  #L4fc8aa.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc8b0.  throw v7;
  #L4fc8b2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fc8b4.  goto L4fc8c6;
  #L4fc8b6.  v7:= new `java.lang.NullPointerException`;
  #L4fc8ba.  v0:= "Bitmap must not be null" @kind object;
  #L4fc8be.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc8c4.  throw v7;
  #L4fc8c6.  @monitorexit v6
  #L4fc8c8.  throw v7;
  catch `java.lang.Throwable` @[L4fc736..L4fc810] goto L4fc8b2;
  catch `java.lang.Throwable` @[L4fc814..L4fc89e] goto L4fc8b2;
  catch `java.lang.Throwable` @[L4fc8a2..L4fc8c6] goto L4fc8b2;
}
procedure `android.graphics.Bitmap` `d`(`u0.j` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lu0/j;.d:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc2f8.  call temp:= `m`(v1, v2, v3, v4) @signature `Lu0/j;.m:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind direct;
  #L4fc2fe.  v0:= temp @kind object;
  #L4fc300.  if v0 == 0 then goto L4fc30e;
  #L4fc304.  v2:= 0I;
  #L4fc306.  call `eraseColor`(v0, v2) @signature `Landroid/graphics/Bitmap;.eraseColor:(I)V` @kind virtual;
  #L4fc30c.  goto L4fc316;
  #L4fc30e.  call temp:= `g`(v2, v3, v4) @signature `Lu0/j;.g:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L4fc314.  v0:= temp @kind object;
  #L4fc316.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `e`(`u0.j` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lu0/j;.e:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc328.  call temp:= `m`(v1, v2, v3, v4) @signature `Lu0/j;.m:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind direct;
  #L4fc32e.  v0:= temp @kind object;
  #L4fc330.  if v0 != 0 then goto L4fc33c;
  #L4fc334.  call temp:= `g`(v2, v3, v4) @signature `Lu0/j;.g:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L4fc33a.  v0:= temp @kind object;
  #L4fc33c.  return v0 @kind object;
}
procedure `long` `n`(`u0.j` v2 @kind this) @signature `Lu0/j;.n:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fc4b8.  v0:= v2.`u0.j.e` @type ^`long` @kind wide;
  #L4fc4bc.  return v0 @kind wide;
}
