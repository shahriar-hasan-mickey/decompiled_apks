record `u0.c` @kind class @AccessFlag ABSTRACT {
  `java.util.Queue` `u0.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`u0.c` v1 @kind this) @signature `Lu0/c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4fb518.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fb51e.  v0:= 20I;
  #L4fb522.  call temp:= `e`(v0) @signature `Ln1/k;.e:(I)Ljava/util/Queue;` @kind static;
  #L4fb528.  v0:= temp @kind object;
  #L4fb52a.  v1.`u0.c.a` @type ^`java.util.Queue` := v0 @kind object;
  #L4fb52e.  return @kind void;
}
procedure `u0.l` `a`() @signature `Lu0/c;.a:()Lu0/l;` @AccessFlag ABSTRACT {

  # return;
}
procedure `u0.l` `b`(`u0.c` v1 @kind this) @signature `Lu0/c;.b:()Lu0/l;` @AccessFlag  {
    temp;
    v0;

  #L4fb4e8.  v0:= v1.`u0.c.a` @type ^`java.util.Queue` @kind object;
  #L4fb4ec.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4fb4f2.  v0:= temp @kind object;
  #L4fb4f4.  v0:= (`u0.l`) v0 @kind object;
  #L4fb4f8.  if v0 != 0 then goto L4fb504;
  #L4fb4fc.  call temp:= `a`(v1) @signature `Lu0/c;.a:()Lu0/l;` @kind virtual;
  #L4fb502.  v0:= temp @kind object;
  #L4fb504.  return v0 @kind object;
}
procedure `void` `c`(`u0.c` v2 @kind this, `u0.l` v3 @kind object) @signature `Lu0/c;.c:(Lu0/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fb540.  v0:= v2.`u0.c.a` @type ^`java.util.Queue` @kind object;
  #L4fb544.  call temp:= `size`(v0) @signature `Ljava/util/Queue;.size:()I` @kind interface;
  #L4fb54a.  v0:= temp;
  #L4fb54c.  v1:= 20I;
  #L4fb550.  if v0 >= v1 then goto L4fb55e;
  #L4fb554.  v0:= v2.`u0.c.a` @type ^`java.util.Queue` @kind object;
  #L4fb558.  call temp:= `offer`(v0, v3) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4fb55e.  return @kind void;
}
