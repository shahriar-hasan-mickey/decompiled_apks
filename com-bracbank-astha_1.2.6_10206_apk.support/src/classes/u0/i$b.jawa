record `u0.i$b` @kind class @AccessFlag FINAL extends `u0.c` @kind class {
}
procedure `void` `<init>`(`u0.i$b` v0 @kind this) @signature `Lu0/i$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fbb10.  call `<init>`(v0) @signature `Lu0/c;.<init>:()V` @kind direct;
  #L4fbb16.  return @kind void;
}
procedure `u0.l` `a`(`u0.i$b` v1 @kind this) @signature `Lu0/i$b;.a:()Lu0/l;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L4fbaf4.  call temp:= `d`(v1) @signature `Lu0/i$b;.d:()Lu0/i$a;` @kind virtual;
  #L4fbafa.  v0:= temp @kind object;
  #L4fbafc.  return v0 @kind object;
}
procedure `u0.i$a` `d`(`u0.i$b` v1 @kind this) @signature `Lu0/i$b;.d:()Lu0/i$a;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4fbab4.  v0:= new `u0.i$a`;
  #L4fbab8.  call `<init>`(v0, v1) @signature `Lu0/i$a;.<init>:(Lu0/i$b;)V` @kind direct;
  #L4fbabe.  return v0 @kind object;
}
procedure `u0.i$a` `e`(`u0.i$b` v1 @kind this, `int` v2 , `java.lang.Class` v3 @kind object) @signature `Lu0/i$b;.e:(ILjava/lang/Class;)Lu0/i$a;` @AccessFlag  {
    temp;
    v0;

  #L4fbad0.  call temp:= `b`(v1) @signature `Lu0/c;.b:()Lu0/l;` @kind virtual;
  #L4fbad6.  v0:= temp @kind object;
  #L4fbad8.  v0:= (`u0.i$a`) v0 @kind object;
  #L4fbadc.  call `b`(v0, v2, v3) @signature `Lu0/i$a;.b:(ILjava/lang/Class;)V` @kind virtual;
  #L4fbae2.  return v0 @kind object;
}
