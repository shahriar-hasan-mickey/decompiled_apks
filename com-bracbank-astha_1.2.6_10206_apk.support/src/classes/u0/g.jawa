record `u0.g` @kind class @AccessFlag  {
  `u0.g$a` `u0.g.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `u0.g.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`u0.g` v1 @kind this) @signature `Lu0/g;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4fb8d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fb8de.  v0:= new `u0.g$a`;
  #L4fb8e2.  call `<init>`(v0) @signature `Lu0/g$a;.<init>:()V` @kind direct;
  #L4fb8e8.  v1.`u0.g.a` @type ^`u0.g$a` := v0 @kind object;
  #L4fb8ec.  v0:= new `java.util.HashMap`;
  #L4fb8f0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4fb8f6.  v1.`u0.g.b` @type ^`java.util.Map` := v0 @kind object;
  #L4fb8fa.  return @kind void;
}
procedure `void` `b`(`u0.g` v1 @kind this, `u0.g$a` v2 @kind object) @signature `Lu0/g;.b:(Lu0/g$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fb90c.  call `e`(v2) @signature `Lu0/g;.e:(Lu0/g$a;)V` @kind static;
  #L4fb912.  v0:= v1.`u0.g.a` @type ^`u0.g$a` @kind object;
  #L4fb916.  v2.`u0.g$a.d` @type ^`u0.g$a` := v0 @kind object;
  #L4fb91a.  v0:= v0.`u0.g$a.c` @type ^`u0.g$a` @kind object;
  #L4fb91e.  v2.`u0.g$a.c` @type ^`u0.g$a` := v0 @kind object;
  #L4fb922.  call `g`(v2) @signature `Lu0/g;.g:(Lu0/g$a;)V` @kind static;
  #L4fb928.  return @kind void;
}
procedure `void` `c`(`u0.g` v2 @kind this, `u0.g$a` v3 @kind object) @signature `Lu0/g;.c:(Lu0/g$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fb93c.  call `e`(v3) @signature `Lu0/g;.e:(Lu0/g$a;)V` @kind static;
  #L4fb942.  v0:= v2.`u0.g.a` @type ^`u0.g$a` @kind object;
  #L4fb946.  v1:= v0.`u0.g$a.d` @type ^`u0.g$a` @kind object;
  #L4fb94a.  v3.`u0.g$a.d` @type ^`u0.g$a` := v1 @kind object;
  #L4fb94e.  v3.`u0.g$a.c` @type ^`u0.g$a` := v0 @kind object;
  #L4fb952.  call `g`(v3) @signature `Lu0/g;.g:(Lu0/g$a;)V` @kind static;
  #L4fb958.  return @kind void;
}
procedure `void` `e`(`u0.g$a` v2 @kind object) @signature `Lu0/g;.e:(Lu0/g$a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4fb9bc.  v0:= v2.`u0.g$a.d` @type ^`u0.g$a` @kind object;
  #L4fb9c0.  v1:= v2.`u0.g$a.c` @type ^`u0.g$a` @kind object;
  #L4fb9c4.  v0.`u0.g$a.c` @type ^`u0.g$a` := v1 @kind object;
  #L4fb9c8.  v2:= v2.`u0.g$a.c` @type ^`u0.g$a` @kind object;
  #L4fb9cc.  v2.`u0.g$a.d` @type ^`u0.g$a` := v0 @kind object;
  #L4fb9d0.  return @kind void;
}
procedure `void` `g`(`u0.g$a` v1 @kind object) @signature `Lu0/g;.g:(Lu0/g$a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4fb9e4.  v0:= v1.`u0.g$a.c` @type ^`u0.g$a` @kind object;
  #L4fb9e8.  v0.`u0.g$a.d` @type ^`u0.g$a` := v1 @kind object;
  #L4fb9ec.  v0:= v1.`u0.g$a.d` @type ^`u0.g$a` @kind object;
  #L4fb9f0.  v0.`u0.g$a.c` @type ^`u0.g$a` := v1 @kind object;
  #L4fb9f4.  return @kind void;
}
procedure `java.lang.Object` `a`(`u0.g` v2 @kind this, `u0.l` v3 @kind object) @signature `Lu0/g;.a:(Lu0/l;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fb77c.  v0:= v2.`u0.g.b` @type ^`java.util.Map` @kind object;
  #L4fb780.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fb786.  v0:= temp @kind object;
  #L4fb788.  v0:= (`u0.g$a`) v0 @kind object;
  #L4fb78c.  if v0 != 0 then goto L4fb7a6;
  #L4fb790.  v0:= new `u0.g$a`;
  #L4fb794.  call `<init>`(v0, v3) @signature `Lu0/g$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4fb79a.  v1:= v2.`u0.g.b` @type ^`java.util.Map` @kind object;
  #L4fb79e.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fb7a4.  goto L4fb7ac;
  #L4fb7a6.  call `a`(v3) @signature `Lu0/l;.a:()V` @kind interface;
  #L4fb7ac.  call `b`(v2, v0) @signature `Lu0/g;.b:(Lu0/g$a;)V` @kind direct;
  #L4fb7b2.  call temp:= `b`(v0) @signature `Lu0/g$a;.b:()Ljava/lang/Object;` @kind virtual;
  #L4fb7b8.  v3:= temp @kind object;
  #L4fb7ba.  return v3 @kind object;
}
procedure `void` `d`(`u0.g` v2 @kind this, `u0.l` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lu0/g;.d:(Lu0/l;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fb96c.  v0:= v2.`u0.g.b` @type ^`java.util.Map` @kind object;
  #L4fb970.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fb976.  v0:= temp @kind object;
  #L4fb978.  v0:= (`u0.g$a`) v0 @kind object;
  #L4fb97c.  if v0 != 0 then goto L4fb99c;
  #L4fb980.  v0:= new `u0.g$a`;
  #L4fb984.  call `<init>`(v0, v3) @signature `Lu0/g$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4fb98a.  call `c`(v2, v0) @signature `Lu0/g;.c:(Lu0/g$a;)V` @kind direct;
  #L4fb990.  v1:= v2.`u0.g.b` @type ^`java.util.Map` @kind object;
  #L4fb994.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fb99a.  goto L4fb9a2;
  #L4fb99c.  call `a`(v3) @signature `Lu0/l;.a:()V` @kind interface;
  #L4fb9a2.  call `a`(v0, v4) @signature `Lu0/g$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L4fb9a8.  return @kind void;
}
procedure `java.lang.Object` `f`(`u0.g` v3 @kind this) @signature `Lu0/g;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fb7cc.  v0:= v3.`u0.g.a` @type ^`u0.g$a` @kind object;
  #L4fb7d0.  v0:= v0.`u0.g$a.d` @type ^`u0.g$a` @kind object;
  #L4fb7d4.  v1:= v3.`u0.g.a` @type ^`u0.g$a` @kind object;
  #L4fb7d8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fb7de.  v1:= temp;
  #L4fb7e0.  if v1 != 0 then goto L4fb81a;
  #L4fb7e4.  call temp:= `b`(v0) @signature `Lu0/g$a;.b:()Ljava/lang/Object;` @kind virtual;
  #L4fb7ea.  v1:= temp @kind object;
  #L4fb7ec.  if v1 == 0 then goto L4fb7f2;
  #L4fb7f0.  return v1 @kind object;
  #L4fb7f2.  call `e`(v0) @signature `Lu0/g;.e:(Lu0/g$a;)V` @kind static;
  #L4fb7f8.  v1:= v3.`u0.g.b` @type ^`java.util.Map` @kind object;
  #L4fb7fc.  v2:= v0.`u0.g$a.a` @type ^`java.lang.Object` @kind object;
  #L4fb800.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fb806.  v1:= v0.`u0.g$a.a` @type ^`java.lang.Object` @kind object;
  #L4fb80a.  v1:= (`u0.l`) v1 @kind object;
  #L4fb80e.  call `a`(v1) @signature `Lu0/l;.a:()V` @kind interface;
  #L4fb814.  v0:= v0.`u0.g$a.d` @type ^`u0.g$a` @kind object;
  #L4fb818.  goto L4fb7d4;
  #L4fb81a.  v0:= 0I;
  #L4fb81c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`u0.g` v4 @kind this) @signature `Lu0/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fb830.  v0:= new `java.lang.StringBuilder`;
  #L4fb834.  v1:= "GroupedLinkedMap( " @kind object;
  #L4fb838.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fb83e.  v1:= v4.`u0.g.a` @type ^`u0.g$a` @kind object;
  #L4fb842.  v1:= v1.`u0.g$a.c` @type ^`u0.g$a` @kind object;
  #L4fb846.  v2:= 0I;
  #L4fb848.  v3:= v4.`u0.g.a` @type ^`u0.g$a` @kind object;
  #L4fb84c.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fb852.  v3:= temp;
  #L4fb854.  if v3 != 0 then goto L4fb896;
  #L4fb858.  v2:= 1I;
  #L4fb85a.  v3:= 123I;
  #L4fb85e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb864.  v3:= v1.`u0.g$a.a` @type ^`java.lang.Object` @kind object;
  #L4fb868.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb86e.  v3:= 58I;
  #L4fb872.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb878.  call temp:= `c`(v1) @signature `Lu0/g$a;.c:()I` @kind virtual;
  #L4fb87e.  v3:= temp;
  #L4fb880.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb886.  v3:= "}, " @kind object;
  #L4fb88a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb890.  v1:= v1.`u0.g$a.c` @type ^`u0.g$a` @kind object;
  #L4fb894.  goto L4fb848;
  #L4fb896.  if v2 == 0 then goto L4fb8b4;
  #L4fb89a.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L4fb8a0.  v1:= temp;
  #L4fb8a2.  v1:= v1 + -2;
  #L4fb8a6.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L4fb8ac.  v2:= temp;
  #L4fb8ae.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb8b4.  v1:= " )" @kind object;
  #L4fb8b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb8be.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fb8c4.  v0:= temp @kind object;
  #L4fb8c6.  return v0 @kind object;
}
