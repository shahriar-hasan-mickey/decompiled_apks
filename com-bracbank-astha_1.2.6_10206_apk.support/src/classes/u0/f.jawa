record `u0.f` @kind class @AccessFlag PUBLIC_FINAL extends `u0.a` @kind interface {
}
procedure `void` `<init>`(`u0.f` v0 @kind this) @signature `Lu0/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4fb694.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fb69a.  return @kind void;
}
procedure `int` `a`(`u0.f` v1 @kind this) @signature `Lu0/f;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb64c.  v0:= 1I;
  #L4fb64e.  return v0;
}
procedure `int` `b`(`u0.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lu0/f;.b:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fb62c.  v1:= (`byte`[]) v1 @kind object;
  #L4fb630.  call temp:= `c`(v0, v1) @signature `Lu0/f;.c:([B)I` @kind virtual;
  #L4fb636.  v1:= temp;
  #L4fb638.  return v1;
}
procedure `int` `c`(`u0.f` v0 @kind this, `byte`[] v1 @kind object) @signature `Lu0/f;.c:([B)I` @AccessFlag PUBLIC {
    temp;

  #L4fb618.  v1:= length @variable v1;
  #L4fb61a.  return v1;
}
procedure `byte`[] `d`(`u0.f` v0 @kind this, `int` v1 ) @signature `Lu0/f;.d:(I)[B` @AccessFlag PUBLIC {
    temp;

  #L4fb600.  v1:= new `byte`[v1];
  #L4fb604.  return v1 @kind object;
}
procedure `java.lang.String` `getTag`(`u0.f` v1 @kind this) @signature `Lu0/f;.getTag:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb67c.  v0:= "ByteArrayPool" @kind object;
  #L4fb680.  return v0 @kind object;
}
procedure `java.lang.Object` `newArray`(`u0.f` v0 @kind this, `int` v1 ) @signature `Lu0/f;.newArray:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fb660.  call temp:= `d`(v0, v1) @signature `Lu0/f;.d:(I)[B` @kind virtual;
  #L4fb666.  v1:= temp @kind object;
  #L4fb668.  return v1 @kind object;
}
