record `u0.m$c` @kind class @AccessFlag  extends `u0.c` @kind class {
}
procedure `void` `<init>`(`u0.m$c` v0 @kind this) @signature `Lu0/m$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fcb78.  call `<init>`(v0) @signature `Lu0/c;.<init>:()V` @kind direct;
  #L4fcb7e.  return @kind void;
}
procedure `u0.l` `a`(`u0.m$c` v1 @kind this) @signature `Lu0/m$c;.a:()Lu0/l;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L4fcb1c.  call temp:= `d`(v1) @signature `Lu0/m$c;.d:()Lu0/m$b;` @kind virtual;
  #L4fcb22.  v0:= temp @kind object;
  #L4fcb24.  return v0 @kind object;
}
procedure `u0.m$b` `d`(`u0.m$c` v1 @kind this) @signature `Lu0/m$c;.d:()Lu0/m$b;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4fcb38.  v0:= new `u0.m$b`;
  #L4fcb3c.  call `<init>`(v0, v1) @signature `Lu0/m$b;.<init>:(Lu0/m$c;)V` @kind direct;
  #L4fcb42.  return v0 @kind object;
}
procedure `u0.m$b` `e`(`u0.m$c` v1 @kind this, `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lu0/m$c;.e:(ILandroid/graphics/Bitmap$Config;)Lu0/m$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fcb54.  call temp:= `b`(v1) @signature `Lu0/c;.b:()Lu0/l;` @kind virtual;
  #L4fcb5a.  v0:= temp @kind object;
  #L4fcb5c.  v0:= (`u0.m$b`) v0 @kind object;
  #L4fcb60.  call `b`(v0, v2, v3) @signature `Lu0/m$b;.b:(ILandroid/graphics/Bitmap$Config;)V` @kind virtual;
  #L4fcb66.  return v0 @kind object;
}
