record `u0.h` @kind class @AccessFlag PUBLIC_FINAL extends `u0.a` @kind interface {
}
procedure `void` `<init>`(`u0.h` v0 @kind this) @signature `Lu0/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4fba9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fbaa2.  return @kind void;
}
procedure `int` `a`(`u0.h` v1 @kind this) @signature `Lu0/h;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fba3c.  v0:= 4I;
  #L4fba3e.  return v0;
}
procedure `int` `b`(`u0.h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lu0/h;.b:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fba1c.  v1:= (`int`[]) v1 @kind object;
  #L4fba20.  call temp:= `c`(v0, v1) @signature `Lu0/h;.c:([I)I` @kind virtual;
  #L4fba26.  v1:= temp;
  #L4fba28.  return v1;
}
procedure `int` `c`(`u0.h` v0 @kind this, `int`[] v1 @kind object) @signature `Lu0/h;.c:([I)I` @AccessFlag PUBLIC {
    temp;

  #L4fba08.  v1:= length @variable v1;
  #L4fba0a.  return v1;
}
procedure `int`[] `d`(`u0.h` v0 @kind this, `int` v1 ) @signature `Lu0/h;.d:(I)[I` @AccessFlag PUBLIC {
    temp;

  #L4fba50.  v1:= new `int`[v1];
  #L4fba54.  return v1 @kind object;
}
procedure `java.lang.String` `getTag`(`u0.h` v1 @kind this) @signature `Lu0/h;.getTag:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fba84.  v0:= "IntegerArrayPool" @kind object;
  #L4fba88.  return v0 @kind object;
}
procedure `java.lang.Object` `newArray`(`u0.h` v0 @kind this, `int` v1 ) @signature `Lu0/h;.newArray:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fba68.  call temp:= `d`(v0, v1) @signature `Lu0/h;.d:(I)[I` @kind virtual;
  #L4fba6e.  v1:= temp @kind object;
  #L4fba70.  return v1 @kind object;
}
