record `u0.i` @kind class @AccessFlag PUBLIC_FINAL extends `u0.b` @kind interface {
  `u0.g` `u0.i.a` @AccessFlag PRIVATE_FINAL;
  `u0.i$b` `u0.i.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `u0.i.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `u0.i.d` @AccessFlag PRIVATE_FINAL;
  `int` `u0.i.e` @AccessFlag PRIVATE_FINAL;
  `int` `u0.i.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`u0.i` v1 @kind this, `int` v2 ) @signature `Lu0/i;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fbf5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fbf62.  v0:= new `u0.g`;
  #L4fbf66.  call `<init>`(v0) @signature `Lu0/g;.<init>:()V` @kind direct;
  #L4fbf6c.  v1.`u0.i.a` @type ^`u0.g` := v0 @kind object;
  #L4fbf70.  v0:= new `u0.i$b`;
  #L4fbf74.  call `<init>`(v0) @signature `Lu0/i$b;.<init>:()V` @kind direct;
  #L4fbf7a.  v1.`u0.i.b` @type ^`u0.i$b` := v0 @kind object;
  #L4fbf7e.  v0:= new `java.util.HashMap`;
  #L4fbf82.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4fbf88.  v1.`u0.i.c` @type ^`java.util.Map` := v0 @kind object;
  #L4fbf8c.  v0:= new `java.util.HashMap`;
  #L4fbf90.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4fbf96.  v1.`u0.i.d` @type ^`java.util.Map` := v0 @kind object;
  #L4fbf9a.  v1.`u0.i.e` @type ^`int` := v2;
  #L4fbf9e.  return @kind void;
}
procedure `void` `e`(`u0.i` v3 @kind this, `int` v4 , `java.lang.Class` v5 @kind object) @signature `Lu0/i;.e:(ILjava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4fbfe0.  call temp:= `l`(v3, v5) @signature `Lu0/i;.l:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L4fbfe6.  v5:= temp @kind object;
  #L4fbfe8.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fbfee.  v0:= temp @kind object;
  #L4fbff0.  call temp:= `get`(v5, v0) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fbff6.  v0:= temp @kind object;
  #L4fbff8.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L4fbffc.  if v0 == 0 then goto L4fc040;
  #L4fc000.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4fc006.  v1:= temp;
  #L4fc008.  v2:= 1I;
  #L4fc00a.  if v1 != v2 then goto L4fc01e;
  #L4fc00e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fc014.  v4:= temp @kind object;
  #L4fc016.  call temp:= `remove`(v5, v4) @signature `Ljava/util/NavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fc01c.  goto L4fc03e;
  #L4fc01e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fc024.  v4:= temp @kind object;
  #L4fc026.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4fc02c.  v0:= temp;
  #L4fc02e.  v0:= v0 - v2 @kind int;
  #L4fc030.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fc036.  v0:= temp @kind object;
  #L4fc038.  call temp:= `put`(v5, v4, v0) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fc03e.  return @kind void;
  #L4fc040.  v5:= new `java.lang.NullPointerException`;
  #L4fc044.  v0:= new `java.lang.StringBuilder`;
  #L4fc048.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc04e.  v1:= "Tried to decrement empty size, size: " @kind object;
  #L4fc052.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc058.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc05e.  v4:= ", this: " @kind object;
  #L4fc062.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc068.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc06e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc074.  v4:= temp @kind object;
  #L4fc076.  call `<init>`(v5, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc07c.  throw v5;
}
procedure `void` `f`(`u0.i` v1 @kind this) @signature `Lu0/i;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fc090.  v0:= v1.`u0.i.e` @type ^`int`;
  #L4fc094.  call `g`(v1, v0) @signature `Lu0/i;.g:(I)V` @kind direct;
  #L4fc09a.  return @kind void;
}
procedure `void` `g`(`u0.i` v5 @kind this, `int` v6 ) @signature `Lu0/i;.g:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fc0ac.  v0:= v5.`u0.i.f` @type ^`int`;
  #L4fc0b0.  if v0 <= v6 then goto L4fc152;
  #L4fc0b4.  v0:= v5.`u0.i.a` @type ^`u0.g` @kind object;
  #L4fc0b8.  call temp:= `f`(v0) @signature `Lu0/g;.f:()Ljava/lang/Object;` @kind virtual;
  #L4fc0be.  v0:= temp @kind object;
  #L4fc0c0.  call temp:= `d`(v0) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc0c6.  call temp:= `h`(v5, v0) @signature `Lu0/i;.h:(Ljava/lang/Object;)Lu0/a;` @kind direct;
  #L4fc0cc.  v1:= temp @kind object;
  #L4fc0ce.  v2:= v5.`u0.i.f` @type ^`int`;
  #L4fc0d2.  call temp:= `b`(v1, v0) @signature `Lu0/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L4fc0d8.  v3:= temp;
  #L4fc0da.  call temp:= `a`(v1) @signature `Lu0/a;.a:()I` @kind interface;
  #L4fc0e0.  v4:= temp;
  #L4fc0e2.  v3:= v3 * v4 @kind int;
  #L4fc0e6.  v2:= v2 - v3 @kind int;
  #L4fc0e8.  v5.`u0.i.f` @type ^`int` := v2;
  #L4fc0ec.  call temp:= `b`(v1, v0) @signature `Lu0/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L4fc0f2.  v2:= temp;
  #L4fc0f4.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4fc0fa.  v3:= temp @kind object;
  #L4fc0fc.  call `e`(v5, v2, v3) @signature `Lu0/i;.e:(ILjava/lang/Class;)V` @kind direct;
  #L4fc102.  call temp:= `getTag`(v1) @signature `Lu0/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L4fc108.  v2:= temp @kind object;
  #L4fc10a.  v3:= 2I;
  #L4fc10c.  call temp:= `isLoggable`(v2, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fc112.  v2:= temp;
  #L4fc114.  if v2 == 0 then goto L4fc0ac;
  #L4fc118.  call temp:= `getTag`(v1) @signature `Lu0/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L4fc11e.  v2:= temp @kind object;
  #L4fc120.  v3:= new `java.lang.StringBuilder`;
  #L4fc124.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc12a.  v4:= "evicted: " @kind object;
  #L4fc12e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc134.  call temp:= `b`(v1, v0) @signature `Lu0/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L4fc13a.  v0:= temp;
  #L4fc13c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc142.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc148.  v0:= temp @kind object;
  #L4fc14a.  call temp:= `v`(v2, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4fc150.  goto L4fc0ac;
  #L4fc152.  return @kind void;
}
procedure `u0.a` `h`(`u0.i` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lu0/i;.h:(Ljava/lang/Object;)Lu0/a;` @AccessFlag PRIVATE {
    temp;

  #L4fbe98.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4fbe9e.  v1:= temp @kind object;
  #L4fbea0.  call temp:= `i`(v0, v1) @signature `Lu0/i;.i:(Ljava/lang/Class;)Lu0/a;` @kind direct;
  #L4fbea6.  v1:= temp @kind object;
  #L4fbea8.  return v1 @kind object;
}
procedure `u0.a` `i`(`u0.i` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lu0/i;.i:(Ljava/lang/Class;)Lu0/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4fbebc.  v0:= v3.`u0.i.d` @type ^`java.util.Map` @kind object;
  #L4fbec0.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fbec6.  v0:= temp @kind object;
  #L4fbec8.  v0:= (`u0.a`) v0 @kind object;
  #L4fbecc.  if v0 != 0 then goto L4fbf48;
  #L4fbed0.  v0:= constclass @type ^`int`[] @kind object;
  #L4fbed4.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbeda.  v0:= temp;
  #L4fbedc.  if v0 == 0 then goto L4fbeec;
  #L4fbee0.  v0:= new `u0.h`;
  #L4fbee4.  call `<init>`(v0) @signature `Lu0/h;.<init>:()V` @kind direct;
  #L4fbeea.  goto L4fbf06;
  #L4fbeec.  v0:= constclass @type ^`byte`[] @kind object;
  #L4fbef0.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbef6.  v0:= temp;
  #L4fbef8.  if v0 == 0 then goto L4fbf12;
  #L4fbefc.  v0:= new `u0.f`;
  #L4fbf00.  call `<init>`(v0) @signature `Lu0/f;.<init>:()V` @kind direct;
  #L4fbf06.  v1:= v3.`u0.i.d` @type ^`java.util.Map` @kind object;
  #L4fbf0a.  call temp:= `put`(v1, v4, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fbf10.  goto L4fbf48;
  #L4fbf12.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fbf16.  v1:= new `java.lang.StringBuilder`;
  #L4fbf1a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fbf20.  v2:= "No array pool found for: " @kind object;
  #L4fbf24.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbf2a.  call temp:= `getSimpleName`(v4) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4fbf30.  v4:= temp @kind object;
  #L4fbf32.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbf38.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fbf3e.  v4:= temp @kind object;
  #L4fbf40.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbf46.  throw v0;
  #L4fbf48.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`u0.i` v1 @kind this, `u0.i$a` v2 @kind object) @signature `Lu0/i;.j:(Lu0/i$a;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fbd48.  v0:= v1.`u0.i.a` @type ^`u0.g` @kind object;
  #L4fbd4c.  call temp:= `a`(v0, v2) @signature `Lu0/g;.a:(Lu0/l;)Ljava/lang/Object;` @kind virtual;
  #L4fbd52.  v2:= temp @kind object;
  #L4fbd54.  return v2 @kind object;
}
procedure `java.lang.Object` `k`(`u0.i` v5 @kind this, `u0.i$a` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lu0/i;.k:(Lu0/i$a;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fbda4.  call temp:= `i`(v5, v7) @signature `Lu0/i;.i:(Ljava/lang/Class;)Lu0/a;` @kind direct;
  #L4fbdaa.  v0:= temp @kind object;
  #L4fbdac.  call temp:= `j`(v5, v6) @signature `Lu0/i;.j:(Lu0/i$a;)Ljava/lang/Object;` @kind direct;
  #L4fbdb2.  v1:= temp @kind object;
  #L4fbdb4.  if v1 == 0 then goto L4fbde4;
  #L4fbdb8.  v2:= v5.`u0.i.f` @type ^`int`;
  #L4fbdbc.  call temp:= `b`(v0, v1) @signature `Lu0/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L4fbdc2.  v3:= temp;
  #L4fbdc4.  call temp:= `a`(v0) @signature `Lu0/a;.a:()I` @kind interface;
  #L4fbdca.  v4:= temp;
  #L4fbdcc.  v3:= v3 * v4 @kind int;
  #L4fbdd0.  v2:= v2 - v3 @kind int;
  #L4fbdd2.  v5.`u0.i.f` @type ^`int` := v2;
  #L4fbdd6.  call temp:= `b`(v0, v1) @signature `Lu0/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L4fbddc.  v2:= temp;
  #L4fbdde.  call `e`(v5, v2, v7) @signature `Lu0/i;.e:(ILjava/lang/Class;)V` @kind direct;
  #L4fbde4.  if v1 != 0 then goto L4fbe48;
  #L4fbde8.  call temp:= `getTag`(v0) @signature `Lu0/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L4fbdee.  v7:= temp @kind object;
  #L4fbdf0.  v1:= 2I;
  #L4fbdf2.  call temp:= `isLoggable`(v7, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L4fbdf8.  v7:= temp;
  #L4fbdfa.  if v7 == 0 then goto L4fbe3c;
  #L4fbdfe.  call temp:= `getTag`(v0) @signature `Lu0/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L4fbe04.  v7:= temp @kind object;
  #L4fbe06.  v1:= new `java.lang.StringBuilder`;
  #L4fbe0a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fbe10.  v2:= "Allocated " @kind object;
  #L4fbe14.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbe1a.  v2:= v6.`u0.i$a.b` @type ^`int`;
  #L4fbe1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbe24.  v2:= " bytes" @kind object;
  #L4fbe28.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbe2e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fbe34.  v1:= temp @kind object;
  #L4fbe36.  call temp:= `v`(v7, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4fbe3c.  v6:= v6.`u0.i$a.b` @type ^`int`;
  #L4fbe40.  call temp:= `newArray`(v0, v6) @signature `Lu0/a;.newArray:(I)Ljava/lang/Object;` @kind interface;
  #L4fbe46.  v1:= temp @kind object;
  #L4fbe48.  return v1 @kind object;
}
procedure `java.util.NavigableMap` `l`(`u0.i` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lu0/i;.l:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fbe5c.  v0:= v2.`u0.i.c` @type ^`java.util.Map` @kind object;
  #L4fbe60.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fbe66.  v0:= temp @kind object;
  #L4fbe68.  v0:= (`java.util.NavigableMap`) v0 @kind object;
  #L4fbe6c.  if v0 != 0 then goto L4fbe84;
  #L4fbe70.  v0:= new `java.util.TreeMap`;
  #L4fbe74.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L4fbe7a.  v1:= v2.`u0.i.c` @type ^`java.util.Map` @kind object;
  #L4fbe7e.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fbe84.  return v0 @kind object;
}
procedure `boolean` `m`(`u0.i` v2 @kind this) @signature `Lu0/i;.m:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fbc40.  v0:= v2.`u0.i.f` @type ^`int`;
  #L4fbc44.  if v0 == 0 then goto L4fbc5a;
  #L4fbc48.  v1:= v2.`u0.i.e` @type ^`int`;
  #L4fbc4c.  v1:= v1 / v0 @kind int;
  #L4fbc4e.  v0:= 2I;
  #L4fbc50.  if v1 < v0 then goto L4fbc56;
  #L4fbc54.  goto L4fbc5a;
  #L4fbc56.  v0:= 0I;
  #L4fbc58.  goto L4fbc5c;
  #L4fbc5a.  v0:= 1I;
  #L4fbc5c.  return v0;
}
procedure `boolean` `n`(`u0.i` v1 @kind this, `int` v2 ) @signature `Lu0/i;.n:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fbc70.  v0:= v1.`u0.i.e` @type ^`int`;
  #L4fbc74.  v0:= v0 / 2;
  #L4fbc78.  if v2 > v0 then goto L4fbc80;
  #L4fbc7c.  v2:= 1I;
  #L4fbc7e.  goto L4fbc82;
  #L4fbc80.  v2:= 0I;
  #L4fbc82.  return v2;
}
procedure `boolean` `o`(`u0.i` v1 @kind this, `int` v2 , `java.lang.Integer` v3 @kind object) @signature `Lu0/i;.o:(ILjava/lang/Integer;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fbc94.  if v3 == 0 then goto L4fbcb8;
  #L4fbc98.  call temp:= `m`(v1) @signature `Lu0/i;.m:()Z` @kind direct;
  #L4fbc9e.  v0:= temp;
  #L4fbca0.  if v0 != 0 then goto L4fbcb4;
  #L4fbca4.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4fbcaa.  v3:= temp;
  #L4fbcac.  v2:= v2 * 8;
  #L4fbcb0.  if v3 > v2 then goto L4fbcb8;
  #L4fbcb4.  v2:= 1I;
  #L4fbcb6.  goto L4fbcba;
  #L4fbcb8.  v2:= 0I;
  #L4fbcba.  return v2;
}
procedure `void` `a`(`u0.i` v1 @kind this, `int` v2 ) @signature `Lu0/i;.a:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc23c.  @monitorenter v1
  #L4fc23e.  v0:= 40I;
  #L4fc242.  if v2 < v0 then goto L4fc252;
  #L4fc246.  call `b`(v1) @signature `Lu0/i;.b:()V` @kind virtual;
  #L4fc24c.  goto L4fc270;
  #L4fc24e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fc250.  goto L4fc274;
  #L4fc252.  v0:= 20I;
  #L4fc256.  if v2 >= v0 then goto L4fc262;
  #L4fc25a.  v0:= 15I;
  #L4fc25e.  if v2 != v0 then goto L4fc270;
  #L4fc262.  v2:= v1.`u0.i.e` @type ^`int`;
  #L4fc266.  v2:= v2 / 2;
  #L4fc26a.  call `g`(v1, v2) @signature `Lu0/i;.g:(I)V` @kind direct;
  #L4fc270.  @monitorexit v1
  #L4fc272.  return @kind void;
  #L4fc274.  @monitorexit v1
  #L4fc276.  throw v2;
  catch `java.lang.Throwable` @[L4fc246..L4fc270] goto L4fc24e;
}
procedure `void` `b`(`u0.i` v1 @kind this) @signature `Lu0/i;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fbfb0.  @monitorenter v1
  #L4fbfb2.  v0:= 0I;
  #L4fbfb4.  call `g`(v1, v0) @signature `Lu0/i;.g:(I)V` @kind direct;
  #L4fbfba.  @monitorexit v1
  #L4fbfbc.  return @kind void;
  #L4fbfbe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fbfc0.  @monitorexit v1
  #L4fbfc2.  throw v0;
  catch `java.lang.Throwable` @[L4fbfb4..L4fbfba] goto L4fbfbe;
}
procedure `java.lang.Object` `c`(`u0.i` v1 @kind this, `int` v2 , `java.lang.Class` v3 @kind object) @signature `Lu0/i;.c:(ILjava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fbd68.  @monitorenter v1
  #L4fbd6a.  v0:= v1.`u0.i.b` @type ^`u0.i$b` @kind object;
  #L4fbd6e.  call temp:= `e`(v0, v2, v3) @signature `Lu0/i$b;.e:(ILjava/lang/Class;)Lu0/i$a;` @kind virtual;
  #L4fbd74.  v2:= temp @kind object;
  #L4fbd76.  call temp:= `k`(v1, v2, v3) @signature `Lu0/i;.k:(Lu0/i$a;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L4fbd7c.  v2:= temp @kind object;
  #L4fbd7e.  @monitorexit v1
  #L4fbd80.  return v2 @kind object;
  #L4fbd82.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fbd84.  @monitorexit v1
  #L4fbd86.  throw v2;
  catch `java.lang.Throwable` @[L4fbd6a..L4fbd7e] goto L4fbd82;
}
procedure `java.lang.Object` `d`(`u0.i` v2 @kind this, `int` v3 , `java.lang.Class` v4 @kind object) @signature `Lu0/i;.d:(ILjava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fbccc.  @monitorenter v2
  #L4fbcce.  call temp:= `l`(v2, v4) @signature `Lu0/i;.l:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L4fbcd4.  v0:= temp @kind object;
  #L4fbcd6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fbcdc.  v1:= temp @kind object;
  #L4fbcde.  call temp:= `ceilingKey`(v0, v1) @signature `Ljava/util/NavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fbce4.  v0:= temp @kind object;
  #L4fbce6.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L4fbcea.  call temp:= `o`(v2, v3, v0) @signature `Lu0/i;.o:(ILjava/lang/Integer;)Z` @kind direct;
  #L4fbcf0.  v1:= temp;
  #L4fbcf2.  if v1 == 0 then goto L4fbd0c;
  #L4fbcf6.  v3:= v2.`u0.i.b` @type ^`u0.i$b` @kind object;
  #L4fbcfa.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4fbd00.  v0:= temp;
  #L4fbd02.  call temp:= `e`(v3, v0, v4) @signature `Lu0/i$b;.e:(ILjava/lang/Class;)Lu0/i$a;` @kind virtual;
  #L4fbd08.  v3:= temp @kind object;
  #L4fbd0a.  goto L4fbd18;
  #L4fbd0c.  v0:= v2.`u0.i.b` @type ^`u0.i$b` @kind object;
  #L4fbd10.  call temp:= `e`(v0, v3, v4) @signature `Lu0/i$b;.e:(ILjava/lang/Class;)Lu0/i$a;` @kind virtual;
  #L4fbd16.  v3:= temp @kind object;
  #L4fbd18.  call temp:= `k`(v2, v3, v4) @signature `Lu0/i;.k:(Lu0/i$a;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L4fbd1e.  v3:= temp @kind object;
  #L4fbd20.  @monitorexit v2
  #L4fbd22.  return v3 @kind object;
  #L4fbd24.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fbd26.  @monitorexit v2
  #L4fbd28.  throw v3;
  catch `java.lang.Throwable` @[L4fbcce..L4fbd20] goto L4fbd24;
}
procedure `void` `put`(`u0.i` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lu0/i;.put:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc164.  @monitorenter v4
  #L4fc166.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4fc16c.  v0:= temp @kind object;
  #L4fc16e.  call temp:= `i`(v4, v0) @signature `Lu0/i;.i:(Ljava/lang/Class;)Lu0/a;` @kind direct;
  #L4fc174.  v1:= temp @kind object;
  #L4fc176.  call temp:= `b`(v1, v5) @signature `Lu0/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L4fc17c.  v2:= temp;
  #L4fc17e.  call temp:= `a`(v1) @signature `Lu0/a;.a:()I` @kind interface;
  #L4fc184.  v1:= temp;
  #L4fc186.  v1:= v1 * v2 @kind int;
  #L4fc18a.  call temp:= `n`(v4, v1) @signature `Lu0/i;.n:(I)Z` @kind direct;
  #L4fc190.  v3:= temp;
  #L4fc192.  if v3 != 0 then goto L4fc19a;
  #L4fc196.  @monitorexit v4
  #L4fc198.  return @kind void;
  #L4fc19a.  v3:= v4.`u0.i.b` @type ^`u0.i$b` @kind object;
  #L4fc19e.  call temp:= `e`(v3, v2, v0) @signature `Lu0/i$b;.e:(ILjava/lang/Class;)Lu0/i$a;` @kind virtual;
  #L4fc1a4.  v2:= temp @kind object;
  #L4fc1a6.  v3:= v4.`u0.i.a` @type ^`u0.g` @kind object;
  #L4fc1aa.  call `d`(v3, v2, v5) @signature `Lu0/g;.d:(Lu0/l;Ljava/lang/Object;)V` @kind virtual;
  #L4fc1b0.  call temp:= `l`(v4, v0) @signature `Lu0/i;.l:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L4fc1b6.  v5:= temp @kind object;
  #L4fc1b8.  v0:= v2.`u0.i$a.b` @type ^`int`;
  #L4fc1bc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fc1c2.  v0:= temp @kind object;
  #L4fc1c4.  call temp:= `get`(v5, v0) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fc1ca.  v0:= temp @kind object;
  #L4fc1cc.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L4fc1d0.  v2:= v2.`u0.i$a.b` @type ^`int`;
  #L4fc1d4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fc1da.  v2:= temp @kind object;
  #L4fc1dc.  v3:= 1I;
  #L4fc1de.  if v0 != 0 then goto L4fc1e4;
  #L4fc1e2.  goto L4fc1ee;
  #L4fc1e4.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4fc1ea.  v0:= temp;
  #L4fc1ec.  v3:= v3 + v0 @kind int;
  #L4fc1ee.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fc1f4.  v0:= temp @kind object;
  #L4fc1f6.  call temp:= `put`(v5, v2, v0) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fc1fc.  v5:= v4.`u0.i.f` @type ^`int`;
  #L4fc200.  v5:= v5 + v1 @kind int;
  #L4fc202.  v4.`u0.i.f` @type ^`int` := v5;
  #L4fc206.  call `f`(v4) @signature `Lu0/i;.f:()V` @kind direct;
  #L4fc20c.  @monitorexit v4
  #L4fc20e.  return @kind void;
  #L4fc210.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fc212.  @monitorexit v4
  #L4fc214.  throw v5;
  catch `java.lang.Throwable` @[L4fc166..L4fc192] goto L4fc210;
  catch `java.lang.Throwable` @[L4fc19a..L4fc20c] goto L4fc210;
}
