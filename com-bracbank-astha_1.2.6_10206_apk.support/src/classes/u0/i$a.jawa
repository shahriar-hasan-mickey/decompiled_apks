record `u0.i$a` @kind class @AccessFlag FINAL extends `u0.l` @kind interface {
  `u0.i$b` `u0.i$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `u0.i$a.b` @AccessFlag ;
  `java.lang.Class` `u0.i$a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`u0.i$a` v0 @kind this, `u0.i$b` v1 @kind object) @signature `Lu0/i$a;.<init>:(Lu0/i$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fbbec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fbbf2.  v0.`u0.i$a.a` @type ^`u0.i$b` := v1 @kind object;
  #L4fbbf6.  return @kind void;
}
procedure `void` `a`(`u0.i$a` v1 @kind this) @signature `Lu0/i$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fbc24.  v0:= v1.`u0.i$a.a` @type ^`u0.i$b` @kind object;
  #L4fbc28.  call `c`(v0, v1) @signature `Lu0/c;.c:(Lu0/l;)V` @kind virtual;
  #L4fbc2e.  return @kind void;
}
procedure `void` `b`(`u0.i$a` v0 @kind this, `int` v1 , `java.lang.Class` v2 @kind object) @signature `Lu0/i$a;.b:(ILjava/lang/Class;)V` @AccessFlag  {
    temp;

  #L4fbc08.  v0.`u0.i$a.b` @type ^`int` := v1;
  #L4fbc0c.  v0.`u0.i$a.c` @type ^`java.lang.Class` := v2 @kind object;
  #L4fbc10.  return @kind void;
}
procedure `boolean` `equals`(`u0.i$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lu0/i$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fbb28.  v0:= instanceof @variable v4 @type ^`u0.i$a` @kind boolean;
  #L4fbb2c.  v1:= 0I;
  #L4fbb2e.  if v0 == 0 then goto L4fbb50;
  #L4fbb32.  v4:= (`u0.i$a`) v4 @kind object;
  #L4fbb36.  v0:= v3.`u0.i$a.b` @type ^`int`;
  #L4fbb3a.  v2:= v4.`u0.i$a.b` @type ^`int`;
  #L4fbb3e.  if v0 != v2 then goto L4fbb50;
  #L4fbb42.  v0:= v3.`u0.i$a.c` @type ^`java.lang.Class` @kind object;
  #L4fbb46.  v4:= v4.`u0.i$a.c` @type ^`java.lang.Class` @kind object;
  #L4fbb4a.  if v0 != v4 then goto L4fbb50;
  #L4fbb4e.  v1:= 1I;
  #L4fbb50.  return v1;
}
procedure `int` `hashCode`(`u0.i$a` v2 @kind this) @signature `Lu0/i$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fbb64.  v0:= v2.`u0.i$a.b` @type ^`int`;
  #L4fbb68.  v0:= v0 * 31;
  #L4fbb6c.  v1:= v2.`u0.i$a.c` @type ^`java.lang.Class` @kind object;
  #L4fbb70.  if v1 == 0 then goto L4fbb7e;
  #L4fbb74.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4fbb7a.  v1:= temp;
  #L4fbb7c.  goto L4fbb80;
  #L4fbb7e.  v1:= 0I;
  #L4fbb80.  v0:= v0 + v1 @kind int;
  #L4fbb82.  return v0;
}
procedure `java.lang.String` `toString`(`u0.i$a` v2 @kind this) @signature `Lu0/i$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fbb94.  v0:= new `java.lang.StringBuilder`;
  #L4fbb98.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fbb9e.  v1:= "Key{size=" @kind object;
  #L4fbba2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbba8.  v1:= v2.`u0.i$a.b` @type ^`int`;
  #L4fbbac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbbb2.  v1:= "array=" @kind object;
  #L4fbbb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbbbc.  v1:= v2.`u0.i$a.c` @type ^`java.lang.Class` @kind object;
  #L4fbbc0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbbc6.  v1:= 125I;
  #L4fbbca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbbd0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fbbd6.  v0:= temp @kind object;
  #L4fbbd8.  return v0 @kind object;
}
