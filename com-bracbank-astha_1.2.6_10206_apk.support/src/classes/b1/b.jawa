record `b1.b` @kind class @AccessFlag PUBLIC extends `t0.c` @kind interface {
  `byte`[] `b1.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`b1.b` v0 @kind this, `byte`[] v1 @kind object) @signature `Lb1/b;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L207804.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20780a.  call temp:= `d`(v1) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L207810.  v1:= temp @kind object;
  #L207812.  v1:= (`byte`[]) v1 @kind object;
  #L207816.  v0.`b1.b.a` @type ^`byte`[] := v1 @kind object;
  #L20781a.  return @kind void;
}
procedure `byte`[] `a`(`b1.b` v1 @kind this) @signature `Lb1/b;.a:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2077a0.  v0:= v1.`b1.b.a` @type ^`byte`[] @kind object;
  #L2077a4.  return v0 @kind object;
}
procedure `void` `b`(`b1.b` v0 @kind this) @signature `Lb1/b;.b:()V` @AccessFlag PUBLIC {
    temp;

  #L20782c.  return @kind void;
}
procedure `java.lang.Class` `c`(`b1.b` v1 @kind this) @signature `Lb1/b;.c:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2077d0.  v0:= constclass @type ^`byte`[] @kind object;
  #L2077d4.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`b1.b` v1 @kind this) @signature `Lb1/b;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2077e8.  call temp:= `a`(v1) @signature `Lb1/b;.a:()[B` @kind virtual;
  #L2077ee.  v0:= temp @kind object;
  #L2077f0.  return v0 @kind object;
}
procedure `int` `getSize`(`b1.b` v1 @kind this) @signature `Lb1/b;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2077b8.  v0:= v1.`b1.b.a` @type ^`byte`[] @kind object;
  #L2077bc.  v0:= length @variable v0;
  #L2077be.  return v0;
}
