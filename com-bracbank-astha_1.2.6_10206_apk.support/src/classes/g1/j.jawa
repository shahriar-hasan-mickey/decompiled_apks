record `g1.j` @kind class @AccessFlag PUBLIC_FINAL extends `g1.f` @kind interface {
  `java.util.Set` `g1.j.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`g1.j` v1 @kind this) @signature `Lg1/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e8764.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e876a.  v0:= new `java.util.WeakHashMap`;
  #L4e876e.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L4e8774.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L4e877a.  v0:= temp @kind object;
  #L4e877c.  v1.`g1.j.a` @type ^`java.util.Set` := v0 @kind object;
  #L4e8780.  return @kind void;
}
procedure `void` `a`(`g1.j` v1 @kind this) @signature `Lg1/j;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8794.  v0:= v1.`g1.j.a` @type ^`java.util.Set` @kind object;
  #L4e8798.  call `clear`(v0) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L4e879e.  return @kind void;
}
procedure `java.util.List` `b`(`g1.j` v1 @kind this) @signature `Lg1/j;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8744.  v0:= v1.`g1.j.a` @type ^`java.util.Set` @kind object;
  #L4e8748.  call temp:= `i`(v0) @signature `Ln1/k;.i:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L4e874e.  v0:= temp @kind object;
  #L4e8750.  return v0 @kind object;
}
procedure `void` `c`(`g1.j` v1 @kind this, `k1.d` v2 @kind object) @signature `Lg1/j;.c:(Lk1/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8888.  v0:= v1.`g1.j.a` @type ^`java.util.Set` @kind object;
  #L4e888c.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e8892.  return @kind void;
}
procedure `void` `d`(`g1.j` v1 @kind this, `k1.d` v2 @kind object) @signature `Lg1/j;.d:(Lk1/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e88a4.  v0:= v1.`g1.j.a` @type ^`java.util.Set` @kind object;
  #L4e88a8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4e88ae.  return @kind void;
}
procedure `void` `onDestroy`(`g1.j` v2 @kind this) @signature `Lg1/j;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e87b0.  v0:= v2.`g1.j.a` @type ^`java.util.Set` @kind object;
  #L4e87b4.  call temp:= `i`(v0) @signature `Ln1/k;.i:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L4e87ba.  v0:= temp @kind object;
  #L4e87bc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e87c2.  v0:= temp @kind object;
  #L4e87c4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e87ca.  v1:= temp;
  #L4e87cc.  if v1 == 0 then goto L4e87e4;
  #L4e87d0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e87d6.  v1:= temp @kind object;
  #L4e87d8.  v1:= (`k1.d`) v1 @kind object;
  #L4e87dc.  call `onDestroy`(v1) @signature `Lg1/f;.onDestroy:()V` @kind interface;
  #L4e87e2.  goto L4e87c4;
  #L4e87e4.  return @kind void;
}
procedure `void` `onStart`(`g1.j` v2 @kind this) @signature `Lg1/j;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e87f8.  v0:= v2.`g1.j.a` @type ^`java.util.Set` @kind object;
  #L4e87fc.  call temp:= `i`(v0) @signature `Ln1/k;.i:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L4e8802.  v0:= temp @kind object;
  #L4e8804.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e880a.  v0:= temp @kind object;
  #L4e880c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e8812.  v1:= temp;
  #L4e8814.  if v1 == 0 then goto L4e882c;
  #L4e8818.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e881e.  v1:= temp @kind object;
  #L4e8820.  v1:= (`k1.d`) v1 @kind object;
  #L4e8824.  call `onStart`(v1) @signature `Lg1/f;.onStart:()V` @kind interface;
  #L4e882a.  goto L4e880c;
  #L4e882c.  return @kind void;
}
procedure `void` `onStop`(`g1.j` v2 @kind this) @signature `Lg1/j;.onStop:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e8840.  v0:= v2.`g1.j.a` @type ^`java.util.Set` @kind object;
  #L4e8844.  call temp:= `i`(v0) @signature `Ln1/k;.i:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L4e884a.  v0:= temp @kind object;
  #L4e884c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e8852.  v0:= temp @kind object;
  #L4e8854.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e885a.  v1:= temp;
  #L4e885c.  if v1 == 0 then goto L4e8874;
  #L4e8860.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e8866.  v1:= temp @kind object;
  #L4e8868.  v1:= (`k1.d`) v1 @kind object;
  #L4e886c.  call `onStop`(v1) @signature `Lg1/f;.onStop:()V` @kind interface;
  #L4e8872.  goto L4e8854;
  #L4e8874.  return @kind void;
}
