record `f1.g` @kind class @AccessFlag PUBLIC extends `f1.e` @kind interface {
}
global `f1.g` `@@f1.g.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lf1/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e5df4.  v0:= new `f1.g`;
  #L4e5df8.  call `<init>`(v0) @signature `Lf1/g;.<init>:()V` @kind direct;
  #L4e5dfe.  `@@f1.g.a` @type ^`f1.g` := v0 @kind object;
  #L4e5e02.  return @kind void;
}
procedure `void` `<init>`(`f1.g` v0 @kind this) @signature `Lf1/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e5e14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e5e1a.  return @kind void;
}
procedure `f1.e` `b`() @signature `Lf1/g;.b:()Lf1/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4e5dc8.  v0:= `@@f1.g.a` @type ^`f1.g` @kind object;
  #L4e5dcc.  return v0 @kind object;
}
procedure `t0.c` `a`(`f1.g` v0 @kind this, `t0.c` v1 @kind object, `q0.d` v2 @kind object) @signature `Lf1/g;.a:(Lt0/c;Lq0/d;)Lt0/c;` @AccessFlag PUBLIC {
    temp;

  #L4e5de0.  return v1 @kind object;
}
