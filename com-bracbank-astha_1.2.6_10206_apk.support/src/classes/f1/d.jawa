record `f1.d` @kind class @AccessFlag PUBLIC extends `f1.e` @kind interface {
}
procedure `void` `<init>`(`f1.d` v0 @kind this) @signature `Lf1/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e5ba4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e5baa.  return @kind void;
}
procedure `t0.c` `a`(`f1.d` v0 @kind this, `t0.c` v1 @kind object, `q0.d` v2 @kind object) @signature `Lf1/d;.a:(Lt0/c;Lq0/d;)Lt0/c;` @AccessFlag PUBLIC {
    temp;

  #L4e5b6c.  call temp:= `get`(v1) @signature `Lt0/c;.get:()Ljava/lang/Object;` @kind interface;
  #L4e5b72.  v1:= temp @kind object;
  #L4e5b74.  v1:= (`e1.c`) v1 @kind object;
  #L4e5b78.  call temp:= `c`(v1) @signature `Le1/c;.c:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L4e5b7e.  v1:= temp @kind object;
  #L4e5b80.  v2:= new `b1.b`;
  #L4e5b84.  call temp:= `d`(v1) @signature `Ln1/a;.d:(Ljava/nio/ByteBuffer;)[B` @kind static;
  #L4e5b8a.  v1:= temp @kind object;
  #L4e5b8c.  call `<init>`(v2, v1) @signature `Lb1/b;.<init>:([B)V` @kind direct;
  #L4e5b92.  return v2 @kind object;
}
