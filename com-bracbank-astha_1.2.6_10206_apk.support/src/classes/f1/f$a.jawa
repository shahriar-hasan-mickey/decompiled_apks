record `f1.f$a` @kind class @AccessFlag FINAL {
  `java.lang.Class` `f1.f$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `f1.f$a.b` @AccessFlag PRIVATE_FINAL;
  `f1.e` `f1.f$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`f1.f$a` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `f1.e` v3 @kind object) @signature `Lf1/f$a;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lf1/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e5bf4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e5bfa.  v0.`f1.f$a.a` @type ^`java.lang.Class` := v1 @kind object;
  #L4e5bfe.  v0.`f1.f$a.b` @type ^`java.lang.Class` := v2 @kind object;
  #L4e5c02.  v0.`f1.f$a.c` @type ^`f1.e` := v3 @kind object;
  #L4e5c06.  return @kind void;
}
procedure `boolean` `a`(`f1.f$a` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lf1/f$a;.a:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e5bbc.  v0:= v1.`f1.f$a.a` @type ^`java.lang.Class` @kind object;
  #L4e5bc0.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L4e5bc6.  v2:= temp;
  #L4e5bc8.  if v2 == 0 then goto L4e5be0;
  #L4e5bcc.  v2:= v1.`f1.f$a.b` @type ^`java.lang.Class` @kind object;
  #L4e5bd0.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L4e5bd6.  v2:= temp;
  #L4e5bd8.  if v2 == 0 then goto L4e5be0;
  #L4e5bdc.  v2:= 1I;
  #L4e5bde.  goto L4e5be2;
  #L4e5be0.  v2:= 0I;
  #L4e5be2.  return v2;
}
