record `de.niklasmerz.cordova.fingerprint.a$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `de.niklasmerz.cordova.fingerprint.a` `de.niklasmerz.cordova.fingerprint.a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`de.niklasmerz.cordova.fingerprint.a$a` v0 @kind this, `de.niklasmerz.cordova.fingerprint.a` v1 @kind object) @signature `Lde/niklasmerz/cordova/fingerprint/a$a;.<init>:(Lde/niklasmerz/cordova/fingerprint/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35b1b4.  v0.`de.niklasmerz.cordova.fingerprint.a$a.a` @type ^`de.niklasmerz.cordova.fingerprint.a` := v1 @kind object;
  #L35b1b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35b1be.  return @kind void;
}
procedure `void` `run`(`de.niklasmerz.cordova.fingerprint.a$a` v1 @kind this) @signature `Lde/niklasmerz/cordova/fingerprint/a$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35b1d0.  v0:= v1.`de.niklasmerz.cordova.fingerprint.a$a.a` @type ^`de.niklasmerz.cordova.fingerprint.a` @kind object;
  #L35b1d4.  call temp:= `a`(v0) @signature `Lde/niklasmerz/cordova/fingerprint/a;.a:(Lde/niklasmerz/cordova/fingerprint/a;)Lde/niklasmerz/cordova/fingerprint/a$d;` @kind static;
  #L35b1da.  v0:= temp @kind object;
  #L35b1dc.  call `a`(v0) @signature `Lde/niklasmerz/cordova/fingerprint/a$d;.a:()V` @kind interface;
  #L35b1e2.  return @kind void;
}
