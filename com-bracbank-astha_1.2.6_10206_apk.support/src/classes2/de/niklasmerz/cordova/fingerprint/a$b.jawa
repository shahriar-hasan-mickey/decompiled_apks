record `de.niklasmerz.cordova.fingerprint.a$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `de.niklasmerz.cordova.fingerprint.a` `de.niklasmerz.cordova.fingerprint.a$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`de.niklasmerz.cordova.fingerprint.a$b` v0 @kind this, `de.niklasmerz.cordova.fingerprint.a` v1 @kind object) @signature `Lde/niklasmerz/cordova/fingerprint/a$b;.<init>:(Lde/niklasmerz/cordova/fingerprint/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35b1f4.  v0.`de.niklasmerz.cordova.fingerprint.a$b.a` @type ^`de.niklasmerz.cordova.fingerprint.a` := v1 @kind object;
  #L35b1f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35b1fe.  return @kind void;
}
procedure `void` `run`(`de.niklasmerz.cordova.fingerprint.a$b` v1 @kind this) @signature `Lde/niklasmerz/cordova/fingerprint/a$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35b210.  v0:= v1.`de.niklasmerz.cordova.fingerprint.a$b.a` @type ^`de.niklasmerz.cordova.fingerprint.a` @kind object;
  #L35b214.  call temp:= `a`(v0) @signature `Lde/niklasmerz/cordova/fingerprint/a;.a:(Lde/niklasmerz/cordova/fingerprint/a;)Lde/niklasmerz/cordova/fingerprint/a$d;` @kind static;
  #L35b21a.  v0:= temp @kind object;
  #L35b21c.  call `b`(v0) @signature `Lde/niklasmerz/cordova/fingerprint/a$d;.b:()V` @kind interface;
  #L35b222.  return @kind void;
}
