record `r1.n` @kind class @AccessFlag PUBLIC {
}
procedure `void` `a`() @signature `Lr1/n;.a:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3facb0.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L3facb6.  v0:= temp @kind object;
  #L3facb8.  call temp:= `myLooper`() @signature `Landroid/os/Looper;.myLooper:()Landroid/os/Looper;` @kind static;
  #L3facbe.  v1:= temp @kind object;
  #L3facc0.  if v0 != v1 then goto L3facc6;
  #L3facc4.  return @kind void;
  #L3facc6.  v0:= new `java.lang.IllegalStateException`;
  #L3facca.  v1:= "Must be called from the main thread." @kind object;
  #L3facce.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3facd4.  throw v0;
}
