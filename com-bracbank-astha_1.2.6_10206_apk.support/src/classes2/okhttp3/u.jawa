record `okhttp3.u` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface {
  `int` `okhttp3.u.A` @AccessFlag FINAL;
  `int` `okhttp3.u.B` @AccessFlag FINAL;
  `okhttp3.m` `okhttp3.u.a` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.u.b` @AccessFlag FINAL;
  `java.util.List` `okhttp3.u.c` @AccessFlag FINAL;
  `java.util.List` `okhttp3.u.d` @AccessFlag FINAL;
  `java.util.List` `okhttp3.u.e` @AccessFlag FINAL;
  `java.util.List` `okhttp3.u.f` @AccessFlag FINAL;
  `okhttp3.o$c` `okhttp3.u.g` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.u.h` @AccessFlag FINAL;
  `okhttp3.l` `okhttp3.u.i` @AccessFlag FINAL;
  `u2.d` `okhttp3.u.j` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.u.k` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.u.l` @AccessFlag FINAL;
  `b3.c` `okhttp3.u.m` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.u.n` @AccessFlag FINAL;
  `okhttp3.f` `okhttp3.u.o` @AccessFlag FINAL;
  `okhttp3.b` `okhttp3.u.p` @AccessFlag FINAL;
  `okhttp3.b` `okhttp3.u.r` @AccessFlag FINAL;
  `okhttp3.i` `okhttp3.u.s` @AccessFlag FINAL;
  `okhttp3.n` `okhttp3.u.t` @AccessFlag FINAL;
  `boolean` `okhttp3.u.u` @AccessFlag FINAL;
  `boolean` `okhttp3.u.v` @AccessFlag FINAL;
  `boolean` `okhttp3.u.w` @AccessFlag FINAL;
  `int` `okhttp3.u.x` @AccessFlag FINAL;
  `int` `okhttp3.u.y` @AccessFlag FINAL;
  `int` `okhttp3.u.z` @AccessFlag FINAL;
}
global `java.util.List` `@@okhttp3.u.C` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@okhttp3.u.D` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a9d84.  v0:= 2I;
  #L3a9d86.  v1:= new `okhttp3.Protocol`[v0];
  #L3a9d8a.  v2:= `@@okhttp3.Protocol.d` @type ^`okhttp3.Protocol` @kind object;
  #L3a9d8e.  v3:= 0I;
  #L3a9d90.  v1[v3]:= v2 @kind object;
  #L3a9d94.  v2:= `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol` @kind object;
  #L3a9d98.  v4:= 1I;
  #L3a9d9a.  v1[v4]:= v2 @kind object;
  #L3a9d9e.  call temp:= `u`(v1) @signature `Lt2/c;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a9da4.  v1:= temp @kind object;
  #L3a9da6.  `@@okhttp3.u.C` @type ^`java.util.List` := v1 @kind object;
  #L3a9daa.  v0:= new `okhttp3.j`[v0];
  #L3a9dae.  v1:= `@@okhttp3.j.h` @type ^`okhttp3.j` @kind object;
  #L3a9db2.  v0[v3]:= v1 @kind object;
  #L3a9db6.  v1:= `@@okhttp3.j.j` @type ^`okhttp3.j` @kind object;
  #L3a9dba.  v0[v4]:= v1 @kind object;
  #L3a9dbe.  call temp:= `u`(v0) @signature `Lt2/c;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a9dc4.  v0:= temp @kind object;
  #L3a9dc6.  `@@okhttp3.u.D` @type ^`java.util.List` := v0 @kind object;
  #L3a9dca.  v0:= new `okhttp3.u$a`;
  #L3a9dce.  call `<init>`(v0) @signature `Lokhttp3/u$a;.<init>:()V` @kind direct;
  #L3a9dd4.  `@@t2.a.a` @type ^`t2.a` := v0 @kind object;
  #L3a9dd8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a9dec.  v0:= new `okhttp3.u$b`;
  #L3a9df0.  call `<init>`(v0) @signature `Lokhttp3/u$b;.<init>:()V` @kind direct;
  #L3a9df6.  call `<init>`(v1, v0) @signature `Lokhttp3/u;.<init>:(Lokhttp3/u$b;)V` @kind direct;
  #L3a9dfc.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.u` v4 @kind this, `okhttp3.u$b` v5 @kind object) @signature `Lokhttp3/u;.<init>:(Lokhttp3/u$b;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a9e10.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a9e16.  v0:= v5.`okhttp3.u$b.a` @type ^`okhttp3.m` @kind object;
  #L3a9e1a.  v4.`okhttp3.u.a` @type ^`okhttp3.m` := v0 @kind object;
  #L3a9e1e.  v0:= v5.`okhttp3.u$b.b` @type ^`java.net.Proxy` @kind object;
  #L3a9e22.  v4.`okhttp3.u.b` @type ^`java.net.Proxy` := v0 @kind object;
  #L3a9e26.  v0:= v5.`okhttp3.u$b.c` @type ^`java.util.List` @kind object;
  #L3a9e2a.  v4.`okhttp3.u.c` @type ^`java.util.List` := v0 @kind object;
  #L3a9e2e.  v0:= v5.`okhttp3.u$b.d` @type ^`java.util.List` @kind object;
  #L3a9e32.  v4.`okhttp3.u.d` @type ^`java.util.List` := v0 @kind object;
  #L3a9e36.  v1:= v5.`okhttp3.u$b.e` @type ^`java.util.List` @kind object;
  #L3a9e3a.  call temp:= `t`(v1) @signature `Lt2/c;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3a9e40.  v1:= temp @kind object;
  #L3a9e42.  v4.`okhttp3.u.e` @type ^`java.util.List` := v1 @kind object;
  #L3a9e46.  v1:= v5.`okhttp3.u$b.f` @type ^`java.util.List` @kind object;
  #L3a9e4a.  call temp:= `t`(v1) @signature `Lt2/c;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3a9e50.  v1:= temp @kind object;
  #L3a9e52.  v4.`okhttp3.u.f` @type ^`java.util.List` := v1 @kind object;
  #L3a9e56.  v1:= v5.`okhttp3.u$b.g` @type ^`okhttp3.o$c` @kind object;
  #L3a9e5a.  v4.`okhttp3.u.g` @type ^`okhttp3.o$c` := v1 @kind object;
  #L3a9e5e.  v1:= v5.`okhttp3.u$b.h` @type ^`java.net.ProxySelector` @kind object;
  #L3a9e62.  v4.`okhttp3.u.h` @type ^`java.net.ProxySelector` := v1 @kind object;
  #L3a9e66.  v1:= v5.`okhttp3.u$b.i` @type ^`okhttp3.l` @kind object;
  #L3a9e6a.  v4.`okhttp3.u.i` @type ^`okhttp3.l` := v1 @kind object;
  #L3a9e6e.  v1:= v5.`okhttp3.u$b.j` @type ^`u2.d` @kind object;
  #L3a9e72.  v4.`okhttp3.u.j` @type ^`u2.d` := v1 @kind object;
  #L3a9e76.  v1:= v5.`okhttp3.u$b.k` @type ^`javax.net.SocketFactory` @kind object;
  #L3a9e7a.  v4.`okhttp3.u.k` @type ^`javax.net.SocketFactory` := v1 @kind object;
  #L3a9e7e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a9e84.  v0:= temp @kind object;
  #L3a9e86.  v1:= 0I;
  #L3a9e88.  v2:= 0I;
  #L3a9e8a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a9e90.  v3:= temp;
  #L3a9e92.  if v3 == 0 then goto L3a9eb6;
  #L3a9e96.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a9e9c.  v3:= temp @kind object;
  #L3a9e9e.  v3:= (`okhttp3.j`) v3 @kind object;
  #L3a9ea2.  if v2 != 0 then goto L3a9eb2;
  #L3a9ea6.  call temp:= `d`(v3) @signature `Lokhttp3/j;.d:()Z` @kind virtual;
  #L3a9eac.  v2:= temp;
  #L3a9eae.  if v2 == 0 then goto L3a9e88;
  #L3a9eb2.  v2:= 1I;
  #L3a9eb4.  goto L3a9e8a;
  #L3a9eb6.  v0:= v5.`okhttp3.u$b.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3a9eba.  if v0 != 0 then goto L3a9ee6;
  #L3a9ebe.  if v2 != 0 then goto L3a9ec4;
  #L3a9ec2.  goto L3a9ee6;
  #L3a9ec4.  call temp:= `C`() @signature `Lt2/c;.C:()Ljavax/net/ssl/X509TrustManager;` @kind static;
  #L3a9eca.  v0:= temp @kind object;
  #L3a9ecc.  call temp:= `u`(v0) @signature `Lokhttp3/u;.u:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L3a9ed2.  v1:= temp @kind object;
  #L3a9ed4.  v4.`okhttp3.u.l` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L3a9ed8.  call temp:= `b`(v0) @signature `Lb3/c;.b:(Ljavax/net/ssl/X509TrustManager;)Lb3/c;` @kind static;
  #L3a9ede.  v0:= temp @kind object;
  #L3a9ee0.  v4.`okhttp3.u.m` @type ^`b3.c` := v0 @kind object;
  #L3a9ee4.  goto L3a9ef2;
  #L3a9ee6.  v4.`okhttp3.u.l` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L3a9eea.  v0:= v5.`okhttp3.u$b.m` @type ^`b3.c` @kind object;
  #L3a9eee.  v4.`okhttp3.u.m` @type ^`b3.c` := v0 @kind object;
  #L3a9ef2.  v0:= v4.`okhttp3.u.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3a9ef6.  if v0 == 0 then goto L3a9f0c;
  #L3a9efa.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3a9f00.  v0:= temp @kind object;
  #L3a9f02.  v1:= v4.`okhttp3.u.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3a9f06.  call `f`(v0, v1) @signature `Lz2/f;.f:(Ljavax/net/ssl/SSLSocketFactory;)V` @kind virtual;
  #L3a9f0c.  v0:= v5.`okhttp3.u$b.n` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L3a9f10.  v4.`okhttp3.u.n` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L3a9f14.  v0:= v5.`okhttp3.u$b.o` @type ^`okhttp3.f` @kind object;
  #L3a9f18.  v1:= v4.`okhttp3.u.m` @type ^`b3.c` @kind object;
  #L3a9f1c.  call temp:= `f`(v0, v1) @signature `Lokhttp3/f;.f:(Lb3/c;)Lokhttp3/f;` @kind virtual;
  #L3a9f22.  v0:= temp @kind object;
  #L3a9f24.  v4.`okhttp3.u.o` @type ^`okhttp3.f` := v0 @kind object;
  #L3a9f28.  v0:= v5.`okhttp3.u$b.p` @type ^`okhttp3.b` @kind object;
  #L3a9f2c.  v4.`okhttp3.u.p` @type ^`okhttp3.b` := v0 @kind object;
  #L3a9f30.  v0:= v5.`okhttp3.u$b.q` @type ^`okhttp3.b` @kind object;
  #L3a9f34.  v4.`okhttp3.u.r` @type ^`okhttp3.b` := v0 @kind object;
  #L3a9f38.  v0:= v5.`okhttp3.u$b.r` @type ^`okhttp3.i` @kind object;
  #L3a9f3c.  v4.`okhttp3.u.s` @type ^`okhttp3.i` := v0 @kind object;
  #L3a9f40.  v0:= v5.`okhttp3.u$b.s` @type ^`okhttp3.n` @kind object;
  #L3a9f44.  v4.`okhttp3.u.t` @type ^`okhttp3.n` := v0 @kind object;
  #L3a9f48.  v0:= v5.`okhttp3.u$b.t` @type ^`boolean` @kind boolean;
  #L3a9f4c.  v4.`okhttp3.u.u` @type ^`boolean` := v0 @kind boolean;
  #L3a9f50.  v0:= v5.`okhttp3.u$b.u` @type ^`boolean` @kind boolean;
  #L3a9f54.  v4.`okhttp3.u.v` @type ^`boolean` := v0 @kind boolean;
  #L3a9f58.  v0:= v5.`okhttp3.u$b.v` @type ^`boolean` @kind boolean;
  #L3a9f5c.  v4.`okhttp3.u.w` @type ^`boolean` := v0 @kind boolean;
  #L3a9f60.  v0:= v5.`okhttp3.u$b.w` @type ^`int`;
  #L3a9f64.  v4.`okhttp3.u.x` @type ^`int` := v0;
  #L3a9f68.  v0:= v5.`okhttp3.u$b.x` @type ^`int`;
  #L3a9f6c.  v4.`okhttp3.u.y` @type ^`int` := v0;
  #L3a9f70.  v0:= v5.`okhttp3.u$b.y` @type ^`int`;
  #L3a9f74.  v4.`okhttp3.u.z` @type ^`int` := v0;
  #L3a9f78.  v0:= v5.`okhttp3.u$b.z` @type ^`int`;
  #L3a9f7c.  v4.`okhttp3.u.A` @type ^`int` := v0;
  #L3a9f80.  v5:= v5.`okhttp3.u$b.A` @type ^`int`;
  #L3a9f84.  v4.`okhttp3.u.B` @type ^`int` := v5;
  #L3a9f88.  v5:= v4.`okhttp3.u.e` @type ^`java.util.List` @kind object;
  #L3a9f8c.  v0:= 0I;
  #L3a9f8e.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3a9f94.  v5:= temp;
  #L3a9f96.  if v5 != 0 then goto L3a9fde;
  #L3a9f9a.  v5:= v4.`okhttp3.u.f` @type ^`java.util.List` @kind object;
  #L3a9f9e.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3a9fa4.  v5:= temp;
  #L3a9fa6.  if v5 != 0 then goto L3a9fac;
  #L3a9faa.  return @kind void;
  #L3a9fac.  v5:= new `java.lang.IllegalStateException`;
  #L3a9fb0.  v0:= new `java.lang.StringBuilder`;
  #L3a9fb4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9fba.  v1:= "Null network interceptor: " @kind object;
  #L3a9fbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9fc4.  v1:= v4.`okhttp3.u.f` @type ^`java.util.List` @kind object;
  #L3a9fc8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9fce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9fd4.  v0:= temp @kind object;
  #L3a9fd6.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9fdc.  throw v5;
  #L3a9fde.  v5:= new `java.lang.IllegalStateException`;
  #L3a9fe2.  v0:= new `java.lang.StringBuilder`;
  #L3a9fe6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9fec.  v1:= "Null interceptor: " @kind object;
  #L3a9ff0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9ff6.  v1:= v4.`okhttp3.u.e` @type ^`java.util.List` @kind object;
  #L3a9ffa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa000.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa006.  v0:= temp @kind object;
  #L3aa008.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa00e.  throw v5;
}
procedure `javax.net.ssl.SSLSocketFactory` `u`(`javax.net.ssl.X509TrustManager` v3 @kind object) @signature `Lokhttp3/u;.u:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a9bfc.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3a9c02.  v0:= temp @kind object;
  #L3a9c04.  call temp:= `k`(v0) @signature `Lz2/f;.k:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L3a9c0a.  v0:= temp @kind object;
  #L3a9c0c.  v1:= 1I;
  #L3a9c0e.  v1:= new `javax.net.ssl.TrustManager`[v1];
  #L3a9c12.  v2:= 0I;
  #L3a9c14.  v1[v2]:= v3 @kind object;
  #L3a9c18.  v3:= 0I;
  #L3a9c1a.  call `init`(v0, v3, v1, v3) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L3a9c20.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3a9c26.  v3:= temp @kind object;
  #L3a9c28.  return v3 @kind object;
  #L3a9c2a.  v3:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L3a9c2c.  v0:= "No System TLS" @kind object;
  #L3a9c30.  call temp:= `b`(v0, v3) @signature `Lt2/c;.b:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L3a9c36.  v3:= temp @kind object;
  #L3a9c38.  throw v3;
  catch `java.security.GeneralSecurityException` @[L3a9bfc..L3a9c28] goto L3a9c2a;
}
procedure `int` `A`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.A:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9b0c.  v0:= v1.`okhttp3.u.z` @type ^`int`;
  #L3a9b10.  return v0;
}
procedure `boolean` `B`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.B:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9aac.  v0:= v1.`okhttp3.u.w` @type ^`boolean` @kind boolean;
  #L3a9ab0.  return v0;
}
procedure `javax.net.SocketFactory` `C`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.C:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9bcc.  v0:= v1.`okhttp3.u.k` @type ^`javax.net.SocketFactory` @kind object;
  #L3a9bd0.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `D`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.D:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9c5c.  v0:= v1.`okhttp3.u.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3a9c60.  return v0 @kind object;
}
procedure `int` `E`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.E:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9b24.  v0:= v1.`okhttp3.u.A` @type ^`int`;
  #L3a9b28.  return v0;
}
procedure `okhttp3.b` `a`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.a:()Lokhttp3/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9c74.  v0:= v1.`okhttp3.u.r` @type ^`okhttp3.b` @kind object;
  #L3a9c78.  return v0 @kind object;
}
procedure `int` `b`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9ac4.  v0:= v1.`okhttp3.u.x` @type ^`int`;
  #L3a9ac8.  return v0;
}
procedure `okhttp3.f` `c`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.c:()Lokhttp3/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9cc0.  v0:= v1.`okhttp3.u.o` @type ^`okhttp3.f` @kind object;
  #L3a9cc4.  return v0 @kind object;
}
procedure `int` `d`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9adc.  v0:= v1.`okhttp3.u.y` @type ^`int`;
  #L3a9ae0.  return v0;
}
procedure `okhttp3.i` `e`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.e:()Lokhttp3/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9cd8.  v0:= v1.`okhttp3.u.s` @type ^`okhttp3.i` @kind object;
  #L3a9cdc.  return v0 @kind object;
}
procedure `java.util.List` `f`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.f:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9b6c.  v0:= v1.`okhttp3.u.d` @type ^`java.util.List` @kind object;
  #L3a9b70.  return v0 @kind object;
}
procedure `okhttp3.l` `i`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.i:()Lokhttp3/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9cf0.  v0:= v1.`okhttp3.u.i` @type ^`okhttp3.l` @kind object;
  #L3a9cf4.  return v0 @kind object;
}
procedure `okhttp3.m` `j`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.j:()Lokhttp3/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9d08.  v0:= v1.`okhttp3.u.a` @type ^`okhttp3.m` @kind object;
  #L3a9d0c.  return v0 @kind object;
}
procedure `okhttp3.n` `k`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.k:()Lokhttp3/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9d20.  v0:= v1.`okhttp3.u.t` @type ^`okhttp3.n` @kind object;
  #L3a9d24.  return v0 @kind object;
}
procedure `okhttp3.o$c` `l`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.l:()Lokhttp3/o$c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9d38.  v0:= v1.`okhttp3.u.g` @type ^`okhttp3.o$c` @kind object;
  #L3a9d3c.  return v0 @kind object;
}
procedure `boolean` `m`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.m:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9a7c.  v0:= v1.`okhttp3.u.v` @type ^`boolean` @kind boolean;
  #L3a9a80.  return v0;
}
procedure `boolean` `n`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.n:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9a94.  v0:= v1.`okhttp3.u.u` @type ^`boolean` @kind boolean;
  #L3a9a98.  return v0;
}
procedure `javax.net.ssl.HostnameVerifier` `o`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.o:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9be4.  v0:= v1.`okhttp3.u.n` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L3a9be8.  return v0 @kind object;
}
procedure `java.util.List` `p`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.p:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9b84.  v0:= v1.`okhttp3.u.e` @type ^`java.util.List` @kind object;
  #L3a9b88.  return v0 @kind object;
}
procedure `u2.d` `q`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.q:()Lu2/d;` @AccessFlag  {
    temp;
    v0;

  #L3a9d6c.  v0:= v1.`okhttp3.u.j` @type ^`u2.d` @kind object;
  #L3a9d70.  return v0 @kind object;
}
procedure `java.util.List` `r`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.r:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9b9c.  v0:= v1.`okhttp3.u.f` @type ^`java.util.List` @kind object;
  #L3a9ba0.  return v0 @kind object;
}
procedure `okhttp3.u$b` `s`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.s:()Lokhttp3/u$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9d50.  v0:= new `okhttp3.u$b`;
  #L3a9d54.  call `<init>`(v0, v1) @signature `Lokhttp3/u$b;.<init>:(Lokhttp3/u;)V` @kind direct;
  #L3a9d5a.  return v0 @kind object;
}
procedure `okhttp3.d` `t`(`okhttp3.u` v1 @kind this, `okhttp3.w` v2 @kind object) @signature `Lokhttp3/u;.t:(Lokhttp3/w;)Lokhttp3/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9ca4.  v0:= 0I;
  #L3a9ca6.  call temp:= `i`(v1, v2, v0) @signature `Lokhttp3/v;.i:(Lokhttp3/u;Lokhttp3/w;Z)Lokhttp3/v;` @kind static;
  #L3a9cac.  v2:= temp @kind object;
  #L3a9cae.  return v2 @kind object;
}
procedure `int` `v`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.v:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9af4.  v0:= v1.`okhttp3.u.B` @type ^`int`;
  #L3a9af8.  return v0;
}
procedure `java.util.List` `w`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.w:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9bb4.  v0:= v1.`okhttp3.u.c` @type ^`java.util.List` @kind object;
  #L3a9bb8.  return v0 @kind object;
}
procedure `java.net.Proxy` `x`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.x:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9b3c.  v0:= v1.`okhttp3.u.b` @type ^`java.net.Proxy` @kind object;
  #L3a9b40.  return v0 @kind object;
}
procedure `okhttp3.b` `y`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.y:()Lokhttp3/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9c8c.  v0:= v1.`okhttp3.u.p` @type ^`okhttp3.b` @kind object;
  #L3a9c90.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `z`(`okhttp3.u` v1 @kind this) @signature `Lokhttp3/u;.z:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9b54.  v0:= v1.`okhttp3.u.h` @type ^`java.net.ProxySelector` @kind object;
  #L3a9b58.  return v0 @kind object;
}
