record `okhttp3.y` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.w` `okhttp3.y.a` @AccessFlag FINAL;
  `okhttp3.Protocol` `okhttp3.y.b` @AccessFlag FINAL;
  `int` `okhttp3.y.c` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.y.d` @AccessFlag FINAL;
  `okhttp3.p` `okhttp3.y.e` @AccessFlag FINAL;
  `okhttp3.q` `okhttp3.y.f` @AccessFlag FINAL;
  `okhttp3.z` `okhttp3.y.g` @AccessFlag FINAL;
  `okhttp3.y` `okhttp3.y.h` @AccessFlag FINAL;
  `okhttp3.y` `okhttp3.y.i` @AccessFlag FINAL;
  `okhttp3.y` `okhttp3.y.j` @AccessFlag FINAL;
  `long` `okhttp3.y.k` @AccessFlag FINAL;
  `long` `okhttp3.y.l` @AccessFlag FINAL;
  `okhttp3.c` `okhttp3.y.m` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`okhttp3.y` v2 @kind this, `okhttp3.y$a` v3 @kind object) @signature `Lokhttp3/y;.<init>:(Lokhttp3/y$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ab634.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ab63a.  v0:= v3.`okhttp3.y$a.a` @type ^`okhttp3.w` @kind object;
  #L3ab63e.  v2.`okhttp3.y.a` @type ^`okhttp3.w` := v0 @kind object;
  #L3ab642.  v0:= v3.`okhttp3.y$a.b` @type ^`okhttp3.Protocol` @kind object;
  #L3ab646.  v2.`okhttp3.y.b` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L3ab64a.  v0:= v3.`okhttp3.y$a.c` @type ^`int`;
  #L3ab64e.  v2.`okhttp3.y.c` @type ^`int` := v0;
  #L3ab652.  v0:= v3.`okhttp3.y$a.d` @type ^`java.lang.String` @kind object;
  #L3ab656.  v2.`okhttp3.y.d` @type ^`java.lang.String` := v0 @kind object;
  #L3ab65a.  v0:= v3.`okhttp3.y$a.e` @type ^`okhttp3.p` @kind object;
  #L3ab65e.  v2.`okhttp3.y.e` @type ^`okhttp3.p` := v0 @kind object;
  #L3ab662.  v0:= v3.`okhttp3.y$a.f` @type ^`okhttp3.q$a` @kind object;
  #L3ab666.  call temp:= `d`(v0) @signature `Lokhttp3/q$a;.d:()Lokhttp3/q;` @kind virtual;
  #L3ab66c.  v0:= temp @kind object;
  #L3ab66e.  v2.`okhttp3.y.f` @type ^`okhttp3.q` := v0 @kind object;
  #L3ab672.  v0:= v3.`okhttp3.y$a.g` @type ^`okhttp3.z` @kind object;
  #L3ab676.  v2.`okhttp3.y.g` @type ^`okhttp3.z` := v0 @kind object;
  #L3ab67a.  v0:= v3.`okhttp3.y$a.h` @type ^`okhttp3.y` @kind object;
  #L3ab67e.  v2.`okhttp3.y.h` @type ^`okhttp3.y` := v0 @kind object;
  #L3ab682.  v0:= v3.`okhttp3.y$a.i` @type ^`okhttp3.y` @kind object;
  #L3ab686.  v2.`okhttp3.y.i` @type ^`okhttp3.y` := v0 @kind object;
  #L3ab68a.  v0:= v3.`okhttp3.y$a.j` @type ^`okhttp3.y` @kind object;
  #L3ab68e.  v2.`okhttp3.y.j` @type ^`okhttp3.y` := v0 @kind object;
  #L3ab692.  v0:= v3.`okhttp3.y$a.k` @type ^`long` @kind wide;
  #L3ab696.  v2.`okhttp3.y.k` @type ^`long` := v0 @kind wide;
  #L3ab69a.  v0:= v3.`okhttp3.y$a.l` @type ^`long` @kind wide;
  #L3ab69e.  v2.`okhttp3.y.l` @type ^`long` := v0 @kind wide;
  #L3ab6a2.  return @kind void;
}
procedure `okhttp3.p` `K`(`okhttp3.y` v1 @kind this) @signature `Lokhttp3/y;.K:()Lokhttp3/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab5a0.  v0:= v1.`okhttp3.y.e` @type ^`okhttp3.p` @kind object;
  #L3ab5a4.  return v0 @kind object;
}
procedure `java.lang.String` `R`(`okhttp3.y` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/y;.R:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab47c.  v0:= 0I;
  #L3ab47e.  call temp:= `T`(v1, v2, v0) @signature `Lokhttp3/y;.T:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3ab484.  v2:= temp @kind object;
  #L3ab486.  return v2 @kind object;
}
procedure `java.lang.String` `T`(`okhttp3.y` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/y;.T:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab498.  v0:= v1.`okhttp3.y.f` @type ^`okhttp3.q` @kind object;
  #L3ab49c.  call temp:= `c`(v0, v2) @signature `Lokhttp3/q;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3ab4a2.  v2:= temp @kind object;
  #L3ab4a4.  if v2 == 0 then goto L3ab4aa;
  #L3ab4a8.  v3:= v2 @kind object;
  #L3ab4aa.  return v3 @kind object;
}
procedure `okhttp3.q` `U`(`okhttp3.y` v1 @kind this) @signature `Lokhttp3/y;.U:()Lokhttp3/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab5b8.  v0:= v1.`okhttp3.y.f` @type ^`okhttp3.q` @kind object;
  #L3ab5bc.  return v0 @kind object;
}
procedure `okhttp3.y$a` `V`(`okhttp3.y` v1 @kind this) @signature `Lokhttp3/y;.V:()Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab600.  v0:= new `okhttp3.y$a`;
  #L3ab604.  call `<init>`(v0, v1) @signature `Lokhttp3/y$a;.<init>:(Lokhttp3/y;)V` @kind direct;
  #L3ab60a.  return v0 @kind object;
}
procedure `okhttp3.y` `W`(`okhttp3.y` v1 @kind this) @signature `Lokhttp3/y;.W:()Lokhttp3/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab5e8.  v0:= v1.`okhttp3.y.j` @type ^`okhttp3.y` @kind object;
  #L3ab5ec.  return v0 @kind object;
}
procedure `long` `X`(`okhttp3.y` v2 @kind this) @signature `Lokhttp3/y;.X:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab544.  v0:= v2.`okhttp3.y.l` @type ^`long` @kind wide;
  #L3ab548.  return v0 @kind wide;
}
procedure `okhttp3.w` `Y`(`okhttp3.y` v1 @kind this) @signature `Lokhttp3/y;.Y:()Lokhttp3/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab5d0.  v0:= v1.`okhttp3.y.a` @type ^`okhttp3.w` @kind object;
  #L3ab5d4.  return v0 @kind object;
}
procedure `long` `Z`(`okhttp3.y` v2 @kind this) @signature `Lokhttp3/y;.Z:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab55c.  v0:= v2.`okhttp3.y.k` @type ^`long` @kind wide;
  #L3ab560.  return v0 @kind wide;
}
procedure `void` `close`(`okhttp3.y` v2 @kind this) @signature `Lokhttp3/y;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab6b4.  v0:= v2.`okhttp3.y.g` @type ^`okhttp3.z` @kind object;
  #L3ab6b8.  if v0 == 0 then goto L3ab6c4;
  #L3ab6bc.  call `close`(v0) @signature `Lokhttp3/z;.close:()V` @kind virtual;
  #L3ab6c2.  return @kind void;
  #L3ab6c4.  v0:= new `java.lang.IllegalStateException`;
  #L3ab6c8.  v1:= "response is not eligible for a body and must not be closed" @kind object;
  #L3ab6cc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab6d2.  throw v0;
}
procedure `okhttp3.z` `g`(`okhttp3.y` v1 @kind this) @signature `Lokhttp3/y;.g:()Lokhttp3/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab61c.  v0:= v1.`okhttp3.y.g` @type ^`okhttp3.z` @kind object;
  #L3ab620.  return v0 @kind object;
}
procedure `okhttp3.c` `h`(`okhttp3.y` v1 @kind this) @signature `Lokhttp3/y;.h:()Lokhttp3/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab574.  v0:= v1.`okhttp3.y.m` @type ^`okhttp3.c` @kind object;
  #L3ab578.  if v0 == 0 then goto L3ab57e;
  #L3ab57c.  goto L3ab58e;
  #L3ab57e.  v0:= v1.`okhttp3.y.f` @type ^`okhttp3.q` @kind object;
  #L3ab582.  call temp:= `k`(v0) @signature `Lokhttp3/c;.k:(Lokhttp3/q;)Lokhttp3/c;` @kind static;
  #L3ab588.  v0:= temp @kind object;
  #L3ab58a.  v1.`okhttp3.y.m` @type ^`okhttp3.c` := v0 @kind object;
  #L3ab58e.  return v0 @kind object;
}
procedure `int` `s`(`okhttp3.y` v1 @kind this) @signature `Lokhttp3/y;.s:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab464.  v0:= v1.`okhttp3.y.c` @type ^`int`;
  #L3ab468.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.y` v2 @kind this) @signature `Lokhttp3/y;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab4bc.  v0:= new `java.lang.StringBuilder`;
  #L3ab4c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ab4c6.  v1:= "Response{protocol=" @kind object;
  #L3ab4ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab4d0.  v1:= v2.`okhttp3.y.b` @type ^`okhttp3.Protocol` @kind object;
  #L3ab4d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab4da.  v1:= ", code=" @kind object;
  #L3ab4de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab4e4.  v1:= v2.`okhttp3.y.c` @type ^`int`;
  #L3ab4e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab4ee.  v1:= ", message=" @kind object;
  #L3ab4f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab4f8.  v1:= v2.`okhttp3.y.d` @type ^`java.lang.String` @kind object;
  #L3ab4fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab502.  v1:= ", url=" @kind object;
  #L3ab506.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab50c.  v1:= v2.`okhttp3.y.a` @type ^`okhttp3.w` @kind object;
  #L3ab510.  call temp:= `h`(v1) @signature `Lokhttp3/w;.h:()Lokhttp3/r;` @kind virtual;
  #L3ab516.  v1:= temp @kind object;
  #L3ab518.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab51e.  v1:= 125I;
  #L3ab522.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab528.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ab52e.  v0:= temp @kind object;
  #L3ab530.  return v0 @kind object;
}
