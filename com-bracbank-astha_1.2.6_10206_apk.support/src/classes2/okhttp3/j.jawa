record `okhttp3.j` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.j.a` @AccessFlag FINAL;
  `boolean` `okhttp3.j.b` @AccessFlag FINAL;
  `java.lang.String`[] `okhttp3.j.c` @AccessFlag FINAL;
  `java.lang.String`[] `okhttp3.j.d` @AccessFlag FINAL;
}
global `okhttp3.g`[] `@@okhttp3.j.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.g`[] `@@okhttp3.j.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.j` `@@okhttp3.j.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.j` `@@okhttp3.j.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.j` `@@okhttp3.j.i` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.j` `@@okhttp3.j.j` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L3a5ecc.  v0:= 11I;
  #L3a5ed0.  v1:= new `okhttp3.g`[v0];
  #L3a5ed4.  v2:= `@@okhttp3.g.n1` @type ^`okhttp3.g` @kind object;
  #L3a5ed8.  v3:= 0I;
  #L3a5eda.  v1[v3]:= v2 @kind object;
  #L3a5ede.  v4:= `@@okhttp3.g.o1` @type ^`okhttp3.g` @kind object;
  #L3a5ee2.  v5:= 1I;
  #L3a5ee4.  v1[v5]:= v4 @kind object;
  #L3a5ee8.  v6:= `@@okhttp3.g.p1` @type ^`okhttp3.g` @kind object;
  #L3a5eec.  v7:= 2I;
  #L3a5eee.  v1[v7]:= v6 @kind object;
  #L3a5ef2.  v8:= `@@okhttp3.g.q1` @type ^`okhttp3.g` @kind object;
  #L3a5ef6.  v9:= 3I;
  #L3a5ef8.  v1[v9]:= v8 @kind object;
  #L3a5efc.  v10:= `@@okhttp3.g.r1` @type ^`okhttp3.g` @kind object;
  #L3a5f00.  v11:= 4I;
  #L3a5f02.  v1[v11]:= v10 @kind object;
  #L3a5f06.  v12:= `@@okhttp3.g.Z0` @type ^`okhttp3.g` @kind object;
  #L3a5f0a.  v13:= 5I;
  #L3a5f0c.  v1[v13]:= v12 @kind object;
  #L3a5f10.  v14:= `@@okhttp3.g.d1` @type ^`okhttp3.g` @kind object;
  #L3a5f14.  v15:= 6I;
  #L3a5f16.  v1[v15]:= v14 @kind object;
  #L3a5f1a.  v16:= `@@okhttp3.g.a1` @type ^`okhttp3.g` @kind object;
  #L3a5f1e.  v17:= 7I;
  #L3a5f22.  v1[v17]:= v16 @kind object;
  #L3a5f26.  v18:= `@@okhttp3.g.e1` @type ^`okhttp3.g` @kind object;
  #L3a5f2a.  v19:= 8I;
  #L3a5f2e.  v1[v19]:= v18 @kind object;
  #L3a5f32.  v20:= `@@okhttp3.g.k1` @type ^`okhttp3.g` @kind object;
  #L3a5f36.  v21:= 9I;
  #L3a5f3a.  v1[v21]:= v20 @kind object;
  #L3a5f3e.  v22:= `@@okhttp3.g.j1` @type ^`okhttp3.g` @kind object;
  #L3a5f42.  v23:= 10I;
  #L3a5f46.  v1[v23]:= v22 @kind object;
  #L3a5f4a.  `@@okhttp3.j.e` @type ^`okhttp3.g`[] := v1 @kind object;
  #L3a5f4e.  v0:= 18I;
  #L3a5f52.  v0:= new `okhttp3.g`[v0];
  #L3a5f56.  v0[v3]:= v2 @kind object;
  #L3a5f5a.  v0[v5]:= v4 @kind object;
  #L3a5f5e.  v0[v7]:= v6 @kind object;
  #L3a5f62.  v0[v9]:= v8 @kind object;
  #L3a5f66.  v0[v11]:= v10 @kind object;
  #L3a5f6a.  v0[v13]:= v12 @kind object;
  #L3a5f6e.  v0[v15]:= v14 @kind object;
  #L3a5f72.  v0[v17]:= v16 @kind object;
  #L3a5f76.  v0[v19]:= v18 @kind object;
  #L3a5f7a.  v0[v21]:= v20 @kind object;
  #L3a5f7e.  v0[v23]:= v22 @kind object;
  #L3a5f82.  v2:= `@@okhttp3.g.K0` @type ^`okhttp3.g` @kind object;
  #L3a5f86.  v4:= 11I;
  #L3a5f8a.  v0[v4]:= v2 @kind object;
  #L3a5f8e.  v2:= `@@okhttp3.g.L0` @type ^`okhttp3.g` @kind object;
  #L3a5f92.  v4:= 12I;
  #L3a5f96.  v0[v4]:= v2 @kind object;
  #L3a5f9a.  v2:= `@@okhttp3.g.i0` @type ^`okhttp3.g` @kind object;
  #L3a5f9e.  v4:= 13I;
  #L3a5fa2.  v0[v4]:= v2 @kind object;
  #L3a5fa6.  v2:= `@@okhttp3.g.j0` @type ^`okhttp3.g` @kind object;
  #L3a5faa.  v4:= 14I;
  #L3a5fae.  v0[v4]:= v2 @kind object;
  #L3a5fb2.  v2:= `@@okhttp3.g.G` @type ^`okhttp3.g` @kind object;
  #L3a5fb6.  v4:= 15I;
  #L3a5fba.  v0[v4]:= v2 @kind object;
  #L3a5fbe.  v2:= `@@okhttp3.g.K` @type ^`okhttp3.g` @kind object;
  #L3a5fc2.  v4:= 16I;
  #L3a5fc6.  v0[v4]:= v2 @kind object;
  #L3a5fca.  v2:= `@@okhttp3.g.k` @type ^`okhttp3.g` @kind object;
  #L3a5fce.  v4:= 17I;
  #L3a5fd2.  v0[v4]:= v2 @kind object;
  #L3a5fd6.  `@@okhttp3.j.f` @type ^`okhttp3.g`[] := v0 @kind object;
  #L3a5fda.  v2:= new `okhttp3.j$a`;
  #L3a5fde.  call `<init>`(v2, v5) @signature `Lokhttp3/j$a;.<init>:(Z)V` @kind direct;
  #L3a5fe4.  call temp:= `c`(v2, v1) @signature `Lokhttp3/j$a;.c:([Lokhttp3/g;)Lokhttp3/j$a;` @kind virtual;
  #L3a5fea.  v1:= temp @kind object;
  #L3a5fec.  v2:= new `okhttp3.TlsVersion`[v7];
  #L3a5ff0.  v4:= `@@okhttp3.TlsVersion.a` @type ^`okhttp3.TlsVersion` @kind object;
  #L3a5ff4.  v2[v3]:= v4 @kind object;
  #L3a5ff8.  v6:= `@@okhttp3.TlsVersion.b` @type ^`okhttp3.TlsVersion` @kind object;
  #L3a5ffc.  v2[v5]:= v6 @kind object;
  #L3a6000.  call temp:= `f`(v1, v2) @signature `Lokhttp3/j$a;.f:([Lokhttp3/TlsVersion;)Lokhttp3/j$a;` @kind virtual;
  #L3a6006.  v1:= temp @kind object;
  #L3a6008.  call temp:= `d`(v1, v5) @signature `Lokhttp3/j$a;.d:(Z)Lokhttp3/j$a;` @kind virtual;
  #L3a600e.  v1:= temp @kind object;
  #L3a6010.  call temp:= `a`(v1) @signature `Lokhttp3/j$a;.a:()Lokhttp3/j;` @kind virtual;
  #L3a6016.  v1:= temp @kind object;
  #L3a6018.  `@@okhttp3.j.g` @type ^`okhttp3.j` := v1 @kind object;
  #L3a601c.  v1:= new `okhttp3.j$a`;
  #L3a6020.  call `<init>`(v1, v5) @signature `Lokhttp3/j$a;.<init>:(Z)V` @kind direct;
  #L3a6026.  call temp:= `c`(v1, v0) @signature `Lokhttp3/j$a;.c:([Lokhttp3/g;)Lokhttp3/j$a;` @kind virtual;
  #L3a602c.  v1:= temp @kind object;
  #L3a602e.  v2:= new `okhttp3.TlsVersion`[v11];
  #L3a6032.  v2[v3]:= v4 @kind object;
  #L3a6036.  v2[v5]:= v6 @kind object;
  #L3a603a.  v4:= `@@okhttp3.TlsVersion.c` @type ^`okhttp3.TlsVersion` @kind object;
  #L3a603e.  v2[v7]:= v4 @kind object;
  #L3a6042.  v4:= `@@okhttp3.TlsVersion.d` @type ^`okhttp3.TlsVersion` @kind object;
  #L3a6046.  v2[v9]:= v4 @kind object;
  #L3a604a.  call temp:= `f`(v1, v2) @signature `Lokhttp3/j$a;.f:([Lokhttp3/TlsVersion;)Lokhttp3/j$a;` @kind virtual;
  #L3a6050.  v1:= temp @kind object;
  #L3a6052.  call temp:= `d`(v1, v5) @signature `Lokhttp3/j$a;.d:(Z)Lokhttp3/j$a;` @kind virtual;
  #L3a6058.  v1:= temp @kind object;
  #L3a605a.  call temp:= `a`(v1) @signature `Lokhttp3/j$a;.a:()Lokhttp3/j;` @kind virtual;
  #L3a6060.  v1:= temp @kind object;
  #L3a6062.  `@@okhttp3.j.h` @type ^`okhttp3.j` := v1 @kind object;
  #L3a6066.  v1:= new `okhttp3.j$a`;
  #L3a606a.  call `<init>`(v1, v5) @signature `Lokhttp3/j$a;.<init>:(Z)V` @kind direct;
  #L3a6070.  call temp:= `c`(v1, v0) @signature `Lokhttp3/j$a;.c:([Lokhttp3/g;)Lokhttp3/j$a;` @kind virtual;
  #L3a6076.  v0:= temp @kind object;
  #L3a6078.  v1:= new `okhttp3.TlsVersion`[v5];
  #L3a607c.  v1[v3]:= v4 @kind object;
  #L3a6080.  call temp:= `f`(v0, v1) @signature `Lokhttp3/j$a;.f:([Lokhttp3/TlsVersion;)Lokhttp3/j$a;` @kind virtual;
  #L3a6086.  v0:= temp @kind object;
  #L3a6088.  call temp:= `d`(v0, v5) @signature `Lokhttp3/j$a;.d:(Z)Lokhttp3/j$a;` @kind virtual;
  #L3a608e.  v0:= temp @kind object;
  #L3a6090.  call temp:= `a`(v0) @signature `Lokhttp3/j$a;.a:()Lokhttp3/j;` @kind virtual;
  #L3a6096.  v0:= temp @kind object;
  #L3a6098.  `@@okhttp3.j.i` @type ^`okhttp3.j` := v0 @kind object;
  #L3a609c.  v0:= new `okhttp3.j$a`;
  #L3a60a0.  call `<init>`(v0, v3) @signature `Lokhttp3/j$a;.<init>:(Z)V` @kind direct;
  #L3a60a6.  call temp:= `a`(v0) @signature `Lokhttp3/j$a;.a:()Lokhttp3/j;` @kind virtual;
  #L3a60ac.  v0:= temp @kind object;
  #L3a60ae.  `@@okhttp3.j.j` @type ^`okhttp3.j` := v0 @kind object;
  #L3a60b2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.j` v1 @kind this, `okhttp3.j$a` v2 @kind object) @signature `Lokhttp3/j;.<init>:(Lokhttp3/j$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3a60c4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a60ca.  v0:= v2.`okhttp3.j$a.a` @type ^`boolean` @kind boolean;
  #L3a60ce.  v1.`okhttp3.j.a` @type ^`boolean` := v0 @kind boolean;
  #L3a60d2.  v0:= v2.`okhttp3.j$a.b` @type ^`java.lang.String`[] @kind object;
  #L3a60d6.  v1.`okhttp3.j.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L3a60da.  v0:= v2.`okhttp3.j$a.c` @type ^`java.lang.String`[] @kind object;
  #L3a60de.  v1.`okhttp3.j.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L3a60e2.  v2:= v2.`okhttp3.j$a.d` @type ^`boolean` @kind boolean;
  #L3a60e6.  v1.`okhttp3.j.b` @type ^`boolean` := v2 @kind boolean;
  #L3a60ea.  return @kind void;
}
procedure `okhttp3.j` `e`(`okhttp3.j` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/j;.e:(Ljavax/net/ssl/SSLSocket;Z)Lokhttp3/j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a5e14.  v0:= v4.`okhttp3.j.c` @type ^`java.lang.String`[] @kind object;
  #L3a5e18.  if v0 == 0 then goto L3a5e36;
  #L3a5e1c.  v0:= `@@okhttp3.g.b` @type ^`java.util.Comparator` @kind object;
  #L3a5e20.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L3a5e26.  v1:= temp @kind object;
  #L3a5e28.  v2:= v4.`okhttp3.j.c` @type ^`java.lang.String`[] @kind object;
  #L3a5e2c.  call temp:= `z`(v0, v1, v2) @signature `Lt2/c;.z:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L3a5e32.  v0:= temp @kind object;
  #L3a5e34.  goto L3a5e3e;
  #L3a5e36.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L3a5e3c.  v0:= temp @kind object;
  #L3a5e3e.  v1:= v4.`okhttp3.j.d` @type ^`java.lang.String`[] @kind object;
  #L3a5e42.  if v1 == 0 then goto L3a5e60;
  #L3a5e46.  v1:= `@@t2.c.q` @type ^`java.util.Comparator` @kind object;
  #L3a5e4a.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L3a5e50.  v2:= temp @kind object;
  #L3a5e52.  v3:= v4.`okhttp3.j.d` @type ^`java.lang.String`[] @kind object;
  #L3a5e56.  call temp:= `z`(v1, v2, v3) @signature `Lt2/c;.z:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L3a5e5c.  v1:= temp @kind object;
  #L3a5e5e.  goto L3a5e68;
  #L3a5e60.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L3a5e66.  v1:= temp @kind object;
  #L3a5e68.  call temp:= `getSupportedCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSupportedCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L3a5e6e.  v5:= temp @kind object;
  #L3a5e70.  v2:= `@@okhttp3.g.b` @type ^`java.util.Comparator` @kind object;
  #L3a5e74.  v3:= "TLS_FALLBACK_SCSV" @kind object;
  #L3a5e78.  call temp:= `w`(v2, v5, v3) @signature `Lt2/c;.w:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3a5e7e.  v2:= temp;
  #L3a5e80.  if v6 == 0 then goto L3a5e96;
  #L3a5e84.  v6:= -1I;
  #L3a5e86.  if v2 == v6 then goto L3a5e96;
  #L3a5e8a.  v5:= v5[v2] @kind object;
  #L3a5e8e.  call temp:= `i`(v0, v5) @signature `Lt2/c;.i:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L3a5e94.  v0:= temp @kind object;
  #L3a5e96.  v5:= new `okhttp3.j$a`;
  #L3a5e9a.  call `<init>`(v5, v4) @signature `Lokhttp3/j$a;.<init>:(Lokhttp3/j;)V` @kind direct;
  #L3a5ea0.  call temp:= `b`(v5, v0) @signature `Lokhttp3/j$a;.b:([Ljava/lang/String;)Lokhttp3/j$a;` @kind virtual;
  #L3a5ea6.  v5:= temp @kind object;
  #L3a5ea8.  call temp:= `e`(v5, v1) @signature `Lokhttp3/j$a;.e:([Ljava/lang/String;)Lokhttp3/j$a;` @kind virtual;
  #L3a5eae.  v5:= temp @kind object;
  #L3a5eb0.  call temp:= `a`(v5) @signature `Lokhttp3/j$a;.a:()Lokhttp3/j;` @kind virtual;
  #L3a5eb6.  v5:= temp @kind object;
  #L3a5eb8.  return v5 @kind object;
}
procedure `void` `a`(`okhttp3.j` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/j;.a:(Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag  {
    temp;
    v0;

  #L3a60fc.  call temp:= `e`(v1, v2, v3) @signature `Lokhttp3/j;.e:(Ljavax/net/ssl/SSLSocket;Z)Lokhttp3/j;` @kind direct;
  #L3a6102.  v3:= temp @kind object;
  #L3a6104.  v0:= v3.`okhttp3.j.d` @type ^`java.lang.String`[] @kind object;
  #L3a6108.  if v0 == 0 then goto L3a6112;
  #L3a610c.  call `setEnabledProtocols`(v2, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L3a6112.  v3:= v3.`okhttp3.j.c` @type ^`java.lang.String`[] @kind object;
  #L3a6116.  if v3 == 0 then goto L3a6120;
  #L3a611a.  call `setEnabledCipherSuites`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L3a6120.  return @kind void;
}
procedure `java.util.List` `b`(`okhttp3.j` v1 @kind this) @signature `Lokhttp3/j;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a5dc4.  v0:= v1.`okhttp3.j.c` @type ^`java.lang.String`[] @kind object;
  #L3a5dc8.  if v0 == 0 then goto L3a5dd6;
  #L3a5dcc.  call temp:= `b`(v0) @signature `Lokhttp3/g;.b:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L3a5dd2.  v0:= temp @kind object;
  #L3a5dd4.  goto L3a5dd8;
  #L3a5dd6.  v0:= 0I;
  #L3a5dd8.  return v0 @kind object;
}
procedure `boolean` `c`(`okhttp3.j` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/j;.c:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a5c34.  v0:= v4.`okhttp3.j.a` @type ^`boolean` @kind boolean;
  #L3a5c38.  v1:= 0I;
  #L3a5c3a.  if v0 != 0 then goto L3a5c40;
  #L3a5c3e.  return v1;
  #L3a5c40.  v0:= v4.`okhttp3.j.d` @type ^`java.lang.String`[] @kind object;
  #L3a5c44.  if v0 == 0 then goto L3a5c62;
  #L3a5c48.  v2:= `@@t2.c.q` @type ^`java.util.Comparator` @kind object;
  #L3a5c4c.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L3a5c52.  v3:= temp @kind object;
  #L3a5c54.  call temp:= `B`(v2, v0, v3) @signature `Lt2/c;.B:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L3a5c5a.  v0:= temp;
  #L3a5c5c.  if v0 != 0 then goto L3a5c62;
  #L3a5c60.  return v1;
  #L3a5c62.  v0:= v4.`okhttp3.j.c` @type ^`java.lang.String`[] @kind object;
  #L3a5c66.  if v0 == 0 then goto L3a5c84;
  #L3a5c6a.  v2:= `@@okhttp3.g.b` @type ^`java.util.Comparator` @kind object;
  #L3a5c6e.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L3a5c74.  v5:= temp @kind object;
  #L3a5c76.  call temp:= `B`(v2, v0, v5) @signature `Lt2/c;.B:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L3a5c7c.  v5:= temp;
  #L3a5c7e.  if v5 != 0 then goto L3a5c84;
  #L3a5c82.  return v1;
  #L3a5c84.  v5:= 1I;
  #L3a5c86.  return v5;
}
procedure `boolean` `d`(`okhttp3.j` v1 @kind this) @signature `Lokhttp3/j;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a5c98.  v0:= v1.`okhttp3.j.a` @type ^`boolean` @kind boolean;
  #L3a5c9c.  return v0;
}
procedure `boolean` `equals`(`okhttp3.j` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokhttp3/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a5bbc.  v0:= instanceof @variable v5 @type ^`okhttp3.j` @kind boolean;
  #L3a5bc0.  v1:= 0I;
  #L3a5bc2.  if v0 != 0 then goto L3a5bc8;
  #L3a5bc6.  return v1;
  #L3a5bc8.  v0:= 1I;
  #L3a5bca.  if v5 != v4 then goto L3a5bd0;
  #L3a5bce.  return v0;
  #L3a5bd0.  v5:= (`okhttp3.j`) v5 @kind object;
  #L3a5bd4.  v2:= v4.`okhttp3.j.a` @type ^`boolean` @kind boolean;
  #L3a5bd8.  v3:= v5.`okhttp3.j.a` @type ^`boolean` @kind boolean;
  #L3a5bdc.  if v2 == v3 then goto L3a5be2;
  #L3a5be0.  return v1;
  #L3a5be2.  if v2 == 0 then goto L3a5c20;
  #L3a5be6.  v2:= v4.`okhttp3.j.c` @type ^`java.lang.String`[] @kind object;
  #L3a5bea.  v3:= v5.`okhttp3.j.c` @type ^`java.lang.String`[] @kind object;
  #L3a5bee.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L3a5bf4.  v2:= temp;
  #L3a5bf6.  if v2 != 0 then goto L3a5bfc;
  #L3a5bfa.  return v1;
  #L3a5bfc.  v2:= v4.`okhttp3.j.d` @type ^`java.lang.String`[] @kind object;
  #L3a5c00.  v3:= v5.`okhttp3.j.d` @type ^`java.lang.String`[] @kind object;
  #L3a5c04.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L3a5c0a.  v2:= temp;
  #L3a5c0c.  if v2 != 0 then goto L3a5c12;
  #L3a5c10.  return v1;
  #L3a5c12.  v2:= v4.`okhttp3.j.b` @type ^`boolean` @kind boolean;
  #L3a5c16.  v5:= v5.`okhttp3.j.b` @type ^`boolean` @kind boolean;
  #L3a5c1a.  if v2 == v5 then goto L3a5c20;
  #L3a5c1e.  return v1;
  #L3a5c20.  return v0;
}
procedure `boolean` `f`(`okhttp3.j` v1 @kind this) @signature `Lokhttp3/j;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a5cb0.  v0:= v1.`okhttp3.j.b` @type ^`boolean` @kind boolean;
  #L3a5cb4.  return v0;
}
procedure `java.util.List` `g`(`okhttp3.j` v1 @kind this) @signature `Lokhttp3/j;.g:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a5dec.  v0:= v1.`okhttp3.j.d` @type ^`java.lang.String`[] @kind object;
  #L3a5df0.  if v0 == 0 then goto L3a5dfe;
  #L3a5df4.  call temp:= `b`(v0) @signature `Lokhttp3/TlsVersion;.b:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L3a5dfa.  v0:= temp @kind object;
  #L3a5dfc.  goto L3a5e00;
  #L3a5dfe.  v0:= 0I;
  #L3a5e00.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.j` v2 @kind this) @signature `Lokhttp3/j;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a5cc8.  v0:= v2.`okhttp3.j.a` @type ^`boolean` @kind boolean;
  #L3a5ccc.  if v0 == 0 then goto L3a5d04;
  #L3a5cd0.  v0:= 527I;
  #L3a5cd4.  v1:= v2.`okhttp3.j.c` @type ^`java.lang.String`[] @kind object;
  #L3a5cd8.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L3a5cde.  v1:= temp;
  #L3a5ce0.  v0:= v0 + v1 @kind int;
  #L3a5ce2.  v0:= v0 * 31;
  #L3a5ce6.  v1:= v2.`okhttp3.j.d` @type ^`java.lang.String`[] @kind object;
  #L3a5cea.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L3a5cf0.  v1:= temp;
  #L3a5cf2.  v0:= v0 + v1 @kind int;
  #L3a5cf4.  v0:= v0 * 31;
  #L3a5cf8.  v1:= v2.`okhttp3.j.b` @type ^`boolean` @kind boolean;
  #L3a5cfc.  v1:= v1 ^~ 1;
  #L3a5d00.  v0:= v0 + v1 @kind int;
  #L3a5d02.  goto L3a5d08;
  #L3a5d04.  v0:= 17I;
  #L3a5d08.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.j` v4 @kind this) @signature `Lokhttp3/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a5d1c.  v0:= v4.`okhttp3.j.a` @type ^`boolean` @kind boolean;
  #L3a5d20.  if v0 != 0 then goto L3a5d2a;
  #L3a5d24.  v0:= "ConnectionSpec()" @kind object;
  #L3a5d28.  return v0 @kind object;
  #L3a5d2a.  v0:= v4.`okhttp3.j.c` @type ^`java.lang.String`[] @kind object;
  #L3a5d2e.  v1:= "[all enabled]" @kind object;
  #L3a5d32.  if v0 == 0 then goto L3a5d48;
  #L3a5d36.  call temp:= `b`(v4) @signature `Lokhttp3/j;.b:()Ljava/util/List;` @kind virtual;
  #L3a5d3c.  v0:= temp @kind object;
  #L3a5d3e.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a5d44.  v0:= temp @kind object;
  #L3a5d46.  goto L3a5d4a;
  #L3a5d48.  v0:= v1 @kind object;
  #L3a5d4a.  v2:= v4.`okhttp3.j.d` @type ^`java.lang.String`[] @kind object;
  #L3a5d4e.  if v2 == 0 then goto L3a5d62;
  #L3a5d52.  call temp:= `g`(v4) @signature `Lokhttp3/j;.g:()Ljava/util/List;` @kind virtual;
  #L3a5d58.  v1:= temp @kind object;
  #L3a5d5a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a5d60.  v1:= temp @kind object;
  #L3a5d62.  v2:= new `java.lang.StringBuilder`;
  #L3a5d66.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a5d6c.  v3:= "ConnectionSpec(cipherSuites=" @kind object;
  #L3a5d70.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a5d76.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a5d7c.  v0:= ", tlsVersions=" @kind object;
  #L3a5d80.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a5d86.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a5d8c.  v0:= ", supportsTlsExtensions=" @kind object;
  #L3a5d90.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a5d96.  v0:= v4.`okhttp3.j.b` @type ^`boolean` @kind boolean;
  #L3a5d9a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a5da0.  v0:= ")" @kind object;
  #L3a5da4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a5daa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a5db0.  v0:= temp @kind object;
  #L3a5db2.  return v0 @kind object;
}
