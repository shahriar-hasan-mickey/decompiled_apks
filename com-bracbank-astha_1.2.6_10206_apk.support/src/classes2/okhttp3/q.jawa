record `okhttp3.q` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `okhttp3.q.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.q` v1 @kind this, `okhttp3.q$a` v2 @kind object) @signature `Lokhttp3/q;.<init>:(Lokhttp3/q$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3a7838.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a783e.  v2:= v2.`okhttp3.q$a.a` @type ^`java.util.List` @kind object;
  #L3a7842.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a7848.  v0:= temp;
  #L3a784a.  v0:= new `java.lang.String`[v0];
  #L3a784e.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3a7854.  v2:= temp @kind object;
  #L3a7856.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L3a785a.  v1.`okhttp3.q.a` @type ^`java.lang.String`[] := v2 @kind object;
  #L3a785e.  return @kind void;
}
procedure `void` `a`(`java.lang.String` v5 @kind object) @signature `Lokhttp3/q;.a:(Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a7870.  v0:= "name == null" @kind object;
  #L3a7874.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a787a.  call temp:= `isEmpty`(v5) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3a7880.  v0:= temp;
  #L3a7882.  if v0 != 0 then goto L3a78f4;
  #L3a7886.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a788c.  v0:= temp;
  #L3a788e.  v1:= 0I;
  #L3a7890.  v2:= 0I;
  #L3a7892.  if v2 >= v0 then goto L3a78f2;
  #L3a7896.  call temp:= `charAt`(v5, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a789c.  v3:= temp;
  #L3a789e.  v4:= 32I;
  #L3a78a2.  if v3 <= v4 then goto L3a78b4;
  #L3a78a6.  v4:= 127I;
  #L3a78aa.  if v3 >= v4 then goto L3a78b4;
  #L3a78ae.  v2:= v2 + 1;
  #L3a78b2.  goto L3a7892;
  #L3a78b4.  v0:= new `java.lang.IllegalArgumentException`;
  #L3a78b8.  v4:= 3I;
  #L3a78ba.  v4:= new `java.lang.Object`[v4];
  #L3a78be.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a78c4.  v3:= temp @kind object;
  #L3a78c6.  v4[v1]:= v3 @kind object;
  #L3a78ca.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a78d0.  v1:= temp @kind object;
  #L3a78d2.  v2:= 1I;
  #L3a78d4.  v4[v2]:= v1 @kind object;
  #L3a78d8.  v1:= 2I;
  #L3a78da.  v4[v1]:= v5 @kind object;
  #L3a78de.  v5:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L3a78e2.  call temp:= `r`(v5, v4) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3a78e8.  v5:= temp @kind object;
  #L3a78ea.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a78f0.  throw v0;
  #L3a78f2.  return @kind void;
  #L3a78f4.  v5:= new `java.lang.IllegalArgumentException`;
  #L3a78f8.  v0:= "name is empty" @kind object;
  #L3a78fc.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7902.  throw v5;
}
procedure `void` `b`(`java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lokhttp3/q;.b:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a7914.  if v5 == 0 then goto L3a7994;
  #L3a7918.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a791e.  v0:= temp;
  #L3a7920.  v1:= 0I;
  #L3a7922.  v2:= 0I;
  #L3a7924.  if v2 >= v0 then goto L3a7992;
  #L3a7928.  call temp:= `charAt`(v5, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a792e.  v3:= temp;
  #L3a7930.  v4:= 31I;
  #L3a7934.  if v3 > v4 then goto L3a7940;
  #L3a7938.  v4:= 9I;
  #L3a793c.  if v3 != v4 then goto L3a794e;
  #L3a7940.  v4:= 127I;
  #L3a7944.  if v3 >= v4 then goto L3a794e;
  #L3a7948.  v2:= v2 + 1;
  #L3a794c.  goto L3a7924;
  #L3a794e.  v0:= new `java.lang.IllegalArgumentException`;
  #L3a7952.  v4:= 4I;
  #L3a7954.  v4:= new `java.lang.Object`[v4];
  #L3a7958.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a795e.  v3:= temp @kind object;
  #L3a7960.  v4[v1]:= v3 @kind object;
  #L3a7964.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a796a.  v1:= temp @kind object;
  #L3a796c.  v2:= 1I;
  #L3a796e.  v4[v2]:= v1 @kind object;
  #L3a7972.  v1:= 2I;
  #L3a7974.  v4[v1]:= v6 @kind object;
  #L3a7978.  v6:= 3I;
  #L3a797a.  v4[v6]:= v5 @kind object;
  #L3a797e.  v5:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L3a7982.  call temp:= `r`(v5, v4) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3a7988.  v5:= temp @kind object;
  #L3a798a.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7990.  throw v0;
  #L3a7992.  return @kind void;
  #L3a7994.  v5:= new `java.lang.NullPointerException`;
  #L3a7998.  v0:= new `java.lang.StringBuilder`;
  #L3a799c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a79a2.  v1:= "value for name " @kind object;
  #L3a79a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a79ac.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a79b2.  v6:= " == null" @kind object;
  #L3a79b6.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a79bc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a79c2.  v6:= temp @kind object;
  #L3a79c4.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a79ca.  throw v5;
}
procedure `java.lang.String` `d`(`java.lang.String`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/q;.d:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3a76b0.  v0:= length @variable v2;
  #L3a76b2.  v0:= v0 + -2;
  #L3a76b6.  if v0 < 0 then goto L3a76da;
  #L3a76ba.  v1:= v2[v0] @kind object;
  #L3a76be.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a76c4.  v1:= temp;
  #L3a76c6.  if v1 == 0 then goto L3a76d4;
  #L3a76ca.  v0:= v0 + 1;
  #L3a76ce.  v2:= v2[v0] @kind object;
  #L3a76d2.  return v2 @kind object;
  #L3a76d4.  v0:= v0 + -2;
  #L3a76d8.  goto L3a76b6;
  #L3a76da.  v2:= 0I;
  #L3a76dc.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`okhttp3.q` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/q;.c:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7690.  v0:= v1.`okhttp3.q.a` @type ^`java.lang.String`[] @kind object;
  #L3a7694.  call temp:= `d`(v0, v2) @signature `Lokhttp3/q;.d:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3a769a.  v2:= temp @kind object;
  #L3a769c.  return v2 @kind object;
}
procedure `java.lang.String` `e`(`okhttp3.q` v1 @kind this, `int` v2 ) @signature `Lokhttp3/q;.e:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a76f0.  v0:= v1.`okhttp3.q.a` @type ^`java.lang.String`[] @kind object;
  #L3a76f4.  v2:= v2 * 2;
  #L3a76f8.  v2:= v0[v2] @kind object;
  #L3a76fc.  return v2 @kind object;
}
procedure `boolean` `equals`(`okhttp3.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a761c.  v0:= instanceof @variable v2 @type ^`okhttp3.q` @kind boolean;
  #L3a7620.  if v0 == 0 then goto L3a7640;
  #L3a7624.  v2:= (`okhttp3.q`) v2 @kind object;
  #L3a7628.  v2:= v2.`okhttp3.q.a` @type ^`java.lang.String`[] @kind object;
  #L3a762c.  v0:= v1.`okhttp3.q.a` @type ^`java.lang.String`[] @kind object;
  #L3a7630.  call temp:= `equals`(v2, v0) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L3a7636.  v2:= temp;
  #L3a7638.  if v2 == 0 then goto L3a7640;
  #L3a763c.  v2:= 1I;
  #L3a763e.  goto L3a7642;
  #L3a7640.  v2:= 0I;
  #L3a7642.  return v2;
}
procedure `okhttp3.q$a` `f`(`okhttp3.q` v3 @kind this) @signature `Lokhttp3/q;.f:()Lokhttp3/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a780c.  v0:= new `okhttp3.q$a`;
  #L3a7810.  call `<init>`(v0) @signature `Lokhttp3/q$a;.<init>:()V` @kind direct;
  #L3a7816.  v1:= v0.`okhttp3.q$a.a` @type ^`java.util.List` @kind object;
  #L3a781a.  v2:= v3.`okhttp3.q.a` @type ^`java.lang.String`[] @kind object;
  #L3a781e.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L3a7824.  return v0 @kind object;
}
procedure `int` `g`(`okhttp3.q` v1 @kind this) @signature `Lokhttp3/q;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7674.  v0:= v1.`okhttp3.q.a` @type ^`java.lang.String`[] @kind object;
  #L3a7678.  v0:= length @variable v0;
  #L3a767a.  v0:= v0 / 2;
  #L3a767e.  return v0;
}
procedure `java.lang.String` `h`(`okhttp3.q` v1 @kind this, `int` v2 ) @signature `Lokhttp3/q;.h:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7778.  v0:= v1.`okhttp3.q.a` @type ^`java.lang.String`[] @kind object;
  #L3a777c.  v2:= v2 * 2;
  #L3a7780.  v2:= v2 + 1;
  #L3a7784.  v2:= v0[v2] @kind object;
  #L3a7788.  return v2 @kind object;
}
procedure `int` `hashCode`(`okhttp3.q` v1 @kind this) @signature `Lokhttp3/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7654.  v0:= v1.`okhttp3.q.a` @type ^`java.lang.String`[] @kind object;
  #L3a7658.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L3a765e.  v0:= temp;
  #L3a7660.  return v0;
}
procedure `java.util.List` `i`(`okhttp3.q` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/q;.i:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a779c.  call temp:= `g`(v4) @signature `Lokhttp3/q;.g:()I` @kind virtual;
  #L3a77a2.  v0:= temp;
  #L3a77a4.  v1:= 0I;
  #L3a77a6.  v2:= 0I;
  #L3a77a8.  if v2 >= v0 then goto L3a77e4;
  #L3a77ac.  call temp:= `e`(v4, v2) @signature `Lokhttp3/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L3a77b2.  v3:= temp @kind object;
  #L3a77b4.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a77ba.  v3:= temp;
  #L3a77bc.  if v3 == 0 then goto L3a77de;
  #L3a77c0.  if v1 != 0 then goto L3a77d0;
  #L3a77c4.  v1:= new `java.util.ArrayList`;
  #L3a77c8.  v3:= 2I;
  #L3a77ca.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3a77d0.  call temp:= `h`(v4, v2) @signature `Lokhttp3/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L3a77d6.  v3:= temp @kind object;
  #L3a77d8.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a77de.  v2:= v2 + 1;
  #L3a77e2.  goto L3a77a8;
  #L3a77e4.  if v1 == 0 then goto L3a77f2;
  #L3a77e8.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3a77ee.  v5:= temp @kind object;
  #L3a77f0.  goto L3a77fa;
  #L3a77f2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3a77f8.  v5:= temp @kind object;
  #L3a77fa.  return v5 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.q` v4 @kind this) @signature `Lokhttp3/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a7710.  v0:= new `java.lang.StringBuilder`;
  #L3a7714.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a771a.  call temp:= `g`(v4) @signature `Lokhttp3/q;.g:()I` @kind virtual;
  #L3a7720.  v1:= temp;
  #L3a7722.  v2:= 0I;
  #L3a7724.  if v2 >= v1 then goto L3a775e;
  #L3a7728.  call temp:= `e`(v4, v2) @signature `Lokhttp3/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L3a772e.  v3:= temp @kind object;
  #L3a7730.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7736.  v3:= ": " @kind object;
  #L3a773a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7740.  call temp:= `h`(v4, v2) @signature `Lokhttp3/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L3a7746.  v3:= temp @kind object;
  #L3a7748.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a774e.  v3:= "\n" @kind object;
  #L3a7752.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7758.  v2:= v2 + 1;
  #L3a775c.  goto L3a7724;
  #L3a775e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a7764.  v0:= temp @kind object;
  #L3a7766.  return v0 @kind object;
}
