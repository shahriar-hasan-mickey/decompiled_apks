record `okhttp3.z` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
}
procedure `void` `<init>`(`okhttp3.z` v0 @kind this) @signature `Lokhttp3/z;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ab42c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ab432.  return @kind void;
}
procedure `okhttp3.z` `K`(`okhttp3.t` v1 @kind object, `long` v2 , `okio.e` v4 @kind object) @signature `Lokhttp3/z;.K:(Lokhttp3/t;JLokio/e;)Lokhttp3/z;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ab404.  v0:= "source == null" @kind object;
  #L3ab408.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ab40e.  v0:= new `okhttp3.z$a`;
  #L3ab412.  call `<init>`(v0, v1, v2, v4) @signature `Lokhttp3/z$a;.<init>:(Lokhttp3/t;JLokio/e;)V` @kind direct;
  #L3ab418.  return v0 @kind object;
}
procedure `okhttp3.z` `R`(`okhttp3.t` v3 @kind object, `byte`[] v4 @kind object) @signature `Lokhttp3/z;.R:(Lokhttp3/t;[B)Lokhttp3/z;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab3d4.  v0:= new `okio.c`;
  #L3ab3d8.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3ab3de.  call temp:= `l0`(v0, v4) @signature `Lokio/c;.l0:([B)Lokio/c;` @kind virtual;
  #L3ab3e4.  v0:= temp @kind object;
  #L3ab3e6.  v4:= length @variable v4;
  #L3ab3e8.  v1:= (`long`) v4 @kind i2l;
  #L3ab3ea.  call temp:= `K`(v3, v1, v0) @signature `Lokhttp3/z;.K:(Lokhttp3/t;JLokio/e;)Lokhttp3/z;` @kind static;
  #L3ab3f0.  v3:= temp @kind object;
  #L3ab3f2.  return v3 @kind object;
}
procedure `java.nio.charset.Charset` `g`(`okhttp3.z` v2 @kind this) @signature `Lokhttp3/z;.g:()Ljava/nio/charset/Charset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ab3a4.  call temp:= `s`(v2) @signature `Lokhttp3/z;.s:()Lokhttp3/t;` @kind virtual;
  #L3ab3aa.  v0:= temp @kind object;
  #L3ab3ac.  if v0 == 0 then goto L3ab3be;
  #L3ab3b0.  v1:= `@@t2.c.j` @type ^`java.nio.charset.Charset` @kind object;
  #L3ab3b4.  call temp:= `b`(v0, v1) @signature `Lokhttp3/t;.b:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L3ab3ba.  v0:= temp @kind object;
  #L3ab3bc.  goto L3ab3c2;
  #L3ab3be.  v0:= `@@t2.c.j` @type ^`java.nio.charset.Charset` @kind object;
  #L3ab3c2.  return v0 @kind object;
}
procedure `okio.e` `T`() @signature `Lokhttp3/z;.T:()Lokio/e;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `U`(`okhttp3.z` v2 @kind this) @signature `Lokhttp3/z;.U:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ab354.  call temp:= `T`(v2) @signature `Lokhttp3/z;.T:()Lokio/e;` @kind virtual;
  #L3ab35a.  v0:= temp @kind object;
  #L3ab35c.  call temp:= `g`(v2) @signature `Lokhttp3/z;.g:()Ljava/nio/charset/Charset;` @kind direct;
  #L3ab362.  v1:= temp @kind object;
  #L3ab364.  call temp:= `c`(v0, v1) @signature `Lt2/c;.c:(Lokio/e;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind static;
  #L3ab36a.  v1:= temp @kind object;
  #L3ab36c.  call temp:= `w`(v0, v1) @signature `Lokio/e;.w:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind interface;
  #L3ab372.  v1:= temp @kind object;
  #L3ab374.  call `g`(v0) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @kind static;
  #L3ab37a.  return v1 @kind object;
  #L3ab37c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ab37e.  call `g`(v0) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @kind static;
  #L3ab384.  throw v1;
  catch `java.lang.Throwable` @[L3ab35c..L3ab374] goto L3ab37c;
}
procedure `void` `close`(`okhttp3.z` v1 @kind this) @signature `Lokhttp3/z;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab444.  call temp:= `T`(v1) @signature `Lokhttp3/z;.T:()Lokio/e;` @kind virtual;
  #L3ab44a.  v0:= temp @kind object;
  #L3ab44c.  call `g`(v0) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @kind static;
  #L3ab452.  return @kind void;
}
procedure `long` `h`() @signature `Lokhttp3/z;.h:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.t` `s`() @signature `Lokhttp3/z;.s:()Lokhttp3/t;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
