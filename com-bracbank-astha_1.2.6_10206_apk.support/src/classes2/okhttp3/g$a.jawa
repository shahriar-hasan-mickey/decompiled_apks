record `okhttp3.g$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`okhttp3.g$a` v0 @kind this) @signature `Lokhttp3/g$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a49e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a49e6.  return @kind void;
}
procedure `int` `a`(`okhttp3.g$a` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/g$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a4968.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a496e.  v0:= temp;
  #L3a4970.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a4976.  v1:= temp;
  #L3a4978.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a497e.  v0:= temp;
  #L3a4980.  v1:= 4I;
  #L3a4982.  v2:= -1I;
  #L3a4984.  v3:= 1I;
  #L3a4986.  if v1 >= v0 then goto L3a49ae;
  #L3a498a.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a4990.  v4:= temp;
  #L3a4992.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a4998.  v5:= temp;
  #L3a499a.  if v4 == v5 then goto L3a49a8;
  #L3a499e.  if v4 >= v5 then goto L3a49a4;
  #L3a49a2.  goto L3a49a6;
  #L3a49a4.  v2:= 1I;
  #L3a49a6.  return v2;
  #L3a49a8.  v1:= v1 + 1;
  #L3a49ac.  goto L3a4982;
  #L3a49ae.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a49b4.  v7:= temp;
  #L3a49b6.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a49bc.  v8:= temp;
  #L3a49be.  if v7 == v8 then goto L3a49cc;
  #L3a49c2.  if v7 >= v8 then goto L3a49c8;
  #L3a49c6.  goto L3a49ca;
  #L3a49c8.  v2:= 1I;
  #L3a49ca.  return v2;
  #L3a49cc.  v7:= 0I;
  #L3a49ce.  return v7;
}
procedure `int` `compare`(`okhttp3.g$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/g$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a4944.  v1:= (`java.lang.String`) v1 @kind object;
  #L3a4948.  v2:= (`java.lang.String`) v2 @kind object;
  #L3a494c.  call temp:= `a`(v0, v1, v2) @signature `Lokhttp3/g$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L3a4952.  v1:= temp;
  #L3a4954.  return v1;
}
