record `okhttp3.y$a` @kind class @AccessFlag PUBLIC {
  `okhttp3.w` `okhttp3.y$a.a` @AccessFlag ;
  `okhttp3.Protocol` `okhttp3.y$a.b` @AccessFlag ;
  `int` `okhttp3.y$a.c` @AccessFlag ;
  `java.lang.String` `okhttp3.y$a.d` @AccessFlag ;
  `okhttp3.p` `okhttp3.y$a.e` @AccessFlag ;
  `okhttp3.q$a` `okhttp3.y$a.f` @AccessFlag ;
  `okhttp3.z` `okhttp3.y$a.g` @AccessFlag ;
  `okhttp3.y` `okhttp3.y$a.h` @AccessFlag ;
  `okhttp3.y` `okhttp3.y$a.i` @AccessFlag ;
  `okhttp3.y` `okhttp3.y$a.j` @AccessFlag ;
  `long` `okhttp3.y$a.k` @AccessFlag ;
  `long` `okhttp3.y$a.l` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.y$a` v1 @kind this) @signature `Lokhttp3/y$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ab11c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ab122.  v0:= -1I;
  #L3ab124.  v1.`okhttp3.y$a.c` @type ^`int` := v0;
  #L3ab128.  v0:= new `okhttp3.q$a`;
  #L3ab12c.  call `<init>`(v0) @signature `Lokhttp3/q$a;.<init>:()V` @kind direct;
  #L3ab132.  v1.`okhttp3.y$a.f` @type ^`okhttp3.q$a` := v0 @kind object;
  #L3ab136.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.y$a` v2 @kind this, `okhttp3.y` v3 @kind object) @signature `Lokhttp3/y$a;.<init>:(Lokhttp3/y;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ab148.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ab14e.  v0:= -1I;
  #L3ab150.  v2.`okhttp3.y$a.c` @type ^`int` := v0;
  #L3ab154.  v0:= v3.`okhttp3.y.a` @type ^`okhttp3.w` @kind object;
  #L3ab158.  v2.`okhttp3.y$a.a` @type ^`okhttp3.w` := v0 @kind object;
  #L3ab15c.  v0:= v3.`okhttp3.y.b` @type ^`okhttp3.Protocol` @kind object;
  #L3ab160.  v2.`okhttp3.y$a.b` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L3ab164.  v0:= v3.`okhttp3.y.c` @type ^`int`;
  #L3ab168.  v2.`okhttp3.y$a.c` @type ^`int` := v0;
  #L3ab16c.  v0:= v3.`okhttp3.y.d` @type ^`java.lang.String` @kind object;
  #L3ab170.  v2.`okhttp3.y$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L3ab174.  v0:= v3.`okhttp3.y.e` @type ^`okhttp3.p` @kind object;
  #L3ab178.  v2.`okhttp3.y$a.e` @type ^`okhttp3.p` := v0 @kind object;
  #L3ab17c.  v0:= v3.`okhttp3.y.f` @type ^`okhttp3.q` @kind object;
  #L3ab180.  call temp:= `f`(v0) @signature `Lokhttp3/q;.f:()Lokhttp3/q$a;` @kind virtual;
  #L3ab186.  v0:= temp @kind object;
  #L3ab188.  v2.`okhttp3.y$a.f` @type ^`okhttp3.q$a` := v0 @kind object;
  #L3ab18c.  v0:= v3.`okhttp3.y.g` @type ^`okhttp3.z` @kind object;
  #L3ab190.  v2.`okhttp3.y$a.g` @type ^`okhttp3.z` := v0 @kind object;
  #L3ab194.  v0:= v3.`okhttp3.y.h` @type ^`okhttp3.y` @kind object;
  #L3ab198.  v2.`okhttp3.y$a.h` @type ^`okhttp3.y` := v0 @kind object;
  #L3ab19c.  v0:= v3.`okhttp3.y.i` @type ^`okhttp3.y` @kind object;
  #L3ab1a0.  v2.`okhttp3.y$a.i` @type ^`okhttp3.y` := v0 @kind object;
  #L3ab1a4.  v0:= v3.`okhttp3.y.j` @type ^`okhttp3.y` @kind object;
  #L3ab1a8.  v2.`okhttp3.y$a.j` @type ^`okhttp3.y` := v0 @kind object;
  #L3ab1ac.  v0:= v3.`okhttp3.y.k` @type ^`long` @kind wide;
  #L3ab1b0.  v2.`okhttp3.y$a.k` @type ^`long` := v0 @kind wide;
  #L3ab1b4.  v0:= v3.`okhttp3.y.l` @type ^`long` @kind wide;
  #L3ab1b8.  v2.`okhttp3.y$a.l` @type ^`long` := v0 @kind wide;
  #L3ab1bc.  return @kind void;
}
procedure `void` `e`(`okhttp3.y$a` v1 @kind this, `okhttp3.y` v2 @kind object) @signature `Lokhttp3/y$a;.e:(Lokhttp3/y;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ab1d0.  v2:= v2.`okhttp3.y.g` @type ^`okhttp3.z` @kind object;
  #L3ab1d4.  if v2 != 0 then goto L3ab1da;
  #L3ab1d8.  return @kind void;
  #L3ab1da.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ab1de.  v0:= "priorResponse.body != null" @kind object;
  #L3ab1e2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab1e8.  throw v2;
}
procedure `void` `f`(`okhttp3.y$a` v1 @kind this, `java.lang.String` v2 @kind object, `okhttp3.y` v3 @kind object) @signature `Lokhttp3/y$a;.f:(Ljava/lang/String;Lokhttp3/y;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ab1fc.  v0:= v3.`okhttp3.y.g` @type ^`okhttp3.z` @kind object;
  #L3ab200.  if v0 != 0 then goto L3ab2a8;
  #L3ab204.  v0:= v3.`okhttp3.y.h` @type ^`okhttp3.y` @kind object;
  #L3ab208.  if v0 != 0 then goto L3ab27a;
  #L3ab20c.  v0:= v3.`okhttp3.y.i` @type ^`okhttp3.y` @kind object;
  #L3ab210.  if v0 != 0 then goto L3ab24c;
  #L3ab214.  v3:= v3.`okhttp3.y.j` @type ^`okhttp3.y` @kind object;
  #L3ab218.  if v3 != 0 then goto L3ab21e;
  #L3ab21c.  return @kind void;
  #L3ab21e.  v3:= new `java.lang.IllegalArgumentException`;
  #L3ab222.  v0:= new `java.lang.StringBuilder`;
  #L3ab226.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ab22c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab232.  v2:= ".priorResponse != null" @kind object;
  #L3ab236.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab23c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ab242.  v2:= temp @kind object;
  #L3ab244.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab24a.  throw v3;
  #L3ab24c.  v3:= new `java.lang.IllegalArgumentException`;
  #L3ab250.  v0:= new `java.lang.StringBuilder`;
  #L3ab254.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ab25a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab260.  v2:= ".cacheResponse != null" @kind object;
  #L3ab264.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab26a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ab270.  v2:= temp @kind object;
  #L3ab272.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab278.  throw v3;
  #L3ab27a.  v3:= new `java.lang.IllegalArgumentException`;
  #L3ab27e.  v0:= new `java.lang.StringBuilder`;
  #L3ab282.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ab288.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab28e.  v2:= ".networkResponse != null" @kind object;
  #L3ab292.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab298.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ab29e.  v2:= temp @kind object;
  #L3ab2a0.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab2a6.  throw v3;
  #L3ab2a8.  v3:= new `java.lang.IllegalArgumentException`;
  #L3ab2ac.  v0:= new `java.lang.StringBuilder`;
  #L3ab2b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ab2b6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab2bc.  v2:= ".body != null" @kind object;
  #L3ab2c0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab2c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ab2cc.  v2:= temp @kind object;
  #L3ab2ce.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab2d4.  throw v3;
}
procedure `okhttp3.y$a` `a`(`okhttp3.y$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/y$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aaf9c.  v0:= v1.`okhttp3.y$a.f` @type ^`okhttp3.q$a` @kind object;
  #L3aafa0.  call temp:= `a`(v0, v2, v3) @signature `Lokhttp3/q$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/q$a;` @kind virtual;
  #L3aafa6.  return v1 @kind object;
}
procedure `okhttp3.y$a` `b`(`okhttp3.y$a` v0 @kind this, `okhttp3.z` v1 @kind object) @signature `Lokhttp3/y$a;.b:(Lokhttp3/z;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3aafb8.  v0.`okhttp3.y$a.g` @type ^`okhttp3.z` := v1 @kind object;
  #L3aafbc.  return v0 @kind object;
}
procedure `okhttp3.y` `c`(`okhttp3.y$a` v3 @kind this) @signature `Lokhttp3/y$a;.c:()Lokhttp3/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aaefc.  v0:= v3.`okhttp3.y$a.a` @type ^`okhttp3.w` @kind object;
  #L3aaf00.  if v0 == 0 then goto L3aaf7a;
  #L3aaf04.  v0:= v3.`okhttp3.y$a.b` @type ^`okhttp3.Protocol` @kind object;
  #L3aaf08.  if v0 == 0 then goto L3aaf6a;
  #L3aaf0c.  v0:= v3.`okhttp3.y$a.c` @type ^`int`;
  #L3aaf10.  if v0 < 0 then goto L3aaf38;
  #L3aaf14.  v0:= v3.`okhttp3.y$a.d` @type ^`java.lang.String` @kind object;
  #L3aaf18.  if v0 == 0 then goto L3aaf28;
  #L3aaf1c.  v0:= new `okhttp3.y`;
  #L3aaf20.  call `<init>`(v0, v3) @signature `Lokhttp3/y;.<init>:(Lokhttp3/y$a;)V` @kind direct;
  #L3aaf26.  return v0 @kind object;
  #L3aaf28.  v0:= new `java.lang.IllegalStateException`;
  #L3aaf2c.  v1:= "message == null" @kind object;
  #L3aaf30.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aaf36.  throw v0;
  #L3aaf38.  v0:= new `java.lang.IllegalStateException`;
  #L3aaf3c.  v1:= new `java.lang.StringBuilder`;
  #L3aaf40.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aaf46.  v2:= "code < 0: " @kind object;
  #L3aaf4a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaf50.  v2:= v3.`okhttp3.y$a.c` @type ^`int`;
  #L3aaf54.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaf5a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aaf60.  v1:= temp @kind object;
  #L3aaf62.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aaf68.  throw v0;
  #L3aaf6a.  v0:= new `java.lang.IllegalStateException`;
  #L3aaf6e.  v1:= "protocol == null" @kind object;
  #L3aaf72.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aaf78.  throw v0;
  #L3aaf7a.  v0:= new `java.lang.IllegalStateException`;
  #L3aaf7e.  v1:= "request == null" @kind object;
  #L3aaf82.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aaf88.  throw v0;
}
procedure `okhttp3.y$a` `d`(`okhttp3.y$a` v1 @kind this, `okhttp3.y` v2 @kind object) @signature `Lokhttp3/y$a;.d:(Lokhttp3/y;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aafd0.  if v2 == 0 then goto L3aafde;
  #L3aafd4.  v0:= "cacheResponse" @kind object;
  #L3aafd8.  call `f`(v1, v0, v2) @signature `Lokhttp3/y$a;.f:(Ljava/lang/String;Lokhttp3/y;)V` @kind direct;
  #L3aafde.  v1.`okhttp3.y$a.i` @type ^`okhttp3.y` := v2 @kind object;
  #L3aafe2.  return v1 @kind object;
}
procedure `okhttp3.y$a` `g`(`okhttp3.y$a` v0 @kind this, `int` v1 ) @signature `Lokhttp3/y$a;.g:(I)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3aaff4.  v0.`okhttp3.y$a.c` @type ^`int` := v1;
  #L3aaff8.  return v0 @kind object;
}
procedure `okhttp3.y$a` `h`(`okhttp3.y$a` v0 @kind this, `okhttp3.p` v1 @kind object) @signature `Lokhttp3/y$a;.h:(Lokhttp3/p;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3ab00c.  v0.`okhttp3.y$a.e` @type ^`okhttp3.p` := v1 @kind object;
  #L3ab010.  return v0 @kind object;
}
procedure `okhttp3.y$a` `i`(`okhttp3.y$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/y$a;.i:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab024.  v0:= v1.`okhttp3.y$a.f` @type ^`okhttp3.q$a` @kind object;
  #L3ab028.  call temp:= `f`(v0, v2, v3) @signature `Lokhttp3/q$a;.f:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/q$a;` @kind virtual;
  #L3ab02e.  return v1 @kind object;
}
procedure `okhttp3.y$a` `j`(`okhttp3.y$a` v0 @kind this, `okhttp3.q` v1 @kind object) @signature `Lokhttp3/y$a;.j:(Lokhttp3/q;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3ab040.  call temp:= `f`(v1) @signature `Lokhttp3/q;.f:()Lokhttp3/q$a;` @kind virtual;
  #L3ab046.  v1:= temp @kind object;
  #L3ab048.  v0.`okhttp3.y$a.f` @type ^`okhttp3.q$a` := v1 @kind object;
  #L3ab04c.  return v0 @kind object;
}
procedure `okhttp3.y$a` `k`(`okhttp3.y$a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/y$a;.k:(Ljava/lang/String;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3ab060.  v0.`okhttp3.y$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L3ab064.  return v0 @kind object;
}
procedure `okhttp3.y$a` `l`(`okhttp3.y$a` v1 @kind this, `okhttp3.y` v2 @kind object) @signature `Lokhttp3/y$a;.l:(Lokhttp3/y;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab078.  if v2 == 0 then goto L3ab086;
  #L3ab07c.  v0:= "networkResponse" @kind object;
  #L3ab080.  call `f`(v1, v0, v2) @signature `Lokhttp3/y$a;.f:(Ljava/lang/String;Lokhttp3/y;)V` @kind direct;
  #L3ab086.  v1.`okhttp3.y$a.h` @type ^`okhttp3.y` := v2 @kind object;
  #L3ab08a.  return v1 @kind object;
}
procedure `okhttp3.y$a` `m`(`okhttp3.y$a` v0 @kind this, `okhttp3.y` v1 @kind object) @signature `Lokhttp3/y$a;.m:(Lokhttp3/y;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3ab09c.  if v1 == 0 then goto L3ab0a6;
  #L3ab0a0.  call `e`(v0, v1) @signature `Lokhttp3/y$a;.e:(Lokhttp3/y;)V` @kind direct;
  #L3ab0a6.  v0.`okhttp3.y$a.j` @type ^`okhttp3.y` := v1 @kind object;
  #L3ab0aa.  return v0 @kind object;
}
procedure `okhttp3.y$a` `n`(`okhttp3.y$a` v0 @kind this, `okhttp3.Protocol` v1 @kind object) @signature `Lokhttp3/y$a;.n:(Lokhttp3/Protocol;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3ab0bc.  v0.`okhttp3.y$a.b` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L3ab0c0.  return v0 @kind object;
}
procedure `okhttp3.y$a` `o`(`okhttp3.y$a` v0 @kind this, `long` v1 ) @signature `Lokhttp3/y$a;.o:(J)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3ab0d4.  v0.`okhttp3.y$a.l` @type ^`long` := v1 @kind wide;
  #L3ab0d8.  return v0 @kind object;
}
procedure `okhttp3.y$a` `p`(`okhttp3.y$a` v0 @kind this, `okhttp3.w` v1 @kind object) @signature `Lokhttp3/y$a;.p:(Lokhttp3/w;)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3ab0ec.  v0.`okhttp3.y$a.a` @type ^`okhttp3.w` := v1 @kind object;
  #L3ab0f0.  return v0 @kind object;
}
procedure `okhttp3.y$a` `q`(`okhttp3.y$a` v0 @kind this, `long` v1 ) @signature `Lokhttp3/y$a;.q:(J)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;

  #L3ab104.  v0.`okhttp3.y$a.k` @type ^`long` := v1 @kind wide;
  #L3ab108.  return v0 @kind object;
}
