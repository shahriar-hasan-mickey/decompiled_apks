record `okhttp3.f$b` @kind class @AccessFlag FINAL {
  `java.lang.String` `okhttp3.f$b.a` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.f$b.b` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.f$b.c` @AccessFlag FINAL;
  `okio.ByteString` `okhttp3.f$b.d` @AccessFlag FINAL;
}
procedure `boolean` `a`(`okhttp3.f$b` v10 @kind this, `java.lang.String` v11 @kind object) @signature `Lokhttp3/f$b;.a:(Ljava/lang/String;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a4420.  v0:= v10.`okhttp3.f$b.a` @type ^`java.lang.String` @kind object;
  #L3a4424.  v1:= "*." @kind object;
  #L3a4428.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3a442e.  v0:= temp;
  #L3a4430.  if v0 == 0 then goto L3a4486;
  #L3a4434.  v0:= 46I;
  #L3a4438.  call temp:= `indexOf`(v11, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3a443e.  v0:= temp;
  #L3a4440.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a4446.  v1:= temp;
  #L3a4448.  v1:= v1 - v0 @kind int;
  #L3a444a.  v2:= 1I;
  #L3a444c.  v1:= v1 - v2 @kind int;
  #L3a444e.  v3:= v10.`okhttp3.f$b.b` @type ^`java.lang.String` @kind object;
  #L3a4452.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a4458.  v3:= temp;
  #L3a445a.  if v1 != v3 then goto L3a4482;
  #L3a445e.  v5:= 0I;
  #L3a4460.  v6:= v0 + 1;
  #L3a4464.  v7:= v10.`okhttp3.f$b.b` @type ^`java.lang.String` @kind object;
  #L3a4468.  v8:= 0I;
  #L3a446a.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a4470.  v9:= temp;
  #L3a4472.  v4:= v11 @kind object;
  #L3a4474.  call temp:= `regionMatches`(v4, v5, v6, v7, v8, v9) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3a447a.  v11:= temp;
  #L3a447c.  if v11 == 0 then goto L3a4482;
  #L3a4480.  goto L3a4484;
  #L3a4482.  v2:= 0I;
  #L3a4484.  return v2;
  #L3a4486.  v0:= v10.`okhttp3.f$b.b` @type ^`java.lang.String` @kind object;
  #L3a448a.  call temp:= `equals`(v11, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a4490.  v11:= temp;
  #L3a4492.  return v11;
}
procedure `boolean` `equals`(`okhttp3.f$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/f$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a43c0.  v0:= instanceof @variable v3 @type ^`okhttp3.f$b` @kind boolean;
  #L3a43c4.  if v0 == 0 then goto L3a440c;
  #L3a43c8.  v0:= v2.`okhttp3.f$b.a` @type ^`java.lang.String` @kind object;
  #L3a43cc.  v3:= (`okhttp3.f$b`) v3 @kind object;
  #L3a43d0.  v1:= v3.`okhttp3.f$b.a` @type ^`java.lang.String` @kind object;
  #L3a43d4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a43da.  v0:= temp;
  #L3a43dc.  if v0 == 0 then goto L3a440c;
  #L3a43e0.  v0:= v2.`okhttp3.f$b.c` @type ^`java.lang.String` @kind object;
  #L3a43e4.  v1:= v3.`okhttp3.f$b.c` @type ^`java.lang.String` @kind object;
  #L3a43e8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a43ee.  v0:= temp;
  #L3a43f0.  if v0 == 0 then goto L3a440c;
  #L3a43f4.  v0:= v2.`okhttp3.f$b.d` @type ^`okio.ByteString` @kind object;
  #L3a43f8.  v3:= v3.`okhttp3.f$b.d` @type ^`okio.ByteString` @kind object;
  #L3a43fc.  call temp:= `equals`(v0, v3) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a4402.  v3:= temp;
  #L3a4404.  if v3 == 0 then goto L3a440c;
  #L3a4408.  v3:= 1I;
  #L3a440a.  goto L3a440e;
  #L3a440c.  v3:= 0I;
  #L3a440e.  return v3;
}
procedure `int` `hashCode`(`okhttp3.f$b` v2 @kind this) @signature `Lokhttp3/f$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a44a4.  v0:= v2.`okhttp3.f$b.a` @type ^`java.lang.String` @kind object;
  #L3a44a8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a44ae.  v0:= temp;
  #L3a44b0.  v1:= 527I;
  #L3a44b4.  v1:= v1 + v0 @kind int;
  #L3a44b6.  v1:= v1 * 31;
  #L3a44ba.  v0:= v2.`okhttp3.f$b.c` @type ^`java.lang.String` @kind object;
  #L3a44be.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a44c4.  v0:= temp;
  #L3a44c6.  v1:= v1 + v0 @kind int;
  #L3a44c8.  v1:= v1 * 31;
  #L3a44cc.  v0:= v2.`okhttp3.f$b.d` @type ^`okio.ByteString` @kind object;
  #L3a44d0.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L3a44d6.  v0:= temp;
  #L3a44d8.  v1:= v1 + v0 @kind int;
  #L3a44da.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.f$b` v2 @kind this) @signature `Lokhttp3/f$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a44ec.  v0:= new `java.lang.StringBuilder`;
  #L3a44f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a44f6.  v1:= v2.`okhttp3.f$b.c` @type ^`java.lang.String` @kind object;
  #L3a44fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4500.  v1:= v2.`okhttp3.f$b.d` @type ^`okio.ByteString` @kind object;
  #L3a4504.  call temp:= `a`(v1) @signature `Lokio/ByteString;.a:()Ljava/lang/String;` @kind virtual;
  #L3a450a.  v1:= temp @kind object;
  #L3a450c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4512.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a4518.  v0:= temp @kind object;
  #L3a451a.  return v0 @kind object;
}
