record `okhttp3.x$a` @kind class @AccessFlag  extends `okhttp3.x` @kind class {
  `okhttp3.t` `okhttp3.x$a.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.x$a.b` @AccessFlag FINAL_SYNTHETIC;
  `byte`[] `okhttp3.x$a.c` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.x$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.x$a` v0 @kind this, `okhttp3.t` v1 @kind object, `int` v2 , `byte`[] v3 @kind object, `int` v4 ) @signature `Lokhttp3/x$a;.<init>:(Lokhttp3/t;I[BI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3aac3c.  v0.`okhttp3.x$a.a` @type ^`okhttp3.t` := v1 @kind object;
  #L3aac40.  v0.`okhttp3.x$a.b` @type ^`int` := v2;
  #L3aac44.  v0.`okhttp3.x$a.c` @type ^`byte`[] := v3 @kind object;
  #L3aac48.  v0.`okhttp3.x$a.d` @type ^`int` := v4;
  #L3aac4c.  call `<init>`(v0) @signature `Lokhttp3/x;.<init>:()V` @kind direct;
  #L3aac52.  return @kind void;
}
procedure `long` `a`(`okhttp3.x$a` v2 @kind this) @signature `Lokhttp3/x$a;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aac0c.  v0:= v2.`okhttp3.x$a.b` @type ^`int`;
  #L3aac10.  v0:= (`long`) v0 @kind i2l;
  #L3aac12.  return v0 @kind wide;
}
procedure `okhttp3.t` `b`(`okhttp3.x$a` v1 @kind this) @signature `Lokhttp3/x$a;.b:()Lokhttp3/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aac24.  v0:= v1.`okhttp3.x$a.a` @type ^`okhttp3.t` @kind object;
  #L3aac28.  return v0 @kind object;
}
procedure `void` `f`(`okhttp3.x$a` v3 @kind this, `okio.d` v4 @kind object) @signature `Lokhttp3/x$a;.f:(Lokio/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aac64.  v0:= v3.`okhttp3.x$a.c` @type ^`byte`[] @kind object;
  #L3aac68.  v1:= v3.`okhttp3.x$a.d` @type ^`int`;
  #L3aac6c.  v2:= v3.`okhttp3.x$a.b` @type ^`int`;
  #L3aac70.  call temp:= `write`(v4, v0, v1, v2) @signature `Lokio/d;.write:([BII)Lokio/d;` @kind interface;
  #L3aac76.  return @kind void;
}
