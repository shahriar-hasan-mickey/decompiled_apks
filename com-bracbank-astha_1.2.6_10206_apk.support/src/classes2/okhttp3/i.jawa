record `okhttp3.i` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.i.a` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.i.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `okhttp3.i.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `okhttp3.i.d` @AccessFlag PRIVATE_FINAL;
  `v2.d` `okhttp3.i.e` @AccessFlag FINAL;
  `boolean` `okhttp3.i.f` @AccessFlag ;
}
global `java.util.concurrent.Executor` `@@okhttp3.i.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3a58a0.  v8:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3a58a4.  v1:= 0I;
  #L3a58a6.  v2:= 2147483647I;
  #L3a58ac.  v3:= 60L;
  #L3a58b0.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3a58b4.  v6:= new `java.util.concurrent.SynchronousQueue`;
  #L3a58b8.  call `<init>`(v6) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L3a58be.  v0:= 1I;
  #L3a58c0.  v7:= "OkHttp ConnectionPool" @kind object;
  #L3a58c4.  call temp:= `G`(v7, v0) @signature `Lt2/c;.G:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L3a58ca.  v7:= temp @kind object;
  #L3a58cc.  v0:= v8 @kind object;
  #L3a58ce.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3a58d4.  `@@okhttp3.i.g` @type ^`java.util.concurrent.Executor` := v8 @kind object;
  #L3a58d8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.i` v4 @kind this) @signature `Lokhttp3/i;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a58ec.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3a58f0.  v1:= 5I;
  #L3a58f2.  v2:= 5L;
  #L3a58f6.  call `<init>`(v4, v1, v2, v0) @signature `Lokhttp3/i;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L3a58fc.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.i` v2 @kind this, `int` v3 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lokhttp3/i;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a5910.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a5916.  v0:= new `okhttp3.i$a`;
  #L3a591a.  call `<init>`(v0, v2) @signature `Lokhttp3/i$a;.<init>:(Lokhttp3/i;)V` @kind direct;
  #L3a5920.  v2.`okhttp3.i.c` @type ^`java.lang.Runnable` := v0 @kind object;
  #L3a5924.  v0:= new `java.util.ArrayDeque`;
  #L3a5928.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L3a592e.  v2.`okhttp3.i.d` @type ^`java.util.Deque` := v0 @kind object;
  #L3a5932.  v0:= new `v2.d`;
  #L3a5936.  call `<init>`(v0) @signature `Lv2/d;.<init>:()V` @kind direct;
  #L3a593c.  v2.`okhttp3.i.e` @type ^`v2.d` := v0 @kind object;
  #L3a5940.  v2.`okhttp3.i.a` @type ^`int` := v3;
  #L3a5944.  call temp:= `toNanos`(v6, v4) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L3a594a.  v0:= temp @kind wide;
  #L3a594c.  v2.`okhttp3.i.b` @type ^`long` := v0 @kind wide;
  #L3a5950.  v0:= 0L;
  #L3a5954.  v3:= lcmp(v4, v0);
  #L3a5958.  if v3 <= 0 then goto L3a595e;
  #L3a595c.  return @kind void;
  #L3a595e.  v3:= new `java.lang.IllegalArgumentException`;
  #L3a5962.  v6:= new `java.lang.StringBuilder`;
  #L3a5966.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a596c.  v0:= "keepAliveDuration <= 0: " @kind object;
  #L3a5970.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a5976.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a597c.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a5982.  v4:= temp @kind object;
  #L3a5984.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a598a.  throw v3;
}
procedure `int` `e`(`okhttp3.i` v6 @kind this, `v2.c` v7 @kind object, `long` v8 ) @signature `Lokhttp3/i;.e:(Lv2/c;J)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a5640.  v0:= v7.`v2.c.n` @type ^`java.util.List` @kind object;
  #L3a5644.  v1:= 0I;
  #L3a5646.  v2:= 0I;
  #L3a5648.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a564e.  v3:= temp;
  #L3a5650.  if v2 >= v3 then goto L3a56f0;
  #L3a5654.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a565a.  v3:= temp @kind object;
  #L3a565c.  v3:= (`java.lang.ref.Reference`) v3 @kind object;
  #L3a5660.  call temp:= `get`(v3) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3a5666.  v4:= temp @kind object;
  #L3a5668.  if v4 == 0 then goto L3a5672;
  #L3a566c.  v2:= v2 + 1;
  #L3a5670.  goto L3a5648;
  #L3a5672.  v3:= (`v2.f$a`) v3 @kind object;
  #L3a5676.  v4:= new `java.lang.StringBuilder`;
  #L3a567a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a5680.  v5:= "A connection to " @kind object;
  #L3a5684.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a568a.  call temp:= `p`(v7) @signature `Lv2/c;.p:()Lokhttp3/a0;` @kind virtual;
  #L3a5690.  v5:= temp @kind object;
  #L3a5692.  call temp:= `a`(v5) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3a5698.  v5:= temp @kind object;
  #L3a569a.  call temp:= `l`(v5) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3a56a0.  v5:= temp @kind object;
  #L3a56a2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a56a8.  v5:= " was leaked. Did you forget to close a response body?" @kind object;
  #L3a56ac.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a56b2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a56b8.  v4:= temp @kind object;
  #L3a56ba.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3a56c0.  v5:= temp @kind object;
  #L3a56c2.  v3:= v3.`v2.f$a.a` @type ^`java.lang.Object` @kind object;
  #L3a56c6.  call `q`(v5, v4, v3) @signature `Lz2/f;.q:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L3a56cc.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3a56d2.  v3:= 1I;
  #L3a56d4.  v7.`v2.c.k` @type ^`boolean` := v3 @kind boolean;
  #L3a56d8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3a56de.  v3:= temp;
  #L3a56e0.  if v3 == 0 then goto L3a5648;
  #L3a56e4.  v2:= v6.`okhttp3.i.b` @type ^`long` @kind wide;
  #L3a56e8.  v8:= v8 - v2 @kind long;
  #L3a56ea.  v7.`v2.c.o` @type ^`long` := v8 @kind wide;
  #L3a56ee.  return v1;
  #L3a56f0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a56f6.  v7:= temp;
  #L3a56f8.  return v7;
}
procedure `long` `a`(`okhttp3.i` v11 @kind this, `long` v12 ) @signature `Lokhttp3/i;.a:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a5774.  @monitorenter v11
  #L3a5776.  v0:= v11.`okhttp3.i.d` @type ^`java.util.Deque` @kind object;
  #L3a577a.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a5780.  v0:= temp @kind object;
  #L3a5782.  v1:= 0I;
  #L3a5784.  v2:= 0I;
  #L3a5786.  v3:= -9223372036854775808L;
  #L3a578a.  v5:= 0I;
  #L3a578c.  v6:= 0I;
  #L3a578e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a5794.  v7:= temp;
  #L3a5796.  if v7 == 0 then goto L3a57d2;
  #L3a579a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a57a0.  v7:= temp @kind object;
  #L3a57a2.  v7:= (`v2.c`) v7 @kind object;
  #L3a57a6.  call temp:= `e`(v11, v7, v12) @signature `Lokhttp3/i;.e:(Lv2/c;J)I` @kind direct;
  #L3a57ac.  v8:= temp;
  #L3a57ae.  if v8 <= 0 then goto L3a57b8;
  #L3a57b2.  v6:= v6 + 1;
  #L3a57b6.  goto L3a578e;
  #L3a57b8.  v5:= v5 + 1;
  #L3a57bc.  v8:= v7.`v2.c.o` @type ^`long` @kind wide;
  #L3a57c0.  v8:= v12 - v8 @kind long;
  #L3a57c4.  v10:= lcmp(v8, v3);
  #L3a57c8.  if v10 <= 0 then goto L3a578e;
  #L3a57cc.  v2:= v7 @kind object;
  #L3a57ce.  v3:= v8 @kind wide;
  #L3a57d0.  goto L3a578e;
  #L3a57d2.  v12:= v11.`okhttp3.i.b` @type ^`long` @kind wide;
  #L3a57d6.  v0:= lcmp(v3, v12);
  #L3a57da.  if v0 >= 0 then goto L3a5806;
  #L3a57de.  v0:= v11.`okhttp3.i.a` @type ^`int`;
  #L3a57e2.  if v5 <= v0 then goto L3a57e8;
  #L3a57e6.  goto L3a5806;
  #L3a57e8.  if v5 <= 0 then goto L3a57f2;
  #L3a57ec.  v12:= v12 - v3 @kind long;
  #L3a57ee.  @monitorexit v11
  #L3a57f0.  return v12 @kind wide;
  #L3a57f2.  if v6 <= 0 then goto L3a57fa;
  #L3a57f6.  @monitorexit v11
  #L3a57f8.  return v12 @kind wide;
  #L3a57fa.  v11.`okhttp3.i.f` @type ^`boolean` := v1 @kind boolean;
  #L3a57fe.  v12:= -1L;
  #L3a5802.  @monitorexit v11
  #L3a5804.  return v12 @kind wide;
  #L3a5806.  v12:= v11.`okhttp3.i.d` @type ^`java.util.Deque` @kind object;
  #L3a580a.  call temp:= `remove`(v12, v2) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3a5810.  @monitorexit v11
  #L3a5812.  call temp:= `q`(v2) @signature `Lv2/c;.q:()Ljava/net/Socket;` @kind virtual;
  #L3a5818.  v12:= temp @kind object;
  #L3a581a.  call `h`(v12) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L3a5820.  v12:= 0L;
  #L3a5824.  return v12 @kind wide;
  #L3a5826.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a5828.  @monitorexit v11
  #L3a582a.  throw v12;
  catch `java.lang.Throwable` @[L3a5776..L3a5812] goto L3a5826;
  catch `java.lang.Throwable` @[L3a5828..L3a582a] goto L3a5826;
}
procedure `boolean` `b`(`okhttp3.i` v1 @kind this, `v2.c` v2 @kind object) @signature `Lokhttp3/i;.b:(Lv2/c;)Z` @AccessFlag  {
    temp;
    v0;

  #L3a5604.  v0:= v2.`v2.c.k` @type ^`boolean` @kind boolean;
  #L3a5608.  if v0 != 0 then goto L3a5620;
  #L3a560c.  v0:= v1.`okhttp3.i.a` @type ^`int`;
  #L3a5610.  if v0 != 0 then goto L3a5616;
  #L3a5614.  goto L3a5620;
  #L3a5616.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3a561c.  v2:= 0I;
  #L3a561e.  return v2;
  #L3a5620.  v0:= v1.`okhttp3.i.d` @type ^`java.util.Deque` @kind object;
  #L3a5624.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3a562a.  v2:= 1I;
  #L3a562c.  return v2;
}
procedure `java.net.Socket` `c`(`okhttp3.i` v3 @kind this, `okhttp3.a` v4 @kind object, `v2.f` v5 @kind object) @signature `Lokhttp3/i;.c:(Lokhttp3/a;Lv2/f;)Ljava/net/Socket;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3a570c.  v0:= v3.`okhttp3.i.d` @type ^`java.util.Deque` @kind object;
  #L3a5710.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a5716.  v0:= temp @kind object;
  #L3a5718.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a571e.  v1:= temp;
  #L3a5720.  v2:= 0I;
  #L3a5722.  if v1 == 0 then goto L3a5760;
  #L3a5726.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a572c.  v1:= temp @kind object;
  #L3a572e.  v1:= (`v2.c`) v1 @kind object;
  #L3a5732.  call temp:= `l`(v1, v4, v2) @signature `Lv2/c;.l:(Lokhttp3/a;Lokhttp3/a0;)Z` @kind virtual;
  #L3a5738.  v2:= temp;
  #L3a573a.  if v2 == 0 then goto L3a5718;
  #L3a573e.  call temp:= `n`(v1) @signature `Lv2/c;.n:()Z` @kind virtual;
  #L3a5744.  v2:= temp;
  #L3a5746.  if v2 == 0 then goto L3a5718;
  #L3a574a.  call temp:= `d`(v5) @signature `Lv2/f;.d:()Lv2/c;` @kind virtual;
  #L3a5750.  v2:= temp @kind object;
  #L3a5752.  if v1 == v2 then goto L3a5718;
  #L3a5756.  call temp:= `m`(v5, v1) @signature `Lv2/f;.m:(Lv2/c;)Ljava/net/Socket;` @kind virtual;
  #L3a575c.  v4:= temp @kind object;
  #L3a575e.  return v4 @kind object;
  #L3a5760.  return v2 @kind object;
}
procedure `v2.c` `d`(`okhttp3.i` v3 @kind this, `okhttp3.a` v4 @kind object, `v2.f` v5 @kind object, `okhttp3.a0` v6 @kind object) @signature `Lokhttp3/i;.d:(Lokhttp3/a;Lv2/f;Lokhttp3/a0;)Lv2/c;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3a5850.  v0:= v3.`okhttp3.i.d` @type ^`java.util.Deque` @kind object;
  #L3a5854.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a585a.  v0:= temp @kind object;
  #L3a585c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a5862.  v1:= temp;
  #L3a5864.  if v1 == 0 then goto L3a588a;
  #L3a5868.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a586e.  v1:= temp @kind object;
  #L3a5870.  v1:= (`v2.c`) v1 @kind object;
  #L3a5874.  call temp:= `l`(v1, v4, v6) @signature `Lv2/c;.l:(Lokhttp3/a;Lokhttp3/a0;)Z` @kind virtual;
  #L3a587a.  v2:= temp;
  #L3a587c.  if v2 == 0 then goto L3a585c;
  #L3a5880.  v4:= 1I;
  #L3a5882.  call `a`(v5, v1, v4) @signature `Lv2/f;.a:(Lv2/c;Z)V` @kind virtual;
  #L3a5888.  return v1 @kind object;
  #L3a588a.  v4:= 0I;
  #L3a588c.  return v4 @kind object;
}
procedure `void` `f`(`okhttp3.i` v2 @kind this, `v2.c` v3 @kind object) @signature `Lokhttp3/i;.f:(Lv2/c;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3a599c.  v0:= v2.`okhttp3.i.f` @type ^`boolean` @kind boolean;
  #L3a59a0.  if v0 != 0 then goto L3a59b8;
  #L3a59a4.  v0:= 1I;
  #L3a59a6.  v2.`okhttp3.i.f` @type ^`boolean` := v0 @kind boolean;
  #L3a59aa.  v0:= `@@okhttp3.i.g` @type ^`java.util.concurrent.Executor` @kind object;
  #L3a59ae.  v1:= v2.`okhttp3.i.c` @type ^`java.lang.Runnable` @kind object;
  #L3a59b2.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3a59b8.  v0:= v2.`okhttp3.i.d` @type ^`java.util.Deque` @kind object;
  #L3a59bc.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a59c2.  return @kind void;
}
