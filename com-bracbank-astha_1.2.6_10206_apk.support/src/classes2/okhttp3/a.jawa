record `okhttp3.a` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.r` `okhttp3.a.a` @AccessFlag FINAL;
  `okhttp3.n` `okhttp3.a.b` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.a.c` @AccessFlag FINAL;
  `okhttp3.b` `okhttp3.a.d` @AccessFlag FINAL;
  `java.util.List` `okhttp3.a.e` @AccessFlag FINAL;
  `java.util.List` `okhttp3.a.f` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.a.g` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.a.h` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.a.i` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.a.j` @AccessFlag FINAL;
  `okhttp3.f` `okhttp3.a.k` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.a` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `okhttp3.n` v5 @kind object, `javax.net.SocketFactory` v6 @kind object, `javax.net.ssl.SSLSocketFactory` v7 @kind object, `javax.net.ssl.HostnameVerifier` v8 @kind object, `okhttp3.f` v9 @kind object, `okhttp3.b` v10 @kind object, `java.net.Proxy` v11 @kind object, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object) @signature `Lokhttp3/a;.<init>:(Ljava/lang/String;ILokhttp3/n;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/f;Lokhttp3/b;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a3b44.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a3b4a.  v0:= new `okhttp3.r$a`;
  #L3a3b4e.  call `<init>`(v0) @signature `Lokhttp3/r$a;.<init>:()V` @kind direct;
  #L3a3b54.  if v7 == 0 then goto L3a3b5e;
  #L3a3b58.  v1:= "https" @kind object;
  #L3a3b5c.  goto L3a3b62;
  #L3a3b5e.  v1:= "http" @kind object;
  #L3a3b62.  call temp:= `s`(v0, v1) @signature `Lokhttp3/r$a;.s:(Ljava/lang/String;)Lokhttp3/r$a;` @kind virtual;
  #L3a3b68.  v0:= temp @kind object;
  #L3a3b6a.  call temp:= `f`(v0, v3) @signature `Lokhttp3/r$a;.f:(Ljava/lang/String;)Lokhttp3/r$a;` @kind virtual;
  #L3a3b70.  v3:= temp @kind object;
  #L3a3b72.  call temp:= `m`(v3, v4) @signature `Lokhttp3/r$a;.m:(I)Lokhttp3/r$a;` @kind virtual;
  #L3a3b78.  v3:= temp @kind object;
  #L3a3b7a.  call temp:= `a`(v3) @signature `Lokhttp3/r$a;.a:()Lokhttp3/r;` @kind virtual;
  #L3a3b80.  v3:= temp @kind object;
  #L3a3b82.  v2.`okhttp3.a.a` @type ^`okhttp3.r` := v3 @kind object;
  #L3a3b86.  v3:= "dns == null" @kind object;
  #L3a3b8a.  call temp:= `requireNonNull`(v5, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a3b90.  v2.`okhttp3.a.b` @type ^`okhttp3.n` := v5 @kind object;
  #L3a3b94.  v3:= "socketFactory == null" @kind object;
  #L3a3b98.  call temp:= `requireNonNull`(v6, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a3b9e.  v2.`okhttp3.a.c` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L3a3ba2.  v3:= "proxyAuthenticator == null" @kind object;
  #L3a3ba6.  call temp:= `requireNonNull`(v10, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a3bac.  v2.`okhttp3.a.d` @type ^`okhttp3.b` := v10 @kind object;
  #L3a3bb0.  v3:= "protocols == null" @kind object;
  #L3a3bb4.  call temp:= `requireNonNull`(v12, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a3bba.  call temp:= `t`(v12) @signature `Lt2/c;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3a3bc0.  v3:= temp @kind object;
  #L3a3bc2.  v2.`okhttp3.a.e` @type ^`java.util.List` := v3 @kind object;
  #L3a3bc6.  v3:= "connectionSpecs == null" @kind object;
  #L3a3bca.  call temp:= `requireNonNull`(v13, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a3bd0.  call temp:= `t`(v13) @signature `Lt2/c;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3a3bd6.  v3:= temp @kind object;
  #L3a3bd8.  v2.`okhttp3.a.f` @type ^`java.util.List` := v3 @kind object;
  #L3a3bdc.  v3:= "proxySelector == null" @kind object;
  #L3a3be0.  call temp:= `requireNonNull`(v14, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a3be6.  v2.`okhttp3.a.g` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L3a3bea.  v2.`okhttp3.a.h` @type ^`java.net.Proxy` := v11 @kind object;
  #L3a3bee.  v2.`okhttp3.a.i` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L3a3bf2.  v2.`okhttp3.a.j` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L3a3bf6.  v2.`okhttp3.a.k` @type ^`okhttp3.f` := v9 @kind object;
  #L3a3bfa.  return @kind void;
}
procedure `okhttp3.f` `a`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.a:()Lokhttp3/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3afc.  v0:= v1.`okhttp3.a.k` @type ^`okhttp3.f` @kind object;
  #L3a3b00.  return v0 @kind object;
}
procedure `java.util.List` `b`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3a6c.  v0:= v1.`okhttp3.a.f` @type ^`java.util.List` @kind object;
  #L3a3a70.  return v0 @kind object;
}
procedure `okhttp3.n` `c`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.c:()Lokhttp3/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3b14.  v0:= v1.`okhttp3.a.b` @type ^`okhttp3.n` @kind object;
  #L3a3b18.  return v0 @kind object;
}
procedure `boolean` `d`(`okhttp3.a` v2 @kind this, `okhttp3.a` v3 @kind object) @signature `Lokhttp3/a;.d:(Lokhttp3/a;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3a37d0.  v0:= v2.`okhttp3.a.b` @type ^`okhttp3.n` @kind object;
  #L3a37d4.  v1:= v3.`okhttp3.a.b` @type ^`okhttp3.n` @kind object;
  #L3a37d8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a37de.  v0:= temp;
  #L3a37e0.  if v0 == 0 then goto L3a38ac;
  #L3a37e4.  v0:= v2.`okhttp3.a.d` @type ^`okhttp3.b` @kind object;
  #L3a37e8.  v1:= v3.`okhttp3.a.d` @type ^`okhttp3.b` @kind object;
  #L3a37ec.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a37f2.  v0:= temp;
  #L3a37f4.  if v0 == 0 then goto L3a38ac;
  #L3a37f8.  v0:= v2.`okhttp3.a.e` @type ^`java.util.List` @kind object;
  #L3a37fc.  v1:= v3.`okhttp3.a.e` @type ^`java.util.List` @kind object;
  #L3a3800.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3a3806.  v0:= temp;
  #L3a3808.  if v0 == 0 then goto L3a38ac;
  #L3a380c.  v0:= v2.`okhttp3.a.f` @type ^`java.util.List` @kind object;
  #L3a3810.  v1:= v3.`okhttp3.a.f` @type ^`java.util.List` @kind object;
  #L3a3814.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3a381a.  v0:= temp;
  #L3a381c.  if v0 == 0 then goto L3a38ac;
  #L3a3820.  v0:= v2.`okhttp3.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L3a3824.  v1:= v3.`okhttp3.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L3a3828.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a382e.  v0:= temp;
  #L3a3830.  if v0 == 0 then goto L3a38ac;
  #L3a3834.  v0:= v2.`okhttp3.a.h` @type ^`java.net.Proxy` @kind object;
  #L3a3838.  v1:= v3.`okhttp3.a.h` @type ^`java.net.Proxy` @kind object;
  #L3a383c.  call temp:= `q`(v0, v1) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a3842.  v0:= temp;
  #L3a3844.  if v0 == 0 then goto L3a38ac;
  #L3a3848.  v0:= v2.`okhttp3.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3a384c.  v1:= v3.`okhttp3.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3a3850.  call temp:= `q`(v0, v1) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a3856.  v0:= temp;
  #L3a3858.  if v0 == 0 then goto L3a38ac;
  #L3a385c.  v0:= v2.`okhttp3.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L3a3860.  v1:= v3.`okhttp3.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L3a3864.  call temp:= `q`(v0, v1) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a386a.  v0:= temp;
  #L3a386c.  if v0 == 0 then goto L3a38ac;
  #L3a3870.  v0:= v2.`okhttp3.a.k` @type ^`okhttp3.f` @kind object;
  #L3a3874.  v1:= v3.`okhttp3.a.k` @type ^`okhttp3.f` @kind object;
  #L3a3878.  call temp:= `q`(v0, v1) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a387e.  v0:= temp;
  #L3a3880.  if v0 == 0 then goto L3a38ac;
  #L3a3884.  call temp:= `l`(v2) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3a388a.  v0:= temp @kind object;
  #L3a388c.  call temp:= `x`(v0) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L3a3892.  v0:= temp;
  #L3a3894.  call temp:= `l`(v3) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3a389a.  v3:= temp @kind object;
  #L3a389c.  call temp:= `x`(v3) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L3a38a2.  v3:= temp;
  #L3a38a4.  if v0 != v3 then goto L3a38ac;
  #L3a38a8.  v3:= 1I;
  #L3a38aa.  goto L3a38ae;
  #L3a38ac.  v3:= 0I;
  #L3a38ae.  return v3;
}
procedure `javax.net.ssl.HostnameVerifier` `e`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.e:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3ab4.  v0:= v1.`okhttp3.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L3a3ab8.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a378c.  v0:= instanceof @variable v3 @type ^`okhttp3.a` @kind boolean;
  #L3a3790.  if v0 == 0 then goto L3a37bc;
  #L3a3794.  v0:= v2.`okhttp3.a.a` @type ^`okhttp3.r` @kind object;
  #L3a3798.  v3:= (`okhttp3.a`) v3 @kind object;
  #L3a379c.  v1:= v3.`okhttp3.a.a` @type ^`okhttp3.r` @kind object;
  #L3a37a0.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a37a6.  v0:= temp;
  #L3a37a8.  if v0 == 0 then goto L3a37bc;
  #L3a37ac.  call temp:= `d`(v2, v3) @signature `Lokhttp3/a;.d:(Lokhttp3/a;)Z` @kind virtual;
  #L3a37b2.  v3:= temp;
  #L3a37b4.  if v3 == 0 then goto L3a37bc;
  #L3a37b8.  v3:= 1I;
  #L3a37ba.  goto L3a37be;
  #L3a37bc.  v3:= 0I;
  #L3a37be.  return v3;
}
procedure `java.util.List` `f`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.f:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3a84.  v0:= v1.`okhttp3.a.e` @type ^`java.util.List` @kind object;
  #L3a3a88.  return v0 @kind object;
}
procedure `java.net.Proxy` `g`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.g:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3a3c.  v0:= v1.`okhttp3.a.h` @type ^`java.net.Proxy` @kind object;
  #L3a3a40.  return v0 @kind object;
}
procedure `okhttp3.b` `h`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.h:()Lokhttp3/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3ae4.  v0:= v1.`okhttp3.a.d` @type ^`okhttp3.b` @kind object;
  #L3a3ae8.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.a` v3 @kind this) @signature `Lokhttp3/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a38c0.  v0:= v3.`okhttp3.a.a` @type ^`okhttp3.r` @kind object;
  #L3a38c4.  call temp:= `hashCode`(v0) @signature `Lokhttp3/r;.hashCode:()I` @kind virtual;
  #L3a38ca.  v0:= temp;
  #L3a38cc.  v1:= 527I;
  #L3a38d0.  v1:= v1 + v0 @kind int;
  #L3a38d2.  v1:= v1 * 31;
  #L3a38d6.  v0:= v3.`okhttp3.a.b` @type ^`okhttp3.n` @kind object;
  #L3a38da.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a38e0.  v0:= temp;
  #L3a38e2.  v1:= v1 + v0 @kind int;
  #L3a38e4.  v1:= v1 * 31;
  #L3a38e8.  v0:= v3.`okhttp3.a.d` @type ^`okhttp3.b` @kind object;
  #L3a38ec.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a38f2.  v0:= temp;
  #L3a38f4.  v1:= v1 + v0 @kind int;
  #L3a38f6.  v1:= v1 * 31;
  #L3a38fa.  v0:= v3.`okhttp3.a.e` @type ^`java.util.List` @kind object;
  #L3a38fe.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L3a3904.  v0:= temp;
  #L3a3906.  v1:= v1 + v0 @kind int;
  #L3a3908.  v1:= v1 * 31;
  #L3a390c.  v0:= v3.`okhttp3.a.f` @type ^`java.util.List` @kind object;
  #L3a3910.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L3a3916.  v0:= temp;
  #L3a3918.  v1:= v1 + v0 @kind int;
  #L3a391a.  v1:= v1 * 31;
  #L3a391e.  v0:= v3.`okhttp3.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L3a3922.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a3928.  v0:= temp;
  #L3a392a.  v1:= v1 + v0 @kind int;
  #L3a392c.  v1:= v1 * 31;
  #L3a3930.  v0:= v3.`okhttp3.a.h` @type ^`java.net.Proxy` @kind object;
  #L3a3934.  v2:= 0I;
  #L3a3936.  if v0 == 0 then goto L3a3944;
  #L3a393a.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L3a3940.  v0:= temp;
  #L3a3942.  goto L3a3946;
  #L3a3944.  v0:= 0I;
  #L3a3946.  v1:= v1 + v0 @kind int;
  #L3a3948.  v1:= v1 * 31;
  #L3a394c.  v0:= v3.`okhttp3.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3a3950.  if v0 == 0 then goto L3a395e;
  #L3a3954.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a395a.  v0:= temp;
  #L3a395c.  goto L3a3960;
  #L3a395e.  v0:= 0I;
  #L3a3960.  v1:= v1 + v0 @kind int;
  #L3a3962.  v1:= v1 * 31;
  #L3a3966.  v0:= v3.`okhttp3.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L3a396a.  if v0 == 0 then goto L3a3978;
  #L3a396e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a3974.  v0:= temp;
  #L3a3976.  goto L3a397a;
  #L3a3978.  v0:= 0I;
  #L3a397a.  v1:= v1 + v0 @kind int;
  #L3a397c.  v1:= v1 * 31;
  #L3a3980.  v0:= v3.`okhttp3.a.k` @type ^`okhttp3.f` @kind object;
  #L3a3984.  if v0 == 0 then goto L3a3990;
  #L3a3988.  call temp:= `hashCode`(v0) @signature `Lokhttp3/f;.hashCode:()I` @kind virtual;
  #L3a398e.  v2:= temp;
  #L3a3990.  v1:= v1 + v2 @kind int;
  #L3a3992.  return v1;
}
procedure `java.net.ProxySelector` `i`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.i:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3a54.  v0:= v1.`okhttp3.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L3a3a58.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `j`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.j:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3a9c.  v0:= v1.`okhttp3.a.c` @type ^`javax.net.SocketFactory` @kind object;
  #L3a3aa0.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `k`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3acc.  v0:= v1.`okhttp3.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3a3ad0.  return v0 @kind object;
}
procedure `okhttp3.r` `l`(`okhttp3.a` v1 @kind this) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3b2c.  v0:= v1.`okhttp3.a.a` @type ^`okhttp3.r` @kind object;
  #L3a3b30.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.a` v2 @kind this) @signature `Lokhttp3/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a39a4.  v0:= new `java.lang.StringBuilder`;
  #L3a39a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a39ae.  v1:= "Address{" @kind object;
  #L3a39b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a39b8.  v1:= v2.`okhttp3.a.a` @type ^`okhttp3.r` @kind object;
  #L3a39bc.  call temp:= `l`(v1) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3a39c2.  v1:= temp @kind object;
  #L3a39c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a39ca.  v1:= ":" @kind object;
  #L3a39ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a39d4.  v1:= v2.`okhttp3.a.a` @type ^`okhttp3.r` @kind object;
  #L3a39d8.  call temp:= `x`(v1) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L3a39de.  v1:= temp;
  #L3a39e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a39e6.  v1:= v2.`okhttp3.a.h` @type ^`java.net.Proxy` @kind object;
  #L3a39ea.  if v1 == 0 then goto L3a3a04;
  #L3a39ee.  v1:= ", proxy=" @kind object;
  #L3a39f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a39f8.  v1:= v2.`okhttp3.a.h` @type ^`java.net.Proxy` @kind object;
  #L3a39fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3a02.  goto L3a3a18;
  #L3a3a04.  v1:= ", proxySelector=" @kind object;
  #L3a3a08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3a0e.  v1:= v2.`okhttp3.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L3a3a12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3a18.  v1:= "}" @kind object;
  #L3a3a1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3a22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a3a28.  v0:= temp @kind object;
  #L3a3a2a.  return v0 @kind object;
}
