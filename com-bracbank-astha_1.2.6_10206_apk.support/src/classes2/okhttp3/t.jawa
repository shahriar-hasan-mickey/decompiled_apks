record `okhttp3.t` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.t.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.t.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.t.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.t.d` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.t.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.t.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a9684.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L3a9688.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3a968e.  v0:= temp @kind object;
  #L3a9690.  `@@okhttp3.t.e` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3a9694.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L3a9698.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3a969e.  v0:= temp @kind object;
  #L3a96a0.  `@@okhttp3.t.f` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3a96a4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.t` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/t;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a96b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a96be.  v0.`okhttp3.t.a` @type ^`java.lang.String` := v1 @kind object;
  #L3a96c2.  v0.`okhttp3.t.b` @type ^`java.lang.String` := v2 @kind object;
  #L3a96c6.  v0.`okhttp3.t.c` @type ^`java.lang.String` := v3 @kind object;
  #L3a96ca.  v0.`okhttp3.t.d` @type ^`java.lang.String` := v4 @kind object;
  #L3a96ce.  return @kind void;
}
procedure `okhttp3.t` `c`(`java.lang.String` v11 @kind object) @signature `Lokhttp3/t;.c:(Ljava/lang/String;)Lokhttp3/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a9458.  v0:= `@@okhttp3.t.e` @type ^`java.util.regex.Pattern` @kind object;
  #L3a945c.  call temp:= `matcher`(v0, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3a9462.  v0:= temp @kind object;
  #L3a9464.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L3a946a.  v1:= temp;
  #L3a946c.  v2:= 34I;
  #L3a9470.  if v1 == 0 then goto L3a9610;
  #L3a9474.  v1:= 1I;
  #L3a9476.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a947c.  v3:= temp @kind object;
  #L3a947e.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3a9482.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3a9488.  v3:= temp @kind object;
  #L3a948a.  v5:= 2I;
  #L3a948c.  call temp:= `group`(v0, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a9492.  v6:= temp @kind object;
  #L3a9494.  call temp:= `toLowerCase`(v6, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3a949a.  v4:= temp @kind object;
  #L3a949c.  v6:= 0I;
  #L3a949e.  v7:= `@@okhttp3.t.f` @type ^`java.util.regex.Pattern` @kind object;
  #L3a94a2.  call temp:= `matcher`(v7, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3a94a8.  v7:= temp @kind object;
  #L3a94aa.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L3a94b0.  v0:= temp;
  #L3a94b2.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a94b8.  v8:= temp;
  #L3a94ba.  if v0 >= v8 then goto L3a9604;
  #L3a94be.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a94c4.  v8:= temp;
  #L3a94c6.  call temp:= `region`(v7, v0, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L3a94cc.  call temp:= `lookingAt`(v7) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L3a94d2.  v8:= temp;
  #L3a94d4.  v9:= "\" for: \"" @kind object;
  #L3a94d8.  if v8 == 0 then goto L3a95bc;
  #L3a94dc.  call temp:= `group`(v7, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a94e2.  v0:= temp @kind object;
  #L3a94e4.  if v0 == 0 then goto L3a95b0;
  #L3a94e8.  v8:= "charset" @kind object;
  #L3a94ec.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a94f2.  v0:= temp;
  #L3a94f4.  if v0 != 0 then goto L3a94fa;
  #L3a94f8.  goto L3a95b0;
  #L3a94fa.  call temp:= `group`(v7, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a9500.  v0:= temp @kind object;
  #L3a9502.  if v0 == 0 then goto L3a9542;
  #L3a9506.  v8:= "'" @kind object;
  #L3a950a.  call temp:= `startsWith`(v0, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3a9510.  v10:= temp;
  #L3a9512.  if v10 == 0 then goto L3a954c;
  #L3a9516.  call temp:= `endsWith`(v0, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3a951c.  v8:= temp;
  #L3a951e.  if v8 == 0 then goto L3a954c;
  #L3a9522.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a9528.  v8:= temp;
  #L3a952a.  if v8 <= v5 then goto L3a954c;
  #L3a952e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a9534.  v8:= temp;
  #L3a9536.  v8:= v8 - v1 @kind int;
  #L3a9538.  call temp:= `substring`(v0, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a953e.  v0:= temp @kind object;
  #L3a9540.  goto L3a954c;
  #L3a9542.  v0:= 3I;
  #L3a9544.  call temp:= `group`(v7, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a954a.  v0:= temp @kind object;
  #L3a954c.  if v6 == 0 then goto L3a95ae;
  #L3a9550.  call temp:= `equalsIgnoreCase`(v0, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a9556.  v8:= temp;
  #L3a9558.  if v8 == 0 then goto L3a955e;
  #L3a955c.  goto L3a95ae;
  #L3a955e.  v1:= new `java.lang.IllegalArgumentException`;
  #L3a9562.  v3:= new `java.lang.StringBuilder`;
  #L3a9566.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a956c.  v4:= "Multiple charsets defined: \"" @kind object;
  #L3a9570.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9576.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a957c.  v4:= "\" and: \"" @kind object;
  #L3a9580.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9586.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a958c.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9592.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9598.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a959e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a95a4.  v11:= temp @kind object;
  #L3a95a6.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a95ac.  throw v1;
  #L3a95ae.  v6:= v0 @kind object;
  #L3a95b0.  call temp:= `end`(v7) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L3a95b6.  v0:= temp;
  #L3a95b8.  goto L3a94b2;
  #L3a95bc.  v1:= new `java.lang.IllegalArgumentException`;
  #L3a95c0.  v3:= new `java.lang.StringBuilder`;
  #L3a95c4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a95ca.  v4:= "Parameter is not formatted correctly: \"" @kind object;
  #L3a95ce.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a95d4.  call temp:= `substring`(v11, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3a95da.  v0:= temp @kind object;
  #L3a95dc.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a95e2.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a95e8.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a95ee.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a95f4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a95fa.  v11:= temp @kind object;
  #L3a95fc.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9602.  throw v1;
  #L3a9604.  v0:= new `okhttp3.t`;
  #L3a9608.  call `<init>`(v0, v11, v3, v4, v6) @signature `Lokhttp3/t;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3a960e.  return v0 @kind object;
  #L3a9610.  v0:= new `java.lang.IllegalArgumentException`;
  #L3a9614.  v1:= new `java.lang.StringBuilder`;
  #L3a9618.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a961e.  v3:= "No subtype found for: \"" @kind object;
  #L3a9622.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9628.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a962e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9634.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a963a.  v11:= temp @kind object;
  #L3a963c.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9642.  throw v0;
}
procedure `okhttp3.t` `d`(`java.lang.String` v0 @kind object) @signature `Lokhttp3/t;.d:(Ljava/lang/String;)Lokhttp3/t;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a9654.  call temp:= `c`(v0) @signature `Lokhttp3/t;.c:(Ljava/lang/String;)Lokhttp3/t;` @kind static;
  #L3a965a.  v0:= temp @kind object;
  #L3a965c.  return v0 @kind object;
  #L3a965e.  v0:= 0I;
  #L3a9660.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3a9654..L3a965c] goto L3a965e;
}
procedure `java.nio.charset.Charset` `a`(`okhttp3.t` v1 @kind this) @signature `Lokhttp3/t;.a:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9408.  v0:= 0I;
  #L3a940a.  call temp:= `b`(v1, v0) @signature `Lokhttp3/t;.b:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L3a9410.  v0:= temp @kind object;
  #L3a9412.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `b`(`okhttp3.t` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lokhttp3/t;.b:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9424.  v0:= v1.`okhttp3.t.d` @type ^`java.lang.String` @kind object;
  #L3a9428.  if v0 == 0 then goto L3a9434;
  #L3a942c.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3a9432.  v2:= temp @kind object;
  #L3a9434.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3a9424..L3a9434] goto L3a9434;
}
procedure `boolean` `equals`(`okhttp3.t` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/t;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9398.  v0:= instanceof @variable v2 @type ^`okhttp3.t` @kind boolean;
  #L3a939c.  if v0 == 0 then goto L3a93bc;
  #L3a93a0.  v2:= (`okhttp3.t`) v2 @kind object;
  #L3a93a4.  v2:= v2.`okhttp3.t.a` @type ^`java.lang.String` @kind object;
  #L3a93a8.  v0:= v1.`okhttp3.t.a` @type ^`java.lang.String` @kind object;
  #L3a93ac.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a93b2.  v2:= temp;
  #L3a93b4.  if v2 == 0 then goto L3a93bc;
  #L3a93b8.  v2:= 1I;
  #L3a93ba.  goto L3a93be;
  #L3a93bc.  v2:= 0I;
  #L3a93be.  return v2;
}
procedure `int` `hashCode`(`okhttp3.t` v1 @kind this) @signature `Lokhttp3/t;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a93d0.  v0:= v1.`okhttp3.t.a` @type ^`java.lang.String` @kind object;
  #L3a93d4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a93da.  v0:= temp;
  #L3a93dc.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.t` v1 @kind this) @signature `Lokhttp3/t;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a93f0.  v0:= v1.`okhttp3.t.a` @type ^`java.lang.String` @kind object;
  #L3a93f4.  return v0 @kind object;
}
