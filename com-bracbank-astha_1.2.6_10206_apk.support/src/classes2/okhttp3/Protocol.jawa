record `okhttp3.Protocol` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.Protocol.protocol` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.Protocol` `@@okhttp3.Protocol.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol`[] `@@okhttp3.Protocol.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/Protocol;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3aa144.  v0:= new `okhttp3.Protocol`;
  #L3aa148.  v1:= "HTTP_1_0" @kind object;
  #L3aa14c.  v2:= 0I;
  #L3aa14e.  v3:= "http/1.0" @kind object;
  #L3aa152.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3aa158.  `@@okhttp3.Protocol.a` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L3aa15c.  v1:= new `okhttp3.Protocol`;
  #L3aa160.  v3:= "HTTP_1_1" @kind object;
  #L3aa164.  v4:= 1I;
  #L3aa166.  v5:= "http/1.1" @kind object;
  #L3aa16a.  call `<init>`(v1, v3, v4, v5) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3aa170.  `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L3aa174.  v3:= new `okhttp3.Protocol`;
  #L3aa178.  v5:= "SPDY_3" @kind object;
  #L3aa17c.  v6:= 2I;
  #L3aa17e.  v7:= "spdy/3.1" @kind object;
  #L3aa182.  call `<init>`(v3, v5, v6, v7) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3aa188.  `@@okhttp3.Protocol.c` @type ^`okhttp3.Protocol` := v3 @kind object;
  #L3aa18c.  v5:= new `okhttp3.Protocol`;
  #L3aa190.  v7:= "HTTP_2" @kind object;
  #L3aa194.  v8:= 3I;
  #L3aa196.  v9:= "h2" @kind object;
  #L3aa19a.  call `<init>`(v5, v7, v8, v9) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3aa1a0.  `@@okhttp3.Protocol.d` @type ^`okhttp3.Protocol` := v5 @kind object;
  #L3aa1a4.  v7:= new `okhttp3.Protocol`;
  #L3aa1a8.  v9:= "H2_PRIOR_KNOWLEDGE" @kind object;
  #L3aa1ac.  v10:= 4I;
  #L3aa1ae.  v11:= "h2_prior_knowledge" @kind object;
  #L3aa1b2.  call `<init>`(v7, v9, v10, v11) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3aa1b8.  `@@okhttp3.Protocol.e` @type ^`okhttp3.Protocol` := v7 @kind object;
  #L3aa1bc.  v9:= new `okhttp3.Protocol`;
  #L3aa1c0.  v11:= "QUIC" @kind object;
  #L3aa1c4.  v12:= 5I;
  #L3aa1c6.  v13:= "quic" @kind object;
  #L3aa1ca.  call `<init>`(v9, v11, v12, v13) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3aa1d0.  `@@okhttp3.Protocol.f` @type ^`okhttp3.Protocol` := v9 @kind object;
  #L3aa1d4.  v11:= 6I;
  #L3aa1d6.  v11:= new `okhttp3.Protocol`[v11];
  #L3aa1da.  v11[v2]:= v0 @kind object;
  #L3aa1de.  v11[v4]:= v1 @kind object;
  #L3aa1e2.  v11[v6]:= v3 @kind object;
  #L3aa1e6.  v11[v8]:= v5 @kind object;
  #L3aa1ea.  v11[v10]:= v7 @kind object;
  #L3aa1ee.  v11[v12]:= v9 @kind object;
  #L3aa1f2.  `@@okhttp3.Protocol.g` @type ^`okhttp3.Protocol`[] := v11 @kind object;
  #L3aa1f6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Protocol` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3aa208.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3aa20e.  v0.`okhttp3.Protocol.protocol` @type ^`java.lang.String` := v3 @kind object;
  #L3aa212.  return @kind void;
}
procedure `okhttp3.Protocol` `a`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/Protocol;.a:(Ljava/lang/String;)Lokhttp3/Protocol;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3aa038.  v0:= `@@okhttp3.Protocol.a` @type ^`okhttp3.Protocol` @kind object;
  #L3aa03c.  v1:= v0.`okhttp3.Protocol.protocol` @type ^`java.lang.String` @kind object;
  #L3aa040.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3aa046.  v1:= temp;
  #L3aa048.  if v1 == 0 then goto L3aa04e;
  #L3aa04c.  return v0 @kind object;
  #L3aa04e.  v0:= `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol` @kind object;
  #L3aa052.  v1:= v0.`okhttp3.Protocol.protocol` @type ^`java.lang.String` @kind object;
  #L3aa056.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3aa05c.  v1:= temp;
  #L3aa05e.  if v1 == 0 then goto L3aa064;
  #L3aa062.  return v0 @kind object;
  #L3aa064.  v0:= `@@okhttp3.Protocol.e` @type ^`okhttp3.Protocol` @kind object;
  #L3aa068.  v1:= v0.`okhttp3.Protocol.protocol` @type ^`java.lang.String` @kind object;
  #L3aa06c.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3aa072.  v1:= temp;
  #L3aa074.  if v1 == 0 then goto L3aa07a;
  #L3aa078.  return v0 @kind object;
  #L3aa07a.  v0:= `@@okhttp3.Protocol.d` @type ^`okhttp3.Protocol` @kind object;
  #L3aa07e.  v1:= v0.`okhttp3.Protocol.protocol` @type ^`java.lang.String` @kind object;
  #L3aa082.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3aa088.  v1:= temp;
  #L3aa08a.  if v1 == 0 then goto L3aa090;
  #L3aa08e.  return v0 @kind object;
  #L3aa090.  v0:= `@@okhttp3.Protocol.c` @type ^`okhttp3.Protocol` @kind object;
  #L3aa094.  v1:= v0.`okhttp3.Protocol.protocol` @type ^`java.lang.String` @kind object;
  #L3aa098.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3aa09e.  v1:= temp;
  #L3aa0a0.  if v1 == 0 then goto L3aa0a6;
  #L3aa0a4.  return v0 @kind object;
  #L3aa0a6.  v0:= `@@okhttp3.Protocol.f` @type ^`okhttp3.Protocol` @kind object;
  #L3aa0aa.  v1:= v0.`okhttp3.Protocol.protocol` @type ^`java.lang.String` @kind object;
  #L3aa0ae.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3aa0b4.  v1:= temp;
  #L3aa0b6.  if v1 == 0 then goto L3aa0bc;
  #L3aa0ba.  return v0 @kind object;
  #L3aa0bc.  v0:= new `java.io.IOException`;
  #L3aa0c0.  v1:= new `java.lang.StringBuilder`;
  #L3aa0c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa0ca.  v2:= "Unexpected protocol: " @kind object;
  #L3aa0ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa0d4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa0da.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa0e0.  v3:= temp @kind object;
  #L3aa0e2.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa0e8.  throw v0;
}
procedure `okhttp3.Protocol` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/Protocol;.valueOf:(Ljava/lang/String;)Lokhttp3/Protocol;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3aa0fc.  v0:= constclass @type ^`okhttp3.Protocol` @kind object;
  #L3aa100.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3aa106.  v1:= temp @kind object;
  #L3aa108.  v1:= (`okhttp3.Protocol`) v1 @kind object;
  #L3aa10c.  return v1 @kind object;
}
procedure `okhttp3.Protocol`[] `values`() @signature `Lokhttp3/Protocol;.values:()[Lokhttp3/Protocol;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3aa120.  v0:= `@@okhttp3.Protocol.g` @type ^`okhttp3.Protocol`[] @kind object;
  #L3aa124.  call temp:= `clone`(v0) @signature `[Lokhttp3/Protocol;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3aa12a.  v0:= temp @kind object;
  #L3aa12c.  v0:= (`okhttp3.Protocol`[]) v0 @kind object;
  #L3aa130.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Protocol` v1 @kind this) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa020.  v0:= v1.`okhttp3.Protocol.protocol` @type ^`java.lang.String` @kind object;
  #L3aa024.  return v0 @kind object;
}
