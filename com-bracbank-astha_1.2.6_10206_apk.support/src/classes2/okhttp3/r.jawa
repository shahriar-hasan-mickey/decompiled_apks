record `okhttp3.r` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.r.a` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.r.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.r.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.r.d` @AccessFlag FINAL;
  `int` `okhttp3.r.e` @AccessFlag FINAL;
  `java.util.List` `okhttp3.r.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.r.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.r.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.r.i` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@okhttp3.r.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a9014.  v0:= 16I;
  #L3a9018.  v0:= new `char`[v0];
  #L3a901c.  goto L3a9028;
  #L3a9022.  `@@okhttp3.r.j` @type ^`char`[] := v0 @kind object;
  #L3a9026.  return @kind void;
  #L3a9028.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L3a904f.  goto L3a9022;
}
procedure `void` `<init>`(`okhttp3.r` v4 @kind this, `okhttp3.r$a` v5 @kind object) @signature `Lokhttp3/r;.<init>:(Lokhttp3/r$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a9060.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a9066.  v0:= v5.`okhttp3.r$a.a` @type ^`java.lang.String` @kind object;
  #L3a906a.  v4.`okhttp3.r.a` @type ^`java.lang.String` := v0 @kind object;
  #L3a906e.  v0:= v5.`okhttp3.r$a.b` @type ^`java.lang.String` @kind object;
  #L3a9072.  v1:= 0I;
  #L3a9074.  call temp:= `t`(v0, v1) @signature `Lokhttp3/r;.t:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L3a907a.  v0:= temp @kind object;
  #L3a907c.  v4.`okhttp3.r.b` @type ^`java.lang.String` := v0 @kind object;
  #L3a9080.  v0:= v5.`okhttp3.r$a.c` @type ^`java.lang.String` @kind object;
  #L3a9084.  call temp:= `t`(v0, v1) @signature `Lokhttp3/r;.t:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L3a908a.  v0:= temp @kind object;
  #L3a908c.  v4.`okhttp3.r.c` @type ^`java.lang.String` := v0 @kind object;
  #L3a9090.  v0:= v5.`okhttp3.r$a.d` @type ^`java.lang.String` @kind object;
  #L3a9094.  v4.`okhttp3.r.d` @type ^`java.lang.String` := v0 @kind object;
  #L3a9098.  call temp:= `c`(v5) @signature `Lokhttp3/r$a;.c:()I` @kind virtual;
  #L3a909e.  v0:= temp;
  #L3a90a0.  v4.`okhttp3.r.e` @type ^`int` := v0;
  #L3a90a4.  v0:= v5.`okhttp3.r$a.f` @type ^`java.util.List` @kind object;
  #L3a90a8.  call temp:= `u`(v4, v0, v1) @signature `Lokhttp3/r;.u:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L3a90ae.  v0:= temp @kind object;
  #L3a90b0.  v4.`okhttp3.r.f` @type ^`java.util.List` := v0 @kind object;
  #L3a90b4.  v0:= v5.`okhttp3.r$a.g` @type ^`java.util.List` @kind object;
  #L3a90b8.  v2:= 0I;
  #L3a90ba.  if v0 == 0 then goto L3a90ca;
  #L3a90be.  v3:= 1I;
  #L3a90c0.  call temp:= `u`(v4, v0, v3) @signature `Lokhttp3/r;.u:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L3a90c6.  v0:= temp @kind object;
  #L3a90c8.  goto L3a90cc;
  #L3a90ca.  v0:= v2 @kind object;
  #L3a90cc.  v4.`okhttp3.r.g` @type ^`java.util.List` := v0 @kind object;
  #L3a90d0.  v0:= v5.`okhttp3.r$a.h` @type ^`java.lang.String` @kind object;
  #L3a90d4.  if v0 == 0 then goto L3a90e0;
  #L3a90d8.  call temp:= `t`(v0, v1) @signature `Lokhttp3/r;.t:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L3a90de.  v2:= temp @kind object;
  #L3a90e0.  v4.`okhttp3.r.h` @type ^`java.lang.String` := v2 @kind object;
  #L3a90e4.  call temp:= `toString`(v5) @signature `Lokhttp3/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a90ea.  v5:= temp @kind object;
  #L3a90ec.  v4.`okhttp3.r.i` @type ^`java.lang.String` := v5 @kind object;
  #L3a90f0.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 , `java.lang.String` v14 @kind object, `boolean` v15 , `boolean` v16 , `boolean` v17 , `boolean` v18 , `java.nio.charset.Charset` v19 @kind object) @signature `Lokhttp3/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a8880.  v1:= v11 @kind object;
  #L3a8882.  v3:= v13;
  #L3a8884.  v2:= v12;
  #L3a8886.  if v2 >= v3 then goto L3a8932;
  #L3a888a.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L3a8890.  v0:= temp;
  #L3a8892.  v4:= 32I;
  #L3a8896.  if v0 < v4 then goto L3a88f4;
  #L3a889a.  v4:= 127I;
  #L3a889e.  if v0 == v4 then goto L3a88f4;
  #L3a88a2.  v4:= 128I;
  #L3a88a6.  if v0 < v4 then goto L3a88ae;
  #L3a88aa.  if v18 != 0 then goto L3a88f4;
  #L3a88ae.  v4:= v14 @kind object;
  #L3a88b0.  call temp:= `indexOf`(v14, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3a88b6.  v5:= temp;
  #L3a88b8.  v6:= -1I;
  #L3a88ba.  if v5 != v6 then goto L3a88f6;
  #L3a88be.  v5:= 37I;
  #L3a88c2.  if v0 != v5 then goto L3a88da;
  #L3a88c6.  if v15 == 0 then goto L3a88f6;
  #L3a88ca.  if v16 == 0 then goto L3a88da;
  #L3a88ce.  call temp:= `w`(v11, v2, v13) @signature `Lokhttp3/r;.w:(Ljava/lang/String;II)Z` @kind static;
  #L3a88d4.  v5:= temp;
  #L3a88d6.  if v5 == 0 then goto L3a88f6;
  #L3a88da.  v5:= 43I;
  #L3a88de.  if v0 != v5 then goto L3a88e8;
  #L3a88e2.  if v17 == 0 then goto L3a88e8;
  #L3a88e6.  goto L3a88f6;
  #L3a88e8.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L3a88ee.  v0:= temp;
  #L3a88f0.  v2:= v2 + v0 @kind int;
  #L3a88f2.  goto L3a8886;
  #L3a88f4.  v4:= v14 @kind object;
  #L3a88f6.  v10:= new `okio.c`;
  #L3a88fa.  call `<init>`(v10) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3a8900.  v0:= v12;
  #L3a8902.  call temp:= `v0`(v10, v11, v12, v2) @signature `Lokio/c;.v0:(Ljava/lang/String;II)Lokio/c;` @kind virtual;
  #L3a8908.  v0:= v10 @kind object;
  #L3a890a.  v1:= v11 @kind object;
  #L3a890c.  v3:= v13;
  #L3a890e.  v4:= v14 @kind object;
  #L3a8910.  v5:= v15;
  #L3a8912.  v6:= v16;
  #L3a8916.  v7:= v17;
  #L3a891a.  v8:= v18;
  #L3a891e.  v9:= v19 @kind object;
  #L3a8922.  call `c`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/r;.c:(Lokio/c;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L3a8928.  call temp:= `d0`(v10) @signature `Lokio/c;.d0:()Ljava/lang/String;` @kind virtual;
  #L3a892e.  v0:= temp @kind object;
  #L3a8930.  return v0 @kind object;
  #L3a8932.  v0:= v12;
  #L3a8934.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a893a.  v0:= temp @kind object;
  #L3a893c.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lokhttp3/r;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3a8950.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8956.  v2:= temp;
  #L3a8958.  v1:= 0I;
  #L3a895a.  v8:= 0I;
  #L3a895c.  v0:= v9 @kind object;
  #L3a895e.  v3:= v10 @kind object;
  #L3a8960.  v4:= v11;
  #L3a8962.  v5:= v12;
  #L3a8964.  v6:= v13;
  #L3a8966.  v7:= v14;
  #L3a8968.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3a896e.  v9:= temp @kind object;
  #L3a8970.  return v9 @kind object;
}
procedure `void` `c`(`okio.c` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Lokhttp3/r;.c:(Lokio/c;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a9104.  v0:= 0I;
  #L3a9106.  if v8 >= v9 then goto L3a923c;
  #L3a910a.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L3a9110.  v1:= temp;
  #L3a9112.  if v11 == 0 then goto L3a913a;
  #L3a9116.  v2:= 9I;
  #L3a911a.  if v1 == v2 then goto L3a922e;
  #L3a911e.  v2:= 10I;
  #L3a9122.  if v1 == v2 then goto L3a922e;
  #L3a9126.  v2:= 12I;
  #L3a912a.  if v1 == v2 then goto L3a922e;
  #L3a912e.  v2:= 13I;
  #L3a9132.  if v1 != v2 then goto L3a913a;
  #L3a9136.  goto L3a922e;
  #L3a913a.  v2:= 43I;
  #L3a913e.  if v1 != v2 then goto L3a915e;
  #L3a9142.  if v13 == 0 then goto L3a915e;
  #L3a9146.  if v11 == 0 then goto L3a9150;
  #L3a914a.  v2:= "+" @kind object;
  #L3a914e.  goto L3a9154;
  #L3a9150.  v2:= "%2B" @kind object;
  #L3a9154.  call temp:= `u0`(v6, v2) @signature `Lokio/c;.u0:(Ljava/lang/String;)Lokio/c;` @kind virtual;
  #L3a915a.  goto L3a922e;
  #L3a915e.  v2:= 32I;
  #L3a9162.  v3:= 37I;
  #L3a9166.  if v1 < v2 then goto L3a91ae;
  #L3a916a.  v2:= 127I;
  #L3a916e.  if v1 == v2 then goto L3a91ae;
  #L3a9172.  v2:= 128I;
  #L3a9176.  if v1 < v2 then goto L3a917e;
  #L3a917a.  if v14 != 0 then goto L3a91ae;
  #L3a917e.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3a9184.  v2:= temp;
  #L3a9186.  v4:= -1I;
  #L3a9188.  if v2 != v4 then goto L3a91ae;
  #L3a918c.  if v1 != v3 then goto L3a91a6;
  #L3a9190.  if v11 == 0 then goto L3a91ae;
  #L3a9194.  if v12 == 0 then goto L3a91a6;
  #L3a9198.  call temp:= `w`(v7, v8, v9) @signature `Lokhttp3/r;.w:(Ljava/lang/String;II)Z` @kind static;
  #L3a919e.  v2:= temp;
  #L3a91a0.  if v2 != 0 then goto L3a91a6;
  #L3a91a4.  goto L3a91ae;
  #L3a91a6.  call temp:= `w0`(v6, v1) @signature `Lokio/c;.w0:(I)Lokio/c;` @kind virtual;
  #L3a91ac.  goto L3a922e;
  #L3a91ae.  if v0 != 0 then goto L3a91bc;
  #L3a91b2.  v0:= new `okio.c`;
  #L3a91b6.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3a91bc.  if v15 == 0 then goto L3a91e4;
  #L3a91c0.  v2:= `@@t2.c.j` @type ^`java.nio.charset.Charset` @kind object;
  #L3a91c4.  call temp:= `equals`(v15, v2) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a91ca.  v2:= temp;
  #L3a91cc.  if v2 == 0 then goto L3a91d2;
  #L3a91d0.  goto L3a91e4;
  #L3a91d2.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L3a91d8.  v2:= temp;
  #L3a91da.  v2:= v2 + v8 @kind int;
  #L3a91dc.  call temp:= `s0`(v0, v7, v8, v2, v15) @signature `Lokio/c;.s0:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/c;` @kind virtual;
  #L3a91e2.  goto L3a91ea;
  #L3a91e4.  call temp:= `w0`(v0, v1) @signature `Lokio/c;.w0:(I)Lokio/c;` @kind virtual;
  #L3a91ea.  call temp:= `n`(v0) @signature `Lokio/c;.n:()Z` @kind virtual;
  #L3a91f0.  v2:= temp;
  #L3a91f2.  if v2 != 0 then goto L3a922e;
  #L3a91f6.  call temp:= `readByte`(v0) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3a91fc.  v2:= temp;
  #L3a91fe.  v2:= v2 ^& 255;
  #L3a9202.  call temp:= `o0`(v6, v3) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3a9208.  v4:= `@@okhttp3.r.j` @type ^`char`[] @kind object;
  #L3a920c.  v5:= v2 ^> 4;
  #L3a9210.  v5:= v5 ^& 15;
  #L3a9214.  v5:= v4[v5] @kind char;
  #L3a9218.  call temp:= `o0`(v6, v5) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3a921e.  v2:= v2 ^& 15;
  #L3a9222.  v2:= v4[v2] @kind char;
  #L3a9226.  call temp:= `o0`(v6, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3a922c.  goto L3a91ea;
  #L3a922e.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L3a9234.  v1:= temp;
  #L3a9236.  v8:= v8 + v1 @kind int;
  #L3a9238.  goto L3a9106;
  #L3a923c.  return @kind void;
}
procedure `int` `d`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/r;.d:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a8808.  v0:= "http" @kind object;
  #L3a880c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a8812.  v0:= temp;
  #L3a8814.  if v0 == 0 then goto L3a881e;
  #L3a8818.  v1:= 80I;
  #L3a881c.  return v1;
  #L3a881e.  v0:= "https" @kind object;
  #L3a8822.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a8828.  v1:= temp;
  #L3a882a.  if v1 == 0 then goto L3a8834;
  #L3a882e.  v1:= 443I;
  #L3a8832.  return v1;
  #L3a8834.  v1:= -1I;
  #L3a8836.  return v1;
}
procedure `okhttp3.r` `k`(`java.lang.String` v2 @kind object) @signature `Lokhttp3/r;.k:(Ljava/lang/String;)Lokhttp3/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a8eb4.  v0:= new `okhttp3.r$a`;
  #L3a8eb8.  call `<init>`(v0) @signature `Lokhttp3/r$a;.<init>:()V` @kind direct;
  #L3a8ebe.  v1:= 0I;
  #L3a8ec0.  call temp:= `i`(v0, v1, v2) @signature `Lokhttp3/r$a;.i:(Lokhttp3/r;Ljava/lang/String;)Lokhttp3/r$a;` @kind virtual;
  #L3a8ec6.  v2:= temp @kind object;
  #L3a8ec8.  call temp:= `a`(v2) @signature `Lokhttp3/r$a;.a:()Lokhttp3/r;` @kind virtual;
  #L3a8ece.  v2:= temp @kind object;
  #L3a8ed0.  return v2 @kind object;
}
procedure `void` `n`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/r;.n:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a9250.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a9256.  v0:= temp;
  #L3a9258.  v1:= 0I;
  #L3a925a.  if v1 >= v0 then goto L3a92a8;
  #L3a925e.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a9264.  v2:= temp @kind object;
  #L3a9266.  v2:= (`java.lang.String`) v2 @kind object;
  #L3a926a.  v3:= v1 + 1;
  #L3a926e.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a9274.  v3:= temp @kind object;
  #L3a9276.  v3:= (`java.lang.String`) v3 @kind object;
  #L3a927a.  if v1 <= 0 then goto L3a9288;
  #L3a927e.  v4:= 38I;
  #L3a9282.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9288.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a928e.  if v3 == 0 then goto L3a92a2;
  #L3a9292.  v2:= 61I;
  #L3a9296.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a929c.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a92a2.  v1:= v1 + 2;
  #L3a92a6.  goto L3a925a;
  #L3a92a8.  return @kind void;
}
procedure `okhttp3.r` `q`(`java.lang.String` v0 @kind object) @signature `Lokhttp3/r;.q:(Ljava/lang/String;)Lokhttp3/r;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a8ee4.  call temp:= `k`(v0) @signature `Lokhttp3/r;.k:(Ljava/lang/String;)Lokhttp3/r;` @kind static;
  #L3a8eea.  v0:= temp @kind object;
  #L3a8eec.  return v0 @kind object;
  #L3a8eee.  v0:= 0I;
  #L3a8ef0.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3a8ee4..L3a8eec] goto L3a8eee;
}
procedure `void` `r`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/r;.r:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a92bc.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a92c2.  v0:= temp;
  #L3a92c4.  v1:= 0I;
  #L3a92c6.  if v1 >= v0 then goto L3a92ec;
  #L3a92ca.  v2:= 47I;
  #L3a92ce.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a92d4.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a92da.  v2:= temp @kind object;
  #L3a92dc.  v2:= (`java.lang.String`) v2 @kind object;
  #L3a92e0.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a92e6.  v1:= v1 + 1;
  #L3a92ea.  goto L3a92c6;
  #L3a92ec.  return @kind void;
}
procedure `java.lang.String` `s`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lokhttp3/r;.s:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a8b74.  v0:= v4;
  #L3a8b76.  if v0 >= v5 then goto L3a8bbe;
  #L3a8b7a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a8b80.  v1:= temp;
  #L3a8b82.  v2:= 37I;
  #L3a8b86.  if v1 == v2 then goto L3a8b9e;
  #L3a8b8a.  v2:= 43I;
  #L3a8b8e.  if v1 != v2 then goto L3a8b98;
  #L3a8b92.  if v6 == 0 then goto L3a8b98;
  #L3a8b96.  goto L3a8b9e;
  #L3a8b98.  v0:= v0 + 1;
  #L3a8b9c.  goto L3a8b76;
  #L3a8b9e.  v1:= new `okio.c`;
  #L3a8ba2.  call `<init>`(v1) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3a8ba8.  call temp:= `v0`(v1, v3, v4, v0) @signature `Lokio/c;.v0:(Ljava/lang/String;II)Lokio/c;` @kind virtual;
  #L3a8bae.  call `v`(v1, v3, v0, v5, v6) @signature `Lokhttp3/r;.v:(Lokio/c;Ljava/lang/String;IIZ)V` @kind static;
  #L3a8bb4.  call temp:= `d0`(v1) @signature `Lokio/c;.d0:()Ljava/lang/String;` @kind virtual;
  #L3a8bba.  v3:= temp @kind object;
  #L3a8bbc.  return v3 @kind object;
  #L3a8bbe.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a8bc4.  v3:= temp @kind object;
  #L3a8bc6.  return v3 @kind object;
}
procedure `java.lang.String` `t`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/r;.t:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3a8b50.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8b56.  v0:= temp;
  #L3a8b58.  v1:= 0I;
  #L3a8b5a.  call temp:= `s`(v2, v1, v0, v3) @signature `Lokhttp3/r;.s:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L3a8b60.  v2:= temp @kind object;
  #L3a8b62.  return v2 @kind object;
}
procedure `java.util.List` `u`(`okhttp3.r` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/r;.u:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a8dc0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a8dc6.  v0:= temp;
  #L3a8dc8.  v1:= new `java.util.ArrayList`;
  #L3a8dcc.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3a8dd2.  v2:= 0I;
  #L3a8dd4.  if v2 >= v0 then goto L3a8e00;
  #L3a8dd8.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a8dde.  v3:= temp @kind object;
  #L3a8de0.  v3:= (`java.lang.String`) v3 @kind object;
  #L3a8de4.  if v3 == 0 then goto L3a8df2;
  #L3a8de8.  call temp:= `t`(v3, v6) @signature `Lokhttp3/r;.t:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L3a8dee.  v3:= temp @kind object;
  #L3a8df0.  goto L3a8df4;
  #L3a8df2.  v3:= 0I;
  #L3a8df4.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a8dfa.  v2:= v2 + 1;
  #L3a8dfe.  goto L3a8dd4;
  #L3a8e00.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3a8e06.  v5:= temp @kind object;
  #L3a8e08.  return v5 @kind object;
}
procedure `void` `v`(`okio.c` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lokhttp3/r;.v:(Lokio/c;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a9300.  if v7 >= v8 then goto L3a9384;
  #L3a9304.  call temp:= `codePointAt`(v6, v7) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L3a930a.  v0:= temp;
  #L3a930c.  v1:= 37I;
  #L3a9310.  if v0 != v1 then goto L3a935a;
  #L3a9314.  v1:= v7 + 2;
  #L3a9318.  if v1 >= v8 then goto L3a935a;
  #L3a931c.  v2:= v7 + 1;
  #L3a9320.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a9326.  v2:= temp;
  #L3a9328.  call temp:= `k`(v2) @signature `Lt2/c;.k:(C)I` @kind static;
  #L3a932e.  v2:= temp;
  #L3a9330.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a9336.  v3:= temp;
  #L3a9338.  call temp:= `k`(v3) @signature `Lt2/c;.k:(C)I` @kind static;
  #L3a933e.  v3:= temp;
  #L3a9340.  v4:= -1I;
  #L3a9342.  if v2 == v4 then goto L3a9372;
  #L3a9346.  if v3 == v4 then goto L3a9372;
  #L3a934a.  v7:= v2 ^< 4;
  #L3a934e.  v7:= v7 + v3 @kind int;
  #L3a9350.  call temp:= `o0`(v5, v7) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3a9356.  v7:= v1;
  #L3a9358.  goto L3a9378;
  #L3a935a.  v1:= 43I;
  #L3a935e.  if v0 != v1 then goto L3a9372;
  #L3a9362.  if v9 == 0 then goto L3a9372;
  #L3a9366.  v1:= 32I;
  #L3a936a.  call temp:= `o0`(v5, v1) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3a9370.  goto L3a9378;
  #L3a9372.  call temp:= `w0`(v5, v0) @signature `Lokio/c;.w0:(I)Lokio/c;` @kind virtual;
  #L3a9378.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L3a937e.  v0:= temp;
  #L3a9380.  v7:= v7 + v0 @kind int;
  #L3a9382.  goto L3a9300;
  #L3a9384.  return @kind void;
}
procedure `boolean` `w`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/r;.w:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a87ac.  v0:= v4 + 2;
  #L3a87b0.  v1:= 1I;
  #L3a87b2.  if v0 >= v5 then goto L3a87f4;
  #L3a87b6.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a87bc.  v5:= temp;
  #L3a87be.  v2:= 37I;
  #L3a87c2.  if v5 != v2 then goto L3a87f4;
  #L3a87c6.  v4:= v4 + v1 @kind int;
  #L3a87c8.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a87ce.  v4:= temp;
  #L3a87d0.  call temp:= `k`(v4) @signature `Lt2/c;.k:(C)I` @kind static;
  #L3a87d6.  v4:= temp;
  #L3a87d8.  v5:= -1I;
  #L3a87da.  if v4 == v5 then goto L3a87f4;
  #L3a87de.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a87e4.  v3:= temp;
  #L3a87e6.  call temp:= `k`(v3) @signature `Lt2/c;.k:(C)I` @kind static;
  #L3a87ec.  v3:= temp;
  #L3a87ee.  if v3 == v5 then goto L3a87f4;
  #L3a87f2.  goto L3a87f6;
  #L3a87f4.  v1:= 0I;
  #L3a87f6.  return v1;
}
procedure `java.util.List` `z`(`java.lang.String` v5 @kind object) @signature `Lokhttp3/r;.z:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a8e1c.  v0:= new `java.util.ArrayList`;
  #L3a8e20.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a8e26.  v1:= 0I;
  #L3a8e28.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8e2e.  v2:= temp;
  #L3a8e30.  if v1 > v2 then goto L3a8ea2;
  #L3a8e34.  v2:= 38I;
  #L3a8e38.  call temp:= `indexOf`(v5, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3a8e3e.  v2:= temp;
  #L3a8e40.  v3:= -1I;
  #L3a8e42.  if v2 != v3 then goto L3a8e4e;
  #L3a8e46.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8e4c.  v2:= temp;
  #L3a8e4e.  v4:= 61I;
  #L3a8e52.  call temp:= `indexOf`(v5, v4, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3a8e58.  v4:= temp;
  #L3a8e5a.  if v4 == v3 then goto L3a8e86;
  #L3a8e5e.  if v4 <= v2 then goto L3a8e64;
  #L3a8e62.  goto L3a8e86;
  #L3a8e64.  call temp:= `substring`(v5, v1, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a8e6a.  v1:= temp @kind object;
  #L3a8e6c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a8e72.  v4:= v4 + 1;
  #L3a8e76.  call temp:= `substring`(v5, v4, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a8e7c.  v1:= temp @kind object;
  #L3a8e7e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a8e84.  goto L3a8e9c;
  #L3a8e86.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a8e8c.  v1:= temp @kind object;
  #L3a8e8e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a8e94.  v1:= 0I;
  #L3a8e96.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a8e9c.  v1:= v2 + 1;
  #L3a8ea0.  goto L3a8e28;
  #L3a8ea2.  return v0 @kind object;
}
procedure `java.lang.String` `A`(`okhttp3.r` v2 @kind this) @signature `Lokhttp3/r;.A:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8c14.  v0:= "/..." @kind object;
  #L3a8c18.  call temp:= `p`(v2, v0) @signature `Lokhttp3/r;.p:(Ljava/lang/String;)Lokhttp3/r$a;` @kind virtual;
  #L3a8c1e.  v0:= temp @kind object;
  #L3a8c20.  v1:= "" @kind object;
  #L3a8c24.  call temp:= `v`(v0, v1) @signature `Lokhttp3/r$a;.v:(Ljava/lang/String;)Lokhttp3/r$a;` @kind virtual;
  #L3a8c2a.  v0:= temp @kind object;
  #L3a8c2c.  call temp:= `k`(v0, v1) @signature `Lokhttp3/r$a;.k:(Ljava/lang/String;)Lokhttp3/r$a;` @kind virtual;
  #L3a8c32.  v0:= temp @kind object;
  #L3a8c34.  call temp:= `a`(v0) @signature `Lokhttp3/r$a;.a:()Lokhttp3/r;` @kind virtual;
  #L3a8c3a.  v0:= temp @kind object;
  #L3a8c3c.  call temp:= `toString`(v0) @signature `Lokhttp3/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8c42.  v0:= temp @kind object;
  #L3a8c44.  return v0 @kind object;
}
procedure `okhttp3.r` `B`(`okhttp3.r` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/r;.B:(Ljava/lang/String;)Lokhttp3/r;` @AccessFlag PUBLIC {
    temp;

  #L3a8f14.  call temp:= `p`(v0, v1) @signature `Lokhttp3/r;.p:(Ljava/lang/String;)Lokhttp3/r$a;` @kind virtual;
  #L3a8f1a.  v1:= temp @kind object;
  #L3a8f1c.  if v1 == 0 then goto L3a8f2a;
  #L3a8f20.  call temp:= `a`(v1) @signature `Lokhttp3/r$a;.a:()Lokhttp3/r;` @kind virtual;
  #L3a8f26.  v1:= temp @kind object;
  #L3a8f28.  goto L3a8f2c;
  #L3a8f2a.  v1:= 0I;
  #L3a8f2c.  return v1 @kind object;
}
procedure `java.lang.String` `C`(`okhttp3.r` v1 @kind this) @signature `Lokhttp3/r;.C:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8c58.  v0:= v1.`okhttp3.r.a` @type ^`java.lang.String` @kind object;
  #L3a8c5c.  return v0 @kind object;
}
procedure `java.net.URI` `D`(`okhttp3.r` v4 @kind this) @signature `Lokhttp3/r;.D:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a8c88.  call temp:= `o`(v4) @signature `Lokhttp3/r;.o:()Lokhttp3/r$a;` @kind virtual;
  #L3a8c8e.  v0:= temp @kind object;
  #L3a8c90.  call temp:= `q`(v0) @signature `Lokhttp3/r$a;.q:()Lokhttp3/r$a;` @kind virtual;
  #L3a8c96.  v0:= temp @kind object;
  #L3a8c98.  call temp:= `toString`(v0) @signature `Lokhttp3/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8c9e.  v0:= temp @kind object;
  #L3a8ca0.  v1:= new `java.net.URI`;
  #L3a8ca4.  call `<init>`(v1, v0) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8caa.  return v1 @kind object;
  #L3a8cac.  v1:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L3a8cae.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L3a8cb2.  v3:= "" @kind object;
  #L3a8cb6.  call temp:= `replaceAll`(v0, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3a8cbc.  v0:= temp @kind object;
  #L3a8cbe.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L3a8cc4.  v0:= temp @kind object;
  #L3a8cc6.  return v0 @kind object;
  #L3a8cc8.  v0:= new `java.lang.RuntimeException`;
  #L3a8ccc.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3a8cd2.  throw v0;
  catch `java.net.URISyntaxException` @[L3a8ca0..L3a8caa] goto L3a8cac;
  catch `java.lang.Exception` @[L3a8cae..L3a8cc6] goto L3a8cc8;
}
procedure `java.net.URL` `E`(`okhttp3.r` v2 @kind this) @signature `Lokhttp3/r;.E:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8d00.  v0:= new `java.net.URL`;
  #L3a8d04.  v1:= v2.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8d08.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8d0e.  return v0 @kind object;
  #L3a8d10.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L3a8d12.  v1:= new `java.lang.RuntimeException`;
  #L3a8d16.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3a8d1c.  throw v1;
  catch `java.net.MalformedURLException` @[L3a8d00..L3a8d0e] goto L3a8d10;
}
procedure `java.lang.String` `e`(`okhttp3.r` v2 @kind this) @signature `Lokhttp3/r;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8984.  v0:= v2.`okhttp3.r.h` @type ^`java.lang.String` @kind object;
  #L3a8988.  if v0 != 0 then goto L3a8990;
  #L3a898c.  v0:= 0I;
  #L3a898e.  return v0 @kind object;
  #L3a8990.  v0:= v2.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8994.  v1:= 35I;
  #L3a8998.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3a899e.  v0:= temp;
  #L3a89a0.  v0:= v0 + 1;
  #L3a89a4.  v1:= v2.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a89a8.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3a89ae.  v0:= temp @kind object;
  #L3a89b0.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.r` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8750.  v0:= instanceof @variable v2 @type ^`okhttp3.r` @kind boolean;
  #L3a8754.  if v0 == 0 then goto L3a8774;
  #L3a8758.  v2:= (`okhttp3.r`) v2 @kind object;
  #L3a875c.  v2:= v2.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8760.  v0:= v1.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8764.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a876a.  v2:= temp;
  #L3a876c.  if v2 == 0 then goto L3a8774;
  #L3a8770.  v2:= 1I;
  #L3a8772.  goto L3a8776;
  #L3a8774.  v2:= 0I;
  #L3a8776.  return v2;
}
procedure `java.lang.String` `f`(`okhttp3.r` v3 @kind this) @signature `Lokhttp3/r;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a89c4.  v0:= v3.`okhttp3.r.c` @type ^`java.lang.String` @kind object;
  #L3a89c8.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3a89ce.  v0:= temp;
  #L3a89d0.  if v0 == 0 then goto L3a89da;
  #L3a89d4.  v0:= "" @kind object;
  #L3a89d8.  return v0 @kind object;
  #L3a89da.  v0:= v3.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a89de.  v1:= 58I;
  #L3a89e2.  v2:= v3.`okhttp3.r.a` @type ^`java.lang.String` @kind object;
  #L3a89e6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a89ec.  v2:= temp;
  #L3a89ee.  v2:= v2 + 3;
  #L3a89f2.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3a89f8.  v0:= temp;
  #L3a89fa.  v0:= v0 + 1;
  #L3a89fe.  v1:= v3.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8a02.  v2:= 64I;
  #L3a8a06.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3a8a0c.  v1:= temp;
  #L3a8a0e.  v2:= v3.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8a12.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a8a18.  v0:= temp @kind object;
  #L3a8a1a.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`okhttp3.r` v4 @kind this) @signature `Lokhttp3/r;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a8a2c.  v0:= v4.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8a30.  v1:= v4.`okhttp3.r.a` @type ^`java.lang.String` @kind object;
  #L3a8a34.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8a3a.  v1:= temp;
  #L3a8a3c.  v1:= v1 + 3;
  #L3a8a40.  v2:= 47I;
  #L3a8a44.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3a8a4a.  v0:= temp;
  #L3a8a4c.  v1:= v4.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8a50.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8a56.  v2:= temp;
  #L3a8a58.  v3:= "?#" @kind object;
  #L3a8a5c.  call temp:= `o`(v1, v0, v2, v3) @signature `Lt2/c;.o:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L3a8a62.  v1:= temp;
  #L3a8a64.  v2:= v4.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8a68.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a8a6e.  v0:= temp @kind object;
  #L3a8a70.  return v0 @kind object;
}
procedure `java.util.List` `h`(`okhttp3.r` v6 @kind this) @signature `Lokhttp3/r;.h:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a8d40.  v0:= v6.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8d44.  v1:= v6.`okhttp3.r.a` @type ^`java.lang.String` @kind object;
  #L3a8d48.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8d4e.  v1:= temp;
  #L3a8d50.  v1:= v1 + 3;
  #L3a8d54.  v2:= 47I;
  #L3a8d58.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3a8d5e.  v0:= temp;
  #L3a8d60.  v1:= v6.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8d64.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8d6a.  v3:= temp;
  #L3a8d6c.  v4:= "?#" @kind object;
  #L3a8d70.  call temp:= `o`(v1, v0, v3, v4) @signature `Lt2/c;.o:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L3a8d76.  v1:= temp;
  #L3a8d78.  v3:= new `java.util.ArrayList`;
  #L3a8d7c.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a8d82.  if v0 >= v1 then goto L3a8dac;
  #L3a8d86.  v0:= v0 + 1;
  #L3a8d8a.  v4:= v6.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8d8e.  call temp:= `n`(v4, v0, v1, v2) @signature `Lt2/c;.n:(Ljava/lang/String;IIC)I` @kind static;
  #L3a8d94.  v4:= temp;
  #L3a8d96.  v5:= v6.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8d9a.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a8da0.  v0:= temp @kind object;
  #L3a8da2.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a8da8.  v0:= v4;
  #L3a8daa.  goto L3a8d82;
  #L3a8dac.  return v3 @kind object;
}
procedure `int` `hashCode`(`okhttp3.r` v1 @kind this) @signature `Lokhttp3/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8848.  v0:= v1.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a884c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a8852.  v0:= temp;
  #L3a8854.  return v0;
}
procedure `java.lang.String` `i`(`okhttp3.r` v4 @kind this) @signature `Lokhttp3/r;.i:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a8a84.  v0:= v4.`okhttp3.r.g` @type ^`java.util.List` @kind object;
  #L3a8a88.  if v0 != 0 then goto L3a8a90;
  #L3a8a8c.  v0:= 0I;
  #L3a8a8e.  return v0 @kind object;
  #L3a8a90.  v0:= v4.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8a94.  v1:= 63I;
  #L3a8a98.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3a8a9e.  v0:= temp;
  #L3a8aa0.  v0:= v0 + 1;
  #L3a8aa4.  v1:= v4.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8aa8.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8aae.  v2:= temp;
  #L3a8ab0.  v3:= 35I;
  #L3a8ab4.  call temp:= `n`(v1, v0, v2, v3) @signature `Lt2/c;.n:(Ljava/lang/String;IIC)I` @kind static;
  #L3a8aba.  v1:= temp;
  #L3a8abc.  v2:= v4.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8ac0.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a8ac6.  v0:= temp @kind object;
  #L3a8ac8.  return v0 @kind object;
}
procedure `java.lang.String` `j`(`okhttp3.r` v4 @kind this) @signature `Lokhttp3/r;.j:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a8adc.  v0:= v4.`okhttp3.r.b` @type ^`java.lang.String` @kind object;
  #L3a8ae0.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3a8ae6.  v0:= temp;
  #L3a8ae8.  if v0 == 0 then goto L3a8af2;
  #L3a8aec.  v0:= "" @kind object;
  #L3a8af0.  return v0 @kind object;
  #L3a8af2.  v0:= v4.`okhttp3.r.a` @type ^`java.lang.String` @kind object;
  #L3a8af6.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8afc.  v0:= temp;
  #L3a8afe.  v0:= v0 + 3;
  #L3a8b02.  v1:= v4.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8b06.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8b0c.  v2:= temp;
  #L3a8b0e.  v3:= ":@" @kind object;
  #L3a8b12.  call temp:= `o`(v1, v0, v2, v3) @signature `Lt2/c;.o:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L3a8b18.  v1:= temp;
  #L3a8b1a.  v2:= v4.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8b1e.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a8b24.  v0:= temp @kind object;
  #L3a8b26.  return v0 @kind object;
}
procedure `java.lang.String` `l`(`okhttp3.r` v1 @kind this) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8b38.  v0:= v1.`okhttp3.r.d` @type ^`java.lang.String` @kind object;
  #L3a8b3c.  return v0 @kind object;
}
procedure `boolean` `m`(`okhttp3.r` v2 @kind this) @signature `Lokhttp3/r;.m:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8788.  v0:= v2.`okhttp3.r.a` @type ^`java.lang.String` @kind object;
  #L3a878c.  v1:= "https" @kind object;
  #L3a8790.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a8796.  v0:= temp;
  #L3a8798.  return v0;
}
procedure `okhttp3.r$a` `o`(`okhttp3.r` v3 @kind this) @signature `Lokhttp3/r;.o:()Lokhttp3/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a8f40.  v0:= new `okhttp3.r$a`;
  #L3a8f44.  call `<init>`(v0) @signature `Lokhttp3/r$a;.<init>:()V` @kind direct;
  #L3a8f4a.  v1:= v3.`okhttp3.r.a` @type ^`java.lang.String` @kind object;
  #L3a8f4e.  v0.`okhttp3.r$a.a` @type ^`java.lang.String` := v1 @kind object;
  #L3a8f52.  call temp:= `j`(v3) @signature `Lokhttp3/r;.j:()Ljava/lang/String;` @kind virtual;
  #L3a8f58.  v1:= temp @kind object;
  #L3a8f5a.  v0.`okhttp3.r$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L3a8f5e.  call temp:= `f`(v3) @signature `Lokhttp3/r;.f:()Ljava/lang/String;` @kind virtual;
  #L3a8f64.  v1:= temp @kind object;
  #L3a8f66.  v0.`okhttp3.r$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L3a8f6a.  v1:= v3.`okhttp3.r.d` @type ^`java.lang.String` @kind object;
  #L3a8f6e.  v0.`okhttp3.r$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L3a8f72.  v1:= v3.`okhttp3.r.e` @type ^`int`;
  #L3a8f76.  v2:= v3.`okhttp3.r.a` @type ^`java.lang.String` @kind object;
  #L3a8f7a.  call temp:= `d`(v2) @signature `Lokhttp3/r;.d:(Ljava/lang/String;)I` @kind static;
  #L3a8f80.  v2:= temp;
  #L3a8f82.  if v1 == v2 then goto L3a8f8c;
  #L3a8f86.  v1:= v3.`okhttp3.r.e` @type ^`int`;
  #L3a8f8a.  goto L3a8f8e;
  #L3a8f8c.  v1:= -1I;
  #L3a8f8e.  v0.`okhttp3.r$a.e` @type ^`int` := v1;
  #L3a8f92.  v1:= v0.`okhttp3.r$a.f` @type ^`java.util.List` @kind object;
  #L3a8f96.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3a8f9c.  v1:= v0.`okhttp3.r$a.f` @type ^`java.util.List` @kind object;
  #L3a8fa0.  call temp:= `h`(v3) @signature `Lokhttp3/r;.h:()Ljava/util/List;` @kind virtual;
  #L3a8fa6.  v2:= temp @kind object;
  #L3a8fa8.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3a8fae.  call temp:= `i`(v3) @signature `Lokhttp3/r;.i:()Ljava/lang/String;` @kind virtual;
  #L3a8fb4.  v1:= temp @kind object;
  #L3a8fb6.  call temp:= `d`(v0, v1) @signature `Lokhttp3/r$a;.d:(Ljava/lang/String;)Lokhttp3/r$a;` @kind virtual;
  #L3a8fbc.  call temp:= `e`(v3) @signature `Lokhttp3/r;.e:()Ljava/lang/String;` @kind virtual;
  #L3a8fc2.  v1:= temp @kind object;
  #L3a8fc4.  v0.`okhttp3.r$a.h` @type ^`java.lang.String` := v1 @kind object;
  #L3a8fc8.  return v0 @kind object;
}
procedure `okhttp3.r$a` `p`(`okhttp3.r` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/r;.p:(Ljava/lang/String;)Lokhttp3/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8fdc.  v0:= new `okhttp3.r$a`;
  #L3a8fe0.  call `<init>`(v0) @signature `Lokhttp3/r$a;.<init>:()V` @kind direct;
  #L3a8fe6.  call temp:= `i`(v0, v1, v2) @signature `Lokhttp3/r$a;.i:(Lokhttp3/r;Ljava/lang/String;)Lokhttp3/r$a;` @kind virtual;
  #L3a8fec.  v2:= temp @kind object;
  #L3a8fee.  return v2 @kind object;
  #L3a8ff0.  v2:= 0I;
  #L3a8ff2.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3a8fdc..L3a8fee] goto L3a8ff0;
}
procedure `java.lang.String` `toString`(`okhttp3.r` v1 @kind this) @signature `Lokhttp3/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8c70.  v0:= v1.`okhttp3.r.i` @type ^`java.lang.String` @kind object;
  #L3a8c74.  return v0 @kind object;
}
procedure `int` `x`(`okhttp3.r` v1 @kind this) @signature `Lokhttp3/r;.x:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8868.  v0:= v1.`okhttp3.r.e` @type ^`int`;
  #L3a886c.  return v0;
}
procedure `java.lang.String` `y`(`okhttp3.r` v2 @kind this) @signature `Lokhttp3/r;.y:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8bd8.  v0:= v2.`okhttp3.r.g` @type ^`java.util.List` @kind object;
  #L3a8bdc.  if v0 != 0 then goto L3a8be4;
  #L3a8be0.  v0:= 0I;
  #L3a8be2.  return v0 @kind object;
  #L3a8be4.  v0:= new `java.lang.StringBuilder`;
  #L3a8be8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8bee.  v1:= v2.`okhttp3.r.g` @type ^`java.util.List` @kind object;
  #L3a8bf2.  call `n`(v0, v1) @signature `Lokhttp3/r;.n:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L3a8bf8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8bfe.  v0:= temp @kind object;
  #L3a8c00.  return v0 @kind object;
}
