record `okhttp3.p` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.TlsVersion` `okhttp3.p.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.g` `okhttp3.p.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.p.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.p.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.p` v0 @kind this, `okhttp3.TlsVersion` v1 @kind object, `okhttp3.g` v2 @kind object, `java.util.List` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/p;.<init>:(Lokhttp3/TlsVersion;Lokhttp3/g;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a7458.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a745e.  v0.`okhttp3.p.a` @type ^`okhttp3.TlsVersion` := v1 @kind object;
  #L3a7462.  v0.`okhttp3.p.b` @type ^`okhttp3.g` := v2 @kind object;
  #L3a7466.  v0.`okhttp3.p.c` @type ^`java.util.List` := v3 @kind object;
  #L3a746a.  v0.`okhttp3.p.d` @type ^`java.util.List` := v4 @kind object;
  #L3a746e.  return @kind void;
}
procedure `okhttp3.p` `b`(`javax.net.ssl.SSLSession` v4 @kind object) @signature `Lokhttp3/p;.b:(Ljavax/net/ssl/SSLSession;)Lokhttp3/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a7364.  call temp:= `getCipherSuite`(v4) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L3a736a.  v0:= temp @kind object;
  #L3a736c.  if v0 == 0 then goto L3a7428;
  #L3a7370.  v1:= "SSL_NULL_WITH_NULL_NULL" @kind object;
  #L3a7374.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a737a.  v1:= temp;
  #L3a737c.  if v1 != 0 then goto L3a7418;
  #L3a7380.  call temp:= `a`(v0) @signature `Lokhttp3/g;.a:(Ljava/lang/String;)Lokhttp3/g;` @kind static;
  #L3a7386.  v0:= temp @kind object;
  #L3a7388.  call temp:= `getProtocol`(v4) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L3a738e.  v1:= temp @kind object;
  #L3a7390.  if v1 == 0 then goto L3a7408;
  #L3a7394.  v2:= "NONE" @kind object;
  #L3a7398.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a739e.  v2:= temp;
  #L3a73a0.  if v2 != 0 then goto L3a73f8;
  #L3a73a4.  call temp:= `a`(v1) @signature `Lokhttp3/TlsVersion;.a:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L3a73aa.  v1:= temp @kind object;
  #L3a73ac.  call temp:= `getPeerCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L3a73b2.  v2:= temp @kind object;
  #L3a73b4.  goto L3a73b8;
  #L3a73b6.  v2:= 0I;
  #L3a73b8.  if v2 == 0 then goto L3a73c6;
  #L3a73bc.  call temp:= `u`(v2) @signature `Lt2/c;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a73c2.  v2:= temp @kind object;
  #L3a73c4.  goto L3a73ce;
  #L3a73c6.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3a73cc.  v2:= temp @kind object;
  #L3a73ce.  call temp:= `getLocalCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L3a73d4.  v4:= temp @kind object;
  #L3a73d6.  if v4 == 0 then goto L3a73e4;
  #L3a73da.  call temp:= `u`(v4) @signature `Lt2/c;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a73e0.  v4:= temp @kind object;
  #L3a73e2.  goto L3a73ec;
  #L3a73e4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3a73ea.  v4:= temp @kind object;
  #L3a73ec.  v3:= new `okhttp3.p`;
  #L3a73f0.  call `<init>`(v3, v1, v0, v2, v4) @signature `Lokhttp3/p;.<init>:(Lokhttp3/TlsVersion;Lokhttp3/g;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L3a73f6.  return v3 @kind object;
  #L3a73f8.  v4:= new `java.io.IOException`;
  #L3a73fc.  v0:= "tlsVersion == NONE" @kind object;
  #L3a7400.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7406.  throw v4;
  #L3a7408.  v4:= new `java.lang.IllegalStateException`;
  #L3a740c.  v0:= "tlsVersion == null" @kind object;
  #L3a7410.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7416.  throw v4;
  #L3a7418.  v4:= new `java.io.IOException`;
  #L3a741c.  v0:= "cipherSuite == SSL_NULL_WITH_NULL_NULL" @kind object;
  #L3a7420.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7426.  throw v4;
  #L3a7428.  v4:= new `java.lang.IllegalStateException`;
  #L3a742c.  v0:= "cipherSuite == null" @kind object;
  #L3a7430.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7436.  throw v4;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L3a73ac..L3a73b4] goto L3a73b6;
}
procedure `okhttp3.g` `a`(`okhttp3.p` v1 @kind this) @signature `Lokhttp3/p;.a:()Lokhttp3/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a734c.  v0:= v1.`okhttp3.p.b` @type ^`okhttp3.g` @kind object;
  #L3a7350.  return v0 @kind object;
}
procedure `java.util.List` `c`(`okhttp3.p` v1 @kind this) @signature `Lokhttp3/p;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7334.  v0:= v1.`okhttp3.p.c` @type ^`java.util.List` @kind object;
  #L3a7338.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.p` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lokhttp3/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7264.  v0:= instanceof @variable v4 @type ^`okhttp3.p` @kind boolean;
  #L3a7268.  v1:= 0I;
  #L3a726a.  if v0 != 0 then goto L3a7270;
  #L3a726e.  return v1;
  #L3a7270.  v4:= (`okhttp3.p`) v4 @kind object;
  #L3a7274.  v0:= v3.`okhttp3.p.a` @type ^`okhttp3.TlsVersion` @kind object;
  #L3a7278.  v2:= v4.`okhttp3.p.a` @type ^`okhttp3.TlsVersion` @kind object;
  #L3a727c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a7282.  v0:= temp;
  #L3a7284.  if v0 == 0 then goto L3a72c6;
  #L3a7288.  v0:= v3.`okhttp3.p.b` @type ^`okhttp3.g` @kind object;
  #L3a728c.  v2:= v4.`okhttp3.p.b` @type ^`okhttp3.g` @kind object;
  #L3a7290.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a7296.  v0:= temp;
  #L3a7298.  if v0 == 0 then goto L3a72c6;
  #L3a729c.  v0:= v3.`okhttp3.p.c` @type ^`java.util.List` @kind object;
  #L3a72a0.  v2:= v4.`okhttp3.p.c` @type ^`java.util.List` @kind object;
  #L3a72a4.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3a72aa.  v0:= temp;
  #L3a72ac.  if v0 == 0 then goto L3a72c6;
  #L3a72b0.  v0:= v3.`okhttp3.p.d` @type ^`java.util.List` @kind object;
  #L3a72b4.  v4:= v4.`okhttp3.p.d` @type ^`java.util.List` @kind object;
  #L3a72b8.  call temp:= `equals`(v0, v4) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3a72be.  v4:= temp;
  #L3a72c0.  if v4 == 0 then goto L3a72c6;
  #L3a72c4.  v1:= 1I;
  #L3a72c6.  return v1;
}
procedure `int` `hashCode`(`okhttp3.p` v2 @kind this) @signature `Lokhttp3/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a72d8.  v0:= v2.`okhttp3.p.a` @type ^`okhttp3.TlsVersion` @kind object;
  #L3a72dc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L3a72e2.  v0:= temp;
  #L3a72e4.  v1:= 527I;
  #L3a72e8.  v1:= v1 + v0 @kind int;
  #L3a72ea.  v1:= v1 * 31;
  #L3a72ee.  v0:= v2.`okhttp3.p.b` @type ^`okhttp3.g` @kind object;
  #L3a72f2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a72f8.  v0:= temp;
  #L3a72fa.  v1:= v1 + v0 @kind int;
  #L3a72fc.  v1:= v1 * 31;
  #L3a7300.  v0:= v2.`okhttp3.p.c` @type ^`java.util.List` @kind object;
  #L3a7304.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L3a730a.  v0:= temp;
  #L3a730c.  v1:= v1 + v0 @kind int;
  #L3a730e.  v1:= v1 * 31;
  #L3a7312.  v0:= v2.`okhttp3.p.d` @type ^`java.util.List` @kind object;
  #L3a7316.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L3a731c.  v0:= temp;
  #L3a731e.  v1:= v1 + v0 @kind int;
  #L3a7320.  return v1;
}
