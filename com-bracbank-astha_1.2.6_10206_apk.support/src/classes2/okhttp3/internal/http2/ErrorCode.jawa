record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.httpCode` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.i` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.j` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.k` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.l` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3abc20.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abc24.  v1:= "NO_ERROR" @kind object;
  #L3abc28.  v2:= 0I;
  #L3abc2a.  call `<init>`(v0, v1, v2, v2) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abc30.  `@@okhttp3.internal.http2.ErrorCode.a` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L3abc34.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abc38.  v3:= "PROTOCOL_ERROR" @kind object;
  #L3abc3c.  v4:= 1I;
  #L3abc3e.  call `<init>`(v1, v3, v4, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abc44.  `@@okhttp3.internal.http2.ErrorCode.b` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L3abc48.  v3:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abc4c.  v5:= "INTERNAL_ERROR" @kind object;
  #L3abc50.  v6:= 2I;
  #L3abc52.  call `<init>`(v3, v5, v6, v6) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abc58.  `@@okhttp3.internal.http2.ErrorCode.c` @type ^`okhttp3.internal.http2.ErrorCode` := v3 @kind object;
  #L3abc5c.  v5:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abc60.  v7:= "FLOW_CONTROL_ERROR" @kind object;
  #L3abc64.  v8:= 3I;
  #L3abc66.  call `<init>`(v5, v7, v8, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abc6c.  `@@okhttp3.internal.http2.ErrorCode.d` @type ^`okhttp3.internal.http2.ErrorCode` := v5 @kind object;
  #L3abc70.  v7:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abc74.  v9:= "REFUSED_STREAM" @kind object;
  #L3abc78.  v10:= 4I;
  #L3abc7a.  v11:= 7I;
  #L3abc7c.  call `<init>`(v7, v9, v10, v11) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abc82.  `@@okhttp3.internal.http2.ErrorCode.e` @type ^`okhttp3.internal.http2.ErrorCode` := v7 @kind object;
  #L3abc86.  v9:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abc8a.  v12:= "CANCEL" @kind object;
  #L3abc8e.  v13:= 5I;
  #L3abc90.  v14:= 8I;
  #L3abc94.  call `<init>`(v9, v12, v13, v14) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abc9a.  `@@okhttp3.internal.http2.ErrorCode.f` @type ^`okhttp3.internal.http2.ErrorCode` := v9 @kind object;
  #L3abc9e.  v12:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abca2.  v15:= "COMPRESSION_ERROR" @kind object;
  #L3abca6.  v13:= 6I;
  #L3abca8.  v10:= 9I;
  #L3abcac.  call `<init>`(v12, v15, v13, v10) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abcb2.  `@@okhttp3.internal.http2.ErrorCode.g` @type ^`okhttp3.internal.http2.ErrorCode` := v12 @kind object;
  #L3abcb6.  v15:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abcba.  v13:= "CONNECT_ERROR" @kind object;
  #L3abcbe.  v8:= 10I;
  #L3abcc2.  call `<init>`(v15, v13, v11, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abcc8.  `@@okhttp3.internal.http2.ErrorCode.h` @type ^`okhttp3.internal.http2.ErrorCode` := v15 @kind object;
  #L3abccc.  v13:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abcd0.  v11:= "ENHANCE_YOUR_CALM" @kind object;
  #L3abcd4.  v6:= 11I;
  #L3abcd8.  call `<init>`(v13, v11, v14, v6) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abcde.  `@@okhttp3.internal.http2.ErrorCode.i` @type ^`okhttp3.internal.http2.ErrorCode` := v13 @kind object;
  #L3abce2.  v11:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abce6.  v14:= "INADEQUATE_SECURITY" @kind object;
  #L3abcea.  v4:= 12I;
  #L3abcee.  call `<init>`(v11, v14, v10, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abcf4.  `@@okhttp3.internal.http2.ErrorCode.j` @type ^`okhttp3.internal.http2.ErrorCode` := v11 @kind object;
  #L3abcf8.  v4:= new `okhttp3.internal.http2.ErrorCode`;
  #L3abcfc.  v14:= "HTTP_1_1_REQUIRED" @kind object;
  #L3abd00.  v10:= 13I;
  #L3abd04.  call `<init>`(v4, v14, v8, v10) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3abd0a.  `@@okhttp3.internal.http2.ErrorCode.k` @type ^`okhttp3.internal.http2.ErrorCode` := v4 @kind object;
  #L3abd0e.  v6:= new `okhttp3.internal.http2.ErrorCode`[v6];
  #L3abd12.  v6[v2]:= v0 @kind object;
  #L3abd16.  v0:= 1I;
  #L3abd18.  v6[v0]:= v1 @kind object;
  #L3abd1c.  v0:= 2I;
  #L3abd1e.  v6[v0]:= v3 @kind object;
  #L3abd22.  v0:= 3I;
  #L3abd24.  v6[v0]:= v5 @kind object;
  #L3abd28.  v0:= 4I;
  #L3abd2a.  v6[v0]:= v7 @kind object;
  #L3abd2e.  v0:= 5I;
  #L3abd30.  v6[v0]:= v9 @kind object;
  #L3abd34.  v0:= 6I;
  #L3abd36.  v6[v0]:= v12 @kind object;
  #L3abd3a.  v0:= 7I;
  #L3abd3c.  v6[v0]:= v15 @kind object;
  #L3abd40.  v0:= 8I;
  #L3abd44.  v6[v0]:= v13 @kind object;
  #L3abd48.  v0:= 9I;
  #L3abd4c.  v6[v0]:= v11 @kind object;
  #L3abd50.  v6[v8]:= v4 @kind object;
  #L3abd54.  `@@okhttp3.internal.http2.ErrorCode.l` @type ^`okhttp3.internal.http2.ErrorCode`[] := v6 @kind object;
  #L3abd58.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3abd6c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3abd72.  v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int` := v3;
  #L3abd76.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `a`(`int` v5 ) @signature `Lokhttp3/internal/http2/ErrorCode;.a:(I)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3abba0.  call temp:= `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @kind static;
  #L3abba6.  v0:= temp @kind object;
  #L3abba8.  v1:= length @variable v0;
  #L3abbaa.  v2:= 0I;
  #L3abbac.  if v2 >= v1 then goto L3abbc4;
  #L3abbb0.  v3:= v0[v2] @kind object;
  #L3abbb4.  v4:= v3.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L3abbb8.  if v4 != v5 then goto L3abbbe;
  #L3abbbc.  return v3 @kind object;
  #L3abbbe.  v2:= v2 + 1;
  #L3abbc2.  goto L3abbac;
  #L3abbc4.  v5:= 0I;
  #L3abbc6.  return v5 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3abbd8.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L3abbdc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3abbe2.  v1:= temp @kind object;
  #L3abbe4.  v1:= (`okhttp3.internal.http2.ErrorCode`) v1 @kind object;
  #L3abbe8.  return v1 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3abbfc.  v0:= `@@okhttp3.internal.http2.ErrorCode.l` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L3abc00.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3abc06.  v0:= temp @kind object;
  #L3abc08.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L3abc0c.  return v0 @kind object;
}
