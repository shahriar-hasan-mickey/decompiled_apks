record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @AccessFlag PRIVATE;
}
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3ac18c.  v0:= 1I;
  #L3ac18e.  v0:= new `byte`[v0];
  #L3ac192.  v1:= 42I;
  #L3ac196.  v2:= 0I;
  #L3ac198.  v0[v2]:= v1 @kind byte;
  #L3ac19c.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @type ^`byte`[] := v0 @kind object;
  #L3ac1a0.  v0:= new `java.lang.String`[v2];
  #L3ac1a4.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.lang.String`[] := v0 @kind object;
  #L3ac1a8.  v0:= "*" @kind object;
  #L3ac1ac.  temp:= new `java.lang.String`[v0];
  #L3ac1b2.  v0:= temp @kind object;
  #L3ac1b4.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @type ^`java.lang.String`[] := v0 @kind object;
  #L3ac1b8.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L3ac1bc.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L3ac1c2.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.h` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L3ac1c6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ac1d8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ac1de.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L3ac1e2.  v1:= 0I;
  #L3ac1e4.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L3ac1ea.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L3ac1ee.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L3ac1f2.  v1:= 1I;
  #L3ac1f4.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L3ac1fa.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L3ac1fe.  return @kind void;
}
procedure `java.lang.String` `a`(`byte`[] v17 @kind object, `byte`[][] v18 @kind object, `int` v19 ) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3abdc8.  v0:= v17 @kind object;
  #L3abdcc.  v1:= v18 @kind object;
  #L3abdd0.  v2:= length @variable v0;
  #L3abdd2.  v3:= 0I;
  #L3abdd4.  v4:= 0I;
  #L3abdd6.  if v4 >= v2 then goto L3abed8;
  #L3abdda.  v5:= v4 + v2 @kind int;
  #L3abdde.  v5:= v5 / 2;
  #L3abde2.  v6:= 10I;
  #L3abde6.  v7:= -1I;
  #L3abde8.  if v5 <= v7 then goto L3abdfa;
  #L3abdec.  v8:= v0[v5] @kind byte;
  #L3abdf0.  if v8 == v6 then goto L3abdfa;
  #L3abdf4.  v5:= v5 + -1;
  #L3abdf8.  goto L3abde2;
  #L3abdfa.  v5:= v5 + 1;
  #L3abdfe.  v8:= 1I;
  #L3abe00.  v9:= 1I;
  #L3abe02.  v10:= v5 + v9 @kind int;
  #L3abe06.  v11:= v0[v10] @kind byte;
  #L3abe0a.  if v11 == v6 then goto L3abe14;
  #L3abe0e.  v9:= v9 + 1;
  #L3abe12.  goto L3abe02;
  #L3abe14.  v6:= v10 - v5 @kind int;
  #L3abe18.  v11:= v19;
  #L3abe1c.  v9:= 0I;
  #L3abe1e.  v12:= 0I;
  #L3abe20.  v13:= 0I;
  #L3abe22.  if v9 == 0 then goto L3abe2e;
  #L3abe26.  v9:= 46I;
  #L3abe2a.  v14:= 0I;
  #L3abe2c.  goto L3abe44;
  #L3abe2e.  v14:= v1[v11] @kind object;
  #L3abe32.  v14:= v14[v12] @kind byte;
  #L3abe36.  v14:= v14 ^& 255;
  #L3abe3a.  v16:= v14;
  #L3abe3e.  v14:= v9;
  #L3abe40.  v9:= v16;
  #L3abe44.  v15:= v5 + v13 @kind int;
  #L3abe48.  v15:= v0[v15] @kind byte;
  #L3abe4c.  v15:= v15 ^& 255;
  #L3abe50.  v9:= v9 - v15 @kind int;
  #L3abe52.  if v9 == 0 then goto L3abe58;
  #L3abe56.  goto L3abe78;
  #L3abe58.  v13:= v13 + 1;
  #L3abe5c.  v12:= v12 + 1;
  #L3abe60.  if v13 != v6 then goto L3abe66;
  #L3abe64.  goto L3abe78;
  #L3abe66.  v15:= v1[v11] @kind object;
  #L3abe6a.  v15:= length @variable v15;
  #L3abe6c.  if v15 != v12 then goto L3abed4;
  #L3abe70.  v14:= length @variable v1;
  #L3abe72.  v14:= v14 - v8 @kind int;
  #L3abe74.  if v11 != v14 then goto L3abeca;
  #L3abe78.  if v9 >= 0 then goto L3abe84;
  #L3abe7c.  v5:= v5 + -1;
  #L3abe80.  v2:= v5;
  #L3abe82.  goto L3abdd6;
  #L3abe84.  if v9 <= 0 then goto L3abe8e;
  #L3abe88.  v4:= v10 + 1;
  #L3abe8c.  goto L3abdd6;
  #L3abe8e.  v7:= v6 - v13 @kind int;
  #L3abe92.  v8:= v1[v11] @kind object;
  #L3abe96.  v8:= length @variable v8;
  #L3abe98.  v8:= v8 - v12 @kind int;
  #L3abe9a.  v11:= v11 + 1;
  #L3abe9e.  v9:= length @variable v1;
  #L3abea0.  if v11 >= v9 then goto L3abeae;
  #L3abea4.  v9:= v1[v11] @kind object;
  #L3abea8.  v9:= length @variable v9;
  #L3abeaa.  v8:= v8 + v9 @kind int;
  #L3abeac.  goto L3abe9a;
  #L3abeae.  if v8 >= v7 then goto L3abeb4;
  #L3abeb2.  goto L3abe7c;
  #L3abeb4.  if v8 <= v7 then goto L3abeba;
  #L3abeb8.  goto L3abe88;
  #L3abeba.  v1:= new `java.lang.String`;
  #L3abebe.  v2:= `@@t2.c.j` @type ^`java.nio.charset.Charset` @kind object;
  #L3abec2.  call `<init>`(v1, v0, v5, v6, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L3abec8.  goto L3abeda;
  #L3abeca.  v11:= v11 + 1;
  #L3abece.  v9:= 1I;
  #L3abed0.  v12:= -1I;
  #L3abed2.  goto L3abe22;
  #L3abed4.  v9:= v14;
  #L3abed6.  goto L3abe22;
  #L3abed8.  v1:= 0I;
  #L3abeda.  return v1 @kind object;
}
procedure `java.lang.String`[] `b`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v8 @kind this, `java.lang.String`[] v9 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.b:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3abfb4.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3abfb8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L3abfbe.  v0:= temp;
  #L3abfc0.  v1:= 0I;
  #L3abfc2.  v2:= 1I;
  #L3abfc4.  if v0 != 0 then goto L3abfe0;
  #L3abfc8.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3abfcc.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L3abfd2.  v0:= temp;
  #L3abfd4.  if v0 == 0 then goto L3abfe0;
  #L3abfd8.  call `f`(v8) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.f:()V` @kind direct;
  #L3abfde.  goto L3abffa;
  #L3abfe0.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L3abfe4.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L3abfea.  goto L3abffa;
  #L3abfec.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3abff2.  v0:= temp @kind object;
  #L3abff4.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3abffa.  @monitorenter v8
  #L3abffc.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L3ac000.  if v0 == 0 then goto L3ac12e;
  #L3ac004.  @monitorexit v8
  #L3ac006.  v0:= length @variable v9;
  #L3ac008.  v3:= new `byte`[][v0];
  #L3ac00c.  v4:= 0I;
  #L3ac00e.  v5:= length @variable v9;
  #L3ac010.  if v4 >= v5 then goto L3ac02e;
  #L3ac014.  v5:= v9[v4] @kind object;
  #L3ac018.  v6:= `@@t2.c.j` @type ^`java.nio.charset.Charset` @kind object;
  #L3ac01c.  call temp:= `getBytes`(v5, v6) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3ac022.  v5:= temp @kind object;
  #L3ac024.  v3[v4]:= v5 @kind object;
  #L3ac028.  v4:= v4 + 1;
  #L3ac02c.  goto L3ac00e;
  #L3ac02e.  v9:= 0I;
  #L3ac030.  v4:= 0I;
  #L3ac032.  if v9 >= v0 then goto L3ac04e;
  #L3ac036.  v5:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L3ac03a.  call temp:= `a`(v5, v3, v9) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L3ac040.  v5:= temp @kind object;
  #L3ac042.  if v5 == 0 then goto L3ac048;
  #L3ac046.  goto L3ac050;
  #L3ac048.  v9:= v9 + 1;
  #L3ac04c.  goto L3ac030;
  #L3ac04e.  v5:= v4 @kind object;
  #L3ac050.  if v0 <= v2 then goto L3ac08a;
  #L3ac054.  call temp:= `clone`(v3) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L3ac05a.  v9:= temp @kind object;
  #L3ac05c.  v9:= (`byte`[][]) v9 @kind object;
  #L3ac060.  v6:= 0I;
  #L3ac062.  v7:= length @variable v9;
  #L3ac064.  v7:= v7 - v2 @kind int;
  #L3ac066.  if v6 >= v7 then goto L3ac08a;
  #L3ac06a.  v7:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @type ^`byte`[] @kind object;
  #L3ac06e.  v9[v6]:= v7 @kind object;
  #L3ac072.  v7:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L3ac076.  call temp:= `a`(v7, v9, v6) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L3ac07c.  v7:= temp @kind object;
  #L3ac07e.  if v7 == 0 then goto L3ac084;
  #L3ac082.  goto L3ac08c;
  #L3ac084.  v6:= v6 + 1;
  #L3ac088.  goto L3ac062;
  #L3ac08a.  v7:= v4 @kind object;
  #L3ac08c.  if v7 == 0 then goto L3ac0b2;
  #L3ac090.  v9:= v0 + -1;
  #L3ac094.  if v1 >= v9 then goto L3ac0b2;
  #L3ac098.  v9:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @type ^`byte`[] @kind object;
  #L3ac09c.  call temp:= `a`(v9, v3, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L3ac0a2.  v9:= temp @kind object;
  #L3ac0a4.  if v9 == 0 then goto L3ac0ac;
  #L3ac0a8.  v4:= v9 @kind object;
  #L3ac0aa.  goto L3ac0b2;
  #L3ac0ac.  v1:= v1 + 1;
  #L3ac0b0.  goto L3ac090;
  #L3ac0b2.  if v4 == 0 then goto L3ac0e6;
  #L3ac0b6.  v9:= new `java.lang.StringBuilder`;
  #L3ac0ba.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ac0c0.  v0:= "!" @kind object;
  #L3ac0c4.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac0ca.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac0d0.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ac0d6.  v9:= temp @kind object;
  #L3ac0d8.  v0:= "\\." @kind object;
  #L3ac0dc.  call temp:= `split`(v9, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3ac0e2.  v9:= temp @kind object;
  #L3ac0e4.  return v9 @kind object;
  #L3ac0e6.  if v5 != 0 then goto L3ac0f4;
  #L3ac0ea.  if v7 != 0 then goto L3ac0f4;
  #L3ac0ee.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @type ^`java.lang.String`[] @kind object;
  #L3ac0f2.  return v9 @kind object;
  #L3ac0f4.  if v5 == 0 then goto L3ac106;
  #L3ac0f8.  v9:= "\\." @kind object;
  #L3ac0fc.  call temp:= `split`(v5, v9) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3ac102.  v9:= temp @kind object;
  #L3ac104.  goto L3ac10a;
  #L3ac106.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.lang.String`[] @kind object;
  #L3ac10a.  if v7 == 0 then goto L3ac11c;
  #L3ac10e.  v0:= "\\." @kind object;
  #L3ac112.  call temp:= `split`(v7, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3ac118.  v0:= temp @kind object;
  #L3ac11a.  goto L3ac120;
  #L3ac11c.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.lang.String`[] @kind object;
  #L3ac120.  v1:= length @variable v9;
  #L3ac122.  v2:= length @variable v0;
  #L3ac124.  if v1 <= v2 then goto L3ac12a;
  #L3ac128.  goto L3ac12c;
  #L3ac12a.  v9:= v0 @kind object;
  #L3ac12c.  return v9 @kind object;
  #L3ac12e.  v9:= new `java.lang.IllegalStateException`;
  #L3ac132.  v0:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L3ac136.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac13c.  throw v9;
  #L3ac13e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac140.  @monitorexit v8
  #L3ac142.  throw v9;
  catch `java.lang.InterruptedException` @[L3abfe0..L3abfea] goto L3abfec;
  catch `java.lang.Throwable` @[L3abffc..L3ac006] goto L3ac13e;
  catch `java.lang.Throwable` @[L3ac12e..L3ac142] goto L3ac13e;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `c`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.c:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ac174.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.h` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L3ac178.  return v0 @kind object;
}
procedure `void` `e`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v3 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ac210.  v0:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L3ac214.  v1:= "publicsuffixes.gz" @kind object;
  #L3ac218.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L3ac21e.  v0:= temp @kind object;
  #L3ac220.  if v0 != 0 then goto L3ac226;
  #L3ac224.  return @kind void;
  #L3ac226.  v1:= new `okio.i`;
  #L3ac22a.  call temp:= `f`(v0) @signature `Lokio/k;.f:(Ljava/io/InputStream;)Lokio/q;` @kind static;
  #L3ac230.  v0:= temp @kind object;
  #L3ac232.  call `<init>`(v1, v0) @signature `Lokio/i;.<init>:(Lokio/q;)V` @kind direct;
  #L3ac238.  call temp:= `b`(v1) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L3ac23e.  v0:= temp @kind object;
  #L3ac240.  call temp:= `readInt`(v0) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L3ac246.  v1:= temp;
  #L3ac248.  v1:= new `byte`[v1];
  #L3ac24c.  call `readFully`(v0, v1) @signature `Lokio/e;.readFully:([B)V` @kind interface;
  #L3ac252.  call temp:= `readInt`(v0) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L3ac258.  v2:= temp;
  #L3ac25a.  v2:= new `byte`[v2];
  #L3ac25e.  call `readFully`(v0, v2) @signature `Lokio/e;.readFully:([B)V` @kind interface;
  #L3ac264.  call `g`(v0) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @kind static;
  #L3ac26a.  @monitorenter v3
  #L3ac26c.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] := v1 @kind object;
  #L3ac270.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @type ^`byte`[] := v2 @kind object;
  #L3ac274.  @monitorexit v3
  #L3ac276.  v0:= v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L3ac27a.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L3ac280.  return @kind void;
  #L3ac282.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac284.  @monitorexit v3
  #L3ac286.  throw v0;
  #L3ac288.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac28a.  call `g`(v0) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @kind static;
  #L3ac290.  throw v1;
  catch `java.lang.Throwable` @[L3ac240..L3ac264] goto L3ac288;
  catch `java.lang.Throwable` @[L3ac26c..L3ac276] goto L3ac282;
  catch `java.lang.Throwable` @[L3ac284..L3ac286] goto L3ac282;
}
procedure `void` `f`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ac2c4.  v0:= 0I;
  #L3ac2c6.  call `e`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.e:()V` @kind direct;
  #L3ac2cc.  if v0 == 0 then goto L3ac2de;
  #L3ac2d0.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3ac2d6.  v0:= temp @kind object;
  #L3ac2d8.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3ac2de.  return @kind void;
  #L3ac2e0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac2e2.  goto L3ac318;
  #L3ac2e4.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L3ac2e6.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3ac2ec.  v2:= temp @kind object;
  #L3ac2ee.  v3:= 5I;
  #L3ac2f0.  v4:= "Failed to read public suffix list" @kind object;
  #L3ac2f4.  call `p`(v2, v3, v4, v1) @signature `Lz2/f;.p:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3ac2fa.  if v0 == 0 then goto L3ac30c;
  #L3ac2fe.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3ac304.  v0:= temp @kind object;
  #L3ac306.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3ac30c.  return @kind void;
  #L3ac30e.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L3ac314.  v0:= 1I;
  #L3ac316.  goto L3ac2c6;
  #L3ac318.  if v0 == 0 then goto L3ac32a;
  #L3ac31c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3ac322.  v0:= temp @kind object;
  #L3ac324.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3ac32a.  throw v1;
  catch `java.io.InterruptedIOException` @[L3ac2c6..L3ac2cc] goto L3ac30e;
  catch `java.io.IOException` @[L3ac2c6..L3ac2cc] goto L3ac2e4;
  catch `java.lang.Throwable` @[L3ac2c6..L3ac2cc] goto L3ac2e0;
  catch `java.lang.Throwable` @[L3ac2e6..L3ac2fa] goto L3ac2e0;
  catch `java.lang.Throwable` @[L3ac30e..L3ac314] goto L3ac2e0;
}
procedure `java.lang.String` `d`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.d:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3abeec.  v0:= "domain == null" @kind object;
  #L3abef0.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3abef6.  call temp:= `toUnicode`(v8) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3abefc.  v0:= temp @kind object;
  #L3abefe.  v1:= "\\." @kind object;
  #L3abf02.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3abf08.  v0:= temp @kind object;
  #L3abf0a.  call temp:= `b`(v7, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.b:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L3abf10.  v2:= temp @kind object;
  #L3abf12.  v3:= length @variable v0;
  #L3abf14.  v4:= length @variable v2;
  #L3abf16.  v5:= 33I;
  #L3abf1a.  v6:= 0I;
  #L3abf1c.  if v3 != v4 then goto L3abf34;
  #L3abf20.  v3:= v2[v6] @kind object;
  #L3abf24.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3abf2a.  v3:= temp;
  #L3abf2c.  if v3 == v5 then goto L3abf34;
  #L3abf30.  v8:= 0I;
  #L3abf32.  return v8 @kind object;
  #L3abf34.  v3:= v2[v6] @kind object;
  #L3abf38.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3abf3e.  v3:= temp;
  #L3abf40.  if v3 != v5 then goto L3abf4a;
  #L3abf44.  v0:= length @variable v0;
  #L3abf46.  v2:= length @variable v2;
  #L3abf48.  goto L3abf52;
  #L3abf4a.  v0:= length @variable v0;
  #L3abf4c.  v2:= length @variable v2;
  #L3abf4e.  v2:= v2 + 1;
  #L3abf52.  v0:= v0 - v2 @kind int;
  #L3abf54.  v2:= new `java.lang.StringBuilder`;
  #L3abf58.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3abf5e.  call temp:= `split`(v8, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3abf64.  v8:= temp @kind object;
  #L3abf66.  v1:= length @variable v8;
  #L3abf68.  if v0 >= v1 then goto L3abf86;
  #L3abf6c.  v1:= v8[v0] @kind object;
  #L3abf70.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abf76.  v1:= 46I;
  #L3abf7a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abf80.  v0:= v0 + 1;
  #L3abf84.  goto L3abf66;
  #L3abf86.  call temp:= `length`(v2) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3abf8c.  v8:= temp;
  #L3abf8e.  v8:= v8 + -1;
  #L3abf92.  call temp:= `deleteCharAt`(v2, v8) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abf98.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3abf9e.  v8:= temp @kind object;
  #L3abfa0.  return v8 @kind object;
}
