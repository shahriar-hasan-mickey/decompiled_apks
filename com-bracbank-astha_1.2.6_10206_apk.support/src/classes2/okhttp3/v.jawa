record `okhttp3.v` @kind class @AccessFlag FINAL extends `okhttp3.d` @kind interface {
  `okhttp3.u` `okhttp3.v.a` @AccessFlag FINAL;
  `w2.j` `okhttp3.v.b` @AccessFlag FINAL;
  `okio.a` `okhttp3.v.c` @AccessFlag FINAL;
  `okhttp3.o` `okhttp3.v.d` @AccessFlag PRIVATE;
  `okhttp3.w` `okhttp3.v.e` @AccessFlag FINAL;
  `boolean` `okhttp3.v.f` @AccessFlag FINAL;
  `boolean` `okhttp3.v.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.v` v2 @kind this, `okhttp3.u` v3 @kind object, `okhttp3.w` v4 @kind object, `boolean` v5 ) @signature `Lokhttp3/v;.<init>:(Lokhttp3/u;Lokhttp3/w;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3aa86c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aa872.  v2.`okhttp3.v.a` @type ^`okhttp3.u` := v3 @kind object;
  #L3aa876.  v2.`okhttp3.v.e` @type ^`okhttp3.w` := v4 @kind object;
  #L3aa87a.  v2.`okhttp3.v.f` @type ^`boolean` := v5 @kind boolean;
  #L3aa87e.  v4:= new `w2.j`;
  #L3aa882.  call `<init>`(v4, v3, v5) @signature `Lw2/j;.<init>:(Lokhttp3/u;Z)V` @kind direct;
  #L3aa888.  v2.`okhttp3.v.b` @type ^`w2.j` := v4 @kind object;
  #L3aa88c.  v4:= new `okhttp3.v$a`;
  #L3aa890.  call `<init>`(v4, v2) @signature `Lokhttp3/v$a;.<init>:(Lokhttp3/v;)V` @kind direct;
  #L3aa896.  v2.`okhttp3.v.c` @type ^`okio.a` := v4 @kind object;
  #L3aa89a.  call temp:= `b`(v3) @signature `Lokhttp3/u;.b:()I` @kind virtual;
  #L3aa8a0.  v3:= temp;
  #L3aa8a2.  v0:= (`long`) v3 @kind i2l;
  #L3aa8a4.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3aa8a8.  call temp:= `g`(v4, v0, v3) @signature `Lokio/r;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/r;` @kind virtual;
  #L3aa8ae.  return @kind void;
}
procedure `okhttp3.o` `a`(`okhttp3.v` v0 @kind object) @signature `Lokhttp3/v;.a:(Lokhttp3/v;)Lokhttp3/o;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3aa5ec.  v0:= v0.`okhttp3.v.d` @type ^`okhttp3.o` @kind object;
  #L3aa5f0.  return v0 @kind object;
}
procedure `void` `c`(`okhttp3.v` v2 @kind this) @signature `Lokhttp3/v;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3aa8dc.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3aa8e2.  v0:= temp @kind object;
  #L3aa8e4.  v1:= "response.body().close()" @kind object;
  #L3aa8e8.  call temp:= `m`(v0, v1) @signature `Lz2/f;.m:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3aa8ee.  v0:= temp @kind object;
  #L3aa8f0.  v1:= v2.`okhttp3.v.b` @type ^`w2.j` @kind object;
  #L3aa8f4.  call `j`(v1, v0) @signature `Lw2/j;.j:(Ljava/lang/Object;)V` @kind virtual;
  #L3aa8fa.  return @kind void;
}
procedure `okhttp3.v` `i`(`okhttp3.u` v1 @kind object, `okhttp3.w` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/v;.i:(Lokhttp3/u;Lokhttp3/w;Z)Lokhttp3/v;` @AccessFlag STATIC {
    temp;
    v0;

  #L3aa62c.  v0:= new `okhttp3.v`;
  #L3aa630.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/v;.<init>:(Lokhttp3/u;Lokhttp3/w;Z)V` @kind direct;
  #L3aa636.  call temp:= `l`(v1) @signature `Lokhttp3/u;.l:()Lokhttp3/o$c;` @kind virtual;
  #L3aa63c.  v1:= temp @kind object;
  #L3aa63e.  call temp:= `a`(v1, v0) @signature `Lokhttp3/o$c;.a:(Lokhttp3/d;)Lokhttp3/o;` @kind interface;
  #L3aa644.  v1:= temp @kind object;
  #L3aa646.  v0.`okhttp3.v.d` @type ^`okhttp3.o` := v1 @kind object;
  #L3aa64a.  return v0 @kind object;
}
procedure `void` `b`(`okhttp3.v` v1 @kind this) @signature `Lokhttp3/v;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa8c0.  v0:= v1.`okhttp3.v.b` @type ^`w2.j` @kind object;
  #L3aa8c4.  call `b`(v0) @signature `Lw2/j;.b:()V` @kind virtual;
  #L3aa8ca.  return @kind void;
}
procedure `java.lang.Object` `clone`(`okhttp3.v` v1 @kind this) @signature `Lokhttp3/v;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3aa538.  call temp:= `d`(v1) @signature `Lokhttp3/v;.d:()Lokhttp3/v;` @kind virtual;
  #L3aa53e.  v0:= temp @kind object;
  #L3aa540.  return v0 @kind object;
}
procedure `okhttp3.v` `d`(`okhttp3.v` v3 @kind this) @signature `Lokhttp3/v;.d:()Lokhttp3/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aa604.  v0:= v3.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa608.  v1:= v3.`okhttp3.v.e` @type ^`okhttp3.w` @kind object;
  #L3aa60c.  v2:= v3.`okhttp3.v.f` @type ^`boolean` @kind boolean;
  #L3aa610.  call temp:= `i`(v0, v1, v2) @signature `Lokhttp3/v;.i:(Lokhttp3/u;Lokhttp3/w;Z)Lokhttp3/v;` @kind static;
  #L3aa616.  v0:= temp @kind object;
  #L3aa618.  return v0 @kind object;
}
procedure `okhttp3.y` `e`(`okhttp3.v` v13 @kind this) @signature `Lokhttp3/v;.e:()Lokhttp3/y;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3aa76c.  v1:= new `java.util.ArrayList`;
  #L3aa770.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3aa776.  v0:= v13.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa77a.  call temp:= `p`(v0) @signature `Lokhttp3/u;.p:()Ljava/util/List;` @kind virtual;
  #L3aa780.  v0:= temp @kind object;
  #L3aa782.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3aa788.  v0:= v13.`okhttp3.v.b` @type ^`w2.j` @kind object;
  #L3aa78c.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3aa792.  v0:= new `w2.a`;
  #L3aa796.  v2:= v13.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa79a.  call temp:= `i`(v2) @signature `Lokhttp3/u;.i:()Lokhttp3/l;` @kind virtual;
  #L3aa7a0.  v2:= temp @kind object;
  #L3aa7a2.  call `<init>`(v0, v2) @signature `Lw2/a;.<init>:(Lokhttp3/l;)V` @kind direct;
  #L3aa7a8.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3aa7ae.  v0:= new `u2.a`;
  #L3aa7b2.  v2:= v13.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa7b6.  call temp:= `q`(v2) @signature `Lokhttp3/u;.q:()Lu2/d;` @kind virtual;
  #L3aa7bc.  v2:= temp @kind object;
  #L3aa7be.  call `<init>`(v0, v2) @signature `Lu2/a;.<init>:(Lu2/d;)V` @kind direct;
  #L3aa7c4.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3aa7ca.  v0:= new `v2.a`;
  #L3aa7ce.  v2:= v13.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa7d2.  call `<init>`(v0, v2) @signature `Lv2/a;.<init>:(Lokhttp3/u;)V` @kind direct;
  #L3aa7d8.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3aa7de.  v0:= v13.`okhttp3.v.f` @type ^`boolean` @kind boolean;
  #L3aa7e2.  if v0 != 0 then goto L3aa7f8;
  #L3aa7e6.  v0:= v13.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa7ea.  call temp:= `r`(v0) @signature `Lokhttp3/u;.r:()Ljava/util/List;` @kind virtual;
  #L3aa7f0.  v0:= temp @kind object;
  #L3aa7f2.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3aa7f8.  v0:= new `w2.b`;
  #L3aa7fc.  v2:= v13.`okhttp3.v.f` @type ^`boolean` @kind boolean;
  #L3aa800.  call `<init>`(v0, v2) @signature `Lw2/b;.<init>:(Z)V` @kind direct;
  #L3aa806.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3aa80c.  v12:= new `w2.g`;
  #L3aa810.  v2:= 0I;
  #L3aa812.  v3:= 0I;
  #L3aa814.  v4:= 0I;
  #L3aa816.  v5:= 0I;
  #L3aa818.  v6:= v13.`okhttp3.v.e` @type ^`okhttp3.w` @kind object;
  #L3aa81c.  v8:= v13.`okhttp3.v.d` @type ^`okhttp3.o` @kind object;
  #L3aa820.  v0:= v13.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa824.  call temp:= `d`(v0) @signature `Lokhttp3/u;.d:()I` @kind virtual;
  #L3aa82a.  v9:= temp;
  #L3aa82c.  v0:= v13.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa830.  call temp:= `A`(v0) @signature `Lokhttp3/u;.A:()I` @kind virtual;
  #L3aa836.  v10:= temp;
  #L3aa838.  v0:= v13.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa83c.  call temp:= `E`(v0) @signature `Lokhttp3/u;.E:()I` @kind virtual;
  #L3aa842.  v11:= temp;
  #L3aa844.  v0:= v12 @kind object;
  #L3aa846.  v7:= v13 @kind object;
  #L3aa848.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lw2/g;.<init>:(Ljava/util/List;Lv2/f;Lw2/c;Lv2/c;ILokhttp3/w;Lokhttp3/d;Lokhttp3/o;III)V` @kind direct;
  #L3aa84e.  v0:= v13.`okhttp3.v.e` @type ^`okhttp3.w` @kind object;
  #L3aa852.  call temp:= `c`(v12, v0) @signature `Lokhttp3/s$a;.c:(Lokhttp3/w;)Lokhttp3/y;` @kind interface;
  #L3aa858.  v0:= temp @kind object;
  #L3aa85a.  return v0 @kind object;
}
procedure `okhttp3.y` `execute`(`okhttp3.v` v2 @kind this) @signature `Lokhttp3/v;.execute:()Lokhttp3/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa674.  @monitorenter v2
  #L3aa676.  v0:= v2.`okhttp3.v.g` @type ^`boolean` @kind boolean;
  #L3aa67a.  if v0 != 0 then goto L3aa710;
  #L3aa67e.  v0:= 1I;
  #L3aa680.  v2.`okhttp3.v.g` @type ^`boolean` := v0 @kind boolean;
  #L3aa684.  @monitorexit v2
  #L3aa686.  call `c`(v2) @signature `Lokhttp3/v;.c:()V` @kind direct;
  #L3aa68c.  v0:= v2.`okhttp3.v.c` @type ^`okio.a` @kind object;
  #L3aa690.  call `k`(v0) @signature `Lokio/a;.k:()V` @kind virtual;
  #L3aa696.  v0:= v2.`okhttp3.v.d` @type ^`okhttp3.o` @kind object;
  #L3aa69a.  call `c`(v0, v2) @signature `Lokhttp3/o;.c:(Lokhttp3/d;)V` @kind virtual;
  #L3aa6a0.  v0:= v2.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa6a4.  call temp:= `j`(v0) @signature `Lokhttp3/u;.j:()Lokhttp3/m;` @kind virtual;
  #L3aa6aa.  v0:= temp @kind object;
  #L3aa6ac.  call `b`(v0, v2) @signature `Lokhttp3/m;.b:(Lokhttp3/v;)V` @kind virtual;
  #L3aa6b2.  call temp:= `e`(v2) @signature `Lokhttp3/v;.e:()Lokhttp3/y;` @kind virtual;
  #L3aa6b8.  v0:= temp @kind object;
  #L3aa6ba.  if v0 == 0 then goto L3aa6d2;
  #L3aa6be.  v1:= v2.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa6c2.  call temp:= `j`(v1) @signature `Lokhttp3/u;.j:()Lokhttp3/m;` @kind virtual;
  #L3aa6c8.  v1:= temp @kind object;
  #L3aa6ca.  call `f`(v1, v2) @signature `Lokhttp3/m;.f:(Lokhttp3/v;)V` @kind virtual;
  #L3aa6d0.  return v0 @kind object;
  #L3aa6d2.  v0:= new `java.io.IOException`;
  #L3aa6d6.  v1:= "Canceled" @kind object;
  #L3aa6da.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa6e0.  throw v0;
  #L3aa6e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aa6e4.  goto L3aa6fc;
  #L3aa6e6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3aa6e8.  call temp:= `k`(v2, v0) @signature `Lokhttp3/v;.k:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3aa6ee.  v0:= temp @kind object;
  #L3aa6f0.  v1:= v2.`okhttp3.v.d` @type ^`okhttp3.o` @kind object;
  #L3aa6f4.  call `b`(v1, v2, v0) @signature `Lokhttp3/o;.b:(Lokhttp3/d;Ljava/io/IOException;)V` @kind virtual;
  #L3aa6fa.  throw v0;
  #L3aa6fc.  v1:= v2.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa700.  call temp:= `j`(v1) @signature `Lokhttp3/u;.j:()Lokhttp3/m;` @kind virtual;
  #L3aa706.  v1:= temp @kind object;
  #L3aa708.  call `f`(v1, v2) @signature `Lokhttp3/m;.f:(Lokhttp3/v;)V` @kind virtual;
  #L3aa70e.  throw v0;
  #L3aa710.  v0:= new `java.lang.IllegalStateException`;
  #L3aa714.  v1:= "Already Executed" @kind object;
  #L3aa718.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa71e.  throw v0;
  #L3aa720.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aa722.  @monitorexit v2
  #L3aa724.  throw v0;
  catch `java.lang.Throwable` @[L3aa676..L3aa686] goto L3aa720;
  catch `java.io.IOException` @[L3aa6a0..L3aa6ba] goto L3aa6e6;
  catch `java.lang.Throwable` @[L3aa6a0..L3aa6ba] goto L3aa6e2;
  catch `java.io.IOException` @[L3aa6d2..L3aa6e2] goto L3aa6e6;
  catch `java.lang.Throwable` @[L3aa6d2..L3aa6e2] goto L3aa6e2;
  catch `java.lang.Throwable` @[L3aa6e8..L3aa6fc] goto L3aa6e2;
  catch `java.lang.Throwable` @[L3aa710..L3aa724] goto L3aa720;
}
procedure `boolean` `f`(`okhttp3.v` v1 @kind this) @signature `Lokhttp3/v;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa4dc.  v0:= v1.`okhttp3.v.b` @type ^`w2.j` @kind object;
  #L3aa4e0.  call temp:= `e`(v0) @signature `Lw2/j;.e:()Z` @kind virtual;
  #L3aa4e6.  v0:= temp;
  #L3aa4e8.  return v0;
}
procedure `okhttp3.w` `g`(`okhttp3.v` v1 @kind this) @signature `Lokhttp3/v;.g:()Lokhttp3/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa65c.  v0:= v1.`okhttp3.v.e` @type ^`okhttp3.w` @kind object;
  #L3aa660.  return v0 @kind object;
}
procedure `void` `h`(`okhttp3.v` v2 @kind this, `okhttp3.e` v3 @kind object) @signature `Lokhttp3/v;.h:(Lokhttp3/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa90c.  @monitorenter v2
  #L3aa90e.  v0:= v2.`okhttp3.v.g` @type ^`boolean` @kind boolean;
  #L3aa912.  if v0 != 0 then goto L3aa94c;
  #L3aa916.  v0:= 1I;
  #L3aa918.  v2.`okhttp3.v.g` @type ^`boolean` := v0 @kind boolean;
  #L3aa91c.  @monitorexit v2
  #L3aa91e.  call `c`(v2) @signature `Lokhttp3/v;.c:()V` @kind direct;
  #L3aa924.  v0:= v2.`okhttp3.v.d` @type ^`okhttp3.o` @kind object;
  #L3aa928.  call `c`(v0, v2) @signature `Lokhttp3/o;.c:(Lokhttp3/d;)V` @kind virtual;
  #L3aa92e.  v0:= v2.`okhttp3.v.a` @type ^`okhttp3.u` @kind object;
  #L3aa932.  call temp:= `j`(v0) @signature `Lokhttp3/u;.j:()Lokhttp3/m;` @kind virtual;
  #L3aa938.  v0:= temp @kind object;
  #L3aa93a.  v1:= new `okhttp3.v$b`;
  #L3aa93e.  call `<init>`(v1, v2, v3) @signature `Lokhttp3/v$b;.<init>:(Lokhttp3/v;Lokhttp3/e;)V` @kind direct;
  #L3aa944.  call `a`(v0, v1) @signature `Lokhttp3/m;.a:(Lokhttp3/v$b;)V` @kind virtual;
  #L3aa94a.  return @kind void;
  #L3aa94c.  v3:= new `java.lang.IllegalStateException`;
  #L3aa950.  v0:= "Already Executed" @kind object;
  #L3aa954.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa95a.  throw v3;
  #L3aa95c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aa95e.  @monitorexit v2
  #L3aa960.  throw v3;
  catch `java.lang.Throwable` @[L3aa90e..L3aa91e] goto L3aa95c;
  catch `java.lang.Throwable` @[L3aa94c..L3aa960] goto L3aa95c;
}
procedure `java.lang.String` `j`(`okhttp3.v` v1 @kind this) @signature `Lokhttp3/v;.j:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L3aa554.  v0:= v1.`okhttp3.v.e` @type ^`okhttp3.w` @kind object;
  #L3aa558.  call temp:= `h`(v0) @signature `Lokhttp3/w;.h:()Lokhttp3/r;` @kind virtual;
  #L3aa55e.  v0:= temp @kind object;
  #L3aa560.  call temp:= `A`(v0) @signature `Lokhttp3/r;.A:()Ljava/lang/String;` @kind virtual;
  #L3aa566.  v0:= temp @kind object;
  #L3aa568.  return v0 @kind object;
}
procedure `java.io.IOException` `k`(`okhttp3.v` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/v;.k:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3aa4fc.  v0:= v2.`okhttp3.v.c` @type ^`okio.a` @kind object;
  #L3aa500.  call temp:= `n`(v0) @signature `Lokio/a;.n:()Z` @kind virtual;
  #L3aa506.  v0:= temp;
  #L3aa508.  if v0 != 0 then goto L3aa50e;
  #L3aa50c.  return v3 @kind object;
  #L3aa50e.  v0:= new `java.io.InterruptedIOException`;
  #L3aa512.  v1:= "timeout" @kind object;
  #L3aa516.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa51c.  if v3 == 0 then goto L3aa526;
  #L3aa520.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3aa526.  return v0 @kind object;
}
procedure `java.lang.String` `l`(`okhttp3.v` v2 @kind this) @signature `Lokhttp3/v;.l:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3aa57c.  v0:= new `java.lang.StringBuilder`;
  #L3aa580.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa586.  call temp:= `f`(v2) @signature `Lokhttp3/v;.f:()Z` @kind virtual;
  #L3aa58c.  v1:= temp;
  #L3aa58e.  if v1 == 0 then goto L3aa598;
  #L3aa592.  v1:= "canceled " @kind object;
  #L3aa596.  goto L3aa59c;
  #L3aa598.  v1:= "" @kind object;
  #L3aa59c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa5a2.  v1:= v2.`okhttp3.v.f` @type ^`boolean` @kind boolean;
  #L3aa5a6.  if v1 == 0 then goto L3aa5b0;
  #L3aa5aa.  v1:= "web socket" @kind object;
  #L3aa5ae.  goto L3aa5b4;
  #L3aa5b0.  v1:= "call" @kind object;
  #L3aa5b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa5ba.  v1:= " to " @kind object;
  #L3aa5be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa5c4.  call temp:= `j`(v2) @signature `Lokhttp3/v;.j:()Ljava/lang/String;` @kind virtual;
  #L3aa5ca.  v1:= temp @kind object;
  #L3aa5cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa5d2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa5d8.  v0:= temp @kind object;
  #L3aa5da.  return v0 @kind object;
}
