record `okhttp3.k` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.k.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.k.b` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.k.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.k.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.k.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.k.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.k.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.k.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.k.i` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.k.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.k.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.k.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.k.m` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a6b7c.  v0:= "(\\d{2,4})[^\\d]*" @kind object;
  #L3a6b80.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3a6b86.  v0:= temp @kind object;
  #L3a6b88.  `@@okhttp3.k.j` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3a6b8c.  v0:= "(?i)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).*" @kind object;
  #L3a6b90.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3a6b96.  v0:= temp @kind object;
  #L3a6b98.  `@@okhttp3.k.k` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3a6b9c.  v0:= "(\\d{1,2})[^\\d]*" @kind object;
  #L3a6ba0.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3a6ba6.  v0:= temp @kind object;
  #L3a6ba8.  `@@okhttp3.k.l` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3a6bac.  v0:= "(\\d{1,2}):(\\d{1,2}):(\\d{1,2})[^\\d]*" @kind object;
  #L3a6bb0.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3a6bb6.  v0:= temp @kind object;
  #L3a6bb8.  `@@okhttp3.k.m` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3a6bbc.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.k` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `boolean` v7 , `boolean` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lokhttp3/k;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a6bd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a6bd6.  v0.`okhttp3.k.a` @type ^`java.lang.String` := v1 @kind object;
  #L3a6bda.  v0.`okhttp3.k.b` @type ^`java.lang.String` := v2 @kind object;
  #L3a6bde.  v0.`okhttp3.k.c` @type ^`long` := v3 @kind wide;
  #L3a6be2.  v0.`okhttp3.k.d` @type ^`java.lang.String` := v5 @kind object;
  #L3a6be6.  v0.`okhttp3.k.e` @type ^`java.lang.String` := v6 @kind object;
  #L3a6bea.  v0.`okhttp3.k.f` @type ^`boolean` := v7 @kind boolean;
  #L3a6bee.  v0.`okhttp3.k.g` @type ^`boolean` := v8 @kind boolean;
  #L3a6bf2.  v0.`okhttp3.k.i` @type ^`boolean` := v9 @kind boolean;
  #L3a6bf6.  v0.`okhttp3.k.h` @type ^`boolean` := v10 @kind boolean;
  #L3a6bfa.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lokhttp3/k;.a:(Ljava/lang/String;IIZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a62b4.  if v4 >= v5 then goto L3a632a;
  #L3a62b8.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a62be.  v0:= temp;
  #L3a62c0.  v1:= 32I;
  #L3a62c4.  v2:= 1I;
  #L3a62c6.  if v0 >= v1 then goto L3a62d2;
  #L3a62ca.  v1:= 9I;
  #L3a62ce.  if v0 != v1 then goto L3a6318;
  #L3a62d2.  v1:= 127I;
  #L3a62d6.  if v0 >= v1 then goto L3a6318;
  #L3a62da.  v1:= 48I;
  #L3a62de.  if v0 < v1 then goto L3a62ea;
  #L3a62e2.  v1:= 57I;
  #L3a62e6.  if v0 <= v1 then goto L3a6318;
  #L3a62ea.  v1:= 97I;
  #L3a62ee.  if v0 < v1 then goto L3a62fa;
  #L3a62f2.  v1:= 122I;
  #L3a62f6.  if v0 <= v1 then goto L3a6318;
  #L3a62fa.  v1:= 65I;
  #L3a62fe.  if v0 < v1 then goto L3a630a;
  #L3a6302.  v1:= 90I;
  #L3a6306.  if v0 <= v1 then goto L3a6318;
  #L3a630a.  v1:= 58I;
  #L3a630e.  if v0 != v1 then goto L3a6314;
  #L3a6312.  goto L3a6318;
  #L3a6314.  v0:= 0I;
  #L3a6316.  goto L3a631a;
  #L3a6318.  v0:= 1I;
  #L3a631a.  v1:= v6 ^~ 1;
  #L3a631e.  if v0 != v1 then goto L3a6324;
  #L3a6322.  return v4;
  #L3a6324.  v4:= v4 + 1;
  #L3a6328.  goto L3a62b4;
  #L3a632a.  return v5;
}
procedure `boolean` `b`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/k;.b:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3a619c.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a61a2.  v0:= temp;
  #L3a61a4.  v1:= 1I;
  #L3a61a6.  if v0 == 0 then goto L3a61ac;
  #L3a61aa.  return v1;
  #L3a61ac.  call temp:= `endsWith`(v2, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3a61b2.  v0:= temp;
  #L3a61b4.  if v0 == 0 then goto L3a61ea;
  #L3a61b8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a61be.  v0:= temp;
  #L3a61c0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a61c6.  v3:= temp;
  #L3a61c8.  v0:= v0 - v3 @kind int;
  #L3a61ca.  v0:= v0 - v1 @kind int;
  #L3a61cc.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a61d2.  v3:= temp;
  #L3a61d4.  v0:= 46I;
  #L3a61d8.  if v3 != v0 then goto L3a61ea;
  #L3a61dc.  call temp:= `J`(v2) @signature `Lt2/c;.J:(Ljava/lang/String;)Z` @kind static;
  #L3a61e2.  v2:= temp;
  #L3a61e4.  if v2 != 0 then goto L3a61ea;
  #L3a61e8.  return v1;
  #L3a61ea.  v2:= 0I;
  #L3a61ec.  return v2;
}
procedure `okhttp3.k` `d`(`long` v23 , `okhttp3.r` v25 @kind object, `java.lang.String` v26 @kind object) @signature `Lokhttp3/k;.d:(JLokhttp3/r;Ljava/lang/String;)Lokhttp3/k;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L3a68b4.  v0:= v26 @kind object;
  #L3a68b8.  call temp:= `length`(v26) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a68be.  v1:= temp;
  #L3a68c0.  v2:= 0I;
  #L3a68c2.  v3:= 59I;
  #L3a68c6.  call temp:= `n`(v0, v2, v1, v3) @signature `Lt2/c;.n:(Ljava/lang/String;IIC)I` @kind static;
  #L3a68cc.  v4:= temp;
  #L3a68ce.  v5:= 61I;
  #L3a68d2.  call temp:= `n`(v0, v2, v4, v5) @signature `Lt2/c;.n:(Ljava/lang/String;IIC)I` @kind static;
  #L3a68d8.  v6:= temp;
  #L3a68da.  v7:= 0I;
  #L3a68dc.  if v6 != v4 then goto L3a68e2;
  #L3a68e0.  return v7 @kind object;
  #L3a68e2.  call temp:= `I`(v0, v2, v6) @signature `Lt2/c;.I:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L3a68e8.  v9:= temp @kind object;
  #L3a68ea.  call temp:= `isEmpty`(v9) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3a68f0.  v8:= temp;
  #L3a68f2.  if v8 != 0 then goto L3a6b1e;
  #L3a68f6.  call temp:= `x`(v9) @signature `Lt2/c;.x:(Ljava/lang/String;)I` @kind static;
  #L3a68fc.  v8:= temp;
  #L3a68fe.  v10:= -1I;
  #L3a6900.  if v8 == v10 then goto L3a6908;
  #L3a6904.  goto L3a6b1e;
  #L3a6908.  v8:= 1I;
  #L3a690a.  v6:= v6 + v8 @kind int;
  #L3a690c.  call temp:= `I`(v0, v6, v4) @signature `Lt2/c;.I:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L3a6912.  v6:= temp @kind object;
  #L3a6914.  call temp:= `x`(v6) @signature `Lt2/c;.x:(Ljava/lang/String;)I` @kind static;
  #L3a691a.  v11:= temp;
  #L3a691c.  if v11 == v10 then goto L3a6922;
  #L3a6920.  return v7 @kind object;
  #L3a6922.  v4:= v4 + v8 @kind int;
  #L3a6924.  v10:= -1L;
  #L3a6928.  v12:= 253402300799999L;
  #L3a6932.  v8:= v7 @kind object;
  #L3a6934.  v14:= v8 @kind object;
  #L3a6936.  v19:= v10 @kind wide;
  #L3a693a.  v21:= v12 @kind wide;
  #L3a693e.  v15:= 0I;
  #L3a6940.  v16:= 0I;
  #L3a6944.  v17:= 1I;
  #L3a6948.  v18:= 0I;
  #L3a694c.  if v4 >= v1 then goto L3a6a28;
  #L3a6950.  call temp:= `n`(v0, v4, v1, v3) @signature `Lt2/c;.n:(Ljava/lang/String;IIC)I` @kind static;
  #L3a6956.  v7:= temp;
  #L3a6958.  call temp:= `n`(v0, v4, v7, v5) @signature `Lt2/c;.n:(Ljava/lang/String;IIC)I` @kind static;
  #L3a695e.  v3:= temp;
  #L3a6960.  call temp:= `I`(v0, v4, v3) @signature `Lt2/c;.I:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L3a6966.  v4:= temp @kind object;
  #L3a6968.  if v3 >= v7 then goto L3a697a;
  #L3a696c.  v3:= v3 + 1;
  #L3a6970.  call temp:= `I`(v0, v3, v7) @signature `Lt2/c;.I:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L3a6976.  v3:= temp @kind object;
  #L3a6978.  goto L3a697e;
  #L3a697a.  v3:= "" @kind object;
  #L3a697e.  v5:= "expires" @kind object;
  #L3a6982.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a6988.  v5:= temp;
  #L3a698a.  if v5 == 0 then goto L3a69a0;
  #L3a698e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a6994.  v4:= temp;
  #L3a6996.  call temp:= `h`(v3, v2, v4) @signature `Lokhttp3/k;.h:(Ljava/lang/String;II)J` @kind static;
  #L3a699c.  v21:= temp @kind wide;
  #L3a699e.  goto L3a69b8;
  #L3a69a0.  v5:= "max-age" @kind object;
  #L3a69a4.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a69aa.  v5:= temp;
  #L3a69ac.  if v5 == 0 then goto L3a69be;
  #L3a69b0.  call temp:= `i`(v3) @signature `Lokhttp3/k;.i:(Ljava/lang/String;)J` @kind static;
  #L3a69b6.  v19:= temp @kind wide;
  #L3a69b8.  v18:= 1I;
  #L3a69bc.  goto L3a6a18;
  #L3a69be.  v5:= "domain" @kind object;
  #L3a69c2.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a69c8.  v5:= temp;
  #L3a69ca.  if v5 == 0 then goto L3a69dc;
  #L3a69ce.  call temp:= `g`(v3) @signature `Lokhttp3/k;.g:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3a69d4.  v14:= temp @kind object;
  #L3a69d6.  v17:= 0I;
  #L3a69da.  goto L3a6a18;
  #L3a69dc.  v5:= "path" @kind object;
  #L3a69e0.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a69e6.  v5:= temp;
  #L3a69e8.  if v5 == 0 then goto L3a69f0;
  #L3a69ec.  v8:= v3 @kind object;
  #L3a69ee.  goto L3a6a18;
  #L3a69f0.  v3:= "secure" @kind object;
  #L3a69f4.  call temp:= `equalsIgnoreCase`(v4, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a69fa.  v3:= temp;
  #L3a69fc.  if v3 == 0 then goto L3a6a04;
  #L3a6a00.  v15:= 1I;
  #L3a6a02.  goto L3a6a18;
  #L3a6a04.  v3:= "httponly" @kind object;
  #L3a6a08.  call temp:= `equalsIgnoreCase`(v4, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a6a0e.  v3:= temp;
  #L3a6a10.  if v3 == 0 then goto L3a6a18;
  #L3a6a14.  v16:= 1I;
  #L3a6a18.  v4:= v7 + 1;
  #L3a6a1c.  v3:= 59I;
  #L3a6a20.  v5:= 61I;
  #L3a6a24.  v7:= 0I;
  #L3a6a26.  goto L3a694c;
  #L3a6a28.  v0:= -9223372036854775808L;
  #L3a6a2c.  v3:= lcmp(v19, v0);
  #L3a6a30.  if v3 != 0 then goto L3a6a38;
  #L3a6a34.  v11:= v0 @kind wide;
  #L3a6a36.  goto L3a6a82;
  #L3a6a38.  v0:= lcmp(v19, v10);
  #L3a6a3c.  if v0 == 0 then goto L3a6a7e;
  #L3a6a40.  v0:= 9223372036854775L;
  #L3a6a4a.  v3:= lcmp(v19, v0);
  #L3a6a4e.  if v3 > 0 then goto L3a6a5c;
  #L3a6a52.  v0:= 1000L;
  #L3a6a56.  v19:= v19 * v0 @kind long;
  #L3a6a5a.  goto L3a6a66;
  #L3a6a5c.  v19:= 9223372036854775807L;
  #L3a6a66.  v0:= v23 + v19 @kind long;
  #L3a6a6a.  v3:= lcmp(v0, v23);
  #L3a6a6e.  if v3 < 0 then goto L3a6a7a;
  #L3a6a72.  v3:= lcmp(v0, v12);
  #L3a6a76.  if v3 <= 0 then goto L3a6a34;
  #L3a6a7a.  v11:= v12 @kind wide;
  #L3a6a7c.  goto L3a6a82;
  #L3a6a7e.  v11:= v21 @kind wide;
  #L3a6a82.  call temp:= `l`(v25) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3a6a88.  v0:= temp @kind object;
  #L3a6a8a.  if v14 != 0 then goto L3a6a94;
  #L3a6a8e.  v13:= v0 @kind object;
  #L3a6a90.  v1:= 0I;
  #L3a6a92.  goto L3a6aa8;
  #L3a6a94.  call temp:= `b`(v0, v14) @signature `Lokhttp3/k;.b:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L3a6a9a.  v1:= temp;
  #L3a6a9c.  if v1 != 0 then goto L3a6aa4;
  #L3a6aa0.  v1:= 0I;
  #L3a6aa2.  return v1 @kind object;
  #L3a6aa4.  v1:= 0I;
  #L3a6aa6.  v13:= v14 @kind object;
  #L3a6aa8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a6aae.  v0:= temp;
  #L3a6ab0.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a6ab6.  v3:= temp;
  #L3a6ab8.  if v0 == v3 then goto L3a6ad2;
  #L3a6abc.  call temp:= `c`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.c:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L3a6ac2.  v0:= temp @kind object;
  #L3a6ac4.  call temp:= `d`(v0, v13) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3a6aca.  v0:= temp @kind object;
  #L3a6acc.  if v0 != 0 then goto L3a6ad2;
  #L3a6ad0.  return v1 @kind object;
  #L3a6ad2.  v0:= "/" @kind object;
  #L3a6ad6.  if v8 == 0 then goto L3a6aec;
  #L3a6ada.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3a6ae0.  v1:= temp;
  #L3a6ae2.  if v1 != 0 then goto L3a6ae8;
  #L3a6ae6.  goto L3a6aec;
  #L3a6ae8.  v14:= v8 @kind object;
  #L3a6aea.  goto L3a6b0e;
  #L3a6aec.  call temp:= `g`(v25) @signature `Lokhttp3/r;.g:()Ljava/lang/String;` @kind virtual;
  #L3a6af2.  v1:= temp @kind object;
  #L3a6af4.  v3:= 47I;
  #L3a6af8.  call temp:= `lastIndexOf`(v1, v3) @signature `Ljava/lang/String;.lastIndexOf:(I)I` @kind virtual;
  #L3a6afe.  v3:= temp;
  #L3a6b00.  if v3 == 0 then goto L3a6b0c;
  #L3a6b04.  call temp:= `substring`(v1, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a6b0a.  v0:= temp @kind object;
  #L3a6b0c.  v14:= v0 @kind object;
  #L3a6b0e.  v0:= new `okhttp3.k`;
  #L3a6b12.  v8:= v0 @kind object;
  #L3a6b14.  v10:= v6 @kind object;
  #L3a6b16.  call `<init>`(v8, v9, v10, v11, v13, v14, v15, v16, v17, v18) @signature `Lokhttp3/k;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @kind direct;
  #L3a6b1c.  return v0 @kind object;
  #L3a6b1e.  v0:= v7 @kind object;
  #L3a6b20.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3a698e..L3a699e] goto L3a6a18;
  catch `java.lang.NumberFormatException` @[L3a69b0..L3a69b8] goto L3a6a18;
  catch `java.lang.IllegalArgumentException` @[L3a69ce..L3a69d6] goto L3a6a18;
}
procedure `okhttp3.k` `e`(`okhttp3.r` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/k;.e:(Lokhttp3/r;Ljava/lang/String;)Lokhttp3/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a6b58.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3a6b5e.  v0:= temp @kind wide;
  #L3a6b60.  call temp:= `d`(v0, v2, v3) @signature `Lokhttp3/k;.d:(JLokhttp3/r;Ljava/lang/String;)Lokhttp3/k;` @kind static;
  #L3a6b66.  v2:= temp @kind object;
  #L3a6b68.  return v2 @kind object;
}
procedure `java.util.List` `f`(`okhttp3.r` v4 @kind object, `okhttp3.q` v5 @kind object) @signature `Lokhttp3/k;.f:(Lokhttp3/r;Lokhttp3/q;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a657c.  v0:= "Set-Cookie" @kind object;
  #L3a6580.  call temp:= `i`(v5, v0) @signature `Lokhttp3/q;.i:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L3a6586.  v5:= temp @kind object;
  #L3a6588.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a658e.  v0:= temp;
  #L3a6590.  v1:= 0I;
  #L3a6592.  v2:= 0I;
  #L3a6594.  if v2 >= v0 then goto L3a65cc;
  #L3a6598.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a659e.  v3:= temp @kind object;
  #L3a65a0.  v3:= (`java.lang.String`) v3 @kind object;
  #L3a65a4.  call temp:= `e`(v4, v3) @signature `Lokhttp3/k;.e:(Lokhttp3/r;Ljava/lang/String;)Lokhttp3/k;` @kind static;
  #L3a65aa.  v3:= temp @kind object;
  #L3a65ac.  if v3 != 0 then goto L3a65b2;
  #L3a65b0.  goto L3a65c6;
  #L3a65b2.  if v1 != 0 then goto L3a65c0;
  #L3a65b6.  v1:= new `java.util.ArrayList`;
  #L3a65ba.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a65c0.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a65c6.  v2:= v2 + 1;
  #L3a65ca.  goto L3a6594;
  #L3a65cc.  if v1 == 0 then goto L3a65da;
  #L3a65d0.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3a65d6.  v4:= temp @kind object;
  #L3a65d8.  goto L3a65e2;
  #L3a65da.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3a65e0.  v4:= temp @kind object;
  #L3a65e2.  return v4 @kind object;
}
procedure `java.lang.String` `g`(`java.lang.String` v2 @kind object) @signature `Lokhttp3/k;.g:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3a63fc.  v0:= "." @kind object;
  #L3a6400.  call temp:= `endsWith`(v2, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3a6406.  v1:= temp;
  #L3a6408.  if v1 != 0 then goto L3a643c;
  #L3a640c.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3a6412.  v0:= temp;
  #L3a6414.  if v0 == 0 then goto L3a6422;
  #L3a6418.  v0:= 1I;
  #L3a641a.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3a6420.  v2:= temp @kind object;
  #L3a6422.  call temp:= `d`(v2) @signature `Lt2/c;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3a6428.  v2:= temp @kind object;
  #L3a642a.  if v2 == 0 then goto L3a6430;
  #L3a642e.  return v2 @kind object;
  #L3a6430.  v2:= new `java.lang.IllegalArgumentException`;
  #L3a6434.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3a643a.  throw v2;
  #L3a643c.  v2:= new `java.lang.IllegalArgumentException`;
  #L3a6440.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3a6446.  throw v2;
}
procedure `long` `h`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lokhttp3/k;.h:(Ljava/lang/String;II)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3a65f4.  v0:= 0I;
  #L3a65f6.  call temp:= `a`(v12, v13, v14, v0) @signature `Lokhttp3/k;.a:(Ljava/lang/String;IIZ)I` @kind static;
  #L3a65fc.  v13:= temp;
  #L3a65fe.  v1:= `@@okhttp3.k.m` @type ^`java.util.regex.Pattern` @kind object;
  #L3a6602.  call temp:= `matcher`(v1, v12) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3a6608.  v1:= temp @kind object;
  #L3a660a.  v2:= -1I;
  #L3a660c.  v3:= -1I;
  #L3a660e.  v4:= -1I;
  #L3a6610.  v5:= -1I;
  #L3a6612.  v6:= -1I;
  #L3a6614.  v7:= -1I;
  #L3a6616.  v8:= -1I;
  #L3a6618.  v9:= 2I;
  #L3a661a.  v10:= 1I;
  #L3a661c.  if v13 >= v14 then goto L3a6732;
  #L3a6620.  v11:= v13 + 1;
  #L3a6624.  call temp:= `a`(v12, v11, v14, v10) @signature `Lokhttp3/k;.a:(Ljava/lang/String;IIZ)I` @kind static;
  #L3a662a.  v11:= temp;
  #L3a662c.  call temp:= `region`(v1, v13, v11) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L3a6632.  if v4 != v2 then goto L3a6682;
  #L3a6636.  v13:= `@@okhttp3.k.m` @type ^`java.util.regex.Pattern` @kind object;
  #L3a663a.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3a6640.  v13:= temp @kind object;
  #L3a6642.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L3a6648.  v13:= temp;
  #L3a664a.  if v13 == 0 then goto L3a6682;
  #L3a664e.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a6654.  v13:= temp @kind object;
  #L3a6656.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3a665c.  v4:= temp;
  #L3a665e.  call temp:= `group`(v1, v9) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a6664.  v13:= temp @kind object;
  #L3a6666.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3a666c.  v7:= temp;
  #L3a666e.  v13:= 3I;
  #L3a6670.  call temp:= `group`(v1, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a6676.  v13:= temp @kind object;
  #L3a6678.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3a667e.  v8:= temp;
  #L3a6680.  goto L3a6722;
  #L3a6682.  if v5 != v2 then goto L3a66b0;
  #L3a6686.  v13:= `@@okhttp3.k.l` @type ^`java.util.regex.Pattern` @kind object;
  #L3a668a.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3a6690.  v13:= temp @kind object;
  #L3a6692.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L3a6698.  v13:= temp;
  #L3a669a.  if v13 == 0 then goto L3a66b0;
  #L3a669e.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a66a4.  v13:= temp @kind object;
  #L3a66a6.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3a66ac.  v5:= temp;
  #L3a66ae.  goto L3a6722;
  #L3a66b0.  if v6 != v2 then goto L3a66f6;
  #L3a66b4.  v13:= `@@okhttp3.k.k` @type ^`java.util.regex.Pattern` @kind object;
  #L3a66b8.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3a66be.  v9:= temp @kind object;
  #L3a66c0.  call temp:= `matches`(v9) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L3a66c6.  v9:= temp;
  #L3a66c8.  if v9 == 0 then goto L3a66f6;
  #L3a66cc.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a66d2.  v6:= temp @kind object;
  #L3a66d4.  v9:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3a66d8.  call temp:= `toLowerCase`(v6, v9) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3a66de.  v6:= temp @kind object;
  #L3a66e0.  call temp:= `pattern`(v13) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L3a66e6.  v13:= temp @kind object;
  #L3a66e8.  call temp:= `indexOf`(v13, v6) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L3a66ee.  v13:= temp;
  #L3a66f0.  v6:= v13 / 4;
  #L3a66f4.  goto L3a6722;
  #L3a66f6.  if v3 != v2 then goto L3a6722;
  #L3a66fa.  v13:= `@@okhttp3.k.j` @type ^`java.util.regex.Pattern` @kind object;
  #L3a66fe.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3a6704.  v13:= temp @kind object;
  #L3a6706.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L3a670c.  v13:= temp;
  #L3a670e.  if v13 == 0 then goto L3a6722;
  #L3a6712.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3a6718.  v13:= temp @kind object;
  #L3a671a.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3a6720.  v3:= temp;
  #L3a6722.  v11:= v11 + 1;
  #L3a6726.  call temp:= `a`(v12, v11, v14, v0) @signature `Lokhttp3/k;.a:(Ljava/lang/String;IIZ)I` @kind static;
  #L3a672c.  v13:= temp;
  #L3a672e.  goto L3a6618;
  #L3a6732.  v12:= 70I;
  #L3a6736.  if v3 < v12 then goto L3a6746;
  #L3a673a.  v12:= 99I;
  #L3a673e.  if v3 > v12 then goto L3a6746;
  #L3a6742.  v3:= v3 + 1900;
  #L3a6746.  if v3 < 0 then goto L3a6756;
  #L3a674a.  v12:= 69I;
  #L3a674e.  if v3 > v12 then goto L3a6756;
  #L3a6752.  v3:= v3 + 2000;
  #L3a6756.  v12:= 1601I;
  #L3a675a.  if v3 < v12 then goto L3a6826;
  #L3a675e.  if v6 == v2 then goto L3a681a;
  #L3a6762.  if v5 < v10 then goto L3a680e;
  #L3a6766.  v12:= 31I;
  #L3a676a.  if v5 > v12 then goto L3a680e;
  #L3a676e.  if v4 < 0 then goto L3a6802;
  #L3a6772.  v12:= 23I;
  #L3a6776.  if v4 > v12 then goto L3a6802;
  #L3a677a.  if v7 < 0 then goto L3a67f6;
  #L3a677e.  v12:= 59I;
  #L3a6782.  if v7 > v12 then goto L3a67f6;
  #L3a6786.  if v8 < 0 then goto L3a67ea;
  #L3a678a.  if v8 > v12 then goto L3a67ea;
  #L3a678e.  v12:= new `java.util.GregorianCalendar`;
  #L3a6792.  v13:= `@@t2.c.p` @type ^`java.util.TimeZone` @kind object;
  #L3a6796.  call `<init>`(v12, v13) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L3a679c.  call `setLenient`(v12, v0) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L3a67a2.  call `set`(v12, v10, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L3a67a8.  v6:= v6 - v10 @kind int;
  #L3a67aa.  call `set`(v12, v9, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L3a67b0.  v13:= 5I;
  #L3a67b2.  call `set`(v12, v13, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L3a67b8.  v13:= 11I;
  #L3a67bc.  call `set`(v12, v13, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L3a67c2.  v13:= 12I;
  #L3a67c6.  call `set`(v12, v13, v7) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L3a67cc.  v13:= 13I;
  #L3a67d0.  call `set`(v12, v13, v8) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L3a67d6.  v13:= 14I;
  #L3a67da.  call `set`(v12, v13, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L3a67e0.  call temp:= `getTimeInMillis`(v12) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L3a67e6.  v12:= temp @kind wide;
  #L3a67e8.  return v12 @kind wide;
  #L3a67ea.  v12:= new `java.lang.IllegalArgumentException`;
  #L3a67ee.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3a67f4.  throw v12;
  #L3a67f6.  v12:= new `java.lang.IllegalArgumentException`;
  #L3a67fa.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3a6800.  throw v12;
  #L3a6802.  v12:= new `java.lang.IllegalArgumentException`;
  #L3a6806.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3a680c.  throw v12;
  #L3a680e.  v12:= new `java.lang.IllegalArgumentException`;
  #L3a6812.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3a6818.  throw v12;
  #L3a681a.  v12:= new `java.lang.IllegalArgumentException`;
  #L3a681e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3a6824.  throw v12;
  #L3a6826.  v12:= new `java.lang.IllegalArgumentException`;
  #L3a682a.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3a6830.  throw v12;
}
procedure `long` `i`(`java.lang.String` v6 @kind object) @signature `Lokhttp3/k;.i:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a6844.  v0:= -9223372036854775808L;
  #L3a6848.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3a684e.  v2:= temp @kind wide;
  #L3a6850.  v4:= 0L;
  #L3a6854.  v6:= lcmp(v2, v4);
  #L3a6858.  if v6 > 0 then goto L3a685e;
  #L3a685c.  goto L3a6860;
  #L3a685e.  v0:= v2 @kind wide;
  #L3a6860.  return v0 @kind wide;
  #L3a6862.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L3a6864.  v3:= "-?\\d+" @kind object;
  #L3a6868.  call temp:= `matches`(v6, v3) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L3a686e.  v3:= temp;
  #L3a6870.  if v3 == 0 then goto L3a6892;
  #L3a6874.  v2:= "-" @kind object;
  #L3a6878.  call temp:= `startsWith`(v6, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3a687e.  v6:= temp;
  #L3a6880.  if v6 == 0 then goto L3a6886;
  #L3a6884.  goto L3a6890;
  #L3a6886.  v0:= 9223372036854775807L;
  #L3a6890.  return v0 @kind wide;
  #L3a6892.  throw v2;
  catch `java.lang.NumberFormatException` @[L3a6848..L3a6850] goto L3a6862;
}
procedure `java.lang.String` `c`(`okhttp3.k` v1 @kind this) @signature `Lokhttp3/k;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a63e4.  v0:= v1.`okhttp3.k.a` @type ^`java.lang.String` @kind object;
  #L3a63e8.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.k` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lokhttp3/k;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a6200.  v0:= instanceof @variable v7 @type ^`okhttp3.k` @kind boolean;
  #L3a6204.  v1:= 0I;
  #L3a6206.  if v0 != 0 then goto L3a620c;
  #L3a620a.  return v1;
  #L3a620c.  v7:= (`okhttp3.k`) v7 @kind object;
  #L3a6210.  v0:= v7.`okhttp3.k.a` @type ^`java.lang.String` @kind object;
  #L3a6214.  v2:= v6.`okhttp3.k.a` @type ^`java.lang.String` @kind object;
  #L3a6218.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a621e.  v0:= temp;
  #L3a6220.  if v0 == 0 then goto L3a62a2;
  #L3a6224.  v0:= v7.`okhttp3.k.b` @type ^`java.lang.String` @kind object;
  #L3a6228.  v2:= v6.`okhttp3.k.b` @type ^`java.lang.String` @kind object;
  #L3a622c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a6232.  v0:= temp;
  #L3a6234.  if v0 == 0 then goto L3a62a2;
  #L3a6238.  v0:= v7.`okhttp3.k.d` @type ^`java.lang.String` @kind object;
  #L3a623c.  v2:= v6.`okhttp3.k.d` @type ^`java.lang.String` @kind object;
  #L3a6240.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a6246.  v0:= temp;
  #L3a6248.  if v0 == 0 then goto L3a62a2;
  #L3a624c.  v0:= v7.`okhttp3.k.e` @type ^`java.lang.String` @kind object;
  #L3a6250.  v2:= v6.`okhttp3.k.e` @type ^`java.lang.String` @kind object;
  #L3a6254.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a625a.  v0:= temp;
  #L3a625c.  if v0 == 0 then goto L3a62a2;
  #L3a6260.  v2:= v7.`okhttp3.k.c` @type ^`long` @kind wide;
  #L3a6264.  v4:= v6.`okhttp3.k.c` @type ^`long` @kind wide;
  #L3a6268.  v0:= lcmp(v2, v4);
  #L3a626c.  if v0 != 0 then goto L3a62a2;
  #L3a6270.  v0:= v7.`okhttp3.k.f` @type ^`boolean` @kind boolean;
  #L3a6274.  v2:= v6.`okhttp3.k.f` @type ^`boolean` @kind boolean;
  #L3a6278.  if v0 != v2 then goto L3a62a2;
  #L3a627c.  v0:= v7.`okhttp3.k.g` @type ^`boolean` @kind boolean;
  #L3a6280.  v2:= v6.`okhttp3.k.g` @type ^`boolean` @kind boolean;
  #L3a6284.  if v0 != v2 then goto L3a62a2;
  #L3a6288.  v0:= v7.`okhttp3.k.h` @type ^`boolean` @kind boolean;
  #L3a628c.  v2:= v6.`okhttp3.k.h` @type ^`boolean` @kind boolean;
  #L3a6290.  if v0 != v2 then goto L3a62a2;
  #L3a6294.  v7:= v7.`okhttp3.k.i` @type ^`boolean` @kind boolean;
  #L3a6298.  v0:= v6.`okhttp3.k.i` @type ^`boolean` @kind boolean;
  #L3a629c.  if v7 != v0 then goto L3a62a2;
  #L3a62a0.  v1:= 1I;
  #L3a62a2.  return v1;
}
procedure `int` `hashCode`(`okhttp3.k` v6 @kind this) @signature `Lokhttp3/k;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a633c.  v0:= v6.`okhttp3.k.a` @type ^`java.lang.String` @kind object;
  #L3a6340.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a6346.  v0:= temp;
  #L3a6348.  v1:= 527I;
  #L3a634c.  v1:= v1 + v0 @kind int;
  #L3a634e.  v1:= v1 * 31;
  #L3a6352.  v0:= v6.`okhttp3.k.b` @type ^`java.lang.String` @kind object;
  #L3a6356.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a635c.  v0:= temp;
  #L3a635e.  v1:= v1 + v0 @kind int;
  #L3a6360.  v1:= v1 * 31;
  #L3a6364.  v0:= v6.`okhttp3.k.d` @type ^`java.lang.String` @kind object;
  #L3a6368.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a636e.  v0:= temp;
  #L3a6370.  v1:= v1 + v0 @kind int;
  #L3a6372.  v1:= v1 * 31;
  #L3a6376.  v0:= v6.`okhttp3.k.e` @type ^`java.lang.String` @kind object;
  #L3a637a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a6380.  v0:= temp;
  #L3a6382.  v1:= v1 + v0 @kind int;
  #L3a6384.  v1:= v1 * 31;
  #L3a6388.  v2:= v6.`okhttp3.k.c` @type ^`long` @kind wide;
  #L3a638c.  v0:= 32I;
  #L3a6390.  v4:= v2 ^>> v0 @kind long;
  #L3a6394.  v2:= v2 ^~ v4 @kind long;
  #L3a6396.  v0:= (`int`) v2 @kind l2i;
  #L3a6398.  v1:= v1 + v0 @kind int;
  #L3a639a.  v1:= v1 * 31;
  #L3a639e.  v0:= v6.`okhttp3.k.f` @type ^`boolean` @kind boolean;
  #L3a63a2.  v0:= v0 ^~ 1;
  #L3a63a6.  v1:= v1 + v0 @kind int;
  #L3a63a8.  v1:= v1 * 31;
  #L3a63ac.  v0:= v6.`okhttp3.k.g` @type ^`boolean` @kind boolean;
  #L3a63b0.  v0:= v0 ^~ 1;
  #L3a63b4.  v1:= v1 + v0 @kind int;
  #L3a63b6.  v1:= v1 * 31;
  #L3a63ba.  v0:= v6.`okhttp3.k.h` @type ^`boolean` @kind boolean;
  #L3a63be.  v0:= v0 ^~ 1;
  #L3a63c2.  v1:= v1 + v0 @kind int;
  #L3a63c4.  v1:= v1 * 31;
  #L3a63c8.  v0:= v6.`okhttp3.k.i` @type ^`boolean` @kind boolean;
  #L3a63cc.  v0:= v0 ^~ 1;
  #L3a63d0.  v1:= v1 + v0 @kind int;
  #L3a63d2.  return v1;
}
procedure `java.lang.String` `j`(`okhttp3.k` v6 @kind this, `boolean` v7 ) @signature `Lokhttp3/k;.j:(Z)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a6474.  v0:= new `java.lang.StringBuilder`;
  #L3a6478.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a647e.  v1:= v6.`okhttp3.k.a` @type ^`java.lang.String` @kind object;
  #L3a6482.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6488.  v1:= 61I;
  #L3a648c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6492.  v1:= v6.`okhttp3.k.b` @type ^`java.lang.String` @kind object;
  #L3a6496.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a649c.  v1:= v6.`okhttp3.k.h` @type ^`boolean` @kind boolean;
  #L3a64a0.  if v1 == 0 then goto L3a64e6;
  #L3a64a4.  v1:= v6.`okhttp3.k.c` @type ^`long` @kind wide;
  #L3a64a8.  v3:= -9223372036854775808L;
  #L3a64ac.  v5:= lcmp(v1, v3);
  #L3a64b0.  if v5 != 0 then goto L3a64c0;
  #L3a64b4.  v1:= "; max-age=0" @kind object;
  #L3a64b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a64be.  goto L3a64e6;
  #L3a64c0.  v1:= "; expires=" @kind object;
  #L3a64c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a64ca.  v1:= new `java.util.Date`;
  #L3a64ce.  v2:= v6.`okhttp3.k.c` @type ^`long` @kind wide;
  #L3a64d2.  call `<init>`(v1, v2) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L3a64d8.  call temp:= `a`(v1) @signature `Lw2/d;.a:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L3a64de.  v1:= temp @kind object;
  #L3a64e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a64e6.  v1:= v6.`okhttp3.k.i` @type ^`boolean` @kind boolean;
  #L3a64ea.  if v1 != 0 then goto L3a6510;
  #L3a64ee.  v1:= "; domain=" @kind object;
  #L3a64f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a64f8.  if v7 == 0 then goto L3a6506;
  #L3a64fc.  v7:= "." @kind object;
  #L3a6500.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6506.  v7:= v6.`okhttp3.k.d` @type ^`java.lang.String` @kind object;
  #L3a650a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6510.  v7:= "; path=" @kind object;
  #L3a6514.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a651a.  v7:= v6.`okhttp3.k.e` @type ^`java.lang.String` @kind object;
  #L3a651e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6524.  v7:= v6.`okhttp3.k.f` @type ^`boolean` @kind boolean;
  #L3a6528.  if v7 == 0 then goto L3a6536;
  #L3a652c.  v7:= "; secure" @kind object;
  #L3a6530.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6536.  v7:= v6.`okhttp3.k.g` @type ^`boolean` @kind boolean;
  #L3a653a.  if v7 == 0 then goto L3a6548;
  #L3a653e.  v7:= "; httponly" @kind object;
  #L3a6542.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6548.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a654e.  v7:= temp @kind object;
  #L3a6550.  return v7 @kind object;
}
procedure `java.lang.String` `k`(`okhttp3.k` v1 @kind this) @signature `Lokhttp3/k;.k:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6564.  v0:= v1.`okhttp3.k.b` @type ^`java.lang.String` @kind object;
  #L3a6568.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.k` v1 @kind this) @signature `Lokhttp3/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6458.  v0:= 0I;
  #L3a645a.  call temp:= `j`(v1, v0) @signature `Lokhttp3/k;.j:(Z)Ljava/lang/String;` @kind virtual;
  #L3a6460.  v0:= temp @kind object;
  #L3a6462.  return v0 @kind object;
}
