record `okhttp3.w$a` @kind class @AccessFlag PUBLIC {
  `okhttp3.r` `okhttp3.w$a.a` @AccessFlag ;
  `java.lang.String` `okhttp3.w$a.b` @AccessFlag ;
  `okhttp3.q$a` `okhttp3.w$a.c` @AccessFlag ;
  `okhttp3.x` `okhttp3.w$a.d` @AccessFlag ;
  `java.util.Map` `okhttp3.w$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.w$a` v1 @kind this) @signature `Lokhttp3/w$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3aab58.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aab5e.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L3aab64.  v0:= temp @kind object;
  #L3aab66.  v1.`okhttp3.w$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L3aab6a.  v0:= "GET" @kind object;
  #L3aab6e.  v1.`okhttp3.w$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L3aab72.  v0:= new `okhttp3.q$a`;
  #L3aab76.  call `<init>`(v0) @signature `Lokhttp3/q$a;.<init>:()V` @kind direct;
  #L3aab7c.  v1.`okhttp3.w$a.c` @type ^`okhttp3.q$a` := v0 @kind object;
  #L3aab80.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.w$a` v2 @kind this, `okhttp3.w` v3 @kind object) @signature `Lokhttp3/w$a;.<init>:(Lokhttp3/w;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3aab94.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aab9a.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L3aaba0.  v0:= temp @kind object;
  #L3aaba2.  v2.`okhttp3.w$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L3aaba6.  v0:= v3.`okhttp3.w.a` @type ^`okhttp3.r` @kind object;
  #L3aabaa.  v2.`okhttp3.w$a.a` @type ^`okhttp3.r` := v0 @kind object;
  #L3aabae.  v0:= v3.`okhttp3.w.b` @type ^`java.lang.String` @kind object;
  #L3aabb2.  v2.`okhttp3.w$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L3aabb6.  v0:= v3.`okhttp3.w.d` @type ^`okhttp3.x` @kind object;
  #L3aabba.  v2.`okhttp3.w$a.d` @type ^`okhttp3.x` := v0 @kind object;
  #L3aabbe.  v0:= v3.`okhttp3.w.e` @type ^`java.util.Map` @kind object;
  #L3aabc2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3aabc8.  v0:= temp;
  #L3aabca.  if v0 == 0 then goto L3aabd8;
  #L3aabce.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L3aabd4.  v0:= temp @kind object;
  #L3aabd6.  goto L3aabe6;
  #L3aabd8.  v0:= new `java.util.LinkedHashMap`;
  #L3aabdc.  v1:= v3.`okhttp3.w.e` @type ^`java.util.Map` @kind object;
  #L3aabe0.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L3aabe6.  v2.`okhttp3.w$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L3aabea.  v3:= v3.`okhttp3.w.c` @type ^`okhttp3.q` @kind object;
  #L3aabee.  call temp:= `f`(v3) @signature `Lokhttp3/q;.f:()Lokhttp3/q$a;` @kind virtual;
  #L3aabf4.  v3:= temp @kind object;
  #L3aabf6.  v2.`okhttp3.w$a.c` @type ^`okhttp3.q$a` := v3 @kind object;
  #L3aabfa.  return @kind void;
}
procedure `okhttp3.w` `a`(`okhttp3.w$a` v2 @kind this) @signature `Lokhttp3/w$a;.a:()Lokhttp3/w;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa988.  v0:= v2.`okhttp3.w$a.a` @type ^`okhttp3.r` @kind object;
  #L3aa98c.  if v0 == 0 then goto L3aa99c;
  #L3aa990.  v0:= new `okhttp3.w`;
  #L3aa994.  call `<init>`(v0, v2) @signature `Lokhttp3/w;.<init>:(Lokhttp3/w$a;)V` @kind direct;
  #L3aa99a.  return v0 @kind object;
  #L3aa99c.  v0:= new `java.lang.IllegalStateException`;
  #L3aa9a0.  v1:= "url == null" @kind object;
  #L3aa9a4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa9aa.  throw v0;
}
procedure `okhttp3.w$a` `b`(`okhttp3.w$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/w$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa9bc.  v0:= v1.`okhttp3.w$a.c` @type ^`okhttp3.q$a` @kind object;
  #L3aa9c0.  call temp:= `f`(v0, v2, v3) @signature `Lokhttp3/q$a;.f:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/q$a;` @kind virtual;
  #L3aa9c6.  return v1 @kind object;
}
procedure `okhttp3.w$a` `c`(`okhttp3.w$a` v0 @kind this, `okhttp3.q` v1 @kind object) @signature `Lokhttp3/w$a;.c:(Lokhttp3/q;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;

  #L3aa9d8.  call temp:= `f`(v1) @signature `Lokhttp3/q;.f:()Lokhttp3/q$a;` @kind virtual;
  #L3aa9de.  v1:= temp @kind object;
  #L3aa9e0.  v0.`okhttp3.w$a.c` @type ^`okhttp3.q$a` := v1 @kind object;
  #L3aa9e4.  return v0 @kind object;
}
procedure `okhttp3.w$a` `d`(`okhttp3.w$a` v2 @kind this, `java.lang.String` v3 @kind object, `okhttp3.x` v4 @kind object) @signature `Lokhttp3/w$a;.d:(Ljava/lang/String;Lokhttp3/x;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa9f8.  v0:= "method == null" @kind object;
  #L3aa9fc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3aaa02.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3aaa08.  v0:= temp;
  #L3aaa0a.  if v0 == 0 then goto L3aaaa8;
  #L3aaa0e.  v0:= "method " @kind object;
  #L3aaa12.  if v4 == 0 then goto L3aaa58;
  #L3aaa16.  call temp:= `b`(v3) @signature `Lw2/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L3aaa1c.  v1:= temp;
  #L3aaa1e.  if v1 == 0 then goto L3aaa24;
  #L3aaa22.  goto L3aaa58;
  #L3aaa24.  v4:= new `java.lang.IllegalArgumentException`;
  #L3aaa28.  v1:= new `java.lang.StringBuilder`;
  #L3aaa2c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aaa32.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaa38.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaa3e.  v3:= " must not have a request body." @kind object;
  #L3aaa42.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaa48.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aaa4e.  v3:= temp @kind object;
  #L3aaa50.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aaa56.  throw v4;
  #L3aaa58.  if v4 != 0 then goto L3aaa9e;
  #L3aaa5c.  call temp:= `e`(v3) @signature `Lw2/f;.e:(Ljava/lang/String;)Z` @kind static;
  #L3aaa62.  v1:= temp;
  #L3aaa64.  if v1 != 0 then goto L3aaa6a;
  #L3aaa68.  goto L3aaa9e;
  #L3aaa6a.  v4:= new `java.lang.IllegalArgumentException`;
  #L3aaa6e.  v1:= new `java.lang.StringBuilder`;
  #L3aaa72.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aaa78.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaa7e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaa84.  v3:= " must have a request body." @kind object;
  #L3aaa88.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaa8e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aaa94.  v3:= temp @kind object;
  #L3aaa96.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aaa9c.  throw v4;
  #L3aaa9e.  v2.`okhttp3.w$a.b` @type ^`java.lang.String` := v3 @kind object;
  #L3aaaa2.  v2.`okhttp3.w$a.d` @type ^`okhttp3.x` := v4 @kind object;
  #L3aaaa6.  return v2 @kind object;
  #L3aaaa8.  v3:= new `java.lang.IllegalArgumentException`;
  #L3aaaac.  v4:= "method.length() == 0" @kind object;
  #L3aaab0.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aaab6.  throw v3;
}
procedure `okhttp3.w$a` `e`(`okhttp3.w$a` v1 @kind this, `okhttp3.x` v2 @kind object) @signature `Lokhttp3/w$a;.e:(Lokhttp3/x;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aaac8.  v0:= "POST" @kind object;
  #L3aaacc.  call temp:= `d`(v1, v0, v2) @signature `Lokhttp3/w$a;.d:(Ljava/lang/String;Lokhttp3/x;)Lokhttp3/w$a;` @kind virtual;
  #L3aaad2.  v2:= temp @kind object;
  #L3aaad4.  return v2 @kind object;
}
procedure `okhttp3.w$a` `f`(`okhttp3.w$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/w$a;.f:(Ljava/lang/String;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aaae8.  v0:= v1.`okhttp3.w$a.c` @type ^`okhttp3.q$a` @kind object;
  #L3aaaec.  call temp:= `e`(v0, v2) @signature `Lokhttp3/q$a;.e:(Ljava/lang/String;)Lokhttp3/q$a;` @kind virtual;
  #L3aaaf2.  return v1 @kind object;
}
procedure `okhttp3.w$a` `g`(`okhttp3.w$a` v1 @kind this, `java.net.URL` v2 @kind object) @signature `Lokhttp3/w$a;.g:(Ljava/net/URL;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aab04.  v0:= "url == null" @kind object;
  #L3aab08.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3aab0e.  call temp:= `toString`(v2) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aab14.  v2:= temp @kind object;
  #L3aab16.  call temp:= `k`(v2) @signature `Lokhttp3/r;.k:(Ljava/lang/String;)Lokhttp3/r;` @kind static;
  #L3aab1c.  v2:= temp @kind object;
  #L3aab1e.  call temp:= `h`(v1, v2) @signature `Lokhttp3/w$a;.h:(Lokhttp3/r;)Lokhttp3/w$a;` @kind virtual;
  #L3aab24.  v2:= temp @kind object;
  #L3aab26.  return v2 @kind object;
}
procedure `okhttp3.w$a` `h`(`okhttp3.w$a` v1 @kind this, `okhttp3.r` v2 @kind object) @signature `Lokhttp3/w$a;.h:(Lokhttp3/r;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aab38.  v0:= "url == null" @kind object;
  #L3aab3c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3aab42.  v1.`okhttp3.w$a.a` @type ^`okhttp3.r` := v2 @kind object;
  #L3aab46.  return v1 @kind object;
}
