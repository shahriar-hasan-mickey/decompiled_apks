record `okhttp3.x` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`okhttp3.x` v0 @kind this) @signature `Lokhttp3/x;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3aad40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aad46.  return @kind void;
}
procedure `okhttp3.x` `c`(`okhttp3.t` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/x;.c:(Lokhttp3/t;Ljava/lang/String;)Lokhttp3/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3aacdc.  v0:= `@@t2.c.j` @type ^`java.nio.charset.Charset` @kind object;
  #L3aace0.  if v2 == 0 then goto L3aad1e;
  #L3aace4.  call temp:= `a`(v2) @signature `Lokhttp3/t;.a:()Ljava/nio/charset/Charset;` @kind virtual;
  #L3aacea.  v1:= temp @kind object;
  #L3aacec.  if v1 != 0 then goto L3aad1c;
  #L3aacf0.  v1:= new `java.lang.StringBuilder`;
  #L3aacf4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aacfa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aad00.  v2:= "; charset=utf-8" @kind object;
  #L3aad04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aad0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aad10.  v2:= temp @kind object;
  #L3aad12.  call temp:= `d`(v2) @signature `Lokhttp3/t;.d:(Ljava/lang/String;)Lokhttp3/t;` @kind static;
  #L3aad18.  v2:= temp @kind object;
  #L3aad1a.  goto L3aad1e;
  #L3aad1c.  v0:= v1 @kind object;
  #L3aad1e.  call temp:= `getBytes`(v3, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3aad24.  v3:= temp @kind object;
  #L3aad26.  call temp:= `d`(v2, v3) @signature `Lokhttp3/x;.d:(Lokhttp3/t;[B)Lokhttp3/x;` @kind static;
  #L3aad2c.  v2:= temp @kind object;
  #L3aad2e.  return v2 @kind object;
}
procedure `okhttp3.x` `d`(`okhttp3.t` v2 @kind object, `byte`[] v3 @kind object) @signature `Lokhttp3/x;.d:(Lokhttp3/t;[B)Lokhttp3/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3aac88.  v0:= length @variable v3;
  #L3aac8a.  v1:= 0I;
  #L3aac8c.  call temp:= `e`(v2, v3, v1, v0) @signature `Lokhttp3/x;.e:(Lokhttp3/t;[BII)Lokhttp3/x;` @kind static;
  #L3aac92.  v2:= temp @kind object;
  #L3aac94.  return v2 @kind object;
}
procedure `okhttp3.x` `e`(`okhttp3.t` v7 @kind object, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokhttp3/x;.e:(Lokhttp3/t;[BII)Lokhttp3/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3aaca8.  v0:= "content == null" @kind object;
  #L3aacac.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3aacb2.  v0:= length @variable v8;
  #L3aacb4.  v1:= (`long`) v0 @kind i2l;
  #L3aacb6.  v3:= (`long`) v9 @kind i2l;
  #L3aacb8.  v5:= (`long`) v10 @kind i2l;
  #L3aacba.  call `f`(v1, v3, v5) @signature `Lt2/c;.f:(JJJ)V` @kind static;
  #L3aacc0.  v0:= new `okhttp3.x$a`;
  #L3aacc4.  call `<init>`(v0, v7, v10, v8, v9) @signature `Lokhttp3/x$a;.<init>:(Lokhttp3/t;I[BI)V` @kind direct;
  #L3aacca.  return v0 @kind object;
}
procedure `long` `a`() @signature `Lokhttp3/x;.a:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.t` `b`() @signature `Lokhttp3/x;.b:()Lokhttp3/t;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `f`(`okio.d` v0 @kind object) @signature `Lokhttp3/x;.f:(Lokio/d;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
