record `okhttp3.c` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.c.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.c.b` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.c.c` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.c.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.c.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.c.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.c.g` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.c.h` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.c.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.c.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.c.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.c.l` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.c.m` @AccessFlag ;
}
global `okhttp3.c` `@@okhttp3.c.n` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.c` `@@okhttp3.c.o` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3a4254.  v0:= new `okhttp3.c$a`;
  #L3a4258.  call `<init>`(v0) @signature `Lokhttp3/c$a;.<init>:()V` @kind direct;
  #L3a425e.  call temp:= `c`(v0) @signature `Lokhttp3/c$a;.c:()Lokhttp3/c$a;` @kind virtual;
  #L3a4264.  v0:= temp @kind object;
  #L3a4266.  call temp:= `a`(v0) @signature `Lokhttp3/c$a;.a:()Lokhttp3/c;` @kind virtual;
  #L3a426c.  v0:= temp @kind object;
  #L3a426e.  `@@okhttp3.c.n` @type ^`okhttp3.c` := v0 @kind object;
  #L3a4272.  v0:= new `okhttp3.c$a`;
  #L3a4276.  call `<init>`(v0) @signature `Lokhttp3/c$a;.<init>:()V` @kind direct;
  #L3a427c.  call temp:= `d`(v0) @signature `Lokhttp3/c$a;.d:()Lokhttp3/c$a;` @kind virtual;
  #L3a4282.  v0:= temp @kind object;
  #L3a4284.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3a4288.  v2:= 2147483647I;
  #L3a428e.  call temp:= `b`(v0, v2, v1) @signature `Lokhttp3/c$a;.b:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/c$a;` @kind virtual;
  #L3a4294.  v0:= temp @kind object;
  #L3a4296.  call temp:= `a`(v0) @signature `Lokhttp3/c$a;.a:()Lokhttp3/c;` @kind virtual;
  #L3a429c.  v0:= temp @kind object;
  #L3a429e.  `@@okhttp3.c.o` @type ^`okhttp3.c` := v0 @kind object;
  #L3a42a2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.c` v1 @kind this, `okhttp3.c$a` v2 @kind object) @signature `Lokhttp3/c;.<init>:(Lokhttp3/c$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3a4300.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a4306.  v0:= v2.`okhttp3.c$a.a` @type ^`boolean` @kind boolean;
  #L3a430a.  v1.`okhttp3.c.a` @type ^`boolean` := v0 @kind boolean;
  #L3a430e.  v0:= v2.`okhttp3.c$a.b` @type ^`boolean` @kind boolean;
  #L3a4312.  v1.`okhttp3.c.b` @type ^`boolean` := v0 @kind boolean;
  #L3a4316.  v0:= v2.`okhttp3.c$a.c` @type ^`int`;
  #L3a431a.  v1.`okhttp3.c.c` @type ^`int` := v0;
  #L3a431e.  v0:= -1I;
  #L3a4320.  v1.`okhttp3.c.d` @type ^`int` := v0;
  #L3a4324.  v0:= 0I;
  #L3a4326.  v1.`okhttp3.c.e` @type ^`boolean` := v0 @kind boolean;
  #L3a432a.  v1.`okhttp3.c.f` @type ^`boolean` := v0 @kind boolean;
  #L3a432e.  v1.`okhttp3.c.g` @type ^`boolean` := v0 @kind boolean;
  #L3a4332.  v0:= v2.`okhttp3.c$a.d` @type ^`int`;
  #L3a4336.  v1.`okhttp3.c.h` @type ^`int` := v0;
  #L3a433a.  v0:= v2.`okhttp3.c$a.e` @type ^`int`;
  #L3a433e.  v1.`okhttp3.c.i` @type ^`int` := v0;
  #L3a4342.  v0:= v2.`okhttp3.c$a.f` @type ^`boolean` @kind boolean;
  #L3a4346.  v1.`okhttp3.c.j` @type ^`boolean` := v0 @kind boolean;
  #L3a434a.  v0:= v2.`okhttp3.c$a.g` @type ^`boolean` @kind boolean;
  #L3a434e.  v1.`okhttp3.c.k` @type ^`boolean` := v0 @kind boolean;
  #L3a4352.  v2:= v2.`okhttp3.c$a.h` @type ^`boolean` @kind boolean;
  #L3a4356.  v1.`okhttp3.c.l` @type ^`boolean` := v2 @kind boolean;
  #L3a435a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.c` v0 @kind this, `boolean` v1 , `boolean` v2 , `int` v3 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 , `boolean` v12 , `java.lang.String` v13 @kind object) @signature `Lokhttp3/c;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a42b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a42ba.  v0.`okhttp3.c.a` @type ^`boolean` := v1 @kind boolean;
  #L3a42be.  v0.`okhttp3.c.b` @type ^`boolean` := v2 @kind boolean;
  #L3a42c2.  v0.`okhttp3.c.c` @type ^`int` := v3;
  #L3a42c6.  v0.`okhttp3.c.d` @type ^`int` := v4;
  #L3a42ca.  v0.`okhttp3.c.e` @type ^`boolean` := v5 @kind boolean;
  #L3a42ce.  v0.`okhttp3.c.f` @type ^`boolean` := v6 @kind boolean;
  #L3a42d2.  v0.`okhttp3.c.g` @type ^`boolean` := v7 @kind boolean;
  #L3a42d6.  v0.`okhttp3.c.h` @type ^`int` := v8;
  #L3a42da.  v0.`okhttp3.c.i` @type ^`int` := v9;
  #L3a42de.  v0.`okhttp3.c.j` @type ^`boolean` := v10 @kind boolean;
  #L3a42e2.  v0.`okhttp3.c.k` @type ^`boolean` := v11 @kind boolean;
  #L3a42e6.  v0.`okhttp3.c.l` @type ^`boolean` := v12 @kind boolean;
  #L3a42ea.  v0.`okhttp3.c.m` @type ^`java.lang.String` := v13 @kind object;
  #L3a42ee.  return @kind void;
}
procedure `java.lang.String` `a`(`okhttp3.c` v4 @kind this) @signature `Lokhttp3/c;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a3e10.  v0:= new `java.lang.StringBuilder`;
  #L3a3e14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a3e1a.  v1:= v4.`okhttp3.c.a` @type ^`boolean` @kind boolean;
  #L3a3e1e.  if v1 == 0 then goto L3a3e2c;
  #L3a3e22.  v1:= "no-cache, " @kind object;
  #L3a3e26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3e2c.  v1:= v4.`okhttp3.c.b` @type ^`boolean` @kind boolean;
  #L3a3e30.  if v1 == 0 then goto L3a3e3e;
  #L3a3e34.  v1:= "no-store, " @kind object;
  #L3a3e38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3e3e.  v1:= v4.`okhttp3.c.c` @type ^`int`;
  #L3a3e42.  v2:= ", " @kind object;
  #L3a3e46.  v3:= -1I;
  #L3a3e48.  if v1 == v3 then goto L3a3e66;
  #L3a3e4c.  v1:= "max-age=" @kind object;
  #L3a3e50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3e56.  v1:= v4.`okhttp3.c.c` @type ^`int`;
  #L3a3e5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3e60.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3e66.  v1:= v4.`okhttp3.c.d` @type ^`int`;
  #L3a3e6a.  if v1 == v3 then goto L3a3e88;
  #L3a3e6e.  v1:= "s-maxage=" @kind object;
  #L3a3e72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3e78.  v1:= v4.`okhttp3.c.d` @type ^`int`;
  #L3a3e7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3e82.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3e88.  v1:= v4.`okhttp3.c.e` @type ^`boolean` @kind boolean;
  #L3a3e8c.  if v1 == 0 then goto L3a3e9a;
  #L3a3e90.  v1:= "private, " @kind object;
  #L3a3e94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3e9a.  v1:= v4.`okhttp3.c.f` @type ^`boolean` @kind boolean;
  #L3a3e9e.  if v1 == 0 then goto L3a3eac;
  #L3a3ea2.  v1:= "public, " @kind object;
  #L3a3ea6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3eac.  v1:= v4.`okhttp3.c.g` @type ^`boolean` @kind boolean;
  #L3a3eb0.  if v1 == 0 then goto L3a3ebe;
  #L3a3eb4.  v1:= "must-revalidate, " @kind object;
  #L3a3eb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3ebe.  v1:= v4.`okhttp3.c.h` @type ^`int`;
  #L3a3ec2.  if v1 == v3 then goto L3a3ee0;
  #L3a3ec6.  v1:= "max-stale=" @kind object;
  #L3a3eca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3ed0.  v1:= v4.`okhttp3.c.h` @type ^`int`;
  #L3a3ed4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3eda.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3ee0.  v1:= v4.`okhttp3.c.i` @type ^`int`;
  #L3a3ee4.  if v1 == v3 then goto L3a3f02;
  #L3a3ee8.  v1:= "min-fresh=" @kind object;
  #L3a3eec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3ef2.  v1:= v4.`okhttp3.c.i` @type ^`int`;
  #L3a3ef6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3efc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3f02.  v1:= v4.`okhttp3.c.j` @type ^`boolean` @kind boolean;
  #L3a3f06.  if v1 == 0 then goto L3a3f14;
  #L3a3f0a.  v1:= "only-if-cached, " @kind object;
  #L3a3f0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3f14.  v1:= v4.`okhttp3.c.k` @type ^`boolean` @kind boolean;
  #L3a3f18.  if v1 == 0 then goto L3a3f26;
  #L3a3f1c.  v1:= "no-transform, " @kind object;
  #L3a3f20.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3f26.  v1:= v4.`okhttp3.c.l` @type ^`boolean` @kind boolean;
  #L3a3f2a.  if v1 == 0 then goto L3a3f38;
  #L3a3f2e.  v1:= "immutable, " @kind object;
  #L3a3f32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3f38.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3a3f3e.  v1:= temp;
  #L3a3f40.  if v1 != 0 then goto L3a3f4a;
  #L3a3f44.  v0:= "" @kind object;
  #L3a3f48.  return v0 @kind object;
  #L3a3f4a.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3a3f50.  v1:= temp;
  #L3a3f52.  v1:= v1 + -2;
  #L3a3f56.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3a3f5c.  v2:= temp;
  #L3a3f5e.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3f64.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a3f6a.  v0:= temp @kind object;
  #L3a3f6c.  return v0 @kind object;
}
procedure `okhttp3.c` `k`(`okhttp3.q` v22 @kind object) @signature `Lokhttp3/c;.k:(Lokhttp3/q;)Lokhttp3/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L3a3fa8.  v0:= v22 @kind object;
  #L3a3fac.  call temp:= `g`(v22) @signature `Lokhttp3/q;.g:()I` @kind virtual;
  #L3a3fb2.  v1:= temp;
  #L3a3fb4.  v6:= 0I;
  #L3a3fb6.  v7:= 1I;
  #L3a3fb8.  v8:= 0I;
  #L3a3fba.  v9:= 0I;
  #L3a3fbc.  v10:= 0I;
  #L3a3fbe.  v11:= -1I;
  #L3a3fc0.  v12:= -1I;
  #L3a3fc2.  v13:= 0I;
  #L3a3fc4.  v14:= 0I;
  #L3a3fc6.  v15:= 0I;
  #L3a3fc8.  v16:= -1I;
  #L3a3fcc.  v17:= -1I;
  #L3a3fd0.  v18:= 0I;
  #L3a3fd4.  v19:= 0I;
  #L3a3fd8.  v20:= 0I;
  #L3a3fdc.  if v6 >= v1 then goto L3a4226;
  #L3a3fe0.  call temp:= `e`(v0, v6) @signature `Lokhttp3/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L3a3fe6.  v2:= temp @kind object;
  #L3a3fe8.  call temp:= `h`(v0, v6) @signature `Lokhttp3/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L3a3fee.  v4:= temp @kind object;
  #L3a3ff0.  v3:= "Cache-Control" @kind object;
  #L3a3ff4.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a3ffa.  v3:= temp;
  #L3a3ffc.  if v3 == 0 then goto L3a400a;
  #L3a4000.  if v8 == 0 then goto L3a4006;
  #L3a4004.  goto L3a401a;
  #L3a4006.  v8:= v4 @kind object;
  #L3a4008.  goto L3a401c;
  #L3a400a.  v3:= "Pragma" @kind object;
  #L3a400e.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a4014.  v2:= temp;
  #L3a4016.  if v2 == 0 then goto L3a4218;
  #L3a401a.  v7:= 0I;
  #L3a401c.  v2:= 0I;
  #L3a401e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a4024.  v3:= temp;
  #L3a4026.  if v2 >= v3 then goto L3a4218;
  #L3a402a.  v3:= "=,;" @kind object;
  #L3a402e.  call temp:= `f`(v4, v2, v3) @signature `Lw2/e;.f:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L3a4034.  v3:= temp;
  #L3a4036.  call temp:= `substring`(v4, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a403c.  v2:= temp @kind object;
  #L3a403e.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3a4044.  v2:= temp @kind object;
  #L3a4046.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a404c.  v5:= temp;
  #L3a404e.  if v3 == v5 then goto L3a40da;
  #L3a4052.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a4058.  v5:= temp;
  #L3a405a.  v0:= 44I;
  #L3a405e.  if v5 == v0 then goto L3a40da;
  #L3a4062.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a4068.  v0:= temp;
  #L3a406a.  v5:= 59I;
  #L3a406e.  if v0 != v5 then goto L3a4074;
  #L3a4072.  goto L3a40da;
  #L3a4074.  v3:= v3 + 1;
  #L3a4078.  call temp:= `g`(v4, v3) @signature `Lw2/e;.g:(Ljava/lang/String;I)I` @kind static;
  #L3a407e.  v0:= temp;
  #L3a4080.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a4086.  v3:= temp;
  #L3a4088.  if v0 >= v3 then goto L3a40ba;
  #L3a408c.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a4092.  v3:= temp;
  #L3a4094.  v5:= 34I;
  #L3a4098.  if v3 != v5 then goto L3a40ba;
  #L3a409c.  v0:= v0 + 1;
  #L3a40a0.  v3:= "\"" @kind object;
  #L3a40a4.  call temp:= `f`(v4, v0, v3) @signature `Lw2/e;.f:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L3a40aa.  v3:= temp;
  #L3a40ac.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a40b2.  v0:= temp @kind object;
  #L3a40b4.  v5:= 1I;
  #L3a40b6.  v3:= v3 + v5 @kind int;
  #L3a40b8.  goto L3a40e2;
  #L3a40ba.  v5:= 1I;
  #L3a40bc.  v3:= ",;" @kind object;
  #L3a40c0.  call temp:= `f`(v4, v0, v3) @signature `Lw2/e;.f:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L3a40c6.  v3:= temp;
  #L3a40c8.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a40ce.  v0:= temp @kind object;
  #L3a40d0.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3a40d6.  v0:= temp @kind object;
  #L3a40d8.  goto L3a40e2;
  #L3a40da.  v5:= 1I;
  #L3a40dc.  v3:= v3 + 1;
  #L3a40e0.  v0:= 0I;
  #L3a40e2.  v5:= "no-cache" @kind object;
  #L3a40e6.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a40ec.  v5:= temp;
  #L3a40ee.  if v5 == 0 then goto L3a40fa;
  #L3a40f2.  v5:= -1I;
  #L3a40f4.  v9:= 1I;
  #L3a40f6.  goto L3a420e;
  #L3a40fa.  v5:= "no-store" @kind object;
  #L3a40fe.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a4104.  v5:= temp;
  #L3a4106.  if v5 == 0 then goto L3a4112;
  #L3a410a.  v5:= -1I;
  #L3a410c.  v10:= 1I;
  #L3a410e.  goto L3a420e;
  #L3a4112.  v5:= "max-age" @kind object;
  #L3a4116.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a411c.  v5:= temp;
  #L3a411e.  if v5 == 0 then goto L3a4130;
  #L3a4122.  v5:= -1I;
  #L3a4124.  call temp:= `d`(v0, v5) @signature `Lw2/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L3a412a.  v11:= temp;
  #L3a412c.  goto L3a420e;
  #L3a4130.  v5:= "s-maxage" @kind object;
  #L3a4134.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a413a.  v5:= temp;
  #L3a413c.  if v5 == 0 then goto L3a414c;
  #L3a4140.  v5:= -1I;
  #L3a4142.  call temp:= `d`(v0, v5) @signature `Lw2/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L3a4148.  v12:= temp;
  #L3a414a.  goto L3a420e;
  #L3a414c.  v5:= "private" @kind object;
  #L3a4150.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a4156.  v5:= temp;
  #L3a4158.  if v5 == 0 then goto L3a4162;
  #L3a415c.  v5:= -1I;
  #L3a415e.  v13:= 1I;
  #L3a4160.  goto L3a420e;
  #L3a4162.  v5:= "public" @kind object;
  #L3a4166.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a416c.  v5:= temp;
  #L3a416e.  if v5 == 0 then goto L3a4178;
  #L3a4172.  v5:= -1I;
  #L3a4174.  v14:= 1I;
  #L3a4176.  goto L3a420e;
  #L3a4178.  v5:= "must-revalidate" @kind object;
  #L3a417c.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a4182.  v5:= temp;
  #L3a4184.  if v5 == 0 then goto L3a418e;
  #L3a4188.  v5:= -1I;
  #L3a418a.  v15:= 1I;
  #L3a418c.  goto L3a420e;
  #L3a418e.  v5:= "max-stale" @kind object;
  #L3a4192.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a4198.  v5:= temp;
  #L3a419a.  if v5 == 0 then goto L3a41b0;
  #L3a419e.  v2:= 2147483647I;
  #L3a41a4.  call temp:= `d`(v0, v2) @signature `Lw2/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L3a41aa.  v16:= temp;
  #L3a41ac.  v5:= -1I;
  #L3a41ae.  goto L3a420e;
  #L3a41b0.  v5:= "min-fresh" @kind object;
  #L3a41b4.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a41ba.  v5:= temp;
  #L3a41bc.  if v5 == 0 then goto L3a41cc;
  #L3a41c0.  v5:= -1I;
  #L3a41c2.  call temp:= `d`(v0, v5) @signature `Lw2/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L3a41c8.  v17:= temp;
  #L3a41ca.  goto L3a420e;
  #L3a41cc.  v5:= -1I;
  #L3a41ce.  v0:= "only-if-cached" @kind object;
  #L3a41d2.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a41d8.  v0:= temp;
  #L3a41da.  if v0 == 0 then goto L3a41e4;
  #L3a41de.  v18:= 1I;
  #L3a41e2.  goto L3a420e;
  #L3a41e4.  v0:= "no-transform" @kind object;
  #L3a41e8.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a41ee.  v0:= temp;
  #L3a41f0.  if v0 == 0 then goto L3a41fa;
  #L3a41f4.  v19:= 1I;
  #L3a41f8.  goto L3a420e;
  #L3a41fa.  v0:= "immutable" @kind object;
  #L3a41fe.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a4204.  v0:= temp;
  #L3a4206.  if v0 == 0 then goto L3a420e;
  #L3a420a.  v20:= 1I;
  #L3a420e.  v0:= v22 @kind object;
  #L3a4212.  v2:= v3;
  #L3a4214.  goto L3a401e;
  #L3a4218.  v5:= -1I;
  #L3a421a.  v6:= v6 + 1;
  #L3a421e.  v0:= v22 @kind object;
  #L3a4222.  goto L3a3fdc;
  #L3a4226.  if v7 != 0 then goto L3a4230;
  #L3a422a.  v21:= 0I;
  #L3a422e.  goto L3a4234;
  #L3a4230.  v21:= v8 @kind object;
  #L3a4234.  v0:= new `okhttp3.c`;
  #L3a4238.  v8:= v0 @kind object;
  #L3a423a.  call `<init>`(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21) @signature `Lokhttp3/c;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @kind direct;
  #L3a4240.  return v0 @kind object;
}
procedure `boolean` `b`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3d38.  v0:= v1.`okhttp3.c.e` @type ^`boolean` @kind boolean;
  #L3a3d3c.  return v0;
}
procedure `boolean` `c`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3d50.  v0:= v1.`okhttp3.c.f` @type ^`boolean` @kind boolean;
  #L3a3d54.  return v0;
}
procedure `int` `d`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3dc8.  v0:= v1.`okhttp3.c.c` @type ^`int`;
  #L3a3dcc.  return v0;
}
procedure `int` `e`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3de0.  v0:= v1.`okhttp3.c.h` @type ^`int`;
  #L3a3de4.  return v0;
}
procedure `int` `f`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3df8.  v0:= v1.`okhttp3.c.i` @type ^`int`;
  #L3a3dfc.  return v0;
}
procedure `boolean` `g`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3d68.  v0:= v1.`okhttp3.c.g` @type ^`boolean` @kind boolean;
  #L3a3d6c.  return v0;
}
procedure `boolean` `h`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3d80.  v0:= v1.`okhttp3.c.a` @type ^`boolean` @kind boolean;
  #L3a3d84.  return v0;
}
procedure `boolean` `i`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3d98.  v0:= v1.`okhttp3.c.b` @type ^`boolean` @kind boolean;
  #L3a3d9c.  return v0;
}
procedure `boolean` `j`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.j:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3db0.  v0:= v1.`okhttp3.c.j` @type ^`boolean` @kind boolean;
  #L3a3db4.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.c` v1 @kind this) @signature `Lokhttp3/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3f80.  v0:= v1.`okhttp3.c.m` @type ^`java.lang.String` @kind object;
  #L3a3f84.  if v0 == 0 then goto L3a3f8a;
  #L3a3f88.  goto L3a3f96;
  #L3a3f8a.  call temp:= `a`(v1) @signature `Lokhttp3/c;.a:()Ljava/lang/String;` @kind direct;
  #L3a3f90.  v0:= temp @kind object;
  #L3a3f92.  v1.`okhttp3.c.m` @type ^`java.lang.String` := v0 @kind object;
  #L3a3f96.  return v0 @kind object;
}
