record `okhttp3.f` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.f.a` @AccessFlag PRIVATE_FINAL;
  `b3.c` `okhttp3.f.b` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.f` `@@okhttp3.f.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a471c.  v0:= new `okhttp3.f$a`;
  #L3a4720.  call `<init>`(v0) @signature `Lokhttp3/f$a;.<init>:()V` @kind direct;
  #L3a4726.  call temp:= `a`(v0) @signature `Lokhttp3/f$a;.a:()Lokhttp3/f;` @kind virtual;
  #L3a472c.  v0:= temp @kind object;
  #L3a472e.  `@@okhttp3.f.c` @type ^`okhttp3.f` := v0 @kind object;
  #L3a4732.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.f` v0 @kind this, `java.util.Set` v1 @kind object, `b3.c` v2 @kind object) @signature `Lokhttp3/f;.<init>:(Ljava/util/Set;Lb3/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a4744.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a474a.  v0.`okhttp3.f.a` @type ^`java.util.Set` := v1 @kind object;
  #L3a474e.  v0.`okhttp3.f.b` @type ^`b3.c` := v2 @kind object;
  #L3a4752.  return @kind void;
}
procedure `java.lang.String` `c`(`java.security.cert.Certificate` v2 @kind object) @signature `Lokhttp3/f;.c:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a45b8.  v0:= instanceof @variable v2 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L3a45bc.  if v0 == 0 then goto L3a45f8;
  #L3a45c0.  v0:= new `java.lang.StringBuilder`;
  #L3a45c4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a45ca.  v1:= "sha256/" @kind object;
  #L3a45ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a45d4.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L3a45d8.  call temp:= `e`(v2) @signature `Lokhttp3/f;.e:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind static;
  #L3a45de.  v2:= temp @kind object;
  #L3a45e0.  call temp:= `a`(v2) @signature `Lokio/ByteString;.a:()Ljava/lang/String;` @kind virtual;
  #L3a45e6.  v2:= temp @kind object;
  #L3a45e8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a45ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a45f4.  v2:= temp @kind object;
  #L3a45f6.  return v2 @kind object;
  #L3a45f8.  v2:= new `java.lang.IllegalArgumentException`;
  #L3a45fc.  v0:= "Certificate pinning requires X509 certificates" @kind object;
  #L3a4600.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a4606.  throw v2;
}
procedure `okio.ByteString` `d`(`java.security.cert.X509Certificate` v0 @kind object) @signature `Lokhttp3/f;.d:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag STATIC {
    temp;

  #L3a46b4.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L3a46ba.  v0:= temp @kind object;
  #L3a46bc.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L3a46c2.  v0:= temp @kind object;
  #L3a46c4.  call temp:= `j`(v0) @signature `Lokio/ByteString;.j:([B)Lokio/ByteString;` @kind static;
  #L3a46ca.  v0:= temp @kind object;
  #L3a46cc.  call temp:= `n`(v0) @signature `Lokio/ByteString;.n:()Lokio/ByteString;` @kind virtual;
  #L3a46d2.  v0:= temp @kind object;
  #L3a46d4.  return v0 @kind object;
}
procedure `okio.ByteString` `e`(`java.security.cert.X509Certificate` v0 @kind object) @signature `Lokhttp3/f;.e:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag STATIC {
    temp;

  #L3a46e8.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L3a46ee.  v0:= temp @kind object;
  #L3a46f0.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L3a46f6.  v0:= temp @kind object;
  #L3a46f8.  call temp:= `j`(v0) @signature `Lokio/ByteString;.j:([B)Lokio/ByteString;` @kind static;
  #L3a46fe.  v0:= temp @kind object;
  #L3a4700.  call temp:= `o`(v0) @signature `Lokio/ByteString;.o:()Lokio/ByteString;` @kind virtual;
  #L3a4706.  v0:= temp @kind object;
  #L3a4708.  return v0 @kind object;
}
procedure `void` `a`(`okhttp3.f` v12 @kind this, `java.lang.String` v13 @kind object, `java.util.List` v14 @kind object) @signature `Lokhttp3/f;.a:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3a4764.  call temp:= `b`(v12, v13) @signature `Lokhttp3/f;.b:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L3a476a.  v0:= temp @kind object;
  #L3a476c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3a4772.  v1:= temp;
  #L3a4774.  if v1 == 0 then goto L3a477a;
  #L3a4778.  return @kind void;
  #L3a477a.  v1:= v12.`okhttp3.f.b` @type ^`b3.c` @kind object;
  #L3a477e.  if v1 == 0 then goto L3a478a;
  #L3a4782.  call temp:= `a`(v1, v14, v13) @signature `Lb3/c;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L3a4788.  v14:= temp @kind object;
  #L3a478a.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a4790.  v1:= temp;
  #L3a4792.  v2:= 0I;
  #L3a4794.  v3:= 0I;
  #L3a4796.  if v3 >= v1 then goto L3a4866;
  #L3a479a.  call temp:= `get`(v14, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a47a0.  v4:= temp @kind object;
  #L3a47a2.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L3a47a6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a47ac.  v5:= temp;
  #L3a47ae.  v6:= 0I;
  #L3a47b0.  v7:= v6 @kind object;
  #L3a47b2.  v8:= 0I;
  #L3a47b4.  if v8 >= v5 then goto L3a4860;
  #L3a47b8.  call temp:= `get`(v0, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a47be.  v9:= temp @kind object;
  #L3a47c0.  v9:= (`okhttp3.f$b`) v9 @kind object;
  #L3a47c4.  v10:= v9.`okhttp3.f$b.c` @type ^`java.lang.String` @kind object;
  #L3a47c8.  v11:= "sha256/" @kind object;
  #L3a47cc.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a47d2.  v10:= temp;
  #L3a47d4.  if v10 == 0 then goto L3a47f6;
  #L3a47d8.  if v6 != 0 then goto L3a47e4;
  #L3a47dc.  call temp:= `e`(v4) @signature `Lokhttp3/f;.e:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind static;
  #L3a47e2.  v6:= temp @kind object;
  #L3a47e4.  v9:= v9.`okhttp3.f$b.d` @type ^`okio.ByteString` @kind object;
  #L3a47e8.  call temp:= `equals`(v9, v6) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a47ee.  v9:= temp;
  #L3a47f0.  if v9 == 0 then goto L3a4828;
  #L3a47f4.  return @kind void;
  #L3a47f6.  v10:= v9.`okhttp3.f$b.c` @type ^`java.lang.String` @kind object;
  #L3a47fa.  v11:= "sha1/" @kind object;
  #L3a47fe.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a4804.  v10:= temp;
  #L3a4806.  if v10 == 0 then goto L3a482e;
  #L3a480a.  if v7 != 0 then goto L3a4816;
  #L3a480e.  call temp:= `d`(v4) @signature `Lokhttp3/f;.d:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind static;
  #L3a4814.  v7:= temp @kind object;
  #L3a4816.  v9:= v9.`okhttp3.f$b.d` @type ^`okio.ByteString` @kind object;
  #L3a481a.  call temp:= `equals`(v9, v7) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a4820.  v9:= temp;
  #L3a4822.  if v9 == 0 then goto L3a4828;
  #L3a4826.  return @kind void;
  #L3a4828.  v8:= v8 + 1;
  #L3a482c.  goto L3a47b4;
  #L3a482e.  v13:= new `java.lang.AssertionError`;
  #L3a4832.  v14:= new `java.lang.StringBuilder`;
  #L3a4836.  call `<init>`(v14) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a483c.  v0:= "unsupported hashAlgorithm: " @kind object;
  #L3a4840.  call temp:= `append`(v14, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4846.  v0:= v9.`okhttp3.f$b.c` @type ^`java.lang.String` @kind object;
  #L3a484a.  call temp:= `append`(v14, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4850.  call temp:= `toString`(v14) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a4856.  v14:= temp @kind object;
  #L3a4858.  call `<init>`(v13, v14) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3a485e.  throw v13;
  #L3a4860.  v3:= v3 + 1;
  #L3a4864.  goto L3a4796;
  #L3a4866.  v1:= new `java.lang.StringBuilder`;
  #L3a486a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a4870.  v3:= "Certificate pinning failure!" @kind object;
  #L3a4874.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a487a.  v3:= "\n  Peer certificate chain:" @kind object;
  #L3a487e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4884.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a488a.  v3:= temp;
  #L3a488c.  v4:= 0I;
  #L3a488e.  v5:= "\n    " @kind object;
  #L3a4892.  if v4 >= v3 then goto L3a48dc;
  #L3a4896.  call temp:= `get`(v14, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a489c.  v6:= temp @kind object;
  #L3a489e.  v6:= (`java.security.cert.X509Certificate`) v6 @kind object;
  #L3a48a2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a48a8.  call temp:= `c`(v6) @signature `Lokhttp3/f;.c:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L3a48ae.  v5:= temp @kind object;
  #L3a48b0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a48b6.  v5:= ": " @kind object;
  #L3a48ba.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a48c0.  call temp:= `getSubjectDN`(v6) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L3a48c6.  v5:= temp @kind object;
  #L3a48c8.  call temp:= `getName`(v5) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L3a48ce.  v5:= temp @kind object;
  #L3a48d0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a48d6.  v4:= v4 + 1;
  #L3a48da.  goto L3a488e;
  #L3a48dc.  v14:= "\n  Pinned certificates for " @kind object;
  #L3a48e0.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a48e6.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a48ec.  v13:= ":" @kind object;
  #L3a48f0.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a48f6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a48fc.  v13:= temp;
  #L3a48fe.  if v2 >= v13 then goto L3a4920;
  #L3a4902.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a4908.  v14:= temp @kind object;
  #L3a490a.  v14:= (`okhttp3.f$b`) v14 @kind object;
  #L3a490e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4914.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a491a.  v2:= v2 + 1;
  #L3a491e.  goto L3a48fe;
  #L3a4920.  v13:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L3a4924.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a492a.  v14:= temp @kind object;
  #L3a492c.  call `<init>`(v13, v14) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a4932.  throw v13;
}
procedure `java.util.List` `b`(`okhttp3.f` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/f;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a4618.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3a461e.  v0:= temp @kind object;
  #L3a4620.  v1:= v4.`okhttp3.f.a` @type ^`java.util.Set` @kind object;
  #L3a4624.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a462a.  v1:= temp @kind object;
  #L3a462c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a4632.  v2:= temp;
  #L3a4634.  if v2 == 0 then goto L3a466e;
  #L3a4638.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a463e.  v2:= temp @kind object;
  #L3a4640.  v2:= (`okhttp3.f$b`) v2 @kind object;
  #L3a4644.  call temp:= `a`(v2, v5) @signature `Lokhttp3/f$b;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L3a464a.  v3:= temp;
  #L3a464c.  if v3 == 0 then goto L3a462c;
  #L3a4650.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3a4656.  v3:= temp;
  #L3a4658.  if v3 == 0 then goto L3a4666;
  #L3a465c.  v0:= new `java.util.ArrayList`;
  #L3a4660.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a4666.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a466c.  goto L3a462c;
  #L3a466e.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lokhttp3/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a452c.  v0:= 1I;
  #L3a452e.  if v4 != v3 then goto L3a4534;
  #L3a4532.  return v0;
  #L3a4534.  v1:= instanceof @variable v4 @type ^`okhttp3.f` @kind boolean;
  #L3a4538.  if v1 == 0 then goto L3a456a;
  #L3a453c.  v1:= v3.`okhttp3.f.b` @type ^`b3.c` @kind object;
  #L3a4540.  v4:= (`okhttp3.f`) v4 @kind object;
  #L3a4544.  v2:= v4.`okhttp3.f.b` @type ^`b3.c` @kind object;
  #L3a4548.  call temp:= `q`(v1, v2) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a454e.  v1:= temp;
  #L3a4550.  if v1 == 0 then goto L3a456a;
  #L3a4554.  v1:= v3.`okhttp3.f.a` @type ^`java.util.Set` @kind object;
  #L3a4558.  v4:= v4.`okhttp3.f.a` @type ^`java.util.Set` @kind object;
  #L3a455c.  call temp:= `equals`(v1, v4) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3a4562.  v4:= temp;
  #L3a4564.  if v4 == 0 then goto L3a456a;
  #L3a4568.  goto L3a456c;
  #L3a456a.  v0:= 0I;
  #L3a456c.  return v0;
}
procedure `okhttp3.f` `f`(`okhttp3.f` v2 @kind this, `b3.c` v3 @kind object) @signature `Lokhttp3/f;.f:(Lb3/c;)Lokhttp3/f;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3a4680.  v0:= v2.`okhttp3.f.b` @type ^`b3.c` @kind object;
  #L3a4684.  call temp:= `q`(v0, v3) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a468a.  v0:= temp;
  #L3a468c.  if v0 == 0 then goto L3a4694;
  #L3a4690.  v0:= v2 @kind object;
  #L3a4692.  goto L3a46a2;
  #L3a4694.  v0:= new `okhttp3.f`;
  #L3a4698.  v1:= v2.`okhttp3.f.a` @type ^`java.util.Set` @kind object;
  #L3a469c.  call `<init>`(v0, v1, v3) @signature `Lokhttp3/f;.<init>:(Ljava/util/Set;Lb3/c;)V` @kind direct;
  #L3a46a2.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.f` v2 @kind this) @signature `Lokhttp3/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a4580.  v0:= v2.`okhttp3.f.b` @type ^`b3.c` @kind object;
  #L3a4584.  if v0 == 0 then goto L3a4592;
  #L3a4588.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a458e.  v0:= temp;
  #L3a4590.  goto L3a4594;
  #L3a4592.  v0:= 0I;
  #L3a4594.  v0:= v0 * 31;
  #L3a4598.  v1:= v2.`okhttp3.f.a` @type ^`java.util.Set` @kind object;
  #L3a459c.  call temp:= `hashCode`(v1) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L3a45a2.  v1:= temp;
  #L3a45a4.  v0:= v0 + v1 @kind int;
  #L3a45a6.  return v0;
}
