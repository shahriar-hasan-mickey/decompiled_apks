record `okhttp3.TlsVersion` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.TlsVersion.javaName` @AccessFlag FINAL;
}
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion`[] `@@okhttp3.TlsVersion.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/TlsVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3aba54.  v0:= new `okhttp3.TlsVersion`;
  #L3aba58.  v1:= "TLS_1_3" @kind object;
  #L3aba5c.  v2:= 0I;
  #L3aba5e.  v3:= "TLSv1.3" @kind object;
  #L3aba62.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3aba68.  `@@okhttp3.TlsVersion.a` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L3aba6c.  v1:= new `okhttp3.TlsVersion`;
  #L3aba70.  v3:= "TLS_1_2" @kind object;
  #L3aba74.  v4:= 1I;
  #L3aba76.  v5:= "TLSv1.2" @kind object;
  #L3aba7a.  call `<init>`(v1, v3, v4, v5) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3aba80.  `@@okhttp3.TlsVersion.b` @type ^`okhttp3.TlsVersion` := v1 @kind object;
  #L3aba84.  v3:= new `okhttp3.TlsVersion`;
  #L3aba88.  v5:= "TLS_1_1" @kind object;
  #L3aba8c.  v6:= 2I;
  #L3aba8e.  v7:= "TLSv1.1" @kind object;
  #L3aba92.  call `<init>`(v3, v5, v6, v7) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3aba98.  `@@okhttp3.TlsVersion.c` @type ^`okhttp3.TlsVersion` := v3 @kind object;
  #L3aba9c.  v5:= new `okhttp3.TlsVersion`;
  #L3abaa0.  v7:= "TLS_1_0" @kind object;
  #L3abaa4.  v8:= 3I;
  #L3abaa6.  v9:= "TLSv1" @kind object;
  #L3abaaa.  call `<init>`(v5, v7, v8, v9) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3abab0.  `@@okhttp3.TlsVersion.d` @type ^`okhttp3.TlsVersion` := v5 @kind object;
  #L3abab4.  v7:= new `okhttp3.TlsVersion`;
  #L3abab8.  v9:= "SSL_3_0" @kind object;
  #L3ababc.  v10:= 4I;
  #L3ababe.  v11:= "SSLv3" @kind object;
  #L3abac2.  call `<init>`(v7, v9, v10, v11) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3abac8.  `@@okhttp3.TlsVersion.e` @type ^`okhttp3.TlsVersion` := v7 @kind object;
  #L3abacc.  v9:= 5I;
  #L3abace.  v9:= new `okhttp3.TlsVersion`[v9];
  #L3abad2.  v9[v2]:= v0 @kind object;
  #L3abad6.  v9[v4]:= v1 @kind object;
  #L3abada.  v9[v6]:= v3 @kind object;
  #L3abade.  v9[v8]:= v5 @kind object;
  #L3abae2.  v9[v10]:= v7 @kind object;
  #L3abae6.  `@@okhttp3.TlsVersion.f` @type ^`okhttp3.TlsVersion`[] := v9 @kind object;
  #L3abaea.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3abafc.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3abb02.  v0.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` := v3 @kind object;
  #L3abb06.  return @kind void;
}
procedure `okhttp3.TlsVersion` `a`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/TlsVersion;.a:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab8dc.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3ab8e2.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3ab8e8.  v0:= temp;
  #L3ab8ea.  v1:= -1I;
  #L3ab8ec.  goto L3ab9b4;
  #L3ab8f2.  goto L3ab960;
  #L3ab8f4.  v0:= "TLSv1" @kind object;
  #L3ab8f8.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab8fe.  v0:= temp;
  #L3ab900.  if v0 != 0 then goto L3ab906;
  #L3ab904.  goto L3ab960;
  #L3ab906.  v1:= 4I;
  #L3ab908.  goto L3ab960;
  #L3ab90a.  v0:= "SSLv3" @kind object;
  #L3ab90e.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab914.  v0:= temp;
  #L3ab916.  if v0 != 0 then goto L3ab91c;
  #L3ab91a.  goto L3ab960;
  #L3ab91c.  v1:= 3I;
  #L3ab91e.  goto L3ab960;
  #L3ab920.  v0:= "TLSv1.3" @kind object;
  #L3ab924.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab92a.  v0:= temp;
  #L3ab92c.  if v0 != 0 then goto L3ab932;
  #L3ab930.  goto L3ab960;
  #L3ab932.  v1:= 2I;
  #L3ab934.  goto L3ab960;
  #L3ab936.  v0:= "TLSv1.2" @kind object;
  #L3ab93a.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab940.  v0:= temp;
  #L3ab942.  if v0 != 0 then goto L3ab948;
  #L3ab946.  goto L3ab960;
  #L3ab948.  v1:= 1I;
  #L3ab94a.  goto L3ab960;
  #L3ab94c.  v0:= "TLSv1.1" @kind object;
  #L3ab950.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab956.  v0:= temp;
  #L3ab958.  if v0 != 0 then goto L3ab95e;
  #L3ab95c.  goto L3ab960;
  #L3ab95e.  v1:= 0I;
  #L3ab960.  goto L3ab9e0;
  #L3ab966.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ab96a.  v1:= new `java.lang.StringBuilder`;
  #L3ab96e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ab974.  v2:= "Unexpected TLS version: " @kind object;
  #L3ab978.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab97e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab984.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ab98a.  v3:= temp @kind object;
  #L3ab98c.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab992.  throw v0;
  #L3ab994.  v3:= `@@okhttp3.TlsVersion.d` @type ^`okhttp3.TlsVersion` @kind object;
  #L3ab998.  return v3 @kind object;
  #L3ab99a.  v3:= `@@okhttp3.TlsVersion.e` @type ^`okhttp3.TlsVersion` @kind object;
  #L3ab99e.  return v3 @kind object;
  #L3ab9a0.  v3:= `@@okhttp3.TlsVersion.a` @type ^`okhttp3.TlsVersion` @kind object;
  #L3ab9a4.  return v3 @kind object;
  #L3ab9a6.  v3:= `@@okhttp3.TlsVersion.b` @type ^`okhttp3.TlsVersion` @kind object;
  #L3ab9aa.  return v3 @kind object;
  #L3ab9ac.  v3:= `@@okhttp3.TlsVersion.c` @type ^`okhttp3.TlsVersion` @kind object;
  #L3ab9b0.  return v3 @kind object;
  #L3ab9b2.  
  #L3ab9b4.  switch v0
                  | -503070503 => goto L3ab94c
                  | -503070502 => goto L3ab936
                  | -503070501 => goto L3ab920
                  | 79201641 => goto L3ab90a
                  | 79923350 => goto L3ab8f4
                  | else => goto L3ab8f2;
  #L3ab9e0.  switch v1
                  | 0 => goto L3ab9ac
                  | 1 => goto L3ab9a6
                  | 2 => goto L3ab9a0
                  | 3 => goto L3ab99a
                  | 4 => goto L3ab994
                  | else => goto L3ab966;
}
procedure `java.util.List` `b`(`java.lang.String`[] v4 @kind object) @signature `Lokhttp3/TlsVersion;.b:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ab894.  v0:= new `java.util.ArrayList`;
  #L3ab898.  v1:= length @variable v4;
  #L3ab89a.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3ab8a0.  v1:= length @variable v4;
  #L3ab8a2.  v2:= 0I;
  #L3ab8a4.  if v2 >= v1 then goto L3ab8c0;
  #L3ab8a8.  v3:= v4[v2] @kind object;
  #L3ab8ac.  call temp:= `a`(v3) @signature `Lokhttp3/TlsVersion;.a:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L3ab8b2.  v3:= temp @kind object;
  #L3ab8b4.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ab8ba.  v2:= v2 + 1;
  #L3ab8be.  goto L3ab8a4;
  #L3ab8c0.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3ab8c6.  v4:= temp @kind object;
  #L3ab8c8.  return v4 @kind object;
}
procedure `okhttp3.TlsVersion` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/TlsVersion;.valueOf:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3aba0c.  v0:= constclass @type ^`okhttp3.TlsVersion` @kind object;
  #L3aba10.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3aba16.  v1:= temp @kind object;
  #L3aba18.  v1:= (`okhttp3.TlsVersion`) v1 @kind object;
  #L3aba1c.  return v1 @kind object;
}
procedure `okhttp3.TlsVersion`[] `values`() @signature `Lokhttp3/TlsVersion;.values:()[Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3aba30.  v0:= `@@okhttp3.TlsVersion.f` @type ^`okhttp3.TlsVersion`[] @kind object;
  #L3aba34.  call temp:= `clone`(v0) @signature `[Lokhttp3/TlsVersion;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3aba3a.  v0:= temp @kind object;
  #L3aba3c.  v0:= (`okhttp3.TlsVersion`[]) v0 @kind object;
  #L3aba40.  return v0 @kind object;
}
