record `okhttp3.a0` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.a` `okhttp3.a0.a` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.a0.b` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.a0.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.a0` v1 @kind this, `okhttp3.a` v2 @kind object, `java.net.Proxy` v3 @kind object, `java.net.InetSocketAddress` v4 @kind object) @signature `Lokhttp3/a0;.<init>:(Lokhttp3/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ab850.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ab856.  v0:= "address == null" @kind object;
  #L3ab85a.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ab860.  v0:= "proxy == null" @kind object;
  #L3ab864.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ab86a.  v0:= "inetSocketAddress == null" @kind object;
  #L3ab86e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ab874.  v1.`okhttp3.a0.a` @type ^`okhttp3.a` := v2 @kind object;
  #L3ab878.  v1.`okhttp3.a0.b` @type ^`java.net.Proxy` := v3 @kind object;
  #L3ab87c.  v1.`okhttp3.a0.c` @type ^`java.net.InetSocketAddress` := v4 @kind object;
  #L3ab880.  return @kind void;
}
procedure `okhttp3.a` `a`(`okhttp3.a0` v1 @kind this) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab838.  v0:= v1.`okhttp3.a0.a` @type ^`okhttp3.a` @kind object;
  #L3ab83c.  return v0 @kind object;
}
procedure `java.net.Proxy` `b`(`okhttp3.a0` v1 @kind this) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab820.  v0:= v1.`okhttp3.a0.b` @type ^`java.net.Proxy` @kind object;
  #L3ab824.  return v0 @kind object;
}
procedure `boolean` `c`(`okhttp3.a0` v2 @kind this) @signature `Lokhttp3/a0;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab744.  v0:= v2.`okhttp3.a0.a` @type ^`okhttp3.a` @kind object;
  #L3ab748.  v0:= v0.`okhttp3.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3ab74c.  if v0 == 0 then goto L3ab768;
  #L3ab750.  v0:= v2.`okhttp3.a0.b` @type ^`java.net.Proxy` @kind object;
  #L3ab754.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3ab75a.  v0:= temp @kind object;
  #L3ab75c.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L3ab760.  if v0 != v1 then goto L3ab768;
  #L3ab764.  v0:= 1I;
  #L3ab766.  goto L3ab76a;
  #L3ab768.  v0:= 0I;
  #L3ab76a.  return v0;
}
procedure `java.net.InetSocketAddress` `d`(`okhttp3.a0` v1 @kind this) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab808.  v0:= v1.`okhttp3.a0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L3ab80c.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.a0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/a0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab6e4.  v0:= instanceof @variable v3 @type ^`okhttp3.a0` @kind boolean;
  #L3ab6e8.  if v0 == 0 then goto L3ab730;
  #L3ab6ec.  v3:= (`okhttp3.a0`) v3 @kind object;
  #L3ab6f0.  v0:= v3.`okhttp3.a0.a` @type ^`okhttp3.a` @kind object;
  #L3ab6f4.  v1:= v2.`okhttp3.a0.a` @type ^`okhttp3.a` @kind object;
  #L3ab6f8.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab6fe.  v0:= temp;
  #L3ab700.  if v0 == 0 then goto L3ab730;
  #L3ab704.  v0:= v3.`okhttp3.a0.b` @type ^`java.net.Proxy` @kind object;
  #L3ab708.  v1:= v2.`okhttp3.a0.b` @type ^`java.net.Proxy` @kind object;
  #L3ab70c.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab712.  v0:= temp;
  #L3ab714.  if v0 == 0 then goto L3ab730;
  #L3ab718.  v3:= v3.`okhttp3.a0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L3ab71c.  v0:= v2.`okhttp3.a0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L3ab720.  call temp:= `equals`(v3, v0) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab726.  v3:= temp;
  #L3ab728.  if v3 == 0 then goto L3ab730;
  #L3ab72c.  v3:= 1I;
  #L3ab72e.  goto L3ab732;
  #L3ab730.  v3:= 0I;
  #L3ab732.  return v3;
}
procedure `int` `hashCode`(`okhttp3.a0` v2 @kind this) @signature `Lokhttp3/a0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab77c.  v0:= v2.`okhttp3.a0.a` @type ^`okhttp3.a` @kind object;
  #L3ab780.  call temp:= `hashCode`(v0) @signature `Lokhttp3/a;.hashCode:()I` @kind virtual;
  #L3ab786.  v0:= temp;
  #L3ab788.  v1:= 527I;
  #L3ab78c.  v1:= v1 + v0 @kind int;
  #L3ab78e.  v1:= v1 * 31;
  #L3ab792.  v0:= v2.`okhttp3.a0.b` @type ^`java.net.Proxy` @kind object;
  #L3ab796.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L3ab79c.  v0:= temp;
  #L3ab79e.  v1:= v1 + v0 @kind int;
  #L3ab7a0.  v1:= v1 * 31;
  #L3ab7a4.  v0:= v2.`okhttp3.a0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L3ab7a8.  call temp:= `hashCode`(v0) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L3ab7ae.  v0:= temp;
  #L3ab7b0.  v1:= v1 + v0 @kind int;
  #L3ab7b2.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.a0` v2 @kind this) @signature `Lokhttp3/a0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab7c4.  v0:= new `java.lang.StringBuilder`;
  #L3ab7c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ab7ce.  v1:= "Route{" @kind object;
  #L3ab7d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab7d8.  v1:= v2.`okhttp3.a0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L3ab7dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab7e2.  v1:= "}" @kind object;
  #L3ab7e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ab7ec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ab7f2.  v0:= temp @kind object;
  #L3ab7f4.  return v0 @kind object;
}
