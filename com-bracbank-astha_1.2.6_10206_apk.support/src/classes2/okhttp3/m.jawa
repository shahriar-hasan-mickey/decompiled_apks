record `okhttp3.m` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.m.a` @AccessFlag PRIVATE;
  `int` `okhttp3.m.b` @AccessFlag PRIVATE;
  `java.lang.Runnable` `okhttp3.m.c` @AccessFlag PRIVATE;
  `java.util.concurrent.ExecutorService` `okhttp3.m.d` @AccessFlag PRIVATE;
  `java.util.Deque` `okhttp3.m.e` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `okhttp3.m.f` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `okhttp3.m.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lokhttp3/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L3a6e08.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.m` v1 @kind this) @signature `Lokhttp3/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a6e1c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a6e22.  v0:= 64I;
  #L3a6e26.  v1.`okhttp3.m.a` @type ^`int` := v0;
  #L3a6e2a.  v0:= 5I;
  #L3a6e2c.  v1.`okhttp3.m.b` @type ^`int` := v0;
  #L3a6e30.  v0:= new `java.util.ArrayDeque`;
  #L3a6e34.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L3a6e3a.  v1.`okhttp3.m.e` @type ^`java.util.Deque` := v0 @kind object;
  #L3a6e3e.  v0:= new `java.util.ArrayDeque`;
  #L3a6e42.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L3a6e48.  v1.`okhttp3.m.f` @type ^`java.util.Deque` := v0 @kind object;
  #L3a6e4c.  v0:= new `java.util.ArrayDeque`;
  #L3a6e50.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L3a6e56.  v1.`okhttp3.m.g` @type ^`java.util.Deque` := v0 @kind object;
  #L3a6e5a.  return @kind void;
}
procedure `void` `d`(`okhttp3.m` v0 @kind this, `java.util.Deque` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/m;.d:(Ljava/util/Deque;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;

  #L3a6ee0.  @monitorenter v0
  #L3a6ee2.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3a6ee8.  v1:= temp;
  #L3a6eea.  if v1 == 0 then goto L3a6f0c;
  #L3a6eee.  v1:= v0.`okhttp3.m.c` @type ^`java.lang.Runnable` @kind object;
  #L3a6ef2.  @monitorexit v0
  #L3a6ef4.  call temp:= `g`(v0) @signature `Lokhttp3/m;.g:()Z` @kind direct;
  #L3a6efa.  v2:= temp;
  #L3a6efc.  if v2 != 0 then goto L3a6f0a;
  #L3a6f00.  if v1 == 0 then goto L3a6f0a;
  #L3a6f04.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3a6f0a.  return @kind void;
  #L3a6f0c.  v1:= new `java.lang.AssertionError`;
  #L3a6f10.  v2:= "Call wasn't in-flight!" @kind object;
  #L3a6f14.  call `<init>`(v1, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3a6f1a.  throw v1;
  #L3a6f1c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a6f1e.  @monitorexit v0
  #L3a6f20.  throw v1;
  catch `java.lang.Throwable` @[L3a6ee2..L3a6ef4] goto L3a6f1c;
  catch `java.lang.Throwable` @[L3a6f0c..L3a6f20] goto L3a6f1c;
}
procedure `boolean` `g`(`okhttp3.m` v6 @kind this) @signature `Lokhttp3/m;.g:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a6c0c.  v0:= new `java.util.ArrayList`;
  #L3a6c10.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a6c16.  @monitorenter v6
  #L3a6c18.  v1:= v6.`okhttp3.m.e` @type ^`java.util.Deque` @kind object;
  #L3a6c1c.  call temp:= `iterator`(v1) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a6c22.  v1:= temp @kind object;
  #L3a6c24.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a6c2a.  v2:= temp;
  #L3a6c2c.  if v2 == 0 then goto L3a6c7c;
  #L3a6c30.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a6c36.  v2:= temp @kind object;
  #L3a6c38.  v2:= (`okhttp3.v$b`) v2 @kind object;
  #L3a6c3c.  v3:= v6.`okhttp3.m.f` @type ^`java.util.Deque` @kind object;
  #L3a6c40.  call temp:= `size`(v3) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L3a6c46.  v3:= temp;
  #L3a6c48.  v4:= v6.`okhttp3.m.a` @type ^`int`;
  #L3a6c4c.  if v3 < v4 then goto L3a6c52;
  #L3a6c50.  goto L3a6c7c;
  #L3a6c52.  call temp:= `i`(v6, v2) @signature `Lokhttp3/m;.i:(Lokhttp3/v$b;)I` @kind direct;
  #L3a6c58.  v3:= temp;
  #L3a6c5a.  v4:= v6.`okhttp3.m.b` @type ^`int`;
  #L3a6c5e.  if v3 < v4 then goto L3a6c64;
  #L3a6c62.  goto L3a6c24;
  #L3a6c64.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L3a6c6a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a6c70.  v3:= v6.`okhttp3.m.f` @type ^`java.util.Deque` @kind object;
  #L3a6c74.  call temp:= `add`(v3, v2) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a6c7a.  goto L3a6c24;
  #L3a6c7c.  call temp:= `h`(v6) @signature `Lokhttp3/m;.h:()I` @kind virtual;
  #L3a6c82.  v1:= temp;
  #L3a6c84.  v2:= 0I;
  #L3a6c86.  if v1 <= 0 then goto L3a6c8e;
  #L3a6c8a.  v1:= 1I;
  #L3a6c8c.  goto L3a6c90;
  #L3a6c8e.  v1:= 0I;
  #L3a6c90.  @monitorexit v6
  #L3a6c92.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a6c98.  v3:= temp;
  #L3a6c9a.  if v2 >= v3 then goto L3a6cbe;
  #L3a6c9e.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a6ca4.  v4:= temp @kind object;
  #L3a6ca6.  v4:= (`okhttp3.v$b`) v4 @kind object;
  #L3a6caa.  call temp:= `c`(v6) @signature `Lokhttp3/m;.c:()Ljava/util/concurrent/ExecutorService;` @kind virtual;
  #L3a6cb0.  v5:= temp @kind object;
  #L3a6cb2.  call `l`(v4, v5) @signature `Lokhttp3/v$b;.l:(Ljava/util/concurrent/ExecutorService;)V` @kind virtual;
  #L3a6cb8.  v2:= v2 + 1;
  #L3a6cbc.  goto L3a6c9a;
  #L3a6cbe.  return v1;
  #L3a6cc0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a6cc2.  @monitorexit v6
  #L3a6cc4.  throw v0;
  catch `java.lang.Throwable` @[L3a6c18..L3a6c92] goto L3a6cc0;
  catch `java.lang.Throwable` @[L3a6cc2..L3a6cc4] goto L3a6cc0;
}
procedure `int` `i`(`okhttp3.m` v4 @kind this, `okhttp3.v$b` v5 @kind object) @signature `Lokhttp3/m;.i:(Lokhttp3/v$b;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a6d30.  v0:= v4.`okhttp3.m.f` @type ^`java.util.Deque` @kind object;
  #L3a6d34.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a6d3a.  v0:= temp @kind object;
  #L3a6d3c.  v1:= 0I;
  #L3a6d3e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a6d44.  v2:= temp;
  #L3a6d46.  if v2 == 0 then goto L3a6d8a;
  #L3a6d4a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a6d50.  v2:= temp @kind object;
  #L3a6d52.  v2:= (`okhttp3.v$b`) v2 @kind object;
  #L3a6d56.  call temp:= `m`(v2) @signature `Lokhttp3/v$b;.m:()Lokhttp3/v;` @kind virtual;
  #L3a6d5c.  v3:= temp @kind object;
  #L3a6d5e.  v3:= v3.`okhttp3.v.f` @type ^`boolean` @kind boolean;
  #L3a6d62.  if v3 == 0 then goto L3a6d68;
  #L3a6d66.  goto L3a6d3e;
  #L3a6d68.  call temp:= `n`(v2) @signature `Lokhttp3/v$b;.n:()Ljava/lang/String;` @kind virtual;
  #L3a6d6e.  v2:= temp @kind object;
  #L3a6d70.  call temp:= `n`(v5) @signature `Lokhttp3/v$b;.n:()Ljava/lang/String;` @kind virtual;
  #L3a6d76.  v3:= temp @kind object;
  #L3a6d78.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a6d7e.  v2:= temp;
  #L3a6d80.  if v2 == 0 then goto L3a6d3e;
  #L3a6d84.  v1:= v1 + 1;
  #L3a6d88.  goto L3a6d3e;
  #L3a6d8a.  return v1;
}
procedure `void` `a`(`okhttp3.m` v1 @kind this, `okhttp3.v$b` v2 @kind object) @signature `Lokhttp3/m;.a:(Lokhttp3/v$b;)V` @AccessFlag  {
    temp;
    v0;

  #L3a6e6c.  @monitorenter v1
  #L3a6e6e.  v0:= v1.`okhttp3.m.e` @type ^`java.util.Deque` @kind object;
  #L3a6e72.  call temp:= `add`(v0, v2) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a6e78.  @monitorexit v1
  #L3a6e7a.  call temp:= `g`(v1) @signature `Lokhttp3/m;.g:()Z` @kind direct;
  #L3a6e80.  return @kind void;
  #L3a6e82.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a6e84.  @monitorexit v1
  #L3a6e86.  throw v2;
  catch `java.lang.Throwable` @[L3a6e6e..L3a6e7a] goto L3a6e82;
  catch `java.lang.Throwable` @[L3a6e84..L3a6e86] goto L3a6e82;
}
procedure `void` `b`(`okhttp3.m` v1 @kind this, `okhttp3.v` v2 @kind object) @signature `Lokhttp3/m;.b:(Lokhttp3/v;)V` @AccessFlag  {
    temp;
    v0;

  #L3a6eac.  @monitorenter v1
  #L3a6eae.  v0:= v1.`okhttp3.m.g` @type ^`java.util.Deque` @kind object;
  #L3a6eb2.  call temp:= `add`(v0, v2) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a6eb8.  @monitorexit v1
  #L3a6eba.  return @kind void;
  #L3a6ebc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a6ebe.  @monitorexit v1
  #L3a6ec0.  throw v2;
  catch `java.lang.Throwable` @[L3a6eae..L3a6eb8] goto L3a6ebc;
}
procedure `java.util.concurrent.ExecutorService` `c`(`okhttp3.m` v9 @kind this) @signature `Lokhttp3/m;.c:()Ljava/util/concurrent/ExecutorService;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3a6d9c.  @monitorenter v9
  #L3a6d9e.  v0:= v9.`okhttp3.m.d` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3a6da2.  if v0 != 0 then goto L3a6dde;
  #L3a6da6.  v0:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3a6daa.  v2:= 0I;
  #L3a6dac.  v3:= 2147483647I;
  #L3a6db2.  v4:= 60L;
  #L3a6db6.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3a6dba.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L3a6dbe.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L3a6dc4.  v1:= "OkHttp Dispatcher" @kind object;
  #L3a6dc8.  v8:= 0I;
  #L3a6dca.  call temp:= `G`(v1, v8) @signature `Lt2/c;.G:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L3a6dd0.  v8:= temp @kind object;
  #L3a6dd2.  v1:= v0 @kind object;
  #L3a6dd4.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3a6dda.  v9.`okhttp3.m.d` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L3a6dde.  v0:= v9.`okhttp3.m.d` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3a6de2.  @monitorexit v9
  #L3a6de4.  return v0 @kind object;
  #L3a6de6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a6de8.  @monitorexit v9
  #L3a6dea.  throw v0;
  catch `java.lang.Throwable` @[L3a6d9e..L3a6de2] goto L3a6de6;
}
procedure `void` `e`(`okhttp3.m` v1 @kind this, `okhttp3.v$b` v2 @kind object) @signature `Lokhttp3/m;.e:(Lokhttp3/v$b;)V` @AccessFlag  {
    temp;
    v0;

  #L3a6f48.  v0:= v1.`okhttp3.m.f` @type ^`java.util.Deque` @kind object;
  #L3a6f4c.  call `d`(v1, v0, v2) @signature `Lokhttp3/m;.d:(Ljava/util/Deque;Ljava/lang/Object;)V` @kind direct;
  #L3a6f52.  return @kind void;
}
procedure `void` `f`(`okhttp3.m` v1 @kind this, `okhttp3.v` v2 @kind object) @signature `Lokhttp3/m;.f:(Lokhttp3/v;)V` @AccessFlag  {
    temp;
    v0;

  #L3a6f64.  v0:= v1.`okhttp3.m.g` @type ^`java.util.Deque` @kind object;
  #L3a6f68.  call `d`(v1, v0, v2) @signature `Lokhttp3/m;.d:(Ljava/util/Deque;Ljava/lang/Object;)V` @kind direct;
  #L3a6f6e.  return @kind void;
}
procedure `int` `h`(`okhttp3.m` v2 @kind this) @signature `Lokhttp3/m;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6cec.  @monitorenter v2
  #L3a6cee.  v0:= v2.`okhttp3.m.f` @type ^`java.util.Deque` @kind object;
  #L3a6cf2.  call temp:= `size`(v0) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L3a6cf8.  v0:= temp;
  #L3a6cfa.  v1:= v2.`okhttp3.m.g` @type ^`java.util.Deque` @kind object;
  #L3a6cfe.  call temp:= `size`(v1) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L3a6d04.  v1:= temp;
  #L3a6d06.  v0:= v0 + v1 @kind int;
  #L3a6d08.  @monitorexit v2
  #L3a6d0a.  return v0;
  #L3a6d0c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a6d0e.  @monitorexit v2
  #L3a6d10.  throw v0;
  catch `java.lang.Throwable` @[L3a6cee..L3a6d06] goto L3a6d0c;
}
