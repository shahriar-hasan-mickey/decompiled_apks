record `z1.f` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
procedure `java.util.List` `a`(`z1.e$g` v2 @kind object) @signature `Lz1/f;.a:(Lz1/e$g;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L40ffc8.  call temp:= `builder`() @signature `Lcom/google/common/collect/ImmutableList;.builder:()Lcom/google/common/collect/ImmutableList$Builder;` @kind static;
  #L40ffce.  v0:= temp @kind object;
  #L40ffd0.  v1:= v2.`z1.e$g.e` @type ^`z1.e$g$c` @kind object;
  #L40ffd4.  if v1 == 0 then goto L40ffe8;
  #L40ffd8.  v1:= new `z1.e$k`;
  #L40ffdc.  call `<init>`(v1, v2) @signature `Lz1/e$k;.<init>:(Lz1/e$g;)V` @kind direct;
  #L40ffe2.  call temp:= `add`(v0, v1) @signature `Lcom/google/common/collect/ImmutableList$Builder;.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$Builder;` @kind virtual;
  #L40ffe8.  v1:= v2.`z1.e$g.f` @type ^`z1.e$g$b` @kind object;
  #L40ffec.  if v1 == 0 then goto L410000;
  #L40fff0.  v1:= new `z1.e$f`;
  #L40fff4.  call `<init>`(v1, v2) @signature `Lz1/e$f;.<init>:(Lz1/e$g;)V` @kind direct;
  #L40fffa.  call temp:= `add`(v0, v1) @signature `Lcom/google/common/collect/ImmutableList$Builder;.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$Builder;` @kind virtual;
  #L410000.  call temp:= `build`(v0) @signature `Lcom/google/common/collect/ImmutableList$Builder;.build:()Lcom/google/common/collect/ImmutableList;` @kind virtual;
  #L410006.  v2:= temp @kind object;
  #L410008.  return v2 @kind object;
}
