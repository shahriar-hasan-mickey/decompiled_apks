record `z1.e$b$a` @kind class @AccessFlag  {
  `java.util.concurrent.atomic.AtomicLong` `z1.e$b$a.a` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `z1.e$b$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`z1.e$b$a` v1 @kind this) @signature `Lz1/e$b$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L40eb84.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40eb8a.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L40eb8e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L40eb94.  v1.`z1.e$b$a.a` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L40eb98.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L40eb9c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L40eba2.  v1.`z1.e$b$a.b` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L40eba6.  return @kind void;
}
procedure `void` `<init>`(`z1.e$b$a` v0 @kind this, `z1.e$a` v1 @kind object) @signature `Lz1/e$b$a;.<init>:(Lz1/e$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L40ebb8.  call `<init>`(v0) @signature `Lz1/e$b$a;.<init>:()V` @kind direct;
  #L40ebbe.  return @kind void;
}
procedure `void` `a`(`z1.e$b$a` v3 @kind this) @signature `Lz1/e$b$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L40ebd0.  v0:= v3.`z1.e$b$a.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L40ebd4.  v1:= 0L;
  #L40ebd8.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.set:(J)V` @kind virtual;
  #L40ebde.  v0:= v3.`z1.e$b$a.b` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L40ebe2.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.set:(J)V` @kind virtual;
  #L40ebe8.  return @kind void;
}
