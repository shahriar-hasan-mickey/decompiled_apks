record `z1.e` @kind class @AccessFlag PUBLIC_FINAL extends `io.grpc.n0` @kind class {
  `z1.e$c` `z1.e.c` @AccessFlag FINAL;
  `io.grpc.g1` `z1.e.d` @AccessFlag PRIVATE_FINAL;
  `io.grpc.n0$d` `z1.e.e` @AccessFlag PRIVATE_FINAL;
  `z1.d` `z1.e.f` @AccessFlag PRIVATE_FINAL;
  `io.grpc.internal.c2` `z1.e.g` @AccessFlag PRIVATE;
  `java.util.concurrent.ScheduledExecutorService` `z1.e.h` @AccessFlag PRIVATE_FINAL;
  `io.grpc.g1$d` `z1.e.i` @AccessFlag PRIVATE;
  `java.lang.Long` `z1.e.j` @AccessFlag PRIVATE;
}
global `io.grpc.a$c` `@@z1.e.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lz1/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4107b4.  v0:= "addressTrackerKey" @kind object;
  #L4107b8.  call temp:= `a`(v0) @signature `Lio/grpc/a$c;.a:(Ljava/lang/String;)Lio/grpc/a$c;` @kind static;
  #L4107be.  v0:= temp @kind object;
  #L4107c0.  `@@z1.e.k` @type ^`io.grpc.a$c` := v0 @kind object;
  #L4107c4.  return @kind void;
}
procedure `void` `<init>`(`z1.e` v2 @kind this, `io.grpc.n0$d` v3 @kind object, `io.grpc.internal.c2` v4 @kind object) @signature `Lz1/e;.<init>:(Lio/grpc/n0$d;Lio/grpc/internal/c2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4107d8.  call `<init>`(v2) @signature `Lio/grpc/n0;.<init>:()V` @kind direct;
  #L4107de.  v0:= new `z1.e$d`;
  #L4107e2.  v1:= "helper" @kind object;
  #L4107e6.  call temp:= `checkNotNull`(v3, v1) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4107ec.  v1:= temp @kind object;
  #L4107ee.  v1:= (`io.grpc.n0$d`) v1 @kind object;
  #L4107f2.  call `<init>`(v0, v2, v1) @signature `Lz1/e$d;.<init>:(Lz1/e;Lio/grpc/n0$d;)V` @kind direct;
  #L4107f8.  v2.`z1.e.e` @type ^`io.grpc.n0$d` := v0 @kind object;
  #L4107fc.  v1:= new `z1.d`;
  #L410800.  call `<init>`(v1, v0) @signature `Lz1/d;.<init>:(Lio/grpc/n0$d;)V` @kind direct;
  #L410806.  v2.`z1.e.f` @type ^`z1.d` := v1 @kind object;
  #L41080a.  v0:= new `z1.e$c`;
  #L41080e.  call `<init>`(v0) @signature `Lz1/e$c;.<init>:()V` @kind direct;
  #L410814.  v2.`z1.e.c` @type ^`z1.e$c` := v0 @kind object;
  #L410818.  call temp:= `d`(v3) @signature `Lio/grpc/n0$d;.d:()Lio/grpc/g1;` @kind virtual;
  #L41081e.  v0:= temp @kind object;
  #L410820.  v1:= "syncContext" @kind object;
  #L410824.  call temp:= `checkNotNull`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L41082a.  v0:= temp @kind object;
  #L41082c.  v0:= (`io.grpc.g1`) v0 @kind object;
  #L410830.  v2.`z1.e.d` @type ^`io.grpc.g1` := v0 @kind object;
  #L410834.  call temp:= `c`(v3) @signature `Lio/grpc/n0$d;.c:()Ljava/util/concurrent/ScheduledExecutorService;` @kind virtual;
  #L41083a.  v3:= temp @kind object;
  #L41083c.  v0:= "timeService" @kind object;
  #L410840.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L410846.  v3:= temp @kind object;
  #L410848.  v3:= (`java.util.concurrent.ScheduledExecutorService`) v3 @kind object;
  #L41084c.  v2.`z1.e.h` @type ^`java.util.concurrent.ScheduledExecutorService` := v3 @kind object;
  #L410850.  v2.`z1.e.g` @type ^`io.grpc.internal.c2` := v4 @kind object;
  #L410854.  return @kind void;
}
procedure `java.lang.Long` `g`(`z1.e` v0 @kind object) @signature `Lz1/e;.g:(Lz1/e;)Ljava/lang/Long;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L410708.  v0:= v0.`z1.e.j` @type ^`java.lang.Long` @kind object;
  #L41070c.  return v0 @kind object;
}
procedure `java.lang.Long` `h`(`z1.e` v0 @kind object, `java.lang.Long` v1 @kind object) @signature `Lz1/e;.h:(Lz1/e;Ljava/lang/Long;)Ljava/lang/Long;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L410720.  v0.`z1.e.j` @type ^`java.lang.Long` := v1 @kind object;
  #L410724.  return v1 @kind object;
}
procedure `io.grpc.internal.c2` `i`(`z1.e` v0 @kind object) @signature `Lz1/e;.i:(Lz1/e;)Lio/grpc/internal/c2;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4106f0.  v0:= v0.`z1.e.g` @type ^`io.grpc.internal.c2` @kind object;
  #L4106f4.  return v0 @kind object;
}
procedure `boolean` `j`(`java.util.List` v0 @kind object) @signature `Lz1/e;.j:(Ljava/util/List;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L41066c.  call temp:= `m`(v0) @signature `Lz1/e;.m:(Ljava/util/List;)Z` @kind static;
  #L410672.  v0:= temp;
  #L410674.  return v0;
}
procedure `io.grpc.a$c` `k`() @signature `Lz1/e;.k:()Lio/grpc/a$c;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4106d8.  v0:= `@@z1.e.k` @type ^`io.grpc.a$c` @kind object;
  #L4106dc.  return v0 @kind object;
}
procedure `java.util.List` `l`(`z1.e$c` v0 @kind object, `int` v1 ) @signature `Lz1/e;.l:(Lz1/e$c;I)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L410738.  call temp:= `n`(v0, v1) @signature `Lz1/e;.n:(Lz1/e$c;I)Ljava/util/List;` @kind static;
  #L41073e.  v0:= temp @kind object;
  #L410740.  return v0 @kind object;
}
procedure `boolean` `m`(`java.util.List` v4 @kind object) @signature `Lz1/e;.m:(Ljava/util/List;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L410688.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L41068e.  v4:= temp @kind object;
  #L410690.  v0:= 0I;
  #L410692.  v1:= 0I;
  #L410694.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L41069a.  v2:= temp;
  #L41069c.  v3:= 1I;
  #L41069e.  if v2 == 0 then goto L4106c6;
  #L4106a2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4106a8.  v2:= temp @kind object;
  #L4106aa.  v2:= (`io.grpc.v`) v2 @kind object;
  #L4106ae.  call temp:= `a`(v2) @signature `Lio/grpc/v;.a:()Ljava/util/List;` @kind virtual;
  #L4106b4.  v2:= temp @kind object;
  #L4106b6.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4106bc.  v2:= temp;
  #L4106be.  v1:= v1 + v2 @kind int;
  #L4106c0.  if v1 <= v3 then goto L410694;
  #L4106c4.  return v0;
  #L4106c6.  return v3;
}
procedure `java.util.List` `n`(`z1.e$c` v7 @kind object, `int` v8 ) @signature `Lz1/e;.n:(Lz1/e$c;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L410754.  v0:= new `java.util.ArrayList`;
  #L410758.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L41075e.  call temp:= `values`(v7) @signature `Lcom/google/common/collect/ForwardingMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L410764.  v7:= temp @kind object;
  #L410766.  call temp:= `iterator`(v7) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L41076c.  v7:= temp @kind object;
  #L41076e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410774.  v1:= temp;
  #L410776.  if v1 == 0 then goto L4107a0;
  #L41077a.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410780.  v1:= temp @kind object;
  #L410782.  v1:= (`z1.e$b`) v1 @kind object;
  #L410786.  call temp:= `f`(v1) @signature `Lz1/e$b;.f:()J` @kind virtual;
  #L41078c.  v2:= temp @kind wide;
  #L41078e.  v4:= (`long`) v8 @kind i2l;
  #L410790.  v6:= lcmp(v2, v4);
  #L410794.  if v6 < 0 then goto L41076e;
  #L410798.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41079e.  goto L41076e;
  #L4107a0.  return v0 @kind object;
}
procedure `boolean` `a`(`z1.e` v11 @kind this, `io.grpc.n0$g` v12 @kind object) @signature `Lz1/e;.a:(Lio/grpc/n0$g;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4104dc.  call temp:= `c`(v12) @signature `Lio/grpc/n0$g;.c:()Ljava/lang/Object;` @kind virtual;
  #L4104e2.  v0:= temp @kind object;
  #L4104e4.  v0:= (`z1.e$g`) v0 @kind object;
  #L4104e8.  v1:= new `java.util.ArrayList`;
  #L4104ec.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4104f2.  call temp:= `a`(v12) @signature `Lio/grpc/n0$g;.a:()Ljava/util/List;` @kind virtual;
  #L4104f8.  v2:= temp @kind object;
  #L4104fa.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L410500.  v2:= temp @kind object;
  #L410502.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410508.  v3:= temp;
  #L41050a.  if v3 == 0 then goto L41052a;
  #L41050e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410514.  v3:= temp @kind object;
  #L410516.  v3:= (`io.grpc.v`) v3 @kind object;
  #L41051a.  call temp:= `a`(v3) @signature `Lio/grpc/v;.a:()Ljava/util/List;` @kind virtual;
  #L410520.  v3:= temp @kind object;
  #L410522.  call temp:= `addAll`(v1, v3) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L410528.  goto L410502;
  #L41052a.  v2:= v11.`z1.e.c` @type ^`z1.e$c` @kind object;
  #L41052e.  call temp:= `keySet`(v2) @signature `Lcom/google/common/collect/ForwardingMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L410534.  v2:= temp @kind object;
  #L410536.  call temp:= `retainAll`(v2, v1) @signature `Ljava/util/Set;.retainAll:(Ljava/util/Collection;)Z` @kind interface;
  #L41053c.  v2:= v11.`z1.e.c` @type ^`z1.e$c` @kind object;
  #L410540.  call `g`(v2, v0) @signature `Lz1/e$c;.g:(Lz1/e$g;)V` @kind virtual;
  #L410546.  v2:= v11.`z1.e.c` @type ^`z1.e$c` @kind object;
  #L41054a.  call `d`(v2, v0, v1) @signature `Lz1/e$c;.d:(Lz1/e$g;Ljava/util/Collection;)V` @kind virtual;
  #L410550.  v1:= v11.`z1.e.f` @type ^`z1.d` @kind object;
  #L410554.  v2:= v0.`z1.e$g.g` @type ^`io.grpc.internal.v1$b` @kind object;
  #L410558.  call temp:= `b`(v2) @signature `Lio/grpc/internal/v1$b;.b:()Lio/grpc/o0;` @kind virtual;
  #L41055e.  v2:= temp @kind object;
  #L410560.  call `r`(v1, v2) @signature `Lz1/d;.r:(Lio/grpc/n0$c;)V` @kind virtual;
  #L410566.  call temp:= `a`(v0) @signature `Lz1/e$g;.a:()Z` @kind virtual;
  #L41056c.  v1:= temp;
  #L41056e.  if v1 == 0 then goto L41060c;
  #L410572.  v1:= v11.`z1.e.j` @type ^`java.lang.Long` @kind object;
  #L410576.  if v1 != 0 then goto L410580;
  #L41057a.  v1:= v0.`z1.e$g.a` @type ^`java.lang.Long` @kind object;
  #L41057e.  goto L4105bc;
  #L410580.  v1:= 0L;
  #L410584.  v3:= v0.`z1.e$g.a` @type ^`java.lang.Long` @kind object;
  #L410588.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L41058e.  v3:= temp @kind wide;
  #L410590.  v5:= v11.`z1.e.g` @type ^`io.grpc.internal.c2` @kind object;
  #L410594.  call temp:= `a`(v5) @signature `Lio/grpc/internal/c2;.a:()J` @kind interface;
  #L41059a.  v5:= temp @kind wide;
  #L41059c.  v7:= v11.`z1.e.j` @type ^`java.lang.Long` @kind object;
  #L4105a0.  call temp:= `longValue`(v7) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4105a6.  v7:= temp @kind wide;
  #L4105a8.  v5:= v5 - v7 @kind long;
  #L4105aa.  v3:= v3 - v5 @kind long;
  #L4105ac.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4105b2.  v1:= temp @kind wide;
  #L4105b4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4105ba.  v1:= temp @kind object;
  #L4105bc.  v2:= v11.`z1.e.i` @type ^`io.grpc.g1$d` @kind object;
  #L4105c0.  if v2 == 0 then goto L4105d4;
  #L4105c4.  call `a`(v2) @signature `Lio/grpc/g1$d;.a:()V` @kind virtual;
  #L4105ca.  v2:= v11.`z1.e.c` @type ^`z1.e$c` @kind object;
  #L4105ce.  call `e`(v2) @signature `Lz1/e$c;.e:()V` @kind virtual;
  #L4105d4.  v3:= v11.`z1.e.d` @type ^`io.grpc.g1` @kind object;
  #L4105d8.  v4:= new `z1.e$e`;
  #L4105dc.  call `<init>`(v4, v11, v0) @signature `Lz1/e$e;.<init>:(Lz1/e;Lz1/e$g;)V` @kind direct;
  #L4105e2.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4105e8.  v5:= temp @kind wide;
  #L4105ea.  v1:= v0.`z1.e$g.a` @type ^`java.lang.Long` @kind object;
  #L4105ee.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4105f4.  v7:= temp @kind wide;
  #L4105f6.  v9:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4105fa.  v10:= v11.`z1.e.h` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L4105fe.  call temp:= `d`(v3, v4, v5, v7, v9, v10) @signature `Lio/grpc/g1;.d:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/g1$d;` @kind virtual;
  #L410604.  v1:= temp @kind object;
  #L410606.  v11.`z1.e.i` @type ^`io.grpc.g1$d` := v1 @kind object;
  #L41060a.  goto L41062a;
  #L41060c.  v1:= v11.`z1.e.i` @type ^`io.grpc.g1$d` @kind object;
  #L410610.  if v1 == 0 then goto L41062a;
  #L410614.  call `a`(v1) @signature `Lio/grpc/g1$d;.a:()V` @kind virtual;
  #L41061a.  v1:= 0I;
  #L41061c.  v11.`z1.e.j` @type ^`java.lang.Long` := v1 @kind object;
  #L410620.  v1:= v11.`z1.e.c` @type ^`z1.e$c` @kind object;
  #L410624.  call `a`(v1) @signature `Lz1/e$c;.a:()V` @kind virtual;
  #L41062a.  v1:= v11.`z1.e.f` @type ^`z1.d` @kind object;
  #L41062e.  call temp:= `e`(v12) @signature `Lio/grpc/n0$g;.e:()Lio/grpc/n0$g$a;` @kind virtual;
  #L410634.  v12:= temp @kind object;
  #L410636.  v0:= v0.`z1.e$g.g` @type ^`io.grpc.internal.v1$b` @kind object;
  #L41063a.  call temp:= `a`(v0) @signature `Lio/grpc/internal/v1$b;.a:()Ljava/lang/Object;` @kind virtual;
  #L410640.  v0:= temp @kind object;
  #L410642.  call temp:= `d`(v12, v0) @signature `Lio/grpc/n0$g$a;.d:(Ljava/lang/Object;)Lio/grpc/n0$g$a;` @kind virtual;
  #L410648.  v12:= temp @kind object;
  #L41064a.  call temp:= `a`(v12) @signature `Lio/grpc/n0$g$a;.a:()Lio/grpc/n0$g;` @kind virtual;
  #L410650.  v12:= temp @kind object;
  #L410652.  call `d`(v1, v12) @signature `Lz1/a;.d:(Lio/grpc/n0$g;)V` @kind virtual;
  #L410658.  v12:= 1I;
  #L41065a.  return v12;
}
procedure `void` `c`(`z1.e` v1 @kind this, `io.grpc.Status` v2 @kind object) @signature `Lz1/e;.c:(Lio/grpc/Status;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410868.  v0:= v1.`z1.e.f` @type ^`z1.d` @kind object;
  #L41086c.  call `c`(v0, v2) @signature `Lz1/a;.c:(Lio/grpc/Status;)V` @kind virtual;
  #L410872.  return @kind void;
}
procedure `void` `f`(`z1.e` v1 @kind this) @signature `Lz1/e;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410884.  v0:= v1.`z1.e.f` @type ^`z1.d` @kind object;
  #L410888.  call `f`(v0) @signature `Lz1/d;.f:()V` @kind virtual;
  #L41088e.  return @kind void;
}
