record `z1.h` @kind class @AccessFlag FINAL extends `io.grpc.n0` @kind class {
  `io.grpc.n0$d` `z1.h.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `z1.h.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `z1.h.e` @AccessFlag PRIVATE_FINAL;
  `io.grpc.ConnectivityState` `z1.h.f` @AccessFlag PRIVATE;
  `z1.h$e` `z1.h.g` @AccessFlag PRIVATE;
}
global `io.grpc.a$c` `@@z1.h.h` @AccessFlag STATIC_FINAL;
global `io.grpc.Status` `@@z1.h.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lz1/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L410ce4.  v0:= "state-info" @kind object;
  #L410ce8.  call temp:= `a`(v0) @signature `Lio/grpc/a$c;.a:(Ljava/lang/String;)Lio/grpc/a$c;` @kind static;
  #L410cee.  v0:= temp @kind object;
  #L410cf0.  `@@z1.h.h` @type ^`io.grpc.a$c` := v0 @kind object;
  #L410cf4.  v0:= `@@io.grpc.Status.f` @type ^`io.grpc.Status` @kind object;
  #L410cf8.  v1:= "no subchannels ready" @kind object;
  #L410cfc.  call temp:= `r`(v0, v1) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L410d02.  v0:= temp @kind object;
  #L410d04.  `@@z1.h.i` @type ^`io.grpc.Status` := v0 @kind object;
  #L410d08.  return @kind void;
}
procedure `void` `<init>`(`z1.h` v2 @kind this, `io.grpc.n0$d` v3 @kind object) @signature `Lz1/h;.<init>:(Lio/grpc/n0$d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L410d1c.  call `<init>`(v2) @signature `Lio/grpc/n0;.<init>:()V` @kind direct;
  #L410d22.  v0:= new `java.util.HashMap`;
  #L410d26.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L410d2c.  v2.`z1.h.d` @type ^`java.util.Map` := v0 @kind object;
  #L410d30.  v0:= new `z1.h$b`;
  #L410d34.  v1:= `@@z1.h.i` @type ^`io.grpc.Status` @kind object;
  #L410d38.  call `<init>`(v0, v1) @signature `Lz1/h$b;.<init>:(Lio/grpc/Status;)V` @kind direct;
  #L410d3e.  v2.`z1.h.g` @type ^`z1.h$e` := v0 @kind object;
  #L410d42.  v0:= "helper" @kind object;
  #L410d46.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L410d4c.  v3:= temp @kind object;
  #L410d4e.  v3:= (`io.grpc.n0$d`) v3 @kind object;
  #L410d52.  v2.`z1.h.c` @type ^`io.grpc.n0$d` := v3 @kind object;
  #L410d56.  v3:= new `java.util.Random`;
  #L410d5a.  call `<init>`(v3) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L410d60.  v2.`z1.h.e` @type ^`java.util.Random` := v3 @kind object;
  #L410d64.  return @kind void;
}
procedure `void` `g`(`z1.h` v0 @kind object, `io.grpc.n0$h` v1 @kind object, `io.grpc.o` v2 @kind object) @signature `Lz1/h;.g:(Lz1/h;Lio/grpc/n0$h;Lio/grpc/o;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L410d78.  call `l`(v0, v1, v2) @signature `Lz1/h;.l:(Lio/grpc/n0$h;Lio/grpc/o;)V` @kind direct;
  #L410d7e.  return @kind void;
}
procedure `java.util.List` `h`(`java.util.Collection` v3 @kind object) @signature `Lz1/h;.h:(Ljava/util/Collection;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L410c10.  v0:= new `java.util.ArrayList`;
  #L410c14.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L410c1a.  v1:= temp;
  #L410c1c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L410c22.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L410c28.  v3:= temp @kind object;
  #L410c2a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410c30.  v1:= temp;
  #L410c32.  if v1 == 0 then goto L410c56;
  #L410c36.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410c3c.  v1:= temp @kind object;
  #L410c3e.  v1:= (`io.grpc.n0$h`) v1 @kind object;
  #L410c42.  call temp:= `k`(v1) @signature `Lz1/h;.k:(Lio/grpc/n0$h;)Z` @kind static;
  #L410c48.  v2:= temp;
  #L410c4a.  if v2 == 0 then goto L410c2a;
  #L410c4e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L410c54.  goto L410c2a;
  #L410c56.  return v0 @kind object;
}
procedure `z1.h$d` `i`(`io.grpc.n0$h` v1 @kind object) @signature `Lz1/h;.i:(Lio/grpc/n0$h;)Lz1/h$d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4111e4.  call temp:= `c`(v1) @signature `Lio/grpc/n0$h;.c:()Lio/grpc/a;` @kind virtual;
  #L4111ea.  v1:= temp @kind object;
  #L4111ec.  v0:= `@@z1.h.h` @type ^`io.grpc.a$c` @kind object;
  #L4111f0.  call temp:= `b`(v1, v0) @signature `Lio/grpc/a;.b:(Lio/grpc/a$c;)Ljava/lang/Object;` @kind virtual;
  #L4111f6.  v1:= temp @kind object;
  #L4111f8.  v1:= (`z1.h$d`) v1 @kind object;
  #L4111fc.  v0:= "STATE_INFO" @kind object;
  #L411200.  call temp:= `checkNotNull`(v1, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L411206.  v1:= temp @kind object;
  #L411208.  v1:= (`z1.h$d`) v1 @kind object;
  #L41120c.  return v1 @kind object;
}
procedure `boolean` `k`(`io.grpc.n0$h` v1 @kind object) @signature `Lz1/h;.k:(Lio/grpc/n0$h;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L410b94.  call temp:= `i`(v1) @signature `Lz1/h;.i:(Lio/grpc/n0$h;)Lz1/h$d;` @kind static;
  #L410b9a.  v1:= temp @kind object;
  #L410b9c.  v1:= v1.`z1.h$d.a` @type ^`java.lang.Object` @kind object;
  #L410ba0.  v1:= (`io.grpc.o`) v1 @kind object;
  #L410ba4.  call temp:= `c`(v1) @signature `Lio/grpc/o;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L410baa.  v1:= temp @kind object;
  #L410bac.  v0:= `@@io.grpc.ConnectivityState.b` @type ^`io.grpc.ConnectivityState` @kind object;
  #L410bb0.  if v1 != v0 then goto L410bb8;
  #L410bb4.  v1:= 1I;
  #L410bb6.  goto L410bba;
  #L410bb8.  v1:= 0I;
  #L410bba.  return v1;
}
procedure `void` `l`(`z1.h` v3 @kind this, `io.grpc.n0$h` v4 @kind object, `io.grpc.o` v5 @kind object) @signature `Lz1/h;.l:(Lio/grpc/n0$h;Lio/grpc/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L410f68.  v0:= v3.`z1.h.d` @type ^`java.util.Map` @kind object;
  #L410f6c.  call temp:= `a`(v4) @signature `Lio/grpc/n0$h;.a:()Lio/grpc/v;` @kind virtual;
  #L410f72.  v1:= temp @kind object;
  #L410f74.  call temp:= `o`(v1) @signature `Lz1/h;.o:(Lio/grpc/v;)Lio/grpc/v;` @kind static;
  #L410f7a.  v1:= temp @kind object;
  #L410f7c.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f82.  v0:= temp @kind object;
  #L410f84.  if v0 == v4 then goto L410f8a;
  #L410f88.  return @kind void;
  #L410f8a.  call temp:= `c`(v5) @signature `Lio/grpc/o;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L410f90.  v0:= temp @kind object;
  #L410f92.  v1:= `@@io.grpc.ConnectivityState.c` @type ^`io.grpc.ConnectivityState` @kind object;
  #L410f96.  if v0 == v1 then goto L410faa;
  #L410f9a.  call temp:= `c`(v5) @signature `Lio/grpc/o;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L410fa0.  v0:= temp @kind object;
  #L410fa2.  v2:= `@@io.grpc.ConnectivityState.d` @type ^`io.grpc.ConnectivityState` @kind object;
  #L410fa6.  if v0 != v2 then goto L410fb4;
  #L410faa.  v0:= v3.`z1.h.c` @type ^`io.grpc.n0$d` @kind object;
  #L410fae.  call `e`(v0) @signature `Lio/grpc/n0$d;.e:()V` @kind virtual;
  #L410fb4.  call temp:= `c`(v5) @signature `Lio/grpc/o;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L410fba.  v0:= temp @kind object;
  #L410fbc.  v2:= `@@io.grpc.ConnectivityState.d` @type ^`io.grpc.ConnectivityState` @kind object;
  #L410fc0.  if v0 != v2 then goto L410fca;
  #L410fc4.  call `e`(v4) @signature `Lio/grpc/n0$h;.e:()V` @kind virtual;
  #L410fca.  call temp:= `i`(v4) @signature `Lz1/h;.i:(Lio/grpc/n0$h;)Lz1/h$d;` @kind static;
  #L410fd0.  v4:= temp @kind object;
  #L410fd2.  v0:= v4.`z1.h$d.a` @type ^`java.lang.Object` @kind object;
  #L410fd6.  v0:= (`io.grpc.o`) v0 @kind object;
  #L410fda.  call temp:= `c`(v0) @signature `Lio/grpc/o;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L410fe0.  v0:= temp @kind object;
  #L410fe2.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410fe8.  v0:= temp;
  #L410fea.  if v0 == 0 then goto L41101c;
  #L410fee.  call temp:= `c`(v5) @signature `Lio/grpc/o;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L410ff4.  v0:= temp @kind object;
  #L410ff6.  v1:= `@@io.grpc.ConnectivityState.a` @type ^`io.grpc.ConnectivityState` @kind object;
  #L410ffa.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L411000.  v0:= temp;
  #L411002.  if v0 != 0 then goto L41101a;
  #L411006.  call temp:= `c`(v5) @signature `Lio/grpc/o;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L41100c.  v0:= temp @kind object;
  #L41100e.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L411014.  v0:= temp;
  #L411016.  if v0 == 0 then goto L41101c;
  #L41101a.  return @kind void;
  #L41101c.  v4.`z1.h$d.a` @type ^`java.lang.Object` := v5 @kind object;
  #L411020.  call `q`(v3) @signature `Lz1/h;.q:()V` @kind direct;
  #L411026.  return @kind void;
}
procedure `java.util.Set` `m`(`java.util.Set` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lz1/h;.m:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L410cc0.  v0:= new `java.util.HashSet`;
  #L410cc4.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L410cca.  call temp:= `removeAll`(v0, v2) @signature `Ljava/util/Set;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L410cd0.  return v0 @kind object;
}
procedure `void` `n`(`z1.h` v1 @kind this, `io.grpc.n0$h` v2 @kind object) @signature `Lz1/h;.n:(Lio/grpc/n0$h;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L411084.  call `f`(v2) @signature `Lio/grpc/n0$h;.f:()V` @kind virtual;
  #L41108a.  call temp:= `i`(v2) @signature `Lz1/h;.i:(Lio/grpc/n0$h;)Lz1/h$d;` @kind static;
  #L411090.  v2:= temp @kind object;
  #L411092.  v0:= `@@io.grpc.ConnectivityState.e` @type ^`io.grpc.ConnectivityState` @kind object;
  #L411096.  call temp:= `a`(v0) @signature `Lio/grpc/o;.a:(Lio/grpc/ConnectivityState;)Lio/grpc/o;` @kind static;
  #L41109c.  v0:= temp @kind object;
  #L41109e.  v2.`z1.h$d.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4110a2.  return @kind void;
}
procedure `io.grpc.v` `o`(`io.grpc.v` v1 @kind object) @signature `Lz1/h;.o:(Lio/grpc/v;)Lio/grpc/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L410bcc.  v0:= new `io.grpc.v`;
  #L410bd0.  call temp:= `a`(v1) @signature `Lio/grpc/v;.a:()Ljava/util/List;` @kind virtual;
  #L410bd6.  v1:= temp @kind object;
  #L410bd8.  call `<init>`(v0, v1) @signature `Lio/grpc/v;.<init>:(Ljava/util/List;)V` @kind direct;
  #L410bde.  return v0 @kind object;
}
procedure `java.util.Map` `p`(`java.util.List` v3 @kind object) @signature `Lz1/h;.p:(Ljava/util/List;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L410c68.  v0:= new `java.util.HashMap`;
  #L410c6c.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L410c72.  v1:= temp;
  #L410c74.  v1:= v1 * 2;
  #L410c78.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L410c7e.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L410c84.  v3:= temp @kind object;
  #L410c86.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410c8c.  v1:= temp;
  #L410c8e.  if v1 == 0 then goto L410cae;
  #L410c92.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410c98.  v1:= temp @kind object;
  #L410c9a.  v1:= (`io.grpc.v`) v1 @kind object;
  #L410c9e.  call temp:= `o`(v1) @signature `Lz1/h;.o:(Lio/grpc/v;)Lio/grpc/v;` @kind static;
  #L410ca4.  v2:= temp @kind object;
  #L410ca6.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410cac.  goto L410c86;
  #L410cae.  return v0 @kind object;
}
procedure `void` `q`(`z1.h` v6 @kind this) @signature `Lz1/h;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4110b4.  call temp:= `j`(v6) @signature `Lz1/h;.j:()Ljava/util/Collection;` @kind virtual;
  #L4110ba.  v0:= temp @kind object;
  #L4110bc.  call temp:= `h`(v0) @signature `Lz1/h;.h:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L4110c2.  v0:= temp @kind object;
  #L4110c4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4110ca.  v1:= temp;
  #L4110cc.  if v1 == 0 then goto L41116e;
  #L4110d0.  v0:= 0I;
  #L4110d2.  v1:= `@@z1.h.i` @type ^`io.grpc.Status` @kind object;
  #L4110d6.  call temp:= `j`(v6) @signature `Lz1/h;.j:()Ljava/util/Collection;` @kind virtual;
  #L4110dc.  v2:= temp @kind object;
  #L4110de.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4110e4.  v2:= temp @kind object;
  #L4110e6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4110ec.  v3:= temp;
  #L4110ee.  if v3 == 0 then goto L41114e;
  #L4110f2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4110f8.  v3:= temp @kind object;
  #L4110fa.  v3:= (`io.grpc.n0$h`) v3 @kind object;
  #L4110fe.  call temp:= `i`(v3) @signature `Lz1/h;.i:(Lio/grpc/n0$h;)Lz1/h$d;` @kind static;
  #L411104.  v3:= temp @kind object;
  #L411106.  v3:= v3.`z1.h$d.a` @type ^`java.lang.Object` @kind object;
  #L41110a.  v3:= (`io.grpc.o`) v3 @kind object;
  #L41110e.  call temp:= `c`(v3) @signature `Lio/grpc/o;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L411114.  v4:= temp @kind object;
  #L411116.  v5:= `@@io.grpc.ConnectivityState.a` @type ^`io.grpc.ConnectivityState` @kind object;
  #L41111a.  if v4 == v5 then goto L41112e;
  #L41111e.  call temp:= `c`(v3) @signature `Lio/grpc/o;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L411124.  v4:= temp @kind object;
  #L411126.  v5:= `@@io.grpc.ConnectivityState.d` @type ^`io.grpc.ConnectivityState` @kind object;
  #L41112a.  if v4 != v5 then goto L411130;
  #L41112e.  v0:= 1I;
  #L411130.  v4:= `@@z1.h.i` @type ^`io.grpc.Status` @kind object;
  #L411134.  if v1 == v4 then goto L411144;
  #L411138.  call temp:= `p`(v1) @signature `Lio/grpc/Status;.p:()Z` @kind virtual;
  #L41113e.  v4:= temp;
  #L411140.  if v4 != 0 then goto L4110e6;
  #L411144.  call temp:= `d`(v3) @signature `Lio/grpc/o;.d:()Lio/grpc/Status;` @kind virtual;
  #L41114a.  v1:= temp @kind object;
  #L41114c.  goto L4110e6;
  #L41114e.  if v0 == 0 then goto L411158;
  #L411152.  v0:= `@@io.grpc.ConnectivityState.a` @type ^`io.grpc.ConnectivityState` @kind object;
  #L411156.  goto L41115c;
  #L411158.  v0:= `@@io.grpc.ConnectivityState.c` @type ^`io.grpc.ConnectivityState` @kind object;
  #L41115c.  v2:= new `z1.h$b`;
  #L411160.  call `<init>`(v2, v1) @signature `Lz1/h$b;.<init>:(Lio/grpc/Status;)V` @kind direct;
  #L411166.  call `r`(v6, v0, v2) @signature `Lz1/h;.r:(Lio/grpc/ConnectivityState;Lz1/h$e;)V` @kind direct;
  #L41116c.  goto L411196;
  #L41116e.  v1:= v6.`z1.h.e` @type ^`java.util.Random` @kind object;
  #L411172.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L411178.  v2:= temp;
  #L41117a.  call temp:= `nextInt`(v1, v2) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L411180.  v1:= temp;
  #L411182.  v2:= `@@io.grpc.ConnectivityState.b` @type ^`io.grpc.ConnectivityState` @kind object;
  #L411186.  v3:= new `z1.h$c`;
  #L41118a.  call `<init>`(v3, v0, v1) @signature `Lz1/h$c;.<init>:(Ljava/util/List;I)V` @kind direct;
  #L411190.  call `r`(v6, v2, v3) @signature `Lz1/h;.r:(Lio/grpc/ConnectivityState;Lz1/h$e;)V` @kind direct;
  #L411196.  return @kind void;
}
procedure `void` `r`(`z1.h` v1 @kind this, `io.grpc.ConnectivityState` v2 @kind object, `z1.h$e` v3 @kind object) @signature `Lz1/h;.r:(Lio/grpc/ConnectivityState;Lz1/h$e;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4111a8.  v0:= v1.`z1.h.f` @type ^`io.grpc.ConnectivityState` @kind object;
  #L4111ac.  if v2 != v0 then goto L4111c0;
  #L4111b0.  v0:= v1.`z1.h.g` @type ^`z1.h$e` @kind object;
  #L4111b4.  call temp:= `c`(v3, v0) @signature `Lz1/h$e;.c:(Lz1/h$e;)Z` @kind virtual;
  #L4111ba.  v0:= temp;
  #L4111bc.  if v0 != 0 then goto L4111d2;
  #L4111c0.  v0:= v1.`z1.h.c` @type ^`io.grpc.n0$d` @kind object;
  #L4111c4.  call `f`(v0, v2, v3) @signature `Lio/grpc/n0$d;.f:(Lio/grpc/ConnectivityState;Lio/grpc/n0$i;)V` @kind virtual;
  #L4111ca.  v1.`z1.h.f` @type ^`io.grpc.ConnectivityState` := v2 @kind object;
  #L4111ce.  v1.`z1.h.g` @type ^`z1.h$e` := v3 @kind object;
  #L4111d2.  return @kind void;
}
procedure `void` `c`(`z1.h` v2 @kind this, `io.grpc.Status` v3 @kind object) @signature `Lz1/h;.c:(Lio/grpc/Status;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L410d90.  v0:= v2.`z1.h.f` @type ^`io.grpc.ConnectivityState` @kind object;
  #L410d94.  v1:= `@@io.grpc.ConnectivityState.b` @type ^`io.grpc.ConnectivityState` @kind object;
  #L410d98.  if v0 == v1 then goto L410db0;
  #L410d9c.  v0:= `@@io.grpc.ConnectivityState.c` @type ^`io.grpc.ConnectivityState` @kind object;
  #L410da0.  v1:= new `z1.h$b`;
  #L410da4.  call `<init>`(v1, v3) @signature `Lz1/h$b;.<init>:(Lio/grpc/Status;)V` @kind direct;
  #L410daa.  call `r`(v2, v0, v1) @signature `Lz1/h;.r:(Lio/grpc/ConnectivityState;Lz1/h$e;)V` @kind direct;
  #L410db0.  return @kind void;
}
procedure `void` `d`(`z1.h` v7 @kind this, `io.grpc.n0$g` v8 @kind object) @signature `Lz1/h;.d:(Lio/grpc/n0$g;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L410dc4.  call temp:= `a`(v8) @signature `Lio/grpc/n0$g;.a:()Ljava/util/List;` @kind virtual;
  #L410dca.  v8:= temp @kind object;
  #L410dcc.  v0:= v7.`z1.h.d` @type ^`java.util.Map` @kind object;
  #L410dd0.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L410dd6.  v0:= temp @kind object;
  #L410dd8.  call temp:= `p`(v8) @signature `Lz1/h;.p:(Ljava/util/List;)Ljava/util/Map;` @kind static;
  #L410dde.  v8:= temp @kind object;
  #L410de0.  call temp:= `keySet`(v8) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L410de6.  v1:= temp @kind object;
  #L410de8.  call temp:= `m`(v0, v1) @signature `Lz1/h;.m:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L410dee.  v0:= temp @kind object;
  #L410df0.  call temp:= `entrySet`(v8) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L410df6.  v8:= temp @kind object;
  #L410df8.  call temp:= `iterator`(v8) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L410dfe.  v8:= temp @kind object;
  #L410e00.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410e06.  v1:= temp;
  #L410e08.  if v1 == 0 then goto L410ee4;
  #L410e0c.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410e12.  v1:= temp @kind object;
  #L410e14.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L410e18.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L410e1e.  v2:= temp @kind object;
  #L410e20.  v2:= (`io.grpc.v`) v2 @kind object;
  #L410e24.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L410e2a.  v1:= temp @kind object;
  #L410e2c.  v1:= (`io.grpc.v`) v1 @kind object;
  #L410e30.  v3:= v7.`z1.h.d` @type ^`java.util.Map` @kind object;
  #L410e34.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410e3a.  v3:= temp @kind object;
  #L410e3c.  v3:= (`io.grpc.n0$h`) v3 @kind object;
  #L410e40.  if v3 == 0 then goto L410e54;
  #L410e44.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L410e4a.  v1:= temp @kind object;
  #L410e4c.  call `h`(v3, v1) @signature `Lio/grpc/n0$h;.h:(Ljava/util/List;)V` @kind virtual;
  #L410e52.  goto L410e00;
  #L410e54.  call temp:= `c`() @signature `Lio/grpc/a;.c:()Lio/grpc/a$b;` @kind static;
  #L410e5a.  v3:= temp @kind object;
  #L410e5c.  v4:= `@@z1.h.h` @type ^`io.grpc.a$c` @kind object;
  #L410e60.  v5:= new `z1.h$d`;
  #L410e64.  v6:= `@@io.grpc.ConnectivityState.d` @type ^`io.grpc.ConnectivityState` @kind object;
  #L410e68.  call temp:= `a`(v6) @signature `Lio/grpc/o;.a:(Lio/grpc/ConnectivityState;)Lio/grpc/o;` @kind static;
  #L410e6e.  v6:= temp @kind object;
  #L410e70.  call `<init>`(v5, v6) @signature `Lz1/h$d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L410e76.  call temp:= `d`(v3, v4, v5) @signature `Lio/grpc/a$b;.d:(Lio/grpc/a$c;Ljava/lang/Object;)Lio/grpc/a$b;` @kind virtual;
  #L410e7c.  v3:= temp @kind object;
  #L410e7e.  v4:= v7.`z1.h.c` @type ^`io.grpc.n0$d` @kind object;
  #L410e82.  call temp:= `c`() @signature `Lio/grpc/n0$b;.c:()Lio/grpc/n0$b$a;` @kind static;
  #L410e88.  v5:= temp @kind object;
  #L410e8a.  call temp:= `d`(v5, v1) @signature `Lio/grpc/n0$b$a;.d:(Lio/grpc/v;)Lio/grpc/n0$b$a;` @kind virtual;
  #L410e90.  v1:= temp @kind object;
  #L410e92.  call temp:= `a`(v3) @signature `Lio/grpc/a$b;.a:()Lio/grpc/a;` @kind virtual;
  #L410e98.  v3:= temp @kind object;
  #L410e9a.  call temp:= `f`(v1, v3) @signature `Lio/grpc/n0$b$a;.f:(Lio/grpc/a;)Lio/grpc/n0$b$a;` @kind virtual;
  #L410ea0.  v1:= temp @kind object;
  #L410ea2.  call temp:= `b`(v1) @signature `Lio/grpc/n0$b$a;.b:()Lio/grpc/n0$b;` @kind virtual;
  #L410ea8.  v1:= temp @kind object;
  #L410eaa.  call temp:= `a`(v4, v1) @signature `Lio/grpc/n0$d;.a:(Lio/grpc/n0$b;)Lio/grpc/n0$h;` @kind virtual;
  #L410eb0.  v1:= temp @kind object;
  #L410eb2.  v3:= "subchannel" @kind object;
  #L410eb6.  call temp:= `checkNotNull`(v1, v3) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L410ebc.  v1:= temp @kind object;
  #L410ebe.  v1:= (`io.grpc.n0$h`) v1 @kind object;
  #L410ec2.  v3:= new `z1.h$a`;
  #L410ec6.  call `<init>`(v3, v7, v1) @signature `Lz1/h$a;.<init>:(Lz1/h;Lio/grpc/n0$h;)V` @kind direct;
  #L410ecc.  call `g`(v1, v3) @signature `Lio/grpc/n0$h;.g:(Lio/grpc/n0$j;)V` @kind virtual;
  #L410ed2.  v3:= v7.`z1.h.d` @type ^`java.util.Map` @kind object;
  #L410ed6.  call temp:= `put`(v3, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410edc.  call `e`(v1) @signature `Lio/grpc/n0$h;.e:()V` @kind virtual;
  #L410ee2.  goto L410e00;
  #L410ee4.  v8:= new `java.util.ArrayList`;
  #L410ee8.  call `<init>`(v8) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L410eee.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L410ef4.  v0:= temp @kind object;
  #L410ef6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410efc.  v1:= temp;
  #L410efe.  if v1 == 0 then goto L410f26;
  #L410f02.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410f08.  v1:= temp @kind object;
  #L410f0a.  v1:= (`io.grpc.v`) v1 @kind object;
  #L410f0e.  v2:= v7.`z1.h.d` @type ^`java.util.Map` @kind object;
  #L410f12.  call temp:= `remove`(v2, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f18.  v1:= temp @kind object;
  #L410f1a.  v1:= (`io.grpc.n0$h`) v1 @kind object;
  #L410f1e.  call temp:= `add`(v8, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L410f24.  goto L410ef6;
  #L410f26.  call `q`(v7) @signature `Lz1/h;.q:()V` @kind direct;
  #L410f2c.  call temp:= `iterator`(v8) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L410f32.  v8:= temp @kind object;
  #L410f34.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410f3a.  v0:= temp;
  #L410f3c.  if v0 == 0 then goto L410f54;
  #L410f40.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410f46.  v0:= temp @kind object;
  #L410f48.  v0:= (`io.grpc.n0$h`) v0 @kind object;
  #L410f4c.  call `n`(v7, v0) @signature `Lz1/h;.n:(Lio/grpc/n0$h;)V` @kind direct;
  #L410f52.  goto L410f34;
  #L410f54.  return @kind void;
}
procedure `void` `f`(`z1.h` v2 @kind this) @signature `Lz1/h;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L411038.  call temp:= `j`(v2) @signature `Lz1/h;.j:()Ljava/util/Collection;` @kind virtual;
  #L41103e.  v0:= temp @kind object;
  #L411040.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L411046.  v0:= temp @kind object;
  #L411048.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L41104e.  v1:= temp;
  #L411050.  if v1 == 0 then goto L411068;
  #L411054.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L41105a.  v1:= temp @kind object;
  #L41105c.  v1:= (`io.grpc.n0$h`) v1 @kind object;
  #L411060.  call `n`(v2, v1) @signature `Lz1/h;.n:(Lio/grpc/n0$h;)V` @kind direct;
  #L411066.  goto L411048;
  #L411068.  v0:= v2.`z1.h.d` @type ^`java.util.Map` @kind object;
  #L41106c.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L411072.  return @kind void;
}
procedure `java.util.Collection` `j`(`z1.h` v1 @kind this) @signature `Lz1/h;.j:()Ljava/util/Collection;` @AccessFlag  {
    temp;
    v0;

  #L410bf0.  v0:= v1.`z1.h.d` @type ^`java.util.Map` @kind object;
  #L410bf4.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L410bfa.  v0:= temp @kind object;
  #L410bfc.  return v0 @kind object;
}
