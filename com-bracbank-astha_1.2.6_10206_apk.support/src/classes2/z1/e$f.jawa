record `z1.e$f` @kind class @AccessFlag  extends `z1.e$j` @kind interface {
  `z1.e$g` `z1.e$f.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`z1.e$f` v0 @kind this, `z1.e$g` v1 @kind object) @signature `Lz1/e$f;.<init>:(Lz1/e$g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40f478.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40f47e.  v0.`z1.e$f.a` @type ^`z1.e$g` := v1 @kind object;
  #L40f482.  return @kind void;
}
procedure `void` `a`(`z1.e$f` v7 @kind this, `z1.e$c` v8 @kind object, `long` v9 ) @signature `Lz1/e$f;.a:(Lz1/e$c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L40f494.  v0:= v7.`z1.e$f.a` @type ^`z1.e$g` @kind object;
  #L40f498.  v0:= v0.`z1.e$g.f` @type ^`z1.e$g$b` @kind object;
  #L40f49c.  v0:= v0.`z1.e$g$b.d` @type ^`java.lang.Integer` @kind object;
  #L40f4a0.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f4a6.  v0:= temp;
  #L40f4a8.  call temp:= `l`(v8, v0) @signature `Lz1/e;.l:(Lz1/e$c;I)Ljava/util/List;` @kind static;
  #L40f4ae.  v0:= temp @kind object;
  #L40f4b0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40f4b6.  v1:= temp;
  #L40f4b8.  v2:= v7.`z1.e$f.a` @type ^`z1.e$g` @kind object;
  #L40f4bc.  v2:= v2.`z1.e$g.f` @type ^`z1.e$g$b` @kind object;
  #L40f4c0.  v2:= v2.`z1.e$g$b.c` @type ^`java.lang.Integer` @kind object;
  #L40f4c4.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f4ca.  v2:= temp;
  #L40f4cc.  if v1 < v2 then goto L40f5ac;
  #L40f4d0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40f4d6.  v1:= temp;
  #L40f4d8.  if v1 != 0 then goto L40f4de;
  #L40f4dc.  goto L40f5ac;
  #L40f4de.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40f4e4.  v0:= temp @kind object;
  #L40f4e6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40f4ec.  v1:= temp;
  #L40f4ee.  if v1 == 0 then goto L40f5ac;
  #L40f4f2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40f4f8.  v1:= temp @kind object;
  #L40f4fa.  v1:= (`z1.e$b`) v1 @kind object;
  #L40f4fe.  call temp:= `b`(v8) @signature `Lz1/e$c;.b:()D` @kind virtual;
  #L40f504.  v2:= temp @kind wide;
  #L40f506.  v4:= v7.`z1.e$f.a` @type ^`z1.e$g` @kind object;
  #L40f50a.  v4:= v4.`z1.e$g.d` @type ^`java.lang.Integer` @kind object;
  #L40f50e.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f514.  v4:= temp;
  #L40f516.  v4:= (`double`) v4 @kind i2d;
  #L40f518.  v6:= dcmpl(v2, v4);
  #L40f51c.  if v6 < 0 then goto L40f522;
  #L40f520.  return @kind void;
  #L40f522.  call temp:= `f`(v1) @signature `Lz1/e$b;.f:()J` @kind virtual;
  #L40f528.  v2:= temp @kind wide;
  #L40f52a.  v4:= v7.`z1.e$f.a` @type ^`z1.e$g` @kind object;
  #L40f52e.  v4:= v4.`z1.e$g.f` @type ^`z1.e$g$b` @kind object;
  #L40f532.  v4:= v4.`z1.e$g$b.d` @type ^`java.lang.Integer` @kind object;
  #L40f536.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f53c.  v4:= temp;
  #L40f53e.  v4:= (`long`) v4 @kind i2l;
  #L40f540.  v6:= lcmp(v2, v4);
  #L40f544.  if v6 >= 0 then goto L40f54a;
  #L40f548.  goto L40f4e6;
  #L40f54a.  v2:= v7.`z1.e$f.a` @type ^`z1.e$g` @kind object;
  #L40f54e.  v2:= v2.`z1.e$g.f` @type ^`z1.e$g$b` @kind object;
  #L40f552.  v2:= v2.`z1.e$g$b.a` @type ^`java.lang.Integer` @kind object;
  #L40f556.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f55c.  v2:= temp;
  #L40f55e.  v2:= (`double`) v2 @kind i2d;
  #L40f560.  v4:= 100.0D;
  #L40f564.  v2:= v2 / v4 @kind double;
  #L40f566.  call temp:= `e`(v1) @signature `Lz1/e$b;.e:()D` @kind virtual;
  #L40f56c.  v4:= temp @kind wide;
  #L40f56e.  v6:= dcmpl(v4, v2);
  #L40f572.  if v6 <= 0 then goto L40f4e6;
  #L40f576.  v2:= new `java.util.Random`;
  #L40f57a.  call `<init>`(v2) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L40f580.  v3:= 100I;
  #L40f584.  call temp:= `nextInt`(v2, v3) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L40f58a.  v2:= temp;
  #L40f58c.  v3:= v7.`z1.e$f.a` @type ^`z1.e$g` @kind object;
  #L40f590.  v3:= v3.`z1.e$g.f` @type ^`z1.e$g$b` @kind object;
  #L40f594.  v3:= v3.`z1.e$g$b.b` @type ^`java.lang.Integer` @kind object;
  #L40f598.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f59e.  v3:= temp;
  #L40f5a0.  if v2 >= v3 then goto L40f4e6;
  #L40f5a4.  call `d`(v1, v9) @signature `Lz1/e$b;.d:(J)V` @kind virtual;
  #L40f5aa.  goto L40f4e6;
  #L40f5ac.  return @kind void;
}
