record `z1.d$a` @kind class @AccessFlag  extends `io.grpc.n0` @kind class {
  `z1.d` `z1.d$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`z1.d$a` v0 @kind this, `z1.d` v1 @kind object) @signature `Lz1/d$a;.<init>:(Lz1/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40e84c.  v0.`z1.d$a.c` @type ^`z1.d` := v1 @kind object;
  #L40e850.  call `<init>`(v0) @signature `Lio/grpc/n0;.<init>:()V` @kind direct;
  #L40e856.  return @kind void;
}
procedure `void` `c`(`z1.d$a` v3 @kind this, `io.grpc.Status` v4 @kind object) @signature `Lz1/d$a;.c:(Lio/grpc/Status;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40e868.  v0:= v3.`z1.d$a.c` @type ^`z1.d` @kind object;
  #L40e86c.  call temp:= `h`(v0) @signature `Lz1/d;.h:(Lz1/d;)Lio/grpc/n0$d;` @kind static;
  #L40e872.  v0:= temp @kind object;
  #L40e874.  v1:= `@@io.grpc.ConnectivityState.c` @type ^`io.grpc.ConnectivityState` @kind object;
  #L40e878.  v2:= new `z1.d$a$a`;
  #L40e87c.  call `<init>`(v2, v3, v4) @signature `Lz1/d$a$a;.<init>:(Lz1/d$a;Lio/grpc/Status;)V` @kind direct;
  #L40e882.  call `f`(v0, v1, v2) @signature `Lio/grpc/n0$d;.f:(Lio/grpc/ConnectivityState;Lio/grpc/n0$i;)V` @kind virtual;
  #L40e888.  return @kind void;
}
procedure `void` `d`(`z1.d$a` v1 @kind this, `io.grpc.n0$g` v2 @kind object) @signature `Lz1/d$a;.d:(Lio/grpc/n0$g;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e89c.  v2:= new `java.lang.IllegalStateException`;
  #L40e8a0.  v0:= "GracefulSwitchLoadBalancer must switch to a load balancing policy before handling ResolvedAddresses" @kind object;
  #L40e8a4.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40e8aa.  throw v2;
}
procedure `void` `f`(`z1.d$a` v0 @kind this) @signature `Lz1/d$a;.f:()V` @AccessFlag PUBLIC {
    temp;

  #L40e8bc.  return @kind void;
}
