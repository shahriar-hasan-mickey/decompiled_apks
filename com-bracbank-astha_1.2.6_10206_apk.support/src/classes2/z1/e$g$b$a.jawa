record `z1.e$g$b$a` @kind class @AccessFlag PUBLIC {
  `java.lang.Integer` `z1.e$g$b$a.a` @AccessFlag ;
  `java.lang.Integer` `z1.e$g$b$a.b` @AccessFlag ;
  `java.lang.Integer` `z1.e$g$b$a.c` @AccessFlag ;
  `java.lang.Integer` `z1.e$g$b$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`z1.e$g$b$a` v1 @kind this) @signature `Lz1/e$g$b$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L40f760.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40f766.  v0:= 85I;
  #L40f76a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f770.  v0:= temp @kind object;
  #L40f772.  v1.`z1.e$g$b$a.a` @type ^`java.lang.Integer` := v0 @kind object;
  #L40f776.  v0:= 100I;
  #L40f77a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f780.  v0:= temp @kind object;
  #L40f782.  v1.`z1.e$g$b$a.b` @type ^`java.lang.Integer` := v0 @kind object;
  #L40f786.  v0:= 5I;
  #L40f788.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f78e.  v0:= temp @kind object;
  #L40f790.  v1.`z1.e$g$b$a.c` @type ^`java.lang.Integer` := v0 @kind object;
  #L40f794.  v0:= 50I;
  #L40f798.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f79e.  v0:= temp @kind object;
  #L40f7a0.  v1.`z1.e$g$b$a.d` @type ^`java.lang.Integer` := v0 @kind object;
  #L40f7a4.  return @kind void;
}
procedure `z1.e$g$b` `a`(`z1.e$g$b$a` v5 @kind this) @signature `Lz1/e$g$b$a;.a:()Lz1/e$g$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40f7b8.  v0:= new `z1.e$g$b`;
  #L40f7bc.  v1:= v5.`z1.e$g$b$a.a` @type ^`java.lang.Integer` @kind object;
  #L40f7c0.  v2:= v5.`z1.e$g$b$a.b` @type ^`java.lang.Integer` @kind object;
  #L40f7c4.  v3:= v5.`z1.e$g$b$a.c` @type ^`java.lang.Integer` @kind object;
  #L40f7c8.  v4:= v5.`z1.e$g$b$a.d` @type ^`java.lang.Integer` @kind object;
  #L40f7cc.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lz1/e$g$b;.<init>:(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V` @kind direct;
  #L40f7d2.  return v0 @kind object;
}
procedure `z1.e$g$b$a` `b`(`z1.e$g$b$a` v4 @kind this, `java.lang.Integer` v5 @kind object) @signature `Lz1/e$g$b$a;.b:(Ljava/lang/Integer;)Lz1/e$g$b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40f7e4.  v0:= 1I;
  #L40f7e6.  v1:= 0I;
  #L40f7e8.  if v5 == 0 then goto L40f7f0;
  #L40f7ec.  v2:= 1I;
  #L40f7ee.  goto L40f7f2;
  #L40f7f0.  v2:= 0I;
  #L40f7f2.  call `checkArgument`(v2) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f7f8.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f7fe.  v2:= temp;
  #L40f800.  if v2 < 0 then goto L40f816;
  #L40f804.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f80a.  v2:= temp;
  #L40f80c.  v3:= 100I;
  #L40f810.  if v2 > v3 then goto L40f816;
  #L40f814.  goto L40f818;
  #L40f816.  v0:= 0I;
  #L40f818.  call `checkArgument`(v0) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f81e.  v4.`z1.e$g$b$a.b` @type ^`java.lang.Integer` := v5 @kind object;
  #L40f822.  return v4 @kind object;
}
procedure `z1.e$g$b$a` `c`(`z1.e$g$b$a` v3 @kind this, `java.lang.Integer` v4 @kind object) @signature `Lz1/e$g$b$a;.c:(Ljava/lang/Integer;)Lz1/e$g$b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40f834.  v0:= 1I;
  #L40f836.  v1:= 0I;
  #L40f838.  if v4 == 0 then goto L40f840;
  #L40f83c.  v2:= 1I;
  #L40f83e.  goto L40f842;
  #L40f840.  v2:= 0I;
  #L40f842.  call `checkArgument`(v2) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f848.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f84e.  v2:= temp;
  #L40f850.  if v2 < 0 then goto L40f856;
  #L40f854.  goto L40f858;
  #L40f856.  v0:= 0I;
  #L40f858.  call `checkArgument`(v0) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f85e.  v3.`z1.e$g$b$a.c` @type ^`java.lang.Integer` := v4 @kind object;
  #L40f862.  return v3 @kind object;
}
procedure `z1.e$g$b$a` `d`(`z1.e$g$b$a` v3 @kind this, `java.lang.Integer` v4 @kind object) @signature `Lz1/e$g$b$a;.d:(Ljava/lang/Integer;)Lz1/e$g$b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40f874.  v0:= 1I;
  #L40f876.  v1:= 0I;
  #L40f878.  if v4 == 0 then goto L40f880;
  #L40f87c.  v2:= 1I;
  #L40f87e.  goto L40f882;
  #L40f880.  v2:= 0I;
  #L40f882.  call `checkArgument`(v2) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f888.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f88e.  v2:= temp;
  #L40f890.  if v2 < 0 then goto L40f896;
  #L40f894.  goto L40f898;
  #L40f896.  v0:= 0I;
  #L40f898.  call `checkArgument`(v0) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f89e.  v3.`z1.e$g$b$a.d` @type ^`java.lang.Integer` := v4 @kind object;
  #L40f8a2.  return v3 @kind object;
}
procedure `z1.e$g$b$a` `e`(`z1.e$g$b$a` v4 @kind this, `java.lang.Integer` v5 @kind object) @signature `Lz1/e$g$b$a;.e:(Ljava/lang/Integer;)Lz1/e$g$b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40f8b4.  v0:= 1I;
  #L40f8b6.  v1:= 0I;
  #L40f8b8.  if v5 == 0 then goto L40f8c0;
  #L40f8bc.  v2:= 1I;
  #L40f8be.  goto L40f8c2;
  #L40f8c0.  v2:= 0I;
  #L40f8c2.  call `checkArgument`(v2) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f8c8.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f8ce.  v2:= temp;
  #L40f8d0.  if v2 < 0 then goto L40f8e6;
  #L40f8d4.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f8da.  v2:= temp;
  #L40f8dc.  v3:= 100I;
  #L40f8e0.  if v2 > v3 then goto L40f8e6;
  #L40f8e4.  goto L40f8e8;
  #L40f8e6.  v0:= 0I;
  #L40f8e8.  call `checkArgument`(v0) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f8ee.  v4.`z1.e$g$b$a.a` @type ^`java.lang.Integer` := v5 @kind object;
  #L40f8f2.  return v4 @kind object;
}
