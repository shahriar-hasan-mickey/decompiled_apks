record `z1.e$g$c$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Integer` `z1.e$g$c$a.a` @AccessFlag ;
  `java.lang.Integer` `z1.e$g$c$a.b` @AccessFlag ;
  `java.lang.Integer` `z1.e$g$c$a.c` @AccessFlag ;
  `java.lang.Integer` `z1.e$g$c$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`z1.e$g$c$a` v2 @kind this) @signature `Lz1/e$g$c$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L40f92c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40f932.  v0:= 1900I;
  #L40f936.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f93c.  v0:= temp @kind object;
  #L40f93e.  v2.`z1.e$g$c$a.a` @type ^`java.lang.Integer` := v0 @kind object;
  #L40f942.  v0:= 100I;
  #L40f946.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f94c.  v0:= temp @kind object;
  #L40f94e.  v2.`z1.e$g$c$a.b` @type ^`java.lang.Integer` := v0 @kind object;
  #L40f952.  v1:= 5I;
  #L40f954.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f95a.  v1:= temp @kind object;
  #L40f95c.  v2.`z1.e$g$c$a.c` @type ^`java.lang.Integer` := v1 @kind object;
  #L40f960.  v2.`z1.e$g$c$a.d` @type ^`java.lang.Integer` := v0 @kind object;
  #L40f964.  return @kind void;
}
procedure `z1.e$g$c` `a`(`z1.e$g$c$a` v5 @kind this) @signature `Lz1/e$g$c$a;.a:()Lz1/e$g$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40f978.  v0:= new `z1.e$g$c`;
  #L40f97c.  v1:= v5.`z1.e$g$c$a.a` @type ^`java.lang.Integer` @kind object;
  #L40f980.  v2:= v5.`z1.e$g$c$a.b` @type ^`java.lang.Integer` @kind object;
  #L40f984.  v3:= v5.`z1.e$g$c$a.c` @type ^`java.lang.Integer` @kind object;
  #L40f988.  v4:= v5.`z1.e$g$c$a.d` @type ^`java.lang.Integer` @kind object;
  #L40f98c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lz1/e$g$c;.<init>:(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V` @kind direct;
  #L40f992.  return v0 @kind object;
}
procedure `z1.e$g$c$a` `b`(`z1.e$g$c$a` v4 @kind this, `java.lang.Integer` v5 @kind object) @signature `Lz1/e$g$c$a;.b:(Ljava/lang/Integer;)Lz1/e$g$c$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40f9a4.  v0:= 1I;
  #L40f9a6.  v1:= 0I;
  #L40f9a8.  if v5 == 0 then goto L40f9b0;
  #L40f9ac.  v2:= 1I;
  #L40f9ae.  goto L40f9b2;
  #L40f9b0.  v2:= 0I;
  #L40f9b2.  call `checkArgument`(v2) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f9b8.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f9be.  v2:= temp;
  #L40f9c0.  if v2 < 0 then goto L40f9d6;
  #L40f9c4.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40f9ca.  v2:= temp;
  #L40f9cc.  v3:= 100I;
  #L40f9d0.  if v2 > v3 then goto L40f9d6;
  #L40f9d4.  goto L40f9d8;
  #L40f9d6.  v0:= 0I;
  #L40f9d8.  call `checkArgument`(v0) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40f9de.  v4.`z1.e$g$c$a.b` @type ^`java.lang.Integer` := v5 @kind object;
  #L40f9e2.  return v4 @kind object;
}
procedure `z1.e$g$c$a` `c`(`z1.e$g$c$a` v3 @kind this, `java.lang.Integer` v4 @kind object) @signature `Lz1/e$g$c$a;.c:(Ljava/lang/Integer;)Lz1/e$g$c$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40f9f4.  v0:= 1I;
  #L40f9f6.  v1:= 0I;
  #L40f9f8.  if v4 == 0 then goto L40fa00;
  #L40f9fc.  v2:= 1I;
  #L40f9fe.  goto L40fa02;
  #L40fa00.  v2:= 0I;
  #L40fa02.  call `checkArgument`(v2) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40fa08.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40fa0e.  v2:= temp;
  #L40fa10.  if v2 < 0 then goto L40fa16;
  #L40fa14.  goto L40fa18;
  #L40fa16.  v0:= 0I;
  #L40fa18.  call `checkArgument`(v0) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40fa1e.  v3.`z1.e$g$c$a.c` @type ^`java.lang.Integer` := v4 @kind object;
  #L40fa22.  return v3 @kind object;
}
procedure `z1.e$g$c$a` `d`(`z1.e$g$c$a` v3 @kind this, `java.lang.Integer` v4 @kind object) @signature `Lz1/e$g$c$a;.d:(Ljava/lang/Integer;)Lz1/e$g$c$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40fa34.  v0:= 1I;
  #L40fa36.  v1:= 0I;
  #L40fa38.  if v4 == 0 then goto L40fa40;
  #L40fa3c.  v2:= 1I;
  #L40fa3e.  goto L40fa42;
  #L40fa40.  v2:= 0I;
  #L40fa42.  call `checkArgument`(v2) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40fa48.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40fa4e.  v2:= temp;
  #L40fa50.  if v2 < 0 then goto L40fa56;
  #L40fa54.  goto L40fa58;
  #L40fa56.  v0:= 0I;
  #L40fa58.  call `checkArgument`(v0) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40fa5e.  v3.`z1.e$g$c$a.d` @type ^`java.lang.Integer` := v4 @kind object;
  #L40fa62.  return v3 @kind object;
}
procedure `z1.e$g$c$a` `e`(`z1.e$g$c$a` v1 @kind this, `java.lang.Integer` v2 @kind object) @signature `Lz1/e$g$c$a;.e:(Ljava/lang/Integer;)Lz1/e$g$c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40fa74.  if v2 == 0 then goto L40fa7c;
  #L40fa78.  v0:= 1I;
  #L40fa7a.  goto L40fa7e;
  #L40fa7c.  v0:= 0I;
  #L40fa7e.  call `checkArgument`(v0) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L40fa84.  v1.`z1.e$g$c$a.a` @type ^`java.lang.Integer` := v2 @kind object;
  #L40fa88.  return v1 @kind object;
}
