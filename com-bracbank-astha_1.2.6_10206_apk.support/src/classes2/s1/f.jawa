record `s1.f` @kind class @AccessFlag PUBLIC {
  `r1.l` `s1.f.a` @AccessFlag PRIVATE;
  `int` `s1.f.b` @AccessFlag PRIVATE;
  `boolean` `s1.f.c` @AccessFlag PRIVATE;
  `s1.j` `s1.f.d` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Ls1/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L3fbfc0.  return @kind void;
}
procedure `void` `<init>`(`s1.f` v1 @kind this, `int` v2 , `r1.l` v3 @kind object) @signature `Ls1/f;.<init>:(ILr1/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fbfd4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fbfda.  v0:= 0I;
  #L3fbfdc.  v1.`s1.f.c` @type ^`boolean` := v0 @kind boolean;
  #L3fbfe0.  v0:= new `s1.g`;
  #L3fbfe4.  call `<init>`(v0) @signature `Ls1/g;.<init>:()V` @kind direct;
  #L3fbfea.  v1.`s1.f.d` @type ^`s1.j` := v0 @kind object;
  #L3fbfee.  v1.`s1.f.b` @type ^`int` := v2;
  #L3fbff2.  v1.`s1.f.a` @type ^`r1.l` := v3 @kind object;
  #L3fbff6.  return @kind void;
}
procedure `r1.l` `a`(`s1.f` v1 @kind this, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `Ls1/f;.a:(Ljava/util/List;Z)Lr1/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fbf6c.  call temp:= `b`(v1, v3) @signature `Ls1/f;.b:(Z)Lr1/l;` @kind virtual;
  #L3fbf72.  v3:= temp @kind object;
  #L3fbf74.  v0:= v1.`s1.f.d` @type ^`s1.j` @kind object;
  #L3fbf78.  call temp:= `b`(v0, v2, v3) @signature `Ls1/j;.b:(Ljava/util/List;Lr1/l;)Lr1/l;` @kind virtual;
  #L3fbf7e.  v2:= temp @kind object;
  #L3fbf80.  return v2 @kind object;
}
procedure `r1.l` `b`(`s1.f` v1 @kind this, `boolean` v2 ) @signature `Ls1/f;.b:(Z)Lr1/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fbf94.  v0:= v1.`s1.f.a` @type ^`r1.l` @kind object;
  #L3fbf98.  if v0 != 0 then goto L3fbfa0;
  #L3fbf9c.  v2:= 0I;
  #L3fbf9e.  return v2 @kind object;
  #L3fbfa0.  if v2 == 0 then goto L3fbfae;
  #L3fbfa4.  call temp:= `b`(v0) @signature `Lr1/l;.b:()Lr1/l;` @kind virtual;
  #L3fbfaa.  v2:= temp @kind object;
  #L3fbfac.  return v2 @kind object;
  #L3fbfae.  return v0 @kind object;
}
procedure `int` `c`(`s1.f` v1 @kind this) @signature `Ls1/f;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fbf54.  v0:= v1.`s1.f.b` @type ^`int`;
  #L3fbf58.  return v0;
}
procedure `android.graphics.Rect` `d`(`s1.f` v2 @kind this, `r1.l` v3 @kind object) @signature `Ls1/f;.d:(Lr1/l;)Landroid/graphics/Rect;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fbf30.  v0:= v2.`s1.f.d` @type ^`s1.j` @kind object;
  #L3fbf34.  v1:= v2.`s1.f.a` @type ^`r1.l` @kind object;
  #L3fbf38.  call temp:= `d`(v0, v3, v1) @signature `Ls1/j;.d:(Lr1/l;Lr1/l;)Landroid/graphics/Rect;` @kind virtual;
  #L3fbf3e.  v3:= temp @kind object;
  #L3fbf40.  return v3 @kind object;
}
procedure `void` `e`(`s1.f` v0 @kind this, `s1.j` v1 @kind object) @signature `Ls1/f;.e:(Ls1/j;)V` @AccessFlag PUBLIC {
    temp;

  #L3fc008.  v0.`s1.f.d` @type ^`s1.j` := v1 @kind object;
  #L3fc00c.  return @kind void;
}
