record `s1.d` @kind class @AccessFlag  {
  `android.os.Handler` `s1.d.a` @AccessFlag PRIVATE;
  `android.os.HandlerThread` `s1.d.b` @AccessFlag PRIVATE;
  `int` `s1.d.c` @AccessFlag PRIVATE;
  `java.lang.Object` `s1.d.d` @AccessFlag PRIVATE_FINAL;
}
global `s1.d` `@@s1.d.e` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Ls1/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L3fbc10.  return @kind void;
}
procedure `void` `<init>`(`s1.d` v1 @kind this) @signature `Ls1/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3fbc24.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fbc2a.  v0:= 0I;
  #L3fbc2c.  v1.`s1.d.c` @type ^`int` := v0;
  #L3fbc30.  v0:= new `java.lang.Object`;
  #L3fbc34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fbc3a.  v1.`s1.d.d` @type ^`java.lang.Object` := v0 @kind object;
  #L3fbc3e.  return @kind void;
}
procedure `void` `a`(`s1.d` v3 @kind this) @signature `Ls1/d;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3fbc50.  v0:= v3.`s1.d.d` @type ^`java.lang.Object` @kind object;
  #L3fbc54.  @monitorenter v0
  #L3fbc56.  v1:= v3.`s1.d.a` @type ^`android.os.Handler` @kind object;
  #L3fbc5a.  if v1 != 0 then goto L3fbcaa;
  #L3fbc5e.  v1:= v3.`s1.d.c` @type ^`int`;
  #L3fbc62.  if v1 <= 0 then goto L3fbc9a;
  #L3fbc66.  v1:= new `android.os.HandlerThread`;
  #L3fbc6a.  v2:= "CameraThread" @kind object;
  #L3fbc6e.  call `<init>`(v1, v2) @signature `Landroid/os/HandlerThread;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fbc74.  v3.`s1.d.b` @type ^`android.os.HandlerThread` := v1 @kind object;
  #L3fbc78.  call `start`(v1) @signature `Landroid/os/HandlerThread;.start:()V` @kind virtual;
  #L3fbc7e.  v1:= new `android.os.Handler`;
  #L3fbc82.  v2:= v3.`s1.d.b` @type ^`android.os.HandlerThread` @kind object;
  #L3fbc86.  call temp:= `getLooper`(v2) @signature `Landroid/os/HandlerThread;.getLooper:()Landroid/os/Looper;` @kind virtual;
  #L3fbc8c.  v2:= temp @kind object;
  #L3fbc8e.  call `<init>`(v1, v2) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L3fbc94.  v3.`s1.d.a` @type ^`android.os.Handler` := v1 @kind object;
  #L3fbc98.  goto L3fbcaa;
  #L3fbc9a.  v1:= new `java.lang.IllegalStateException`;
  #L3fbc9e.  v2:= "CameraThread is not open" @kind object;
  #L3fbca2.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fbca8.  throw v1;
  #L3fbcaa.  @monitorexit v0
  #L3fbcac.  return @kind void;
  #L3fbcae.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fbcb0.  @monitorexit v0
  #L3fbcb2.  throw v1;
  catch `java.lang.Throwable` @[L3fbc56..L3fbcb2] goto L3fbcae;
}
procedure `s1.d` `d`() @signature `Ls1/d;.d:()Ls1/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fbbe4.  v0:= `@@s1.d.e` @type ^`s1.d` @kind object;
  #L3fbbe8.  if v0 != 0 then goto L3fbbfa;
  #L3fbbec.  v0:= new `s1.d`;
  #L3fbbf0.  call `<init>`(v0) @signature `Ls1/d;.<init>:()V` @kind direct;
  #L3fbbf6.  `@@s1.d.e` @type ^`s1.d` := v0 @kind object;
  #L3fbbfa.  v0:= `@@s1.d.e` @type ^`s1.d` @kind object;
  #L3fbbfe.  return v0 @kind object;
}
procedure `void` `f`(`s1.d` v2 @kind this) @signature `Ls1/d;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fbd90.  v0:= v2.`s1.d.d` @type ^`java.lang.Object` @kind object;
  #L3fbd94.  @monitorenter v0
  #L3fbd96.  v1:= v2.`s1.d.b` @type ^`android.os.HandlerThread` @kind object;
  #L3fbd9a.  call temp:= `quit`(v1) @signature `Landroid/os/HandlerThread;.quit:()Z` @kind virtual;
  #L3fbda0.  v1:= 0I;
  #L3fbda2.  v2.`s1.d.b` @type ^`android.os.HandlerThread` := v1 @kind object;
  #L3fbda6.  v2.`s1.d.a` @type ^`android.os.Handler` := v1 @kind object;
  #L3fbdaa.  @monitorexit v0
  #L3fbdac.  return @kind void;
  #L3fbdae.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fbdb0.  @monitorexit v0
  #L3fbdb2.  throw v1;
  catch `java.lang.Throwable` @[L3fbd96..L3fbdb2] goto L3fbdae;
}
procedure `void` `b`(`s1.d` v2 @kind this) @signature `Ls1/d;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3fbcd0.  v0:= v2.`s1.d.d` @type ^`java.lang.Object` @kind object;
  #L3fbcd4.  @monitorenter v0
  #L3fbcd6.  v1:= v2.`s1.d.c` @type ^`int`;
  #L3fbcda.  v1:= v1 + -1;
  #L3fbcde.  v2.`s1.d.c` @type ^`int` := v1;
  #L3fbce2.  if v1 != 0 then goto L3fbcec;
  #L3fbce6.  call `f`(v2) @signature `Ls1/d;.f:()V` @kind direct;
  #L3fbcec.  @monitorexit v0
  #L3fbcee.  return @kind void;
  #L3fbcf0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fbcf2.  @monitorexit v0
  #L3fbcf4.  throw v1;
  catch `java.lang.Throwable` @[L3fbcd6..L3fbcf4] goto L3fbcf0;
}
procedure `void` `c`(`s1.d` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Ls1/d;.c:(Ljava/lang/Runnable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3fbd14.  v0:= v2.`s1.d.d` @type ^`java.lang.Object` @kind object;
  #L3fbd18.  @monitorenter v0
  #L3fbd1a.  call `a`(v2) @signature `Ls1/d;.a:()V` @kind direct;
  #L3fbd20.  v1:= v2.`s1.d.a` @type ^`android.os.Handler` @kind object;
  #L3fbd24.  call temp:= `post`(v1, v3) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L3fbd2a.  @monitorexit v0
  #L3fbd2c.  return @kind void;
  #L3fbd2e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fbd30.  @monitorexit v0
  #L3fbd32.  throw v3;
  catch `java.lang.Throwable` @[L3fbd1a..L3fbd32] goto L3fbd2e;
}
procedure `void` `e`(`s1.d` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Ls1/d;.e:(Ljava/lang/Runnable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3fbd50.  v0:= v2.`s1.d.d` @type ^`java.lang.Object` @kind object;
  #L3fbd54.  @monitorenter v0
  #L3fbd56.  v1:= v2.`s1.d.c` @type ^`int`;
  #L3fbd5a.  v1:= v1 + 1;
  #L3fbd5e.  v2.`s1.d.c` @type ^`int` := v1;
  #L3fbd62.  call `c`(v2, v3) @signature `Ls1/d;.c:(Ljava/lang/Runnable;)V` @kind virtual;
  #L3fbd68.  @monitorexit v0
  #L3fbd6a.  return @kind void;
  #L3fbd6c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fbd6e.  @monitorexit v0
  #L3fbd70.  throw v3;
  catch `java.lang.Throwable` @[L3fbd56..L3fbd70] goto L3fbd6c;
}
