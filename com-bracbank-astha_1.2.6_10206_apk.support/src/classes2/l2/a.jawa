record `l2.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `h2.d` `@@l2.a.a` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.b` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.c` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.d` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.e` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.f` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.g` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.h` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.i` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.j` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.k` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.l` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.m` @AccessFlag STATIC_VOLATILE;
global `h2.e` `@@l2.a.n` @AccessFlag STATIC_VOLATILE;
global `h2.b` `@@l2.a.o` @AccessFlag STATIC_VOLATILE;
global `h2.b` `@@l2.a.p` @AccessFlag STATIC_VOLATILE;
global `h2.b` `@@l2.a.q` @AccessFlag STATIC_VOLATILE;
global `h2.b` `@@l2.a.r` @AccessFlag STATIC_VOLATILE;
global `h2.b` `@@l2.a.s` @AccessFlag STATIC_VOLATILE;
procedure `java.lang.Object` `a`(`h2.b` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ll2/a;.a:(Lh2/b;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L3a01d8.  call temp:= `a`(v0, v1, v2) @signature `Lh2/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3a01de.  v0:= temp @kind object;
  #L3a01e0.  return v0 @kind object;
  #L3a01e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a01e4.  call temp:= `d`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.d:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3a01ea.  v0:= temp @kind object;
  #L3a01ec.  throw v0;
  catch `java.lang.Throwable` @[L3a01d8..L3a01e0] goto L3a01e2;
}
procedure `java.lang.Object` `b`(`h2.e` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L3a020c.  call temp:= `apply`(v0, v1) @signature `Lh2/e;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3a0212.  v0:= temp @kind object;
  #L3a0214.  return v0 @kind object;
  #L3a0216.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a0218.  call temp:= `d`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.d:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3a021e.  v0:= temp @kind object;
  #L3a0220.  throw v0;
  catch `java.lang.Throwable` @[L3a020c..L3a0214] goto L3a0216;
}
procedure `b2.q` `c`(`h2.e` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object) @signature `Ll2/a;.c:(Lh2/e;Ljava/util/concurrent/Callable;)Lb2/q;` @AccessFlag STATIC {
    temp;

  #L39ff44.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39ff4a.  v0:= temp @kind object;
  #L39ff4c.  v1:= "Scheduler Callable result can't be null" @kind object;
  #L39ff50.  call temp:= `d`(v0, v1) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L39ff56.  v0:= temp @kind object;
  #L39ff58.  v0:= (`b2.q`) v0 @kind object;
  #L39ff5c.  return v0 @kind object;
}
procedure `b2.q` `d`(`java.util.concurrent.Callable` v1 @kind object) @signature `Ll2/a;.d:(Ljava/util/concurrent/Callable;)Lb2/q;` @AccessFlag STATIC {
    temp;
    v0;

  #L39ff70.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L39ff76.  v1:= temp @kind object;
  #L39ff78.  v0:= "Scheduler Callable result can't be null" @kind object;
  #L39ff7c.  call temp:= `d`(v1, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L39ff82.  v1:= temp @kind object;
  #L39ff84.  v1:= (`b2.q`) v1 @kind object;
  #L39ff88.  return v1 @kind object;
  #L39ff8a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39ff8c.  call temp:= `d`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.d:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L39ff92.  v1:= temp @kind object;
  #L39ff94.  throw v1;
  catch `java.lang.Throwable` @[L39ff70..L39ff88] goto L39ff8a;
}
procedure `b2.q` `e`(`java.util.concurrent.Callable` v1 @kind object) @signature `Ll2/a;.e:(Ljava/util/concurrent/Callable;)Lb2/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39ffb4.  v0:= "Scheduler Callable can't be null" @kind object;
  #L39ffb8.  call temp:= `d`(v1, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L39ffbe.  v0:= `@@l2.a.c` @type ^`h2.e` @kind object;
  #L39ffc2.  if v0 != 0 then goto L39ffd0;
  #L39ffc6.  call temp:= `d`(v1) @signature `Ll2/a;.d:(Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L39ffcc.  v1:= temp @kind object;
  #L39ffce.  return v1 @kind object;
  #L39ffd0.  call temp:= `c`(v0, v1) @signature `Ll2/a;.c:(Lh2/e;Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L39ffd6.  v1:= temp @kind object;
  #L39ffd8.  return v1 @kind object;
}
procedure `b2.q` `f`(`java.util.concurrent.Callable` v1 @kind object) @signature `Ll2/a;.f:(Ljava/util/concurrent/Callable;)Lb2/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39ffec.  v0:= "Scheduler Callable can't be null" @kind object;
  #L39fff0.  call temp:= `d`(v1, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L39fff6.  v0:= `@@l2.a.e` @type ^`h2.e` @kind object;
  #L39fffa.  if v0 != 0 then goto L3a0008;
  #L39fffe.  call temp:= `d`(v1) @signature `Ll2/a;.d:(Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L3a0004.  v1:= temp @kind object;
  #L3a0006.  return v1 @kind object;
  #L3a0008.  call temp:= `c`(v0, v1) @signature `Ll2/a;.c:(Lh2/e;Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L3a000e.  v1:= temp @kind object;
  #L3a0010.  return v1 @kind object;
}
procedure `b2.q` `g`(`java.util.concurrent.Callable` v1 @kind object) @signature `Ll2/a;.g:(Ljava/util/concurrent/Callable;)Lb2/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a0024.  v0:= "Scheduler Callable can't be null" @kind object;
  #L3a0028.  call temp:= `d`(v1, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a002e.  v0:= `@@l2.a.f` @type ^`h2.e` @kind object;
  #L3a0032.  if v0 != 0 then goto L3a0040;
  #L3a0036.  call temp:= `d`(v1) @signature `Ll2/a;.d:(Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L3a003c.  v1:= temp @kind object;
  #L3a003e.  return v1 @kind object;
  #L3a0040.  call temp:= `c`(v0, v1) @signature `Ll2/a;.c:(Lh2/e;Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L3a0046.  v1:= temp @kind object;
  #L3a0048.  return v1 @kind object;
}
procedure `b2.q` `h`(`java.util.concurrent.Callable` v1 @kind object) @signature `Ll2/a;.h:(Ljava/util/concurrent/Callable;)Lb2/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a005c.  v0:= "Scheduler Callable can't be null" @kind object;
  #L3a0060.  call temp:= `d`(v1, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a0066.  v0:= `@@l2.a.d` @type ^`h2.e` @kind object;
  #L3a006a.  if v0 != 0 then goto L3a0078;
  #L3a006e.  call temp:= `d`(v1) @signature `Ll2/a;.d:(Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L3a0074.  v1:= temp @kind object;
  #L3a0076.  return v1 @kind object;
  #L3a0078.  call temp:= `c`(v0, v1) @signature `Ll2/a;.c:(Lh2/e;Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L3a007e.  v1:= temp @kind object;
  #L3a0080.  return v1 @kind object;
}
procedure `boolean` `i`(`java.lang.Throwable` v2 @kind object) @signature `Ll2/a;.i:(Ljava/lang/Throwable;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3a0134.  v0:= instanceof @variable v2 @type ^`io.reactivex.exceptions.OnErrorNotImplementedException` @kind boolean;
  #L3a0138.  v1:= 1I;
  #L3a013a.  if v0 == 0 then goto L3a0140;
  #L3a013e.  return v1;
  #L3a0140.  v0:= instanceof @variable v2 @type ^`io.reactivex.exceptions.MissingBackpressureException` @kind boolean;
  #L3a0144.  if v0 == 0 then goto L3a014a;
  #L3a0148.  return v1;
  #L3a014a.  v0:= instanceof @variable v2 @type ^`java.lang.IllegalStateException` @kind boolean;
  #L3a014e.  if v0 == 0 then goto L3a0154;
  #L3a0152.  return v1;
  #L3a0154.  v0:= instanceof @variable v2 @type ^`java.lang.NullPointerException` @kind boolean;
  #L3a0158.  if v0 == 0 then goto L3a015e;
  #L3a015c.  return v1;
  #L3a015e.  v0:= instanceof @variable v2 @type ^`java.lang.IllegalArgumentException` @kind boolean;
  #L3a0162.  if v0 == 0 then goto L3a0168;
  #L3a0166.  return v1;
  #L3a0168.  v2:= instanceof @variable v2 @type ^`io.reactivex.exceptions.CompositeException` @kind boolean;
  #L3a016c.  if v2 == 0 then goto L3a0172;
  #L3a0170.  return v1;
  #L3a0172.  v2:= 0I;
  #L3a0174.  return v2;
}
procedure `b2.a` `j`(`b2.a` v1 @kind object) @signature `Ll2/a;.j:(Lb2/a;)Lb2/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fe2c.  v0:= `@@l2.a.n` @type ^`h2.e` @kind object;
  #L39fe30.  if v0 == 0 then goto L39fe40;
  #L39fe34.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39fe3a.  v1:= temp @kind object;
  #L39fe3c.  v1:= (`b2.a`) v1 @kind object;
  #L39fe40.  return v1 @kind object;
}
procedure `b2.e` `k`(`b2.e` v1 @kind object) @signature `Ll2/a;.k:(Lb2/e;)Lb2/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fe7c.  v0:= `@@l2.a.i` @type ^`h2.e` @kind object;
  #L39fe80.  if v0 == 0 then goto L39fe90;
  #L39fe84.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39fe8a.  v1:= temp @kind object;
  #L39fe8c.  v1:= (`b2.e`) v1 @kind object;
  #L39fe90.  return v1 @kind object;
}
procedure `b2.i` `l`(`b2.i` v1 @kind object) @signature `Ll2/a;.l:(Lb2/i;)Lb2/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fea4.  v0:= `@@l2.a.l` @type ^`h2.e` @kind object;
  #L39fea8.  if v0 == 0 then goto L39feb8;
  #L39feac.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39feb2.  v1:= temp @kind object;
  #L39feb4.  v1:= (`b2.i`) v1 @kind object;
  #L39feb8.  return v1 @kind object;
}
procedure `b2.n` `m`(`b2.n` v1 @kind object) @signature `Ll2/a;.m:(Lb2/n;)Lb2/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fef4.  v0:= `@@l2.a.k` @type ^`h2.e` @kind object;
  #L39fef8.  if v0 == 0 then goto L39ff08;
  #L39fefc.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39ff02.  v1:= temp @kind object;
  #L39ff04.  v1:= (`b2.n`) v1 @kind object;
  #L39ff08.  return v1 @kind object;
}
procedure `b2.r` `n`(`b2.r` v1 @kind object) @signature `Ll2/a;.n:(Lb2/r;)Lb2/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a00e4.  v0:= `@@l2.a.m` @type ^`h2.e` @kind object;
  #L3a00e8.  if v0 == 0 then goto L3a00f8;
  #L3a00ec.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a00f2.  v1:= temp @kind object;
  #L3a00f4.  v1:= (`b2.r`) v1 @kind object;
  #L3a00f8.  return v1 @kind object;
}
procedure `g2.a` `o`(`g2.a` v1 @kind object) @signature `Ll2/a;.o:(Lg2/a;)Lg2/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a01b0.  v0:= `@@l2.a.j` @type ^`h2.e` @kind object;
  #L3a01b4.  if v0 == 0 then goto L3a01c4;
  #L3a01b8.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a01be.  v1:= temp @kind object;
  #L3a01c0.  v1:= (`g2.a`) v1 @kind object;
  #L3a01c4.  return v1 @kind object;
}
procedure `b2.q` `p`(`b2.q` v1 @kind object) @signature `Ll2/a;.p:(Lb2/q;)Lb2/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a0094.  v0:= `@@l2.a.g` @type ^`h2.e` @kind object;
  #L3a0098.  if v0 != 0 then goto L3a009e;
  #L3a009c.  return v1 @kind object;
  #L3a009e.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a00a4.  v1:= temp @kind object;
  #L3a00a6.  v1:= (`b2.q`) v1 @kind object;
  #L3a00aa.  return v1 @kind object;
}
procedure `void` `q`(`java.lang.Throwable` v2 @kind object) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a0274.  v0:= `@@l2.a.a` @type ^`h2.d` @kind object;
  #L3a0278.  if v2 != 0 then goto L3a028c;
  #L3a027c.  v2:= new `java.lang.NullPointerException`;
  #L3a0280.  v1:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L3a0284.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a028a.  goto L3a02a4;
  #L3a028c.  call temp:= `i`(v2) @signature `Ll2/a;.i:(Ljava/lang/Throwable;)Z` @kind static;
  #L3a0292.  v1:= temp;
  #L3a0294.  if v1 != 0 then goto L3a02a4;
  #L3a0298.  v1:= new `io.reactivex.exceptions.UndeliverableException`;
  #L3a029c.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/UndeliverableException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3a02a2.  v2:= v1 @kind object;
  #L3a02a4.  if v0 == 0 then goto L3a02be;
  #L3a02a8.  call `accept`(v0, v2) @signature `Lh2/d;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3a02ae.  return @kind void;
  #L3a02b0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a02b2.  call `printStackTrace`(v0) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L3a02b8.  call `y`(v0) @signature `Ll2/a;.y:(Ljava/lang/Throwable;)V` @kind static;
  #L3a02be.  call `printStackTrace`(v2) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L3a02c4.  call `y`(v2) @signature `Ll2/a;.y:(Ljava/lang/Throwable;)V` @kind static;
  #L3a02ca.  return @kind void;
  catch `java.lang.Throwable` @[L3a02a8..L3a02ae] goto L3a02b0;
}
procedure `b2.q` `r`(`b2.q` v1 @kind object) @signature `Ll2/a;.r:(Lb2/q;)Lb2/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a00bc.  v0:= `@@l2.a.h` @type ^`h2.e` @kind object;
  #L3a00c0.  if v0 != 0 then goto L3a00c6;
  #L3a00c4.  return v1 @kind object;
  #L3a00c6.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a00cc.  v1:= temp @kind object;
  #L3a00ce.  v1:= (`b2.q`) v1 @kind object;
  #L3a00d2.  return v1 @kind object;
}
procedure `java.lang.Runnable` `s`(`java.lang.Runnable` v1 @kind object) @signature `Ll2/a;.s:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a0240.  v0:= "run is null" @kind object;
  #L3a0244.  call temp:= `d`(v1, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a024a.  v0:= `@@l2.a.b` @type ^`h2.e` @kind object;
  #L3a024e.  if v0 != 0 then goto L3a0254;
  #L3a0252.  return v1 @kind object;
  #L3a0254.  call temp:= `b`(v0, v1) @signature `Ll2/a;.b:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a025a.  v1:= temp @kind object;
  #L3a025c.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L3a0260.  return v1 @kind object;
}
procedure `b2.b` `t`(`b2.a` v1 @kind object, `b2.b` v2 @kind object) @signature `Ll2/a;.t:(Lb2/a;Lb2/b;)Lb2/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fe54.  v0:= `@@l2.a.s` @type ^`h2.b` @kind object;
  #L39fe58.  if v0 == 0 then goto L39fe6a;
  #L39fe5c.  call temp:= `a`(v0, v1, v2) @signature `Ll2/a;.a:(Lh2/b;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39fe62.  v1:= temp @kind object;
  #L39fe64.  v1:= (`b2.b`) v1 @kind object;
  #L39fe68.  return v1 @kind object;
  #L39fe6a.  return v2 @kind object;
}
procedure `b2.k` `u`(`b2.i` v1 @kind object, `b2.k` v2 @kind object) @signature `Ll2/a;.u:(Lb2/i;Lb2/k;)Lb2/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fecc.  v0:= `@@l2.a.p` @type ^`h2.b` @kind object;
  #L39fed0.  if v0 == 0 then goto L39fee2;
  #L39fed4.  call temp:= `a`(v0, v1, v2) @signature `Ll2/a;.a:(Lh2/b;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39feda.  v1:= temp @kind object;
  #L39fedc.  v1:= (`b2.k`) v1 @kind object;
  #L39fee0.  return v1 @kind object;
  #L39fee2.  return v2 @kind object;
}
procedure `b2.p` `v`(`b2.n` v1 @kind object, `b2.p` v2 @kind object) @signature `Ll2/a;.v:(Lb2/n;Lb2/p;)Lb2/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39ff1c.  v0:= `@@l2.a.q` @type ^`h2.b` @kind object;
  #L39ff20.  if v0 == 0 then goto L39ff32;
  #L39ff24.  call temp:= `a`(v0, v1, v2) @signature `Ll2/a;.a:(Lh2/b;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39ff2a.  v1:= temp @kind object;
  #L39ff2c.  v1:= (`b2.p`) v1 @kind object;
  #L39ff30.  return v1 @kind object;
  #L39ff32.  return v2 @kind object;
}
procedure `b2.s` `w`(`b2.r` v1 @kind object, `b2.s` v2 @kind object) @signature `Ll2/a;.w:(Lb2/r;Lb2/s;)Lb2/s;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a010c.  v0:= `@@l2.a.r` @type ^`h2.b` @kind object;
  #L3a0110.  if v0 == 0 then goto L3a0122;
  #L3a0114.  call temp:= `a`(v0, v1, v2) @signature `Ll2/a;.a:(Lh2/b;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a011a.  v1:= temp @kind object;
  #L3a011c.  v1:= (`b2.s`) v1 @kind object;
  #L3a0120.  return v1 @kind object;
  #L3a0122.  return v2 @kind object;
}
procedure `d3.b` `x`(`b2.e` v1 @kind object, `d3.b` v2 @kind object) @signature `Ll2/a;.x:(Lb2/e;Ld3/b;)Ld3/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a0188.  v0:= `@@l2.a.o` @type ^`h2.b` @kind object;
  #L3a018c.  if v0 == 0 then goto L3a019e;
  #L3a0190.  call temp:= `a`(v0, v1, v2) @signature `Ll2/a;.a:(Lh2/b;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a0196.  v1:= temp @kind object;
  #L3a0198.  v1:= (`d3.b`) v1 @kind object;
  #L3a019c.  return v1 @kind object;
  #L3a019e.  return v2 @kind object;
}
procedure `void` `y`(`java.lang.Throwable` v2 @kind object) @signature `Ll2/a;.y:(Ljava/lang/Throwable;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3a02e8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3a02ee.  v0:= temp @kind object;
  #L3a02f0.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L3a02f6.  v1:= temp @kind object;
  #L3a02f8.  call `uncaughtException`(v1, v0, v2) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L3a02fe.  return @kind void;
}
