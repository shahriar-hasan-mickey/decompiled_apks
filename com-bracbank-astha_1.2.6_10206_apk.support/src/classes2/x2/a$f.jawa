record `x2.a$f` @kind class @AccessFlag  extends `x2.a$b` @kind class {
  `long` `x2.a$f.e` @AccessFlag PRIVATE;
  `x2.a` `x2.a$f.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x2.a$f` v3 @kind this, `x2.a` v4 @kind object, `long` v5 ) @signature `Lx2/a$f;.<init>:(Lx2/a;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4072e0.  v3.`x2.a$f.f` @type ^`x2.a` := v4 @kind object;
  #L4072e4.  v0:= 0I;
  #L4072e6.  call `<init>`(v3, v4, v0) @signature `Lx2/a$b;.<init>:(Lx2/a;Lx2/a$a;)V` @kind direct;
  #L4072ec.  v3.`x2.a$f.e` @type ^`long` := v5 @kind wide;
  #L4072f0.  v1:= 0L;
  #L4072f4.  v4:= lcmp(v5, v1);
  #L4072f8.  if v4 != 0 then goto L407304;
  #L4072fc.  v4:= 1I;
  #L4072fe.  call `g`(v3, v4, v0) @signature `Lx2/a$b;.g:(ZLjava/io/IOException;)V` @kind virtual;
  #L407304.  return @kind void;
}
procedure `long` `I`(`x2.a$f` v7 @kind this, `okio.c` v8 @kind object, `long` v9 ) @signature `Lx2/a$f;.I:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L40721c.  v0:= 0L;
  #L407220.  v2:= lcmp(v9, v0);
  #L407224.  if v2 < 0 then goto L4072a0;
  #L407228.  v2:= v7.`x2.a$b.b` @type ^`boolean` @kind boolean;
  #L40722c.  if v2 != 0 then goto L407290;
  #L407230.  v2:= v7.`x2.a$f.e` @type ^`long` @kind wide;
  #L407234.  v4:= -1L;
  #L407238.  v6:= lcmp(v2, v0);
  #L40723c.  if v6 != 0 then goto L407242;
  #L407240.  return v4 @kind wide;
  #L407242.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L407248.  v9:= temp @kind wide;
  #L40724a.  call temp:= `I`(v7, v8, v9) @signature `Lx2/a$b;.I:(Lokio/c;J)J` @kind super;
  #L407250.  v8:= temp @kind wide;
  #L407252.  v10:= lcmp(v8, v4);
  #L407256.  if v10 == 0 then goto L407278;
  #L40725a.  v2:= v7.`x2.a$f.e` @type ^`long` @kind wide;
  #L40725e.  v2:= v2 - v8 @kind long;
  #L407260.  v7.`x2.a$f.e` @type ^`long` := v2 @kind wide;
  #L407264.  v10:= lcmp(v2, v0);
  #L407268.  if v10 != 0 then goto L407276;
  #L40726c.  v10:= 1I;
  #L40726e.  v0:= 0I;
  #L407270.  call `g`(v7, v10, v0) @signature `Lx2/a$b;.g:(ZLjava/io/IOException;)V` @kind virtual;
  #L407276.  return v8 @kind wide;
  #L407278.  v8:= new `java.net.ProtocolException`;
  #L40727c.  v9:= "unexpected end of stream" @kind object;
  #L407280.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L407286.  v9:= 0I;
  #L407288.  call `g`(v7, v9, v8) @signature `Lx2/a$b;.g:(ZLjava/io/IOException;)V` @kind virtual;
  #L40728e.  throw v8;
  #L407290.  v8:= new `java.lang.IllegalStateException`;
  #L407294.  v9:= "closed" @kind object;
  #L407298.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40729e.  throw v8;
  #L4072a0.  v8:= new `java.lang.IllegalArgumentException`;
  #L4072a4.  v0:= new `java.lang.StringBuilder`;
  #L4072a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4072ae.  v1:= "byteCount < 0: " @kind object;
  #L4072b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4072b8.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4072be.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4072c4.  v9:= temp @kind object;
  #L4072c6.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4072cc.  throw v8;
}
procedure `void` `close`(`x2.a$f` v5 @kind this) @signature `Lx2/a$f;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L407318.  v0:= v5.`x2.a$b.b` @type ^`boolean` @kind boolean;
  #L40731c.  if v0 == 0 then goto L407322;
  #L407320.  return @kind void;
  #L407322.  v0:= v5.`x2.a$f.e` @type ^`long` @kind wide;
  #L407326.  v2:= 0L;
  #L40732a.  v4:= lcmp(v0, v2);
  #L40732e.  if v4 == 0 then goto L407350;
  #L407332.  v0:= 100I;
  #L407336.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L40733a.  call temp:= `p`(v5, v0, v1) @signature `Lt2/c;.p:(Lokio/q;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L407340.  v0:= temp;
  #L407342.  if v0 != 0 then goto L407350;
  #L407346.  v0:= 0I;
  #L407348.  v1:= 0I;
  #L40734a.  call `g`(v5, v0, v1) @signature `Lx2/a$b;.g:(ZLjava/io/IOException;)V` @kind virtual;
  #L407350.  v0:= 1I;
  #L407352.  v5.`x2.a$b.b` @type ^`boolean` := v0 @kind boolean;
  #L407356.  return @kind void;
}
