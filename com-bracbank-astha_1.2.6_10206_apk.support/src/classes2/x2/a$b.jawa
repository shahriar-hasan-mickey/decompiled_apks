record `x2.a$b` @kind class @AccessFlag ABSTRACT extends `okio.q` @kind interface {
  `okio.h` `x2.a$b.a` @AccessFlag PROTECTED_FINAL;
  `boolean` `x2.a$b.b` @AccessFlag PROTECTED;
  `long` `x2.a$b.c` @AccessFlag PROTECTED;
  `x2.a` `x2.a$b.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x2.a$b` v2 @kind this, `x2.a` v3 @kind object) @signature `Lx2/a$b;.<init>:(Lx2/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L406bb8.  v2.`x2.a$b.d` @type ^`x2.a` := v3 @kind object;
  #L406bbc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L406bc2.  v0:= new `okio.h`;
  #L406bc6.  v3:= v3.`x2.a.c` @type ^`okio.e` @kind object;
  #L406bca.  call temp:= `e`(v3) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L406bd0.  v3:= temp @kind object;
  #L406bd2.  call `<init>`(v0, v3) @signature `Lokio/h;.<init>:(Lokio/r;)V` @kind direct;
  #L406bd8.  v2.`x2.a$b.a` @type ^`okio.h` := v0 @kind object;
  #L406bdc.  v0:= 0L;
  #L406be0.  v2.`x2.a$b.c` @type ^`long` := v0 @kind wide;
  #L406be4.  return @kind void;
}
procedure `void` `<init>`(`x2.a$b` v0 @kind this, `x2.a` v1 @kind object, `x2.a$a` v2 @kind object) @signature `Lx2/a$b;.<init>:(Lx2/a;Lx2/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L406bf8.  call `<init>`(v0, v1) @signature `Lx2/a$b;.<init>:(Lx2/a;)V` @kind direct;
  #L406bfe.  return @kind void;
}
procedure `long` `I`(`x2.a$b` v2 @kind this, `okio.c` v3 @kind object, `long` v4 ) @signature `Lx2/a$b;.I:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L406b4c.  v0:= v2.`x2.a$b.d` @type ^`x2.a` @kind object;
  #L406b50.  v0:= v0.`x2.a.c` @type ^`okio.e` @kind object;
  #L406b54.  call temp:= `I`(v0, v3, v4) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L406b5a.  v3:= temp @kind wide;
  #L406b5c.  v0:= 0L;
  #L406b60.  v5:= lcmp(v3, v0);
  #L406b64.  if v5 <= 0 then goto L406b72;
  #L406b68.  v0:= v2.`x2.a$b.c` @type ^`long` @kind wide;
  #L406b6c.  v0:= v0 + v3 @kind long;
  #L406b6e.  v2.`x2.a$b.c` @type ^`long` := v0 @kind wide;
  #L406b72.  return v3 @kind wide;
  #L406b74.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L406b76.  v4:= 0I;
  #L406b78.  call `g`(v2, v4, v3) @signature `Lx2/a$b;.g:(ZLjava/io/IOException;)V` @kind virtual;
  #L406b7e.  throw v3;
  catch `java.io.IOException` @[L406b4c..L406b72] goto L406b74;
}
procedure `okio.r` `e`(`x2.a$b` v1 @kind this) @signature `Lx2/a$b;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406ba0.  v0:= v1.`x2.a$b.a` @type ^`okio.h` @kind object;
  #L406ba4.  return v0 @kind object;
}
procedure `void` `g`(`x2.a$b` v9 @kind this, `boolean` v10 , `java.io.IOException` v11 @kind object) @signature `Lx2/a$b;.g:(ZLjava/io/IOException;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L406c10.  v0:= v9.`x2.a$b.d` @type ^`x2.a` @kind object;
  #L406c14.  v1:= v0.`x2.a.e` @type ^`int`;
  #L406c18.  v2:= 6I;
  #L406c1a.  if v1 != v2 then goto L406c20;
  #L406c1e.  return @kind void;
  #L406c20.  v3:= 5I;
  #L406c22.  if v1 != v3 then goto L406c52;
  #L406c26.  v1:= v9.`x2.a$b.a` @type ^`okio.h` @kind object;
  #L406c2a.  call `g`(v0, v1) @signature `Lx2/a;.g:(Lokio/h;)V` @kind virtual;
  #L406c30.  v5:= v9.`x2.a$b.d` @type ^`x2.a` @kind object;
  #L406c34.  v5.`x2.a.e` @type ^`int` := v2;
  #L406c38.  v3:= v5.`x2.a.b` @type ^`v2.f` @kind object;
  #L406c3c.  if v3 == 0 then goto L406c50;
  #L406c40.  v4:= v10 ^~ 1;
  #L406c44.  v6:= v9.`x2.a$b.c` @type ^`long` @kind wide;
  #L406c48.  v8:= v11 @kind object;
  #L406c4a.  call `r`(v3, v4, v5, v6, v8) @signature `Lv2/f;.r:(ZLw2/c;JLjava/io/IOException;)V` @kind virtual;
  #L406c50.  return @kind void;
  #L406c52.  v10:= new `java.lang.IllegalStateException`;
  #L406c56.  v11:= new `java.lang.StringBuilder`;
  #L406c5a.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L406c60.  v0:= "state: " @kind object;
  #L406c64.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406c6a.  v0:= v9.`x2.a$b.d` @type ^`x2.a` @kind object;
  #L406c6e.  v0:= v0.`x2.a.e` @type ^`int`;
  #L406c72.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L406c78.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L406c7e.  v11:= temp @kind object;
  #L406c80.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L406c86.  throw v10;
}
