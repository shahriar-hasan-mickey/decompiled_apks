record `x2.a` @kind class @AccessFlag PUBLIC_FINAL extends `w2.c` @kind interface {
  `okhttp3.u` `x2.a.a` @AccessFlag FINAL;
  `v2.f` `x2.a.b` @AccessFlag FINAL;
  `okio.e` `x2.a.c` @AccessFlag FINAL;
  `okio.d` `x2.a.d` @AccessFlag FINAL;
  `int` `x2.a.e` @AccessFlag ;
  `long` `x2.a.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`x2.a` v2 @kind this, `okhttp3.u` v3 @kind object, `v2.f` v4 @kind object, `okio.e` v5 @kind object, `okio.d` v6 @kind object) @signature `Lx2/a;.<init>:(Lokhttp3/u;Lv2/f;Lokio/e;Lokio/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L40792c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L407932.  v0:= 0I;
  #L407934.  v2.`x2.a.e` @type ^`int` := v0;
  #L407938.  v0:= 262144L;
  #L40793e.  v2.`x2.a.f` @type ^`long` := v0 @kind wide;
  #L407942.  v2.`x2.a.a` @type ^`okhttp3.u` := v3 @kind object;
  #L407946.  v2.`x2.a.b` @type ^`v2.f` := v4 @kind object;
  #L40794a.  v2.`x2.a.c` @type ^`okio.e` := v5 @kind object;
  #L40794e.  v2.`x2.a.d` @type ^`okio.d` := v6 @kind object;
  #L407952.  return @kind void;
}
procedure `java.lang.String` `m`(`x2.a` v5 @kind this) @signature `Lx2/a;.m:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L407450.  v0:= v5.`x2.a.c` @type ^`okio.e` @kind object;
  #L407454.  v1:= v5.`x2.a.f` @type ^`long` @kind wide;
  #L407458.  call temp:= `r`(v0, v1) @signature `Lokio/e;.r:(J)Ljava/lang/String;` @kind interface;
  #L40745e.  v0:= temp @kind object;
  #L407460.  v1:= v5.`x2.a.f` @type ^`long` @kind wide;
  #L407464.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L40746a.  v3:= temp;
  #L40746c.  v3:= (`long`) v3 @kind i2l;
  #L40746e.  v1:= v1 - v3 @kind long;
  #L407470.  v5.`x2.a.f` @type ^`long` := v1 @kind wide;
  #L407474.  return v0 @kind object;
}
procedure `void` `a`(`x2.a` v1 @kind this) @signature `Lx2/a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4079bc.  v0:= v1.`x2.a.d` @type ^`okio.d` @kind object;
  #L4079c0.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L4079c6.  return @kind void;
}
procedure `void` `b`(`x2.a` v1 @kind this, `okhttp3.w` v2 @kind object) @signature `Lx2/a;.b:(Lokhttp3/w;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L407ab0.  v0:= v1.`x2.a.b` @type ^`v2.f` @kind object;
  #L407ab4.  call temp:= `d`(v0) @signature `Lv2/f;.d:()Lv2/c;` @kind virtual;
  #L407aba.  v0:= temp @kind object;
  #L407abc.  call temp:= `p`(v0) @signature `Lv2/c;.p:()Lokhttp3/a0;` @kind virtual;
  #L407ac2.  v0:= temp @kind object;
  #L407ac4.  call temp:= `b`(v0) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L407aca.  v0:= temp @kind object;
  #L407acc.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L407ad2.  v0:= temp @kind object;
  #L407ad4.  call temp:= `a`(v2, v0) @signature `Lw2/i;.a:(Lokhttp3/w;Ljava/net/Proxy$Type;)Ljava/lang/String;` @kind static;
  #L407ada.  v0:= temp @kind object;
  #L407adc.  call temp:= `d`(v2) @signature `Lokhttp3/w;.d:()Lokhttp3/q;` @kind virtual;
  #L407ae2.  v2:= temp @kind object;
  #L407ae4.  call `o`(v1, v2, v0) @signature `Lx2/a;.o:(Lokhttp3/q;Ljava/lang/String;)V` @kind virtual;
  #L407aea.  return @kind void;
}
procedure `okhttp3.z` `c`(`x2.a` v6 @kind this, `okhttp3.y` v7 @kind object) @signature `Lx2/a;.c:(Lokhttp3/y;)Lokhttp3/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4075e4.  v0:= v6.`x2.a.b` @type ^`v2.f` @kind object;
  #L4075e8.  v1:= v0.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L4075ec.  v0:= v0.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L4075f0.  call `q`(v1, v0) @signature `Lokhttp3/o;.q:(Lokhttp3/d;)V` @kind virtual;
  #L4075f6.  v0:= "Content-Type" @kind object;
  #L4075fa.  call temp:= `R`(v7, v0) @signature `Lokhttp3/y;.R:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L407600.  v0:= temp @kind object;
  #L407602.  call temp:= `c`(v7) @signature `Lw2/e;.c:(Lokhttp3/y;)Z` @kind static;
  #L407608.  v1:= temp;
  #L40760a.  if v1 != 0 then goto L40762e;
  #L40760e.  v1:= 0L;
  #L407612.  call temp:= `k`(v6, v1) @signature `Lx2/a;.k:(J)Lokio/q;` @kind virtual;
  #L407618.  v7:= temp @kind object;
  #L40761a.  v3:= new `w2.h`;
  #L40761e.  call temp:= `b`(v7) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L407624.  v7:= temp @kind object;
  #L407626.  call `<init>`(v3, v0, v1, v7) @signature `Lw2/h;.<init>:(Ljava/lang/String;JLokio/e;)V` @kind direct;
  #L40762c.  return v3 @kind object;
  #L40762e.  v1:= "Transfer-Encoding" @kind object;
  #L407632.  call temp:= `R`(v7, v1) @signature `Lokhttp3/y;.R:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L407638.  v1:= temp @kind object;
  #L40763a.  v2:= "chunked" @kind object;
  #L40763e.  call temp:= `equalsIgnoreCase`(v2, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L407644.  v1:= temp;
  #L407646.  v2:= -1L;
  #L40764a.  if v1 == 0 then goto L40767a;
  #L40764e.  call temp:= `Y`(v7) @signature `Lokhttp3/y;.Y:()Lokhttp3/w;` @kind virtual;
  #L407654.  v7:= temp @kind object;
  #L407656.  call temp:= `h`(v7) @signature `Lokhttp3/w;.h:()Lokhttp3/r;` @kind virtual;
  #L40765c.  v7:= temp @kind object;
  #L40765e.  call temp:= `i`(v6, v7) @signature `Lx2/a;.i:(Lokhttp3/r;)Lokio/q;` @kind virtual;
  #L407664.  v7:= temp @kind object;
  #L407666.  v1:= new `w2.h`;
  #L40766a.  call temp:= `b`(v7) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L407670.  v7:= temp @kind object;
  #L407672.  call `<init>`(v1, v0, v2, v7) @signature `Lw2/h;.<init>:(Ljava/lang/String;JLokio/e;)V` @kind direct;
  #L407678.  return v1 @kind object;
  #L40767a.  call temp:= `b`(v7) @signature `Lw2/e;.b:(Lokhttp3/y;)J` @kind static;
  #L407680.  v4:= temp @kind wide;
  #L407682.  v7:= lcmp(v4, v2);
  #L407686.  if v7 == 0 then goto L4076a6;
  #L40768a.  call temp:= `k`(v6, v4) @signature `Lx2/a;.k:(J)Lokio/q;` @kind virtual;
  #L407690.  v7:= temp @kind object;
  #L407692.  v1:= new `w2.h`;
  #L407696.  call temp:= `b`(v7) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L40769c.  v7:= temp @kind object;
  #L40769e.  call `<init>`(v1, v0, v4, v7) @signature `Lw2/h;.<init>:(Ljava/lang/String;JLokio/e;)V` @kind direct;
  #L4076a4.  return v1 @kind object;
  #L4076a6.  v7:= new `w2.h`;
  #L4076aa.  call temp:= `l`(v6) @signature `Lx2/a;.l:()Lokio/q;` @kind virtual;
  #L4076b0.  v1:= temp @kind object;
  #L4076b2.  call temp:= `b`(v1) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L4076b8.  v1:= temp @kind object;
  #L4076ba.  call `<init>`(v7, v0, v2, v1) @signature `Lw2/h;.<init>:(Ljava/lang/String;JLokio/e;)V` @kind direct;
  #L4076c0.  return v7 @kind object;
}
procedure `void` `cancel`(`x2.a` v1 @kind this) @signature `Lx2/a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L407964.  v0:= v1.`x2.a.b` @type ^`v2.f` @kind object;
  #L407968.  call temp:= `d`(v0) @signature `Lv2/f;.d:()Lv2/c;` @kind virtual;
  #L40796e.  v0:= temp @kind object;
  #L407970.  if v0 == 0 then goto L40797a;
  #L407974.  call `c`(v0) @signature `Lv2/c;.c:()V` @kind virtual;
  #L40797a.  return @kind void;
}
procedure `okhttp3.y$a` `d`(`x2.a` v4 @kind this, `boolean` v5 ) @signature `Lx2/a;.d:(Z)Lokhttp3/y$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4074cc.  v0:= v4.`x2.a.e` @type ^`int`;
  #L4074d0.  v1:= 3I;
  #L4074d2.  v2:= 1I;
  #L4074d4.  if v0 == v2 then goto L407510;
  #L4074d8.  if v0 != v1 then goto L4074de;
  #L4074dc.  goto L407510;
  #L4074de.  v5:= new `java.lang.IllegalStateException`;
  #L4074e2.  v0:= new `java.lang.StringBuilder`;
  #L4074e6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4074ec.  v1:= "state: " @kind object;
  #L4074f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4074f6.  v1:= v4.`x2.a.e` @type ^`int`;
  #L4074fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L407500.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407506.  v0:= temp @kind object;
  #L407508.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40750e.  throw v5;
  #L407510.  call temp:= `m`(v4) @signature `Lx2/a;.m:()Ljava/lang/String;` @kind direct;
  #L407516.  v0:= temp @kind object;
  #L407518.  call temp:= `a`(v0) @signature `Lw2/k;.a:(Ljava/lang/String;)Lw2/k;` @kind static;
  #L40751e.  v0:= temp @kind object;
  #L407520.  v2:= new `okhttp3.y$a`;
  #L407524.  call `<init>`(v2) @signature `Lokhttp3/y$a;.<init>:()V` @kind direct;
  #L40752a.  v3:= v0.`w2.k.a` @type ^`okhttp3.Protocol` @kind object;
  #L40752e.  call temp:= `n`(v2, v3) @signature `Lokhttp3/y$a;.n:(Lokhttp3/Protocol;)Lokhttp3/y$a;` @kind virtual;
  #L407534.  v2:= temp @kind object;
  #L407536.  v3:= v0.`w2.k.b` @type ^`int`;
  #L40753a.  call temp:= `g`(v2, v3) @signature `Lokhttp3/y$a;.g:(I)Lokhttp3/y$a;` @kind virtual;
  #L407540.  v2:= temp @kind object;
  #L407542.  v3:= v0.`w2.k.c` @type ^`java.lang.String` @kind object;
  #L407546.  call temp:= `k`(v2, v3) @signature `Lokhttp3/y$a;.k:(Ljava/lang/String;)Lokhttp3/y$a;` @kind virtual;
  #L40754c.  v2:= temp @kind object;
  #L40754e.  call temp:= `n`(v4) @signature `Lx2/a;.n:()Lokhttp3/q;` @kind virtual;
  #L407554.  v3:= temp @kind object;
  #L407556.  call temp:= `j`(v2, v3) @signature `Lokhttp3/y$a;.j:(Lokhttp3/q;)Lokhttp3/y$a;` @kind virtual;
  #L40755c.  v2:= temp @kind object;
  #L40755e.  v3:= 100I;
  #L407562.  if v5 == 0 then goto L407572;
  #L407566.  v5:= v0.`w2.k.b` @type ^`int`;
  #L40756a.  if v5 != v3 then goto L407572;
  #L40756e.  v5:= 0I;
  #L407570.  return v5 @kind object;
  #L407572.  v5:= v0.`w2.k.b` @type ^`int`;
  #L407576.  if v5 != v3 then goto L407580;
  #L40757a.  v4.`x2.a.e` @type ^`int` := v1;
  #L40757e.  return v2 @kind object;
  #L407580.  v5:= 4I;
  #L407582.  v4.`x2.a.e` @type ^`int` := v5;
  #L407586.  return v2 @kind object;
  #L407588.  v5:= Exception @type ^`java.io.EOFException` @kind object;
  #L40758a.  v0:= new `java.io.IOException`;
  #L40758e.  v1:= new `java.lang.StringBuilder`;
  #L407592.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L407598.  v2:= "unexpected end of stream on " @kind object;
  #L40759c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4075a2.  v2:= v4.`x2.a.b` @type ^`v2.f` @kind object;
  #L4075a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4075ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4075b2.  v1:= temp @kind object;
  #L4075b4.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4075ba.  call temp:= `initCause`(v0, v5) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L4075c0.  throw v0;
  catch `java.io.EOFException` @[L407510..L407586] goto L407588;
}
procedure `void` `e`(`x2.a` v1 @kind this) @signature `Lx2/a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4079d8.  v0:= v1.`x2.a.d` @type ^`okio.d` @kind object;
  #L4079dc.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L4079e2.  return @kind void;
}
procedure `okio.p` `f`(`x2.a` v2 @kind this, `okhttp3.w` v3 @kind object, `long` v4 ) @signature `Lx2/a;.f:(Lokhttp3/w;J)Lokio/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4076d4.  v0:= "Transfer-Encoding" @kind object;
  #L4076d8.  call temp:= `c`(v3, v0) @signature `Lokhttp3/w;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4076de.  v3:= temp @kind object;
  #L4076e0.  v0:= "chunked" @kind object;
  #L4076e4.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4076ea.  v3:= temp;
  #L4076ec.  if v3 == 0 then goto L4076fa;
  #L4076f0.  call temp:= `h`(v2) @signature `Lx2/a;.h:()Lokio/p;` @kind virtual;
  #L4076f6.  v3:= temp @kind object;
  #L4076f8.  return v3 @kind object;
  #L4076fa.  v0:= -1L;
  #L4076fe.  v3:= lcmp(v4, v0);
  #L407702.  if v3 == 0 then goto L407710;
  #L407706.  call temp:= `j`(v2, v4) @signature `Lx2/a;.j:(J)Lokio/p;` @kind virtual;
  #L40770c.  v3:= temp @kind object;
  #L40770e.  return v3 @kind object;
  #L407710.  v3:= new `java.lang.IllegalStateException`;
  #L407714.  v4:= "Cannot stream a request body without chunked encoding or a known content length!" @kind object;
  #L407718.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40771e.  throw v3;
}
procedure `void` `g`(`x2.a` v2 @kind this, `okio.h` v3 @kind object) @signature `Lx2/a;.g:(Lokio/h;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L40798c.  call temp:= `i`(v3) @signature `Lokio/h;.i:()Lokio/r;` @kind virtual;
  #L407992.  v0:= temp @kind object;
  #L407994.  v1:= `@@okio.r.d` @type ^`okio.r` @kind object;
  #L407998.  call temp:= `j`(v3, v1) @signature `Lokio/h;.j:(Lokio/r;)Lokio/h;` @kind virtual;
  #L40799e.  call temp:= `a`(v0) @signature `Lokio/r;.a:()Lokio/r;` @kind virtual;
  #L4079a4.  call temp:= `b`(v0) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L4079aa.  return @kind void;
}
procedure `okio.p` `h`(`x2.a` v3 @kind this) @signature `Lx2/a;.h:()Lokio/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L407730.  v0:= v3.`x2.a.e` @type ^`int`;
  #L407734.  v1:= 1I;
  #L407736.  if v0 != v1 then goto L40774c;
  #L40773a.  v0:= 2I;
  #L40773c.  v3.`x2.a.e` @type ^`int` := v0;
  #L407740.  v0:= new `x2.a$c`;
  #L407744.  call `<init>`(v0, v3) @signature `Lx2/a$c;.<init>:(Lx2/a;)V` @kind direct;
  #L40774a.  return v0 @kind object;
  #L40774c.  v0:= new `java.lang.IllegalStateException`;
  #L407750.  v1:= new `java.lang.StringBuilder`;
  #L407754.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40775a.  v2:= "state: " @kind object;
  #L40775e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407764.  v2:= v3.`x2.a.e` @type ^`int`;
  #L407768.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40776e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407774.  v1:= temp @kind object;
  #L407776.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40777c.  throw v0;
}
procedure `okio.q` `i`(`x2.a` v2 @kind this, `okhttp3.r` v3 @kind object) @signature `Lx2/a;.i:(Lokhttp3/r;)Lokio/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4077f0.  v0:= v2.`x2.a.e` @type ^`int`;
  #L4077f4.  v1:= 4I;
  #L4077f6.  if v0 != v1 then goto L40780c;
  #L4077fa.  v0:= 5I;
  #L4077fc.  v2.`x2.a.e` @type ^`int` := v0;
  #L407800.  v0:= new `x2.a$d`;
  #L407804.  call `<init>`(v0, v2, v3) @signature `Lx2/a$d;.<init>:(Lx2/a;Lokhttp3/r;)V` @kind direct;
  #L40780a.  return v0 @kind object;
  #L40780c.  v3:= new `java.lang.IllegalStateException`;
  #L407810.  v0:= new `java.lang.StringBuilder`;
  #L407814.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40781a.  v1:= "state: " @kind object;
  #L40781e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407824.  v1:= v2.`x2.a.e` @type ^`int`;
  #L407828.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40782e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407834.  v0:= temp @kind object;
  #L407836.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40783c.  throw v3;
}
procedure `okio.p` `j`(`x2.a` v2 @kind this, `long` v3 ) @signature `Lx2/a;.j:(J)Lokio/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L407790.  v0:= v2.`x2.a.e` @type ^`int`;
  #L407794.  v1:= 1I;
  #L407796.  if v0 != v1 then goto L4077ac;
  #L40779a.  v0:= 2I;
  #L40779c.  v2.`x2.a.e` @type ^`int` := v0;
  #L4077a0.  v0:= new `x2.a$e`;
  #L4077a4.  call `<init>`(v0, v2, v3) @signature `Lx2/a$e;.<init>:(Lx2/a;J)V` @kind direct;
  #L4077aa.  return v0 @kind object;
  #L4077ac.  v3:= new `java.lang.IllegalStateException`;
  #L4077b0.  v4:= new `java.lang.StringBuilder`;
  #L4077b4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4077ba.  v0:= "state: " @kind object;
  #L4077be.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4077c4.  v0:= v2.`x2.a.e` @type ^`int`;
  #L4077c8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4077ce.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4077d4.  v4:= temp @kind object;
  #L4077d6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4077dc.  throw v3;
}
procedure `okio.q` `k`(`x2.a` v2 @kind this, `long` v3 ) @signature `Lx2/a;.k:(J)Lokio/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L407850.  v0:= v2.`x2.a.e` @type ^`int`;
  #L407854.  v1:= 4I;
  #L407856.  if v0 != v1 then goto L40786c;
  #L40785a.  v0:= 5I;
  #L40785c.  v2.`x2.a.e` @type ^`int` := v0;
  #L407860.  v0:= new `x2.a$f`;
  #L407864.  call `<init>`(v0, v2, v3) @signature `Lx2/a$f;.<init>:(Lx2/a;J)V` @kind direct;
  #L40786a.  return v0 @kind object;
  #L40786c.  v3:= new `java.lang.IllegalStateException`;
  #L407870.  v4:= new `java.lang.StringBuilder`;
  #L407874.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40787a.  v0:= "state: " @kind object;
  #L40787e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407884.  v0:= v2.`x2.a.e` @type ^`int`;
  #L407888.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40788e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407894.  v4:= temp @kind object;
  #L407896.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40789c.  throw v3;
}
procedure `okio.q` `l`(`x2.a` v3 @kind this) @signature `Lx2/a;.l:()Lokio/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4078b0.  v0:= v3.`x2.a.e` @type ^`int`;
  #L4078b4.  v1:= 4I;
  #L4078b6.  if v0 != v1 then goto L4078ea;
  #L4078ba.  v0:= v3.`x2.a.b` @type ^`v2.f` @kind object;
  #L4078be.  if v0 == 0 then goto L4078da;
  #L4078c2.  v1:= 5I;
  #L4078c4.  v3.`x2.a.e` @type ^`int` := v1;
  #L4078c8.  call `j`(v0) @signature `Lv2/f;.j:()V` @kind virtual;
  #L4078ce.  v0:= new `x2.a$g`;
  #L4078d2.  call `<init>`(v0, v3) @signature `Lx2/a$g;.<init>:(Lx2/a;)V` @kind direct;
  #L4078d8.  return v0 @kind object;
  #L4078da.  v0:= new `java.lang.IllegalStateException`;
  #L4078de.  v1:= "streamAllocation == null" @kind object;
  #L4078e2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4078e8.  throw v0;
  #L4078ea.  v0:= new `java.lang.IllegalStateException`;
  #L4078ee.  v1:= new `java.lang.StringBuilder`;
  #L4078f2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4078f8.  v2:= "state: " @kind object;
  #L4078fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407902.  v2:= v3.`x2.a.e` @type ^`int`;
  #L407906.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40790c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407912.  v1:= temp @kind object;
  #L407914.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40791a.  throw v0;
}
procedure `okhttp3.q` `n`(`x2.a` v3 @kind this) @signature `Lx2/a;.n:()Lokhttp3/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L407488.  v0:= new `okhttp3.q$a`;
  #L40748c.  call `<init>`(v0) @signature `Lokhttp3/q$a;.<init>:()V` @kind direct;
  #L407492.  call temp:= `m`(v3) @signature `Lx2/a;.m:()Ljava/lang/String;` @kind direct;
  #L407498.  v1:= temp @kind object;
  #L40749a.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4074a0.  v2:= temp;
  #L4074a2.  if v2 == 0 then goto L4074b2;
  #L4074a6.  v2:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L4074aa.  call `a`(v2, v0, v1) @signature `Lt2/a;.a:(Lokhttp3/q$a;Ljava/lang/String;)V` @kind virtual;
  #L4074b0.  goto L407492;
  #L4074b2.  call temp:= `d`(v0) @signature `Lokhttp3/q$a;.d:()Lokhttp3/q;` @kind virtual;
  #L4074b8.  v0:= temp @kind object;
  #L4074ba.  return v0 @kind object;
}
procedure `void` `o`(`x2.a` v4 @kind this, `okhttp3.q` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lx2/a;.o:(Lokhttp3/q;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4079f4.  v0:= v4.`x2.a.e` @type ^`int`;
  #L4079f8.  if v0 != 0 then goto L407a6e;
  #L4079fc.  v0:= v4.`x2.a.d` @type ^`okio.d` @kind object;
  #L407a00.  call temp:= `u`(v0, v6) @signature `Lokio/d;.u:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L407a06.  v6:= temp @kind object;
  #L407a08.  v0:= "\r\n" @kind object;
  #L407a0c.  call temp:= `u`(v6, v0) @signature `Lokio/d;.u:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L407a12.  v6:= 0I;
  #L407a14.  call temp:= `g`(v5) @signature `Lokhttp3/q;.g:()I` @kind virtual;
  #L407a1a.  v1:= temp;
  #L407a1c.  if v6 >= v1 then goto L407a5c;
  #L407a20.  v2:= v4.`x2.a.d` @type ^`okio.d` @kind object;
  #L407a24.  call temp:= `e`(v5, v6) @signature `Lokhttp3/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L407a2a.  v3:= temp @kind object;
  #L407a2c.  call temp:= `u`(v2, v3) @signature `Lokio/d;.u:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L407a32.  v2:= temp @kind object;
  #L407a34.  v3:= ": " @kind object;
  #L407a38.  call temp:= `u`(v2, v3) @signature `Lokio/d;.u:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L407a3e.  v2:= temp @kind object;
  #L407a40.  call temp:= `h`(v5, v6) @signature `Lokhttp3/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L407a46.  v3:= temp @kind object;
  #L407a48.  call temp:= `u`(v2, v3) @signature `Lokio/d;.u:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L407a4e.  v2:= temp @kind object;
  #L407a50.  call temp:= `u`(v2, v0) @signature `Lokio/d;.u:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L407a56.  v6:= v6 + 1;
  #L407a5a.  goto L407a1c;
  #L407a5c.  v5:= v4.`x2.a.d` @type ^`okio.d` @kind object;
  #L407a60.  call temp:= `u`(v5, v0) @signature `Lokio/d;.u:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L407a66.  v5:= 1I;
  #L407a68.  v4.`x2.a.e` @type ^`int` := v5;
  #L407a6c.  return @kind void;
  #L407a6e.  v5:= new `java.lang.IllegalStateException`;
  #L407a72.  v6:= new `java.lang.StringBuilder`;
  #L407a76.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L407a7c.  v0:= "state: " @kind object;
  #L407a80.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407a86.  v0:= v4.`x2.a.e` @type ^`int`;
  #L407a8a.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L407a90.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407a96.  v6:= temp @kind object;
  #L407a98.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L407a9e.  throw v5;
}
