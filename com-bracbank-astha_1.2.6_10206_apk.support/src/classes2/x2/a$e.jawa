record `x2.a$e` @kind class @AccessFlag FINAL extends `okio.p` @kind interface {
  `okio.h` `x2.a$e.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `x2.a$e.b` @AccessFlag PRIVATE;
  `long` `x2.a$e.c` @AccessFlag PRIVATE;
  `x2.a` `x2.a$e.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x2.a$e` v1 @kind this, `x2.a` v2 @kind object, `long` v3 ) @signature `Lx2/a$e;.<init>:(Lx2/a;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4070b4.  v1.`x2.a$e.d` @type ^`x2.a` := v2 @kind object;
  #L4070b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4070be.  v0:= new `okio.h`;
  #L4070c2.  v2:= v2.`x2.a.d` @type ^`okio.d` @kind object;
  #L4070c6.  call temp:= `e`(v2) @signature `Lokio/p;.e:()Lokio/r;` @kind interface;
  #L4070cc.  v2:= temp @kind object;
  #L4070ce.  call `<init>`(v0, v2) @signature `Lokio/h;.<init>:(Lokio/r;)V` @kind direct;
  #L4070d4.  v1.`x2.a$e.a` @type ^`okio.h` := v0 @kind object;
  #L4070d8.  v1.`x2.a$e.c` @type ^`long` := v3 @kind wide;
  #L4070dc.  return @kind void;
}
procedure `void` `A`(`x2.a$e` v7 @kind this, `okio.c` v8 @kind object, `long` v9 ) @signature `Lx2/a$e;.A:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L407178.  v0:= v7.`x2.a$e.b` @type ^`boolean` @kind boolean;
  #L40717c.  if v0 != 0 then goto L4071fc;
  #L407180.  call temp:= `g0`(v8) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L407186.  v1:= temp @kind wide;
  #L407188.  v3:= 0L;
  #L40718c.  v5:= v9 @kind wide;
  #L40718e.  call `f`(v1, v3, v5) @signature `Lt2/c;.f:(JJJ)V` @kind static;
  #L407194.  v0:= v7.`x2.a$e.c` @type ^`long` @kind wide;
  #L407198.  v2:= lcmp(v9, v0);
  #L40719c.  if v2 > 0 then goto L4071ba;
  #L4071a0.  v0:= v7.`x2.a$e.d` @type ^`x2.a` @kind object;
  #L4071a4.  v0:= v0.`x2.a.d` @type ^`okio.d` @kind object;
  #L4071a8.  call `A`(v0, v8, v9) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L4071ae.  v0:= v7.`x2.a$e.c` @type ^`long` @kind wide;
  #L4071b2.  v0:= v0 - v9 @kind long;
  #L4071b4.  v7.`x2.a$e.c` @type ^`long` := v0 @kind wide;
  #L4071b8.  return @kind void;
  #L4071ba.  v8:= new `java.net.ProtocolException`;
  #L4071be.  v0:= new `java.lang.StringBuilder`;
  #L4071c2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4071c8.  v1:= "expected " @kind object;
  #L4071cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4071d2.  v1:= v7.`x2.a$e.c` @type ^`long` @kind wide;
  #L4071d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4071dc.  v1:= " bytes but received " @kind object;
  #L4071e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4071e6.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4071ec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4071f2.  v9:= temp @kind object;
  #L4071f4.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4071fa.  throw v8;
  #L4071fc.  v8:= new `java.lang.IllegalStateException`;
  #L407200.  v9:= "closed" @kind object;
  #L407204.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40720a.  throw v8;
}
procedure `void` `close`(`x2.a$e` v5 @kind this) @signature `Lx2/a$e;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4070f0.  v0:= v5.`x2.a$e.b` @type ^`boolean` @kind boolean;
  #L4070f4.  if v0 == 0 then goto L4070fa;
  #L4070f8.  return @kind void;
  #L4070fa.  v0:= 1I;
  #L4070fc.  v5.`x2.a$e.b` @type ^`boolean` := v0 @kind boolean;
  #L407100.  v0:= v5.`x2.a$e.c` @type ^`long` @kind wide;
  #L407104.  v2:= 0L;
  #L407108.  v4:= lcmp(v0, v2);
  #L40710c.  if v4 > 0 then goto L40712a;
  #L407110.  v0:= v5.`x2.a$e.d` @type ^`x2.a` @kind object;
  #L407114.  v1:= v5.`x2.a$e.a` @type ^`okio.h` @kind object;
  #L407118.  call `g`(v0, v1) @signature `Lx2/a;.g:(Lokio/h;)V` @kind virtual;
  #L40711e.  v0:= v5.`x2.a$e.d` @type ^`x2.a` @kind object;
  #L407122.  v1:= 3I;
  #L407124.  v0.`x2.a.e` @type ^`int` := v1;
  #L407128.  return @kind void;
  #L40712a.  v0:= new `java.net.ProtocolException`;
  #L40712e.  v1:= "unexpected end of stream" @kind object;
  #L407132.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L407138.  throw v0;
}
procedure `okio.r` `e`(`x2.a$e` v1 @kind this) @signature `Lx2/a$e;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40709c.  v0:= v1.`x2.a$e.a` @type ^`okio.h` @kind object;
  #L4070a0.  return v0 @kind object;
}
procedure `void` `flush`(`x2.a$e` v1 @kind this) @signature `Lx2/a$e;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40714c.  v0:= v1.`x2.a$e.b` @type ^`boolean` @kind boolean;
  #L407150.  if v0 == 0 then goto L407156;
  #L407154.  return @kind void;
  #L407156.  v0:= v1.`x2.a$e.d` @type ^`x2.a` @kind object;
  #L40715a.  v0:= v0.`x2.a.d` @type ^`okio.d` @kind object;
  #L40715e.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L407164.  return @kind void;
}
