record `org.simpleframework.xml.strategy.TreeStrategy` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.strategy.Strategy` @kind interface {
  `java.lang.String` `org.simpleframework.xml.strategy.TreeStrategy.label` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.strategy.TreeStrategy.length` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Loader` `org.simpleframework.xml.strategy.TreeStrategy.loader` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.strategy.TreeStrategy` v2 @kind this) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f2820.  v0:= "class" @kind object;
  #L3f2824.  v1:= "length" @kind object;
  #L3f2828.  call `<init>`(v2, v0, v1) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3f282e.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f2840.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f2846.  v0:= new `org.simpleframework.xml.strategy.Loader`;
  #L3f284a.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/Loader;.<init>:()V` @kind direct;
  #L3f2850.  v1.`org.simpleframework.xml.strategy.TreeStrategy.loader` @type ^`org.simpleframework.xml.strategy.Loader` := v0 @kind object;
  #L3f2854.  v1.`org.simpleframework.xml.strategy.TreeStrategy.length` @type ^`java.lang.String` := v3 @kind object;
  #L3f2858.  v1.`org.simpleframework.xml.strategy.TreeStrategy.label` @type ^`java.lang.String` := v2 @kind object;
  #L3f285c.  return @kind void;
}
procedure `org.simpleframework.xml.strategy.Value` `readArray`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.readArray:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/NodeMap;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f27e0.  v0:= v1.`org.simpleframework.xml.strategy.TreeStrategy.length` @type ^`java.lang.String` @kind object;
  #L3f27e4.  call temp:= `remove`(v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3f27ea.  v3:= temp @kind object;
  #L3f27ec.  if v3 == 0 then goto L3f2802;
  #L3f27f0.  call temp:= `getValue`(v3) @signature `Lorg/simpleframework/xml/stream/Node;.getValue:()Ljava/lang/String;` @kind interface;
  #L3f27f6.  v3:= temp @kind object;
  #L3f27f8.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3f27fe.  v3:= temp;
  #L3f2800.  goto L3f2804;
  #L3f2802.  v3:= 0I;
  #L3f2804.  v0:= new `org.simpleframework.xml.strategy.ArrayValue`;
  #L3f2808.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/strategy/ArrayValue;.<init>:(Ljava/lang/Class;I)V` @kind direct;
  #L3f280e.  return v0 @kind object;
}
procedure `java.lang.Class` `readValue`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.readValue:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f2708.  v0:= v1.`org.simpleframework.xml.strategy.TreeStrategy.label` @type ^`java.lang.String` @kind object;
  #L3f270c.  call temp:= `remove`(v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3f2712.  v3:= temp @kind object;
  #L3f2714.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3f271a.  v2:= temp @kind object;
  #L3f271c.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3f2722.  v0:= temp;
  #L3f2724.  if v0 == 0 then goto L3f2730;
  #L3f2728.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L3f272e.  v2:= temp @kind object;
  #L3f2730.  if v3 == 0 then goto L3f2748;
  #L3f2734.  call temp:= `getValue`(v3) @signature `Lorg/simpleframework/xml/stream/Node;.getValue:()Ljava/lang/String;` @kind interface;
  #L3f273a.  v2:= temp @kind object;
  #L3f273c.  v3:= v1.`org.simpleframework.xml.strategy.TreeStrategy.loader` @type ^`org.simpleframework.xml.strategy.Loader` @kind object;
  #L3f2740.  call temp:= `load`(v3, v2) @signature `Lorg/simpleframework/xml/strategy/Loader;.load:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L3f2746.  v2:= temp @kind object;
  #L3f2748.  return v2 @kind object;
}
procedure `java.lang.Class` `writeArray`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.writeArray:(Ljava/lang/Class;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f275c.  call temp:= `getLength`(v3) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L3f2762.  v3:= temp;
  #L3f2764.  v0:= v1.`org.simpleframework.xml.strategy.TreeStrategy.length` @type ^`java.lang.String` @kind object;
  #L3f2768.  if v0 == 0 then goto L3f277a;
  #L3f276c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3f2772.  v3:= temp @kind object;
  #L3f2774.  call temp:= `put`(v4, v0, v3) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3f277a.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L3f2780.  v2:= temp @kind object;
  #L3f2782.  return v2 @kind object;
}
procedure `org.simpleframework.xml.strategy.Value` `read`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f2794.  call temp:= `readValue`(v1, v2, v3) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.readValue:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @kind direct;
  #L3f279a.  v4:= temp @kind object;
  #L3f279c.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3f27a2.  v2:= temp @kind object;
  #L3f27a4.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3f27aa.  v0:= temp;
  #L3f27ac.  if v0 == 0 then goto L3f27ba;
  #L3f27b0.  call temp:= `readArray`(v1, v4, v3) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.readArray:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/NodeMap;)Lorg/simpleframework/xml/strategy/Value;` @kind direct;
  #L3f27b6.  v2:= temp @kind object;
  #L3f27b8.  return v2 @kind object;
  #L3f27ba.  if v2 == v4 then goto L3f27ca;
  #L3f27be.  v2:= new `org.simpleframework.xml.strategy.ObjectValue`;
  #L3f27c2.  call `<init>`(v2, v4) @signature `Lorg/simpleframework/xml/strategy/ObjectValue;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L3f27c8.  return v2 @kind object;
  #L3f27ca.  v2:= 0I;
  #L3f27cc.  return v2 @kind object;
}
procedure `boolean` `write`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f26b4.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3f26ba.  v5:= temp @kind object;
  #L3f26bc.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3f26c2.  v2:= temp @kind object;
  #L3f26c4.  call temp:= `isArray`(v5) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3f26ca.  v0:= temp;
  #L3f26cc.  if v0 == 0 then goto L3f26da;
  #L3f26d0.  call temp:= `writeArray`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.writeArray:(Ljava/lang/Class;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @kind direct;
  #L3f26d6.  v3:= temp @kind object;
  #L3f26d8.  goto L3f26dc;
  #L3f26da.  v3:= v5 @kind object;
  #L3f26dc.  if v5 == v2 then goto L3f26f2;
  #L3f26e0.  v2:= v1.`org.simpleframework.xml.strategy.TreeStrategy.label` @type ^`java.lang.String` @kind object;
  #L3f26e4.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f26ea.  v3:= temp @kind object;
  #L3f26ec.  call temp:= `put`(v4, v2, v3) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3f26f2.  v2:= 0I;
  #L3f26f4.  return v2;
}
