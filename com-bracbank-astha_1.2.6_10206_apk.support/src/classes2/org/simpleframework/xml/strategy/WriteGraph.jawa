record `org.simpleframework.xml.strategy.WriteGraph` @kind class @AccessFlag PUBLIC extends `java.util.IdentityHashMap` @kind class {
  `java.lang.String` `org.simpleframework.xml.strategy.WriteGraph.label` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.strategy.WriteGraph.length` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.strategy.WriteGraph.mark` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.strategy.WriteGraph.refer` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.strategy.WriteGraph` v1 @kind this, `org.simpleframework.xml.strategy.Contract` v2 @kind object) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.<init>:(Lorg/simpleframework/xml/strategy/Contract;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f29f8.  call `<init>`(v1) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L3f29fe.  call temp:= `getReference`(v2) @signature `Lorg/simpleframework/xml/strategy/Contract;.getReference:()Ljava/lang/String;` @kind virtual;
  #L3f2a04.  v0:= temp @kind object;
  #L3f2a06.  v1.`org.simpleframework.xml.strategy.WriteGraph.refer` @type ^`java.lang.String` := v0 @kind object;
  #L3f2a0a.  call temp:= `getIdentity`(v2) @signature `Lorg/simpleframework/xml/strategy/Contract;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L3f2a10.  v0:= temp @kind object;
  #L3f2a12.  v1.`org.simpleframework.xml.strategy.WriteGraph.mark` @type ^`java.lang.String` := v0 @kind object;
  #L3f2a16.  call temp:= `getLength`(v2) @signature `Lorg/simpleframework/xml/strategy/Contract;.getLength:()Ljava/lang/String;` @kind virtual;
  #L3f2a1c.  v0:= temp @kind object;
  #L3f2a1e.  v1.`org.simpleframework.xml.strategy.WriteGraph.length` @type ^`java.lang.String` := v0 @kind object;
  #L3f2a22.  call temp:= `getLabel`(v2) @signature `Lorg/simpleframework/xml/strategy/Contract;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L3f2a28.  v2:= temp @kind object;
  #L3f2a2a.  v1.`org.simpleframework.xml.strategy.WriteGraph.label` @type ^`java.lang.String` := v2 @kind object;
  #L3f2a2e.  return @kind void;
}
procedure `java.lang.Class` `writeArray`(`org.simpleframework.xml.strategy.WriteGraph` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.writeArray:(Ljava/lang/Class;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f29b8.  call temp:= `getLength`(v3) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L3f29be.  v0:= temp;
  #L3f29c0.  call temp:= `containsKey`(v1, v3) @signature `Ljava/util/IdentityHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f29c6.  v3:= temp;
  #L3f29c8.  if v3 != 0 then goto L3f29de;
  #L3f29cc.  v3:= v1.`org.simpleframework.xml.strategy.WriteGraph.length` @type ^`java.lang.String` @kind object;
  #L3f29d0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3f29d6.  v0:= temp @kind object;
  #L3f29d8.  call temp:= `put`(v4, v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3f29de.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L3f29e4.  v2:= temp @kind object;
  #L3f29e6.  return v2 @kind object;
}
procedure `boolean` `writeReference`(`org.simpleframework.xml.strategy.WriteGraph` v2 @kind this, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.writeReference:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f2964.  call temp:= `get`(v2, v3) @signature `Ljava/util/IdentityHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f296a.  v0:= temp @kind object;
  #L3f296c.  v0:= (`java.lang.String`) v0 @kind object;
  #L3f2970.  call temp:= `size`(v2) @signature `Ljava/util/IdentityHashMap;.size:()I` @kind virtual;
  #L3f2976.  v1:= temp;
  #L3f2978.  if v0 == 0 then goto L3f298a;
  #L3f297c.  v3:= v2.`org.simpleframework.xml.strategy.WriteGraph.refer` @type ^`java.lang.String` @kind object;
  #L3f2980.  call temp:= `put`(v4, v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3f2986.  v3:= 1I;
  #L3f2988.  return v3;
  #L3f298a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3f2990.  v0:= temp @kind object;
  #L3f2992.  v1:= v2.`org.simpleframework.xml.strategy.WriteGraph.mark` @type ^`java.lang.String` @kind object;
  #L3f2996.  call temp:= `put`(v4, v1, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3f299c.  call temp:= `put`(v2, v3, v0) @signature `Ljava/util/IdentityHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f29a2.  v3:= 0I;
  #L3f29a4.  return v3;
}
procedure `boolean` `write`(`org.simpleframework.xml.strategy.WriteGraph` v2 @kind this, `org.simpleframework.xml.strategy.Type` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.stream.NodeMap` v5 @kind object) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f290c.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3f2912.  v0:= temp @kind object;
  #L3f2914.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3f291a.  v3:= temp @kind object;
  #L3f291c.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3f2922.  v1:= temp;
  #L3f2924.  if v1 == 0 then goto L3f2932;
  #L3f2928.  call temp:= `writeArray`(v2, v0, v4, v5) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.writeArray:(Ljava/lang/Class;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @kind direct;
  #L3f292e.  v1:= temp @kind object;
  #L3f2930.  goto L3f2934;
  #L3f2932.  v1:= v0 @kind object;
  #L3f2934.  if v0 == v3 then goto L3f294a;
  #L3f2938.  v3:= v2.`org.simpleframework.xml.strategy.WriteGraph.label` @type ^`java.lang.String` @kind object;
  #L3f293c.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f2942.  v0:= temp @kind object;
  #L3f2944.  call temp:= `put`(v5, v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3f294a.  call temp:= `writeReference`(v2, v4, v5) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.writeReference:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @kind direct;
  #L3f2950.  v3:= temp;
  #L3f2952.  return v3;
}
