record `org.simpleframework.xml.strategy.Loader` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.simpleframework.xml.strategy.Loader` v0 @kind this) @signature `Lorg/simpleframework/xml/strategy/Loader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f22c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f22ce.  return @kind void;
}
procedure `java.lang.ClassLoader` `getCallerClassLoader`() @signature `Lorg/simpleframework/xml/strategy/Loader;.getCallerClassLoader:()Ljava/lang/ClassLoader;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3f2284.  v0:= constclass @type ^`org.simpleframework.xml.strategy.Loader` @kind object;
  #L3f2288.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3f228e.  v0:= temp @kind object;
  #L3f2290.  return v0 @kind object;
}
procedure `java.lang.ClassLoader` `getClassLoader`() @signature `Lorg/simpleframework/xml/strategy/Loader;.getClassLoader:()Ljava/lang/ClassLoader;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3f22a4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3f22aa.  v0:= temp @kind object;
  #L3f22ac.  call temp:= `getContextClassLoader`(v0) @signature `Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3f22b2.  v0:= temp @kind object;
  #L3f22b4.  return v0 @kind object;
}
procedure `java.lang.Class` `load`(`org.simpleframework.xml.strategy.Loader` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/strategy/Loader;.load:(Ljava/lang/String;)Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f2254.  call temp:= `getClassLoader`() @signature `Lorg/simpleframework/xml/strategy/Loader;.getClassLoader:()Ljava/lang/ClassLoader;` @kind static;
  #L3f225a.  v0:= temp @kind object;
  #L3f225c.  if v0 != 0 then goto L3f2268;
  #L3f2260.  call temp:= `getCallerClassLoader`() @signature `Lorg/simpleframework/xml/strategy/Loader;.getCallerClassLoader:()Ljava/lang/ClassLoader;` @kind static;
  #L3f2266.  v0:= temp @kind object;
  #L3f2268.  call temp:= `loadClass`(v0, v2) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L3f226e.  v2:= temp @kind object;
  #L3f2270.  return v2 @kind object;
}
