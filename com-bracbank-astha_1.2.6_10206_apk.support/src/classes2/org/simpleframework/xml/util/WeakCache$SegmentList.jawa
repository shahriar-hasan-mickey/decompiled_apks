record `org.simpleframework.xml.util.WeakCache$SegmentList` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface {
  `java.util.List` `org.simpleframework.xml.util.WeakCache$SegmentList.list` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.util.WeakCache$SegmentList.size` @AccessFlag PRIVATE;
  `org.simpleframework.xml.util.WeakCache` `org.simpleframework.xml.util.WeakCache$SegmentList.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.WeakCache$SegmentList` v0 @kind this, `org.simpleframework.xml.util.WeakCache` v1 @kind object, `int` v2 ) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.<init>:(Lorg/simpleframework/xml/util/WeakCache;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f9774.  v0.`org.simpleframework.xml.util.WeakCache$SegmentList.this$0` @type ^`org.simpleframework.xml.util.WeakCache` := v1 @kind object;
  #L3f9778.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f977e.  v1:= new `java.util.ArrayList`;
  #L3f9782.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f9788.  v0.`org.simpleframework.xml.util.WeakCache$SegmentList.list` @type ^`java.util.List` := v1 @kind object;
  #L3f978c.  v0.`org.simpleframework.xml.util.WeakCache$SegmentList.size` @type ^`int` := v2;
  #L3f9790.  call `create`(v0, v2) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.create:(I)V` @kind direct;
  #L3f9796.  return @kind void;
}
procedure `void` `create`(`org.simpleframework.xml.util.WeakCache$SegmentList` v4 @kind this, `int` v5 ) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.create:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f97a8.  v0:= v5 + -1;
  #L3f97ac.  if v5 <= 0 then goto L3f97ce;
  #L3f97b0.  v5:= v4.`org.simpleframework.xml.util.WeakCache$SegmentList.list` @type ^`java.util.List` @kind object;
  #L3f97b4.  v1:= new `org.simpleframework.xml.util.WeakCache$Segment`;
  #L3f97b8.  v2:= v4.`org.simpleframework.xml.util.WeakCache$SegmentList.this$0` @type ^`org.simpleframework.xml.util.WeakCache` @kind object;
  #L3f97bc.  v3:= 0I;
  #L3f97be.  call `<init>`(v1, v2, v3) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.<init>:(Lorg/simpleframework/xml/util/WeakCache;Lorg/simpleframework/xml/util/WeakCache$1;)V` @kind direct;
  #L3f97c4.  call temp:= `add`(v5, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f97ca.  v5:= v0;
  #L3f97cc.  goto L3f97a8;
  #L3f97ce.  return @kind void;
}
procedure `int` `segment`(`org.simpleframework.xml.util.WeakCache$SegmentList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.segment:(Ljava/lang/Object;)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f96f4.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f96fa.  v2:= temp;
  #L3f96fc.  v0:= v1.`org.simpleframework.xml.util.WeakCache$SegmentList.size` @type ^`int`;
  #L3f9700.  v2:= v2 %% v0 @kind int;
  #L3f9702.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3f9708.  v2:= temp;
  #L3f970a.  return v2;
}
procedure `org.simpleframework.xml.util.WeakCache$Segment` `get`(`org.simpleframework.xml.util.WeakCache$SegmentList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.get:(Ljava/lang/Object;)Lorg/simpleframework/xml/util/WeakCache$Segment;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f973c.  call temp:= `segment`(v1, v2) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.segment:(Ljava/lang/Object;)I` @kind direct;
  #L3f9742.  v2:= temp;
  #L3f9744.  v0:= v1.`org.simpleframework.xml.util.WeakCache$SegmentList.size` @type ^`int`;
  #L3f9748.  if v2 >= v0 then goto L3f975e;
  #L3f974c.  v0:= v1.`org.simpleframework.xml.util.WeakCache$SegmentList.list` @type ^`java.util.List` @kind object;
  #L3f9750.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3f9756.  v2:= temp @kind object;
  #L3f9758.  v2:= (`org.simpleframework.xml.util.WeakCache$Segment`) v2 @kind object;
  #L3f975c.  return v2 @kind object;
  #L3f975e.  v2:= 0I;
  #L3f9760.  return v2 @kind object;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.util.WeakCache$SegmentList` v1 @kind this) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f971c.  v0:= v1.`org.simpleframework.xml.util.WeakCache$SegmentList.list` @type ^`java.util.List` @kind object;
  #L3f9720.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f9726.  v0:= temp @kind object;
  #L3f9728.  return v0 @kind object;
}
