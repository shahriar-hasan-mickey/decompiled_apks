record `org.simpleframework.xml.util.WeakCache$Segment` @kind class @AccessFlag PUBLIC extends `java.util.WeakHashMap` @kind class {
  `org.simpleframework.xml.util.WeakCache` `org.simpleframework.xml.util.WeakCache$Segment.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `org.simpleframework.xml.util.WeakCache` v1 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.<init>:(Lorg/simpleframework/xml/util/WeakCache;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f9870.  v0.`org.simpleframework.xml.util.WeakCache$Segment.this$0` @type ^`org.simpleframework.xml.util.WeakCache` := v1 @kind object;
  #L3f9874.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L3f987a.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `org.simpleframework.xml.util.WeakCache` v1 @kind object, `org.simpleframework.xml.util.WeakCache$1` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.<init>:(Lorg/simpleframework/xml/util/WeakCache;Lorg/simpleframework/xml/util/WeakCache$1;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3f988c.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.<init>:(Lorg/simpleframework/xml/util/WeakCache;)V` @kind direct;
  #L3f9892.  return @kind void;
}
procedure `void` `cache`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3f98a4.  @monitorenter v0
  #L3f98a6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/WeakHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f98ac.  @monitorexit v0
  #L3f98ae.  return @kind void;
  #L3f98b0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f98b2.  @monitorexit v0
  #L3f98b4.  throw v1;
  catch `java.lang.Throwable` @[L3f98a6..L3f98ac] goto L3f98b0;
}
procedure `boolean` `contains`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3f97e0.  @monitorenter v0
  #L3f97e2.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/WeakHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f97e8.  v1:= temp;
  #L3f97ea.  @monitorexit v0
  #L3f97ec.  return v1;
  #L3f97ee.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f97f0.  @monitorexit v0
  #L3f97f2.  throw v1;
  catch `java.lang.Throwable` @[L3f97e2..L3f97ea] goto L3f97ee;
}
procedure `java.lang.Object` `fetch`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3f9810.  @monitorenter v0
  #L3f9812.  call temp:= `get`(v0, v1) @signature `Ljava/util/WeakHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f9818.  v1:= temp @kind object;
  #L3f981a.  @monitorexit v0
  #L3f981c.  return v1 @kind object;
  #L3f981e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9820.  @monitorexit v0
  #L3f9822.  throw v1;
  catch `java.lang.Throwable` @[L3f9812..L3f981a] goto L3f981e;
}
procedure `java.lang.Object` `take`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.take:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3f9840.  @monitorenter v0
  #L3f9842.  call temp:= `remove`(v0, v1) @signature `Ljava/util/WeakHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f9848.  v1:= temp @kind object;
  #L3f984a.  @monitorexit v0
  #L3f984c.  return v1 @kind object;
  #L3f984e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9850.  @monitorexit v0
  #L3f9852.  throw v1;
  catch `java.lang.Throwable` @[L3f9842..L3f984a] goto L3f984e;
}
