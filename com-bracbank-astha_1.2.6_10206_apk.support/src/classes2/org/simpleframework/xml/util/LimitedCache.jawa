record `org.simpleframework.xml.util.LimitedCache` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `org.simpleframework.xml.util.Cache` @kind interface {
  `int` `org.simpleframework.xml.util.LimitedCache.capacity` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.LimitedCache` v1 @kind this) @signature `Lorg/simpleframework/xml/util/LimitedCache;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f91f8.  v0:= 50000I;
  #L3f91fe.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/util/LimitedCache;.<init>:(I)V` @kind direct;
  #L3f9204.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.LimitedCache` v0 @kind this, `int` v1 ) @signature `Lorg/simpleframework/xml/util/LimitedCache;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f9218.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3f921e.  v0.`org.simpleframework.xml.util.LimitedCache.capacity` @type ^`int` := v1;
  #L3f9222.  return @kind void;
}
procedure `void` `cache`(`org.simpleframework.xml.util.LimitedCache` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/LimitedCache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3f9234.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f923a.  return @kind void;
}
procedure `boolean` `contains`(`org.simpleframework.xml.util.LimitedCache` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/LimitedCache;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3f917c.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f9182.  v1:= temp;
  #L3f9184.  return v1;
}
procedure `java.lang.Object` `fetch`(`org.simpleframework.xml.util.LimitedCache` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/LimitedCache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3f91c0.  call temp:= `get`(v0, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f91c6.  v1:= temp @kind object;
  #L3f91c8.  return v1 @kind object;
}
procedure `boolean` `removeEldestEntry`(`org.simpleframework.xml.util.LimitedCache` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lorg/simpleframework/xml/util/LimitedCache;.removeEldestEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f9198.  call temp:= `size`(v1) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L3f919e.  v2:= temp;
  #L3f91a0.  v0:= v1.`org.simpleframework.xml.util.LimitedCache.capacity` @type ^`int`;
  #L3f91a4.  if v2 <= v0 then goto L3f91ac;
  #L3f91a8.  v2:= 1I;
  #L3f91aa.  goto L3f91ae;
  #L3f91ac.  v2:= 0I;
  #L3f91ae.  return v2;
}
procedure `java.lang.Object` `take`(`org.simpleframework.xml.util.LimitedCache` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/LimitedCache;.take:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3f91dc.  call temp:= `remove`(v0, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f91e2.  v1:= temp @kind object;
  #L3f91e4.  return v1 @kind object;
}
