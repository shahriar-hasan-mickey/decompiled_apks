record `org.simpleframework.xml.convert.Reference` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.strategy.Value` @kind interface {
  `java.lang.Class` `org.simpleframework.xml.convert.Reference.actual` @AccessFlag PRIVATE;
  `java.lang.Object` `org.simpleframework.xml.convert.Reference.data` @AccessFlag PRIVATE;
  `org.simpleframework.xml.strategy.Value` `org.simpleframework.xml.convert.Reference.value` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.Reference` v0 @kind this, `org.simpleframework.xml.strategy.Value` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/convert/Reference;.<init>:(Lorg/simpleframework/xml/strategy/Value;Ljava/lang/Object;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3dc954.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dc95a.  v0.`org.simpleframework.xml.convert.Reference.actual` @type ^`java.lang.Class` := v3 @kind object;
  #L3dc95e.  v0.`org.simpleframework.xml.convert.Reference.value` @type ^`org.simpleframework.xml.strategy.Value` := v1 @kind object;
  #L3dc962.  v0.`org.simpleframework.xml.convert.Reference.data` @type ^`java.lang.Object` := v2 @kind object;
  #L3dc966.  return @kind void;
}
procedure `int` `getLength`(`org.simpleframework.xml.convert.Reference` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/Reference;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc900.  v0:= 0I;
  #L3dc902.  return v0;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.convert.Reference` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/Reference;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc914.  v0:= v1.`org.simpleframework.xml.convert.Reference.data` @type ^`java.lang.Object` @kind object;
  #L3dc918.  if v0 == 0 then goto L3dc926;
  #L3dc91c.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3dc922.  v0:= temp @kind object;
  #L3dc924.  return v0 @kind object;
  #L3dc926.  v0:= v1.`org.simpleframework.xml.convert.Reference.actual` @type ^`java.lang.Class` @kind object;
  #L3dc92a.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`org.simpleframework.xml.convert.Reference` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/Reference;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc93c.  v0:= v1.`org.simpleframework.xml.convert.Reference.data` @type ^`java.lang.Object` @kind object;
  #L3dc940.  return v0 @kind object;
}
procedure `boolean` `isReference`(`org.simpleframework.xml.convert.Reference` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/Reference;.isReference:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc8ec.  v0:= 1I;
  #L3dc8ee.  return v0;
}
procedure `void` `setValue`(`org.simpleframework.xml.convert.Reference` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/Reference;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc978.  v0:= v1.`org.simpleframework.xml.convert.Reference.value` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L3dc97c.  if v0 == 0 then goto L3dc986;
  #L3dc980.  call `setValue`(v0, v2) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L3dc986.  v1.`org.simpleframework.xml.convert.Reference.data` @type ^`java.lang.Object` := v2 @kind object;
  #L3dc98a.  return @kind void;
}
