record `org.simpleframework.xml.convert.RegistryBinder` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.convert.RegistryBinder.cache` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.convert.ConverterFactory` `org.simpleframework.xml.convert.RegistryBinder.factory` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.RegistryBinder` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dc9f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dc9f6.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L3dc9fa.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L3dca00.  v1.`org.simpleframework.xml.convert.RegistryBinder.cache` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L3dca04.  v0:= new `org.simpleframework.xml.convert.ConverterFactory`;
  #L3dca08.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/convert/ConverterFactory;.<init>:()V` @kind direct;
  #L3dca0e.  v1.`org.simpleframework.xml.convert.RegistryBinder.factory` @type ^`org.simpleframework.xml.convert.ConverterFactory` := v0 @kind object;
  #L3dca12.  return @kind void;
}
procedure `org.simpleframework.xml.convert.Converter` `create`(`org.simpleframework.xml.convert.RegistryBinder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.create:(Ljava/lang/Class;)Lorg/simpleframework/xml/convert/Converter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3dc99c.  v0:= v1.`org.simpleframework.xml.convert.RegistryBinder.factory` @type ^`org.simpleframework.xml.convert.ConverterFactory` @kind object;
  #L3dc9a0.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/convert/ConverterFactory;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/convert/Converter;` @kind virtual;
  #L3dc9a6.  v2:= temp @kind object;
  #L3dc9a8.  return v2 @kind object;
}
procedure `void` `bind`(`org.simpleframework.xml.convert.RegistryBinder` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.bind:(Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dca24.  v0:= v1.`org.simpleframework.xml.convert.RegistryBinder.cache` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3dca28.  call `cache`(v0, v2, v3) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3dca2e.  return @kind void;
}
procedure `org.simpleframework.xml.convert.Converter` `lookup`(`org.simpleframework.xml.convert.RegistryBinder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.lookup:(Ljava/lang/Class;)Lorg/simpleframework/xml/convert/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc9bc.  v0:= v1.`org.simpleframework.xml.convert.RegistryBinder.cache` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3dc9c0.  call temp:= `fetch`(v0, v2) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3dc9c6.  v2:= temp @kind object;
  #L3dc9c8.  v2:= (`java.lang.Class`) v2 @kind object;
  #L3dc9cc.  if v2 == 0 then goto L3dc9da;
  #L3dc9d0.  call temp:= `create`(v1, v2) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.create:(Ljava/lang/Class;)Lorg/simpleframework/xml/convert/Converter;` @kind direct;
  #L3dc9d6.  v2:= temp @kind object;
  #L3dc9d8.  return v2 @kind object;
  #L3dc9da.  v2:= 0I;
  #L3dc9dc.  return v2 @kind object;
}
