record `org.simpleframework.xml.convert.AnnotationStrategy` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.strategy.Strategy` @kind interface {
  `org.simpleframework.xml.convert.ConverterScanner` `org.simpleframework.xml.convert.AnnotationStrategy.scanner` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Strategy` `org.simpleframework.xml.convert.AnnotationStrategy.strategy` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dc538.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L3dc53c.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L3dc542.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;)V` @kind direct;
  #L3dc548.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dc55c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dc562.  v0:= new `org.simpleframework.xml.convert.ConverterScanner`;
  #L3dc566.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/convert/ConverterScanner;.<init>:()V` @kind direct;
  #L3dc56c.  v1.`org.simpleframework.xml.convert.AnnotationStrategy.scanner` @type ^`org.simpleframework.xml.convert.ConverterScanner` := v0 @kind object;
  #L3dc570.  v1.`org.simpleframework.xml.convert.AnnotationStrategy.strategy` @type ^`org.simpleframework.xml.strategy.Strategy` := v2 @kind object;
  #L3dc574.  return @kind void;
}
procedure `boolean` `isReference`(`org.simpleframework.xml.convert.AnnotationStrategy` v0 @kind this, `org.simpleframework.xml.strategy.Value` v1 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.isReference:(Lorg/simpleframework/xml/strategy/Value;)Z` @AccessFlag PRIVATE {
    temp;

  #L3dc420.  if v1 == 0 then goto L3dc434;
  #L3dc424.  call temp:= `isReference`(v1) @signature `Lorg/simpleframework/xml/strategy/Value;.isReference:()Z` @kind interface;
  #L3dc42a.  v1:= temp;
  #L3dc42c.  if v1 == 0 then goto L3dc434;
  #L3dc430.  v1:= 1I;
  #L3dc432.  goto L3dc436;
  #L3dc434.  v1:= 0I;
  #L3dc436.  return v1;
}
procedure `org.simpleframework.xml.strategy.Value` `read`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object, `org.simpleframework.xml.strategy.Value` v4 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3dc4e4.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.scanner` @type ^`org.simpleframework.xml.convert.ConverterScanner` @kind object;
  #L3dc4e8.  call temp:= `getConverter`(v0, v2, v4) @signature `Lorg/simpleframework/xml/convert/ConverterScanner;.getConverter:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/convert/Converter;` @kind virtual;
  #L3dc4ee.  v0:= temp @kind object;
  #L3dc4f0.  call temp:= `getNode`(v3) @signature `Lorg/simpleframework/xml/stream/NodeMap;.getNode:()Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3dc4f6.  v3:= temp @kind object;
  #L3dc4f8.  v3:= (`org.simpleframework.xml.stream.InputNode`) v3 @kind object;
  #L3dc4fc.  if v0 == 0 then goto L3dc526;
  #L3dc500.  call temp:= `read`(v0, v3) @signature `Lorg/simpleframework/xml/convert/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L3dc506.  v3:= temp @kind object;
  #L3dc508.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3dc50e.  v2:= temp @kind object;
  #L3dc510.  if v4 == 0 then goto L3dc51a;
  #L3dc514.  call `setValue`(v4, v3) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L3dc51a.  v0:= new `org.simpleframework.xml.convert.Reference`;
  #L3dc51e.  call `<init>`(v0, v4, v3, v2) @signature `Lorg/simpleframework/xml/convert/Reference;.<init>:(Lorg/simpleframework/xml/strategy/Value;Ljava/lang/Object;Ljava/lang/Class;)V` @kind direct;
  #L3dc524.  return v0 @kind object;
  #L3dc526.  return v4 @kind object;
}
procedure `boolean` `write`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3dc448.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.scanner` @type ^`org.simpleframework.xml.convert.ConverterScanner` @kind object;
  #L3dc44c.  call temp:= `getConverter`(v0, v2, v3) @signature `Lorg/simpleframework/xml/convert/ConverterScanner;.getConverter:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Lorg/simpleframework/xml/convert/Converter;` @kind virtual;
  #L3dc452.  v2:= temp @kind object;
  #L3dc454.  call temp:= `getNode`(v4) @signature `Lorg/simpleframework/xml/stream/NodeMap;.getNode:()Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3dc45a.  v4:= temp @kind object;
  #L3dc45c.  v4:= (`org.simpleframework.xml.stream.OutputNode`) v4 @kind object;
  #L3dc460.  if v2 == 0 then goto L3dc46e;
  #L3dc464.  call `write`(v2, v4, v3) @signature `Lorg/simpleframework/xml/convert/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L3dc46a.  v2:= 1I;
  #L3dc46c.  return v2;
  #L3dc46e.  v2:= 0I;
  #L3dc470.  return v2;
}
procedure `org.simpleframework.xml.strategy.Value` `read`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc4b0.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.strategy` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L3dc4b4.  call temp:= `read`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/strategy/Strategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Lorg/simpleframework/xml/strategy/Value;` @kind interface;
  #L3dc4ba.  v4:= temp @kind object;
  #L3dc4bc.  call temp:= `isReference`(v1, v4) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.isReference:(Lorg/simpleframework/xml/strategy/Value;)Z` @kind direct;
  #L3dc4c2.  v0:= temp;
  #L3dc4c4.  if v0 == 0 then goto L3dc4ca;
  #L3dc4c8.  return v4 @kind object;
  #L3dc4ca.  call temp:= `read`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/strategy/Value;` @kind direct;
  #L3dc4d0.  v2:= temp @kind object;
  #L3dc4d2.  return v2 @kind object;
}
procedure `boolean` `write`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc484.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.strategy` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L3dc488.  call temp:= `write`(v0, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/strategy/Strategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Z` @kind interface;
  #L3dc48e.  v5:= temp;
  #L3dc490.  if v5 != 0 then goto L3dc49e;
  #L3dc494.  call temp:= `write`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @kind direct;
  #L3dc49a.  v2:= temp;
  #L3dc49c.  return v2;
  #L3dc49e.  return v5;
}
