record `org.simpleframework.xml.stream.StreamReader$Text` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.EventToken` @kind class {
  `javax.xml.stream.events.Characters` `org.simpleframework.xml.stream.StreamReader$Text.text` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.StreamReader$Text` v0 @kind this, `javax.xml.stream.events.XMLEvent` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader$Text;.<init>:(Ljavax/xml/stream/events/XMLEvent;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f6f28.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/stream/EventToken;.<init>:()V` @kind direct;
  #L3f6f2e.  call temp:= `asCharacters`(v1) @signature `Ljavax/xml/stream/events/XMLEvent;.asCharacters:()Ljavax/xml/stream/events/Characters;` @kind interface;
  #L3f6f34.  v1:= temp @kind object;
  #L3f6f36.  v0.`org.simpleframework.xml.stream.StreamReader$Text.text` @type ^`javax.xml.stream.events.Characters` := v1 @kind object;
  #L3f6f3a.  return @kind void;
}
procedure `java.lang.Object` `getSource`(`org.simpleframework.xml.stream.StreamReader$Text` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader$Text;.getSource:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6ef0.  v0:= v1.`org.simpleframework.xml.stream.StreamReader$Text.text` @type ^`javax.xml.stream.events.Characters` @kind object;
  #L3f6ef4.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.stream.StreamReader$Text` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader$Text;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6f08.  v0:= v1.`org.simpleframework.xml.stream.StreamReader$Text.text` @type ^`javax.xml.stream.events.Characters` @kind object;
  #L3f6f0c.  call temp:= `getData`(v0) @signature `Ljavax/xml/stream/events/Characters;.getData:()Ljava/lang/String;` @kind interface;
  #L3f6f12.  v0:= temp @kind object;
  #L3f6f14.  return v0 @kind object;
}
procedure `boolean` `isText`(`org.simpleframework.xml.stream.StreamReader$Text` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader$Text;.isText:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6edc.  v0:= 1I;
  #L3f6ede.  return v0;
}
