record `org.simpleframework.xml.stream.OutputDocument` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.OutputNode` @kind interface {
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.comment` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.Mode` `org.simpleframework.xml.stream.OutputDocument.mode` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.name` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.reference` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.OutputStack` `org.simpleframework.xml.stream.OutputDocument.stack` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.OutputNodeMap` `org.simpleframework.xml.stream.OutputDocument.table` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.value` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.NodeWriter` `org.simpleframework.xml.stream.OutputDocument.writer` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this, `org.simpleframework.xml.stream.NodeWriter` v2 @kind object, `org.simpleframework.xml.stream.OutputStack` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.<init>:(Lorg/simpleframework/xml/stream/NodeWriter;Lorg/simpleframework/xml/stream/OutputStack;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f5a54.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f5a5a.  v0:= new `org.simpleframework.xml.stream.OutputNodeMap`;
  #L3f5a5e.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/OutputNodeMap;.<init>:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind direct;
  #L3f5a64.  v1.`org.simpleframework.xml.stream.OutputDocument.table` @type ^`org.simpleframework.xml.stream.OutputNodeMap` := v0 @kind object;
  #L3f5a68.  v0:= `@@org.simpleframework.xml.stream.Mode.INHERIT` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L3f5a6c.  v1.`org.simpleframework.xml.stream.OutputDocument.mode` @type ^`org.simpleframework.xml.stream.Mode` := v0 @kind object;
  #L3f5a70.  v1.`org.simpleframework.xml.stream.OutputDocument.writer` @type ^`org.simpleframework.xml.stream.NodeWriter` := v2 @kind object;
  #L3f5a74.  v1.`org.simpleframework.xml.stream.OutputDocument.stack` @type ^`org.simpleframework.xml.stream.OutputStack` := v3 @kind object;
  #L3f5a78.  return @kind void;
}
procedure `void` `commit`(`org.simpleframework.xml.stream.OutputDocument` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f5a8c.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.stack` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L3f5a90.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L3f5a96.  v0:= temp;
  #L3f5a98.  if v0 != 0 then goto L3f5ab0;
  #L3f5a9c.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.stack` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L3f5aa0.  call temp:= `bottom`(v0) @signature `Lorg/simpleframework/xml/stream/OutputStack;.bottom:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L3f5aa6.  v0:= temp @kind object;
  #L3f5aa8.  call `commit`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.commit:()V` @kind interface;
  #L3f5aae.  return @kind void;
  #L3f5ab0.  v0:= new `org.simpleframework.xml.stream.NodeException`;
  #L3f5ab4.  v1:= "No root node" @kind object;
  #L3f5ab8.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f5abe.  throw v0;
}
procedure `org.simpleframework.xml.stream.NodeMap` `getAttributes`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f59e8.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.table` @type ^`org.simpleframework.xml.stream.OutputNodeMap` @kind object;
  #L3f59ec.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.OutputNode` `getChild`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5a00.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.writer` @type ^`org.simpleframework.xml.stream.NodeWriter` @kind object;
  #L3f5a04.  call temp:= `writeElement`(v0, v1, v2) @signature `Lorg/simpleframework/xml/stream/NodeWriter;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L3f5a0a.  v2:= temp @kind object;
  #L3f5a0c.  return v2 @kind object;
}
procedure `java.lang.String` `getComment`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getComment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f591c.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.comment` @type ^`java.lang.String` @kind object;
  #L3f5920.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Mode` `getMode`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getMode:()Lorg/simpleframework/xml/stream/Mode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f59a0.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.mode` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L3f59a4.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5934.  v0:= 0I;
  #L3f5936.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.NamespaceMap` `getNamespaces`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f59b8.  v0:= 0I;
  #L3f59ba.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Node` `getParent`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getParent:()Lorg/simpleframework/xml/stream/Node;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f59cc.  call temp:= `getParent`(v1) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L3f59d2.  v0:= temp @kind object;
  #L3f59d4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.OutputNode` `getParent`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5a20.  v0:= 0I;
  #L3f5a22.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5948.  v0:= 0I;
  #L3f594a.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `boolean` v1 ) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getPrefix:(Z)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3f595c.  v1:= 0I;
  #L3f595e.  return v1 @kind object;
}
procedure `java.lang.String` `getReference`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getReference:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5970.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.reference` @type ^`java.lang.String` @kind object;
  #L3f5974.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5988.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.value` @type ^`java.lang.String` @kind object;
  #L3f598c.  return v0 @kind object;
}
procedure `boolean` `isCommitted`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.isCommitted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f58e8.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.stack` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L3f58ec.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L3f58f2.  v0:= temp;
  #L3f58f4.  return v0;
}
procedure `boolean` `isRoot`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.isRoot:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5908.  v0:= 1I;
  #L3f590a.  return v0;
}
procedure `void` `remove`(`org.simpleframework.xml.stream.OutputDocument` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f5ad0.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.stack` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L3f5ad4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L3f5ada.  v0:= temp;
  #L3f5adc.  if v0 != 0 then goto L3f5af4;
  #L3f5ae0.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.stack` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L3f5ae4.  call temp:= `bottom`(v0) @signature `Lorg/simpleframework/xml/stream/OutputStack;.bottom:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L3f5aea.  v0:= temp @kind object;
  #L3f5aec.  call `remove`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.remove:()V` @kind interface;
  #L3f5af2.  return @kind void;
  #L3f5af4.  v0:= new `org.simpleframework.xml.stream.NodeException`;
  #L3f5af8.  v1:= "No root node" @kind object;
  #L3f5afc.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f5b02.  throw v0;
}
procedure `org.simpleframework.xml.stream.OutputNode` `setAttribute`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5a34.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.table` @type ^`org.simpleframework.xml.stream.OutputNodeMap` @kind object;
  #L3f5a38.  call temp:= `put`(v0, v2, v3) @signature `Lorg/simpleframework/xml/stream/OutputNodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L3f5a3e.  v2:= temp @kind object;
  #L3f5a40.  return v2 @kind object;
}
procedure `void` `setComment`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setComment:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b14.  v0.`org.simpleframework.xml.stream.OutputDocument.comment` @type ^`java.lang.String` := v1 @kind object;
  #L3f5b18.  return @kind void;
}
procedure `void` `setData`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `boolean` v1 ) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setData:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b2c.  if v1 == 0 then goto L3f5b3a;
  #L3f5b30.  v1:= `@@org.simpleframework.xml.stream.Mode.DATA` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L3f5b34.  v0.`org.simpleframework.xml.stream.OutputDocument.mode` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L3f5b38.  goto L3f5b42;
  #L3f5b3a.  v1:= `@@org.simpleframework.xml.stream.Mode.ESCAPE` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L3f5b3e.  v0.`org.simpleframework.xml.stream.OutputDocument.mode` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L3f5b42.  return @kind void;
}
procedure `void` `setMode`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `org.simpleframework.xml.stream.Mode` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setMode:(Lorg/simpleframework/xml/stream/Mode;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b54.  v0.`org.simpleframework.xml.stream.OutputDocument.mode` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L3f5b58.  return @kind void;
}
procedure `void` `setName`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b6c.  v0.`org.simpleframework.xml.stream.OutputDocument.name` @type ^`java.lang.String` := v1 @kind object;
  #L3f5b70.  return @kind void;
}
procedure `void` `setReference`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setReference:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b84.  v0.`org.simpleframework.xml.stream.OutputDocument.reference` @type ^`java.lang.String` := v1 @kind object;
  #L3f5b88.  return @kind void;
}
procedure `void` `setValue`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setValue:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b9c.  v0.`org.simpleframework.xml.stream.OutputDocument.value` @type ^`java.lang.String` := v1 @kind object;
  #L3f5ba0.  return @kind void;
}
