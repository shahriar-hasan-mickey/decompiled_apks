record `org.simpleframework.xml.stream.PrefixResolver` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `org.simpleframework.xml.stream.NamespaceMap` @kind interface {
  `org.simpleframework.xml.stream.OutputNode` `org.simpleframework.xml.stream.PrefixResolver.source` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.PrefixResolver` v0 @kind this, `org.simpleframework.xml.stream.OutputNode` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.<init>:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f63a4.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3f63aa.  v0.`org.simpleframework.xml.stream.PrefixResolver.source` @type ^`org.simpleframework.xml.stream.OutputNode` := v1 @kind object;
  #L3f63ae.  return @kind void;
}
procedure `java.lang.String` `resolvePrefix`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.resolvePrefix:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f62c4.  v0:= v1.`org.simpleframework.xml.stream.PrefixResolver.source` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L3f62c8.  call temp:= `getNamespaces`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L3f62ce.  v0:= temp @kind object;
  #L3f62d0.  if v0 == 0 then goto L3f62ea;
  #L3f62d4.  call temp:= `getPrefix`(v0, v2) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getPrefix:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3f62da.  v2:= temp @kind object;
  #L3f62dc.  call temp:= `containsValue`(v1, v2) @signature `Ljava/util/LinkedHashMap;.containsValue:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f62e2.  v0:= temp;
  #L3f62e4.  if v0 != 0 then goto L3f62ea;
  #L3f62e8.  return v2 @kind object;
  #L3f62ea.  v2:= 0I;
  #L3f62ec.  return v2 @kind object;
}
procedure `java.lang.String` `resolveReference`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.resolveReference:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f6300.  v0:= v1.`org.simpleframework.xml.stream.PrefixResolver.source` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L3f6304.  call temp:= `getNamespaces`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L3f630a.  v0:= temp @kind object;
  #L3f630c.  if v0 == 0 then goto L3f631a;
  #L3f6310.  call temp:= `getReference`(v0, v2) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getReference:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3f6316.  v2:= temp @kind object;
  #L3f6318.  return v2 @kind object;
  #L3f631a.  v2:= 0I;
  #L3f631c.  return v2 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6208.  v0:= v1.`org.simpleframework.xml.stream.PrefixResolver.source` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L3f620c.  call temp:= `getPrefix`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L3f6212.  v0:= temp @kind object;
  #L3f6214.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.getPrefix:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6228.  call temp:= `size`(v1) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L3f622e.  v0:= temp;
  #L3f6230.  if v0 <= 0 then goto L3f6246;
  #L3f6234.  call temp:= `get`(v1, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f623a.  v0:= temp @kind object;
  #L3f623c.  v0:= (`java.lang.String`) v0 @kind object;
  #L3f6240.  if v0 == 0 then goto L3f6246;
  #L3f6244.  return v0 @kind object;
  #L3f6246.  call temp:= `resolvePrefix`(v1, v2) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.resolvePrefix:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L3f624c.  v2:= temp @kind object;
  #L3f624e.  return v2 @kind object;
}
procedure `java.lang.String` `getReference`(`org.simpleframework.xml.stream.PrefixResolver` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.getReference:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f6260.  call temp:= `containsValue`(v3, v4) @signature `Ljava/util/LinkedHashMap;.containsValue:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f6266.  v0:= temp;
  #L3f6268.  if v0 == 0 then goto L3f62aa;
  #L3f626c.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f6272.  v0:= temp @kind object;
  #L3f6274.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f627a.  v1:= temp;
  #L3f627c.  if v1 == 0 then goto L3f62aa;
  #L3f6280.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f6286.  v1:= temp @kind object;
  #L3f6288.  v1:= (`java.lang.String`) v1 @kind object;
  #L3f628c.  call temp:= `get`(v3, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f6292.  v2:= temp @kind object;
  #L3f6294.  v2:= (`java.lang.String`) v2 @kind object;
  #L3f6298.  if v2 == 0 then goto L3f6274;
  #L3f629c.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f62a2.  v2:= temp;
  #L3f62a4.  if v2 == 0 then goto L3f6274;
  #L3f62a8.  return v1 @kind object;
  #L3f62aa.  call temp:= `resolveReference`(v3, v4) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.resolveReference:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L3f62b0.  v4:= temp @kind object;
  #L3f62b2.  return v4 @kind object;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6380.  call temp:= `keySet`(v1) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L3f6386.  v0:= temp @kind object;
  #L3f6388.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f638e.  v0:= temp @kind object;
  #L3f6390.  return v0 @kind object;
}
procedure `java.lang.String` `setReference`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.setReference:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6330.  v0:= "" @kind object;
  #L3f6334.  call temp:= `setReference`(v1, v2, v0) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.setReference:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3f633a.  v2:= temp @kind object;
  #L3f633c.  return v2 @kind object;
}
procedure `java.lang.String` `setReference`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.setReference:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6350.  call temp:= `resolvePrefix`(v1, v2) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.resolvePrefix:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L3f6356.  v0:= temp @kind object;
  #L3f6358.  if v0 == 0 then goto L3f6360;
  #L3f635c.  v2:= 0I;
  #L3f635e.  return v2 @kind object;
  #L3f6360.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f6366.  v2:= temp @kind object;
  #L3f6368.  v2:= (`java.lang.String`) v2 @kind object;
  #L3f636c.  return v2 @kind object;
}
