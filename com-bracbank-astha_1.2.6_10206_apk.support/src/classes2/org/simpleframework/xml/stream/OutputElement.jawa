record `org.simpleframework.xml.stream.OutputElement` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.OutputNode` @kind interface {
  `java.lang.String` `org.simpleframework.xml.stream.OutputElement.comment` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.Mode` `org.simpleframework.xml.stream.OutputElement.mode` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputElement.name` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.OutputNode` `org.simpleframework.xml.stream.OutputElement.parent` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputElement.reference` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.NamespaceMap` `org.simpleframework.xml.stream.OutputElement.scope` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.OutputNodeMap` `org.simpleframework.xml.stream.OutputElement.table` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputElement.value` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.NodeWriter` `org.simpleframework.xml.stream.OutputElement.writer` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `org.simpleframework.xml.stream.NodeWriter` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputElement;.<init>:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/stream/NodeWriter;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f5db0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f5db6.  v0:= new `org.simpleframework.xml.stream.PrefixResolver`;
  #L3f5dba.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.<init>:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind direct;
  #L3f5dc0.  v1.`org.simpleframework.xml.stream.OutputElement.scope` @type ^`org.simpleframework.xml.stream.NamespaceMap` := v0 @kind object;
  #L3f5dc4.  v0:= new `org.simpleframework.xml.stream.OutputNodeMap`;
  #L3f5dc8.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/OutputNodeMap;.<init>:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind direct;
  #L3f5dce.  v1.`org.simpleframework.xml.stream.OutputElement.table` @type ^`org.simpleframework.xml.stream.OutputNodeMap` := v0 @kind object;
  #L3f5dd2.  v0:= `@@org.simpleframework.xml.stream.Mode.INHERIT` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L3f5dd6.  v1.`org.simpleframework.xml.stream.OutputElement.mode` @type ^`org.simpleframework.xml.stream.Mode` := v0 @kind object;
  #L3f5dda.  v1.`org.simpleframework.xml.stream.OutputElement.writer` @type ^`org.simpleframework.xml.stream.NodeWriter` := v3 @kind object;
  #L3f5dde.  v1.`org.simpleframework.xml.stream.OutputElement.parent` @type ^`org.simpleframework.xml.stream.OutputNode` := v2 @kind object;
  #L3f5de2.  v1.`org.simpleframework.xml.stream.OutputElement.name` @type ^`java.lang.String` := v4 @kind object;
  #L3f5de6.  return @kind void;
}
procedure `void` `commit`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5df8.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.writer` @type ^`org.simpleframework.xml.stream.NodeWriter` @kind object;
  #L3f5dfc.  call `commit`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeWriter;.commit:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind virtual;
  #L3f5e02.  return @kind void;
}
procedure `org.simpleframework.xml.stream.NodeMap` `getAttributes`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f5d24.  call temp:= `getAttributes`(v1) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getAttributes:()Lorg/simpleframework/xml/stream/OutputNodeMap;` @kind virtual;
  #L3f5d2a.  v0:= temp @kind object;
  #L3f5d2c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.OutputNodeMap` `getAttributes`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getAttributes:()Lorg/simpleframework/xml/stream/OutputNodeMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5d98.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.table` @type ^`org.simpleframework.xml.stream.OutputNodeMap` @kind object;
  #L3f5d9c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.OutputNode` `getChild`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5d40.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.writer` @type ^`org.simpleframework.xml.stream.NodeWriter` @kind object;
  #L3f5d44.  call temp:= `writeElement`(v0, v1, v2) @signature `Lorg/simpleframework/xml/stream/NodeWriter;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L3f5d4a.  v2:= temp @kind object;
  #L3f5d4c.  return v2 @kind object;
}
procedure `java.lang.String` `getComment`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getComment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5bf4.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.comment` @type ^`java.lang.String` @kind object;
  #L3f5bf8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Mode` `getMode`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getMode:()Lorg/simpleframework/xml/stream/Mode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5cd8.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.mode` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L3f5cdc.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5c0c.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.name` @type ^`java.lang.String` @kind object;
  #L3f5c10.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.NamespaceMap` `getNamespaces`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5cf0.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.scope` @type ^`org.simpleframework.xml.stream.NamespaceMap` @kind object;
  #L3f5cf4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Node` `getParent`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getParent:()Lorg/simpleframework/xml/stream/Node;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f5d08.  call temp:= `getParent`(v1) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L3f5d0e.  v0:= temp @kind object;
  #L3f5d10.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.OutputNode` `getParent`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5d60.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.parent` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L3f5d64.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5c24.  v0:= 1I;
  #L3f5c26.  call temp:= `getPrefix`(v1, v0) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getPrefix:(Z)Ljava/lang/String;` @kind virtual;
  #L3f5c2c.  v0:= temp @kind object;
  #L3f5c2e.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.OutputElement` v2 @kind this, `boolean` v3 ) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getPrefix:(Z)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f5c40.  v0:= v2.`org.simpleframework.xml.stream.OutputElement.scope` @type ^`org.simpleframework.xml.stream.NamespaceMap` @kind object;
  #L3f5c44.  v1:= v2.`org.simpleframework.xml.stream.OutputElement.reference` @type ^`java.lang.String` @kind object;
  #L3f5c48.  call temp:= `getPrefix`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getPrefix:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3f5c4e.  v0:= temp @kind object;
  #L3f5c50.  if v3 == 0 then goto L3f5c66;
  #L3f5c54.  if v0 != 0 then goto L3f5c66;
  #L3f5c58.  v3:= v2.`org.simpleframework.xml.stream.OutputElement.parent` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L3f5c5c.  call temp:= `getPrefix`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L3f5c62.  v3:= temp @kind object;
  #L3f5c64.  return v3 @kind object;
  #L3f5c66.  return v0 @kind object;
}
procedure `java.lang.String` `getReference`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getReference:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5c78.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.reference` @type ^`java.lang.String` @kind object;
  #L3f5c7c.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5c90.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.value` @type ^`java.lang.String` @kind object;
  #L3f5c94.  return v0 @kind object;
}
procedure `boolean` `isCommitted`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.isCommitted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5bb4.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.writer` @type ^`org.simpleframework.xml.stream.NodeWriter` @kind object;
  #L3f5bb8.  call temp:= `isCommitted`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeWriter;.isCommitted:(Lorg/simpleframework/xml/stream/OutputNode;)Z` @kind virtual;
  #L3f5bbe.  v0:= temp;
  #L3f5bc0.  return v0;
}
procedure `boolean` `isRoot`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.isRoot:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5bd4.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.writer` @type ^`org.simpleframework.xml.stream.NodeWriter` @kind object;
  #L3f5bd8.  call temp:= `isRoot`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeWriter;.isRoot:(Lorg/simpleframework/xml/stream/OutputNode;)Z` @kind virtual;
  #L3f5bde.  v0:= temp;
  #L3f5be0.  return v0;
}
procedure `void` `remove`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5e14.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.writer` @type ^`org.simpleframework.xml.stream.NodeWriter` @kind object;
  #L3f5e18.  call `remove`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeWriter;.remove:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind virtual;
  #L3f5e1e.  return @kind void;
}
procedure `org.simpleframework.xml.stream.OutputNode` `setAttribute`(`org.simpleframework.xml.stream.OutputElement` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputElement;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5d78.  v0:= v1.`org.simpleframework.xml.stream.OutputElement.table` @type ^`org.simpleframework.xml.stream.OutputNodeMap` @kind object;
  #L3f5d7c.  call temp:= `put`(v0, v2, v3) @signature `Lorg/simpleframework/xml/stream/OutputNodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L3f5d82.  v2:= temp @kind object;
  #L3f5d84.  return v2 @kind object;
}
procedure `void` `setComment`(`org.simpleframework.xml.stream.OutputElement` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputElement;.setComment:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5e30.  v0.`org.simpleframework.xml.stream.OutputElement.comment` @type ^`java.lang.String` := v1 @kind object;
  #L3f5e34.  return @kind void;
}
procedure `void` `setData`(`org.simpleframework.xml.stream.OutputElement` v0 @kind this, `boolean` v1 ) @signature `Lorg/simpleframework/xml/stream/OutputElement;.setData:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3f5e48.  if v1 == 0 then goto L3f5e56;
  #L3f5e4c.  v1:= `@@org.simpleframework.xml.stream.Mode.DATA` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L3f5e50.  v0.`org.simpleframework.xml.stream.OutputElement.mode` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L3f5e54.  goto L3f5e5e;
  #L3f5e56.  v1:= `@@org.simpleframework.xml.stream.Mode.ESCAPE` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L3f5e5a.  v0.`org.simpleframework.xml.stream.OutputElement.mode` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L3f5e5e.  return @kind void;
}
procedure `void` `setMode`(`org.simpleframework.xml.stream.OutputElement` v0 @kind this, `org.simpleframework.xml.stream.Mode` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputElement;.setMode:(Lorg/simpleframework/xml/stream/Mode;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5e70.  v0.`org.simpleframework.xml.stream.OutputElement.mode` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L3f5e74.  return @kind void;
}
procedure `void` `setName`(`org.simpleframework.xml.stream.OutputElement` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputElement;.setName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5e88.  v0.`org.simpleframework.xml.stream.OutputElement.name` @type ^`java.lang.String` := v1 @kind object;
  #L3f5e8c.  return @kind void;
}
procedure `void` `setReference`(`org.simpleframework.xml.stream.OutputElement` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputElement;.setReference:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5ea0.  v0.`org.simpleframework.xml.stream.OutputElement.reference` @type ^`java.lang.String` := v1 @kind object;
  #L3f5ea4.  return @kind void;
}
procedure `void` `setValue`(`org.simpleframework.xml.stream.OutputElement` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputElement;.setValue:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5eb8.  v0.`org.simpleframework.xml.stream.OutputElement.value` @type ^`java.lang.String` := v1 @kind object;
  #L3f5ebc.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.stream.OutputElement` v3 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputElement;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f5ca8.  v0:= 1I;
  #L3f5caa.  v0:= new `java.lang.Object`[v0];
  #L3f5cae.  v1:= v3.`org.simpleframework.xml.stream.OutputElement.name` @type ^`java.lang.String` @kind object;
  #L3f5cb2.  v2:= 0I;
  #L3f5cb4.  v0[v2]:= v1 @kind object;
  #L3f5cb8.  v1:= "element %s" @kind object;
  #L3f5cbc.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3f5cc2.  v0:= temp @kind object;
  #L3f5cc4.  return v0 @kind object;
}
