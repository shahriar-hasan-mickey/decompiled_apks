record `org.simpleframework.xml.stream.StreamReader` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.EventReader` @kind interface {
  `org.simpleframework.xml.stream.EventNode` `org.simpleframework.xml.stream.StreamReader.peek` @AccessFlag PRIVATE;
  `javax.xml.stream.XMLEventReader` `org.simpleframework.xml.stream.StreamReader.reader` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.StreamReader` v0 @kind this, `javax.xml.stream.XMLEventReader` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.<init>:(Ljavax/xml/stream/XMLEventReader;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f70f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f70fe.  v0.`org.simpleframework.xml.stream.StreamReader.reader` @type ^`javax.xml.stream.XMLEventReader` := v1 @kind object;
  #L3f7102.  return @kind void;
}
procedure `org.simpleframework.xml.stream.StreamReader$Entry` `attribute`(`org.simpleframework.xml.stream.StreamReader` v1 @kind this, `javax.xml.stream.events.Attribute` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.attribute:(Ljavax/xml/stream/events/Attribute;)Lorg/simpleframework/xml/stream/StreamReader$Entry;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f703c.  v0:= new `org.simpleframework.xml.stream.StreamReader$Entry`;
  #L3f7040.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/StreamReader$Entry;.<init>:(Ljavax/xml/stream/events/Attribute;)V` @kind direct;
  #L3f7046.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.StreamReader$Start` `build`(`org.simpleframework.xml.stream.StreamReader` v3 @kind this, `org.simpleframework.xml.stream.StreamReader$Start` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.build:(Lorg/simpleframework/xml/stream/StreamReader$Start;)Lorg/simpleframework/xml/stream/StreamReader$Start;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3f7058.  call temp:= `getAttributes`(v4) @signature `Lorg/simpleframework/xml/stream/StreamReader$Start;.getAttributes:()Ljava/util/Iterator;` @kind virtual;
  #L3f705e.  v0:= temp @kind object;
  #L3f7060.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f7066.  v1:= temp;
  #L3f7068.  if v1 == 0 then goto L3f7094;
  #L3f706c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f7072.  v1:= temp @kind object;
  #L3f7074.  v1:= (`javax.xml.stream.events.Attribute`) v1 @kind object;
  #L3f7078.  call temp:= `attribute`(v3, v1) @signature `Lorg/simpleframework/xml/stream/StreamReader;.attribute:(Ljavax/xml/stream/events/Attribute;)Lorg/simpleframework/xml/stream/StreamReader$Entry;` @kind direct;
  #L3f707e.  v1:= temp @kind object;
  #L3f7080.  call temp:= `isReserved`(v1) @signature `Lorg/simpleframework/xml/stream/StreamReader$Entry;.isReserved:()Z` @kind virtual;
  #L3f7086.  v2:= temp;
  #L3f7088.  if v2 != 0 then goto L3f7060;
  #L3f708c.  call temp:= `add`(v4, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f7092.  goto L3f7060;
  #L3f7094.  return v4 @kind object;
}
procedure `org.simpleframework.xml.stream.StreamReader$End` `end`(`org.simpleframework.xml.stream.StreamReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader;.end:()Lorg/simpleframework/xml/stream/StreamReader$End;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f701c.  v0:= new `org.simpleframework.xml.stream.StreamReader$End`;
  #L3f7020.  v1:= 0I;
  #L3f7022.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/StreamReader$End;.<init>:(Lorg/simpleframework/xml/stream/StreamReader$1;)V` @kind direct;
  #L3f7028.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `read`(`org.simpleframework.xml.stream.StreamReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader;.read:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f6fa4.  v0:= v2.`org.simpleframework.xml.stream.StreamReader.reader` @type ^`javax.xml.stream.XMLEventReader` @kind object;
  #L3f6fa8.  call temp:= `nextEvent`(v0) @signature `Ljavax/xml/stream/XMLEventReader;.nextEvent:()Ljavax/xml/stream/events/XMLEvent;` @kind interface;
  #L3f6fae.  v0:= temp @kind object;
  #L3f6fb0.  call temp:= `isEndDocument`(v0) @signature `Ljavax/xml/stream/events/XMLEvent;.isEndDocument:()Z` @kind interface;
  #L3f6fb6.  v1:= temp;
  #L3f6fb8.  if v1 != 0 then goto L3f7008;
  #L3f6fbc.  call temp:= `isStartElement`(v0) @signature `Ljavax/xml/stream/events/XMLEvent;.isStartElement:()Z` @kind interface;
  #L3f6fc2.  v1:= temp;
  #L3f6fc4.  if v1 == 0 then goto L3f6fd2;
  #L3f6fc8.  call temp:= `start`(v2, v0) @signature `Lorg/simpleframework/xml/stream/StreamReader;.start:(Ljavax/xml/stream/events/XMLEvent;)Lorg/simpleframework/xml/stream/StreamReader$Start;` @kind direct;
  #L3f6fce.  v0:= temp @kind object;
  #L3f6fd0.  return v0 @kind object;
  #L3f6fd2.  call temp:= `isCharacters`(v0) @signature `Ljavax/xml/stream/events/XMLEvent;.isCharacters:()Z` @kind interface;
  #L3f6fd8.  v1:= temp;
  #L3f6fda.  if v1 == 0 then goto L3f6fe8;
  #L3f6fde.  call temp:= `text`(v2, v0) @signature `Lorg/simpleframework/xml/stream/StreamReader;.text:(Ljavax/xml/stream/events/XMLEvent;)Lorg/simpleframework/xml/stream/StreamReader$Text;` @kind direct;
  #L3f6fe4.  v0:= temp @kind object;
  #L3f6fe6.  return v0 @kind object;
  #L3f6fe8.  call temp:= `isEndElement`(v0) @signature `Ljavax/xml/stream/events/XMLEvent;.isEndElement:()Z` @kind interface;
  #L3f6fee.  v0:= temp;
  #L3f6ff0.  if v0 == 0 then goto L3f6ffe;
  #L3f6ff4.  call temp:= `end`(v2) @signature `Lorg/simpleframework/xml/stream/StreamReader;.end:()Lorg/simpleframework/xml/stream/StreamReader$End;` @kind direct;
  #L3f6ffa.  v0:= temp @kind object;
  #L3f6ffc.  return v0 @kind object;
  #L3f6ffe.  call temp:= `read`(v2) @signature `Lorg/simpleframework/xml/stream/StreamReader;.read:()Lorg/simpleframework/xml/stream/EventNode;` @kind direct;
  #L3f7004.  v0:= temp @kind object;
  #L3f7006.  return v0 @kind object;
  #L3f7008.  v0:= 0I;
  #L3f700a.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.StreamReader$Start` `start`(`org.simpleframework.xml.stream.StreamReader` v1 @kind this, `javax.xml.stream.events.XMLEvent` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.start:(Ljavax/xml/stream/events/XMLEvent;)Lorg/simpleframework/xml/stream/StreamReader$Start;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f70a8.  v0:= new `org.simpleframework.xml.stream.StreamReader$Start`;
  #L3f70ac.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/StreamReader$Start;.<init>:(Ljavax/xml/stream/events/XMLEvent;)V` @kind direct;
  #L3f70b2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L3f70b8.  v2:= temp;
  #L3f70ba.  if v2 == 0 then goto L3f70c8;
  #L3f70be.  call temp:= `build`(v1, v0) @signature `Lorg/simpleframework/xml/stream/StreamReader;.build:(Lorg/simpleframework/xml/stream/StreamReader$Start;)Lorg/simpleframework/xml/stream/StreamReader$Start;` @kind direct;
  #L3f70c4.  v2:= temp @kind object;
  #L3f70c6.  return v2 @kind object;
  #L3f70c8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.StreamReader$Text` `text`(`org.simpleframework.xml.stream.StreamReader` v1 @kind this, `javax.xml.stream.events.XMLEvent` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.text:(Ljavax/xml/stream/events/XMLEvent;)Lorg/simpleframework/xml/stream/StreamReader$Text;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f70dc.  v0:= new `org.simpleframework.xml.stream.StreamReader$Text`;
  #L3f70e0.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/StreamReader$Text;.<init>:(Ljavax/xml/stream/events/XMLEvent;)V` @kind direct;
  #L3f70e6.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `next`(`org.simpleframework.xml.stream.StreamReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader;.next:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f6f4c.  v0:= v2.`org.simpleframework.xml.stream.StreamReader.peek` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L3f6f50.  if v0 != 0 then goto L3f6f5e;
  #L3f6f54.  call temp:= `read`(v2) @signature `Lorg/simpleframework/xml/stream/StreamReader;.read:()Lorg/simpleframework/xml/stream/EventNode;` @kind direct;
  #L3f6f5a.  v0:= temp @kind object;
  #L3f6f5c.  goto L3f6f64;
  #L3f6f5e.  v1:= 0I;
  #L3f6f60.  v2.`org.simpleframework.xml.stream.StreamReader.peek` @type ^`org.simpleframework.xml.stream.EventNode` := v1 @kind object;
  #L3f6f64.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `peek`(`org.simpleframework.xml.stream.StreamReader` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader;.peek:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6f78.  v0:= v1.`org.simpleframework.xml.stream.StreamReader.peek` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L3f6f7c.  if v0 != 0 then goto L3f6f8c;
  #L3f6f80.  call temp:= `next`(v1) @signature `Lorg/simpleframework/xml/stream/StreamReader;.next:()Lorg/simpleframework/xml/stream/EventNode;` @kind virtual;
  #L3f6f86.  v0:= temp @kind object;
  #L3f6f88.  v1.`org.simpleframework.xml.stream.StreamReader.peek` @type ^`org.simpleframework.xml.stream.EventNode` := v0 @kind object;
  #L3f6f8c.  v0:= v1.`org.simpleframework.xml.stream.StreamReader.peek` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L3f6f90.  return v0 @kind object;
}
