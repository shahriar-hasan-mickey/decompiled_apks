record `org.simpleframework.xml.core.FieldContact` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Contact` @kind interface {
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.FieldContact.cache` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Field` `org.simpleframework.xml.core.FieldContact.field` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.FieldContact.label` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation`[] `org.simpleframework.xml.core.FieldContact.list` @AccessFlag PRIVATE_FINAL;
  `int` `org.simpleframework.xml.core.FieldContact.modifier` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.FieldContact.name` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.<init>:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e57a4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e57aa.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L3e57ae.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L3e57b4.  v1.`org.simpleframework.xml.core.FieldContact.cache` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L3e57b8.  call temp:= `getModifiers`(v2) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L3e57be.  v0:= temp;
  #L3e57c0.  v1.`org.simpleframework.xml.core.FieldContact.modifier` @type ^`int` := v0;
  #L3e57c4.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e57ca.  v0:= temp @kind object;
  #L3e57cc.  v1.`org.simpleframework.xml.core.FieldContact.name` @type ^`java.lang.String` := v0 @kind object;
  #L3e57d0.  v1.`org.simpleframework.xml.core.FieldContact.label` @type ^`java.lang.annotation.Annotation` := v3 @kind object;
  #L3e57d4.  v1.`org.simpleframework.xml.core.FieldContact.field` @type ^`java.lang.reflect.Field` := v2 @kind object;
  #L3e57d8.  v1.`org.simpleframework.xml.core.FieldContact.list` @type ^`java.lang.annotation.Annotation`[] := v4 @kind object;
  #L3e57dc.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `getCache`(`org.simpleframework.xml.core.FieldContact` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.getCache:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e5748.  v0:= v6.`org.simpleframework.xml.core.FieldContact.cache` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3e574c.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/util/Cache;.isEmpty:()Z` @kind interface;
  #L3e5752.  v0:= temp;
  #L3e5754.  if v0 == 0 then goto L3e5780;
  #L3e5758.  v0:= v6.`org.simpleframework.xml.core.FieldContact.list` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L3e575c.  v1:= length @variable v0;
  #L3e575e.  v2:= 0I;
  #L3e5760.  if v2 >= v1 then goto L3e5780;
  #L3e5764.  v3:= v0[v2] @kind object;
  #L3e5768.  call temp:= `annotationType`(v3) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L3e576e.  v4:= temp @kind object;
  #L3e5770.  v5:= v6.`org.simpleframework.xml.core.FieldContact.cache` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3e5774.  call `cache`(v5, v4, v3) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3e577a.  v2:= v2 + 1;
  #L3e577e.  goto L3e5760;
  #L3e5780.  v0:= v6.`org.simpleframework.xml.core.FieldContact.cache` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3e5784.  call temp:= `fetch`(v0, v7) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e578a.  v7:= temp @kind object;
  #L3e578c.  v7:= (`java.lang.annotation.Annotation`) v7 @kind object;
  #L3e5790.  return v7 @kind object;
}
procedure `java.lang.Object` `get`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5684.  v0:= v1.`org.simpleframework.xml.core.FieldContact.field` @type ^`java.lang.reflect.Field` @kind object;
  #L3e5688.  call temp:= `get`(v0, v2) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e568e.  v2:= temp @kind object;
  #L3e5690.  return v2 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5700.  v0:= v1.`org.simpleframework.xml.core.FieldContact.label` @type ^`java.lang.annotation.Annotation` @kind object;
  #L3e5704.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5718.  v0:= v1.`org.simpleframework.xml.core.FieldContact.label` @type ^`java.lang.annotation.Annotation` @kind object;
  #L3e571c.  call temp:= `annotationType`(v0) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L3e5722.  v0:= temp @kind object;
  #L3e5724.  if v2 != v0 then goto L3e572e;
  #L3e5728.  v2:= v1.`org.simpleframework.xml.core.FieldContact.label` @type ^`java.lang.annotation.Annotation` @kind object;
  #L3e572c.  return v2 @kind object;
  #L3e572e.  call temp:= `getCache`(v1, v2) @signature `Lorg/simpleframework/xml/core/FieldContact;.getCache:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3e5734.  v2:= temp @kind object;
  #L3e5736.  return v2 @kind object;
}
procedure `java.lang.Class` `getDeclaringClass`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getDeclaringClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5604.  v0:= v1.`org.simpleframework.xml.core.FieldContact.field` @type ^`java.lang.reflect.Field` @kind object;
  #L3e5608.  call temp:= `getDeclaringClass`(v0) @signature `Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L3e560e.  v0:= temp @kind object;
  #L3e5610.  return v0 @kind object;
}
procedure `java.lang.Class` `getDependent`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getDependent:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5624.  v0:= v1.`org.simpleframework.xml.core.FieldContact.field` @type ^`java.lang.reflect.Field` @kind object;
  #L3e5628.  call temp:= `getDependent`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependent:(Ljava/lang/reflect/Field;)Ljava/lang/Class;` @kind static;
  #L3e562e.  v0:= temp @kind object;
  #L3e5630.  return v0 @kind object;
}
procedure `java.lang.Class`[] `getDependents`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getDependents:()[Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5664.  v0:= v1.`org.simpleframework.xml.core.FieldContact.field` @type ^`java.lang.reflect.Field` @kind object;
  #L3e5668.  call temp:= `getDependents`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependents:(Ljava/lang/reflect/Field;)[Ljava/lang/Class;` @kind static;
  #L3e566e.  v0:= temp @kind object;
  #L3e5670.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e56a4.  v0:= v1.`org.simpleframework.xml.core.FieldContact.name` @type ^`java.lang.String` @kind object;
  #L3e56a8.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5644.  v0:= v1.`org.simpleframework.xml.core.FieldContact.field` @type ^`java.lang.reflect.Field` @kind object;
  #L3e5648.  call temp:= `getType`(v0) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L3e564e.  v0:= temp @kind object;
  #L3e5650.  return v0 @kind object;
}
procedure `boolean` `isFinal`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.isFinal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5594.  v0:= v1.`org.simpleframework.xml.core.FieldContact.modifier` @type ^`int`;
  #L3e5598.  call temp:= `isFinal`(v0) @signature `Ljava/lang/reflect/Modifier;.isFinal:(I)Z` @kind static;
  #L3e559e.  v0:= temp;
  #L3e55a0.  return v0;
}
procedure `boolean` `isReadOnly`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.isReadOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e55b4.  call temp:= `isStatic`(v1) @signature `Lorg/simpleframework/xml/core/FieldContact;.isStatic:()Z` @kind virtual;
  #L3e55ba.  v0:= temp;
  #L3e55bc.  if v0 != 0 then goto L3e55d0;
  #L3e55c0.  call temp:= `isFinal`(v1) @signature `Lorg/simpleframework/xml/core/FieldContact;.isFinal:()Z` @kind virtual;
  #L3e55c6.  v0:= temp;
  #L3e55c8.  if v0 == 0 then goto L3e55d0;
  #L3e55cc.  v0:= 1I;
  #L3e55ce.  goto L3e55d2;
  #L3e55d0.  v0:= 0I;
  #L3e55d2.  return v0;
}
procedure `boolean` `isStatic`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.isStatic:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e55e4.  v0:= v1.`org.simpleframework.xml.core.FieldContact.modifier` @type ^`int`;
  #L3e55e8.  call temp:= `isStatic`(v0) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L3e55ee.  v0:= temp;
  #L3e55f0.  return v0;
}
procedure `void` `set`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e57f0.  call temp:= `isFinal`(v1) @signature `Lorg/simpleframework/xml/core/FieldContact;.isFinal:()Z` @kind virtual;
  #L3e57f6.  v0:= temp;
  #L3e57f8.  if v0 != 0 then goto L3e5806;
  #L3e57fc.  v0:= v1.`org.simpleframework.xml.core.FieldContact.field` @type ^`java.lang.reflect.Field` @kind object;
  #L3e5800.  call `set`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L3e5806.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.FieldContact` v3 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e56bc.  v0:= 2I;
  #L3e56be.  v0:= new `java.lang.Object`[v0];
  #L3e56c2.  call temp:= `getName`(v3) @signature `Lorg/simpleframework/xml/core/FieldContact;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e56c8.  v1:= temp @kind object;
  #L3e56ca.  v2:= 0I;
  #L3e56cc.  v0[v2]:= v1 @kind object;
  #L3e56d0.  v1:= v3.`org.simpleframework.xml.core.FieldContact.field` @type ^`java.lang.reflect.Field` @kind object;
  #L3e56d4.  call temp:= `toString`(v1) @signature `Ljava/lang/reflect/Field;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e56da.  v1:= temp @kind object;
  #L3e56dc.  v2:= 1I;
  #L3e56de.  v0[v2]:= v1 @kind object;
  #L3e56e2.  v1:= "field '%s' %s" @kind object;
  #L3e56e6.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e56ec.  v0:= temp @kind object;
  #L3e56ee.  return v0 @kind object;
}
