record `org.simpleframework.xml.core.ElementLabel` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.TemplateLabel` @kind class {
  `org.simpleframework.xml.core.Expression` `org.simpleframework.xml.core.ElementLabel.cache` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.ElementLabel.data` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Decorator` `org.simpleframework.xml.core.ElementLabel.decorator` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Introspector` `org.simpleframework.xml.core.ElementLabel.detail` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.ElementLabel.expect` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.ElementLabel.format` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Element` `org.simpleframework.xml.core.ElementLabel.label` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.ElementLabel.name` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.ElementLabel.override` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.ElementLabel.path` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.ElementLabel.required` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.ElementLabel.type` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ElementLabel` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `org.simpleframework.xml.Element` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ElementLabel;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/Element;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e2cfc.  call `<init>`(v1) @signature `Lorg/simpleframework/xml/core/TemplateLabel;.<init>:()V` @kind direct;
  #L3e2d02.  v0:= new `org.simpleframework.xml.core.Introspector`;
  #L3e2d06.  call `<init>`(v0, v2, v1, v4) @signature `Lorg/simpleframework/xml/core/Introspector;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L3e2d0c.  v1.`org.simpleframework.xml.core.ElementLabel.detail` @type ^`org.simpleframework.xml.core.Introspector` := v0 @kind object;
  #L3e2d10.  v0:= new `org.simpleframework.xml.core.Qualifier`;
  #L3e2d14.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Qualifier;.<init>:(Lorg/simpleframework/xml/core/Contact;)V` @kind direct;
  #L3e2d1a.  v1.`org.simpleframework.xml.core.ElementLabel.decorator` @type ^`org.simpleframework.xml.core.Decorator` := v0 @kind object;
  #L3e2d1e.  call temp:= `required`(v3) @signature `Lorg/simpleframework/xml/Element;.required:()Z` @kind interface;
  #L3e2d24.  v0:= temp;
  #L3e2d26.  v1.`org.simpleframework.xml.core.ElementLabel.required` @type ^`boolean` := v0 @kind boolean;
  #L3e2d2a.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e2d30.  v2:= temp @kind object;
  #L3e2d32.  v1.`org.simpleframework.xml.core.ElementLabel.type` @type ^`java.lang.Class` := v2 @kind object;
  #L3e2d36.  call temp:= `name`(v3) @signature `Lorg/simpleframework/xml/Element;.name:()Ljava/lang/String;` @kind interface;
  #L3e2d3c.  v2:= temp @kind object;
  #L3e2d3e.  v1.`org.simpleframework.xml.core.ElementLabel.override` @type ^`java.lang.String` := v2 @kind object;
  #L3e2d42.  call temp:= `type`(v3) @signature `Lorg/simpleframework/xml/Element;.type:()Ljava/lang/Class;` @kind interface;
  #L3e2d48.  v2:= temp @kind object;
  #L3e2d4a.  v1.`org.simpleframework.xml.core.ElementLabel.expect` @type ^`java.lang.Class` := v2 @kind object;
  #L3e2d4e.  call temp:= `data`(v3) @signature `Lorg/simpleframework/xml/Element;.data:()Z` @kind interface;
  #L3e2d54.  v2:= temp;
  #L3e2d56.  v1.`org.simpleframework.xml.core.ElementLabel.data` @type ^`boolean` := v2 @kind boolean;
  #L3e2d5a.  v1.`org.simpleframework.xml.core.ElementLabel.format` @type ^`org.simpleframework.xml.stream.Format` := v4 @kind object;
  #L3e2d5e.  v1.`org.simpleframework.xml.core.ElementLabel.label` @type ^`org.simpleframework.xml.Element` := v3 @kind object;
  #L3e2d62.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.ElementLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getAnnotation:()Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2bf4.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.label` @type ^`org.simpleframework.xml.Element` @kind object;
  #L3e2bf8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Contact` `getContact`(`org.simpleframework.xml.core.ElementLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getContact:()Lorg/simpleframework/xml/core/Contact;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2c0c.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.detail` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L3e2c10.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Introspector;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind virtual;
  #L3e2c16.  v0:= temp @kind object;
  #L3e2c18.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Converter` `getConverter`(`org.simpleframework.xml.core.ElementLabel` v3 @kind this, `org.simpleframework.xml.core.Context` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e2c2c.  call temp:= `getContact`(v3) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind virtual;
  #L3e2c32.  v0:= temp @kind object;
  #L3e2c34.  call temp:= `isPrimitive`(v4, v0) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Lorg/simpleframework/xml/strategy/Type;)Z` @kind interface;
  #L3e2c3a.  v1:= temp;
  #L3e2c3c.  if v1 == 0 then goto L3e2c4c;
  #L3e2c40.  v1:= new `org.simpleframework.xml.core.Primitive`;
  #L3e2c44.  call `<init>`(v1, v4, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3e2c4a.  return v1 @kind object;
  #L3e2c4c.  v1:= v3.`org.simpleframework.xml.core.ElementLabel.expect` @type ^`java.lang.Class` @kind object;
  #L3e2c50.  v2:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L3e2c54.  if v1 != v2 then goto L3e2c64;
  #L3e2c58.  v1:= new `org.simpleframework.xml.core.Composite`;
  #L3e2c5c.  call `<init>`(v1, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3e2c62.  return v1 @kind object;
  #L3e2c64.  v2:= new `org.simpleframework.xml.core.Composite`;
  #L3e2c68.  call `<init>`(v2, v4, v0, v1) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L3e2c6e.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Decorator` `getDecorator`(`org.simpleframework.xml.core.ElementLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2c80.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.decorator` @type ^`org.simpleframework.xml.core.Decorator` @kind object;
  #L3e2c84.  return v0 @kind object;
}
procedure `java.lang.Object` `getEmpty`(`org.simpleframework.xml.core.ElementLabel` v0 @kind this, `org.simpleframework.xml.core.Context` v1 @kind object) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3e2b28.  v1:= 0I;
  #L3e2b2a.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getExpression`(`org.simpleframework.xml.core.ElementLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2c98.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.cache` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L3e2c9c.  if v0 != 0 then goto L3e2cb0;
  #L3e2ca0.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.detail` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L3e2ca4.  call temp:= `getExpression`(v0) @signature `Lorg/simpleframework/xml/core/Introspector;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L3e2caa.  v0:= temp @kind object;
  #L3e2cac.  v1.`org.simpleframework.xml.core.ElementLabel.cache` @type ^`org.simpleframework.xml.core.Expression` := v0 @kind object;
  #L3e2cb0.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.cache` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L3e2cb4.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.ElementLabel` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2b3c.  v0:= v2.`org.simpleframework.xml.core.ElementLabel.name` @type ^`java.lang.String` @kind object;
  #L3e2b40.  if v0 != 0 then goto L3e2b68;
  #L3e2b44.  v0:= v2.`org.simpleframework.xml.core.ElementLabel.format` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L3e2b48.  call temp:= `getStyle`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L3e2b4e.  v0:= temp @kind object;
  #L3e2b50.  v1:= v2.`org.simpleframework.xml.core.ElementLabel.detail` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L3e2b54.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/core/Introspector;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e2b5a.  v1:= temp @kind object;
  #L3e2b5c.  call temp:= `getElement`(v0, v1) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e2b62.  v0:= temp @kind object;
  #L3e2b64.  v2.`org.simpleframework.xml.core.ElementLabel.name` @type ^`java.lang.String` := v0 @kind object;
  #L3e2b68.  v0:= v2.`org.simpleframework.xml.core.ElementLabel.name` @type ^`java.lang.String` @kind object;
  #L3e2b6c.  return v0 @kind object;
}
procedure `java.lang.String` `getOverride`(`org.simpleframework.xml.core.ElementLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getOverride:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2b80.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.override` @type ^`java.lang.String` @kind object;
  #L3e2b84.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.ElementLabel` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2b98.  v0:= v2.`org.simpleframework.xml.core.ElementLabel.path` @type ^`java.lang.String` @kind object;
  #L3e2b9c.  if v0 != 0 then goto L3e2bbc;
  #L3e2ba0.  call temp:= `getExpression`(v2) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L3e2ba6.  v0:= temp @kind object;
  #L3e2ba8.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e2bae.  v1:= temp @kind object;
  #L3e2bb0.  call temp:= `getElement`(v0, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e2bb6.  v0:= temp @kind object;
  #L3e2bb8.  v2.`org.simpleframework.xml.core.ElementLabel.path` @type ^`java.lang.String` := v0 @kind object;
  #L3e2bbc.  v0:= v2.`org.simpleframework.xml.core.ElementLabel.path` @type ^`java.lang.String` @kind object;
  #L3e2bc0.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.ElementLabel` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2b04.  v0:= v2.`org.simpleframework.xml.core.ElementLabel.expect` @type ^`java.lang.Class` @kind object;
  #L3e2b08.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L3e2b0c.  if v0 != v1 then goto L3e2b14;
  #L3e2b10.  v0:= v2.`org.simpleframework.xml.core.ElementLabel.type` @type ^`java.lang.Class` @kind object;
  #L3e2b14.  return v0 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getType`(`org.simpleframework.xml.core.ElementLabel` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getType:(Ljava/lang/Class;)Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2cc8.  call temp:= `getContact`(v2) @signature `Lorg/simpleframework/xml/core/ElementLabel;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind virtual;
  #L3e2cce.  v3:= temp @kind object;
  #L3e2cd0.  v0:= v2.`org.simpleframework.xml.core.ElementLabel.expect` @type ^`java.lang.Class` @kind object;
  #L3e2cd4.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L3e2cd8.  if v0 != v1 then goto L3e2cde;
  #L3e2cdc.  return v3 @kind object;
  #L3e2cde.  v1:= new `org.simpleframework.xml.core.OverrideType`;
  #L3e2ce2.  call `<init>`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/OverrideType;.<init>:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L3e2ce8.  return v1 @kind object;
}
procedure `boolean` `isData`(`org.simpleframework.xml.core.ElementLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.isData:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2ad4.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.data` @type ^`boolean` @kind boolean;
  #L3e2ad8.  return v0;
}
procedure `boolean` `isRequired`(`org.simpleframework.xml.core.ElementLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.isRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2aec.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.required` @type ^`boolean` @kind boolean;
  #L3e2af0.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.ElementLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ElementLabel;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2bd4.  v0:= v1.`org.simpleframework.xml.core.ElementLabel.detail` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L3e2bd8.  call temp:= `toString`(v0) @signature `Lorg/simpleframework/xml/core/Introspector;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2bde.  v0:= temp @kind object;
  #L3e2be0.  return v0 @kind object;
}
