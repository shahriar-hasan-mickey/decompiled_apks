record `org.simpleframework.xml.core.DetailExtractor` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.DetailExtractor.details` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.DetailExtractor.fields` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.DetailExtractor.methods` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.DefaultType` `org.simpleframework.xml.core.DetailExtractor.override` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.DetailExtractor.support` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailExtractor` v1 @kind this, `org.simpleframework.xml.core.Support` v2 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e2094.  v0:= 0I;
  #L3e2096.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L3e209c.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailExtractor` v1 @kind this, `org.simpleframework.xml.core.Support` v2 @kind object, `org.simpleframework.xml.DefaultType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e20b0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e20b6.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L3e20ba.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L3e20c0.  v1.`org.simpleframework.xml.core.DetailExtractor.methods` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L3e20c4.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L3e20c8.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L3e20ce.  v1.`org.simpleframework.xml.core.DetailExtractor.fields` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L3e20d2.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L3e20d6.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L3e20dc.  v1.`org.simpleframework.xml.core.DetailExtractor.details` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L3e20e0.  v1.`org.simpleframework.xml.core.DetailExtractor.override` @type ^`org.simpleframework.xml.DefaultType` := v3 @kind object;
  #L3e20e4.  v1.`org.simpleframework.xml.core.DetailExtractor.support` @type ^`org.simpleframework.xml.core.Support` := v2 @kind object;
  #L3e20e8.  return @kind void;
}
procedure `org.simpleframework.xml.core.ContactList` `getFields`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e1fb8.  v0:= new `org.simpleframework.xml.core.FieldScanner`;
  #L3e1fbc.  v1:= v2.`org.simpleframework.xml.core.DetailExtractor.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3e1fc0.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/FieldScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3e1fc6.  if v4 == 0 then goto L3e1fd4;
  #L3e1fca.  v4:= v2.`org.simpleframework.xml.core.DetailExtractor.fields` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3e1fce.  call `cache`(v4, v3, v0) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3e1fd4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getMethods`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e2024.  v0:= new `org.simpleframework.xml.core.MethodScanner`;
  #L3e2028.  v1:= v2.`org.simpleframework.xml.core.DetailExtractor.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3e202c.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/MethodScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3e2032.  if v4 == 0 then goto L3e2040;
  #L3e2036.  v4:= v2.`org.simpleframework.xml.core.DetailExtractor.methods` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3e203a.  call `cache`(v4, v3, v0) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3e2040.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Detail` `getDetail`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2054.  v0:= v2.`org.simpleframework.xml.core.DetailExtractor.details` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3e2058.  call temp:= `fetch`(v0, v3) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e205e.  v0:= temp @kind object;
  #L3e2060.  v0:= (`org.simpleframework.xml.core.Detail`) v0 @kind object;
  #L3e2064.  if v0 != 0 then goto L3e2080;
  #L3e2068.  v0:= new `org.simpleframework.xml.core.DetailScanner`;
  #L3e206c.  v1:= v2.`org.simpleframework.xml.core.DetailExtractor.override` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L3e2070.  call `<init>`(v0, v3, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L3e2076.  v1:= v2.`org.simpleframework.xml.core.DetailExtractor.details` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3e207a.  call `cache`(v1, v3, v0) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3e2080.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getFields`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1f7c.  v0:= v2.`org.simpleframework.xml.core.DetailExtractor.fields` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3e1f80.  call temp:= `fetch`(v0, v3) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e1f86.  v0:= temp @kind object;
  #L3e1f88.  v0:= (`org.simpleframework.xml.core.ContactList`) v0 @kind object;
  #L3e1f8c.  if v0 != 0 then goto L3e1fa4;
  #L3e1f90.  call temp:= `getDetail`(v2, v3) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L3e1f96.  v1:= temp @kind object;
  #L3e1f98.  if v1 == 0 then goto L3e1fa4;
  #L3e1f9c.  call temp:= `getFields`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/ContactList;` @kind direct;
  #L3e1fa2.  v0:= temp @kind object;
  #L3e1fa4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getMethods`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1fe8.  v0:= v2.`org.simpleframework.xml.core.DetailExtractor.methods` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L3e1fec.  call temp:= `fetch`(v0, v3) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e1ff2.  v0:= temp @kind object;
  #L3e1ff4.  v0:= (`org.simpleframework.xml.core.ContactList`) v0 @kind object;
  #L3e1ff8.  if v0 != 0 then goto L3e2010;
  #L3e1ffc.  call temp:= `getDetail`(v2, v3) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L3e2002.  v1:= temp @kind object;
  #L3e2004.  if v1 == 0 then goto L3e2010;
  #L3e2008.  call temp:= `getMethods`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/ContactList;` @kind direct;
  #L3e200e.  v0:= temp @kind object;
  #L3e2010.  return v0 @kind object;
}
