record `org.simpleframework.xml.core.FieldScanner` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.ContactList` @kind class {
  `org.simpleframework.xml.core.ContactMap` `org.simpleframework.xml.core.FieldScanner.done` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.AnnotationFactory` `org.simpleframework.xml.core.FieldScanner.factory` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.FieldScanner.support` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e59c4.  call `<init>`(v1) @signature `Lorg/simpleframework/xml/core/ContactList;.<init>:()V` @kind direct;
  #L3e59ca.  v0:= new `org.simpleframework.xml.core.AnnotationFactory`;
  #L3e59ce.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3e59d4.  v1.`org.simpleframework.xml.core.FieldScanner.factory` @type ^`org.simpleframework.xml.core.AnnotationFactory` := v0 @kind object;
  #L3e59d8.  v0:= new `org.simpleframework.xml.core.ContactMap`;
  #L3e59dc.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/ContactMap;.<init>:()V` @kind direct;
  #L3e59e2.  v1.`org.simpleframework.xml.core.FieldScanner.done` @type ^`org.simpleframework.xml.core.ContactMap` := v0 @kind object;
  #L3e59e6.  v1.`org.simpleframework.xml.core.FieldScanner.support` @type ^`org.simpleframework.xml.core.Support` := v3 @kind object;
  #L3e59ea.  call `scan`(v1, v2) @signature `Lorg/simpleframework/xml/core/FieldScanner;.scan:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3e59f0.  return @kind void;
}
procedure `void` `build`(`org.simpleframework.xml.core.FieldScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/FieldScanner;.build:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e5a04.  v0:= v2.`org.simpleframework.xml.core.FieldScanner.done` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L3e5a08.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ContactMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e5a0e.  v0:= temp @kind object;
  #L3e5a10.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e5a16.  v1:= temp;
  #L3e5a18.  if v1 == 0 then goto L3e5a30;
  #L3e5a1c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e5a22.  v1:= temp @kind object;
  #L3e5a24.  v1:= (`org.simpleframework.xml.core.Contact`) v1 @kind object;
  #L3e5a28.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e5a2e.  goto L3e5a10;
  #L3e5a30.  return @kind void;
}
procedure `void` `extend`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.DefaultType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.extend:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e5a44.  v0:= v1.`org.simpleframework.xml.core.FieldScanner.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3e5a48.  call temp:= `getFields`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L3e5a4e.  v2:= temp @kind object;
  #L3e5a50.  if v2 == 0 then goto L3e5a5a;
  #L3e5a54.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L3e5a5a.  return @kind void;
}
procedure `void` `extract`(`org.simpleframework.xml.core.FieldScanner` v5 @kind this, `org.simpleframework.xml.core.Detail` v6 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.extract:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e5a6c.  call temp:= `getFields`(v6) @signature `Lorg/simpleframework/xml/core/Detail;.getFields:()Ljava/util/List;` @kind interface;
  #L3e5a72.  v6:= temp @kind object;
  #L3e5a74.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e5a7a.  v6:= temp @kind object;
  #L3e5a7c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e5a82.  v0:= temp;
  #L3e5a84.  if v0 == 0 then goto L3e5abc;
  #L3e5a88.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e5a8e.  v0:= temp @kind object;
  #L3e5a90.  v0:= (`org.simpleframework.xml.core.FieldDetail`) v0 @kind object;
  #L3e5a94.  call temp:= `getAnnotations`(v0) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3e5a9a.  v1:= temp @kind object;
  #L3e5a9c.  call temp:= `getField`(v0) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getField:()Ljava/lang/reflect/Field;` @kind virtual;
  #L3e5aa2.  v0:= temp @kind object;
  #L3e5aa4.  v2:= length @variable v1;
  #L3e5aa6.  v3:= 0I;
  #L3e5aa8.  if v3 >= v2 then goto L3e5a7c;
  #L3e5aac.  v4:= v1[v3] @kind object;
  #L3e5ab0.  call `scan`(v5, v0, v4, v1) @signature `Lorg/simpleframework/xml/core/FieldScanner;.scan:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5ab6.  v3:= v3 + 1;
  #L3e5aba.  goto L3e5aa8;
  #L3e5abc.  return @kind void;
}
procedure `void` `extract`(`org.simpleframework.xml.core.FieldScanner` v3 @kind this, `org.simpleframework.xml.core.Detail` v4 @kind object, `org.simpleframework.xml.DefaultType` v5 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.extract:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e5ad0.  call temp:= `getFields`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getFields:()Ljava/util/List;` @kind interface;
  #L3e5ad6.  v4:= temp @kind object;
  #L3e5ad8.  v0:= `@@org.simpleframework.xml.DefaultType.FIELD` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L3e5adc.  if v5 != v0 then goto L3e5b38;
  #L3e5ae0.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e5ae6.  v4:= temp @kind object;
  #L3e5ae8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e5aee.  v5:= temp;
  #L3e5af0.  if v5 == 0 then goto L3e5b38;
  #L3e5af4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e5afa.  v5:= temp @kind object;
  #L3e5afc.  v5:= (`org.simpleframework.xml.core.FieldDetail`) v5 @kind object;
  #L3e5b00.  call temp:= `getAnnotations`(v5) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3e5b06.  v0:= temp @kind object;
  #L3e5b08.  call temp:= `getField`(v5) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getField:()Ljava/lang/reflect/Field;` @kind virtual;
  #L3e5b0e.  v5:= temp @kind object;
  #L3e5b10.  call temp:= `getType`(v5) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L3e5b16.  v1:= temp @kind object;
  #L3e5b18.  call temp:= `isStatic`(v3, v5) @signature `Lorg/simpleframework/xml/core/FieldScanner;.isStatic:(Ljava/lang/reflect/Field;)Z` @kind direct;
  #L3e5b1e.  v2:= temp;
  #L3e5b20.  if v2 != 0 then goto L3e5ae8;
  #L3e5b24.  call temp:= `isTransient`(v3, v5) @signature `Lorg/simpleframework/xml/core/FieldScanner;.isTransient:(Ljava/lang/reflect/Field;)Z` @kind direct;
  #L3e5b2a.  v2:= temp;
  #L3e5b2c.  if v2 != 0 then goto L3e5ae8;
  #L3e5b30.  call `process`(v3, v5, v1, v0) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5b36.  goto L3e5ae8;
  #L3e5b38.  return @kind void;
}
procedure `void` `insert`(`org.simpleframework.xml.core.FieldScanner` v2 @kind this, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Contact` v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.insert:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Contact;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e5b4c.  v0:= v2.`org.simpleframework.xml.core.FieldScanner.done` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L3e5b50.  call temp:= `remove`(v0, v3) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e5b56.  v0:= temp @kind object;
  #L3e5b58.  v0:= (`org.simpleframework.xml.core.Contact`) v0 @kind object;
  #L3e5b5c.  if v0 == 0 then goto L3e5b6e;
  #L3e5b60.  call temp:= `isText`(v2, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.isText:(Lorg/simpleframework/xml/core/Contact;)Z` @kind direct;
  #L3e5b66.  v1:= temp;
  #L3e5b68.  if v1 == 0 then goto L3e5b6e;
  #L3e5b6c.  v4:= v0 @kind object;
  #L3e5b6e.  v0:= v2.`org.simpleframework.xml.core.FieldScanner.done` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L3e5b72.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e5b78.  return @kind void;
}
procedure `boolean` `isStatic`(`org.simpleframework.xml.core.FieldScanner` v0 @kind this, `java.lang.reflect.Field` v1 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.isStatic:(Ljava/lang/reflect/Field;)Z` @AccessFlag PRIVATE {
    temp;

  #L3e5944.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L3e594a.  v1:= temp;
  #L3e594c.  call temp:= `isStatic`(v1) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L3e5952.  v1:= temp;
  #L3e5954.  if v1 == 0 then goto L3e595c;
  #L3e5958.  v1:= 1I;
  #L3e595a.  return v1;
  #L3e595c.  v1:= 0I;
  #L3e595e.  return v1;
}
procedure `boolean` `isText`(`org.simpleframework.xml.core.FieldScanner` v0 @kind this, `org.simpleframework.xml.core.Contact` v1 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.isText:(Lorg/simpleframework/xml/core/Contact;)Z` @AccessFlag PRIVATE {
    temp;

  #L3e5970.  call temp:= `getAnnotation`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L3e5976.  v1:= temp @kind object;
  #L3e5978.  v1:= instanceof @variable v1 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L3e597c.  if v1 == 0 then goto L3e5984;
  #L3e5980.  v1:= 1I;
  #L3e5982.  return v1;
  #L3e5984.  v1:= 0I;
  #L3e5986.  return v1;
}
procedure `boolean` `isTransient`(`org.simpleframework.xml.core.FieldScanner` v0 @kind this, `java.lang.reflect.Field` v1 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.isTransient:(Ljava/lang/reflect/Field;)Z` @AccessFlag PRIVATE {
    temp;

  #L3e5998.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L3e599e.  v1:= temp;
  #L3e59a0.  call temp:= `isTransient`(v1) @signature `Ljava/lang/reflect/Modifier;.isTransient:(I)Z` @kind static;
  #L3e59a6.  v1:= temp;
  #L3e59a8.  if v1 == 0 then goto L3e59b0;
  #L3e59ac.  v1:= 1I;
  #L3e59ae.  return v1;
  #L3e59b0.  v1:= 0I;
  #L3e59b2.  return v1;
}
procedure `void` `process`(`org.simpleframework.xml.core.FieldScanner` v2 @kind this, `java.lang.reflect.Field` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.annotation.Annotation`[] v5 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e5b8c.  call temp:= `getDependents`(v3) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependents:(Ljava/lang/reflect/Field;)[Ljava/lang/Class;` @kind static;
  #L3e5b92.  v0:= temp @kind object;
  #L3e5b94.  v1:= v2.`org.simpleframework.xml.core.FieldScanner.factory` @type ^`org.simpleframework.xml.core.AnnotationFactory` @kind object;
  #L3e5b98.  call temp:= `getInstance`(v1, v4, v0) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3e5b9e.  v4:= temp @kind object;
  #L3e5ba0.  if v4 == 0 then goto L3e5baa;
  #L3e5ba4.  call `process`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5baa.  return @kind void;
}
procedure `void` `process`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e5bbc.  v0:= new `org.simpleframework.xml.core.FieldContact`;
  #L3e5bc0.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldContact;.<init>:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5bc6.  v3:= new `org.simpleframework.xml.core.FieldScanner$FieldKey`;
  #L3e5bca.  call `<init>`(v3, v2) @signature `Lorg/simpleframework/xml/core/FieldScanner$FieldKey;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L3e5bd0.  call temp:= `isAccessible`(v2) @signature `Ljava/lang/reflect/Field;.isAccessible:()Z` @kind virtual;
  #L3e5bd6.  v4:= temp;
  #L3e5bd8.  if v4 != 0 then goto L3e5be4;
  #L3e5bdc.  v4:= 1I;
  #L3e5bde.  call `setAccessible`(v2, v4) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L3e5be4.  call `insert`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/FieldScanner;.insert:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Contact;)V` @kind direct;
  #L3e5bea.  return @kind void;
}
procedure `void` `remove`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.remove:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e5bfc.  v3:= v1.`org.simpleframework.xml.core.FieldScanner.done` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L3e5c00.  v0:= new `org.simpleframework.xml.core.FieldScanner$FieldKey`;
  #L3e5c04.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/FieldScanner$FieldKey;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L3e5c0a.  call temp:= `remove`(v3, v0) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e5c10.  return @kind void;
}
procedure `void` `scan`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.scan:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e5c24.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Attribute` @kind boolean;
  #L3e5c28.  if v0 == 0 then goto L3e5c32;
  #L3e5c2c.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5c32.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L3e5c36.  if v0 == 0 then goto L3e5c40;
  #L3e5c3a.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5c40.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L3e5c44.  if v0 == 0 then goto L3e5c4e;
  #L3e5c48.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5c4e.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L3e5c52.  if v0 == 0 then goto L3e5c5c;
  #L3e5c56.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5c5c.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementList` @kind boolean;
  #L3e5c60.  if v0 == 0 then goto L3e5c6a;
  #L3e5c64.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5c6a.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementArray` @kind boolean;
  #L3e5c6e.  if v0 == 0 then goto L3e5c78;
  #L3e5c72.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5c78.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMap` @kind boolean;
  #L3e5c7c.  if v0 == 0 then goto L3e5c86;
  #L3e5c80.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5c86.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Element` @kind boolean;
  #L3e5c8a.  if v0 == 0 then goto L3e5c94;
  #L3e5c8e.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5c94.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Version` @kind boolean;
  #L3e5c98.  if v0 == 0 then goto L3e5ca2;
  #L3e5c9c.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5ca2.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L3e5ca6.  if v0 == 0 then goto L3e5cb0;
  #L3e5caa.  call `process`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.process:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5cb0.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.Transient` @kind boolean;
  #L3e5cb4.  if v4 == 0 then goto L3e5cbe;
  #L3e5cb8.  call `remove`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/FieldScanner;.remove:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e5cbe.  return @kind void;
}
procedure `void` `scan`(`org.simpleframework.xml.core.FieldScanner` v3 @kind this, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.scan:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e5cd0.  call temp:= `getOverride`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getOverride:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L3e5cd6.  v0:= temp @kind object;
  #L3e5cd8.  call temp:= `getAccess`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getAccess:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L3e5cde.  v1:= temp @kind object;
  #L3e5ce0.  call temp:= `getSuper`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getSuper:()Ljava/lang/Class;` @kind interface;
  #L3e5ce6.  v2:= temp @kind object;
  #L3e5ce8.  if v2 == 0 then goto L3e5cf2;
  #L3e5cec.  call `extend`(v3, v2, v0) @signature `Lorg/simpleframework/xml/core/FieldScanner;.extend:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L3e5cf2.  call `extract`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/FieldScanner;.extract:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L3e5cf8.  call `extract`(v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.extract:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3e5cfe.  call `build`(v3) @signature `Lorg/simpleframework/xml/core/FieldScanner;.build:()V` @kind direct;
  #L3e5d04.  return @kind void;
}
