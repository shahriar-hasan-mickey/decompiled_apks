record `org.simpleframework.xml.core.Qualifier` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Decorator` @kind interface {
  `org.simpleframework.xml.core.NamespaceDecorator` `org.simpleframework.xml.core.Qualifier.decorator` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Qualifier` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Qualifier;.<init>:(Lorg/simpleframework/xml/core/Contact;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ecd70.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ecd76.  v0:= new `org.simpleframework.xml.core.NamespaceDecorator`;
  #L3ecd7a.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.<init>:()V` @kind direct;
  #L3ecd80.  v1.`org.simpleframework.xml.core.Qualifier.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` := v0 @kind object;
  #L3ecd84.  call `scan`(v1, v2) @signature `Lorg/simpleframework/xml/core/Qualifier;.scan:(Lorg/simpleframework/xml/core/Contact;)V` @kind direct;
  #L3ecd8a.  return @kind void;
}
procedure `void` `namespace`(`org.simpleframework.xml.core.Qualifier` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Qualifier;.namespace:(Lorg/simpleframework/xml/core/Contact;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ecdd4.  v0:= constclass @type ^`org.simpleframework.xml.Namespace` @kind object;
  #L3ecdd8.  call temp:= `getAnnotation`(v2, v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L3ecdde.  v2:= temp @kind object;
  #L3ecde0.  v2:= (`org.simpleframework.xml.Namespace`) v2 @kind object;
  #L3ecde4.  if v2 == 0 then goto L3ecdfc;
  #L3ecde8.  v0:= v1.`org.simpleframework.xml.core.Qualifier.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L3ecdec.  call `set`(v0, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.set:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L3ecdf2.  v0:= v1.`org.simpleframework.xml.core.Qualifier.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L3ecdf6.  call `add`(v0, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L3ecdfc.  return @kind void;
}
procedure `void` `scan`(`org.simpleframework.xml.core.Qualifier` v0 @kind this, `org.simpleframework.xml.core.Contact` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Qualifier;.scan:(Lorg/simpleframework/xml/core/Contact;)V` @AccessFlag PRIVATE {
    temp;

  #L3ece10.  call `namespace`(v0, v1) @signature `Lorg/simpleframework/xml/core/Qualifier;.namespace:(Lorg/simpleframework/xml/core/Contact;)V` @kind direct;
  #L3ece16.  call `scope`(v0, v1) @signature `Lorg/simpleframework/xml/core/Qualifier;.scope:(Lorg/simpleframework/xml/core/Contact;)V` @kind direct;
  #L3ece1c.  return @kind void;
}
procedure `void` `scope`(`org.simpleframework.xml.core.Qualifier` v4 @kind this, `org.simpleframework.xml.core.Contact` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Qualifier;.scope:(Lorg/simpleframework/xml/core/Contact;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ece30.  v0:= constclass @type ^`org.simpleframework.xml.NamespaceList` @kind object;
  #L3ece34.  call temp:= `getAnnotation`(v5, v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L3ece3a.  v5:= temp @kind object;
  #L3ece3c.  v5:= (`org.simpleframework.xml.NamespaceList`) v5 @kind object;
  #L3ece40.  if v5 == 0 then goto L3ece68;
  #L3ece44.  call temp:= `value`(v5) @signature `Lorg/simpleframework/xml/NamespaceList;.value:()[Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L3ece4a.  v5:= temp @kind object;
  #L3ece4c.  v0:= length @variable v5;
  #L3ece4e.  v1:= 0I;
  #L3ece50.  if v1 >= v0 then goto L3ece68;
  #L3ece54.  v2:= v5[v1] @kind object;
  #L3ece58.  v3:= v4.`org.simpleframework.xml.core.Qualifier.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L3ece5c.  call `add`(v3, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L3ece62.  v1:= v1 + 1;
  #L3ece66.  goto L3ece50;
  #L3ece68.  return @kind void;
}
procedure `void` `decorate`(`org.simpleframework.xml.core.Qualifier` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Qualifier;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ecd9c.  v0:= v1.`org.simpleframework.xml.core.Qualifier.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L3ecda0.  call `decorate`(v0, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind virtual;
  #L3ecda6.  return @kind void;
}
procedure `void` `decorate`(`org.simpleframework.xml.core.Qualifier` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `org.simpleframework.xml.core.Decorator` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Qualifier;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Decorator;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ecdb8.  v0:= v1.`org.simpleframework.xml.core.Qualifier.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L3ecdbc.  call `decorate`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Decorator;)V` @kind virtual;
  #L3ecdc2.  return @kind void;
}
