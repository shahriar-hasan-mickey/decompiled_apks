record `org.simpleframework.xml.core.SessionManager` @kind class @AccessFlag PUBLIC {
  `java.lang.ThreadLocal` `org.simpleframework.xml.core.SessionManager.local` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.SessionManager` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SessionManager;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ed508.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ed50e.  v0:= new `java.lang.ThreadLocal`;
  #L3ed512.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L3ed518.  v1.`org.simpleframework.xml.core.SessionManager.local` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L3ed51c.  return @kind void;
}
procedure `org.simpleframework.xml.core.Session` `create`(`org.simpleframework.xml.core.SessionManager` v1 @kind this, `boolean` v2 ) @signature `Lorg/simpleframework/xml/core/SessionManager;.create:(Z)Lorg/simpleframework/xml/core/Session;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ed484.  v0:= new `org.simpleframework.xml.core.SessionManager$Reference`;
  #L3ed488.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.<init>:(Z)V` @kind direct;
  #L3ed48e.  v2:= v1.`org.simpleframework.xml.core.SessionManager.local` @type ^`java.lang.ThreadLocal` @kind object;
  #L3ed492.  call `set`(v2, v0) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L3ed498.  call temp:= `get`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.get:()Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L3ed49e.  v2:= temp @kind object;
  #L3ed4a0.  return v2 @kind object;
}
procedure `void` `close`(`org.simpleframework.xml.core.SessionManager` v3 @kind this) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ed530.  v0:= v3.`org.simpleframework.xml.core.SessionManager.local` @type ^`java.lang.ThreadLocal` @kind object;
  #L3ed534.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ed53a.  v0:= temp @kind object;
  #L3ed53c.  v0:= (`org.simpleframework.xml.core.SessionManager$Reference`) v0 @kind object;
  #L3ed540.  if v0 == 0 then goto L3ed55c;
  #L3ed544.  call temp:= `clear`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.clear:()I` @kind virtual;
  #L3ed54a.  v0:= temp;
  #L3ed54c.  if v0 != 0 then goto L3ed55a;
  #L3ed550.  v0:= v3.`org.simpleframework.xml.core.SessionManager.local` @type ^`java.lang.ThreadLocal` @kind object;
  #L3ed554.  call `remove`(v0) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L3ed55a.  return @kind void;
  #L3ed55c.  v0:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3ed560.  v1:= 0I;
  #L3ed562.  v1:= new `java.lang.Object`[v1];
  #L3ed566.  v2:= "Session does not exist" @kind object;
  #L3ed56a.  call `<init>`(v0, v2, v1) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ed570.  throw v0;
}
procedure `org.simpleframework.xml.core.Session` `open`(`org.simpleframework.xml.core.SessionManager` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:()Lorg/simpleframework/xml/core/Session;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ed4b4.  v0:= 1I;
  #L3ed4b6.  call temp:= `open`(v1, v0) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:(Z)Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L3ed4bc.  v0:= temp @kind object;
  #L3ed4be.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Session` `open`(`org.simpleframework.xml.core.SessionManager` v1 @kind this, `boolean` v2 ) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:(Z)Lorg/simpleframework/xml/core/Session;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ed4d0.  v0:= v1.`org.simpleframework.xml.core.SessionManager.local` @type ^`java.lang.ThreadLocal` @kind object;
  #L3ed4d4.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ed4da.  v0:= temp @kind object;
  #L3ed4dc.  v0:= (`org.simpleframework.xml.core.SessionManager$Reference`) v0 @kind object;
  #L3ed4e0.  if v0 == 0 then goto L3ed4ee;
  #L3ed4e4.  call temp:= `get`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.get:()Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L3ed4ea.  v2:= temp @kind object;
  #L3ed4ec.  return v2 @kind object;
  #L3ed4ee.  call temp:= `create`(v1, v2) @signature `Lorg/simpleframework/xml/core/SessionManager;.create:(Z)Lorg/simpleframework/xml/core/Session;` @kind direct;
  #L3ed4f4.  v2:= temp @kind object;
  #L3ed4f6.  return v2 @kind object;
}
