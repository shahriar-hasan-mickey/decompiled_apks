record `org.simpleframework.xml.core.DetailScanner` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Detail` @kind interface {
  `org.simpleframework.xml.DefaultType` `org.simpleframework.xml.core.DetailScanner.access` @AccessFlag PRIVATE;
  `org.simpleframework.xml.NamespaceList` `org.simpleframework.xml.core.DetailScanner.declaration` @AccessFlag PRIVATE;
  `java.util.List` `org.simpleframework.xml.core.DetailScanner.fields` @AccessFlag PRIVATE;
  `java.lang.annotation.Annotation`[] `org.simpleframework.xml.core.DetailScanner.labels` @AccessFlag PRIVATE;
  `java.util.List` `org.simpleframework.xml.core.DetailScanner.methods` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.DetailScanner.name` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Namespace` `org.simpleframework.xml.core.DetailScanner.namespace` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Order` `org.simpleframework.xml.core.DetailScanner.order` @AccessFlag PRIVATE;
  `org.simpleframework.xml.DefaultType` `org.simpleframework.xml.core.DetailScanner.override` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.DetailScanner.required` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Root` `org.simpleframework.xml.core.DetailScanner.root` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.DetailScanner.strict` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.DetailScanner.type` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e2324.  v0:= 0I;
  #L3e2326.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L3e232c.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.DefaultType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e2340.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e2346.  v0:= new `java.util.LinkedList`;
  #L3e234a.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L3e2350.  v1.`org.simpleframework.xml.core.DetailScanner.methods` @type ^`java.util.List` := v0 @kind object;
  #L3e2354.  v0:= new `java.util.LinkedList`;
  #L3e2358.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L3e235e.  v1.`org.simpleframework.xml.core.DetailScanner.fields` @type ^`java.util.List` := v0 @kind object;
  #L3e2362.  call temp:= `getDeclaredAnnotations`(v2) @signature `Ljava/lang/Class;.getDeclaredAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3e2368.  v0:= temp @kind object;
  #L3e236a.  v1.`org.simpleframework.xml.core.DetailScanner.labels` @type ^`java.lang.annotation.Annotation`[] := v0 @kind object;
  #L3e236e.  v1.`org.simpleframework.xml.core.DetailScanner.override` @type ^`org.simpleframework.xml.DefaultType` := v3 @kind object;
  #L3e2372.  v3:= 1I;
  #L3e2374.  v1.`org.simpleframework.xml.core.DetailScanner.strict` @type ^`boolean` := v3 @kind boolean;
  #L3e2378.  v1.`org.simpleframework.xml.core.DetailScanner.type` @type ^`java.lang.Class` := v2 @kind object;
  #L3e237c.  call `scan`(v1, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.scan:(Ljava/lang/Class;)V` @kind direct;
  #L3e2382.  return @kind void;
}
procedure `void` `access`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this, `java.lang.annotation.Annotation` v2 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.access:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e2394.  if v2 == 0 then goto L3e23b4;
  #L3e2398.  v2:= (`org.simpleframework.xml.Default`) v2 @kind object;
  #L3e239c.  call temp:= `required`(v2) @signature `Lorg/simpleframework/xml/Default;.required:()Z` @kind interface;
  #L3e23a2.  v0:= temp;
  #L3e23a4.  v1.`org.simpleframework.xml.core.DetailScanner.required` @type ^`boolean` := v0 @kind boolean;
  #L3e23a8.  call temp:= `value`(v2) @signature `Lorg/simpleframework/xml/Default;.value:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L3e23ae.  v2:= temp @kind object;
  #L3e23b0.  v1.`org.simpleframework.xml.core.DetailScanner.access` @type ^`org.simpleframework.xml.DefaultType` := v2 @kind object;
  #L3e23b4.  return @kind void;
}
procedure `void` `extract`(`org.simpleframework.xml.core.DetailScanner` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.extract:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e23c8.  v5:= v4.`org.simpleframework.xml.core.DetailScanner.labels` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L3e23cc.  v0:= length @variable v5;
  #L3e23ce.  v1:= 0I;
  #L3e23d0.  if v1 >= v0 then goto L3e2424;
  #L3e23d4.  v2:= v5[v1] @kind object;
  #L3e23d8.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Namespace` @kind boolean;
  #L3e23dc.  if v3 == 0 then goto L3e23e6;
  #L3e23e0.  call `namespace`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.namespace:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e23e6.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.NamespaceList` @kind boolean;
  #L3e23ea.  if v3 == 0 then goto L3e23f4;
  #L3e23ee.  call `scope`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.scope:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e23f4.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Root` @kind boolean;
  #L3e23f8.  if v3 == 0 then goto L3e2402;
  #L3e23fc.  call `root`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.root:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e2402.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Order` @kind boolean;
  #L3e2406.  if v3 == 0 then goto L3e2410;
  #L3e240a.  call `order`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.order:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e2410.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Default` @kind boolean;
  #L3e2414.  if v3 == 0 then goto L3e241e;
  #L3e2418.  call `access`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.access:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e241e.  v1:= v1 + 1;
  #L3e2422.  goto L3e23d0;
  #L3e2424.  return @kind void;
}
procedure `void` `fields`(`org.simpleframework.xml.core.DetailScanner` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.fields:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e2438.  call temp:= `getDeclaredFields`(v5) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L3e243e.  v5:= temp @kind object;
  #L3e2440.  v0:= length @variable v5;
  #L3e2442.  v1:= 0I;
  #L3e2444.  if v1 >= v0 then goto L3e2466;
  #L3e2448.  v2:= v5[v1] @kind object;
  #L3e244c.  v3:= new `org.simpleframework.xml.core.FieldDetail`;
  #L3e2450.  call `<init>`(v3, v2) @signature `Lorg/simpleframework/xml/core/FieldDetail;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L3e2456.  v2:= v4.`org.simpleframework.xml.core.DetailScanner.fields` @type ^`java.util.List` @kind object;
  #L3e245a.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e2460.  v1:= v1 + 1;
  #L3e2464.  goto L3e2444;
  #L3e2466.  return @kind void;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isEmpty:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;

  #L3e20fc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e2102.  v1:= temp;
  #L3e2104.  if v1 != 0 then goto L3e210c;
  #L3e2108.  v1:= 1I;
  #L3e210a.  goto L3e210e;
  #L3e210c.  v1:= 0I;
  #L3e210e.  return v1;
}
procedure `void` `methods`(`org.simpleframework.xml.core.DetailScanner` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.methods:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e2478.  call temp:= `getDeclaredMethods`(v5) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L3e247e.  v5:= temp @kind object;
  #L3e2480.  v0:= length @variable v5;
  #L3e2482.  v1:= 0I;
  #L3e2484.  if v1 >= v0 then goto L3e24a6;
  #L3e2488.  v2:= v5[v1] @kind object;
  #L3e248c.  v3:= new `org.simpleframework.xml.core.MethodDetail`;
  #L3e2490.  call `<init>`(v3, v2) @signature `Lorg/simpleframework/xml/core/MethodDetail;.<init>:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L3e2496.  v2:= v4.`org.simpleframework.xml.core.DetailScanner.methods` @type ^`java.util.List` @kind object;
  #L3e249a.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e24a0.  v1:= v1 + 1;
  #L3e24a4.  goto L3e2484;
  #L3e24a6.  return @kind void;
}
procedure `void` `namespace`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.annotation.Annotation` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.namespace:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;

  #L3e24b8.  if v1 == 0 then goto L3e24c4;
  #L3e24bc.  v1:= (`org.simpleframework.xml.Namespace`) v1 @kind object;
  #L3e24c0.  v0.`org.simpleframework.xml.core.DetailScanner.namespace` @type ^`org.simpleframework.xml.Namespace` := v1 @kind object;
  #L3e24c4.  return @kind void;
}
procedure `void` `order`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.annotation.Annotation` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.order:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;

  #L3e24d8.  if v1 == 0 then goto L3e24e4;
  #L3e24dc.  v1:= (`org.simpleframework.xml.Order`) v1 @kind object;
  #L3e24e0.  v0.`org.simpleframework.xml.core.DetailScanner.order` @type ^`org.simpleframework.xml.Order` := v1 @kind object;
  #L3e24e4.  return @kind void;
}
procedure `void` `root`(`org.simpleframework.xml.core.DetailScanner` v3 @kind this, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.root:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e24f8.  if v4 == 0 then goto L3e253c;
  #L3e24fc.  v4:= (`org.simpleframework.xml.Root`) v4 @kind object;
  #L3e2500.  v0:= v3.`org.simpleframework.xml.core.DetailScanner.type` @type ^`java.lang.Class` @kind object;
  #L3e2504.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3e250a.  v0:= temp @kind object;
  #L3e250c.  call temp:= `name`(v4) @signature `Lorg/simpleframework/xml/Root;.name:()Ljava/lang/String;` @kind interface;
  #L3e2512.  v1:= temp @kind object;
  #L3e2514.  call temp:= `isEmpty`(v3, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isEmpty:(Ljava/lang/String;)Z` @kind direct;
  #L3e251a.  v2:= temp;
  #L3e251c.  if v2 == 0 then goto L3e2528;
  #L3e2520.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3e2526.  v1:= temp @kind object;
  #L3e2528.  call temp:= `strict`(v4) @signature `Lorg/simpleframework/xml/Root;.strict:()Z` @kind interface;
  #L3e252e.  v0:= temp;
  #L3e2530.  v3.`org.simpleframework.xml.core.DetailScanner.strict` @type ^`boolean` := v0 @kind boolean;
  #L3e2534.  v3.`org.simpleframework.xml.core.DetailScanner.root` @type ^`org.simpleframework.xml.Root` := v4 @kind object;
  #L3e2538.  v3.`org.simpleframework.xml.core.DetailScanner.name` @type ^`java.lang.String` := v1 @kind object;
  #L3e253c.  return @kind void;
}
procedure `void` `scan`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.scan:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;

  #L3e2550.  call `methods`(v0, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.methods:(Ljava/lang/Class;)V` @kind direct;
  #L3e2556.  call `fields`(v0, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.fields:(Ljava/lang/Class;)V` @kind direct;
  #L3e255c.  call `extract`(v0, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.extract:(Ljava/lang/Class;)V` @kind direct;
  #L3e2562.  return @kind void;
}
procedure `void` `scope`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.annotation.Annotation` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.scope:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;

  #L3e2574.  if v1 == 0 then goto L3e2580;
  #L3e2578.  v1:= (`org.simpleframework.xml.NamespaceList`) v1 @kind object;
  #L3e257c.  v0.`org.simpleframework.xml.core.DetailScanner.declaration` @type ^`org.simpleframework.xml.NamespaceList` := v1 @kind object;
  #L3e2580.  return @kind void;
}
procedure `org.simpleframework.xml.DefaultType` `getAccess`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getAccess:()Lorg/simpleframework/xml/DefaultType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e228c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.override` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L3e2290.  if v0 == 0 then goto L3e2296;
  #L3e2294.  return v0 @kind object;
  #L3e2296.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.access` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L3e229a.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation`[] `getAnnotations`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2224.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.labels` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L3e2228.  return v0 @kind object;
}
procedure `java.lang.reflect.Constructor`[] `getConstructors`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getConstructors:()[Ljava/lang/reflect/Constructor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e223c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.type` @type ^`java.lang.Class` @kind object;
  #L3e2240.  call temp:= `getDeclaredConstructors`(v0) @signature `Ljava/lang/Class;.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L3e2246.  v0:= temp @kind object;
  #L3e2248.  return v0 @kind object;
}
procedure `java.util.List` `getFields`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getFields:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e225c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.fields` @type ^`java.util.List` @kind object;
  #L3e2260.  return v0 @kind object;
}
procedure `java.util.List` `getMethods`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getMethods:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2274.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.methods` @type ^`java.util.List` @kind object;
  #L3e2278.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e21ec.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.name` @type ^`java.lang.String` @kind object;
  #L3e21f0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Namespace` `getNamespace`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getNamespace:()Lorg/simpleframework/xml/Namespace;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e22c4.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.namespace` @type ^`org.simpleframework.xml.Namespace` @kind object;
  #L3e22c8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.NamespaceList` `getNamespaceList`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getNamespaceList:()Lorg/simpleframework/xml/NamespaceList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e22dc.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.declaration` @type ^`org.simpleframework.xml.NamespaceList` @kind object;
  #L3e22e0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Order` `getOrder`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getOrder:()Lorg/simpleframework/xml/Order;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e22f4.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.order` @type ^`org.simpleframework.xml.Order` @kind object;
  #L3e22f8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.DefaultType` `getOverride`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getOverride:()Lorg/simpleframework/xml/DefaultType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e22ac.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.override` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L3e22b0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Root` `getRoot`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getRoot:()Lorg/simpleframework/xml/Root;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e230c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.root` @type ^`org.simpleframework.xml.Root` @kind object;
  #L3e2310.  return v0 @kind object;
}
procedure `java.lang.Class` `getSuper`(`org.simpleframework.xml.core.DetailScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getSuper:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e21ac.  v0:= v2.`org.simpleframework.xml.core.DetailScanner.type` @type ^`java.lang.Class` @kind object;
  #L3e21b0.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L3e21b6.  v0:= temp @kind object;
  #L3e21b8.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L3e21bc.  if v0 != v1 then goto L3e21c2;
  #L3e21c0.  v0:= 0I;
  #L3e21c2.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e21d4.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.type` @type ^`java.lang.Class` @kind object;
  #L3e21d8.  return v0 @kind object;
}
procedure `boolean` `isInstantiable`(`org.simpleframework.xml.core.DetailScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isInstantiable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2120.  v0:= v2.`org.simpleframework.xml.core.DetailScanner.type` @type ^`java.lang.Class` @kind object;
  #L3e2124.  call temp:= `getModifiers`(v0) @signature `Ljava/lang/Class;.getModifiers:()I` @kind virtual;
  #L3e212a.  v0:= temp;
  #L3e212c.  call temp:= `isStatic`(v0) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L3e2132.  v0:= temp;
  #L3e2134.  v1:= 1I;
  #L3e2136.  if v0 == 0 then goto L3e213c;
  #L3e213a.  return v1;
  #L3e213c.  v0:= v2.`org.simpleframework.xml.core.DetailScanner.type` @type ^`java.lang.Class` @kind object;
  #L3e2140.  call temp:= `isMemberClass`(v0) @signature `Ljava/lang/Class;.isMemberClass:()Z` @kind virtual;
  #L3e2146.  v0:= temp;
  #L3e2148.  v0:= v0 ^~ v1 @kind int;
  #L3e214a.  return v0;
}
procedure `boolean` `isPrimitive`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isPrimitive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e215c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.type` @type ^`java.lang.Class` @kind object;
  #L3e2160.  call temp:= `isPrimitive`(v0) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L3e2166.  v0:= temp;
  #L3e2168.  return v0;
}
procedure `boolean` `isRequired`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e217c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.required` @type ^`boolean` @kind boolean;
  #L3e2180.  return v0;
}
procedure `boolean` `isStrict`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isStrict:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2194.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.strict` @type ^`boolean` @kind boolean;
  #L3e2198.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2204.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.type` @type ^`java.lang.Class` @kind object;
  #L3e2208.  call temp:= `toString`(v0) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e220e.  v0:= temp @kind object;
  #L3e2210.  return v0 @kind object;
}
