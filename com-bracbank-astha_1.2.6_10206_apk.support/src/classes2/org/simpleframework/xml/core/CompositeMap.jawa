record `org.simpleframework.xml.core.CompositeMap` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.Entry` `org.simpleframework.xml.core.CompositeMap.entry` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.MapFactory` `org.simpleframework.xml.core.CompositeMap.factory` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Converter` `org.simpleframework.xml.core.CompositeMap.key` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.CompositeMap.style` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Converter` `org.simpleframework.xml.core.CompositeMap.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeMap` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.core.Entry` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeMap;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e0160.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e0166.  v0:= new `org.simpleframework.xml.core.MapFactory`;
  #L3e016a.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/MapFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3e0170.  v1.`org.simpleframework.xml.core.CompositeMap.factory` @type ^`org.simpleframework.xml.core.MapFactory` := v0 @kind object;
  #L3e0174.  call temp:= `getValue`(v3, v2) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind virtual;
  #L3e017a.  v4:= temp @kind object;
  #L3e017c.  v1.`org.simpleframework.xml.core.CompositeMap.value` @type ^`org.simpleframework.xml.core.Converter` := v4 @kind object;
  #L3e0180.  call temp:= `getKey`(v3, v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind virtual;
  #L3e0186.  v4:= temp @kind object;
  #L3e0188.  v1.`org.simpleframework.xml.core.CompositeMap.key` @type ^`org.simpleframework.xml.core.Converter` := v4 @kind object;
  #L3e018c.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/core/Context;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind interface;
  #L3e0192.  v2:= temp @kind object;
  #L3e0194.  v1.`org.simpleframework.xml.core.CompositeMap.style` @type ^`org.simpleframework.xml.stream.Style` := v2 @kind object;
  #L3e0198.  v1.`org.simpleframework.xml.core.CompositeMap.entry` @type ^`org.simpleframework.xml.core.Entry` := v3 @kind object;
  #L3e019c.  return @kind void;
}
procedure `java.lang.Object` `populate`(`org.simpleframework.xml.core.CompositeMap` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeMap;.populate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e0098.  v5:= (`java.util.Map`) v5 @kind object;
  #L3e009c.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3e00a2.  v0:= temp @kind object;
  #L3e00a4.  if v0 != 0 then goto L3e00aa;
  #L3e00a8.  return v5 @kind object;
  #L3e00aa.  v1:= v3.`org.simpleframework.xml.core.CompositeMap.key` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3e00ae.  call temp:= `read`(v1, v0) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L3e00b4.  v1:= temp @kind object;
  #L3e00b6.  v2:= v3.`org.simpleframework.xml.core.CompositeMap.value` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3e00ba.  call temp:= `read`(v2, v0) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L3e00c0.  v0:= temp @kind object;
  #L3e00c2.  call temp:= `put`(v5, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e00c8.  goto L3e009c;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeMap` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeMap;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e0050.  call temp:= `getNext`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3e0056.  v4:= temp @kind object;
  #L3e0058.  if v4 != 0 then goto L3e0060;
  #L3e005c.  v3:= 1I;
  #L3e005e.  return v3;
  #L3e0060.  v0:= v2.`org.simpleframework.xml.core.CompositeMap.key` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3e0064.  call temp:= `validate`(v0, v4) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L3e006a.  v0:= temp;
  #L3e006c.  v1:= 0I;
  #L3e006e.  if v0 != 0 then goto L3e0074;
  #L3e0072.  return v1;
  #L3e0074.  v0:= v2.`org.simpleframework.xml.core.CompositeMap.value` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3e0078.  call temp:= `validate`(v0, v4) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L3e007e.  v4:= temp;
  #L3e0080.  if v4 != 0 then goto L3e0050;
  #L3e0084.  return v1;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeMap` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeMap;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e00dc.  v0:= v2.`org.simpleframework.xml.core.CompositeMap.factory` @type ^`org.simpleframework.xml.core.MapFactory` @kind object;
  #L3e00e0.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/MapFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3e00e6.  v0:= temp @kind object;
  #L3e00e8.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L3e00ee.  v1:= temp @kind object;
  #L3e00f0.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L3e00f6.  v0:= temp;
  #L3e00f8.  if v0 != 0 then goto L3e0106;
  #L3e00fc.  call temp:= `populate`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/CompositeMap;.populate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L3e0102.  v3:= temp @kind object;
  #L3e0104.  return v3 @kind object;
  #L3e0106.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeMap` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeMap;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0118.  v0:= v2.`org.simpleframework.xml.core.CompositeMap.factory` @type ^`org.simpleframework.xml.core.MapFactory` @kind object;
  #L3e011c.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/MapFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3e0122.  v0:= temp @kind object;
  #L3e0124.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L3e012a.  v1:= temp;
  #L3e012c.  if v1 == 0 then goto L3e013a;
  #L3e0130.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L3e0136.  v3:= temp @kind object;
  #L3e0138.  return v3 @kind object;
  #L3e013a.  call temp:= `setInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e0140.  if v4 == 0 then goto L3e014e;
  #L3e0144.  call temp:= `populate`(v2, v3, v4) @signature `Lorg/simpleframework/xml/core/CompositeMap;.populate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L3e014a.  v3:= temp @kind object;
  #L3e014c.  return v3 @kind object;
  #L3e014e.  return v4 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeMap` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeMap;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0008.  v0:= v2.`org.simpleframework.xml.core.CompositeMap.factory` @type ^`org.simpleframework.xml.core.MapFactory` @kind object;
  #L3e000c.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/MapFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3e0012.  v0:= temp @kind object;
  #L3e0014.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L3e001a.  v1:= temp;
  #L3e001c.  if v1 != 0 then goto L3e003a;
  #L3e0020.  v1:= 0I;
  #L3e0022.  call temp:= `setInstance`(v0, v1) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e0028.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e002e.  v0:= temp @kind object;
  #L3e0030.  call temp:= `validate`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/CompositeMap;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind direct;
  #L3e0036.  v3:= temp;
  #L3e0038.  return v3;
  #L3e003a.  v3:= 1I;
  #L3e003c.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeMap` v5 @kind this, `org.simpleframework.xml.stream.OutputNode` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeMap;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e01b0.  v7:= (`java.util.Map`) v7 @kind object;
  #L3e01b4.  call temp:= `keySet`(v7) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3e01ba.  v0:= temp @kind object;
  #L3e01bc.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e01c2.  v0:= temp @kind object;
  #L3e01c4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e01ca.  v1:= temp;
  #L3e01cc.  if v1 == 0 then goto L3e0216;
  #L3e01d0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e01d6.  v1:= temp @kind object;
  #L3e01d8.  v2:= v5.`org.simpleframework.xml.core.CompositeMap.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3e01dc.  call temp:= `getEntry`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getEntry:()Ljava/lang/String;` @kind virtual;
  #L3e01e2.  v2:= temp @kind object;
  #L3e01e4.  v3:= v5.`org.simpleframework.xml.core.CompositeMap.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3e01e8.  call temp:= `getElement`(v3, v2) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e01ee.  v2:= temp @kind object;
  #L3e01f0.  call temp:= `getChild`(v6, v2) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3e01f6.  v2:= temp @kind object;
  #L3e01f8.  call temp:= `get`(v7, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e01fe.  v3:= temp @kind object;
  #L3e0200.  v4:= v5.`org.simpleframework.xml.core.CompositeMap.key` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3e0204.  call `write`(v4, v2, v1) @signature `Lorg/simpleframework/xml/core/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L3e020a.  v1:= v5.`org.simpleframework.xml.core.CompositeMap.value` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3e020e.  call `write`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L3e0214.  goto L3e01c4;
  #L3e0216.  return @kind void;
}
