record `org.simpleframework.xml.core.Source` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Context` @kind interface {
  `org.simpleframework.xml.core.TemplateEngine` `org.simpleframework.xml.core.Source.engine` @AccessFlag PRIVATE;
  `org.simpleframework.xml.filter.Filter` `org.simpleframework.xml.core.Source.filter` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Session` `org.simpleframework.xml.core.Source.session` @AccessFlag PRIVATE;
  `org.simpleframework.xml.strategy.Strategy` `org.simpleframework.xml.core.Source.strategy` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.Source.support` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Source` v2 @kind this, `org.simpleframework.xml.strategy.Strategy` v3 @kind object, `org.simpleframework.xml.core.Support` v4 @kind object, `org.simpleframework.xml.core.Session` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/core/Session;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3eea64.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eea6a.  v0:= new `org.simpleframework.xml.core.TemplateFilter`;
  #L3eea6e.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/TemplateFilter;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L3eea74.  v2.`org.simpleframework.xml.core.Source.filter` @type ^`org.simpleframework.xml.filter.Filter` := v0 @kind object;
  #L3eea78.  v1:= new `org.simpleframework.xml.core.TemplateEngine`;
  #L3eea7c.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/TemplateEngine;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L3eea82.  v2.`org.simpleframework.xml.core.Source.engine` @type ^`org.simpleframework.xml.core.TemplateEngine` := v1 @kind object;
  #L3eea86.  v2.`org.simpleframework.xml.core.Source.strategy` @type ^`org.simpleframework.xml.strategy.Strategy` := v3 @kind object;
  #L3eea8a.  v2.`org.simpleframework.xml.core.Source.support` @type ^`org.simpleframework.xml.core.Support` := v4 @kind object;
  #L3eea8e.  v2.`org.simpleframework.xml.core.Source.session` @type ^`org.simpleframework.xml.core.Session` := v5 @kind object;
  #L3eea92.  return @kind void;
}
procedure `org.simpleframework.xml.core.Scanner` `getScanner`(`org.simpleframework.xml.core.Source` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ee964.  v0:= v1.`org.simpleframework.xml.core.Source.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ee968.  call temp:= `getScanner`(v0, v2) @signature `Lorg/simpleframework/xml/core/Support;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind virtual;
  #L3ee96e.  v2:= temp @kind object;
  #L3ee970.  return v2 @kind object;
}
procedure `java.lang.Object` `getAttribute`(`org.simpleframework.xml.core.Source` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getAttribute:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee858.  v0:= v1.`org.simpleframework.xml.core.Source.session` @type ^`org.simpleframework.xml.core.Session` @kind object;
  #L3ee85c.  call temp:= `get`(v0, v2) @signature `Lorg/simpleframework/xml/core/Session;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ee862.  v2:= temp @kind object;
  #L3ee864.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Caller` `getCaller`(`org.simpleframework.xml.core.Source` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getCaller:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Caller;` @AccessFlag PUBLIC {
    temp;

  #L3ee8dc.  call temp:= `getScanner`(v0, v1) @signature `Lorg/simpleframework/xml/core/Source;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind direct;
  #L3ee8e2.  v1:= temp @kind object;
  #L3ee8e4.  call temp:= `getCaller`(v1, v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getCaller:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L3ee8ea.  v1:= temp @kind object;
  #L3ee8ec.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.Decorator` `getDecorator`(`org.simpleframework.xml.core.Source` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getDecorator:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Decorator;` @AccessFlag PUBLIC {
    temp;

  #L3ee900.  call temp:= `getScanner`(v0, v1) @signature `Lorg/simpleframework/xml/core/Source;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind direct;
  #L3ee906.  v1:= temp @kind object;
  #L3ee908.  call temp:= `getDecorator`(v1) @signature `Lorg/simpleframework/xml/core/Scanner;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L3ee90e.  v1:= temp @kind object;
  #L3ee910.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.Source` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee924.  v0:= v1.`org.simpleframework.xml.core.Source.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ee928.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/Support;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3ee92e.  v2:= temp @kind object;
  #L3ee930.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.Source` v1 @kind this, `org.simpleframework.xml.strategy.Value` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getInstance:(Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee944.  v0:= v1.`org.simpleframework.xml.core.Source.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ee948.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/Support;.getInstance:(Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3ee94e.  v2:= temp @kind object;
  #L3ee950.  return v2 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.Source` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee878.  v0:= v1.`org.simpleframework.xml.core.Source.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ee87c.  call temp:= `getName`(v0, v2) @signature `Lorg/simpleframework/xml/core/Support;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L3ee882.  v2:= temp @kind object;
  #L3ee884.  return v2 @kind object;
}
procedure `org.simpleframework.xml.strategy.Value` `getOverride`(`org.simpleframework.xml.core.Source` v2 @kind this, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getOverride:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ee9f8.  call temp:= `getAttributes`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L3ee9fe.  v0:= temp @kind object;
  #L3eea00.  if v0 == 0 then goto L3eea16;
  #L3eea04.  v4:= v2.`org.simpleframework.xml.core.Source.strategy` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L3eea08.  v1:= v2.`org.simpleframework.xml.core.Source.session` @type ^`org.simpleframework.xml.core.Session` @kind object;
  #L3eea0c.  call temp:= `read`(v4, v3, v0, v1) @signature `Lorg/simpleframework/xml/strategy/Strategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Lorg/simpleframework/xml/strategy/Value;` @kind interface;
  #L3eea12.  v3:= temp @kind object;
  #L3eea14.  return v3 @kind object;
  #L3eea16.  v3:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3eea1a.  v0:= 1I;
  #L3eea1c.  v0:= new `java.lang.Object`[v0];
  #L3eea20.  v1:= 0I;
  #L3eea22.  v0[v1]:= v4 @kind object;
  #L3eea26.  v4:= "No attributes for %s" @kind object;
  #L3eea2a.  call `<init>`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3eea30.  throw v3;
}
procedure `java.lang.String` `getProperty`(`org.simpleframework.xml.core.Source` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee898.  v0:= v1.`org.simpleframework.xml.core.Source.engine` @type ^`org.simpleframework.xml.core.TemplateEngine` @kind object;
  #L3ee89c.  call temp:= `process`(v0, v2) @signature `Lorg/simpleframework/xml/core/TemplateEngine;.process:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3ee8a2.  v2:= temp @kind object;
  #L3ee8a4.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Schema` `getSchema`(`org.simpleframework.xml.core.Source` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ee984.  call temp:= `getScanner`(v3, v4) @signature `Lorg/simpleframework/xml/core/Source;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind direct;
  #L3ee98a.  v0:= temp @kind object;
  #L3ee98c.  if v0 == 0 then goto L3ee99c;
  #L3ee990.  v4:= new `org.simpleframework.xml.core.ClassSchema`;
  #L3ee994.  call `<init>`(v4, v0, v3) @signature `Lorg/simpleframework/xml/core/ClassSchema;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L3ee99a.  return v4 @kind object;
  #L3ee99c.  v0:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3ee9a0.  v1:= 1I;
  #L3ee9a2.  v1:= new `java.lang.Object`[v1];
  #L3ee9a6.  v2:= 0I;
  #L3ee9a8.  v1[v2]:= v4 @kind object;
  #L3ee9ac.  v4:= "Invalid schema class %s" @kind object;
  #L3ee9b0.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ee9b6.  throw v0;
}
procedure `org.simpleframework.xml.core.Session` `getSession`(`org.simpleframework.xml.core.Source` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Source;.getSession:()Lorg/simpleframework/xml/core/Session;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee9c8.  v0:= v1.`org.simpleframework.xml.core.Source.session` @type ^`org.simpleframework.xml.core.Session` @kind object;
  #L3ee9cc.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Style` `getStyle`(`org.simpleframework.xml.core.Source` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Source;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eea44.  v0:= v1.`org.simpleframework.xml.core.Source.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3eea48.  call temp:= `getStyle`(v0) @signature `Lorg/simpleframework/xml/core/Support;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L3eea4e.  v0:= temp @kind object;
  #L3eea50.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Support` `getSupport`(`org.simpleframework.xml.core.Source` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Source;.getSupport:()Lorg/simpleframework/xml/core/Support;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee9e0.  v0:= v1.`org.simpleframework.xml.core.Source.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ee9e4.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.Source` v0 @kind this, `org.simpleframework.xml.strategy.Type` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;

  #L3ee830.  if v2 == 0 then goto L3ee83e;
  #L3ee834.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ee83a.  v1:= temp @kind object;
  #L3ee83c.  return v1 @kind object;
  #L3ee83e.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3ee844.  v1:= temp @kind object;
  #L3ee846.  return v1 @kind object;
}
procedure `org.simpleframework.xml.Version` `getVersion`(`org.simpleframework.xml.core.Source` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.getVersion:(Ljava/lang/Class;)Lorg/simpleframework/xml/Version;` @AccessFlag PUBLIC {
    temp;

  #L3ee8b8.  call temp:= `getScanner`(v0, v1) @signature `Lorg/simpleframework/xml/core/Source;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind direct;
  #L3ee8be.  v1:= temp @kind object;
  #L3ee8c0.  call temp:= `getRevision`(v1) @signature `Lorg/simpleframework/xml/core/Scanner;.getRevision:()Lorg/simpleframework/xml/Version;` @kind interface;
  #L3ee8c6.  v1:= temp @kind object;
  #L3ee8c8.  return v1 @kind object;
}
procedure `boolean` `isFloat`(`org.simpleframework.xml.core.Source` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.isFloat:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;

  #L3ee740.  call temp:= `isFloat`(v1) @signature `Lorg/simpleframework/xml/core/Support;.isFloat:(Ljava/lang/Class;)Z` @kind static;
  #L3ee746.  v1:= temp;
  #L3ee748.  return v1;
}
procedure `boolean` `isFloat`(`org.simpleframework.xml.core.Source` v0 @kind this, `org.simpleframework.xml.strategy.Type` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.isFloat:(Lorg/simpleframework/xml/strategy/Type;)Z` @AccessFlag PUBLIC {
    temp;

  #L3ee75c.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3ee762.  v1:= temp @kind object;
  #L3ee764.  call temp:= `isFloat`(v0, v1) @signature `Lorg/simpleframework/xml/core/Source;.isFloat:(Ljava/lang/Class;)Z` @kind virtual;
  #L3ee76a.  v1:= temp;
  #L3ee76c.  return v1;
}
procedure `boolean` `isPrimitive`(`org.simpleframework.xml.core.Source` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.isPrimitive:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee780.  v0:= v1.`org.simpleframework.xml.core.Source.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ee784.  call temp:= `isPrimitive`(v0, v2) @signature `Lorg/simpleframework/xml/core/Support;.isPrimitive:(Ljava/lang/Class;)Z` @kind virtual;
  #L3ee78a.  v2:= temp;
  #L3ee78c.  return v2;
}
procedure `boolean` `isPrimitive`(`org.simpleframework.xml.core.Source` v0 @kind this, `org.simpleframework.xml.strategy.Type` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.isPrimitive:(Lorg/simpleframework/xml/strategy/Type;)Z` @AccessFlag PUBLIC {
    temp;

  #L3ee7a0.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3ee7a6.  v1:= temp @kind object;
  #L3ee7a8.  call temp:= `isPrimitive`(v0, v1) @signature `Lorg/simpleframework/xml/core/Source;.isPrimitive:(Ljava/lang/Class;)Z` @kind virtual;
  #L3ee7ae.  v1:= temp;
  #L3ee7b0.  return v1;
}
procedure `boolean` `isStrict`(`org.simpleframework.xml.core.Source` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Source;.isStrict:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee7c4.  v0:= v1.`org.simpleframework.xml.core.Source.session` @type ^`org.simpleframework.xml.core.Session` @kind object;
  #L3ee7c8.  call temp:= `isStrict`(v0) @signature `Lorg/simpleframework/xml/core/Session;.isStrict:()Z` @kind virtual;
  #L3ee7ce.  v0:= temp;
  #L3ee7d0.  return v0;
}
procedure `boolean` `setOverride`(`org.simpleframework.xml.core.Source` v2 @kind this, `org.simpleframework.xml.strategy.Type` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.stream.OutputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Source;.setOverride:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ee7e4.  call temp:= `getAttributes`(v5) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L3ee7ea.  v0:= temp @kind object;
  #L3ee7ec.  if v0 == 0 then goto L3ee802;
  #L3ee7f0.  v5:= v2.`org.simpleframework.xml.core.Source.strategy` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L3ee7f4.  v1:= v2.`org.simpleframework.xml.core.Source.session` @type ^`org.simpleframework.xml.core.Session` @kind object;
  #L3ee7f8.  call temp:= `write`(v5, v3, v4, v0, v1) @signature `Lorg/simpleframework/xml/strategy/Strategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Z` @kind interface;
  #L3ee7fe.  v3:= temp;
  #L3ee800.  return v3;
  #L3ee802.  v3:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3ee806.  v4:= 1I;
  #L3ee808.  v4:= new `java.lang.Object`[v4];
  #L3ee80c.  v0:= 0I;
  #L3ee80e.  v4[v0]:= v5 @kind object;
  #L3ee812.  v5:= "No attributes for %s" @kind object;
  #L3ee816.  call `<init>`(v3, v5, v4) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ee81c.  throw v3;
}
