record `org.simpleframework.xml.core.ModelAssembler` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.ExpressionBuilder` `org.simpleframework.xml.core.ModelAssembler.builder` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Detail` `org.simpleframework.xml.core.ModelAssembler.detail` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.ModelAssembler.format` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ModelAssembler` v0 @kind this, `org.simpleframework.xml.core.ExpressionBuilder` v1 @kind object, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.<init>:(Lorg/simpleframework/xml/core/ExpressionBuilder;Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8c2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e8c32.  call temp:= `getFormat`(v3) @signature `Lorg/simpleframework/xml/core/Support;.getFormat:()Lorg/simpleframework/xml/stream/Format;` @kind virtual;
  #L3e8c38.  v3:= temp @kind object;
  #L3e8c3a.  v0.`org.simpleframework.xml.core.ModelAssembler.format` @type ^`org.simpleframework.xml.stream.Format` := v3 @kind object;
  #L3e8c3e.  v0.`org.simpleframework.xml.core.ModelAssembler.builder` @type ^`org.simpleframework.xml.core.ExpressionBuilder` := v1 @kind object;
  #L3e8c42.  v0.`org.simpleframework.xml.core.ModelAssembler.detail` @type ^`org.simpleframework.xml.core.Detail` := v2 @kind object;
  #L3e8c46.  return @kind void;
}
procedure `void` `assembleAttributes`(`org.simpleframework.xml.core.ModelAssembler` v6 @kind this, `org.simpleframework.xml.core.Model` v7 @kind object, `org.simpleframework.xml.Order` v8 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assembleAttributes:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e8c78.  call temp:= `attributes`(v8) @signature `Lorg/simpleframework/xml/Order;.attributes:()[Ljava/lang/String;` @kind interface;
  #L3e8c7e.  v8:= temp @kind object;
  #L3e8c80.  v0:= length @variable v8;
  #L3e8c82.  v1:= 0I;
  #L3e8c84.  v2:= 0I;
  #L3e8c86.  if v2 >= v0 then goto L3e8d0c;
  #L3e8c8a.  v3:= v8[v2] @kind object;
  #L3e8c8e.  v4:= v6.`org.simpleframework.xml.core.ModelAssembler.builder` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L3e8c92.  call temp:= `build`(v4, v3) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L3e8c98.  v4:= temp @kind object;
  #L3e8c9a.  call temp:= `isAttribute`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isAttribute:()Z` @kind interface;
  #L3e8ca0.  v5:= temp;
  #L3e8ca2.  if v5 != 0 then goto L3e8cd8;
  #L3e8ca6.  call temp:= `isPath`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L3e8cac.  v5:= temp;
  #L3e8cae.  if v5 != 0 then goto L3e8cb4;
  #L3e8cb2.  goto L3e8cd8;
  #L3e8cb4.  v7:= new `org.simpleframework.xml.core.PathException`;
  #L3e8cb8.  v8:= 2I;
  #L3e8cba.  v8:= new `java.lang.Object`[v8];
  #L3e8cbe.  v8[v1]:= v4 @kind object;
  #L3e8cc2.  v0:= v6.`org.simpleframework.xml.core.ModelAssembler.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3e8cc6.  v1:= 1I;
  #L3e8cc8.  v8[v1]:= v0 @kind object;
  #L3e8ccc.  v0:= "Ordered attribute '%s' references an element in %s" @kind object;
  #L3e8cd0.  call `<init>`(v7, v0, v8) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e8cd6.  throw v7;
  #L3e8cd8.  call temp:= `isPath`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L3e8cde.  v5:= temp;
  #L3e8ce0.  if v5 != 0 then goto L3e8d00;
  #L3e8ce4.  v4:= v6.`org.simpleframework.xml.core.ModelAssembler.format` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L3e8ce8.  call temp:= `getStyle`(v4) @signature `Lorg/simpleframework/xml/stream/Format;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L3e8cee.  v4:= temp @kind object;
  #L3e8cf0.  call temp:= `getAttribute`(v4, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e8cf6.  v3:= temp @kind object;
  #L3e8cf8.  call `registerAttribute`(v7, v3) @signature `Lorg/simpleframework/xml/core/Model;.registerAttribute:(Ljava/lang/String;)V` @kind interface;
  #L3e8cfe.  goto L3e8d06;
  #L3e8d00.  call `registerAttributes`(v6, v7, v4) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerAttributes:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L3e8d06.  v2:= v2 + 1;
  #L3e8d0a.  goto L3e8c86;
  #L3e8d0c.  return @kind void;
}
procedure `void` `assembleElements`(`org.simpleframework.xml.core.ModelAssembler` v5 @kind this, `org.simpleframework.xml.core.Model` v6 @kind object, `org.simpleframework.xml.Order` v7 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assembleElements:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e8d20.  call temp:= `elements`(v7) @signature `Lorg/simpleframework/xml/Order;.elements:()[Ljava/lang/String;` @kind interface;
  #L3e8d26.  v7:= temp @kind object;
  #L3e8d28.  v0:= length @variable v7;
  #L3e8d2a.  v1:= 0I;
  #L3e8d2c.  v2:= 0I;
  #L3e8d2e.  if v2 >= v0 then goto L3e8d7e;
  #L3e8d32.  v3:= v7[v2] @kind object;
  #L3e8d36.  v4:= v5.`org.simpleframework.xml.core.ModelAssembler.builder` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L3e8d3a.  call temp:= `build`(v4, v3) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L3e8d40.  v3:= temp @kind object;
  #L3e8d42.  call temp:= `isAttribute`(v3) @signature `Lorg/simpleframework/xml/core/Expression;.isAttribute:()Z` @kind interface;
  #L3e8d48.  v4:= temp;
  #L3e8d4a.  if v4 != 0 then goto L3e8d5a;
  #L3e8d4e.  call `registerElements`(v5, v6, v3) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerElements:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L3e8d54.  v2:= v2 + 1;
  #L3e8d58.  goto L3e8d2e;
  #L3e8d5a.  v6:= new `org.simpleframework.xml.core.PathException`;
  #L3e8d5e.  v7:= 2I;
  #L3e8d60.  v7:= new `java.lang.Object`[v7];
  #L3e8d64.  v7[v1]:= v3 @kind object;
  #L3e8d68.  v0:= v5.`org.simpleframework.xml.core.ModelAssembler.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3e8d6c.  v1:= 1I;
  #L3e8d6e.  v7[v1]:= v0 @kind object;
  #L3e8d72.  v0:= "Ordered element '%s' references an attribute in %s" @kind object;
  #L3e8d76.  call `<init>`(v6, v0, v7) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e8d7c.  throw v6;
  #L3e8d7e.  return @kind void;
}
procedure `void` `registerAttribute`(`org.simpleframework.xml.core.ModelAssembler` v0 @kind this, `org.simpleframework.xml.core.Model` v1 @kind object, `org.simpleframework.xml.core.Expression` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerAttribute:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;

  #L3e8d90.  call temp:= `getFirst`(v2) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L3e8d96.  v2:= temp @kind object;
  #L3e8d98.  if v2 == 0 then goto L3e8da2;
  #L3e8d9c.  call `registerAttribute`(v1, v2) @signature `Lorg/simpleframework/xml/core/Model;.registerAttribute:(Ljava/lang/String;)V` @kind interface;
  #L3e8da2.  return @kind void;
}
procedure `void` `registerAttributes`(`org.simpleframework.xml.core.ModelAssembler` v4 @kind this, `org.simpleframework.xml.core.Model` v5 @kind object, `org.simpleframework.xml.core.Expression` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerAttributes:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8db4.  call temp:= `getPrefix`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L3e8dba.  v0:= temp @kind object;
  #L3e8dbc.  call temp:= `getFirst`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L3e8dc2.  v1:= temp @kind object;
  #L3e8dc4.  call temp:= `getIndex`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L3e8dca.  v2:= temp;
  #L3e8dcc.  call temp:= `isPath`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L3e8dd2.  v3:= temp;
  #L3e8dd4.  if v3 == 0 then goto L3e8e1a;
  #L3e8dd8.  call temp:= `register`(v5, v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L3e8dde.  v5:= temp @kind object;
  #L3e8de0.  v0:= 1I;
  #L3e8de2.  call temp:= `getPath`(v6, v0) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L3e8de8.  v6:= temp @kind object;
  #L3e8dea.  if v5 == 0 then goto L3e8df6;
  #L3e8dee.  call `registerAttributes`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerAttributes:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L3e8df4.  goto L3e8e20;
  #L3e8df6.  v5:= new `org.simpleframework.xml.core.PathException`;
  #L3e8dfa.  v6:= 2I;
  #L3e8dfc.  v6:= new `java.lang.Object`[v6];
  #L3e8e00.  v2:= 0I;
  #L3e8e02.  v6[v2]:= v1 @kind object;
  #L3e8e06.  v1:= v4.`org.simpleframework.xml.core.ModelAssembler.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3e8e0a.  v6[v0]:= v1 @kind object;
  #L3e8e0e.  v0:= "Element '%s' does not exist in %s" @kind object;
  #L3e8e12.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e8e18.  throw v5;
  #L3e8e1a.  call `registerAttribute`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerAttribute:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L3e8e20.  return @kind void;
}
procedure `void` `registerElement`(`org.simpleframework.xml.core.ModelAssembler` v5 @kind this, `org.simpleframework.xml.core.Model` v6 @kind object, `org.simpleframework.xml.core.Expression` v7 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerElement:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e8e34.  call temp:= `getPrefix`(v7) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L3e8e3a.  v0:= temp @kind object;
  #L3e8e3c.  call temp:= `getFirst`(v7) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L3e8e42.  v1:= temp @kind object;
  #L3e8e44.  call temp:= `getIndex`(v7) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L3e8e4a.  v2:= temp;
  #L3e8e4c.  v3:= 1I;
  #L3e8e4e.  if v2 <= v3 then goto L3e8e8e;
  #L3e8e52.  v4:= v2 + -1;
  #L3e8e56.  call temp:= `lookup`(v6, v1, v4) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L3e8e5c.  v4:= temp @kind object;
  #L3e8e5e.  if v4 == 0 then goto L3e8e64;
  #L3e8e62.  goto L3e8e8e;
  #L3e8e64.  v6:= new `org.simpleframework.xml.core.PathException`;
  #L3e8e68.  v0:= 3I;
  #L3e8e6a.  v0:= new `java.lang.Object`[v0];
  #L3e8e6e.  v2:= 0I;
  #L3e8e70.  v0[v2]:= v1 @kind object;
  #L3e8e74.  v0[v3]:= v7 @kind object;
  #L3e8e78.  v7:= v5.`org.simpleframework.xml.core.ModelAssembler.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3e8e7c.  v1:= 2I;
  #L3e8e7e.  v0[v1]:= v7 @kind object;
  #L3e8e82.  v7:= "Ordered element '%s' in path '%s' is out of sequence for %s" @kind object;
  #L3e8e86.  call `<init>`(v6, v7, v0) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e8e8c.  throw v6;
  #L3e8e8e.  call temp:= `register`(v6, v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L3e8e94.  return @kind void;
}
procedure `void` `registerElements`(`org.simpleframework.xml.core.ModelAssembler` v3 @kind this, `org.simpleframework.xml.core.Model` v4 @kind object, `org.simpleframework.xml.core.Expression` v5 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerElements:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e8ea8.  call temp:= `getPrefix`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L3e8eae.  v0:= temp @kind object;
  #L3e8eb0.  call temp:= `getFirst`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L3e8eb6.  v1:= temp @kind object;
  #L3e8eb8.  call temp:= `getIndex`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L3e8ebe.  v2:= temp;
  #L3e8ec0.  if v1 == 0 then goto L3e8ee8;
  #L3e8ec4.  call temp:= `register`(v4, v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L3e8eca.  v0:= temp @kind object;
  #L3e8ecc.  v1:= 1I;
  #L3e8ece.  call temp:= `getPath`(v5, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L3e8ed4.  v1:= temp @kind object;
  #L3e8ed6.  call temp:= `isPath`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L3e8edc.  v2:= temp;
  #L3e8ede.  if v2 == 0 then goto L3e8ee8;
  #L3e8ee2.  call `registerElements`(v3, v0, v1) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerElements:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L3e8ee8.  call `registerElement`(v3, v4, v5) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.registerElement:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L3e8eee.  return @kind void;
}
procedure `void` `assemble`(`org.simpleframework.xml.core.ModelAssembler` v0 @kind this, `org.simpleframework.xml.core.Model` v1 @kind object, `org.simpleframework.xml.Order` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assemble:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @AccessFlag PUBLIC {
    temp;

  #L3e8c58.  call `assembleElements`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assembleElements:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L3e8c5e.  call `assembleAttributes`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assembleAttributes:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L3e8c64.  return @kind void;
}
