record `org.simpleframework.xml.core.TreeModel` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Model` @kind interface {
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.TreeModel.attributes` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Detail` `org.simpleframework.xml.core.TreeModel.detail` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.TreeModel.elements` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Expression` `org.simpleframework.xml.core.TreeModel.expression` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.core.TreeModel.index` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.TreeModel.list` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ModelMap` `org.simpleframework.xml.core.TreeModel.models` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.TreeModel.name` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.TreeModel$OrderList` `org.simpleframework.xml.core.TreeModel.order` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Policy` `org.simpleframework.xml.core.TreeModel.policy` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.TreeModel.prefix` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.TreeModel.text` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TreeModel` v6 @kind this, `org.simpleframework.xml.core.Policy` v7 @kind object, `org.simpleframework.xml.core.Detail` v8 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f0fc0.  v3:= 0I;
  #L3f0fc2.  v4:= 0I;
  #L3f0fc4.  v5:= 1I;
  #L3f0fc6.  v0:= v6 @kind object;
  #L3f0fc8.  v1:= v7 @kind object;
  #L3f0fca.  v2:= v8 @kind object;
  #L3f0fcc.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L3f0fd2.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `org.simpleframework.xml.core.Policy` v2 @kind object, `org.simpleframework.xml.core.Detail` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f0fe4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f0fea.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L3f0fee.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L3f0ff4.  v1.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L3f0ff8.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L3f0ffc.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L3f1002.  v1.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L3f1006.  v0:= new `org.simpleframework.xml.core.ModelMap`;
  #L3f100a.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/ModelMap;.<init>:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3f1010.  v1.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` := v0 @kind object;
  #L3f1014.  v0:= new `org.simpleframework.xml.core.TreeModel$OrderList`;
  #L3f1018.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/TreeModel$OrderList;.<init>:()V` @kind direct;
  #L3f101e.  v1.`org.simpleframework.xml.core.TreeModel.order` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` := v0 @kind object;
  #L3f1022.  v1.`org.simpleframework.xml.core.TreeModel.detail` @type ^`org.simpleframework.xml.core.Detail` := v3 @kind object;
  #L3f1026.  v1.`org.simpleframework.xml.core.TreeModel.policy` @type ^`org.simpleframework.xml.core.Policy` := v2 @kind object;
  #L3f102a.  v1.`org.simpleframework.xml.core.TreeModel.prefix` @type ^`java.lang.String` := v5 @kind object;
  #L3f102e.  v1.`org.simpleframework.xml.core.TreeModel.index` @type ^`int` := v6;
  #L3f1032.  v1.`org.simpleframework.xml.core.TreeModel.name` @type ^`java.lang.String` := v4 @kind object;
  #L3f1036.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `create`(`org.simpleframework.xml.core.TreeModel` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.create:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f0ec0.  v6:= new `org.simpleframework.xml.core.TreeModel`;
  #L3f0ec4.  v1:= v7.`org.simpleframework.xml.core.TreeModel.policy` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L3f0ec8.  v2:= v7.`org.simpleframework.xml.core.TreeModel.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3f0ecc.  v0:= v6 @kind object;
  #L3f0ece.  v3:= v8 @kind object;
  #L3f0ed0.  v4:= v9 @kind object;
  #L3f0ed2.  v5:= v10;
  #L3f0ed4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L3f0eda.  if v8 == 0 then goto L3f0ef2;
  #L3f0ede.  v9:= v7.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L3f0ee2.  call `register`(v9, v8, v6) @signature `Lorg/simpleframework/xml/core/ModelMap;.register:(Ljava/lang/String;Lorg/simpleframework/xml/core/Model;)V` @kind virtual;
  #L3f0ee8.  v9:= v7.`org.simpleframework.xml.core.TreeModel.order` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L3f0eec.  call temp:= `add`(v9, v8) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0ef2.  return v6 @kind object;
}
procedure `void` `validateAttributes`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateAttributes:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f1224.  v0:= v4.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f1228.  call temp:= `keySet`(v0) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L3f122e.  v0:= temp @kind object;
  #L3f1230.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f1236.  v0:= temp @kind object;
  #L3f1238.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f123e.  v1:= temp;
  #L3f1240.  if v1 == 0 then goto L3f1296;
  #L3f1244.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f124a.  v1:= temp @kind object;
  #L3f124c.  v1:= (`java.lang.String`) v1 @kind object;
  #L3f1250.  v2:= v4.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f1254.  call temp:= `get`(v2, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f125a.  v2:= temp @kind object;
  #L3f125c.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L3f1260.  if v2 == 0 then goto L3f1274;
  #L3f1264.  v2:= v4.`org.simpleframework.xml.core.TreeModel.expression` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L3f1268.  if v2 == 0 then goto L3f1238;
  #L3f126c.  call temp:= `getAttribute`(v2, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3f1272.  goto L3f1238;
  #L3f1274.  v0:= new `org.simpleframework.xml.core.AttributeException`;
  #L3f1278.  v2:= 2I;
  #L3f127a.  v2:= new `java.lang.Object`[v2];
  #L3f127e.  v3:= 0I;
  #L3f1280.  v2[v3]:= v1 @kind object;
  #L3f1284.  v1:= 1I;
  #L3f1286.  v2[v1]:= v5 @kind object;
  #L3f128a.  v5:= "Ordered attribute '%s' does not exist in %s" @kind object;
  #L3f128e.  call `<init>`(v0, v5, v2) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f1294.  throw v0;
  #L3f1296.  return @kind void;
}
procedure `void` `validateElements`(`org.simpleframework.xml.core.TreeModel` v7 @kind this, `java.lang.Class` v8 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateElements:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f12a8.  v0:= v7.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f12ac.  call temp:= `keySet`(v0) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L3f12b2.  v0:= temp @kind object;
  #L3f12b4.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f12ba.  v0:= temp @kind object;
  #L3f12bc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f12c2.  v1:= temp;
  #L3f12c4.  if v1 == 0 then goto L3f1362;
  #L3f12c8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f12ce.  v1:= temp @kind object;
  #L3f12d0.  v1:= (`java.lang.String`) v1 @kind object;
  #L3f12d4.  v2:= v7.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L3f12d8.  call temp:= `get`(v2, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f12de.  v2:= temp @kind object;
  #L3f12e0.  v2:= (`org.simpleframework.xml.core.ModelList`) v2 @kind object;
  #L3f12e4.  v3:= v7.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f12e8.  call temp:= `get`(v3, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f12ee.  v3:= temp @kind object;
  #L3f12f0.  v3:= (`org.simpleframework.xml.core.Label`) v3 @kind object;
  #L3f12f4.  v4:= 1I;
  #L3f12f6.  v5:= 0I;
  #L3f12f8.  v6:= 2I;
  #L3f12fa.  if v2 != 0 then goto L3f1320;
  #L3f12fe.  if v3 == 0 then goto L3f1304;
  #L3f1302.  goto L3f1320;
  #L3f1304.  v0:= new `org.simpleframework.xml.core.ElementException`;
  #L3f1308.  v2:= new `java.lang.Object`[v6];
  #L3f130c.  v2[v5]:= v1 @kind object;
  #L3f1310.  v2[v4]:= v8 @kind object;
  #L3f1314.  v8:= "Ordered element '%s' does not exist in %s" @kind object;
  #L3f1318.  call `<init>`(v0, v8, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f131e.  throw v0;
  #L3f1320.  if v2 == 0 then goto L3f1352;
  #L3f1324.  if v3 == 0 then goto L3f1352;
  #L3f1328.  call temp:= `isEmpty`(v2) @signature `Lorg/simpleframework/xml/core/ModelList;.isEmpty:()Z` @kind virtual;
  #L3f132e.  v2:= temp;
  #L3f1330.  if v2 == 0 then goto L3f1336;
  #L3f1334.  goto L3f1352;
  #L3f1336.  v0:= new `org.simpleframework.xml.core.ElementException`;
  #L3f133a.  v2:= new `java.lang.Object`[v6];
  #L3f133e.  v2[v5]:= v1 @kind object;
  #L3f1342.  v2[v4]:= v8 @kind object;
  #L3f1346.  v8:= "Element '%s' is also a path name in %s" @kind object;
  #L3f134a.  call `<init>`(v0, v8, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f1350.  throw v0;
  #L3f1352.  v2:= v7.`org.simpleframework.xml.core.TreeModel.expression` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L3f1356.  if v2 == 0 then goto L3f12bc;
  #L3f135a.  call temp:= `getElement`(v2, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3f1360.  goto L3f12bc;
  #L3f1362.  return @kind void;
}
procedure `void` `validateExpression`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateExpression:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f1374.  call temp:= `getExpression`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L3f137a.  v5:= temp @kind object;
  #L3f137c.  v0:= v4.`org.simpleframework.xml.core.TreeModel.expression` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L3f1380.  if v0 == 0 then goto L3f13ce;
  #L3f1384.  call temp:= `getPath`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:()Ljava/lang/String;` @kind interface;
  #L3f138a.  v0:= temp @kind object;
  #L3f138c.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:()Ljava/lang/String;` @kind interface;
  #L3f1392.  v5:= temp @kind object;
  #L3f1394.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f139a.  v1:= temp;
  #L3f139c.  if v1 == 0 then goto L3f13a2;
  #L3f13a0.  goto L3f13d2;
  #L3f13a2.  v1:= new `org.simpleframework.xml.core.PathException`;
  #L3f13a6.  v2:= 3I;
  #L3f13a8.  v2:= new `java.lang.Object`[v2];
  #L3f13ac.  v3:= 0I;
  #L3f13ae.  v2[v3]:= v0 @kind object;
  #L3f13b2.  v0:= 1I;
  #L3f13b4.  v2[v0]:= v5 @kind object;
  #L3f13b8.  v5:= v4.`org.simpleframework.xml.core.TreeModel.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3f13bc.  v0:= 2I;
  #L3f13be.  v2[v0]:= v5 @kind object;
  #L3f13c2.  v5:= "Path '%s' does not match '%s' in %s" @kind object;
  #L3f13c6.  call `<init>`(v1, v5, v2) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f13cc.  throw v1;
  #L3f13ce.  v4.`org.simpleframework.xml.core.TreeModel.expression` @type ^`org.simpleframework.xml.core.Expression` := v5 @kind object;
  #L3f13d2.  return @kind void;
}
procedure `void` `validateExpressions`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateExpressions:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f13e4.  v2:= v1.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f13e8.  call temp:= `iterator`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f13ee.  v2:= temp @kind object;
  #L3f13f0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f13f6.  v0:= temp;
  #L3f13f8.  if v0 == 0 then goto L3f1414;
  #L3f13fc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f1402.  v0:= temp @kind object;
  #L3f1404.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3f1408.  if v0 == 0 then goto L3f13f0;
  #L3f140c.  call `validateExpression`(v1, v0) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateExpression:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3f1412.  goto L3f13f0;
  #L3f1414.  v2:= v1.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f1418.  call temp:= `iterator`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f141e.  v2:= temp @kind object;
  #L3f1420.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f1426.  v0:= temp;
  #L3f1428.  if v0 == 0 then goto L3f1444;
  #L3f142c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f1432.  v0:= temp @kind object;
  #L3f1434.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3f1438.  if v0 == 0 then goto L3f1420;
  #L3f143c.  call `validateExpression`(v1, v0) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateExpression:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3f1442.  goto L3f1420;
  #L3f1444.  v2:= v1.`org.simpleframework.xml.core.TreeModel.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3f1448.  if v2 == 0 then goto L3f1452;
  #L3f144c.  call `validateExpression`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateExpression:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3f1452.  return @kind void;
}
procedure `void` `validateModels`(`org.simpleframework.xml.core.TreeModel` v8 @kind this, `java.lang.Class` v9 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateModels:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f1464.  v0:= v8.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L3f1468.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ModelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f146e.  v0:= temp @kind object;
  #L3f1470.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f1476.  v1:= temp;
  #L3f1478.  if v1 == 0 then goto L3f1500;
  #L3f147c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f1482.  v1:= temp @kind object;
  #L3f1484.  v1:= (`org.simpleframework.xml.core.ModelList`) v1 @kind object;
  #L3f1488.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f148e.  v1:= temp @kind object;
  #L3f1490.  v2:= 1I;
  #L3f1492.  v3:= 1I;
  #L3f1494.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f149a.  v4:= temp;
  #L3f149c.  if v4 == 0 then goto L3f1470;
  #L3f14a0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f14a6.  v4:= temp @kind object;
  #L3f14a8.  v4:= (`org.simpleframework.xml.core.Model`) v4 @kind object;
  #L3f14ac.  if v4 == 0 then goto L3f1494;
  #L3f14b0.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Model;.getName:()Ljava/lang/String;` @kind interface;
  #L3f14b6.  v5:= temp @kind object;
  #L3f14b8.  call temp:= `getIndex`(v4) @signature `Lorg/simpleframework/xml/core/Model;.getIndex:()I` @kind interface;
  #L3f14be.  v6:= temp;
  #L3f14c0.  v7:= v3 + 1;
  #L3f14c4.  if v6 != v3 then goto L3f14d2;
  #L3f14c8.  call `validate`(v4, v9) @signature `Lorg/simpleframework/xml/core/Model;.validate:(Ljava/lang/Class;)V` @kind interface;
  #L3f14ce.  v3:= v7;
  #L3f14d0.  goto L3f1494;
  #L3f14d2.  v0:= new `org.simpleframework.xml.core.ElementException`;
  #L3f14d6.  v1:= 3I;
  #L3f14d8.  v1:= new `java.lang.Object`[v1];
  #L3f14dc.  v3:= 0I;
  #L3f14de.  v1[v3]:= v5 @kind object;
  #L3f14e2.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f14e8.  v3:= temp @kind object;
  #L3f14ea.  v1[v2]:= v3 @kind object;
  #L3f14ee.  v2:= 2I;
  #L3f14f0.  v1[v2]:= v9 @kind object;
  #L3f14f4.  v9:= "Path section '%s[%s]' is out of sequence in %s" @kind object;
  #L3f14f8.  call `<init>`(v0, v9, v1) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f14fe.  throw v0;
  #L3f1500.  return @kind void;
}
procedure `void` `validateText`(`org.simpleframework.xml.core.TreeModel` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateText:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f1514.  v0:= v5.`org.simpleframework.xml.core.TreeModel.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3f1518.  if v0 == 0 then goto L3f1580;
  #L3f151c.  v0:= v5.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f1520.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L3f1526.  v0:= temp;
  #L3f1528.  v1:= 1I;
  #L3f152a.  v2:= 0I;
  #L3f152c.  v3:= 2I;
  #L3f152e.  if v0 == 0 then goto L3f1560;
  #L3f1532.  call temp:= `isComposite`(v5) @signature `Lorg/simpleframework/xml/core/TreeModel;.isComposite:()Z` @kind virtual;
  #L3f1538.  v0:= temp;
  #L3f153a.  if v0 != 0 then goto L3f1540;
  #L3f153e.  goto L3f1580;
  #L3f1540.  v0:= new `org.simpleframework.xml.core.TextException`;
  #L3f1544.  v3:= new `java.lang.Object`[v3];
  #L3f1548.  v4:= v5.`org.simpleframework.xml.core.TreeModel.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3f154c.  v3[v2]:= v4 @kind object;
  #L3f1550.  v3[v1]:= v6 @kind object;
  #L3f1554.  v6:= "Text annotation %s can not be used with paths in %s" @kind object;
  #L3f1558.  call `<init>`(v0, v6, v3) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f155e.  throw v0;
  #L3f1560.  v0:= new `org.simpleframework.xml.core.TextException`;
  #L3f1564.  v3:= new `java.lang.Object`[v3];
  #L3f1568.  v4:= v5.`org.simpleframework.xml.core.TreeModel.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3f156c.  v3[v2]:= v4 @kind object;
  #L3f1570.  v3[v1]:= v6 @kind object;
  #L3f1574.  v6:= "Text annotation %s used with elements in %s" @kind object;
  #L3f1578.  call `<init>`(v0, v6, v3) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f157e.  throw v0;
  #L3f1580.  return @kind void;
}
procedure `org.simpleframework.xml.core.LabelMap` `getAttributes`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0e80.  v0:= v1.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f0e84.  call temp:= `getLabels`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @kind virtual;
  #L3f0e8a.  v0:= temp @kind object;
  #L3f0e8c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.LabelMap` `getElements`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0ea0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f0ea4.  call temp:= `getLabels`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @kind virtual;
  #L3f0eaa.  v0:= temp @kind object;
  #L3f0eac.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getExpression`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0e48.  v0:= v1.`org.simpleframework.xml.core.TreeModel.expression` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L3f0e4c.  return v0 @kind object;
}
procedure `int` `getIndex`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0d70.  v0:= v1.`org.simpleframework.xml.core.TreeModel.index` @type ^`int`;
  #L3f0d74.  return v0;
}
procedure `org.simpleframework.xml.core.ModelMap` `getModels`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getModels:()Lorg/simpleframework/xml/core/ModelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0fa0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L3f0fa4.  call temp:= `getModels`(v0) @signature `Lorg/simpleframework/xml/core/ModelMap;.getModels:()Lorg/simpleframework/xml/core/ModelMap;` @kind virtual;
  #L3f0faa.  v0:= temp @kind object;
  #L3f0fac.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0d88.  v0:= v1.`org.simpleframework.xml.core.TreeModel.name` @type ^`java.lang.String` @kind object;
  #L3f0d8c.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0da0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.prefix` @type ^`java.lang.String` @kind object;
  #L3f0da4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getText`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getText:()Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0e60.  v0:= v1.`org.simpleframework.xml.core.TreeModel.list` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3f0e64.  if v0 == 0 then goto L3f0e6a;
  #L3f0e68.  return v0 @kind object;
  #L3f0e6a.  v0:= v1.`org.simpleframework.xml.core.TreeModel.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3f0e6e.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.isAttribute:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0c48.  v0:= v1.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f0c4c.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0c52.  v2:= temp;
  #L3f0c54.  return v2;
}
procedure `boolean` `isComposite`(`org.simpleframework.xml.core.TreeModel` v4 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.isComposite:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f0c68.  v0:= v4.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L3f0c6c.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ModelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f0c72.  v0:= temp @kind object;
  #L3f0c74.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f0c7a.  v1:= temp;
  #L3f0c7c.  v2:= 1I;
  #L3f0c7e.  if v1 == 0 then goto L3f0cc0;
  #L3f0c82.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f0c88.  v1:= temp @kind object;
  #L3f0c8a.  v1:= (`org.simpleframework.xml.core.ModelList`) v1 @kind object;
  #L3f0c8e.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f0c94.  v1:= temp @kind object;
  #L3f0c96.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f0c9c.  v3:= temp;
  #L3f0c9e.  if v3 == 0 then goto L3f0c74;
  #L3f0ca2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f0ca8.  v3:= temp @kind object;
  #L3f0caa.  v3:= (`org.simpleframework.xml.core.Model`) v3 @kind object;
  #L3f0cae.  if v3 == 0 then goto L3f0c96;
  #L3f0cb2.  call temp:= `isEmpty`(v3) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L3f0cb8.  v3:= temp;
  #L3f0cba.  if v3 != 0 then goto L3f0c96;
  #L3f0cbe.  return v2;
  #L3f0cc0.  v0:= v4.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L3f0cc4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L3f0cca.  v0:= temp;
  #L3f0ccc.  v0:= v0 ^~ v2 @kind int;
  #L3f0cce.  return v0;
}
procedure `boolean` `isElement`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.isElement:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0ce0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f0ce4.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0cea.  v2:= temp;
  #L3f0cec.  return v2;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.TreeModel` v2 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f0d00.  v0:= v2.`org.simpleframework.xml.core.TreeModel.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3f0d04.  v1:= 0I;
  #L3f0d06.  if v0 == 0 then goto L3f0d0c;
  #L3f0d0a.  return v1;
  #L3f0d0c.  v0:= v2.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f0d10.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L3f0d16.  v0:= temp;
  #L3f0d18.  if v0 != 0 then goto L3f0d1e;
  #L3f0d1c.  return v1;
  #L3f0d1e.  v0:= v2.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f0d22.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L3f0d28.  v0:= temp;
  #L3f0d2a.  if v0 != 0 then goto L3f0d30;
  #L3f0d2e.  return v1;
  #L3f0d30.  call temp:= `isComposite`(v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.isComposite:()Z` @kind virtual;
  #L3f0d36.  v0:= temp;
  #L3f0d38.  v0:= v0 ^~ 1;
  #L3f0d3c.  return v0;
}
procedure `boolean` `isModel`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.isModel:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0d50.  v0:= v1.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L3f0d54.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0d5a.  v2:= temp;
  #L3f0d5c.  return v2;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.TreeModel` v3 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f0df8.  v0:= new `java.util.ArrayList`;
  #L3f0dfc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f0e02.  v1:= v3.`org.simpleframework.xml.core.TreeModel.order` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L3f0e06.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f0e0c.  v1:= temp @kind object;
  #L3f0e0e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f0e14.  v2:= temp;
  #L3f0e16.  if v2 == 0 then goto L3f0e2e;
  #L3f0e1a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f0e20.  v2:= temp @kind object;
  #L3f0e22.  v2:= (`java.lang.String`) v2 @kind object;
  #L3f0e26.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0e2c.  goto L3f0e0e;
  #L3f0e2e.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f0e34.  v0:= temp @kind object;
  #L3f0e36.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Model` `lookup`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0f04.  v0:= v1.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L3f0f08.  call temp:= `lookup`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/ModelMap;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind virtual;
  #L3f0f0e.  v2:= temp @kind object;
  #L3f0f10.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Model` `lookup`(`org.simpleframework.xml.core.TreeModel` v3 @kind this, `org.simpleframework.xml.core.Expression` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f0f24.  call temp:= `getFirst`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L3f0f2a.  v0:= temp @kind object;
  #L3f0f2c.  call temp:= `getIndex`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L3f0f32.  v1:= temp;
  #L3f0f34.  call temp:= `lookup`(v3, v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind virtual;
  #L3f0f3a.  v0:= temp @kind object;
  #L3f0f3c.  call temp:= `isPath`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L3f0f42.  v1:= temp;
  #L3f0f44.  if v1 == 0 then goto L3f0f62;
  #L3f0f48.  v1:= 1I;
  #L3f0f4a.  v2:= 0I;
  #L3f0f4c.  call temp:= `getPath`(v4, v1, v2) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L3f0f52.  v4:= temp @kind object;
  #L3f0f54.  if v0 == 0 then goto L3f0f62;
  #L3f0f58.  call temp:= `lookup`(v0, v4) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L3f0f5e.  v4:= temp @kind object;
  #L3f0f60.  return v4 @kind object;
  #L3f0f62.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Model` `register`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0f74.  v0:= v1.`org.simpleframework.xml.core.TreeModel.models` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L3f0f78.  call temp:= `lookup`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/ModelMap;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind virtual;
  #L3f0f7e.  v0:= temp @kind object;
  #L3f0f80.  if v0 != 0 then goto L3f0f8e;
  #L3f0f84.  call temp:= `create`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/TreeModel;.create:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L3f0f8a.  v2:= temp @kind object;
  #L3f0f8c.  return v2 @kind object;
  #L3f0f8e.  return v0 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `org.simpleframework.xml.core.Label` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.register:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f1048.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isAttribute:()Z` @kind interface;
  #L3f104e.  v0:= temp;
  #L3f1050.  if v0 == 0 then goto L3f105c;
  #L3f1054.  call `registerAttribute`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerAttribute:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L3f105a.  goto L3f1076;
  #L3f105c.  call temp:= `isText`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isText:()Z` @kind interface;
  #L3f1062.  v0:= temp;
  #L3f1064.  if v0 == 0 then goto L3f1070;
  #L3f1068.  call `registerText`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L3f106e.  goto L3f1076;
  #L3f1070.  call `registerElement`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerElement:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L3f1076.  return @kind void;
}
procedure `void` `registerAttribute`(`org.simpleframework.xml.core.TreeModel` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerAttribute:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f1088.  v0:= v2.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f108c.  v1:= 0I;
  #L3f108e.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f1094.  return @kind void;
}
procedure `void` `registerAttribute`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerAttribute:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f10a8.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3f10ae.  v0:= temp @kind object;
  #L3f10b0.  v1:= v4.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f10b4.  call temp:= `get`(v1, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f10ba.  v1:= temp @kind object;
  #L3f10bc.  if v1 != 0 then goto L3f10cc;
  #L3f10c0.  v1:= v4.`org.simpleframework.xml.core.TreeModel.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f10c4.  call temp:= `put`(v1, v0, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f10ca.  return @kind void;
  #L3f10cc.  v1:= new `org.simpleframework.xml.core.AttributeException`;
  #L3f10d0.  v2:= 2I;
  #L3f10d2.  v2:= new `java.lang.Object`[v2];
  #L3f10d6.  v3:= 0I;
  #L3f10d8.  v2[v3]:= v0 @kind object;
  #L3f10dc.  v0:= 1I;
  #L3f10de.  v2[v0]:= v5 @kind object;
  #L3f10e2.  v5:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L3f10e6.  call `<init>`(v1, v5, v2) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f10ec.  throw v1;
}
procedure `void` `registerElement`(`org.simpleframework.xml.core.TreeModel` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerElement:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f1100.  v0:= v2.`org.simpleframework.xml.core.TreeModel.order` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L3f1104.  call temp:= `contains`(v0, v3) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f110a.  v0:= temp;
  #L3f110c.  if v0 != 0 then goto L3f111a;
  #L3f1110.  v0:= v2.`org.simpleframework.xml.core.TreeModel.order` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L3f1114.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f111a.  v0:= v2.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f111e.  v1:= 0I;
  #L3f1120.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f1126.  return @kind void;
}
procedure `void` `registerElement`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerElement:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f1138.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3f113e.  v0:= temp @kind object;
  #L3f1140.  v1:= v4.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f1144.  call temp:= `get`(v1, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f114a.  v1:= temp @kind object;
  #L3f114c.  if v1 != 0 then goto L3f1186;
  #L3f1150.  v1:= v4.`org.simpleframework.xml.core.TreeModel.order` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L3f1154.  call temp:= `contains`(v1, v0) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f115a.  v1:= temp;
  #L3f115c.  if v1 != 0 then goto L3f116a;
  #L3f1160.  v1:= v4.`org.simpleframework.xml.core.TreeModel.order` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L3f1164.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f116a.  call temp:= `isTextList`(v5) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L3f1170.  v1:= temp;
  #L3f1172.  if v1 == 0 then goto L3f117a;
  #L3f1176.  v4.`org.simpleframework.xml.core.TreeModel.list` @type ^`org.simpleframework.xml.core.Label` := v5 @kind object;
  #L3f117a.  v1:= v4.`org.simpleframework.xml.core.TreeModel.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3f117e.  call temp:= `put`(v1, v0, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f1184.  return @kind void;
  #L3f1186.  v1:= new `org.simpleframework.xml.core.ElementException`;
  #L3f118a.  v2:= 2I;
  #L3f118c.  v2:= new `java.lang.Object`[v2];
  #L3f1190.  v3:= 0I;
  #L3f1192.  v2[v3]:= v0 @kind object;
  #L3f1196.  v0:= 1I;
  #L3f1198.  v2[v0]:= v5 @kind object;
  #L3f119c.  v5:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L3f11a0.  call `<init>`(v1, v5, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f11a6.  throw v1;
}
procedure `void` `registerText`(`org.simpleframework.xml.core.TreeModel` v3 @kind this, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f11b8.  v0:= v3.`org.simpleframework.xml.core.TreeModel.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3f11bc.  if v0 != 0 then goto L3f11c6;
  #L3f11c0.  v3.`org.simpleframework.xml.core.TreeModel.text` @type ^`org.simpleframework.xml.core.Label` := v4 @kind object;
  #L3f11c4.  return @kind void;
  #L3f11c6.  v0:= new `org.simpleframework.xml.core.TextException`;
  #L3f11ca.  v1:= 1I;
  #L3f11cc.  v1:= new `java.lang.Object`[v1];
  #L3f11d0.  v2:= 0I;
  #L3f11d2.  v1[v2]:= v4 @kind object;
  #L3f11d6.  v4:= "Duplicate text annotation on %s" @kind object;
  #L3f11da.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f11e0.  throw v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.TreeModel` v3 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f0db8.  v0:= 2I;
  #L3f0dba.  v0:= new `java.lang.Object`[v0];
  #L3f0dbe.  v1:= v3.`org.simpleframework.xml.core.TreeModel.name` @type ^`java.lang.String` @kind object;
  #L3f0dc2.  v2:= 0I;
  #L3f0dc4.  v0[v2]:= v1 @kind object;
  #L3f0dc8.  v1:= v3.`org.simpleframework.xml.core.TreeModel.index` @type ^`int`;
  #L3f0dcc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f0dd2.  v1:= temp @kind object;
  #L3f0dd4.  v2:= 1I;
  #L3f0dd6.  v0[v2]:= v1 @kind object;
  #L3f0dda.  v1:= "model '%s[%s]'" @kind object;
  #L3f0dde.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3f0de4.  v0:= temp @kind object;
  #L3f0de6.  return v0 @kind object;
}
procedure `void` `validate`(`org.simpleframework.xml.core.TreeModel` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.validate:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L3f11f4.  call `validateExpressions`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateExpressions:(Ljava/lang/Class;)V` @kind direct;
  #L3f11fa.  call `validateAttributes`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateAttributes:(Ljava/lang/Class;)V` @kind direct;
  #L3f1200.  call `validateElements`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateElements:(Ljava/lang/Class;)V` @kind direct;
  #L3f1206.  call `validateModels`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateModels:(Ljava/lang/Class;)V` @kind direct;
  #L3f120c.  call `validateText`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.validateText:(Ljava/lang/Class;)V` @kind direct;
  #L3f1212.  return @kind void;
}
