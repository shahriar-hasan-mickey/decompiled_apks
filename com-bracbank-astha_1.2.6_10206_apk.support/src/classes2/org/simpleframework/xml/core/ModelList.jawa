record `org.simpleframework.xml.core.ModelList` @kind class @AccessFlag PUBLIC extends `java.util.ArrayList` @kind class {
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ModelList` v0 @kind this) @signature `Lorg/simpleframework/xml/core/ModelList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8ffc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e9002.  return @kind void;
}
procedure `org.simpleframework.xml.core.ModelList` `build`(`org.simpleframework.xml.core.ModelList` v3 @kind this) @signature `Lorg/simpleframework/xml/core/ModelList;.build:()Lorg/simpleframework/xml/core/ModelList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8fb8.  v0:= new `org.simpleframework.xml.core.ModelList`;
  #L3e8fbc.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/ModelList;.<init>:()V` @kind direct;
  #L3e8fc2.  call temp:= `iterator`(v3) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e8fc8.  v1:= temp @kind object;
  #L3e8fca.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e8fd0.  v2:= temp;
  #L3e8fd2.  if v2 == 0 then goto L3e8fea;
  #L3e8fd6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e8fdc.  v2:= temp @kind object;
  #L3e8fde.  v2:= (`org.simpleframework.xml.core.Model`) v2 @kind object;
  #L3e8fe2.  call `register`(v0, v2) @signature `Lorg/simpleframework/xml/core/ModelList;.register:(Lorg/simpleframework/xml/core/Model;)V` @kind virtual;
  #L3e8fe8.  goto L3e8fca;
  #L3e8fea.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.ModelList` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ModelList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8f00.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e8f06.  v0:= temp @kind object;
  #L3e8f08.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e8f0e.  v1:= temp;
  #L3e8f10.  if v1 == 0 then goto L3e8f34;
  #L3e8f14.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e8f1a.  v1:= temp @kind object;
  #L3e8f1c.  v1:= (`org.simpleframework.xml.core.Model`) v1 @kind object;
  #L3e8f20.  if v1 == 0 then goto L3e8f08;
  #L3e8f24.  call temp:= `isEmpty`(v1) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L3e8f2a.  v1:= temp;
  #L3e8f2c.  if v1 != 0 then goto L3e8f08;
  #L3e8f30.  v0:= 0I;
  #L3e8f32.  return v0;
  #L3e8f34.  v0:= 1I;
  #L3e8f36.  return v0;
}
procedure `org.simpleframework.xml.core.Model` `lookup`(`org.simpleframework.xml.core.ModelList` v1 @kind this, `int` v2 ) @signature `Lorg/simpleframework/xml/core/ModelList;.lookup:(I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8f48.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3e8f4e.  v0:= temp;
  #L3e8f50.  if v2 > v0 then goto L3e8f66;
  #L3e8f54.  v2:= v2 + -1;
  #L3e8f58.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3e8f5e.  v2:= temp @kind object;
  #L3e8f60.  v2:= (`org.simpleframework.xml.core.Model`) v2 @kind object;
  #L3e8f64.  return v2 @kind object;
  #L3e8f66.  v2:= 0I;
  #L3e8f68.  return v2 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.ModelList` v4 @kind this, `org.simpleframework.xml.core.Model` v5 @kind object) @signature `Lorg/simpleframework/xml/core/ModelList;.register:(Lorg/simpleframework/xml/core/Model;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e9014.  call temp:= `getIndex`(v5) @signature `Lorg/simpleframework/xml/core/Model;.getIndex:()I` @kind interface;
  #L3e901a.  v0:= temp;
  #L3e901c.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3e9022.  v1:= temp;
  #L3e9024.  v2:= 0I;
  #L3e9026.  if v2 >= v0 then goto L3e904a;
  #L3e902a.  if v2 < v1 then goto L3e9036;
  #L3e902e.  v3:= 0I;
  #L3e9030.  call temp:= `add`(v4, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e9036.  v3:= v0 + -1;
  #L3e903a.  if v2 != v3 then goto L3e9044;
  #L3e903e.  call temp:= `set`(v4, v3, v5) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e9044.  v2:= v2 + 1;
  #L3e9048.  goto L3e9026;
  #L3e904a.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `take`(`org.simpleframework.xml.core.ModelList` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ModelList;.take:()Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8f7c.  call temp:= `isEmpty`(v2) @signature `Lorg/simpleframework/xml/core/ModelList;.isEmpty:()Z` @kind virtual;
  #L3e8f82.  v0:= temp;
  #L3e8f84.  if v0 != 0 then goto L3e8fa4;
  #L3e8f88.  v0:= 0I;
  #L3e8f8a.  call temp:= `remove`(v2, v0) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L3e8f90.  v0:= temp @kind object;
  #L3e8f92.  v0:= (`org.simpleframework.xml.core.Model`) v0 @kind object;
  #L3e8f96.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L3e8f9c.  v1:= temp;
  #L3e8f9e.  if v1 != 0 then goto L3e8f7c;
  #L3e8fa2.  return v0 @kind object;
  #L3e8fa4.  v0:= 0I;
  #L3e8fa6.  return v0 @kind object;
}
