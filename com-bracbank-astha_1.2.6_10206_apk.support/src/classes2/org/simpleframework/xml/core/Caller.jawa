record `org.simpleframework.xml.core.Caller` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.Caller.commit` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.Caller.complete` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.Caller.context` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.Caller.persist` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.Caller.replace` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.Caller.resolve` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.Caller.validate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Caller` v1 @kind this, `org.simpleframework.xml.core.Scanner` v2 @kind object, `org.simpleframework.xml.core.Context` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Caller;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ddf40.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ddf46.  call temp:= `getValidate`(v2) @signature `Lorg/simpleframework/xml/core/Scanner;.getValidate:()Lorg/simpleframework/xml/core/Function;` @kind interface;
  #L3ddf4c.  v0:= temp @kind object;
  #L3ddf4e.  v1.`org.simpleframework.xml.core.Caller.validate` @type ^`org.simpleframework.xml.core.Function` := v0 @kind object;
  #L3ddf52.  call temp:= `getComplete`(v2) @signature `Lorg/simpleframework/xml/core/Scanner;.getComplete:()Lorg/simpleframework/xml/core/Function;` @kind interface;
  #L3ddf58.  v0:= temp @kind object;
  #L3ddf5a.  v1.`org.simpleframework.xml.core.Caller.complete` @type ^`org.simpleframework.xml.core.Function` := v0 @kind object;
  #L3ddf5e.  call temp:= `getReplace`(v2) @signature `Lorg/simpleframework/xml/core/Scanner;.getReplace:()Lorg/simpleframework/xml/core/Function;` @kind interface;
  #L3ddf64.  v0:= temp @kind object;
  #L3ddf66.  v1.`org.simpleframework.xml.core.Caller.replace` @type ^`org.simpleframework.xml.core.Function` := v0 @kind object;
  #L3ddf6a.  call temp:= `getResolve`(v2) @signature `Lorg/simpleframework/xml/core/Scanner;.getResolve:()Lorg/simpleframework/xml/core/Function;` @kind interface;
  #L3ddf70.  v0:= temp @kind object;
  #L3ddf72.  v1.`org.simpleframework.xml.core.Caller.resolve` @type ^`org.simpleframework.xml.core.Function` := v0 @kind object;
  #L3ddf76.  call temp:= `getPersist`(v2) @signature `Lorg/simpleframework/xml/core/Scanner;.getPersist:()Lorg/simpleframework/xml/core/Function;` @kind interface;
  #L3ddf7c.  v0:= temp @kind object;
  #L3ddf7e.  v1.`org.simpleframework.xml.core.Caller.persist` @type ^`org.simpleframework.xml.core.Function` := v0 @kind object;
  #L3ddf82.  call temp:= `getCommit`(v2) @signature `Lorg/simpleframework/xml/core/Scanner;.getCommit:()Lorg/simpleframework/xml/core/Function;` @kind interface;
  #L3ddf88.  v2:= temp @kind object;
  #L3ddf8a.  v1.`org.simpleframework.xml.core.Caller.commit` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L3ddf8e.  v1.`org.simpleframework.xml.core.Caller.context` @type ^`org.simpleframework.xml.core.Context` := v3 @kind object;
  #L3ddf92.  return @kind void;
}
procedure `void` `commit`(`org.simpleframework.xml.core.Caller` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Caller;.commit:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ddfa4.  v0:= v2.`org.simpleframework.xml.core.Caller.commit` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3ddfa8.  if v0 == 0 then goto L3ddfb6;
  #L3ddfac.  v1:= v2.`org.simpleframework.xml.core.Caller.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3ddfb0.  call temp:= `call`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Function;.call:(Lorg/simpleframework/xml/core/Context;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ddfb6.  return @kind void;
}
procedure `void` `complete`(`org.simpleframework.xml.core.Caller` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Caller;.complete:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ddfc8.  v0:= v2.`org.simpleframework.xml.core.Caller.complete` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3ddfcc.  if v0 == 0 then goto L3ddfda;
  #L3ddfd0.  v1:= v2.`org.simpleframework.xml.core.Caller.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3ddfd4.  call temp:= `call`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Function;.call:(Lorg/simpleframework/xml/core/Context;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ddfda.  return @kind void;
}
procedure `void` `persist`(`org.simpleframework.xml.core.Caller` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Caller;.persist:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ddfec.  v0:= v2.`org.simpleframework.xml.core.Caller.persist` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3ddff0.  if v0 == 0 then goto L3ddffe;
  #L3ddff4.  v1:= v2.`org.simpleframework.xml.core.Caller.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3ddff8.  call temp:= `call`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Function;.call:(Lorg/simpleframework/xml/core/Context;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ddffe.  return @kind void;
}
procedure `java.lang.Object` `replace`(`org.simpleframework.xml.core.Caller` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Caller;.replace:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ddef0.  v0:= v2.`org.simpleframework.xml.core.Caller.replace` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3ddef4.  if v0 == 0 then goto L3ddf04;
  #L3ddef8.  v1:= v2.`org.simpleframework.xml.core.Caller.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3ddefc.  call temp:= `call`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Function;.call:(Lorg/simpleframework/xml/core/Context;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ddf02.  v3:= temp @kind object;
  #L3ddf04.  return v3 @kind object;
}
procedure `java.lang.Object` `resolve`(`org.simpleframework.xml.core.Caller` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Caller;.resolve:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ddf18.  v0:= v2.`org.simpleframework.xml.core.Caller.resolve` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3ddf1c.  if v0 == 0 then goto L3ddf2c;
  #L3ddf20.  v1:= v2.`org.simpleframework.xml.core.Caller.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3ddf24.  call temp:= `call`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Function;.call:(Lorg/simpleframework/xml/core/Context;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ddf2a.  v3:= temp @kind object;
  #L3ddf2c.  return v3 @kind object;
}
procedure `void` `validate`(`org.simpleframework.xml.core.Caller` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Caller;.validate:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3de010.  v0:= v2.`org.simpleframework.xml.core.Caller.validate` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de014.  if v0 == 0 then goto L3de022;
  #L3de018.  v1:= v2.`org.simpleframework.xml.core.Caller.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3de01c.  call temp:= `call`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Function;.call:(Lorg/simpleframework/xml/core/Context;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3de022.  return @kind void;
}
