record `org.simpleframework.xml.core.OverrideType` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.strategy.Type` @kind interface {
  `java.lang.Class` `org.simpleframework.xml.core.OverrideType.override` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.OverrideType.type` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.OverrideType` v0 @kind this, `org.simpleframework.xml.strategy.Type` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/OverrideType;.<init>:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e9b80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e9b86.  v0.`org.simpleframework.xml.core.OverrideType.override` @type ^`java.lang.Class` := v2 @kind object;
  #L3e9b8a.  v0.`org.simpleframework.xml.core.OverrideType.type` @type ^`org.simpleframework.xml.strategy.Type` := v1 @kind object;
  #L3e9b8e.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.OverrideType` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/OverrideType;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9b60.  v0:= v1.`org.simpleframework.xml.core.OverrideType.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e9b64.  call temp:= `getAnnotation`(v0, v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L3e9b6a.  v2:= temp @kind object;
  #L3e9b6c.  return v2 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.OverrideType` v1 @kind this) @signature `Lorg/simpleframework/xml/core/OverrideType;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9b28.  v0:= v1.`org.simpleframework.xml.core.OverrideType.override` @type ^`java.lang.Class` @kind object;
  #L3e9b2c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.OverrideType` v1 @kind this) @signature `Lorg/simpleframework/xml/core/OverrideType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9b40.  v0:= v1.`org.simpleframework.xml.core.OverrideType.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e9b44.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e9b4a.  v0:= temp @kind object;
  #L3e9b4c.  return v0 @kind object;
}
