record `org.simpleframework.xml.core.PrimitiveFactory` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Factory` @kind class {
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PrimitiveFactory` v0 @kind this, `org.simpleframework.xml.core.Context` v1 @kind object, `org.simpleframework.xml.strategy.Type` v2 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ebd4c.  call `<init>`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Factory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3ebd52.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PrimitiveFactory` v0 @kind this, `org.simpleframework.xml.core.Context` v1 @kind object, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ebd64.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Factory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L3ebd6a.  return @kind void;
}
procedure `java.lang.Object` `getInstance`(`org.simpleframework.xml.core.PrimitiveFactory` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getInstance:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebca8.  v0:= v1.`org.simpleframework.xml.core.Factory.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ebcac.  call temp:= `read`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/Support;.read:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L3ebcb2.  v2:= temp @kind object;
  #L3ebcb4.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.PrimitiveFactory` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ebd08.  call temp:= `getOverride`(v2, v3) @signature `Lorg/simpleframework/xml/core/Factory;.getOverride:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/strategy/Value;` @kind virtual;
  #L3ebd0e.  v3:= temp @kind object;
  #L3ebd10.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/core/Factory;.getType:()Ljava/lang/Class;` @kind virtual;
  #L3ebd16.  v0:= temp @kind object;
  #L3ebd18.  if v3 != 0 then goto L3ebd2a;
  #L3ebd1c.  v3:= v2.`org.simpleframework.xml.core.Factory.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3ebd20.  call temp:= `getInstance`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @kind interface;
  #L3ebd26.  v3:= temp @kind object;
  #L3ebd28.  return v3 @kind object;
  #L3ebd2a.  v0:= new `org.simpleframework.xml.core.ObjectInstance`;
  #L3ebd2e.  v1:= v2.`org.simpleframework.xml.core.Factory.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3ebd32.  call `<init>`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/ObjectInstance;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Value;)V` @kind direct;
  #L3ebd38.  return v0 @kind object;
}
procedure `java.lang.String` `getText`(`org.simpleframework.xml.core.PrimitiveFactory` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getText:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ebcc8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ebcce.  v0:= temp @kind object;
  #L3ebcd0.  call temp:= `isEnum`(v0) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L3ebcd6.  v1:= temp;
  #L3ebcd8.  if v1 == 0 then goto L3ebcea;
  #L3ebcdc.  v1:= v2.`org.simpleframework.xml.core.Factory.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ebce0.  call temp:= `write`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Support;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L3ebce6.  v3:= temp @kind object;
  #L3ebce8.  return v3 @kind object;
  #L3ebcea.  v1:= v2.`org.simpleframework.xml.core.Factory.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ebcee.  call temp:= `write`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Support;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L3ebcf4.  v3:= temp @kind object;
  #L3ebcf6.  return v3 @kind object;
}
