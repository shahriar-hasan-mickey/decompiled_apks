record `org.simpleframework.xml.core.SignatureBuilder` @kind class @AccessFlag PUBLIC {
  `java.lang.reflect.Constructor` `org.simpleframework.xml.core.SignatureBuilder.factory` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.SignatureBuilder$ParameterTable` `org.simpleframework.xml.core.SignatureBuilder.table` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.SignatureBuilder` v1 @kind this, `java.lang.reflect.Constructor` v2 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.<init>:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3edc38.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3edc3e.  v0:= new `org.simpleframework.xml.core.SignatureBuilder$ParameterTable`;
  #L3edc42.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.<init>:()V` @kind direct;
  #L3edc48.  v1.`org.simpleframework.xml.core.SignatureBuilder.table` @type ^`org.simpleframework.xml.core.SignatureBuilder$ParameterTable` := v0 @kind object;
  #L3edc4c.  v1.`org.simpleframework.xml.core.SignatureBuilder.factory` @type ^`java.lang.reflect.Constructor` := v2 @kind object;
  #L3edc50.  return @kind void;
}
procedure `java.util.List` `build`(`org.simpleframework.xml.core.SignatureBuilder` v1 @kind this, `org.simpleframework.xml.core.SignatureBuilder$ParameterTable` v2 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3edb18.  v0:= v1.`org.simpleframework.xml.core.SignatureBuilder.table` @type ^`org.simpleframework.xml.core.SignatureBuilder$ParameterTable` @kind object;
  #L3edb1c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L3edb22.  v0:= temp;
  #L3edb24.  if v0 == 0 then goto L3edb32;
  #L3edb28.  call temp:= `create`(v1) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.create:()Ljava/util/List;` @kind direct;
  #L3edb2e.  v2:= temp @kind object;
  #L3edb30.  return v2 @kind object;
  #L3edb32.  v0:= 0I;
  #L3edb34.  call `build`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;I)V` @kind direct;
  #L3edb3a.  call temp:= `create`(v1, v2) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.create:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;)Ljava/util/List;` @kind direct;
  #L3edb40.  v2:= temp @kind object;
  #L3edb42.  return v2 @kind object;
}
procedure `void` `build`(`org.simpleframework.xml.core.SignatureBuilder` v1 @kind this, `org.simpleframework.xml.core.SignatureBuilder$ParameterTable` v2 @kind object, `int` v3 ) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3edc64.  v0:= new `org.simpleframework.xml.core.SignatureBuilder$ParameterList`;
  #L3edc68.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;.<init>:()V` @kind direct;
  #L3edc6e.  call `build`(v1, v2, v0, v3) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;I)V` @kind direct;
  #L3edc74.  return @kind void;
}
procedure `void` `build`(`org.simpleframework.xml.core.SignatureBuilder` v5 @kind this, `org.simpleframework.xml.core.SignatureBuilder$ParameterTable` v6 @kind object, `org.simpleframework.xml.core.SignatureBuilder$ParameterList` v7 @kind object, `int` v8 ) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3edc88.  v0:= v5.`org.simpleframework.xml.core.SignatureBuilder.table` @type ^`org.simpleframework.xml.core.SignatureBuilder$ParameterTable` @kind object;
  #L3edc8c.  call temp:= `get`(v0, v8) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.get:(I)Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;` @kind virtual;
  #L3edc92.  v0:= temp @kind object;
  #L3edc94.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3edc9a.  v1:= temp;
  #L3edc9c.  v2:= v5.`org.simpleframework.xml.core.SignatureBuilder.table` @type ^`org.simpleframework.xml.core.SignatureBuilder$ParameterTable` @kind object;
  #L3edca0.  call temp:= `access$000`(v2) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.access$000:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;)I` @kind static;
  #L3edca6.  v2:= temp;
  #L3edca8.  v2:= v2 + -1;
  #L3edcac.  if v2 <= v8 then goto L3edce6;
  #L3edcb0.  v2:= 0I;
  #L3edcb2.  if v2 >= v1 then goto L3edcec;
  #L3edcb6.  v3:= new `org.simpleframework.xml.core.SignatureBuilder$ParameterList`;
  #L3edcba.  call `<init>`(v3, v7) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;.<init>:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;)V` @kind direct;
  #L3edcc0.  if v7 == 0 then goto L3edce0;
  #L3edcc4.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3edcca.  v4:= temp @kind object;
  #L3edccc.  v4:= (`org.simpleframework.xml.core.Parameter`) v4 @kind object;
  #L3edcd0.  call temp:= `add`(v3, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3edcd6.  v4:= v8 + 1;
  #L3edcda.  call `build`(v5, v6, v3, v4) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;I)V` @kind direct;
  #L3edce0.  v2:= v2 + 1;
  #L3edce4.  goto L3edcb2;
  #L3edce6.  call `populate`(v5, v6, v7, v8) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.populate:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;I)V` @kind direct;
  #L3edcec.  return @kind void;
}
procedure `java.util.List` `create`(`org.simpleframework.xml.core.SignatureBuilder` v3 @kind this) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.create:()Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3edb54.  v0:= new `java.util.ArrayList`;
  #L3edb58.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3edb5e.  v1:= new `org.simpleframework.xml.core.Signature`;
  #L3edb62.  v2:= v3.`org.simpleframework.xml.core.SignatureBuilder.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3edb66.  call `<init>`(v1, v2) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L3edb6c.  call temp:= `isValid`(v3) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.isValid:()Z` @kind virtual;
  #L3edb72.  v2:= temp;
  #L3edb74.  if v2 == 0 then goto L3edb7e;
  #L3edb78.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3edb7e.  return v0 @kind object;
}
procedure `java.util.List` `create`(`org.simpleframework.xml.core.SignatureBuilder` v10 @kind this, `org.simpleframework.xml.core.SignatureBuilder$ParameterTable` v11 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.create:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3edb90.  v0:= new `java.util.ArrayList`;
  #L3edb94.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3edb9a.  call temp:= `access$100`(v11) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.access$100:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;)I` @kind static;
  #L3edba0.  v1:= temp;
  #L3edba2.  call temp:= `access$000`(v11) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.access$000:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;)I` @kind static;
  #L3edba8.  v2:= temp;
  #L3edbaa.  v3:= 0I;
  #L3edbac.  v4:= 0I;
  #L3edbae.  if v4 >= v1 then goto L3edc26;
  #L3edbb2.  v5:= new `org.simpleframework.xml.core.Signature`;
  #L3edbb6.  v6:= v10.`org.simpleframework.xml.core.SignatureBuilder.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3edbba.  call `<init>`(v5, v6) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L3edbc0.  v6:= 0I;
  #L3edbc2.  if v6 >= v2 then goto L3edc1a;
  #L3edbc6.  call temp:= `get`(v11, v6, v4) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.get:(II)Lorg/simpleframework/xml/core/Parameter;` @kind virtual;
  #L3edbcc.  v7:= temp @kind object;
  #L3edbce.  call temp:= `getPath`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L3edbd4.  v8:= temp @kind object;
  #L3edbd6.  call temp:= `getKey`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3edbdc.  v9:= temp @kind object;
  #L3edbde.  call temp:= `contains`(v5, v9) @signature `Lorg/simpleframework/xml/core/Signature;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L3edbe4.  v9:= temp;
  #L3edbe6.  if v9 != 0 then goto L3edbf6;
  #L3edbea.  call `add`(v5, v7) @signature `Lorg/simpleframework/xml/core/Signature;.add:(Lorg/simpleframework/xml/core/Parameter;)V` @kind virtual;
  #L3edbf0.  v6:= v6 + 1;
  #L3edbf4.  goto L3edbc2;
  #L3edbf6.  v11:= new `org.simpleframework.xml.core.ConstructorException`;
  #L3edbfa.  v0:= 2I;
  #L3edbfc.  v0:= new `java.lang.Object`[v0];
  #L3edc00.  v0[v3]:= v8 @kind object;
  #L3edc04.  v1:= v10.`org.simpleframework.xml.core.SignatureBuilder.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3edc08.  v2:= 1I;
  #L3edc0a.  v0[v2]:= v1 @kind object;
  #L3edc0e.  v1:= "Parameter '%s' is a duplicate in %s" @kind object;
  #L3edc12.  call `<init>`(v11, v1, v0) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3edc18.  throw v11;
  #L3edc1a.  call temp:= `add`(v0, v5) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3edc20.  v4:= v4 + 1;
  #L3edc24.  goto L3edbae;
  #L3edc26.  return v0 @kind object;
}
procedure `void` `populate`(`org.simpleframework.xml.core.SignatureBuilder` v8 @kind this, `org.simpleframework.xml.core.SignatureBuilder$ParameterTable` v9 @kind object, `org.simpleframework.xml.core.SignatureBuilder$ParameterList` v10 @kind object, `int` v11 ) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.populate:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3edd1c.  v0:= v8.`org.simpleframework.xml.core.SignatureBuilder.table` @type ^`org.simpleframework.xml.core.SignatureBuilder$ParameterTable` @kind object;
  #L3edd20.  call temp:= `get`(v0, v11) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.get:(I)Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;` @kind virtual;
  #L3edd26.  v0:= temp @kind object;
  #L3edd28.  call temp:= `size`(v10) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3edd2e.  v1:= temp;
  #L3edd30.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3edd36.  v2:= temp;
  #L3edd38.  v3:= 0I;
  #L3edd3a.  v4:= 0I;
  #L3edd3c.  if v4 >= v2 then goto L3edd86;
  #L3edd40.  v5:= 0I;
  #L3edd42.  if v5 >= v1 then goto L3edd66;
  #L3edd46.  call temp:= `get`(v9, v5) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.get:(I)Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;` @kind virtual;
  #L3edd4c.  v6:= temp @kind object;
  #L3edd4e.  call temp:= `get`(v10, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3edd54.  v7:= temp @kind object;
  #L3edd56.  v7:= (`org.simpleframework.xml.core.Parameter`) v7 @kind object;
  #L3edd5a.  call temp:= `add`(v6, v7) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3edd60.  v5:= v5 + 1;
  #L3edd64.  goto L3edd42;
  #L3edd66.  call temp:= `get`(v9, v11) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.get:(I)Lorg/simpleframework/xml/core/SignatureBuilder$ParameterList;` @kind virtual;
  #L3edd6c.  v5:= temp @kind object;
  #L3edd6e.  call temp:= `get`(v0, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3edd74.  v6:= temp @kind object;
  #L3edd76.  v6:= (`org.simpleframework.xml.core.Parameter`) v6 @kind object;
  #L3edd7a.  call temp:= `add`(v5, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3edd80.  v4:= v4 + 1;
  #L3edd84.  goto L3edd3c;
  #L3edd86.  return @kind void;
}
procedure `java.util.List` `build`(`org.simpleframework.xml.core.SignatureBuilder` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edaf4.  v0:= new `org.simpleframework.xml.core.SignatureBuilder$ParameterTable`;
  #L3edaf8.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.<init>:()V` @kind direct;
  #L3edafe.  call temp:= `build`(v1, v0) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;)Ljava/util/List;` @kind direct;
  #L3edb04.  v0:= temp @kind object;
  #L3edb06.  return v0 @kind object;
}
procedure `void` `insert`(`org.simpleframework.xml.core.SignatureBuilder` v1 @kind this, `org.simpleframework.xml.core.Parameter` v2 @kind object, `int` v3 ) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.insert:(Lorg/simpleframework/xml/core/Parameter;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edd00.  v0:= v1.`org.simpleframework.xml.core.SignatureBuilder.table` @type ^`org.simpleframework.xml.core.SignatureBuilder$ParameterTable` @kind object;
  #L3edd04.  call `insert`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.insert:(Lorg/simpleframework/xml/core/Parameter;I)V` @kind virtual;
  #L3edd0a.  return @kind void;
}
procedure `boolean` `isValid`(`org.simpleframework.xml.core.SignatureBuilder` v2 @kind this) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.isValid:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3edabc.  v0:= v2.`org.simpleframework.xml.core.SignatureBuilder.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3edac0.  call temp:= `getParameterTypes`(v0) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3edac6.  v0:= temp @kind object;
  #L3edac8.  v1:= v2.`org.simpleframework.xml.core.SignatureBuilder.table` @type ^`org.simpleframework.xml.core.SignatureBuilder$ParameterTable` @kind object;
  #L3edacc.  call temp:= `access$000`(v1) @signature `Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;.access$000:(Lorg/simpleframework/xml/core/SignatureBuilder$ParameterTable;)I` @kind static;
  #L3edad2.  v1:= temp;
  #L3edad4.  v0:= length @variable v0;
  #L3edad6.  if v0 != v1 then goto L3edade;
  #L3edada.  v0:= 1I;
  #L3edadc.  goto L3edae0;
  #L3edade.  v0:= 0I;
  #L3edae0.  return v0;
}
