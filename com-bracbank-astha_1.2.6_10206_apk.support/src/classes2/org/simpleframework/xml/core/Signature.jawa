record `org.simpleframework.xml.core.Signature` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface {
  `java.lang.reflect.Constructor` `org.simpleframework.xml.core.Signature.factory` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ParameterMap` `org.simpleframework.xml.core.Signature.parameters` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `org.simpleframework.xml.core.Signature.type` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.reflect.Constructor` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ee68c.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/reflect/Constructor;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L3ee692.  v0:= temp @kind object;
  #L3ee694.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)V` @kind direct;
  #L3ee69a.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.reflect.Constructor` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ee6ac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ee6b2.  v0:= new `org.simpleframework.xml.core.ParameterMap`;
  #L3ee6b6.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.<init>:()V` @kind direct;
  #L3ee6bc.  v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` := v0 @kind object;
  #L3ee6c0.  v1.`org.simpleframework.xml.core.Signature.factory` @type ^`java.lang.reflect.Constructor` := v2 @kind object;
  #L3ee6c4.  v1.`org.simpleframework.xml.core.Signature.type` @type ^`java.lang.Class` := v3 @kind object;
  #L3ee6c8.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Signature` v1 @kind this, `org.simpleframework.xml.core.Signature` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ee6dc.  v0:= v2.`org.simpleframework.xml.core.Signature.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3ee6e0.  v2:= v2.`org.simpleframework.xml.core.Signature.type` @type ^`java.lang.Class` @kind object;
  #L3ee6e4.  call `<init>`(v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)V` @kind direct;
  #L3ee6ea.  return @kind void;
}
procedure `void` `add`(`org.simpleframework.xml.core.Signature` v2 @kind this, `org.simpleframework.xml.core.Parameter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.add:(Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ee6fc.  call temp:= `getKey`(v3) @signature `Lorg/simpleframework/xml/core/Parameter;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3ee702.  v0:= temp @kind object;
  #L3ee704.  if v0 == 0 then goto L3ee712;
  #L3ee708.  v1:= v2.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee70c.  call temp:= `put`(v1, v0, v3) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ee712.  return @kind void;
}
procedure `boolean` `contains`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee48c.  v0:= v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee490.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ee496.  v2:= temp;
  #L3ee498.  return v2;
}
procedure `org.simpleframework.xml.core.Signature` `copy`(`org.simpleframework.xml.core.Signature` v3 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.copy:()Lorg/simpleframework/xml/core/Signature;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ee648.  v0:= new `org.simpleframework.xml.core.Signature`;
  #L3ee64c.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L3ee652.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/core/Signature;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3ee658.  v1:= temp @kind object;
  #L3ee65a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ee660.  v2:= temp;
  #L3ee662.  if v2 == 0 then goto L3ee67a;
  #L3ee666.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ee66c.  v2:= temp @kind object;
  #L3ee66e.  v2:= (`org.simpleframework.xml.core.Parameter`) v2 @kind object;
  #L3ee672.  call `add`(v0, v2) @signature `Lorg/simpleframework/xml/core/Signature;.add:(Lorg/simpleframework/xml/core/Parameter;)V` @kind virtual;
  #L3ee678.  goto L3ee65a;
  #L3ee67a.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`org.simpleframework.xml.core.Signature` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.create:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ee504.  v0:= v2.`org.simpleframework.xml.core.Signature.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3ee508.  call temp:= `isAccessible`(v0) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L3ee50e.  v0:= temp;
  #L3ee510.  if v0 != 0 then goto L3ee520;
  #L3ee514.  v0:= v2.`org.simpleframework.xml.core.Signature.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3ee518.  v1:= 1I;
  #L3ee51a.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L3ee520.  v0:= v2.`org.simpleframework.xml.core.Signature.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3ee524.  v1:= 0I;
  #L3ee526.  v1:= new `java.lang.Object`[v1];
  #L3ee52a.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ee530.  v0:= temp @kind object;
  #L3ee532.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`org.simpleframework.xml.core.Signature` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.create:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ee544.  v0:= v2.`org.simpleframework.xml.core.Signature.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3ee548.  call temp:= `isAccessible`(v0) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L3ee54e.  v0:= temp;
  #L3ee550.  if v0 != 0 then goto L3ee560;
  #L3ee554.  v0:= v2.`org.simpleframework.xml.core.Signature.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3ee558.  v1:= 1I;
  #L3ee55a.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L3ee560.  v0:= v2.`org.simpleframework.xml.core.Signature.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3ee564.  call temp:= `newInstance`(v0, v3) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ee56a.  v3:= temp @kind object;
  #L3ee56c.  return v3 @kind object;
}
procedure `org.simpleframework.xml.core.Parameter` `get`(`org.simpleframework.xml.core.Signature` v1 @kind this, `int` v2 ) @signature `Lorg/simpleframework/xml/core/Signature;.get:(I)Lorg/simpleframework/xml/core/Parameter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee5e0.  v0:= v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee5e4.  call temp:= `get`(v0, v2) @signature `Lorg/simpleframework/xml/core/ParameterMap;.get:(I)Lorg/simpleframework/xml/core/Parameter;` @kind virtual;
  #L3ee5ea.  v2:= temp @kind object;
  #L3ee5ec.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Parameter` `get`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.get:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Parameter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee600.  v0:= v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee604.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ee60a.  v2:= temp @kind object;
  #L3ee60c.  v2:= (`org.simpleframework.xml.core.Parameter`) v2 @kind object;
  #L3ee610.  return v2 @kind object;
}
procedure `java.util.List` `getAll`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.getAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee5c0.  v0:= v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee5c4.  call temp:= `getAll`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.getAll:()Ljava/util/List;` @kind virtual;
  #L3ee5ca.  v0:= temp @kind object;
  #L3ee5cc.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee4ec.  v0:= v1.`org.simpleframework.xml.core.Signature.type` @type ^`java.lang.Class` @kind object;
  #L3ee4f0.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee4ac.  v0:= v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee4b0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L3ee4b6.  v0:= temp;
  #L3ee4b8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee5a0.  v0:= v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee5a4.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3ee5aa.  v0:= temp @kind object;
  #L3ee5ac.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Parameter` `remove`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.remove:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Parameter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee624.  v0:= v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee628.  call temp:= `remove`(v0, v2) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ee62e.  v2:= temp @kind object;
  #L3ee630.  v2:= (`org.simpleframework.xml.core.Parameter`) v2 @kind object;
  #L3ee634.  return v2 @kind object;
}
procedure `void` `set`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Parameter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.set:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee724.  v0:= v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee728.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ee72e.  return @kind void;
}
procedure `int` `size`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee4cc.  v0:= v1.`org.simpleframework.xml.core.Signature.parameters` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3ee4d0.  call temp:= `size`(v0) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L3ee4d6.  v0:= temp;
  #L3ee4d8.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee580.  v0:= v1.`org.simpleframework.xml.core.Signature.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3ee584.  call temp:= `toString`(v0) @signature `Ljava/lang/reflect/Constructor;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ee58a.  v0:= temp @kind object;
  #L3ee58c.  return v0 @kind object;
}
