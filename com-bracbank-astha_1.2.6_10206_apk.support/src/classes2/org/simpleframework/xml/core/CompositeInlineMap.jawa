record `org.simpleframework.xml.core.CompositeInlineMap` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.core.Entry` `org.simpleframework.xml.core.CompositeInlineMap.entry` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.MapFactory` `org.simpleframework.xml.core.CompositeInlineMap.factory` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Converter` `org.simpleframework.xml.core.CompositeInlineMap.key` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.CompositeInlineMap.style` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Converter` `org.simpleframework.xml.core.CompositeInlineMap.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeInlineMap` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.core.Entry` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3df458.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df45e.  v0:= new `org.simpleframework.xml.core.MapFactory`;
  #L3df462.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/MapFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3df468.  v1.`org.simpleframework.xml.core.CompositeInlineMap.factory` @type ^`org.simpleframework.xml.core.MapFactory` := v0 @kind object;
  #L3df46c.  call temp:= `getValue`(v3, v2) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind virtual;
  #L3df472.  v4:= temp @kind object;
  #L3df474.  v1.`org.simpleframework.xml.core.CompositeInlineMap.value` @type ^`org.simpleframework.xml.core.Converter` := v4 @kind object;
  #L3df478.  call temp:= `getKey`(v3, v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind virtual;
  #L3df47e.  v4:= temp @kind object;
  #L3df480.  v1.`org.simpleframework.xml.core.CompositeInlineMap.key` @type ^`org.simpleframework.xml.core.Converter` := v4 @kind object;
  #L3df484.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/core/Context;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind interface;
  #L3df48a.  v2:= temp @kind object;
  #L3df48c.  v1.`org.simpleframework.xml.core.CompositeInlineMap.style` @type ^`org.simpleframework.xml.stream.Style` := v2 @kind object;
  #L3df490.  v1.`org.simpleframework.xml.core.CompositeInlineMap.entry` @type ^`org.simpleframework.xml.core.Entry` := v3 @kind object;
  #L3df494.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineMap` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Map;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3df404.  call temp:= `getParent`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df40a.  v0:= temp @kind object;
  #L3df40c.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3df412.  v1:= temp @kind object;
  #L3df414.  if v5 == 0 then goto L3df444;
  #L3df418.  v2:= v4.`org.simpleframework.xml.core.CompositeInlineMap.key` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3df41c.  call temp:= `read`(v2, v5) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L3df422.  v2:= temp @kind object;
  #L3df424.  v3:= v4.`org.simpleframework.xml.core.CompositeInlineMap.value` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3df428.  call temp:= `read`(v3, v5) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L3df42e.  v5:= temp @kind object;
  #L3df430.  if v6 == 0 then goto L3df43a;
  #L3df434.  call temp:= `put`(v6, v2, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3df43a.  call temp:= `getNext`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df440.  v5:= temp @kind object;
  #L3df442.  goto L3df414;
  #L3df444.  return v6 @kind object;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeInlineMap` v6 @kind this, `org.simpleframework.xml.stream.OutputNode` v7 @kind object, `java.util.Map` v8 @kind object, `org.simpleframework.xml.stream.Mode` v9 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Map;Lorg/simpleframework/xml/stream/Mode;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3df4e8.  v0:= v6.`org.simpleframework.xml.core.CompositeInlineMap.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df4ec.  call temp:= `getEntry`(v0) @signature `Lorg/simpleframework/xml/core/Entry;.getEntry:()Ljava/lang/String;` @kind virtual;
  #L3df4f2.  v0:= temp @kind object;
  #L3df4f4.  v1:= v6.`org.simpleframework.xml.core.CompositeInlineMap.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3df4f8.  call temp:= `getElement`(v1, v0) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3df4fe.  v0:= temp @kind object;
  #L3df500.  call temp:= `keySet`(v8) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3df506.  v1:= temp @kind object;
  #L3df508.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3df50e.  v1:= temp @kind object;
  #L3df510.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3df516.  v2:= temp;
  #L3df518.  if v2 == 0 then goto L3df550;
  #L3df51c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3df522.  v2:= temp @kind object;
  #L3df524.  call temp:= `getChild`(v7, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3df52a.  v3:= temp @kind object;
  #L3df52c.  call temp:= `get`(v8, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3df532.  v4:= temp @kind object;
  #L3df534.  call `setMode`(v3, v9) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setMode:(Lorg/simpleframework/xml/stream/Mode;)V` @kind interface;
  #L3df53a.  v5:= v6.`org.simpleframework.xml.core.CompositeInlineMap.key` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3df53e.  call `write`(v5, v3, v2) @signature `Lorg/simpleframework/xml/core/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L3df544.  v2:= v6.`org.simpleframework.xml.core.CompositeInlineMap.value` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3df548.  call `write`(v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L3df54e.  goto L3df510;
  #L3df550.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineMap` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df3a4.  v0:= v1.`org.simpleframework.xml.core.CompositeInlineMap.factory` @type ^`org.simpleframework.xml.core.MapFactory` @kind object;
  #L3df3a8.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/MapFactory;.getInstance:()Ljava/lang/Object;` @kind virtual;
  #L3df3ae.  v0:= temp @kind object;
  #L3df3b0.  v0:= (`java.util.Map`) v0 @kind object;
  #L3df3b4.  if v0 == 0 then goto L3df3c2;
  #L3df3b8.  call temp:= `read`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Map;)Ljava/lang/Object;` @kind direct;
  #L3df3be.  v2:= temp @kind object;
  #L3df3c0.  return v2 @kind object;
  #L3df3c2.  v2:= 0I;
  #L3df3c4.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineMap` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3df3d8.  v2:= (`java.util.Map`) v2 @kind object;
  #L3df3dc.  if v2 == 0 then goto L3df3ea;
  #L3df3e0.  call temp:= `read`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Map;)Ljava/lang/Object;` @kind direct;
  #L3df3e6.  v1:= temp @kind object;
  #L3df3e8.  return v1 @kind object;
  #L3df3ea.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L3df3f0.  v1:= temp @kind object;
  #L3df3f2.  return v1 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeInlineMap` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3df34c.  call temp:= `getParent`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df352.  v0:= temp @kind object;
  #L3df354.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3df35a.  v1:= temp @kind object;
  #L3df35c.  if v5 == 0 then goto L3df390;
  #L3df360.  v2:= v4.`org.simpleframework.xml.core.CompositeInlineMap.key` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3df364.  call temp:= `validate`(v2, v5) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L3df36a.  v2:= temp;
  #L3df36c.  v3:= 0I;
  #L3df36e.  if v2 != 0 then goto L3df374;
  #L3df372.  return v3;
  #L3df374.  v2:= v4.`org.simpleframework.xml.core.CompositeInlineMap.value` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L3df378.  call temp:= `validate`(v2, v5) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L3df37e.  v5:= temp;
  #L3df380.  if v5 != 0 then goto L3df386;
  #L3df384.  return v3;
  #L3df386.  call temp:= `getNext`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df38c.  v5:= temp @kind object;
  #L3df38e.  goto L3df35c;
  #L3df390.  v5:= 1I;
  #L3df392.  return v5;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeInlineMap` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3df4a8.  call temp:= `getParent`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3df4ae.  v0:= temp @kind object;
  #L3df4b0.  call temp:= `getMode`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getMode:()Lorg/simpleframework/xml/stream/Mode;` @kind interface;
  #L3df4b6.  v1:= temp @kind object;
  #L3df4b8.  v5:= (`java.util.Map`) v5 @kind object;
  #L3df4bc.  call temp:= `isCommitted`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.isCommitted:()Z` @kind interface;
  #L3df4c2.  v2:= temp;
  #L3df4c4.  if v2 != 0 then goto L3df4ce;
  #L3df4c8.  call `remove`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.remove:()V` @kind interface;
  #L3df4ce.  call `write`(v3, v0, v5, v1) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Map;Lorg/simpleframework/xml/stream/Mode;)V` @kind direct;
  #L3df4d4.  return @kind void;
}
