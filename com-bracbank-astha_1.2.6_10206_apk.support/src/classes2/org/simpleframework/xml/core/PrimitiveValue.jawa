record `org.simpleframework.xml.core.PrimitiveValue` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.PrimitiveValue.context` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Entry` `org.simpleframework.xml.core.PrimitiveValue.entry` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.PrimitiveFactory` `org.simpleframework.xml.core.PrimitiveValue.factory` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.PrimitiveValue.root` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.PrimitiveValue.style` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.PrimitiveValue.type` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.core.Entry` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3eca10.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eca16.  v0:= new `org.simpleframework.xml.core.PrimitiveFactory`;
  #L3eca1a.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3eca20.  v1.`org.simpleframework.xml.core.PrimitiveValue.factory` @type ^`org.simpleframework.xml.core.PrimitiveFactory` := v0 @kind object;
  #L3eca24.  v0:= new `org.simpleframework.xml.core.Primitive`;
  #L3eca28.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3eca2e.  v1.`org.simpleframework.xml.core.PrimitiveValue.root` @type ^`org.simpleframework.xml.core.Primitive` := v0 @kind object;
  #L3eca32.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/core/Context;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind interface;
  #L3eca38.  v0:= temp @kind object;
  #L3eca3a.  v1.`org.simpleframework.xml.core.PrimitiveValue.style` @type ^`org.simpleframework.xml.stream.Style` := v0 @kind object;
  #L3eca3e.  v1.`org.simpleframework.xml.core.PrimitiveValue.context` @type ^`org.simpleframework.xml.core.Context` := v2 @kind object;
  #L3eca42.  v1.`org.simpleframework.xml.core.PrimitiveValue.entry` @type ^`org.simpleframework.xml.core.Entry` := v3 @kind object;
  #L3eca46.  v1.`org.simpleframework.xml.core.PrimitiveValue.type` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L3eca4a.  return @kind void;
}
procedure `boolean` `isOverridden`(`org.simpleframework.xml.core.PrimitiveValue` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.isOverridden:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ec7ec.  v0:= v2.`org.simpleframework.xml.core.PrimitiveValue.factory` @type ^`org.simpleframework.xml.core.PrimitiveFactory` @kind object;
  #L3ec7f0.  v1:= v2.`org.simpleframework.xml.core.PrimitiveValue.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3ec7f4.  call temp:= `setOverride`(v0, v1, v4, v3) @signature `Lorg/simpleframework/xml/core/Factory;.setOverride:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)Z` @kind virtual;
  #L3ec7fa.  v3:= temp;
  #L3ec7fc.  return v3;
}
procedure `java.lang.Object` `readAttribute`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.readAttribute:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ec994.  if v3 == 0 then goto L3ec9ac;
  #L3ec998.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3ec99c.  call temp:= `getAttribute`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3ec9a2.  v3:= temp @kind object;
  #L3ec9a4.  call temp:= `getAttribute`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3ec9aa.  v2:= temp @kind object;
  #L3ec9ac.  if v2 != 0 then goto L3ec9b4;
  #L3ec9b0.  v2:= 0I;
  #L3ec9b2.  return v2 @kind object;
  #L3ec9b4.  v3:= v1.`org.simpleframework.xml.core.PrimitiveValue.root` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3ec9b8.  call temp:= `read`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L3ec9be.  v2:= temp @kind object;
  #L3ec9c0.  return v2 @kind object;
}
procedure `java.lang.Object` `readElement`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.readElement:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ec9d4.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3ec9d8.  call temp:= `getAttribute`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3ec9de.  v3:= temp @kind object;
  #L3ec9e0.  call temp:= `getNext`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3ec9e6.  v2:= temp @kind object;
  #L3ec9e8.  if v2 != 0 then goto L3ec9f0;
  #L3ec9ec.  v2:= 0I;
  #L3ec9ee.  return v2 @kind object;
  #L3ec9f0.  v3:= v1.`org.simpleframework.xml.core.PrimitiveValue.root` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3ec9f4.  call temp:= `read`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L3ec9fa.  v2:= temp @kind object;
  #L3ec9fc.  return v2 @kind object;
}
procedure `boolean` `validateAttribute`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.validateAttribute:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ec86c.  if v3 == 0 then goto L3ec884;
  #L3ec870.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3ec874.  call temp:= `getAttribute`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3ec87a.  v3:= temp @kind object;
  #L3ec87c.  call temp:= `getNext`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3ec882.  v2:= temp @kind object;
  #L3ec884.  if v2 != 0 then goto L3ec88c;
  #L3ec888.  v2:= 1I;
  #L3ec88a.  return v2;
  #L3ec88c.  v3:= v1.`org.simpleframework.xml.core.PrimitiveValue.root` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3ec890.  call temp:= `validate`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind virtual;
  #L3ec896.  v2:= temp;
  #L3ec898.  return v2;
}
procedure `boolean` `validateElement`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.validateElement:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ec8ac.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3ec8b0.  call temp:= `getAttribute`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3ec8b6.  v3:= temp @kind object;
  #L3ec8b8.  call temp:= `getNext`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3ec8be.  v3:= temp @kind object;
  #L3ec8c0.  if v3 != 0 then goto L3ec8c8;
  #L3ec8c4.  v2:= 1I;
  #L3ec8c6.  return v2;
  #L3ec8c8.  v3:= v1.`org.simpleframework.xml.core.PrimitiveValue.root` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3ec8cc.  call temp:= `validate`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind virtual;
  #L3ec8d2.  v2:= temp;
  #L3ec8d4.  return v2;
}
procedure `void` `writeAttribute`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.writeAttribute:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ecab4.  if v3 == 0 then goto L3ecadc;
  #L3ecab8.  if v4 == 0 then goto L3ecad2;
  #L3ecabc.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3ecac0.  call temp:= `getAttribute`(v0, v4) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3ecac6.  v4:= temp @kind object;
  #L3ecac8.  v0:= 0I;
  #L3ecaca.  call temp:= `setAttribute`(v2, v4, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3ecad0.  v2:= temp @kind object;
  #L3ecad2.  v4:= v1.`org.simpleframework.xml.core.PrimitiveValue.root` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3ecad6.  call `write`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L3ecadc.  return @kind void;
}
procedure `void` `writeElement`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ecaf0.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3ecaf4.  call temp:= `getAttribute`(v0, v4) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3ecafa.  v4:= temp @kind object;
  #L3ecafc.  call temp:= `getChild`(v2, v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3ecb02.  v2:= temp @kind object;
  #L3ecb04.  if v3 == 0 then goto L3ecb1e;
  #L3ecb08.  call temp:= `isOverridden`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.isOverridden:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)Z` @kind direct;
  #L3ecb0e.  v4:= temp;
  #L3ecb10.  if v4 != 0 then goto L3ecb1e;
  #L3ecb14.  v4:= v1.`org.simpleframework.xml.core.PrimitiveValue.root` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3ecb18.  call `write`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L3ecb1e.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.PrimitiveValue` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ec8e8.  v0:= v3.`org.simpleframework.xml.core.PrimitiveValue.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3ec8ec.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3ec8f2.  v0:= temp @kind object;
  #L3ec8f4.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3ec8f8.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @kind virtual;
  #L3ec8fe.  v1:= temp @kind object;
  #L3ec900.  v2:= v3.`org.simpleframework.xml.core.PrimitiveValue.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3ec904.  call temp:= `isInline`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.isInline:()Z` @kind virtual;
  #L3ec90a.  v2:= temp;
  #L3ec90c.  if v2 != 0 then goto L3ec92a;
  #L3ec910.  if v1 != 0 then goto L3ec920;
  #L3ec914.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3ec918.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L3ec91e.  v1:= temp @kind object;
  #L3ec920.  call temp:= `readElement`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.readElement:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @kind direct;
  #L3ec926.  v4:= temp @kind object;
  #L3ec928.  return v4 @kind object;
  #L3ec92a.  call temp:= `readAttribute`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.readAttribute:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @kind direct;
  #L3ec930.  v4:= temp @kind object;
  #L3ec932.  return v4 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.PrimitiveValue` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec944.  v0:= v2.`org.simpleframework.xml.core.PrimitiveValue.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3ec948.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3ec94e.  v0:= temp @kind object;
  #L3ec950.  if v4 != 0 then goto L3ec95e;
  #L3ec954.  call temp:= `read`(v2, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L3ec95a.  v3:= temp @kind object;
  #L3ec95c.  return v3 @kind object;
  #L3ec95e.  v3:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3ec962.  v4:= 2I;
  #L3ec964.  v4:= new `java.lang.Object`[v4];
  #L3ec968.  v1:= 0I;
  #L3ec96a.  v4[v1]:= v0 @kind object;
  #L3ec96e.  v0:= v2.`org.simpleframework.xml.core.PrimitiveValue.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3ec972.  v1:= 1I;
  #L3ec974.  v4[v1]:= v0 @kind object;
  #L3ec978.  v0:= "Can not read value of %s for %s" @kind object;
  #L3ec97c.  call `<init>`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ec982.  throw v3;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.PrimitiveValue` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ec810.  v0:= v3.`org.simpleframework.xml.core.PrimitiveValue.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3ec814.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3ec81a.  v0:= temp @kind object;
  #L3ec81c.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3ec820.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @kind virtual;
  #L3ec826.  v1:= temp @kind object;
  #L3ec828.  v2:= v3.`org.simpleframework.xml.core.PrimitiveValue.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3ec82c.  call temp:= `isInline`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.isInline:()Z` @kind virtual;
  #L3ec832.  v2:= temp;
  #L3ec834.  if v2 != 0 then goto L3ec852;
  #L3ec838.  if v1 != 0 then goto L3ec848;
  #L3ec83c.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3ec840.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L3ec846.  v1:= temp @kind object;
  #L3ec848.  call temp:= `validateElement`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.validateElement:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @kind direct;
  #L3ec84e.  v4:= temp;
  #L3ec850.  return v4;
  #L3ec852.  call temp:= `validateAttribute`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.validateAttribute:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @kind direct;
  #L3ec858.  v4:= temp;
  #L3ec85a.  return v4;
}
procedure `void` `write`(`org.simpleframework.xml.core.PrimitiveValue` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eca5c.  v0:= v3.`org.simpleframework.xml.core.PrimitiveValue.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3eca60.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3eca66.  v0:= temp @kind object;
  #L3eca68.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3eca6c.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @kind virtual;
  #L3eca72.  v1:= temp @kind object;
  #L3eca74.  v2:= v3.`org.simpleframework.xml.core.PrimitiveValue.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3eca78.  call temp:= `isInline`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.isInline:()Z` @kind virtual;
  #L3eca7e.  v2:= temp;
  #L3eca80.  if v2 != 0 then goto L3eca9c;
  #L3eca84.  if v1 != 0 then goto L3eca94;
  #L3eca88.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3eca8c.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L3eca92.  v1:= temp @kind object;
  #L3eca94.  call `writeElement`(v3, v4, v5, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/String;)V` @kind direct;
  #L3eca9a.  goto L3ecaa2;
  #L3eca9c.  call `writeAttribute`(v3, v4, v5, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.writeAttribute:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/String;)V` @kind direct;
  #L3ecaa2.  return @kind void;
}
