record `org.simpleframework.xml.core.TextLabel` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.TemplateLabel` @kind class {
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.TextLabel.contact` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.TextLabel.data` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Introspector` `org.simpleframework.xml.core.TextLabel.detail` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.TextLabel.empty` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Text` `org.simpleframework.xml.core.TextLabel.label` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Expression` `org.simpleframework.xml.core.TextLabel.path` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.TextLabel.required` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.TextLabel.type` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TextLabel` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `org.simpleframework.xml.Text` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextLabel;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/Text;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f030c.  call `<init>`(v1) @signature `Lorg/simpleframework/xml/core/TemplateLabel;.<init>:()V` @kind direct;
  #L3f0312.  v0:= new `org.simpleframework.xml.core.Introspector`;
  #L3f0316.  call `<init>`(v0, v2, v1, v4) @signature `Lorg/simpleframework/xml/core/Introspector;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L3f031c.  v1.`org.simpleframework.xml.core.TextLabel.detail` @type ^`org.simpleframework.xml.core.Introspector` := v0 @kind object;
  #L3f0320.  call temp:= `required`(v3) @signature `Lorg/simpleframework/xml/Text;.required:()Z` @kind interface;
  #L3f0326.  v4:= temp;
  #L3f0328.  v1.`org.simpleframework.xml.core.TextLabel.required` @type ^`boolean` := v4 @kind boolean;
  #L3f032c.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3f0332.  v4:= temp @kind object;
  #L3f0334.  v1.`org.simpleframework.xml.core.TextLabel.type` @type ^`java.lang.Class` := v4 @kind object;
  #L3f0338.  call temp:= `empty`(v3) @signature `Lorg/simpleframework/xml/Text;.empty:()Ljava/lang/String;` @kind interface;
  #L3f033e.  v4:= temp @kind object;
  #L3f0340.  v1.`org.simpleframework.xml.core.TextLabel.empty` @type ^`java.lang.String` := v4 @kind object;
  #L3f0344.  call temp:= `data`(v3) @signature `Lorg/simpleframework/xml/Text;.data:()Z` @kind interface;
  #L3f034a.  v4:= temp;
  #L3f034c.  v1.`org.simpleframework.xml.core.TextLabel.data` @type ^`boolean` := v4 @kind boolean;
  #L3f0350.  v1.`org.simpleframework.xml.core.TextLabel.contact` @type ^`org.simpleframework.xml.core.Contact` := v2 @kind object;
  #L3f0354.  v1.`org.simpleframework.xml.core.TextLabel.label` @type ^`org.simpleframework.xml.Text` := v3 @kind object;
  #L3f0358.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.getAnnotation:()Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0238.  v0:= v1.`org.simpleframework.xml.core.TextLabel.label` @type ^`org.simpleframework.xml.Text` @kind object;
  #L3f023c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Contact` `getContact`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.getContact:()Lorg/simpleframework/xml/core/Contact;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0250.  v0:= v1.`org.simpleframework.xml.core.TextLabel.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3f0254.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Converter` `getConverter`(`org.simpleframework.xml.core.TextLabel` v3 @kind this, `org.simpleframework.xml.core.Context` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextLabel;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f0268.  call temp:= `getEmpty`(v3, v4) @signature `Lorg/simpleframework/xml/core/TextLabel;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/String;` @kind virtual;
  #L3f026e.  v0:= temp @kind object;
  #L3f0270.  call temp:= `getContact`(v3) @signature `Lorg/simpleframework/xml/core/TextLabel;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind virtual;
  #L3f0276.  v1:= temp @kind object;
  #L3f0278.  call temp:= `isPrimitive`(v4, v1) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Lorg/simpleframework/xml/strategy/Type;)Z` @kind interface;
  #L3f027e.  v2:= temp;
  #L3f0280.  if v2 == 0 then goto L3f0290;
  #L3f0284.  v2:= new `org.simpleframework.xml.core.Primitive`;
  #L3f0288.  call `<init>`(v2, v4, v1, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @kind direct;
  #L3f028e.  return v2 @kind object;
  #L3f0290.  v4:= new `org.simpleframework.xml.core.TextException`;
  #L3f0294.  v0:= 2I;
  #L3f0296.  v0:= new `java.lang.Object`[v0];
  #L3f029a.  v2:= 0I;
  #L3f029c.  v0[v2]:= v1 @kind object;
  #L3f02a0.  v1:= v3.`org.simpleframework.xml.core.TextLabel.label` @type ^`org.simpleframework.xml.Text` @kind object;
  #L3f02a4.  v2:= 1I;
  #L3f02a6.  v0[v2]:= v1 @kind object;
  #L3f02aa.  v1:= "Cannot use %s to represent %s" @kind object;
  #L3f02ae.  call `<init>`(v4, v1, v0) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3f02b4.  throw v4;
}
procedure `org.simpleframework.xml.core.Decorator` `getDecorator`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f02c8.  v0:= 0I;
  #L3f02ca.  return v0 @kind object;
}
procedure `java.lang.Object` `getEmpty`(`org.simpleframework.xml.core.TextLabel` v0 @kind this, `org.simpleframework.xml.core.Context` v1 @kind object) @signature `Lorg/simpleframework/xml/core/TextLabel;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f0170.  call temp:= `getEmpty`(v0, v1) @signature `Lorg/simpleframework/xml/core/TextLabel;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/String;` @kind virtual;
  #L3f0176.  v1:= temp @kind object;
  #L3f0178.  return v1 @kind object;
}
procedure `java.lang.String` `getEmpty`(`org.simpleframework.xml.core.TextLabel` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TextLabel;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f018c.  v2:= v1.`org.simpleframework.xml.core.TextLabel.detail` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L3f0190.  v0:= v1.`org.simpleframework.xml.core.TextLabel.empty` @type ^`java.lang.String` @kind object;
  #L3f0194.  call temp:= `isEmpty`(v2, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @kind virtual;
  #L3f019a.  v2:= temp;
  #L3f019c.  if v2 == 0 then goto L3f01a4;
  #L3f01a0.  v2:= 0I;
  #L3f01a2.  return v2 @kind object;
  #L3f01a4.  v2:= v1.`org.simpleframework.xml.core.TextLabel.empty` @type ^`java.lang.String` @kind object;
  #L3f01a8.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getExpression`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f02dc.  v0:= v1.`org.simpleframework.xml.core.TextLabel.path` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L3f02e0.  if v0 != 0 then goto L3f02f4;
  #L3f02e4.  v0:= v1.`org.simpleframework.xml.core.TextLabel.detail` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L3f02e8.  call temp:= `getExpression`(v0) @signature `Lorg/simpleframework/xml/core/Introspector;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L3f02ee.  v0:= temp @kind object;
  #L3f02f0.  v1.`org.simpleframework.xml.core.TextLabel.path` @type ^`org.simpleframework.xml.core.Expression` := v0 @kind object;
  #L3f02f4.  v0:= v1.`org.simpleframework.xml.core.TextLabel.path` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L3f02f8.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f01bc.  v0:= "" @kind object;
  #L3f01c0.  return v0 @kind object;
}
procedure `java.lang.String` `getOverride`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.getOverride:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f01d4.  v0:= v1.`org.simpleframework.xml.core.TextLabel.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3f01d8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f01de.  v0:= temp @kind object;
  #L3f01e0.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f01f4.  call temp:= `getExpression`(v1) @signature `Lorg/simpleframework/xml/core/TextLabel;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L3f01fa.  v0:= temp @kind object;
  #L3f01fc.  call temp:= `getPath`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:()Ljava/lang/String;` @kind interface;
  #L3f0202.  v0:= temp @kind object;
  #L3f0204.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0158.  v0:= v1.`org.simpleframework.xml.core.TextLabel.type` @type ^`java.lang.Class` @kind object;
  #L3f015c.  return v0 @kind object;
}
procedure `boolean` `isData`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.isData:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0100.  v0:= v1.`org.simpleframework.xml.core.TextLabel.data` @type ^`boolean` @kind boolean;
  #L3f0104.  return v0;
}
procedure `boolean` `isInline`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.isInline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0118.  v0:= 1I;
  #L3f011a.  return v0;
}
procedure `boolean` `isRequired`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.isRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f012c.  v0:= v1.`org.simpleframework.xml.core.TextLabel.required` @type ^`boolean` @kind boolean;
  #L3f0130.  return v0;
}
procedure `boolean` `isText`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.isText:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0144.  v0:= 1I;
  #L3f0146.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.TextLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TextLabel;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0218.  v0:= v1.`org.simpleframework.xml.core.TextLabel.detail` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L3f021c.  call temp:= `toString`(v0) @signature `Lorg/simpleframework/xml/core/Introspector;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f0222.  v0:= temp @kind object;
  #L3f0224.  return v0 @kind object;
}
