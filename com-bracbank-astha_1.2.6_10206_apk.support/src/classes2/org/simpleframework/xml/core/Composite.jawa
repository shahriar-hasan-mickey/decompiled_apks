record `org.simpleframework.xml.core.Composite` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.Composite.context` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Criteria` `org.simpleframework.xml.core.Composite.criteria` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ObjectFactory` `org.simpleframework.xml.core.Composite.factory` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.Composite.primitive` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Revision` `org.simpleframework.xml.core.Composite.revision` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.Composite.type` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e0960.  v0:= 0I;
  #L3e0962.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L3e0968.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e097c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e0982.  v0:= new `org.simpleframework.xml.core.ObjectFactory`;
  #L3e0986.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/ObjectFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L3e098c.  v1.`org.simpleframework.xml.core.Composite.factory` @type ^`org.simpleframework.xml.core.ObjectFactory` := v0 @kind object;
  #L3e0990.  v4:= new `org.simpleframework.xml.core.Primitive`;
  #L3e0994.  call `<init>`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3e099a.  v1.`org.simpleframework.xml.core.Composite.primitive` @type ^`org.simpleframework.xml.core.Primitive` := v4 @kind object;
  #L3e099e.  v4:= new `org.simpleframework.xml.core.Collector`;
  #L3e09a2.  call `<init>`(v4) @signature `Lorg/simpleframework/xml/core/Collector;.<init>:()V` @kind direct;
  #L3e09a8.  v1.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` := v4 @kind object;
  #L3e09ac.  v4:= new `org.simpleframework.xml.core.Revision`;
  #L3e09b0.  call `<init>`(v4) @signature `Lorg/simpleframework/xml/core/Revision;.<init>:()V` @kind direct;
  #L3e09b6.  v1.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` := v4 @kind object;
  #L3e09ba.  v1.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` := v2 @kind object;
  #L3e09be.  v1.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L3e09c2.  return @kind void;
}
procedure `void` `access$100`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Schema` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$100:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e09d4.  call `readVersion`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.readVersion:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L3e09da.  return @kind void;
}
procedure `void` `access$200`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$200:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e09ec.  call `readText`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.readText:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e09f2.  return @kind void;
}
procedure `void` `access$300`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$300:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e0a04.  call `readAttributes`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.readAttributes:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e0a0a.  return @kind void;
}
procedure `void` `access$400`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$400:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3e0a1c.  call `readElements`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.readElements:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e0a22.  return @kind void;
}
procedure `boolean` `isOverridden`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.isOverridden:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/strategy/Type;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e0584.  v0:= v1.`org.simpleframework.xml.core.Composite.factory` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L3e0588.  call temp:= `setOverride`(v0, v4, v3, v2) @signature `Lorg/simpleframework/xml/core/Factory;.setOverride:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)Z` @kind virtual;
  #L3e058e.  v2:= temp;
  #L3e0590.  return v2;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `org.simpleframework.xml.core.Instance` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e06dc.  v0:= v1.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e06e0.  call temp:= `getSchema`(v0, v4) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L3e06e6.  v4:= temp @kind object;
  #L3e06e8.  call temp:= `getCaller`(v4) @signature `Lorg/simpleframework/xml/core/Schema;.getCaller:()Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L3e06ee.  v0:= temp @kind object;
  #L3e06f0.  call temp:= `read`(v1, v4, v3) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;)Lorg/simpleframework/xml/core/Composite$Builder;` @kind direct;
  #L3e06f6.  v4:= temp @kind object;
  #L3e06f8.  call temp:= `read`(v4, v2) @signature `Lorg/simpleframework/xml/core/Composite$Builder;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L3e06fe.  v4:= temp @kind object;
  #L3e0700.  call `validate`(v0, v4) @signature `Lorg/simpleframework/xml/core/Caller;.validate:(Ljava/lang/Object;)V` @kind virtual;
  #L3e0706.  call `commit`(v0, v4) @signature `Lorg/simpleframework/xml/core/Caller;.commit:(Ljava/lang/Object;)V` @kind virtual;
  #L3e070c.  call temp:= `setInstance`(v3, v4) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e0712.  call temp:= `readResolve`(v1, v2, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.readResolve:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Caller;)Ljava/lang/Object;` @kind direct;
  #L3e0718.  v2:= temp @kind object;
  #L3e071a.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Composite$Builder` `read`(`org.simpleframework.xml.core.Composite` v9 @kind this, `org.simpleframework.xml.core.Schema` v10 @kind object, `org.simpleframework.xml.core.Instance` v11 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;)Lorg/simpleframework/xml/core/Composite$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3e0910.  call temp:= `getInstantiator`(v10) @signature `Lorg/simpleframework/xml/core/Schema;.getInstantiator:()Lorg/simpleframework/xml/core/Instantiator;` @kind interface;
  #L3e0916.  v0:= temp @kind object;
  #L3e0918.  call temp:= `isDefault`(v0) @signature `Lorg/simpleframework/xml/core/Instantiator;.isDefault:()Z` @kind interface;
  #L3e091e.  v0:= temp;
  #L3e0920.  if v0 == 0 then goto L3e0934;
  #L3e0924.  v0:= new `org.simpleframework.xml.core.Composite$Builder`;
  #L3e0928.  v1:= v9.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e092c.  call `<init>`(v0, v9, v1, v10, v11) @signature `Lorg/simpleframework/xml/core/Composite$Builder;.<init>:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/core/Criteria;Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;)V` @kind direct;
  #L3e0932.  return v0 @kind object;
  #L3e0934.  v0:= new `org.simpleframework.xml.core.Composite$Injector`;
  #L3e0938.  v5:= v9.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e093c.  v8:= 0I;
  #L3e093e.  v2:= v0 @kind object;
  #L3e0940.  v3:= v9 @kind object;
  #L3e0942.  v4:= v9 @kind object;
  #L3e0944.  v6:= v10 @kind object;
  #L3e0946.  v7:= v11 @kind object;
  #L3e0948.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/simpleframework/xml/core/Composite$Injector;.<init>:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/core/Criteria;Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;Lorg/simpleframework/xml/core/Composite$1;)V` @kind direct;
  #L3e094e.  return v0 @kind object;
}
procedure `void` `read`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Schema` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e0a34.  call temp:= `getSection`(v4) @signature `Lorg/simpleframework/xml/core/Schema;.getSection:()Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L3e0a3a.  v0:= temp @kind object;
  #L3e0a3c.  call `readVersion`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Composite;.readVersion:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L3e0a42.  call `readSection`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.readSection:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e0a48.  return @kind void;
}
procedure `void` `readAttribute`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readAttribute:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e0a5c.  call temp:= `getName`(v3) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3e0a62.  v0:= temp @kind object;
  #L3e0a64.  call temp:= `getAttribute`(v5, v0) @signature `Lorg/simpleframework/xml/core/Section;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e0a6a.  v5:= temp @kind object;
  #L3e0a6c.  call temp:= `getLabel`(v6, v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3e0a72.  v0:= temp @kind object;
  #L3e0a74.  if v0 != 0 then goto L3e0ada;
  #L3e0a78.  call temp:= `getPosition`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3e0a7e.  v3:= temp @kind object;
  #L3e0a80.  v0:= v2.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0a84.  v1:= v2.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e0a88.  call temp:= `getType`(v0, v1, v4) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L3e0a8e.  v4:= temp @kind object;
  #L3e0a90.  v0:= v2.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0a94.  call temp:= `isStrict`(v6, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L3e0a9a.  v6:= temp;
  #L3e0a9c.  if v6 == 0 then goto L3e0ae0;
  #L3e0aa0.  v6:= v2.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0aa4.  call temp:= `isEqual`(v6) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L3e0aaa.  v6:= temp;
  #L3e0aac.  if v6 != 0 then goto L3e0ab2;
  #L3e0ab0.  goto L3e0ae0;
  #L3e0ab2.  v6:= new `org.simpleframework.xml.core.AttributeException`;
  #L3e0ab6.  v0:= 3I;
  #L3e0ab8.  v0:= new `java.lang.Object`[v0];
  #L3e0abc.  v1:= 0I;
  #L3e0abe.  v0[v1]:= v5 @kind object;
  #L3e0ac2.  v5:= 1I;
  #L3e0ac4.  v0[v5]:= v4 @kind object;
  #L3e0ac8.  v4:= 2I;
  #L3e0aca.  v0[v4]:= v3 @kind object;
  #L3e0ace.  v3:= "Attribute '%s' does not have a match in %s at %s" @kind object;
  #L3e0ad2.  call `<init>`(v6, v3, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e0ad8.  throw v6;
  #L3e0ada.  call temp:= `readInstance`(v2, v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.readInstance:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L3e0ae0.  return @kind void;
}
procedure `void` `readAttributes`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readAttributes:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e0af4.  call temp:= `getAttributes`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L3e0afa.  v0:= temp @kind object;
  #L3e0afc.  call temp:= `getAttributes`(v6) @signature `Lorg/simpleframework/xml/core/Section;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L3e0b02.  v1:= temp @kind object;
  #L3e0b04.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e0b0a.  v0:= temp @kind object;
  #L3e0b0c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e0b12.  v2:= temp;
  #L3e0b14.  if v2 == 0 then goto L3e0b38;
  #L3e0b18.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e0b1e.  v2:= temp @kind object;
  #L3e0b20.  v2:= (`java.lang.String`) v2 @kind object;
  #L3e0b24.  call temp:= `getAttribute`(v4, v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3e0b2a.  v2:= temp @kind object;
  #L3e0b2c.  if v2 == 0 then goto L3e0b0c;
  #L3e0b30.  call `readAttribute`(v3, v2, v5, v6, v1) @signature `Lorg/simpleframework/xml/core/Composite;.readAttribute:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e0b36.  goto L3e0b0c;
  #L3e0b38.  call `validate`(v3, v4, v1, v5) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Ljava/lang/Object;)V` @kind direct;
  #L3e0b3e.  return @kind void;
}
procedure `void` `readElement`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object, `org.simpleframework.xml.core.LabelMap` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readElement:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e0b50.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3e0b56.  v0:= temp @kind object;
  #L3e0b58.  call temp:= `getPath`(v6, v0) @signature `Lorg/simpleframework/xml/core/Section;.getPath:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e0b5e.  v6:= temp @kind object;
  #L3e0b60.  call temp:= `getLabel`(v7, v6) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3e0b66.  v0:= temp @kind object;
  #L3e0b68.  if v0 != 0 then goto L3e0b78;
  #L3e0b6c.  v0:= v3.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e0b70.  call temp:= `resolve`(v0, v6) @signature `Lorg/simpleframework/xml/core/Criteria;.resolve:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L3e0b76.  v0:= temp @kind object;
  #L3e0b78.  if v0 != 0 then goto L3e0be6;
  #L3e0b7c.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3e0b82.  v0:= temp @kind object;
  #L3e0b84.  v1:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0b88.  v2:= v3.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e0b8c.  call temp:= `getType`(v1, v2, v5) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L3e0b92.  v5:= temp @kind object;
  #L3e0b94.  v1:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0b98.  call temp:= `isStrict`(v7, v1) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L3e0b9e.  v7:= temp;
  #L3e0ba0.  if v7 == 0 then goto L3e0bde;
  #L3e0ba4.  v7:= v3.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0ba8.  call temp:= `isEqual`(v7) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L3e0bae.  v7:= temp;
  #L3e0bb0.  if v7 != 0 then goto L3e0bb6;
  #L3e0bb4.  goto L3e0bde;
  #L3e0bb6.  v4:= new `org.simpleframework.xml.core.ElementException`;
  #L3e0bba.  v7:= 3I;
  #L3e0bbc.  v7:= new `java.lang.Object`[v7];
  #L3e0bc0.  v1:= 0I;
  #L3e0bc2.  v7[v1]:= v6 @kind object;
  #L3e0bc6.  v6:= 1I;
  #L3e0bc8.  v7[v6]:= v5 @kind object;
  #L3e0bcc.  v5:= 2I;
  #L3e0bce.  v7[v5]:= v0 @kind object;
  #L3e0bd2.  v5:= "Element '%s' does not have a match in %s at %s" @kind object;
  #L3e0bd6.  call `<init>`(v4, v5, v7) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e0bdc.  throw v4;
  #L3e0bde.  call `skip`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.skip:()V` @kind interface;
  #L3e0be4.  goto L3e0bec;
  #L3e0be6.  call `readUnion`(v3, v4, v5, v7, v0) @signature `Lorg/simpleframework/xml/core/Composite;.readUnion:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e0bec.  return @kind void;
}
procedure `void` `readElements`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readElements:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e0c00.  call temp:= `getElements`(v6) @signature `Lorg/simpleframework/xml/core/Section;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L3e0c06.  v0:= temp @kind object;
  #L3e0c08.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3e0c0e.  v1:= temp @kind object;
  #L3e0c10.  if v1 == 0 then goto L3e0c40;
  #L3e0c14.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3e0c1a.  v2:= temp @kind object;
  #L3e0c1c.  call temp:= `getSection`(v6, v2) @signature `Lorg/simpleframework/xml/core/Section;.getSection:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L3e0c22.  v2:= temp @kind object;
  #L3e0c24.  if v2 == 0 then goto L3e0c30;
  #L3e0c28.  call `readSection`(v3, v1, v5, v2) @signature `Lorg/simpleframework/xml/core/Composite;.readSection:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e0c2e.  goto L3e0c36;
  #L3e0c30.  call `readElement`(v3, v1, v5, v6, v0) @signature `Lorg/simpleframework/xml/core/Composite;.readElement:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e0c36.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3e0c3c.  v1:= temp @kind object;
  #L3e0c3e.  goto L3e0c10;
  #L3e0c40.  call `validate`(v3, v4, v0, v5) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Ljava/lang/Object;)V` @kind direct;
  #L3e0c46.  return @kind void;
}
procedure `java.lang.Object` `readInstance`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readInstance:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e072c.  call temp:= `readVariable`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.readVariable:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L3e0732.  v0:= temp @kind object;
  #L3e0734.  if v0 != 0 then goto L3e0796;
  #L3e0738.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3e073e.  v4:= temp @kind object;
  #L3e0740.  v1:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0744.  v2:= v3.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e0748.  call temp:= `getType`(v1, v2, v5) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L3e074e.  v5:= temp @kind object;
  #L3e0750.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L3e0756.  v1:= temp;
  #L3e0758.  if v1 == 0 then goto L3e07b0;
  #L3e075c.  v1:= v3.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0760.  call temp:= `isEqual`(v1) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L3e0766.  v1:= temp;
  #L3e0768.  if v1 != 0 then goto L3e076e;
  #L3e076c.  goto L3e07b0;
  #L3e076e.  v0:= new `org.simpleframework.xml.core.ValueRequiredException`;
  #L3e0772.  v1:= 3I;
  #L3e0774.  v1:= new `java.lang.Object`[v1];
  #L3e0778.  v2:= 0I;
  #L3e077a.  v1[v2]:= v6 @kind object;
  #L3e077e.  v6:= 1I;
  #L3e0780.  v1[v6]:= v5 @kind object;
  #L3e0784.  v5:= 2I;
  #L3e0786.  v1[v5]:= v4 @kind object;
  #L3e078a.  v4:= "Empty value for %s in %s at %s" @kind object;
  #L3e078e.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/ValueRequiredException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e0794.  throw v0;
  #L3e0796.  v4:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e079a.  call temp:= `getEmpty`(v6, v4) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L3e07a0.  v4:= temp @kind object;
  #L3e07a2.  if v0 == v4 then goto L3e07b0;
  #L3e07a6.  v4:= v3.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e07aa.  call `set`(v4, v6, v0) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L3e07b0.  return v0 @kind object;
}
procedure `java.lang.Object` `readPrimitive`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `org.simpleframework.xml.core.Instance` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readPrimitive:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e07c4.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e07ca.  v0:= temp @kind object;
  #L3e07cc.  v1:= v2.`org.simpleframework.xml.core.Composite.primitive` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3e07d0.  call temp:= `read`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L3e07d6.  v3:= temp @kind object;
  #L3e07d8.  if v0 == 0 then goto L3e07e2;
  #L3e07dc.  call temp:= `setInstance`(v4, v3) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e07e2.  return v3 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Caller` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readResolve:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Caller;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e07f4.  if v5 == 0 then goto L3e0852;
  #L3e07f8.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3e07fe.  v4:= temp @kind object;
  #L3e0800.  call temp:= `resolve`(v6, v5) @signature `Lorg/simpleframework/xml/core/Caller;.resolve:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e0806.  v5:= temp @kind object;
  #L3e0808.  v6:= v3.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e080c.  call temp:= `getType`(v6) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e0812.  v6:= temp @kind object;
  #L3e0814.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e081a.  v0:= temp @kind object;
  #L3e081c.  call temp:= `isAssignableFrom`(v6, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e0822.  v1:= temp;
  #L3e0824.  if v1 == 0 then goto L3e082a;
  #L3e0828.  return v5 @kind object;
  #L3e082a.  v5:= new `org.simpleframework.xml.core.ElementException`;
  #L3e082e.  v1:= 3I;
  #L3e0830.  v1:= new `java.lang.Object`[v1];
  #L3e0834.  v2:= 0I;
  #L3e0836.  v1[v2]:= v0 @kind object;
  #L3e083a.  v0:= 1I;
  #L3e083c.  v1[v0]:= v6 @kind object;
  #L3e0840.  v6:= 2I;
  #L3e0842.  v1[v6]:= v4 @kind object;
  #L3e0846.  v4:= "Type %s does not match %s at %s" @kind object;
  #L3e084a.  call `<init>`(v5, v4, v1) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e0850.  throw v5;
  #L3e0852.  return v5 @kind object;
}
procedure `void` `readSection`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readSection:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;

  #L3e0c58.  call `readText`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.readText:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e0c5e.  call `readAttributes`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.readAttributes:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e0c64.  call `readElements`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.readElements:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e0c6a.  return @kind void;
}
procedure `void` `readText`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readText:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;

  #L3e0c7c.  call temp:= `getText`(v3) @signature `Lorg/simpleframework/xml/core/Section;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L3e0c82.  v3:= temp @kind object;
  #L3e0c84.  if v3 == 0 then goto L3e0c8e;
  #L3e0c88.  call temp:= `readInstance`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.readInstance:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L3e0c8e.  return @kind void;
}
procedure `void` `readUnion`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object, `org.simpleframework.xml.core.Label` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readUnion:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e0ca0.  call temp:= `readInstance`(v3, v4, v5, v7) @signature `Lorg/simpleframework/xml/core/Composite;.readInstance:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L3e0ca6.  v4:= temp @kind object;
  #L3e0ca8.  call temp:= `getPaths`(v7) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L3e0cae.  v5:= temp @kind object;
  #L3e0cb0.  v0:= length @variable v5;
  #L3e0cb2.  v1:= 0I;
  #L3e0cb4.  if v1 >= v0 then goto L3e0cc8;
  #L3e0cb8.  v2:= v5[v1] @kind object;
  #L3e0cbc.  call temp:= `getLabel`(v6, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3e0cc2.  v1:= v1 + 1;
  #L3e0cc6.  goto L3e0cb4;
  #L3e0cc8.  call temp:= `isInline`(v7) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L3e0cce.  v5:= temp;
  #L3e0cd0.  if v5 == 0 then goto L3e0cde;
  #L3e0cd4.  v5:= v3.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e0cd8.  call `set`(v5, v7, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L3e0cde.  return @kind void;
}
procedure `java.lang.Object` `readVariable`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readVariable:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e0864.  v0:= v2.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0868.  call temp:= `getConverter`(v5, v0) @signature `Lorg/simpleframework/xml/core/Label;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind interface;
  #L3e086e.  v0:= temp @kind object;
  #L3e0870.  call temp:= `isCollection`(v5) @signature `Lorg/simpleframework/xml/core/Label;.isCollection:()Z` @kind interface;
  #L3e0876.  v1:= temp;
  #L3e0878.  if v1 == 0 then goto L3e08c0;
  #L3e087c.  v1:= v2.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e0880.  call temp:= `get`(v1, v5) @signature `Lorg/simpleframework/xml/core/Criteria;.get:(Lorg/simpleframework/xml/core/Label;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L3e0886.  v1:= temp @kind object;
  #L3e0888.  call temp:= `getContact`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L3e088e.  v5:= temp @kind object;
  #L3e0890.  if v1 == 0 then goto L3e08a6;
  #L3e0894.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Variable;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3e089a.  v4:= temp @kind object;
  #L3e089c.  call temp:= `read`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e08a2.  v3:= temp @kind object;
  #L3e08a4.  return v3 @kind object;
  #L3e08a6.  if v4 == 0 then goto L3e08c0;
  #L3e08aa.  call temp:= `get`(v5, v4) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e08b0.  v4:= temp @kind object;
  #L3e08b2.  if v4 == 0 then goto L3e08c0;
  #L3e08b6.  call temp:= `read`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e08bc.  v3:= temp @kind object;
  #L3e08be.  return v3 @kind object;
  #L3e08c0.  call temp:= `read`(v0, v3) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L3e08c6.  v3:= temp @kind object;
  #L3e08c8.  return v3 @kind object;
}
procedure `void` `readVersion`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Label` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readVersion:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;

  #L3e0cf0.  call temp:= `readInstance`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.readInstance:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L3e0cf6.  v1:= temp @kind object;
  #L3e0cf8.  v2:= v0.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e0cfc.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e0d02.  v2:= temp @kind object;
  #L3e0d04.  if v1 == 0 then goto L3e0d3e;
  #L3e0d08.  v3:= v0.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0d0c.  call temp:= `getVersion`(v3, v2) @signature `Lorg/simpleframework/xml/core/Context;.getVersion:(Ljava/lang/Class;)Lorg/simpleframework/xml/Version;` @kind interface;
  #L3e0d12.  v2:= temp @kind object;
  #L3e0d14.  call temp:= `revision`(v2) @signature `Lorg/simpleframework/xml/Version;.revision:()D` @kind interface;
  #L3e0d1a.  v2:= temp @kind wide;
  #L3e0d1c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3e0d22.  v2:= temp @kind object;
  #L3e0d24.  v3:= v0.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0d28.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e0d2e.  v3:= temp;
  #L3e0d30.  if v3 != 0 then goto L3e0d3e;
  #L3e0d34.  v3:= v0.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0d38.  call temp:= `compare`(v3, v2, v1) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3e0d3e.  return @kind void;
}
procedure `void` `readVersion`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Schema` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.readVersion:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e0d50.  call temp:= `getVersion`(v5) @signature `Lorg/simpleframework/xml/core/Schema;.getVersion:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L3e0d56.  v5:= temp @kind object;
  #L3e0d58.  v0:= v2.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e0d5c.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e0d62.  v0:= temp @kind object;
  #L3e0d64.  if v5 == 0 then goto L3e0dd4;
  #L3e0d68.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3e0d6e.  v1:= temp @kind object;
  #L3e0d70.  call temp:= `getAttributes`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L3e0d76.  v3:= temp @kind object;
  #L3e0d78.  call temp:= `remove`(v3, v1) @signature `Lorg/simpleframework/xml/stream/NodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L3e0d7e.  v3:= temp @kind object;
  #L3e0d80.  v3:= (`org.simpleframework.xml.stream.InputNode`) v3 @kind object;
  #L3e0d84.  if v3 == 0 then goto L3e0d90;
  #L3e0d88.  call `readVersion`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.readVersion:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e0d8e.  goto L3e0dd4;
  #L3e0d90.  v3:= v2.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0d94.  call temp:= `getVersion`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.getVersion:(Ljava/lang/Class;)Lorg/simpleframework/xml/Version;` @kind interface;
  #L3e0d9a.  v3:= temp @kind object;
  #L3e0d9c.  v4:= v2.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0da0.  call temp:= `getDefault`(v4) @signature `Lorg/simpleframework/xml/core/Revision;.getDefault:()D` @kind virtual;
  #L3e0da6.  v0:= temp @kind wide;
  #L3e0da8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3e0dae.  v4:= temp @kind object;
  #L3e0db0.  call temp:= `revision`(v3) @signature `Lorg/simpleframework/xml/Version;.revision:()D` @kind interface;
  #L3e0db6.  v0:= temp @kind wide;
  #L3e0db8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3e0dbe.  v3:= temp @kind object;
  #L3e0dc0.  v0:= v2.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e0dc4.  call `set`(v0, v5, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L3e0dca.  v5:= v2.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0dce.  call temp:= `compare`(v5, v3, v4) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3e0dd4.  return @kind void;
}
procedure `void` `validate`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e0de8.  v0:= v4.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0dec.  call temp:= `getConverter`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind interface;
  #L3e0df2.  v0:= temp @kind object;
  #L3e0df4.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3e0dfa.  v1:= temp @kind object;
  #L3e0dfc.  v2:= v4.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e0e00.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e0e06.  v2:= temp @kind object;
  #L3e0e08.  call temp:= `validate`(v0, v5) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L3e0e0e.  v5:= temp;
  #L3e0e10.  if v5 == 0 then goto L3e0e22;
  #L3e0e14.  v5:= v4.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e0e18.  v0:= 0I;
  #L3e0e1a.  call `set`(v5, v6, v0) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L3e0e20.  return @kind void;
  #L3e0e22.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3e0e26.  v0:= 3I;
  #L3e0e28.  v0:= new `java.lang.Object`[v0];
  #L3e0e2c.  v3:= 0I;
  #L3e0e2e.  v0[v3]:= v6 @kind object;
  #L3e0e32.  v6:= 1I;
  #L3e0e34.  v0[v6]:= v2 @kind object;
  #L3e0e38.  v6:= 2I;
  #L3e0e3a.  v0[v6]:= v1 @kind object;
  #L3e0e3e.  v6:= "Invalid value for %s in %s at %s" @kind object;
  #L3e0e42.  call `<init>`(v5, v6, v0) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e0e48.  throw v5;
}
procedure `void` `validate`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e0e5c.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3e0e62.  v5:= temp @kind object;
  #L3e0e64.  call temp:= `iterator`(v6) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e0e6a.  v6:= temp @kind object;
  #L3e0e6c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e0e72.  v0:= temp;
  #L3e0e74.  if v0 == 0 then goto L3e0ed6;
  #L3e0e78.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e0e7e.  v0:= temp @kind object;
  #L3e0e80.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3e0e84.  v1:= v4.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e0e88.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e0e8e.  v1:= temp @kind object;
  #L3e0e90.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L3e0e96.  v2:= temp;
  #L3e0e98.  if v2 == 0 then goto L3e0e6c;
  #L3e0e9c.  v2:= v4.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0ea0.  call temp:= `isEqual`(v2) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L3e0ea6.  v2:= temp;
  #L3e0ea8.  if v2 != 0 then goto L3e0eae;
  #L3e0eac.  goto L3e0e6c;
  #L3e0eae.  v6:= new `org.simpleframework.xml.core.ValueRequiredException`;
  #L3e0eb2.  v2:= 3I;
  #L3e0eb4.  v2:= new `java.lang.Object`[v2];
  #L3e0eb8.  v3:= 0I;
  #L3e0eba.  v2[v3]:= v0 @kind object;
  #L3e0ebe.  v0:= 1I;
  #L3e0ec0.  v2[v0]:= v1 @kind object;
  #L3e0ec4.  v0:= 2I;
  #L3e0ec6.  v2[v0]:= v5 @kind object;
  #L3e0eca.  v5:= "Unable to satisfy %s for %s at %s" @kind object;
  #L3e0ece.  call `<init>`(v6, v5, v2) @signature `Lorg/simpleframework/xml/core/ValueRequiredException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e0ed4.  throw v6;
  #L3e0ed6.  return @kind void;
}
procedure `void` `validate`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.LabelMap` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e0ee8.  v0:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0eec.  v1:= v3.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e0ef0.  call temp:= `getType`(v0, v1, v6) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L3e0ef6.  v6:= temp @kind object;
  #L3e0ef8.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3e0efe.  v4:= temp @kind object;
  #L3e0f00.  call temp:= `iterator`(v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e0f06.  v5:= temp @kind object;
  #L3e0f08.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e0f0e.  v0:= temp;
  #L3e0f10.  if v0 == 0 then goto L3e0f82;
  #L3e0f14.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e0f1a.  v0:= temp @kind object;
  #L3e0f1c.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3e0f20.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L3e0f26.  v1:= temp;
  #L3e0f28.  if v1 == 0 then goto L3e0f66;
  #L3e0f2c.  v1:= v3.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0f30.  call temp:= `isEqual`(v1) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L3e0f36.  v1:= temp;
  #L3e0f38.  if v1 != 0 then goto L3e0f3e;
  #L3e0f3c.  goto L3e0f66;
  #L3e0f3e.  v5:= new `org.simpleframework.xml.core.ValueRequiredException`;
  #L3e0f42.  v1:= 3I;
  #L3e0f44.  v1:= new `java.lang.Object`[v1];
  #L3e0f48.  v2:= 0I;
  #L3e0f4a.  v1[v2]:= v0 @kind object;
  #L3e0f4e.  v0:= 1I;
  #L3e0f50.  v1[v0]:= v6 @kind object;
  #L3e0f54.  v6:= 2I;
  #L3e0f56.  v1[v6]:= v4 @kind object;
  #L3e0f5a.  v4:= "Unable to satisfy %s for %s at %s" @kind object;
  #L3e0f5e.  call `<init>`(v5, v4, v1) @signature `Lorg/simpleframework/xml/core/ValueRequiredException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e0f64.  throw v5;
  #L3e0f66.  v1:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0f6a.  call temp:= `getEmpty`(v0, v1) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L3e0f70.  v1:= temp @kind object;
  #L3e0f72.  if v1 == 0 then goto L3e0f08;
  #L3e0f76.  v2:= v3.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e0f7a.  call `set`(v2, v0, v1) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L3e0f80.  goto L3e0f08;
  #L3e0f82.  return @kind void;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e05ec.  v0:= v1.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e05f0.  call temp:= `getSchema`(v0, v3) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L3e05f6.  v3:= temp @kind object;
  #L3e05f8.  call temp:= `getSection`(v3) @signature `Lorg/simpleframework/xml/core/Schema;.getSection:()Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L3e05fe.  v0:= temp @kind object;
  #L3e0600.  call `validateText`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.validateText:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L3e0606.  call `validateSection`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Composite;.validateSection:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e060c.  call temp:= `isElement`(v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.isElement:()Z` @kind interface;
  #L3e0612.  v2:= temp;
  #L3e0614.  return v2;
}
procedure `void` `validateAttribute`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validateAttribute:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e0f94.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3e0f9a.  v0:= temp @kind object;
  #L3e0f9c.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3e0fa2.  v1:= temp @kind object;
  #L3e0fa4.  call temp:= `getAttribute`(v5, v1) @signature `Lorg/simpleframework/xml/core/Section;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e0faa.  v5:= temp @kind object;
  #L3e0fac.  call temp:= `getLabel`(v6, v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3e0fb2.  v1:= temp @kind object;
  #L3e0fb4.  if v1 != 0 then goto L3e100e;
  #L3e0fb8.  v4:= v3.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e0fbc.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e0fc2.  v4:= temp @kind object;
  #L3e0fc4.  v1:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0fc8.  call temp:= `isStrict`(v6, v1) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L3e0fce.  v6:= temp;
  #L3e0fd0.  if v6 == 0 then goto L3e1014;
  #L3e0fd4.  v6:= v3.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e0fd8.  call temp:= `isEqual`(v6) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L3e0fde.  v6:= temp;
  #L3e0fe0.  if v6 != 0 then goto L3e0fe6;
  #L3e0fe4.  goto L3e1014;
  #L3e0fe6.  v6:= new `org.simpleframework.xml.core.AttributeException`;
  #L3e0fea.  v1:= 3I;
  #L3e0fec.  v1:= new `java.lang.Object`[v1];
  #L3e0ff0.  v2:= 0I;
  #L3e0ff2.  v1[v2]:= v5 @kind object;
  #L3e0ff6.  v5:= 1I;
  #L3e0ff8.  v1[v5]:= v4 @kind object;
  #L3e0ffc.  v4:= 2I;
  #L3e0ffe.  v1[v4]:= v0 @kind object;
  #L3e1002.  v4:= "Attribute '%s' does not exist for %s at %s" @kind object;
  #L3e1006.  call `<init>`(v6, v4, v1) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e100c.  throw v6;
  #L3e100e.  call `validate`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e1014.  return @kind void;
}
procedure `void` `validateAttributes`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validateAttributes:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e1028.  call temp:= `getAttributes`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L3e102e.  v0:= temp @kind object;
  #L3e1030.  call temp:= `getAttributes`(v5) @signature `Lorg/simpleframework/xml/core/Section;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L3e1036.  v1:= temp @kind object;
  #L3e1038.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e103e.  v0:= temp @kind object;
  #L3e1040.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e1046.  v2:= temp;
  #L3e1048.  if v2 == 0 then goto L3e106c;
  #L3e104c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e1052.  v2:= temp @kind object;
  #L3e1054.  v2:= (`java.lang.String`) v2 @kind object;
  #L3e1058.  call temp:= `getAttribute`(v4, v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3e105e.  v2:= temp @kind object;
  #L3e1060.  if v2 == 0 then goto L3e1040;
  #L3e1064.  call `validateAttribute`(v3, v2, v5, v1) @signature `Lorg/simpleframework/xml/core/Composite;.validateAttribute:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e106a.  goto L3e1040;
  #L3e106c.  call `validate`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e1072.  return @kind void;
}
procedure `void` `validateElement`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validateElement:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e1084.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3e108a.  v0:= temp @kind object;
  #L3e108c.  call temp:= `getPath`(v5, v0) @signature `Lorg/simpleframework/xml/core/Section;.getPath:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e1092.  v5:= temp @kind object;
  #L3e1094.  call temp:= `getLabel`(v6, v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3e109a.  v0:= temp @kind object;
  #L3e109c.  if v0 != 0 then goto L3e10ac;
  #L3e10a0.  v0:= v3.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e10a4.  call temp:= `resolve`(v0, v5) @signature `Lorg/simpleframework/xml/core/Criteria;.resolve:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L3e10aa.  v0:= temp @kind object;
  #L3e10ac.  if v0 != 0 then goto L3e1116;
  #L3e10b0.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3e10b6.  v0:= temp @kind object;
  #L3e10b8.  v1:= v3.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e10bc.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e10c2.  v1:= temp @kind object;
  #L3e10c4.  v2:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e10c8.  call temp:= `isStrict`(v6, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L3e10ce.  v6:= temp;
  #L3e10d0.  if v6 == 0 then goto L3e110e;
  #L3e10d4.  v6:= v3.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e10d8.  call temp:= `isEqual`(v6) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L3e10de.  v6:= temp;
  #L3e10e0.  if v6 != 0 then goto L3e10e6;
  #L3e10e4.  goto L3e110e;
  #L3e10e6.  v4:= new `org.simpleframework.xml.core.ElementException`;
  #L3e10ea.  v6:= 3I;
  #L3e10ec.  v6:= new `java.lang.Object`[v6];
  #L3e10f0.  v2:= 0I;
  #L3e10f2.  v6[v2]:= v5 @kind object;
  #L3e10f6.  v5:= 1I;
  #L3e10f8.  v6[v5]:= v1 @kind object;
  #L3e10fc.  v5:= 2I;
  #L3e10fe.  v6[v5]:= v0 @kind object;
  #L3e1102.  v5:= "Element '%s' does not exist for %s at %s" @kind object;
  #L3e1106.  call `<init>`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e110c.  throw v4;
  #L3e110e.  call `skip`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.skip:()V` @kind interface;
  #L3e1114.  goto L3e111c;
  #L3e1116.  call `validateUnion`(v3, v4, v6, v0) @signature `Lorg/simpleframework/xml/core/Composite;.validateUnion:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e111c.  return @kind void;
}
procedure `void` `validateElements`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validateElements:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e1130.  call temp:= `getElements`(v5) @signature `Lorg/simpleframework/xml/core/Section;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L3e1136.  v0:= temp @kind object;
  #L3e1138.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3e113e.  v1:= temp @kind object;
  #L3e1140.  if v1 == 0 then goto L3e1170;
  #L3e1144.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3e114a.  v2:= temp @kind object;
  #L3e114c.  call temp:= `getSection`(v5, v2) @signature `Lorg/simpleframework/xml/core/Section;.getSection:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L3e1152.  v2:= temp @kind object;
  #L3e1154.  if v2 == 0 then goto L3e1160;
  #L3e1158.  call `validateSection`(v3, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.validateSection:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e115e.  goto L3e1166;
  #L3e1160.  call `validateElement`(v3, v1, v5, v0) @signature `Lorg/simpleframework/xml/core/Composite;.validateElement:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e1166.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3e116c.  v1:= temp @kind object;
  #L3e116e.  goto L3e1140;
  #L3e1170.  call `validate`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e1176.  return @kind void;
}
procedure `void` `validateSection`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `org.simpleframework.xml.core.Section` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validateSection:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;

  #L3e1188.  call `validateAttributes`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.validateAttributes:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e118e.  call `validateElements`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.validateElements:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e1194.  return @kind void;
}
procedure `void` `validateText`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `org.simpleframework.xml.core.Schema` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validateText:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;

  #L3e11a8.  call temp:= `getText`(v2) @signature `Lorg/simpleframework/xml/core/Schema;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L3e11ae.  v2:= temp @kind object;
  #L3e11b0.  if v2 == 0 then goto L3e11ba;
  #L3e11b4.  call `validate`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e11ba.  return @kind void;
}
procedure `void` `validateUnion`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object, `org.simpleframework.xml.core.Label` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validateUnion:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e11cc.  call temp:= `getPaths`(v7) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L3e11d2.  v0:= temp @kind object;
  #L3e11d4.  v1:= length @variable v0;
  #L3e11d6.  v2:= 0I;
  #L3e11d8.  if v2 >= v1 then goto L3e11ec;
  #L3e11dc.  v3:= v0[v2] @kind object;
  #L3e11e0.  call temp:= `getLabel`(v6, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3e11e6.  v2:= v2 + 1;
  #L3e11ea.  goto L3e11d8;
  #L3e11ec.  call temp:= `isInline`(v7) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L3e11f2.  v6:= temp;
  #L3e11f4.  if v6 == 0 then goto L3e1204;
  #L3e11f8.  v6:= v4.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e11fc.  v0:= 0I;
  #L3e11fe.  call `set`(v6, v7, v0) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L3e1204.  call `validate`(v4, v5, v7) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e120a.  return @kind void;
}
procedure `void` `write`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Schema` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e128c.  call temp:= `getSection`(v4) @signature `Lorg/simpleframework/xml/core/Schema;.getSection:()Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L3e1292.  v0:= temp @kind object;
  #L3e1294.  call `writeVersion`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Composite;.writeVersion:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L3e129a.  call `writeSection`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.writeSection:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e12a0.  return @kind void;
}
procedure `void` `writeAttribute`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeAttribute:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e12b4.  if v4 == 0 then goto L3e12e2;
  #L3e12b8.  call temp:= `getDecorator`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L3e12be.  v0:= temp @kind object;
  #L3e12c0.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3e12c6.  v5:= temp @kind object;
  #L3e12c8.  v1:= v2.`org.simpleframework.xml.core.Composite.factory` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L3e12cc.  call temp:= `getText`(v1, v4) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getText:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L3e12d2.  v4:= temp @kind object;
  #L3e12d4.  call temp:= `setAttribute`(v3, v5, v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3e12da.  v3:= temp @kind object;
  #L3e12dc.  call `decorate`(v0, v3) @signature `Lorg/simpleframework/xml/core/Decorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind interface;
  #L3e12e2.  return @kind void;
}
procedure `void` `writeAttributes`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `java.lang.Object` v6 @kind object, `org.simpleframework.xml.core.Section` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeAttributes:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e12f4.  call temp:= `getAttributes`(v7) @signature `Lorg/simpleframework/xml/core/Section;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L3e12fa.  v7:= temp @kind object;
  #L3e12fc.  call temp:= `iterator`(v7) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e1302.  v7:= temp @kind object;
  #L3e1304.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e130a.  v0:= temp;
  #L3e130c.  if v0 == 0 then goto L3e1388;
  #L3e1310.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e1316.  v0:= temp @kind object;
  #L3e1318.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3e131c.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L3e1322.  v1:= temp @kind object;
  #L3e1324.  call temp:= `get`(v1, v6) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e132a.  v1:= temp @kind object;
  #L3e132c.  v2:= v4.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e1330.  v3:= v4.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e1334.  call temp:= `getType`(v2, v3, v6) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L3e133a.  v2:= temp @kind object;
  #L3e133c.  if v1 != 0 then goto L3e134c;
  #L3e1340.  v1:= v4.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e1344.  call temp:= `getEmpty`(v0, v1) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L3e134a.  v1:= temp @kind object;
  #L3e134c.  if v1 != 0 then goto L3e1380;
  #L3e1350.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L3e1356.  v3:= temp;
  #L3e1358.  if v3 != 0 then goto L3e135e;
  #L3e135c.  goto L3e1380;
  #L3e135e.  v5:= new `org.simpleframework.xml.core.AttributeException`;
  #L3e1362.  v6:= 2I;
  #L3e1364.  v6:= new `java.lang.Object`[v6];
  #L3e1368.  v7:= 0I;
  #L3e136a.  v6[v7]:= v0 @kind object;
  #L3e136e.  v7:= 1I;
  #L3e1370.  v6[v7]:= v2 @kind object;
  #L3e1374.  v7:= "Value for %s is null in %s" @kind object;
  #L3e1378.  call `<init>`(v5, v7, v6) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e137e.  throw v5;
  #L3e1380.  call `writeAttribute`(v4, v5, v1, v0) @signature `Lorg/simpleframework/xml/core/Composite;.writeAttribute:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e1386.  goto L3e1304;
  #L3e1388.  return @kind void;
}
procedure `void` `writeElement`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.OutputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Converter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Converter;)V` @AccessFlag PRIVATE {
    temp;

  #L3e139c.  call `write`(v3, v1, v2) @signature `Lorg/simpleframework/xml/core/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L3e13a2.  return @kind void;
}
procedure `void` `writeElement`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e13b4.  if v5 == 0 then goto L3e142a;
  #L3e13b8.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e13be.  v0:= temp @kind object;
  #L3e13c0.  call temp:= `getLabel`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getLabel:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L3e13c6.  v1:= temp @kind object;
  #L3e13c8.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3e13ce.  v2:= temp @kind object;
  #L3e13d0.  call temp:= `getType`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getType:(Ljava/lang/Class;)Lorg/simpleframework/xml/strategy/Type;` @kind interface;
  #L3e13d6.  v6:= temp @kind object;
  #L3e13d8.  call temp:= `getChild`(v4, v2) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3e13de.  v4:= temp @kind object;
  #L3e13e0.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L3e13e6.  v0:= temp;
  #L3e13e8.  if v0 != 0 then goto L3e13f2;
  #L3e13ec.  call `writeNamespaces`(v3, v4, v6, v1) @signature `Lorg/simpleframework/xml/core/Composite;.writeNamespaces:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e13f2.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L3e13f8.  v0:= temp;
  #L3e13fa.  if v0 != 0 then goto L3e140a;
  #L3e13fe.  call temp:= `isOverridden`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.isOverridden:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/strategy/Type;)Z` @kind direct;
  #L3e1404.  v6:= temp;
  #L3e1406.  if v6 != 0 then goto L3e142a;
  #L3e140a.  v6:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e140e.  call temp:= `getConverter`(v1, v6) @signature `Lorg/simpleframework/xml/core/Label;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind interface;
  #L3e1414.  v6:= temp @kind object;
  #L3e1416.  call temp:= `isData`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isData:()Z` @kind interface;
  #L3e141c.  v0:= temp;
  #L3e141e.  call `setData`(v4, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setData:(Z)V` @kind interface;
  #L3e1424.  call `writeElement`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Converter;)V` @kind direct;
  #L3e142a.  return @kind void;
}
procedure `void` `writeElements`(`org.simpleframework.xml.core.Composite` v5 @kind this, `org.simpleframework.xml.stream.OutputNode` v6 @kind object, `java.lang.Object` v7 @kind object, `org.simpleframework.xml.core.Section` v8 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeElements:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e143c.  call temp:= `iterator`(v8) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e1442.  v0:= temp @kind object;
  #L3e1444.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e144a.  v1:= temp;
  #L3e144c.  if v1 == 0 then goto L3e14d6;
  #L3e1450.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e1456.  v1:= temp @kind object;
  #L3e1458.  v1:= (`java.lang.String`) v1 @kind object;
  #L3e145c.  call temp:= `getSection`(v8, v1) @signature `Lorg/simpleframework/xml/core/Section;.getSection:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L3e1462.  v2:= temp @kind object;
  #L3e1464.  if v2 == 0 then goto L3e1478;
  #L3e1468.  call temp:= `getChild`(v6, v1) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3e146e.  v1:= temp @kind object;
  #L3e1470.  call `writeSection`(v5, v1, v7, v2) @signature `Lorg/simpleframework/xml/core/Composite;.writeSection:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e1476.  goto L3e1444;
  #L3e1478.  call temp:= `getPath`(v8, v1) @signature `Lorg/simpleframework/xml/core/Section;.getPath:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e147e.  v2:= temp @kind object;
  #L3e1480.  call temp:= `getElement`(v8, v2) @signature `Lorg/simpleframework/xml/core/Section;.getElement:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L3e1486.  v2:= temp @kind object;
  #L3e1488.  v3:= v5.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e148c.  v4:= v5.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e1490.  call temp:= `getType`(v3, v4, v7) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L3e1496.  v3:= temp @kind object;
  #L3e1498.  v4:= v5.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e149c.  call temp:= `get`(v4, v2) @signature `Lorg/simpleframework/xml/core/Criteria;.get:(Lorg/simpleframework/xml/core/Label;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L3e14a2.  v4:= temp @kind object;
  #L3e14a4.  if v4 != 0 then goto L3e1444;
  #L3e14a8.  if v2 == 0 then goto L3e14b4;
  #L3e14ac.  call `writeUnion`(v5, v6, v7, v8, v2) @signature `Lorg/simpleframework/xml/core/Composite;.writeUnion:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e14b2.  goto L3e1444;
  #L3e14b4.  v6:= new `org.simpleframework.xml.core.ElementException`;
  #L3e14b8.  v7:= 2I;
  #L3e14ba.  v7:= new `java.lang.Object`[v7];
  #L3e14be.  v8:= 0I;
  #L3e14c0.  v7[v8]:= v1 @kind object;
  #L3e14c4.  v8:= 1I;
  #L3e14c6.  v7[v8]:= v3 @kind object;
  #L3e14ca.  v8:= "Element '%s' not defined in %s" @kind object;
  #L3e14ce.  call `<init>`(v6, v8, v7) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e14d4.  throw v6;
  #L3e14d6.  return @kind void;
}
procedure `void` `writeNamespaces`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeNamespaces:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e14e8.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e14ee.  v3:= temp @kind object;
  #L3e14f0.  v0:= v1.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e14f4.  call temp:= `getDecorator`(v0, v3) @signature `Lorg/simpleframework/xml/core/Context;.getDecorator:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L3e14fa.  v3:= temp @kind object;
  #L3e14fc.  call temp:= `getDecorator`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L3e1502.  v4:= temp @kind object;
  #L3e1504.  call `decorate`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Decorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Decorator;)V` @kind interface;
  #L3e150a.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`org.simpleframework.xml.core.Composite` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeReplace:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e08dc.  if v3 == 0 then goto L3e08fc;
  #L3e08e0.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e08e6.  v0:= temp @kind object;
  #L3e08e8.  v1:= v2.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e08ec.  call temp:= `getCaller`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getCaller:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L3e08f2.  v0:= temp @kind object;
  #L3e08f4.  call temp:= `replace`(v0, v3) @signature `Lorg/simpleframework/xml/core/Caller;.replace:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e08fa.  v3:= temp @kind object;
  #L3e08fc.  return v3 @kind object;
}
procedure `void` `writeSection`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeSection:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e151c.  call temp:= `getNamespaces`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L3e1522.  v0:= temp @kind object;
  #L3e1524.  call temp:= `getPrefix`(v5) @signature `Lorg/simpleframework/xml/core/Section;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L3e152a.  v1:= temp @kind object;
  #L3e152c.  if v1 == 0 then goto L3e156a;
  #L3e1530.  call temp:= `getReference`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getReference:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e1536.  v0:= temp @kind object;
  #L3e1538.  if v0 == 0 then goto L3e1544;
  #L3e153c.  call `setReference`(v3, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setReference:(Ljava/lang/String;)V` @kind interface;
  #L3e1542.  goto L3e156a;
  #L3e1544.  v3:= new `org.simpleframework.xml.core.ElementException`;
  #L3e1548.  v4:= 2I;
  #L3e154a.  v4:= new `java.lang.Object`[v4];
  #L3e154e.  v5:= 0I;
  #L3e1550.  v4[v5]:= v1 @kind object;
  #L3e1554.  v5:= v2.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e1558.  v0:= 1I;
  #L3e155a.  v4[v0]:= v5 @kind object;
  #L3e155e.  v5:= "Namespace prefix '%s' in %s is not in scope" @kind object;
  #L3e1562.  call `<init>`(v3, v5, v4) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e1568.  throw v3;
  #L3e156a.  call `writeAttributes`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.writeAttributes:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e1570.  call `writeElements`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.writeElements:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e1576.  call `writeText`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.writeText:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L3e157c.  return @kind void;
}
procedure `void` `writeText`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeText:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e1590.  if v3 == 0 then goto L3e15c0;
  #L3e1594.  call temp:= `isTextList`(v4) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L3e159a.  v0:= temp;
  #L3e159c.  if v0 != 0 then goto L3e15c0;
  #L3e15a0.  v0:= v1.`org.simpleframework.xml.core.Composite.factory` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L3e15a4.  call temp:= `getText`(v0, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getText:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L3e15aa.  v3:= temp @kind object;
  #L3e15ac.  call temp:= `isData`(v4) @signature `Lorg/simpleframework/xml/core/Label;.isData:()Z` @kind interface;
  #L3e15b2.  v4:= temp;
  #L3e15b4.  call `setData`(v2, v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setData:(Z)V` @kind interface;
  #L3e15ba.  call `setValue`(v2, v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setValue:(Ljava/lang/String;)V` @kind interface;
  #L3e15c0.  return @kind void;
}
procedure `void` `writeText`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeText:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e15d4.  call temp:= `getText`(v6) @signature `Lorg/simpleframework/xml/core/Section;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L3e15da.  v6:= temp @kind object;
  #L3e15dc.  if v6 == 0 then goto L3e164a;
  #L3e15e0.  call temp:= `getContact`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L3e15e6.  v0:= temp @kind object;
  #L3e15e8.  call temp:= `get`(v0, v5) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e15ee.  v0:= temp @kind object;
  #L3e15f0.  v1:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e15f4.  v2:= v3.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e15f8.  call temp:= `getType`(v1, v2, v5) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L3e15fe.  v5:= temp @kind object;
  #L3e1600.  if v0 != 0 then goto L3e1610;
  #L3e1604.  v0:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e1608.  call temp:= `getEmpty`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L3e160e.  v0:= temp @kind object;
  #L3e1610.  if v0 != 0 then goto L3e1644;
  #L3e1614.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L3e161a.  v1:= temp;
  #L3e161c.  if v1 != 0 then goto L3e1622;
  #L3e1620.  goto L3e1644;
  #L3e1622.  v4:= new `org.simpleframework.xml.core.TextException`;
  #L3e1626.  v0:= 2I;
  #L3e1628.  v0:= new `java.lang.Object`[v0];
  #L3e162c.  v1:= 0I;
  #L3e162e.  v0[v1]:= v6 @kind object;
  #L3e1632.  v6:= 1I;
  #L3e1634.  v0[v6]:= v5 @kind object;
  #L3e1638.  v5:= "Value for %s is null in %s" @kind object;
  #L3e163c.  call `<init>`(v4, v5, v0) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e1642.  throw v4;
  #L3e1644.  call `writeText`(v3, v4, v0, v6) @signature `Lorg/simpleframework/xml/core/Composite;.writeText:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e164a.  return @kind void;
}
procedure `void` `writeUnion`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeUnion:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e165c.  call temp:= `getContact`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L3e1662.  v5:= temp @kind object;
  #L3e1664.  call temp:= `get`(v5, v4) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e166a.  v5:= temp @kind object;
  #L3e166c.  v0:= v2.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e1670.  v1:= v2.`org.simpleframework.xml.core.Composite.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3e1674.  call temp:= `getType`(v0, v1, v4) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L3e167a.  v4:= temp @kind object;
  #L3e167c.  if v5 != 0 then goto L3e16b0;
  #L3e1680.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L3e1686.  v0:= temp;
  #L3e1688.  if v0 != 0 then goto L3e168e;
  #L3e168c.  goto L3e16b0;
  #L3e168e.  v3:= new `org.simpleframework.xml.core.ElementException`;
  #L3e1692.  v5:= 2I;
  #L3e1694.  v5:= new `java.lang.Object`[v5];
  #L3e1698.  v0:= 0I;
  #L3e169a.  v5[v0]:= v6 @kind object;
  #L3e169e.  v6:= 1I;
  #L3e16a0.  v5[v6]:= v4 @kind object;
  #L3e16a4.  v4:= "Value for %s is null in %s" @kind object;
  #L3e16a8.  call `<init>`(v3, v4, v5) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e16ae.  throw v3;
  #L3e16b0.  call temp:= `writeReplace`(v2, v5) @signature `Lorg/simpleframework/xml/core/Composite;.writeReplace:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L3e16b6.  v4:= temp @kind object;
  #L3e16b8.  if v4 == 0 then goto L3e16c2;
  #L3e16bc.  call `writeElement`(v2, v3, v4, v6) @signature `Lorg/simpleframework/xml/core/Composite;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e16c2.  v3:= v2.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e16c6.  call `set`(v3, v6, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L3e16cc.  return @kind void;
}
procedure `void` `writeVersion`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Schema` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.writeVersion:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e16e0.  call temp:= `getRevision`(v6) @signature `Lorg/simpleframework/xml/core/Schema;.getRevision:()Lorg/simpleframework/xml/Version;` @kind interface;
  #L3e16e6.  v5:= temp @kind object;
  #L3e16e8.  call temp:= `getVersion`(v6) @signature `Lorg/simpleframework/xml/core/Schema;.getVersion:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L3e16ee.  v6:= temp @kind object;
  #L3e16f0.  if v5 == 0 then goto L3e1742;
  #L3e16f4.  v0:= v3.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e16f8.  call temp:= `getDefault`(v0) @signature `Lorg/simpleframework/xml/core/Revision;.getDefault:()D` @kind virtual;
  #L3e16fe.  v0:= temp @kind wide;
  #L3e1700.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3e1706.  v0:= temp @kind object;
  #L3e1708.  call temp:= `revision`(v5) @signature `Lorg/simpleframework/xml/Version;.revision:()D` @kind interface;
  #L3e170e.  v1:= temp @kind wide;
  #L3e1710.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3e1716.  v5:= temp @kind object;
  #L3e1718.  v1:= v3.`org.simpleframework.xml.core.Composite.revision` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L3e171c.  call temp:= `compare`(v1, v5, v0) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3e1722.  v0:= temp;
  #L3e1724.  if v0 == 0 then goto L3e173c;
  #L3e1728.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L3e172e.  v0:= temp;
  #L3e1730.  if v0 == 0 then goto L3e1742;
  #L3e1734.  call `writeAttribute`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.writeAttribute:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e173a.  goto L3e1742;
  #L3e173c.  call `writeAttribute`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.writeAttribute:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e1742.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e0628.  v0:= v3.`org.simpleframework.xml.core.Composite.factory` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L3e062c.  call temp:= `getInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/ObjectFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3e0632.  v0:= temp @kind object;
  #L3e0634.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e063a.  v1:= temp @kind object;
  #L3e063c.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L3e0642.  v2:= temp;
  #L3e0644.  if v2 == 0 then goto L3e0652;
  #L3e0648.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L3e064e.  v4:= temp @kind object;
  #L3e0650.  return v4 @kind object;
  #L3e0652.  v2:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0656.  call temp:= `isPrimitive`(v2, v1) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Ljava/lang/Class;)Z` @kind interface;
  #L3e065c.  v2:= temp;
  #L3e065e.  if v2 == 0 then goto L3e066c;
  #L3e0662.  call temp:= `readPrimitive`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.readPrimitive:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;)Ljava/lang/Object;` @kind direct;
  #L3e0668.  v4:= temp @kind object;
  #L3e066a.  return v4 @kind object;
  #L3e066c.  call temp:= `read`(v3, v4, v0, v1) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L3e0672.  v4:= temp @kind object;
  #L3e0674.  return v4 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0688.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e068e.  v0:= temp @kind object;
  #L3e0690.  v1:= v2.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e0694.  call temp:= `getSchema`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L3e069a.  v0:= temp @kind object;
  #L3e069c.  call temp:= `getCaller`(v0) @signature `Lorg/simpleframework/xml/core/Schema;.getCaller:()Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L3e06a2.  v1:= temp @kind object;
  #L3e06a4.  call `read`(v2, v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L3e06aa.  v0:= v2.`org.simpleframework.xml.core.Composite.criteria` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L3e06ae.  call `commit`(v0, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.commit:(Ljava/lang/Object;)V` @kind interface;
  #L3e06b4.  call `validate`(v1, v4) @signature `Lorg/simpleframework/xml/core/Caller;.validate:(Ljava/lang/Object;)V` @kind virtual;
  #L3e06ba.  call `commit`(v1, v4) @signature `Lorg/simpleframework/xml/core/Caller;.commit:(Ljava/lang/Object;)V` @kind virtual;
  #L3e06c0.  call temp:= `readResolve`(v2, v3, v4, v1) @signature `Lorg/simpleframework/xml/core/Composite;.readResolve:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Caller;)Ljava/lang/Object;` @kind direct;
  #L3e06c6.  v3:= temp @kind object;
  #L3e06c8.  return v3 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e05a4.  v0:= v2.`org.simpleframework.xml.core.Composite.factory` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L3e05a8.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/ObjectFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3e05ae.  v0:= temp @kind object;
  #L3e05b0.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L3e05b6.  v1:= temp;
  #L3e05b8.  if v1 != 0 then goto L3e05d6;
  #L3e05bc.  v1:= 0I;
  #L3e05be.  call temp:= `setInstance`(v0, v1) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e05c4.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e05ca.  v0:= temp @kind object;
  #L3e05cc.  call temp:= `validate`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind direct;
  #L3e05d2.  v3:= temp;
  #L3e05d4.  return v3;
  #L3e05d6.  v3:= 1I;
  #L3e05d8.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e121c.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e1222.  v0:= temp @kind object;
  #L3e1224.  v1:= v3.`org.simpleframework.xml.core.Composite.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3e1228.  call temp:= `getSchema`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L3e122e.  v0:= temp @kind object;
  #L3e1230.  call temp:= `getCaller`(v0) @signature `Lorg/simpleframework/xml/core/Schema;.getCaller:()Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L3e1236.  v1:= temp @kind object;
  #L3e1238.  call temp:= `isPrimitive`(v0) @signature `Lorg/simpleframework/xml/core/Schema;.isPrimitive:()Z` @kind interface;
  #L3e123e.  v2:= temp;
  #L3e1240.  if v2 == 0 then goto L3e1250;
  #L3e1244.  v0:= v3.`org.simpleframework.xml.core.Composite.primitive` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3e1248.  call `write`(v0, v4, v5) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L3e124e.  goto L3e125c;
  #L3e1250.  call `persist`(v1, v5) @signature `Lorg/simpleframework/xml/core/Caller;.persist:(Ljava/lang/Object;)V` @kind virtual;
  #L3e1256.  call `write`(v3, v4, v5, v0) @signature `Lorg/simpleframework/xml/core/Composite;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L3e125c.  call `complete`(v1, v5) @signature `Lorg/simpleframework/xml/core/Caller;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L3e1262.  return @kind void;
  #L3e1264.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e1266.  call `complete`(v1, v5) @signature `Lorg/simpleframework/xml/core/Caller;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L3e126c.  throw v4;
  catch `java.lang.Throwable` @[L3e1238..L3e125c] goto L3e1264;
}
