record `org.simpleframework.xml.core.Support` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.filter.Filter` @kind interface {
  `org.simpleframework.xml.core.DetailExtractor` `org.simpleframework.xml.core.Support.defaults` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.DetailExtractor` `org.simpleframework.xml.core.Support.details` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.filter.Filter` `org.simpleframework.xml.core.Support.filter` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.Support.format` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.InstanceFactory` `org.simpleframework.xml.core.Support.instances` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.LabelExtractor` `org.simpleframework.xml.core.Support.labels` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.transform.Matcher` `org.simpleframework.xml.core.Support.matcher` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ScannerFactory` `org.simpleframework.xml.core.Support.scanners` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.transform.Transformer` `org.simpleframework.xml.core.Support.transform` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Support;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ef954.  v0:= new `org.simpleframework.xml.filter.PlatformFilter`;
  #L3ef958.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/filter/PlatformFilter;.<init>:()V` @kind direct;
  #L3ef95e.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L3ef964.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ef978.  v0:= new `org.simpleframework.xml.core.EmptyMatcher`;
  #L3ef97c.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/EmptyMatcher;.<init>:()V` @kind direct;
  #L3ef982.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @kind direct;
  #L3ef988.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object, `org.simpleframework.xml.transform.Matcher` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ef99c.  v0:= new `org.simpleframework.xml.stream.Format`;
  #L3ef9a0.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.<init>:()V` @kind direct;
  #L3ef9a6.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L3ef9ac.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v2 @kind this, `org.simpleframework.xml.filter.Filter` v3 @kind object, `org.simpleframework.xml.transform.Matcher` v4 @kind object, `org.simpleframework.xml.stream.Format` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ef9c0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ef9c6.  v0:= new `org.simpleframework.xml.core.DetailExtractor`;
  #L3ef9ca.  v1:= `@@org.simpleframework.xml.DefaultType.FIELD` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L3ef9ce.  call `<init>`(v0, v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L3ef9d4.  v2.`org.simpleframework.xml.core.Support.defaults` @type ^`org.simpleframework.xml.core.DetailExtractor` := v0 @kind object;
  #L3ef9d8.  v0:= new `org.simpleframework.xml.transform.Transformer`;
  #L3ef9dc.  call `<init>`(v0, v4) @signature `Lorg/simpleframework/xml/transform/Transformer;.<init>:(Lorg/simpleframework/xml/transform/Matcher;)V` @kind direct;
  #L3ef9e2.  v2.`org.simpleframework.xml.core.Support.transform` @type ^`org.simpleframework.xml.transform.Transformer` := v0 @kind object;
  #L3ef9e6.  v0:= new `org.simpleframework.xml.core.ScannerFactory`;
  #L3ef9ea.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/ScannerFactory;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3ef9f0.  v2.`org.simpleframework.xml.core.Support.scanners` @type ^`org.simpleframework.xml.core.ScannerFactory` := v0 @kind object;
  #L3ef9f4.  v0:= new `org.simpleframework.xml.core.DetailExtractor`;
  #L3ef9f8.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3ef9fe.  v2.`org.simpleframework.xml.core.Support.details` @type ^`org.simpleframework.xml.core.DetailExtractor` := v0 @kind object;
  #L3efa02.  v0:= new `org.simpleframework.xml.core.LabelExtractor`;
  #L3efa06.  call `<init>`(v0, v5) @signature `Lorg/simpleframework/xml/core/LabelExtractor;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L3efa0c.  v2.`org.simpleframework.xml.core.Support.labels` @type ^`org.simpleframework.xml.core.LabelExtractor` := v0 @kind object;
  #L3efa10.  v0:= new `org.simpleframework.xml.core.InstanceFactory`;
  #L3efa14.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.<init>:()V` @kind direct;
  #L3efa1a.  v2.`org.simpleframework.xml.core.Support.instances` @type ^`org.simpleframework.xml.core.InstanceFactory` := v0 @kind object;
  #L3efa1e.  v2.`org.simpleframework.xml.core.Support.matcher` @type ^`org.simpleframework.xml.transform.Matcher` := v4 @kind object;
  #L3efa22.  v2.`org.simpleframework.xml.core.Support.filter` @type ^`org.simpleframework.xml.filter.Filter` := v3 @kind object;
  #L3efa26.  v2.`org.simpleframework.xml.core.Support.format` @type ^`org.simpleframework.xml.stream.Format` := v5 @kind object;
  #L3efa2a.  return @kind void;
}
procedure `java.lang.String` `getClassName`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getClassName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ef6c4.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3ef6ca.  v0:= temp;
  #L3ef6cc.  if v0 == 0 then goto L3ef6d8;
  #L3ef6d0.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L3ef6d6.  v2:= temp @kind object;
  #L3ef6d8.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3ef6de.  v0:= temp @kind object;
  #L3ef6e0.  call temp:= `isPrimitive`(v2) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L3ef6e6.  v2:= temp;
  #L3ef6e8.  if v2 == 0 then goto L3ef6ee;
  #L3ef6ec.  return v0 @kind object;
  #L3ef6ee.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3ef6f4.  v2:= temp @kind object;
  #L3ef6f6.  return v2 @kind object;
}
procedure `java.lang.Class` `getPrimitive`(`java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ef624.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef628.  if v1 != v0 then goto L3ef632;
  #L3ef62c.  v1:= constclass @type ^`java.lang.Double` @kind object;
  #L3ef630.  return v1 @kind object;
  #L3ef632.  v0:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef636.  if v1 != v0 then goto L3ef640;
  #L3ef63a.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L3ef63e.  return v1 @kind object;
  #L3ef640.  v0:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef644.  if v1 != v0 then goto L3ef64e;
  #L3ef648.  v1:= constclass @type ^`java.lang.Integer` @kind object;
  #L3ef64c.  return v1 @kind object;
  #L3ef64e.  v0:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef652.  if v1 != v0 then goto L3ef65c;
  #L3ef656.  v1:= constclass @type ^`java.lang.Long` @kind object;
  #L3ef65a.  return v1 @kind object;
  #L3ef65c.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef660.  if v1 != v0 then goto L3ef66a;
  #L3ef664.  v1:= constclass @type ^`java.lang.Boolean` @kind object;
  #L3ef668.  return v1 @kind object;
  #L3ef66a.  v0:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef66e.  if v1 != v0 then goto L3ef678;
  #L3ef672.  v1:= constclass @type ^`java.lang.Character` @kind object;
  #L3ef676.  return v1 @kind object;
  #L3ef678.  v0:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef67c.  if v1 != v0 then goto L3ef686;
  #L3ef680.  v1:= constclass @type ^`java.lang.Short` @kind object;
  #L3ef684.  return v1 @kind object;
  #L3ef686.  v0:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef68a.  if v1 != v0 then goto L3ef692;
  #L3ef68e.  v1:= constclass @type ^`java.lang.Byte` @kind object;
  #L3ef692.  return v1 @kind object;
}
procedure `boolean` `isAssignable`(`java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ef4c8.  call temp:= `isPrimitive`(v1) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L3ef4ce.  v0:= temp;
  #L3ef4d0.  if v0 == 0 then goto L3ef4dc;
  #L3ef4d4.  call temp:= `getPrimitive`(v1) @signature `Lorg/simpleframework/xml/core/Support;.getPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L3ef4da.  v1:= temp @kind object;
  #L3ef4dc.  call temp:= `isPrimitive`(v2) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L3ef4e2.  v0:= temp;
  #L3ef4e4.  if v0 == 0 then goto L3ef4f0;
  #L3ef4e8.  call temp:= `getPrimitive`(v2) @signature `Lorg/simpleframework/xml/core/Support;.getPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L3ef4ee.  v2:= temp @kind object;
  #L3ef4f0.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3ef4f6.  v1:= temp;
  #L3ef4f8.  return v1;
}
procedure `boolean` `isFloat`(`java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isFloat:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ef54c.  v0:= constclass @type ^`java.lang.Double` @kind object;
  #L3ef550.  v1:= 1I;
  #L3ef552.  if v2 != v0 then goto L3ef558;
  #L3ef556.  return v1;
  #L3ef558.  v0:= constclass @type ^`java.lang.Float` @kind object;
  #L3ef55c.  if v2 != v0 then goto L3ef562;
  #L3ef560.  return v1;
  #L3ef562.  v0:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef566.  if v2 != v0 then goto L3ef56c;
  #L3ef56a.  return v1;
  #L3ef56c.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef570.  if v2 != v0 then goto L3ef576;
  #L3ef574.  return v1;
  #L3ef576.  v2:= 0I;
  #L3ef578.  return v2;
}
procedure `org.simpleframework.xml.core.Detail` `getDetail`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef830.  v0:= 0I;
  #L3ef832.  call temp:= `getDetail`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L3ef838.  v2:= temp @kind object;
  #L3ef83a.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Detail` `getDetail`(`org.simpleframework.xml.core.Support` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.DefaultType` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/Detail;` @AccessFlag PUBLIC {
    temp;

  #L3ef84c.  if v2 == 0 then goto L3ef85e;
  #L3ef850.  v2:= v0.`org.simpleframework.xml.core.Support.defaults` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L3ef854.  call temp:= `getDetail`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L3ef85a.  v1:= temp @kind object;
  #L3ef85c.  return v1 @kind object;
  #L3ef85e.  v2:= v0.`org.simpleframework.xml.core.Support.details` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L3ef862.  call temp:= `getDetail`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L3ef868.  v1:= temp @kind object;
  #L3ef86a.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getFields`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef798.  v0:= 0I;
  #L3ef79a.  call temp:= `getFields`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L3ef7a0.  v2:= temp @kind object;
  #L3ef7a2.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getFields`(`org.simpleframework.xml.core.Support` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.DefaultType` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;

  #L3ef7b4.  if v2 == 0 then goto L3ef7c6;
  #L3ef7b8.  v2:= v0.`org.simpleframework.xml.core.Support.defaults` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L3ef7bc.  call temp:= `getFields`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L3ef7c2.  v1:= temp @kind object;
  #L3ef7c4.  return v1 @kind object;
  #L3ef7c6.  v2:= v0.`org.simpleframework.xml.core.Support.details` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L3ef7ca.  call temp:= `getFields`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L3ef7d0.  v1:= temp @kind object;
  #L3ef7d2.  return v1 @kind object;
}
procedure `org.simpleframework.xml.stream.Format` `getFormat`(`org.simpleframework.xml.core.Support` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Support;.getFormat:()Lorg/simpleframework/xml/stream/Format;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef8fc.  v0:= v1.`org.simpleframework.xml.core.Support.format` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L3ef900.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef87c.  v0:= v1.`org.simpleframework.xml.core.Support.instances` @type ^`org.simpleframework.xml.core.InstanceFactory` @kind object;
  #L3ef880.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3ef886.  v2:= temp @kind object;
  #L3ef888.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.strategy.Value` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getInstance:(Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef89c.  v0:= v1.`org.simpleframework.xml.core.Support.instances` @type ^`org.simpleframework.xml.core.InstanceFactory` @kind object;
  #L3ef8a0.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.getInstance:(Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3ef8a6.  v2:= temp @kind object;
  #L3ef8a8.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getLabel`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef8bc.  v0:= v1.`org.simpleframework.xml.core.Support.labels` @type ^`org.simpleframework.xml.core.LabelExtractor` @kind object;
  #L3ef8c0.  call temp:= `getLabel`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/LabelExtractor;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3ef8c6.  v2:= temp @kind object;
  #L3ef8c8.  return v2 @kind object;
}
procedure `java.util.List` `getLabels`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getLabels:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef778.  v0:= v1.`org.simpleframework.xml.core.Support.labels` @type ^`org.simpleframework.xml.core.LabelExtractor` @kind object;
  #L3ef77c.  call temp:= `getList`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/LabelExtractor;.getList:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Ljava/util/List;` @kind virtual;
  #L3ef782.  v2:= temp @kind object;
  #L3ef784.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getMethods`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef7e4.  v0:= 0I;
  #L3ef7e6.  call temp:= `getMethods`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.getMethods:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L3ef7ec.  v2:= temp @kind object;
  #L3ef7ee.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getMethods`(`org.simpleframework.xml.core.Support` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.DefaultType` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getMethods:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;

  #L3ef800.  if v2 == 0 then goto L3ef812;
  #L3ef804.  v2:= v0.`org.simpleframework.xml.core.Support.defaults` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L3ef808.  call temp:= `getMethods`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L3ef80e.  v1:= temp @kind object;
  #L3ef810.  return v1 @kind object;
  #L3ef812.  v2:= v0.`org.simpleframework.xml.core.Support.details` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L3ef816.  call temp:= `getMethods`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L3ef81c.  v1:= temp @kind object;
  #L3ef81e.  return v1 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef708.  call temp:= `getScanner`(v1, v2) @signature `Lorg/simpleframework/xml/core/Support;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind virtual;
  #L3ef70e.  v0:= temp @kind object;
  #L3ef710.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getName:()Ljava/lang/String;` @kind interface;
  #L3ef716.  v0:= temp @kind object;
  #L3ef718.  if v0 == 0 then goto L3ef71e;
  #L3ef71c.  return v0 @kind object;
  #L3ef71e.  call temp:= `getClassName`(v1, v2) @signature `Lorg/simpleframework/xml/core/Support;.getClassName:(Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L3ef724.  v2:= temp @kind object;
  #L3ef726.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Scanner` `getScanner`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef8dc.  v0:= v1.`org.simpleframework.xml.core.Support.scanners` @type ^`org.simpleframework.xml.core.ScannerFactory` @kind object;
  #L3ef8e0.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/ScannerFactory;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind virtual;
  #L3ef8e6.  v2:= temp @kind object;
  #L3ef8e8.  return v2 @kind object;
}
procedure `org.simpleframework.xml.stream.Style` `getStyle`(`org.simpleframework.xml.core.Support` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Support;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef914.  v0:= v1.`org.simpleframework.xml.core.Support.format` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L3ef918.  call temp:= `getStyle`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L3ef91e.  v0:= temp @kind object;
  #L3ef920.  return v0 @kind object;
}
procedure `org.simpleframework.xml.transform.Transform` `getTransform`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getTransform:(Ljava/lang/Class;)Lorg/simpleframework/xml/transform/Transform;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef934.  v0:= v1.`org.simpleframework.xml.core.Support.matcher` @type ^`org.simpleframework.xml.transform.Matcher` @kind object;
  #L3ef938.  call temp:= `match`(v0, v2) @signature `Lorg/simpleframework/xml/transform/Matcher;.match:(Ljava/lang/Class;)Lorg/simpleframework/xml/transform/Transform;` @kind interface;
  #L3ef93e.  v2:= temp @kind object;
  #L3ef940.  return v2 @kind object;
}
procedure `boolean` `isContainer`(`org.simpleframework.xml.core.Support` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isContainer:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ef50c.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L3ef510.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3ef516.  v0:= temp;
  #L3ef518.  v1:= 1I;
  #L3ef51a.  if v0 == 0 then goto L3ef520;
  #L3ef51e.  return v1;
  #L3ef520.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L3ef524.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3ef52a.  v0:= temp;
  #L3ef52c.  if v0 == 0 then goto L3ef532;
  #L3ef530.  return v1;
  #L3ef532.  call temp:= `isArray`(v3) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3ef538.  v3:= temp;
  #L3ef53a.  return v3;
}
procedure `boolean` `isPrimitive`(`org.simpleframework.xml.core.Support` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isPrimitive:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ef58c.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L3ef590.  v1:= 1I;
  #L3ef592.  if v3 != v0 then goto L3ef598;
  #L3ef596.  return v1;
  #L3ef598.  v0:= constclass @type ^`java.lang.Float` @kind object;
  #L3ef59c.  if v3 != v0 then goto L3ef5a2;
  #L3ef5a0.  return v1;
  #L3ef5a2.  v0:= constclass @type ^`java.lang.Double` @kind object;
  #L3ef5a6.  if v3 != v0 then goto L3ef5ac;
  #L3ef5aa.  return v1;
  #L3ef5ac.  v0:= constclass @type ^`java.lang.Long` @kind object;
  #L3ef5b0.  if v3 != v0 then goto L3ef5b6;
  #L3ef5b4.  return v1;
  #L3ef5b6.  v0:= constclass @type ^`java.lang.Integer` @kind object;
  #L3ef5ba.  if v3 != v0 then goto L3ef5c0;
  #L3ef5be.  return v1;
  #L3ef5c0.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L3ef5c4.  if v3 != v0 then goto L3ef5ca;
  #L3ef5c8.  return v1;
  #L3ef5ca.  call temp:= `isEnum`(v3) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L3ef5d0.  v0:= temp;
  #L3ef5d2.  if v0 == 0 then goto L3ef5d8;
  #L3ef5d6.  return v1;
  #L3ef5d8.  call temp:= `isPrimitive`(v3) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L3ef5de.  v0:= temp;
  #L3ef5e0.  if v0 == 0 then goto L3ef5e6;
  #L3ef5e4.  return v1;
  #L3ef5e6.  v0:= v2.`org.simpleframework.xml.core.Support.transform` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L3ef5ea.  call temp:= `valid`(v0, v3) @signature `Lorg/simpleframework/xml/transform/Transformer;.valid:(Ljava/lang/Class;)Z` @kind virtual;
  #L3ef5f0.  v3:= temp;
  #L3ef5f2.  return v3;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.read:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef6a4.  v0:= v1.`org.simpleframework.xml.core.Support.transform` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L3ef6a8.  call temp:= `read`(v0, v2, v3) @signature `Lorg/simpleframework/xml/transform/Transformer;.read:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L3ef6ae.  v2:= temp @kind object;
  #L3ef6b0.  return v2 @kind object;
}
procedure `java.lang.String` `replace`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.replace:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef738.  v0:= v1.`org.simpleframework.xml.core.Support.filter` @type ^`org.simpleframework.xml.filter.Filter` @kind object;
  #L3ef73c.  call temp:= `replace`(v0, v2) @signature `Lorg/simpleframework/xml/filter/Filter;.replace:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3ef742.  v2:= temp @kind object;
  #L3ef744.  return v2 @kind object;
}
procedure `boolean` `valid`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.valid:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef604.  v0:= v1.`org.simpleframework.xml.core.Support.transform` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L3ef608.  call temp:= `valid`(v0, v2) @signature `Lorg/simpleframework/xml/transform/Transformer;.valid:(Ljava/lang/Class;)Z` @kind virtual;
  #L3ef60e.  v2:= temp;
  #L3ef610.  return v2;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef758.  v0:= v1.`org.simpleframework.xml.core.Support.transform` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L3ef75c.  call temp:= `write`(v0, v2, v3) @signature `Lorg/simpleframework/xml/transform/Transformer;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L3ef762.  v2:= temp @kind object;
  #L3ef764.  return v2 @kind object;
}
