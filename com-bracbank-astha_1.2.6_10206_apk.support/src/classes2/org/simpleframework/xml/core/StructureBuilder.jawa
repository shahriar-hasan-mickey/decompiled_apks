record `org.simpleframework.xml.core.StructureBuilder` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.ModelAssembler` `org.simpleframework.xml.core.StructureBuilder.assembler` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.StructureBuilder.attributes` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ExpressionBuilder` `org.simpleframework.xml.core.StructureBuilder.builder` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.StructureBuilder.elements` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Instantiator` `org.simpleframework.xml.core.StructureBuilder.factory` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.StructureBuilder.primitive` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.InstantiatorBuilder` `org.simpleframework.xml.core.StructureBuilder.resolver` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Model` `org.simpleframework.xml.core.StructureBuilder.root` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Scanner` `org.simpleframework.xml.core.StructureBuilder.scanner` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.StructureBuilder.support` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.StructureBuilder.text` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.StructureBuilder.texts` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.StructureBuilder.version` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Scanner` v3 @kind object, `org.simpleframework.xml.core.Detail` v4 @kind object, `org.simpleframework.xml.core.Support` v5 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3eec88.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eec8e.  v0:= new `org.simpleframework.xml.core.ExpressionBuilder`;
  #L3eec92.  call `<init>`(v0, v4, v5) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3eec98.  v2.`org.simpleframework.xml.core.StructureBuilder.builder` @type ^`org.simpleframework.xml.core.ExpressionBuilder` := v0 @kind object;
  #L3eec9c.  v1:= new `org.simpleframework.xml.core.ModelAssembler`;
  #L3eeca0.  call `<init>`(v1, v0, v4, v5) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.<init>:(Lorg/simpleframework/xml/core/ExpressionBuilder;Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3eeca6.  v2.`org.simpleframework.xml.core.StructureBuilder.assembler` @type ^`org.simpleframework.xml.core.ModelAssembler` := v1 @kind object;
  #L3eecaa.  v0:= new `org.simpleframework.xml.core.InstantiatorBuilder`;
  #L3eecae.  call `<init>`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3eecb4.  v2.`org.simpleframework.xml.core.StructureBuilder.resolver` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` := v0 @kind object;
  #L3eecb8.  v0:= new `org.simpleframework.xml.core.TreeModel`;
  #L3eecbc.  call `<init>`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3eecc2.  v2.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` := v0 @kind object;
  #L3eecc6.  v4:= new `org.simpleframework.xml.core.LabelMap`;
  #L3eecca.  call `<init>`(v4, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L3eecd0.  v2.`org.simpleframework.xml.core.StructureBuilder.attributes` @type ^`org.simpleframework.xml.core.LabelMap` := v4 @kind object;
  #L3eecd4.  v4:= new `org.simpleframework.xml.core.LabelMap`;
  #L3eecd8.  call `<init>`(v4, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L3eecde.  v2.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` := v4 @kind object;
  #L3eece2.  v4:= new `org.simpleframework.xml.core.LabelMap`;
  #L3eece6.  call `<init>`(v4, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L3eecec.  v2.`org.simpleframework.xml.core.StructureBuilder.texts` @type ^`org.simpleframework.xml.core.LabelMap` := v4 @kind object;
  #L3eecf0.  v2.`org.simpleframework.xml.core.StructureBuilder.scanner` @type ^`org.simpleframework.xml.core.Scanner` := v3 @kind object;
  #L3eecf4.  v2.`org.simpleframework.xml.core.StructureBuilder.support` @type ^`org.simpleframework.xml.core.Support` := v5 @kind object;
  #L3eecf8.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `create`(`org.simpleframework.xml.core.StructureBuilder` v4 @kind this, `org.simpleframework.xml.core.Expression` v5 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.create:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eeb94.  v0:= v4.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3eeb98.  if v0 == 0 then goto L3eebda;
  #L3eeb9c.  call temp:= `getPrefix`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L3eeba2.  v1:= temp @kind object;
  #L3eeba4.  call temp:= `getFirst`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L3eebaa.  v2:= temp @kind object;
  #L3eebac.  call temp:= `getIndex`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L3eebb2.  v3:= temp;
  #L3eebb4.  if v2 == 0 then goto L3eebc0;
  #L3eebb8.  call temp:= `register`(v0, v2, v1, v3) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L3eebbe.  v0:= temp @kind object;
  #L3eebc0.  call temp:= `isPath`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L3eebc6.  v1:= temp;
  #L3eebc8.  if v1 != 0 then goto L3eebce;
  #L3eebcc.  goto L3eebda;
  #L3eebce.  v1:= 1I;
  #L3eebd0.  call temp:= `getPath`(v5, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L3eebd6.  v5:= temp @kind object;
  #L3eebd8.  goto L3eeb98;
  #L3eebda.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.StructureBuilder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.isAttribute:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3eeaa4.  v0:= v3.`org.simpleframework.xml.core.StructureBuilder.builder` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L3eeaa8.  call temp:= `build`(v0, v4) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L3eeaae.  v0:= temp @kind object;
  #L3eeab0.  call temp:= `lookup`(v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L3eeab6.  v1:= temp @kind object;
  #L3eeab8.  if v1 == 0 then goto L3eeae4;
  #L3eeabc.  call temp:= `getLast`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.getLast:()Ljava/lang/String;` @kind interface;
  #L3eeac2.  v2:= temp @kind object;
  #L3eeac4.  call temp:= `isPath`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L3eeaca.  v0:= temp;
  #L3eeacc.  if v0 != 0 then goto L3eeada;
  #L3eead0.  call temp:= `isAttribute`(v1, v4) @signature `Lorg/simpleframework/xml/core/Model;.isAttribute:(Ljava/lang/String;)Z` @kind interface;
  #L3eead6.  v4:= temp;
  #L3eead8.  return v4;
  #L3eeada.  call temp:= `isAttribute`(v1, v2) @signature `Lorg/simpleframework/xml/core/Model;.isAttribute:(Ljava/lang/String;)Z` @kind interface;
  #L3eeae0.  v4:= temp;
  #L3eeae2.  return v4;
  #L3eeae4.  v4:= 0I;
  #L3eeae6.  return v4;
}
procedure `boolean` `isElement`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.isElement:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3eeaf8.  v0:= v5.`org.simpleframework.xml.core.StructureBuilder.builder` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L3eeafc.  call temp:= `build`(v0, v6) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L3eeb02.  v6:= temp @kind object;
  #L3eeb04.  call temp:= `lookup`(v5, v6) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L3eeb0a.  v0:= temp @kind object;
  #L3eeb0c.  v1:= 0I;
  #L3eeb0e.  if v0 == 0 then goto L3eeb56;
  #L3eeb12.  call temp:= `getLast`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getLast:()Ljava/lang/String;` @kind interface;
  #L3eeb18.  v2:= temp @kind object;
  #L3eeb1a.  call temp:= `getIndex`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L3eeb20.  v6:= temp;
  #L3eeb22.  call temp:= `isElement`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.isElement:(Ljava/lang/String;)Z` @kind interface;
  #L3eeb28.  v3:= temp;
  #L3eeb2a.  v4:= 1I;
  #L3eeb2c.  if v3 == 0 then goto L3eeb32;
  #L3eeb30.  return v4;
  #L3eeb32.  call temp:= `isModel`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.isModel:(Ljava/lang/String;)Z` @kind interface;
  #L3eeb38.  v3:= temp;
  #L3eeb3a.  if v3 == 0 then goto L3eeb56;
  #L3eeb3e.  call temp:= `lookup`(v0, v2, v6) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L3eeb44.  v6:= temp @kind object;
  #L3eeb46.  call temp:= `isEmpty`(v6) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L3eeb4c.  v6:= temp;
  #L3eeb4e.  if v6 == 0 then goto L3eeb54;
  #L3eeb52.  return v1;
  #L3eeb54.  return v4;
  #L3eeb56.  return v1;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.isEmpty:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eeb68.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3eeb6c.  if v0 == 0 then goto L3eeb74;
  #L3eeb70.  v0:= 0I;
  #L3eeb72.  return v0;
  #L3eeb74.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3eeb78.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L3eeb7e.  v0:= temp;
  #L3eeb80.  return v0;
}
procedure `org.simpleframework.xml.core.Model` `lookup`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Expression` v3 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eebec.  v0:= 0I;
  #L3eebee.  v1:= 1I;
  #L3eebf0.  call temp:= `getPath`(v3, v0, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L3eebf6.  v0:= temp @kind object;
  #L3eebf8.  call temp:= `isPath`(v3) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L3eebfe.  v3:= temp;
  #L3eec00.  if v3 == 0 then goto L3eec12;
  #L3eec04.  v3:= v2.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3eec08.  call temp:= `lookup`(v3, v0) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L3eec0e.  v3:= temp @kind object;
  #L3eec10.  return v3 @kind object;
  #L3eec12.  v3:= v2.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3eec16.  return v3 @kind object;
}
procedure `void` `process`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Contact` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object, `org.simpleframework.xml.core.LabelMap` v5 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eee28.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3eee2c.  call temp:= `getLabel`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3eee32.  v4:= temp @kind object;
  #L3eee34.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L3eee3a.  v0:= temp @kind object;
  #L3eee3c.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3eee42.  v1:= temp @kind object;
  #L3eee44.  call temp:= `get`(v5, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eee4a.  v0:= temp @kind object;
  #L3eee4c.  if v0 != 0 then goto L3eee58;
  #L3eee50.  call `process`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eee56.  return @kind void;
  #L3eee58.  v4:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3eee5c.  v5:= 2I;
  #L3eee5e.  v5:= new `java.lang.Object`[v5];
  #L3eee62.  v0:= 0I;
  #L3eee64.  v5[v0]:= v1 @kind object;
  #L3eee68.  v0:= 1I;
  #L3eee6a.  v5[v0]:= v3 @kind object;
  #L3eee6e.  v3:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L3eee72.  call `<init>`(v4, v3, v5) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3eee78.  throw v4;
}
procedure `void` `process`(`org.simpleframework.xml.core.StructureBuilder` v3 @kind this, `org.simpleframework.xml.core.Contact` v4 @kind object, `org.simpleframework.xml.core.Label` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3eee8c.  call temp:= `getExpression`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L3eee92.  v4:= temp @kind object;
  #L3eee94.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L3eee9a.  v0:= temp @kind object;
  #L3eee9c.  v1:= v3.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3eeea0.  call temp:= `isEmpty`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isEmpty:()Z` @kind interface;
  #L3eeea6.  v2:= temp;
  #L3eeea8.  if v2 != 0 then goto L3eeeb4;
  #L3eeeac.  call temp:= `register`(v3, v4) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.register:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L3eeeb2.  v1:= temp @kind object;
  #L3eeeb4.  v4:= v3.`org.simpleframework.xml.core.StructureBuilder.resolver` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` @kind object;
  #L3eeeb8.  call `register`(v4, v5) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L3eeebe.  call `register`(v1, v5) @signature `Lorg/simpleframework/xml/core/Model;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind interface;
  #L3eeec4.  call temp:= `put`(v6, v0, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eeeca.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `register`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `org.simpleframework.xml.core.Expression` v2 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.register:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eec28.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3eec2c.  call temp:= `lookup`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L3eec32.  v0:= temp @kind object;
  #L3eec34.  if v0 == 0 then goto L3eec3a;
  #L3eec38.  return v0 @kind object;
  #L3eec3a.  call temp:= `create`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.create:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L3eec40.  v2:= temp @kind object;
  #L3eec42.  return v2 @kind object;
}
procedure `void` `text`(`org.simpleframework.xml.core.StructureBuilder` v4 @kind this, `org.simpleframework.xml.core.Contact` v5 @kind object, `java.lang.annotation.Annotation` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.text:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eeedc.  v0:= v4.`org.simpleframework.xml.core.StructureBuilder.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3eeee0.  call temp:= `getLabel`(v0, v5, v6) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3eeee6.  v5:= temp @kind object;
  #L3eeee8.  call temp:= `getExpression`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L3eeeee.  v0:= temp @kind object;
  #L3eeef0.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L3eeef6.  v1:= temp @kind object;
  #L3eeef8.  v2:= v4.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3eeefc.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.isEmpty:()Z` @kind interface;
  #L3eef02.  v3:= temp;
  #L3eef04.  if v3 != 0 then goto L3eef10;
  #L3eef08.  call temp:= `register`(v4, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.register:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L3eef0e.  v2:= temp @kind object;
  #L3eef10.  v0:= v4.`org.simpleframework.xml.core.StructureBuilder.texts` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eef14.  call temp:= `get`(v0, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eef1a.  v0:= temp @kind object;
  #L3eef1c.  if v0 != 0 then goto L3eef3c;
  #L3eef20.  v6:= v4.`org.simpleframework.xml.core.StructureBuilder.resolver` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` @kind object;
  #L3eef24.  call `register`(v6, v5) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L3eef2a.  call `register`(v2, v5) @signature `Lorg/simpleframework/xml/core/Model;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind interface;
  #L3eef30.  v6:= v4.`org.simpleframework.xml.core.StructureBuilder.texts` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eef34.  call temp:= `put`(v6, v1, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eef3a.  return @kind void;
  #L3eef3c.  v5:= new `org.simpleframework.xml.core.TextException`;
  #L3eef40.  v0:= 1I;
  #L3eef42.  v0:= new `java.lang.Object`[v0];
  #L3eef46.  v1:= 0I;
  #L3eef48.  v0[v1]:= v6 @kind object;
  #L3eef4c.  v6:= "Multiple text annotations in %s" @kind object;
  #L3eef50.  call `<init>`(v5, v6, v0) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3eef56.  throw v5;
}
procedure `void` `union`(`org.simpleframework.xml.core.StructureBuilder` v3 @kind this, `org.simpleframework.xml.core.Contact` v4 @kind object, `java.lang.annotation.Annotation` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.union:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3eef68.  v0:= v3.`org.simpleframework.xml.core.StructureBuilder.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3eef6c.  call temp:= `getLabels`(v0, v4, v5) @signature `Lorg/simpleframework/xml/core/Support;.getLabels:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Ljava/util/List;` @kind virtual;
  #L3eef72.  v5:= temp @kind object;
  #L3eef74.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3eef7a.  v5:= temp @kind object;
  #L3eef7c.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3eef82.  v0:= temp;
  #L3eef84.  if v0 == 0 then goto L3eefda;
  #L3eef88.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3eef8e.  v0:= temp @kind object;
  #L3eef90.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3eef94.  call temp:= `getPath`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L3eef9a.  v1:= temp @kind object;
  #L3eef9c.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3eefa2.  v2:= temp @kind object;
  #L3eefa4.  call temp:= `get`(v6, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eefaa.  v1:= temp @kind object;
  #L3eefac.  if v1 != 0 then goto L3eefb8;
  #L3eefb0.  call `process`(v3, v4, v0, v6) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eefb6.  goto L3eef7c;
  #L3eefb8.  v4:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3eefbc.  v5:= 2I;
  #L3eefbe.  v5:= new `java.lang.Object`[v5];
  #L3eefc2.  v6:= 0I;
  #L3eefc4.  v5[v6]:= v2 @kind object;
  #L3eefc8.  v6:= 1I;
  #L3eefca.  v5[v6]:= v0 @kind object;
  #L3eefce.  v6:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L3eefd2.  call `<init>`(v4, v6, v5) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3eefd8.  throw v4;
  #L3eefda.  return @kind void;
}
procedure `void` `validateAttributes`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.Class` v6 @kind object, `org.simpleframework.xml.Order` v7 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateAttributes:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ef030.  if v7 == 0 then goto L3ef07c;
  #L3ef034.  call temp:= `attributes`(v7) @signature `Lorg/simpleframework/xml/Order;.attributes:()[Ljava/lang/String;` @kind interface;
  #L3ef03a.  v7:= temp @kind object;
  #L3ef03c.  v0:= length @variable v7;
  #L3ef03e.  v1:= 0I;
  #L3ef040.  v2:= 0I;
  #L3ef042.  if v2 >= v0 then goto L3ef07c;
  #L3ef046.  v3:= v7[v2] @kind object;
  #L3ef04a.  call temp:= `isAttribute`(v5, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.isAttribute:(Ljava/lang/String;)Z` @kind direct;
  #L3ef050.  v4:= temp;
  #L3ef052.  if v4 == 0 then goto L3ef05c;
  #L3ef056.  v2:= v2 + 1;
  #L3ef05a.  goto L3ef042;
  #L3ef05c.  v7:= new `org.simpleframework.xml.core.AttributeException`;
  #L3ef060.  v0:= 2I;
  #L3ef062.  v0:= new `java.lang.Object`[v0];
  #L3ef066.  v0[v1]:= v3 @kind object;
  #L3ef06a.  v1:= 1I;
  #L3ef06c.  v0[v1]:= v6 @kind object;
  #L3ef070.  v6:= "Ordered attribute '%s' missing in %s" @kind object;
  #L3ef074.  call `<init>`(v7, v6, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef07a.  throw v7;
  #L3ef07c.  return @kind void;
}
procedure `void` `validateElements`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.Class` v6 @kind object, `org.simpleframework.xml.Order` v7 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateElements:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ef090.  if v7 == 0 then goto L3ef0dc;
  #L3ef094.  call temp:= `elements`(v7) @signature `Lorg/simpleframework/xml/Order;.elements:()[Ljava/lang/String;` @kind interface;
  #L3ef09a.  v7:= temp @kind object;
  #L3ef09c.  v0:= length @variable v7;
  #L3ef09e.  v1:= 0I;
  #L3ef0a0.  v2:= 0I;
  #L3ef0a2.  if v2 >= v0 then goto L3ef0dc;
  #L3ef0a6.  v3:= v7[v2] @kind object;
  #L3ef0aa.  call temp:= `isElement`(v5, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.isElement:(Ljava/lang/String;)Z` @kind direct;
  #L3ef0b0.  v4:= temp;
  #L3ef0b2.  if v4 == 0 then goto L3ef0bc;
  #L3ef0b6.  v2:= v2 + 1;
  #L3ef0ba.  goto L3ef0a2;
  #L3ef0bc.  v7:= new `org.simpleframework.xml.core.ElementException`;
  #L3ef0c0.  v0:= 2I;
  #L3ef0c2.  v0:= new `java.lang.Object`[v0];
  #L3ef0c6.  v0[v1]:= v3 @kind object;
  #L3ef0ca.  v1:= 1I;
  #L3ef0cc.  v0[v1]:= v6 @kind object;
  #L3ef0d0.  v6:= "Ordered element '%s' missing for %s" @kind object;
  #L3ef0d4.  call `<init>`(v7, v6, v0) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef0da.  throw v7;
  #L3ef0dc.  return @kind void;
}
procedure `void` `validateModel`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateModel:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ef0f0.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3ef0f4.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L3ef0fa.  v0:= temp;
  #L3ef0fc.  if v0 != 0 then goto L3ef10a;
  #L3ef100.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3ef104.  call `validate`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.validate:(Ljava/lang/Class;)V` @kind interface;
  #L3ef10a.  return @kind void;
}
procedure `void` `validateText`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateText:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ef11c.  v0:= v5.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3ef120.  call temp:= `getText`(v0) @signature `Lorg/simpleframework/xml/core/Model;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L3ef126.  v0:= temp @kind object;
  #L3ef128.  if v0 == 0 then goto L3ef198;
  #L3ef12c.  call temp:= `isTextList`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L3ef132.  v1:= temp;
  #L3ef134.  if v1 != 0 then goto L3ef1b4;
  #L3ef138.  v1:= v5.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3ef13c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L3ef142.  v1:= temp;
  #L3ef144.  v2:= 1I;
  #L3ef146.  v3:= 0I;
  #L3ef148.  v4:= 2I;
  #L3ef14a.  if v1 == 0 then goto L3ef17c;
  #L3ef14e.  v1:= v5.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3ef152.  call temp:= `isComposite`(v1) @signature `Lorg/simpleframework/xml/core/Model;.isComposite:()Z` @kind interface;
  #L3ef158.  v1:= temp;
  #L3ef15a.  if v1 != 0 then goto L3ef160;
  #L3ef15e.  goto L3ef1b4;
  #L3ef160.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L3ef164.  v4:= new `java.lang.Object`[v4];
  #L3ef168.  v4[v3]:= v0 @kind object;
  #L3ef16c.  v4[v2]:= v6 @kind object;
  #L3ef170.  v6:= "Paths used with %s in %s" @kind object;
  #L3ef174.  call `<init>`(v1, v6, v4) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef17a.  throw v1;
  #L3ef17c.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L3ef180.  v4:= new `java.lang.Object`[v4];
  #L3ef184.  v4[v3]:= v0 @kind object;
  #L3ef188.  v4[v2]:= v6 @kind object;
  #L3ef18c.  v6:= "Elements used with %s in %s" @kind object;
  #L3ef190.  call `<init>`(v1, v6, v4) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef196.  throw v1;
  #L3ef198.  v6:= v5.`org.simpleframework.xml.core.StructureBuilder.scanner` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L3ef19c.  call temp:= `isEmpty`(v6) @signature `Lorg/simpleframework/xml/core/Scanner;.isEmpty:()Z` @kind interface;
  #L3ef1a2.  v6:= temp;
  #L3ef1a4.  if v6 == 0 then goto L3ef1b4;
  #L3ef1a8.  call temp:= `isEmpty`(v5) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.isEmpty:()Z` @kind direct;
  #L3ef1ae.  v6:= temp;
  #L3ef1b0.  v5.`org.simpleframework.xml.core.StructureBuilder.primitive` @type ^`boolean` := v6 @kind boolean;
  #L3ef1b4.  return @kind void;
}
procedure `void` `validateTextList`(`org.simpleframework.xml.core.StructureBuilder` v8 @kind this, `java.lang.Class` v9 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateTextList:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ef1c8.  v0:= v8.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3ef1cc.  call temp:= `getText`(v0) @signature `Lorg/simpleframework/xml/core/Model;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L3ef1d2.  v0:= temp @kind object;
  #L3ef1d4.  if v0 == 0 then goto L3ef2b0;
  #L3ef1d8.  call temp:= `isTextList`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L3ef1de.  v1:= temp;
  #L3ef1e0.  if v1 == 0 then goto L3ef2b0;
  #L3ef1e4.  call temp:= `getKey`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3ef1ea.  v1:= temp @kind object;
  #L3ef1ec.  v2:= v8.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3ef1f0.  call temp:= `iterator`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3ef1f6.  v2:= temp @kind object;
  #L3ef1f8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ef1fe.  v3:= temp;
  #L3ef200.  v4:= 1I;
  #L3ef202.  v5:= 0I;
  #L3ef204.  v6:= 2I;
  #L3ef206.  if v3 == 0 then goto L3ef282;
  #L3ef20a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ef210.  v3:= temp @kind object;
  #L3ef212.  v3:= (`org.simpleframework.xml.core.Label`) v3 @kind object;
  #L3ef216.  call temp:= `getKey`(v3) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3ef21c.  v7:= temp @kind object;
  #L3ef21e.  call temp:= `equals`(v7, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef224.  v7:= temp;
  #L3ef226.  if v7 == 0 then goto L3ef266;
  #L3ef22a.  call temp:= `getDependent`(v3) @signature `Lorg/simpleframework/xml/core/Label;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @kind interface;
  #L3ef230.  v3:= temp @kind object;
  #L3ef232.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3ef238.  v3:= temp @kind object;
  #L3ef23a.  v7:= constclass @type ^`java.lang.String` @kind object;
  #L3ef23e.  if v3 == v7 then goto L3ef244;
  #L3ef242.  goto L3ef1f8;
  #L3ef244.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L3ef248.  v2:= 3I;
  #L3ef24a.  v2:= new `java.lang.Object`[v2];
  #L3ef24e.  v2[v5]:= v3 @kind object;
  #L3ef252.  v2[v4]:= v0 @kind object;
  #L3ef256.  v2[v6]:= v9 @kind object;
  #L3ef25a.  v9:= "Illegal entry of %s with text annotations on %s in %s" @kind object;
  #L3ef25e.  call `<init>`(v1, v9, v2) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef264.  throw v1;
  #L3ef266.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L3ef26a.  v2:= new `java.lang.Object`[v6];
  #L3ef26e.  v2[v5]:= v0 @kind object;
  #L3ef272.  v2[v4]:= v9 @kind object;
  #L3ef276.  v9:= "Elements used with %s in %s" @kind object;
  #L3ef27a.  call `<init>`(v1, v9, v2) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef280.  throw v1;
  #L3ef282.  v1:= v8.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3ef286.  call temp:= `isComposite`(v1) @signature `Lorg/simpleframework/xml/core/Model;.isComposite:()Z` @kind interface;
  #L3ef28c.  v1:= temp;
  #L3ef28e.  if v1 != 0 then goto L3ef294;
  #L3ef292.  goto L3ef2b0;
  #L3ef294.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L3ef298.  v2:= new `java.lang.Object`[v6];
  #L3ef29c.  v2[v5]:= v0 @kind object;
  #L3ef2a0.  v2[v4]:= v9 @kind object;
  #L3ef2a4.  v9:= "Paths used with %s in %s" @kind object;
  #L3ef2a8.  call `<init>`(v1, v9, v2) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef2ae.  throw v1;
  #L3ef2b0.  return @kind void;
}
procedure `void` `validateUnions`(`org.simpleframework.xml.core.StructureBuilder` v12 @kind this, `java.lang.Class` v13 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateUnions:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3ef2c4.  v13:= v12.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3ef2c8.  call temp:= `iterator`(v13) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3ef2ce.  v13:= temp @kind object;
  #L3ef2d0.  call temp:= `hasNext`(v13) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ef2d6.  v0:= temp;
  #L3ef2d8.  if v0 == 0 then goto L3ef388;
  #L3ef2dc.  call temp:= `next`(v13) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ef2e2.  v0:= temp @kind object;
  #L3ef2e4.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3ef2e8.  call temp:= `getPaths`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L3ef2ee.  v1:= temp @kind object;
  #L3ef2f0.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L3ef2f6.  v2:= temp @kind object;
  #L3ef2f8.  v3:= length @variable v1;
  #L3ef2fa.  v4:= 0I;
  #L3ef2fc.  v5:= 0I;
  #L3ef2fe.  if v5 >= v3 then goto L3ef2d0;
  #L3ef302.  v6:= v1[v5] @kind object;
  #L3ef306.  call temp:= `getAnnotation`(v2) @signature `Lorg/simpleframework/xml/core/Contact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L3ef30c.  v7:= temp @kind object;
  #L3ef30e.  v8:= v12.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3ef312.  call temp:= `get`(v8, v6) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ef318.  v6:= temp @kind object;
  #L3ef31a.  v6:= (`org.simpleframework.xml.core.Label`) v6 @kind object;
  #L3ef31e.  call temp:= `isInline`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L3ef324.  v8:= temp;
  #L3ef326.  call temp:= `isInline`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L3ef32c.  v9:= temp;
  #L3ef32e.  v10:= 2I;
  #L3ef330.  v11:= 1I;
  #L3ef332.  if v8 != v9 then goto L3ef36c;
  #L3ef336.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L3ef33c.  v8:= temp;
  #L3ef33e.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L3ef344.  v6:= temp;
  #L3ef346.  if v8 != v6 then goto L3ef350;
  #L3ef34a.  v5:= v5 + 1;
  #L3ef34e.  goto L3ef2fe;
  #L3ef350.  v13:= new `org.simpleframework.xml.core.UnionException`;
  #L3ef354.  v0:= new `java.lang.Object`[v10];
  #L3ef358.  v0[v4]:= v7 @kind object;
  #L3ef35c.  v0[v11]:= v2 @kind object;
  #L3ef360.  v1:= "Required must be consistent in %s for %s" @kind object;
  #L3ef364.  call `<init>`(v13, v1, v0) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef36a.  throw v13;
  #L3ef36c.  v13:= new `org.simpleframework.xml.core.UnionException`;
  #L3ef370.  v0:= new `java.lang.Object`[v10];
  #L3ef374.  v0[v4]:= v7 @kind object;
  #L3ef378.  v0[v11]:= v2 @kind object;
  #L3ef37c.  v1:= "Inline must be consistent in %s for %s" @kind object;
  #L3ef380.  call `<init>`(v13, v1, v0) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef386.  throw v13;
  #L3ef388.  return @kind void;
}
procedure `void` `version`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Contact` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.version:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ef39c.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3ef3a0.  call temp:= `getLabel`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L3ef3a6.  v3:= temp @kind object;
  #L3ef3a8.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.version` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3ef3ac.  if v0 != 0 then goto L3ef3b6;
  #L3ef3b0.  v2.`org.simpleframework.xml.core.StructureBuilder.version` @type ^`org.simpleframework.xml.core.Label` := v3 @kind object;
  #L3ef3b4.  return @kind void;
  #L3ef3b6.  v3:= new `org.simpleframework.xml.core.AttributeException`;
  #L3ef3ba.  v0:= 1I;
  #L3ef3bc.  v0:= new `java.lang.Object`[v0];
  #L3ef3c0.  v1:= 0I;
  #L3ef3c2.  v0[v1]:= v4 @kind object;
  #L3ef3c6.  v4:= "Multiple version annotations in %s" @kind object;
  #L3ef3ca.  call `<init>`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ef3d0.  throw v3;
}
procedure `void` `assemble`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.assemble:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eed0c.  v3:= v2.`org.simpleframework.xml.core.StructureBuilder.scanner` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L3eed10.  call temp:= `getOrder`(v3) @signature `Lorg/simpleframework/xml/core/Scanner;.getOrder:()Lorg/simpleframework/xml/Order;` @kind interface;
  #L3eed16.  v3:= temp @kind object;
  #L3eed18.  if v3 == 0 then goto L3eed2a;
  #L3eed1c.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.assembler` @type ^`org.simpleframework.xml.core.ModelAssembler` @kind object;
  #L3eed20.  v1:= v2.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3eed24.  call `assemble`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assemble:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @kind virtual;
  #L3eed2a.  return @kind void;
}
procedure `org.simpleframework.xml.core.Structure` `build`(`org.simpleframework.xml.core.StructureBuilder` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.build:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Structure;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3eec54.  v7:= new `org.simpleframework.xml.core.Structure`;
  #L3eec58.  v1:= v6.`org.simpleframework.xml.core.StructureBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L3eec5c.  v2:= v6.`org.simpleframework.xml.core.StructureBuilder.root` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L3eec60.  v3:= v6.`org.simpleframework.xml.core.StructureBuilder.version` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3eec64.  v4:= v6.`org.simpleframework.xml.core.StructureBuilder.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3eec68.  v5:= v6.`org.simpleframework.xml.core.StructureBuilder.primitive` @type ^`boolean` @kind boolean;
  #L3eec6c.  v0:= v7 @kind object;
  #L3eec6e.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Structure;.<init>:(Lorg/simpleframework/xml/core/Instantiator;Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Label;Z)V` @kind direct;
  #L3eec74.  return v7 @kind object;
}
procedure `void` `commit`(`org.simpleframework.xml.core.StructureBuilder` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.commit:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L3eed3c.  v1:= v0.`org.simpleframework.xml.core.StructureBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L3eed40.  if v1 != 0 then goto L3eed54;
  #L3eed44.  v1:= v0.`org.simpleframework.xml.core.StructureBuilder.resolver` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` @kind object;
  #L3eed48.  call temp:= `build`(v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.build:()Lorg/simpleframework/xml/core/Instantiator;` @kind virtual;
  #L3eed4e.  v1:= temp @kind object;
  #L3eed50.  v0.`org.simpleframework.xml.core.StructureBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` := v1 @kind object;
  #L3eed54.  return @kind void;
}
procedure `void` `process`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eed68.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Attribute` @kind boolean;
  #L3eed6c.  if v0 == 0 then goto L3eed7a;
  #L3eed70.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eed74.  call `process`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eed7a.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L3eed7e.  if v0 == 0 then goto L3eed8c;
  #L3eed82.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eed86.  call `union`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.union:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eed8c.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L3eed90.  if v0 == 0 then goto L3eed9e;
  #L3eed94.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eed98.  call `union`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.union:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eed9e.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L3eeda2.  if v0 == 0 then goto L3eedb0;
  #L3eeda6.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eedaa.  call `union`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.union:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eedb0.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementList` @kind boolean;
  #L3eedb4.  if v0 == 0 then goto L3eedc2;
  #L3eedb8.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eedbc.  call `process`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eedc2.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementArray` @kind boolean;
  #L3eedc6.  if v0 == 0 then goto L3eedd4;
  #L3eedca.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eedce.  call `process`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eedd4.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMap` @kind boolean;
  #L3eedd8.  if v0 == 0 then goto L3eede6;
  #L3eeddc.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eede0.  call `process`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eede6.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Element` @kind boolean;
  #L3eedea.  if v0 == 0 then goto L3eedf8;
  #L3eedee.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3eedf2.  call `process`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3eedf8.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Version` @kind boolean;
  #L3eedfc.  if v0 == 0 then goto L3eee06;
  #L3eee00.  call `version`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.version:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3eee06.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L3eee0a.  if v0 == 0 then goto L3eee14;
  #L3eee0e.  call `text`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.text:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3eee14.  return @kind void;
}
procedure `void` `validate`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validate:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eefec.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.scanner` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L3eeff0.  call temp:= `getOrder`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getOrder:()Lorg/simpleframework/xml/Order;` @kind interface;
  #L3eeff6.  v0:= temp @kind object;
  #L3eeff8.  call `validateUnions`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateUnions:(Ljava/lang/Class;)V` @kind direct;
  #L3eeffe.  call `validateElements`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateElements:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L3ef004.  call `validateAttributes`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateAttributes:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L3ef00a.  call `validateModel`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateModel:(Ljava/lang/Class;)V` @kind direct;
  #L3ef010.  call `validateText`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateText:(Ljava/lang/Class;)V` @kind direct;
  #L3ef016.  call `validateTextList`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validateTextList:(Ljava/lang/Class;)V` @kind direct;
  #L3ef01c.  return @kind void;
}
