record `org.simpleframework.xml.core.EmptyExpression` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Expression` @kind interface {
  `java.util.List` `org.simpleframework.xml.core.EmptyExpression.list` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.EmptyExpression.style` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this, `org.simpleframework.xml.stream.Format` v2 @kind object) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e4af4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e4afa.  v0:= new `java.util.LinkedList`;
  #L3e4afe.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L3e4b04.  v1.`org.simpleframework.xml.core.EmptyExpression.list` @type ^`java.util.List` := v0 @kind object;
  #L3e4b08.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/stream/Format;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L3e4b0e.  v2:= temp @kind object;
  #L3e4b10.  v1.`org.simpleframework.xml.core.EmptyExpression.style` @type ^`org.simpleframework.xml.stream.Style` := v2 @kind object;
  #L3e4b14.  return @kind void;
}
procedure `java.lang.String` `getAttribute`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4a18.  v0:= v1.`org.simpleframework.xml.core.EmptyExpression.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3e4a1c.  call temp:= `getAttribute`(v0, v2) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e4a22.  v2:= temp @kind object;
  #L3e4a24.  return v2 @kind object;
}
procedure `java.lang.String` `getElement`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4a38.  v0:= v1.`org.simpleframework.xml.core.EmptyExpression.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3e4a3c.  call temp:= `getElement`(v0, v2) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e4a42.  v2:= temp @kind object;
  #L3e4a44.  return v2 @kind object;
}
procedure `java.lang.String` `getFirst`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.getFirst:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4a58.  v0:= 0I;
  #L3e4a5a.  return v0 @kind object;
}
procedure `int` `getIndex`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4a04.  v0:= 0I;
  #L3e4a06.  return v0;
}
procedure `java.lang.String` `getLast`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.getLast:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4a6c.  v0:= 0I;
  #L3e4a6e.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4a80.  v0:= "" @kind object;
  #L3e4a84.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getPath`(`org.simpleframework.xml.core.EmptyExpression` v0 @kind this, `int` v1 ) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;

  #L3e4acc.  v1:= 0I;
  #L3e4ace.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getPath`(`org.simpleframework.xml.core.EmptyExpression` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;

  #L3e4ae0.  v1:= 0I;
  #L3e4ae2.  return v1 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4a98.  v0:= 0I;
  #L3e4a9a.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.isAttribute:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e49c8.  v0:= 0I;
  #L3e49ca.  return v0;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e49dc.  v0:= 1I;
  #L3e49de.  return v0;
}
procedure `boolean` `isPath`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.isPath:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e49f0.  v0:= 0I;
  #L3e49f2.  return v0;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.EmptyExpression` v1 @kind this) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4aac.  v0:= v1.`org.simpleframework.xml.core.EmptyExpression.list` @type ^`java.util.List` @kind object;
  #L3e4ab0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e4ab6.  v0:= temp @kind object;
  #L3e4ab8.  return v0 @kind object;
}
