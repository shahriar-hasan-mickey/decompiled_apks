record `org.simpleframework.xml.core.AnnotationFactory` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.AnnotationFactory.format` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.simpleframework.xml.core.AnnotationFactory.required` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.AnnotationFactory` v0 @kind this, `org.simpleframework.xml.core.Detail` v1 @kind object, `org.simpleframework.xml.core.Support` v2 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3dcffc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dd002.  call temp:= `isRequired`(v1) @signature `Lorg/simpleframework/xml/core/Detail;.isRequired:()Z` @kind interface;
  #L3dd008.  v1:= temp;
  #L3dd00a.  v0.`org.simpleframework.xml.core.AnnotationFactory.required` @type ^`boolean` := v1 @kind boolean;
  #L3dd00e.  call temp:= `getFormat`(v2) @signature `Lorg/simpleframework/xml/core/Support;.getFormat:()Lorg/simpleframework/xml/stream/Format;` @kind virtual;
  #L3dd014.  v1:= temp @kind object;
  #L3dd016.  v0.`org.simpleframework.xml.core.AnnotationFactory.format` @type ^`org.simpleframework.xml.stream.Format` := v1 @kind object;
  #L3dd01a.  return @kind void;
}
procedure `java.lang.ClassLoader` `getClassLoader`(`org.simpleframework.xml.core.AnnotationFactory` v1 @kind this) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getClassLoader:()Ljava/lang/ClassLoader;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3dce78.  v0:= constclass @type ^`org.simpleframework.xml.core.AnnotationFactory` @kind object;
  #L3dce7c.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3dce82.  v0:= temp @kind object;
  #L3dce84.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation` `getInstance`(`org.simpleframework.xml.core.AnnotationFactory` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3dce98.  call temp:= `getClassLoader`(v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getClassLoader:()Ljava/lang/ClassLoader;` @kind direct;
  #L3dce9e.  v0:= temp @kind object;
  #L3dcea0.  call temp:= `getComponentType`(v4) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L3dcea6.  v1:= temp @kind object;
  #L3dcea8.  call temp:= `isArray`(v4) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3dceae.  v2:= temp;
  #L3dceb0.  if v2 == 0 then goto L3dcedc;
  #L3dceb4.  call temp:= `isPrimitive`(v3, v1) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.isPrimitive:(Ljava/lang/Class;)Z` @kind direct;
  #L3dceba.  v4:= temp;
  #L3dcebc.  if v4 == 0 then goto L3dcece;
  #L3dcec0.  v4:= constclass @type ^`org.simpleframework.xml.Element` @kind object;
  #L3dcec4.  call temp:= `getInstance`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3dceca.  v4:= temp @kind object;
  #L3dcecc.  return v4 @kind object;
  #L3dcece.  v4:= constclass @type ^`org.simpleframework.xml.ElementArray` @kind object;
  #L3dced2.  call temp:= `getInstance`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3dced8.  v4:= temp @kind object;
  #L3dceda.  return v4 @kind object;
  #L3dcedc.  call temp:= `isPrimitive`(v3, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.isPrimitive:(Ljava/lang/Class;)Z` @kind direct;
  #L3dcee2.  v4:= temp;
  #L3dcee4.  if v4 == 0 then goto L3dcf02;
  #L3dcee8.  call temp:= `isAttribute`(v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.isAttribute:()Z` @kind direct;
  #L3dceee.  v4:= temp;
  #L3dcef0.  if v4 == 0 then goto L3dcf02;
  #L3dcef4.  v4:= constclass @type ^`org.simpleframework.xml.Attribute` @kind object;
  #L3dcef8.  call temp:= `getInstance`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3dcefe.  v4:= temp @kind object;
  #L3dcf00.  return v4 @kind object;
  #L3dcf02.  v4:= constclass @type ^`org.simpleframework.xml.Element` @kind object;
  #L3dcf06.  call temp:= `getInstance`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3dcf0c.  v4:= temp @kind object;
  #L3dcf0e.  return v4 @kind object;
}
procedure `java.lang.annotation.Annotation` `getInstance`(`org.simpleframework.xml.core.AnnotationFactory` v1 @kind this, `java.lang.ClassLoader` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3dcfa8.  v0:= 0I;
  #L3dcfaa.  call temp:= `getInstance`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;Z)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3dcfb0.  v2:= temp @kind object;
  #L3dcfb2.  return v2 @kind object;
}
procedure `java.lang.annotation.Annotation` `getInstance`(`org.simpleframework.xml.core.AnnotationFactory` v2 @kind this, `java.lang.ClassLoader` v3 @kind object, `java.lang.Class` v4 @kind object, `boolean` v5 ) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;Z)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3dcfc4.  v0:= new `org.simpleframework.xml.core.AnnotationHandler`;
  #L3dcfc8.  v1:= v2.`org.simpleframework.xml.core.AnnotationFactory.required` @type ^`boolean` @kind boolean;
  #L3dcfcc.  call `<init>`(v0, v4, v1, v5) @signature `Lorg/simpleframework/xml/core/AnnotationHandler;.<init>:(Ljava/lang/Class;ZZ)V` @kind direct;
  #L3dcfd2.  v5:= 1I;
  #L3dcfd4.  v5:= new `java.lang.Class`[v5];
  #L3dcfd8.  v1:= 0I;
  #L3dcfda.  v5[v1]:= v4 @kind object;
  #L3dcfde.  call temp:= `newProxyInstance`(v3, v5, v0) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L3dcfe4.  v3:= temp @kind object;
  #L3dcfe6.  v3:= (`java.lang.annotation.Annotation`) v3 @kind object;
  #L3dcfea.  return v3 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.AnnotationFactory` v3 @kind this) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.isAttribute:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3dcda8.  v0:= v3.`org.simpleframework.xml.core.AnnotationFactory.format` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L3dcdac.  call temp:= `getVerbosity`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.getVerbosity:()Lorg/simpleframework/xml/stream/Verbosity;` @kind virtual;
  #L3dcdb2.  v0:= temp @kind object;
  #L3dcdb4.  v1:= 0I;
  #L3dcdb6.  if v0 == 0 then goto L3dcdc4;
  #L3dcdba.  v2:= `@@org.simpleframework.xml.stream.Verbosity.LOW` @type ^`org.simpleframework.xml.stream.Verbosity` @kind object;
  #L3dcdbe.  if v0 != v2 then goto L3dcdc4;
  #L3dcdc2.  v1:= 1I;
  #L3dcdc4.  return v1;
}
procedure `boolean` `isPrimitive`(`org.simpleframework.xml.core.AnnotationFactory` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.isPrimitive:(Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3dcdd8.  v0:= constclass @type ^`java.lang.Number` @kind object;
  #L3dcddc.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3dcde2.  v0:= temp;
  #L3dcde4.  v1:= 1I;
  #L3dcde6.  if v0 == 0 then goto L3dcdec;
  #L3dcdea.  return v1;
  #L3dcdec.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L3dcdf0.  if v3 != v0 then goto L3dcdf6;
  #L3dcdf4.  return v1;
  #L3dcdf6.  v0:= constclass @type ^`java.lang.Character` @kind object;
  #L3dcdfa.  if v3 != v0 then goto L3dce00;
  #L3dcdfe.  return v1;
  #L3dce00.  call temp:= `isPrimitive`(v3) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L3dce06.  v3:= temp;
  #L3dce08.  return v3;
}
procedure `boolean` `isPrimitiveKey`(`org.simpleframework.xml.core.AnnotationFactory` v2 @kind this, `java.lang.Class`[] v3 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.isPrimitiveKey:([Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3dce1c.  v0:= 0I;
  #L3dce1e.  if v3 == 0 then goto L3dce64;
  #L3dce22.  v1:= length @variable v3;
  #L3dce24.  if v1 <= 0 then goto L3dce64;
  #L3dce28.  v1:= v3[v0] @kind object;
  #L3dce2c.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L3dce32.  v1:= temp @kind object;
  #L3dce34.  v3:= v3[v0] @kind object;
  #L3dce38.  if v1 == 0 then goto L3dce5a;
  #L3dce3c.  call temp:= `isEnum`(v1) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L3dce42.  v0:= temp;
  #L3dce44.  v1:= 1I;
  #L3dce46.  if v0 == 0 then goto L3dce4c;
  #L3dce4a.  return v1;
  #L3dce4c.  call temp:= `isEnum`(v3) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L3dce52.  v0:= temp;
  #L3dce54.  if v0 == 0 then goto L3dce5a;
  #L3dce58.  return v1;
  #L3dce5a.  call temp:= `isPrimitive`(v2, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.isPrimitive:(Ljava/lang/Class;)Z` @kind direct;
  #L3dce60.  v3:= temp;
  #L3dce62.  return v3;
  #L3dce64.  return v0;
}
procedure `java.lang.annotation.Annotation` `getInstance`(`org.simpleframework.xml.core.AnnotationFactory` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dcf20.  call temp:= `getClassLoader`(v2) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getClassLoader:()Ljava/lang/ClassLoader;` @kind direct;
  #L3dcf26.  v0:= temp @kind object;
  #L3dcf28.  v1:= constclass @type ^`java.util.Map` @kind object;
  #L3dcf2c.  call temp:= `isAssignableFrom`(v1, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3dcf32.  v1:= temp;
  #L3dcf34.  if v1 == 0 then goto L3dcf6e;
  #L3dcf38.  call temp:= `isPrimitiveKey`(v2, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.isPrimitiveKey:([Ljava/lang/Class;)Z` @kind direct;
  #L3dcf3e.  v3:= temp;
  #L3dcf40.  if v3 == 0 then goto L3dcf60;
  #L3dcf44.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.isAttribute:()Z` @kind direct;
  #L3dcf4a.  v3:= temp;
  #L3dcf4c.  if v3 == 0 then goto L3dcf60;
  #L3dcf50.  v3:= constclass @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L3dcf54.  v4:= 1I;
  #L3dcf56.  call temp:= `getInstance`(v2, v0, v3, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;Z)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3dcf5c.  v3:= temp @kind object;
  #L3dcf5e.  return v3 @kind object;
  #L3dcf60.  v3:= constclass @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L3dcf64.  call temp:= `getInstance`(v2, v0, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3dcf6a.  v3:= temp @kind object;
  #L3dcf6c.  return v3 @kind object;
  #L3dcf6e.  v4:= constclass @type ^`java.util.Collection` @kind object;
  #L3dcf72.  call temp:= `isAssignableFrom`(v4, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3dcf78.  v4:= temp;
  #L3dcf7a.  if v4 == 0 then goto L3dcf8c;
  #L3dcf7e.  v3:= constclass @type ^`org.simpleframework.xml.ElementList` @kind object;
  #L3dcf82.  call temp:= `getInstance`(v2, v0, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3dcf88.  v3:= temp @kind object;
  #L3dcf8a.  return v3 @kind object;
  #L3dcf8c.  call temp:= `getInstance`(v2, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3dcf92.  v3:= temp @kind object;
  #L3dcf94.  return v3 @kind object;
}
