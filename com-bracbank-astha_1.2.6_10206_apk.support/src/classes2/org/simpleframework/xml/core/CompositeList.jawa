record `org.simpleframework.xml.core.CompositeList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeList.entry` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.CompositeList.factory` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.CompositeList.name` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeList.root` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeList.type` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dfcc4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dfcca.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L3dfcce.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3dfcd4.  v1.`org.simpleframework.xml.core.CompositeList.factory` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L3dfcd8.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L3dfcdc.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L3dfce2.  v1.`org.simpleframework.xml.core.CompositeList.root` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L3dfce6.  v1.`org.simpleframework.xml.core.CompositeList.entry` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L3dfcea.  v1.`org.simpleframework.xml.core.CompositeList.type` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L3dfcee.  v1.`org.simpleframework.xml.core.CompositeList.name` @type ^`java.lang.String` := v5 @kind object;
  #L3dfcf2.  return @kind void;
}
procedure `java.lang.Object` `populate`(`org.simpleframework.xml.core.CompositeList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.populate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3dfbfc.  v5:= (`java.util.Collection`) v5 @kind object;
  #L3dfc00.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3dfc06.  v0:= temp @kind object;
  #L3dfc08.  v1:= v3.`org.simpleframework.xml.core.CompositeList.entry` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3dfc0c.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3dfc12.  v1:= temp @kind object;
  #L3dfc14.  if v0 != 0 then goto L3dfc1a;
  #L3dfc18.  return v5 @kind object;
  #L3dfc1a.  v2:= v3.`org.simpleframework.xml.core.CompositeList.root` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L3dfc1e.  call temp:= `read`(v2, v0, v1) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L3dfc24.  v0:= temp @kind object;
  #L3dfc26.  call temp:= `add`(v5, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3dfc2c.  goto L3dfc00;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3dfbc4.  call temp:= `getNext`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3dfbca.  v4:= temp @kind object;
  #L3dfbcc.  v0:= v2.`org.simpleframework.xml.core.CompositeList.entry` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3dfbd0.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3dfbd6.  v0:= temp @kind object;
  #L3dfbd8.  if v4 != 0 then goto L3dfbe0;
  #L3dfbdc.  v3:= 1I;
  #L3dfbde.  return v3;
  #L3dfbe0.  v1:= v2.`org.simpleframework.xml.core.CompositeList.root` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L3dfbe4.  call temp:= `validate`(v1, v4, v0) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L3dfbea.  goto L3dfbc4;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dfc40.  v0:= v2.`org.simpleframework.xml.core.CompositeList.factory` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L3dfc44.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3dfc4a.  v0:= temp @kind object;
  #L3dfc4c.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L3dfc52.  v1:= temp @kind object;
  #L3dfc54.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L3dfc5a.  v0:= temp;
  #L3dfc5c.  if v0 != 0 then goto L3dfc6a;
  #L3dfc60.  call temp:= `populate`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/CompositeList;.populate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L3dfc66.  v3:= temp @kind object;
  #L3dfc68.  return v3 @kind object;
  #L3dfc6a.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dfc7c.  v0:= v2.`org.simpleframework.xml.core.CompositeList.factory` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L3dfc80.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3dfc86.  v0:= temp @kind object;
  #L3dfc88.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L3dfc8e.  v1:= temp;
  #L3dfc90.  if v1 == 0 then goto L3dfc9e;
  #L3dfc94.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L3dfc9a.  v3:= temp @kind object;
  #L3dfc9c.  return v3 @kind object;
  #L3dfc9e.  call temp:= `setInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3dfca4.  if v4 == 0 then goto L3dfcb2;
  #L3dfca8.  call temp:= `populate`(v2, v3, v4) @signature `Lorg/simpleframework/xml/core/CompositeList;.populate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L3dfcae.  v3:= temp @kind object;
  #L3dfcb0.  return v3 @kind object;
  #L3dfcb2.  return v4 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dfb7c.  v0:= v2.`org.simpleframework.xml.core.CompositeList.factory` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L3dfb80.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3dfb86.  v0:= temp @kind object;
  #L3dfb88.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L3dfb8e.  v1:= temp;
  #L3dfb90.  if v1 != 0 then goto L3dfbae;
  #L3dfb94.  v1:= 0I;
  #L3dfb96.  call temp:= `setInstance`(v0, v1) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3dfb9c.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L3dfba2.  v0:= temp @kind object;
  #L3dfba4.  call temp:= `validate`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/CompositeList;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind direct;
  #L3dfbaa.  v3:= temp;
  #L3dfbac.  return v3;
  #L3dfbae.  v3:= 1I;
  #L3dfbb0.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeList` v4 @kind this, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dfd04.  v6:= (`java.util.Collection`) v6 @kind object;
  #L3dfd08.  call temp:= `iterator`(v6) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dfd0e.  v6:= temp @kind object;
  #L3dfd10.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3dfd16.  v0:= temp;
  #L3dfd18.  if v0 == 0 then goto L3dfd88;
  #L3dfd1c.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3dfd22.  v0:= temp @kind object;
  #L3dfd24.  if v0 == 0 then goto L3dfd10;
  #L3dfd28.  v1:= v4.`org.simpleframework.xml.core.CompositeList.entry` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3dfd2c.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3dfd32.  v1:= temp @kind object;
  #L3dfd34.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3dfd3a.  v2:= temp @kind object;
  #L3dfd3c.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3dfd42.  v3:= temp;
  #L3dfd44.  if v3 == 0 then goto L3dfd58;
  #L3dfd48.  v2:= v4.`org.simpleframework.xml.core.CompositeList.root` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L3dfd4c.  v3:= v4.`org.simpleframework.xml.core.CompositeList.name` @type ^`java.lang.String` @kind object;
  #L3dfd50.  call `write`(v2, v5, v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L3dfd56.  goto L3dfd10;
  #L3dfd58.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3dfd5c.  v6:= 3I;
  #L3dfd5e.  v6:= new `java.lang.Object`[v6];
  #L3dfd62.  v0:= 0I;
  #L3dfd64.  v6[v0]:= v2 @kind object;
  #L3dfd68.  v0:= v4.`org.simpleframework.xml.core.CompositeList.entry` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3dfd6c.  v1:= 1I;
  #L3dfd6e.  v6[v1]:= v0 @kind object;
  #L3dfd72.  v0:= v4.`org.simpleframework.xml.core.CompositeList.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3dfd76.  v1:= 2I;
  #L3dfd78.  v6[v1]:= v0 @kind object;
  #L3dfd7c.  v0:= "Entry %s does not match %s for %s" @kind object;
  #L3dfd80.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3dfd86.  throw v5;
  #L3dfd88.  return @kind void;
}
