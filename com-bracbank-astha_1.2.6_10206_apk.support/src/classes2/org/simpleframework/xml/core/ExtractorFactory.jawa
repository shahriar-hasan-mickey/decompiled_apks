record `org.simpleframework.xml.core.ExtractorFactory` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.ExtractorFactory.contact` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.ExtractorFactory.format` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.ExtractorFactory.label` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ExtractorFactory` v0 @kind this, `org.simpleframework.xml.core.Contact` v1 @kind object, `java.lang.annotation.Annotation` v2 @kind object, `org.simpleframework.xml.stream.Format` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.<init>:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e5318.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e531e.  v0.`org.simpleframework.xml.core.ExtractorFactory.contact` @type ^`org.simpleframework.xml.core.Contact` := v1 @kind object;
  #L3e5322.  v0.`org.simpleframework.xml.core.ExtractorFactory.format` @type ^`org.simpleframework.xml.stream.Format` := v3 @kind object;
  #L3e5326.  v0.`org.simpleframework.xml.core.ExtractorFactory.label` @type ^`java.lang.annotation.Annotation` := v2 @kind object;
  #L3e532a.  return @kind void;
}
procedure `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder` `getBuilder`(`org.simpleframework.xml.core.ExtractorFactory` v3 @kind this, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.getBuilder:(Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e5298.  v0:= instanceof @variable v4 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L3e529c.  if v0 == 0 then goto L3e52b4;
  #L3e52a0.  v4:= new `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder`;
  #L3e52a4.  v0:= constclass @type ^`org.simpleframework.xml.ElementUnion` @kind object;
  #L3e52a8.  v1:= constclass @type ^`org.simpleframework.xml.core.ExtractorFactory$ElementExtractor` @kind object;
  #L3e52ac.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3e52b2.  return v4 @kind object;
  #L3e52b4.  v0:= instanceof @variable v4 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L3e52b8.  if v0 == 0 then goto L3e52d0;
  #L3e52bc.  v4:= new `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder`;
  #L3e52c0.  v0:= constclass @type ^`org.simpleframework.xml.ElementListUnion` @kind object;
  #L3e52c4.  v1:= constclass @type ^`org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor` @kind object;
  #L3e52c8.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3e52ce.  return v4 @kind object;
  #L3e52d0.  v0:= instanceof @variable v4 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L3e52d4.  if v0 == 0 then goto L3e52ec;
  #L3e52d8.  v4:= new `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder`;
  #L3e52dc.  v0:= constclass @type ^`org.simpleframework.xml.ElementMapUnion` @kind object;
  #L3e52e0.  v1:= constclass @type ^`org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor` @kind object;
  #L3e52e4.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3e52ea.  return v4 @kind object;
  #L3e52ec.  v0:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3e52f0.  v1:= 1I;
  #L3e52f2.  v1:= new `java.lang.Object`[v1];
  #L3e52f6.  v2:= 0I;
  #L3e52f8.  v1[v2]:= v4 @kind object;
  #L3e52fc.  v4:= "Annotation %s is not a union" @kind object;
  #L3e5300.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e5306.  throw v0;
}
procedure `java.lang.Object` `getInstance`(`org.simpleframework.xml.core.ExtractorFactory` v5 @kind this, `java.lang.annotation.Annotation` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.getInstance:(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e5218.  call temp:= `getBuilder`(v5, v6) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.getBuilder:(Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;` @kind direct;
  #L3e521e.  v0:= temp @kind object;
  #L3e5220.  call temp:= `access$000`(v0) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.access$000:(Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;)Ljava/lang/reflect/Constructor;` @kind static;
  #L3e5226.  v0:= temp @kind object;
  #L3e5228.  call temp:= `isAccessible`(v0) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L3e522e.  v1:= temp;
  #L3e5230.  v2:= 1I;
  #L3e5232.  if v1 != 0 then goto L3e523c;
  #L3e5236.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L3e523c.  v1:= 3I;
  #L3e523e.  v1:= new `java.lang.Object`[v1];
  #L3e5242.  v3:= v5.`org.simpleframework.xml.core.ExtractorFactory.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3e5246.  v4:= 0I;
  #L3e5248.  v1[v4]:= v3 @kind object;
  #L3e524c.  v1[v2]:= v6 @kind object;
  #L3e5250.  v6:= v5.`org.simpleframework.xml.core.ExtractorFactory.format` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L3e5254.  v2:= 2I;
  #L3e5256.  v1[v2]:= v6 @kind object;
  #L3e525a.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e5260.  v6:= temp @kind object;
  #L3e5262.  return v6 @kind object;
}
procedure `org.simpleframework.xml.core.Extractor` `getInstance`(`org.simpleframework.xml.core.ExtractorFactory` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.getInstance:()Lorg/simpleframework/xml/core/Extractor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5274.  v0:= v1.`org.simpleframework.xml.core.ExtractorFactory.label` @type ^`java.lang.annotation.Annotation` @kind object;
  #L3e5278.  call temp:= `getInstance`(v1, v0) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.getInstance:(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;` @kind direct;
  #L3e527e.  v0:= temp @kind object;
  #L3e5280.  v0:= (`org.simpleframework.xml.core.Extractor`) v0 @kind object;
  #L3e5284.  return v0 @kind object;
}
