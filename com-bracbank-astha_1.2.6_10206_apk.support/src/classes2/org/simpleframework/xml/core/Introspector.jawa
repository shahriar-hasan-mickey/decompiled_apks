record `org.simpleframework.xml.core.Introspector` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.Introspector.contact` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.Introspector.format` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.Introspector.label` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.Introspector.marker` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `org.simpleframework.xml.core.Label` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e6fb4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e6fba.  call temp:= `getAnnotation`(v2) @signature `Lorg/simpleframework/xml/core/Contact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L3e6fc0.  v0:= temp @kind object;
  #L3e6fc2.  v1.`org.simpleframework.xml.core.Introspector.marker` @type ^`java.lang.annotation.Annotation` := v0 @kind object;
  #L3e6fc6.  v1.`org.simpleframework.xml.core.Introspector.contact` @type ^`org.simpleframework.xml.core.Contact` := v2 @kind object;
  #L3e6fca.  v1.`org.simpleframework.xml.core.Introspector.format` @type ^`org.simpleframework.xml.stream.Format` := v4 @kind object;
  #L3e6fce.  v1.`org.simpleframework.xml.core.Introspector.label` @type ^`org.simpleframework.xml.core.Label` := v3 @kind object;
  #L3e6fd2.  return @kind void;
}
procedure `java.lang.String` `getDefault`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getDefault:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e6d68.  v0:= v2.`org.simpleframework.xml.core.Introspector.label` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3e6d6c.  call temp:= `getOverride`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getOverride:()Ljava/lang/String;` @kind interface;
  #L3e6d72.  v0:= temp @kind object;
  #L3e6d74.  call temp:= `isEmpty`(v2, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @kind virtual;
  #L3e6d7a.  v1:= temp;
  #L3e6d7c.  if v1 != 0 then goto L3e6d82;
  #L3e6d80.  return v0 @kind object;
  #L3e6d82.  v0:= v2.`org.simpleframework.xml.core.Introspector.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3e6d86.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Contact;.getName:()Ljava/lang/String;` @kind interface;
  #L3e6d8c.  v0:= temp @kind object;
  #L3e6d8e.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e6e18.  call temp:= `getRoot`(v1, v2) @signature `Lorg/simpleframework/xml/core/Introspector;.getRoot:(Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L3e6e1e.  v0:= temp @kind object;
  #L3e6e20.  if v0 == 0 then goto L3e6e26;
  #L3e6e24.  return v0 @kind object;
  #L3e6e26.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3e6e2c.  v2:= temp @kind object;
  #L3e6e2e.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3e6e34.  v2:= temp @kind object;
  #L3e6e36.  return v2 @kind object;
}
procedure `java.lang.String` `getRoot`(`org.simpleframework.xml.core.Introspector` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.getRoot:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e6e80.  v0:= v3 @kind object;
  #L3e6e82.  if v0 == 0 then goto L3e6e9e;
  #L3e6e86.  call temp:= `getRoot`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.getRoot:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L3e6e8c.  v1:= temp @kind object;
  #L3e6e8e.  if v1 == 0 then goto L3e6e94;
  #L3e6e92.  return v1 @kind object;
  #L3e6e94.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L3e6e9a.  v0:= temp @kind object;
  #L3e6e9c.  goto L3e6e82;
  #L3e6e9e.  v3:= 0I;
  #L3e6ea0.  return v3 @kind object;
}
procedure `java.lang.String` `getRoot`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.getRoot:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e6eb4.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3e6eba.  v2:= temp @kind object;
  #L3e6ebc.  v0:= constclass @type ^`org.simpleframework.xml.Root` @kind object;
  #L3e6ec0.  call temp:= `getAnnotation`(v3, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3e6ec6.  v3:= temp @kind object;
  #L3e6ec8.  v3:= (`org.simpleframework.xml.Root`) v3 @kind object;
  #L3e6ecc.  if v3 == 0 then goto L3e6ef0;
  #L3e6ed0.  call temp:= `name`(v3) @signature `Lorg/simpleframework/xml/Root;.name:()Ljava/lang/String;` @kind interface;
  #L3e6ed6.  v3:= temp @kind object;
  #L3e6ed8.  call temp:= `isEmpty`(v1, v3) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @kind virtual;
  #L3e6ede.  v0:= temp;
  #L3e6ee0.  if v0 != 0 then goto L3e6ee6;
  #L3e6ee4.  return v3 @kind object;
  #L3e6ee6.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3e6eec.  v2:= temp @kind object;
  #L3e6eee.  return v2 @kind object;
  #L3e6ef0.  v2:= 0I;
  #L3e6ef2.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Contact` `getContact`(`org.simpleframework.xml.core.Introspector` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getContact:()Lorg/simpleframework/xml/core/Contact;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6f3c.  v0:= v1.`org.simpleframework.xml.core.Introspector.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3e6f40.  return v0 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getDependent`(`org.simpleframework.xml.core.Introspector` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6f94.  v0:= v1.`org.simpleframework.xml.core.Introspector.label` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3e6f98.  call temp:= `getDependent`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @kind interface;
  #L3e6f9e.  v0:= temp @kind object;
  #L3e6fa0.  return v0 @kind object;
}
procedure `java.lang.String` `getEntry`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getEntry:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6da0.  call temp:= `getDependent`(v2) @signature `Lorg/simpleframework/xml/core/Introspector;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @kind virtual;
  #L3e6da6.  v0:= temp @kind object;
  #L3e6da8.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e6dae.  v0:= temp @kind object;
  #L3e6db0.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3e6db6.  v1:= temp;
  #L3e6db8.  if v1 == 0 then goto L3e6dc4;
  #L3e6dbc.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L3e6dc2.  v0:= temp @kind object;
  #L3e6dc4.  call temp:= `getName`(v2, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L3e6dca.  v0:= temp @kind object;
  #L3e6dcc.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getExpression`(`org.simpleframework.xml.core.Introspector` v4 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6f54.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Introspector;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3e6f5a.  v0:= temp @kind object;
  #L3e6f5c.  if v0 == 0 then goto L3e6f74;
  #L3e6f60.  v1:= new `org.simpleframework.xml.core.PathParser`;
  #L3e6f64.  v2:= v4.`org.simpleframework.xml.core.Introspector.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3e6f68.  v3:= v4.`org.simpleframework.xml.core.Introspector.format` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L3e6f6c.  call `<init>`(v1, v0, v2, v3) @signature `Lorg/simpleframework/xml/core/PathParser;.<init>:(Ljava/lang/String;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L3e6f72.  return v1 @kind object;
  #L3e6f74.  v0:= new `org.simpleframework.xml.core.EmptyExpression`;
  #L3e6f78.  v1:= v4.`org.simpleframework.xml.core.Introspector.format` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L3e6f7c.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L3e6f82.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6de0.  v0:= v2.`org.simpleframework.xml.core.Introspector.label` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3e6de4.  call temp:= `getEntry`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getEntry:()Ljava/lang/String;` @kind interface;
  #L3e6dea.  v0:= temp @kind object;
  #L3e6dec.  v1:= v2.`org.simpleframework.xml.core.Introspector.label` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3e6df0.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L3e6df6.  v1:= temp;
  #L3e6df8.  if v1 != 0 then goto L3e6e04;
  #L3e6dfc.  call temp:= `getDefault`(v2) @signature `Lorg/simpleframework/xml/core/Introspector;.getDefault:()Ljava/lang/String;` @kind direct;
  #L3e6e02.  v0:= temp @kind object;
  #L3e6e04.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6e48.  v0:= v2.`org.simpleframework.xml.core.Introspector.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3e6e4c.  v1:= constclass @type ^`org.simpleframework.xml.Path` @kind object;
  #L3e6e50.  call temp:= `getAnnotation`(v0, v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L3e6e56.  v0:= temp @kind object;
  #L3e6e58.  v0:= (`org.simpleframework.xml.Path`) v0 @kind object;
  #L3e6e5c.  if v0 != 0 then goto L3e6e64;
  #L3e6e60.  v0:= 0I;
  #L3e6e62.  return v0 @kind object;
  #L3e6e64.  call temp:= `value`(v0) @signature `Lorg/simpleframework/xml/Path;.value:()Ljava/lang/String;` @kind interface;
  #L3e6e6a.  v0:= temp @kind object;
  #L3e6e6c.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6d40.  v0:= 1I;
  #L3e6d42.  if v2 == 0 then goto L3e6d56;
  #L3e6d46.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e6d4c.  v2:= temp;
  #L3e6d4e.  if v2 != 0 then goto L3e6d54;
  #L3e6d52.  goto L3e6d56;
  #L3e6d54.  v0:= 0I;
  #L3e6d56.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.Introspector` v3 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e6f04.  v0:= 2I;
  #L3e6f06.  v0:= new `java.lang.Object`[v0];
  #L3e6f0a.  v1:= v3.`org.simpleframework.xml.core.Introspector.marker` @type ^`java.lang.annotation.Annotation` @kind object;
  #L3e6f0e.  v2:= 0I;
  #L3e6f10.  v0[v2]:= v1 @kind object;
  #L3e6f14.  v1:= v3.`org.simpleframework.xml.core.Introspector.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3e6f18.  v2:= 1I;
  #L3e6f1a.  v0[v2]:= v1 @kind object;
  #L3e6f1e.  v1:= "%s on %s" @kind object;
  #L3e6f22.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e6f28.  v0:= temp @kind object;
  #L3e6f2a.  return v0 @kind object;
}
