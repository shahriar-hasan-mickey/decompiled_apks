record `org.simpleframework.xml.core.Collector` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Criteria` @kind interface {
  `org.simpleframework.xml.core.Collector$Registry` `org.simpleframework.xml.core.Collector.alias` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Collector$Registry` `org.simpleframework.xml.core.Collector.registry` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Collector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Collector;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3deb90.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3deb96.  v0:= new `org.simpleframework.xml.core.Collector$Registry`;
  #L3deb9a.  v1:= 0I;
  #L3deb9c.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.<init>:(Lorg/simpleframework/xml/core/Collector$1;)V` @kind direct;
  #L3deba2.  v2.`org.simpleframework.xml.core.Collector.registry` @type ^`org.simpleframework.xml.core.Collector$Registry` := v0 @kind object;
  #L3deba6.  v0:= new `org.simpleframework.xml.core.Collector$Registry`;
  #L3debaa.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.<init>:(Lorg/simpleframework/xml/core/Collector$1;)V` @kind direct;
  #L3debb0.  v2.`org.simpleframework.xml.core.Collector.alias` @type ^`org.simpleframework.xml.core.Collector$Registry` := v0 @kind object;
  #L3debb4.  return @kind void;
}
procedure `void` `commit`(`org.simpleframework.xml.core.Collector` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.commit:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3debc8.  v0:= v3.`org.simpleframework.xml.core.Collector.registry` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L3debcc.  call temp:= `values`(v0) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L3debd2.  v0:= temp @kind object;
  #L3debd4.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3debda.  v0:= temp @kind object;
  #L3debdc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3debe2.  v1:= temp;
  #L3debe4.  if v1 == 0 then goto L3dec0c;
  #L3debe8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3debee.  v1:= temp @kind object;
  #L3debf0.  v1:= (`org.simpleframework.xml.core.Variable`) v1 @kind object;
  #L3debf4.  call temp:= `getContact`(v1) @signature `Lorg/simpleframework/xml/core/Variable;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind virtual;
  #L3debfa.  v2:= temp @kind object;
  #L3debfc.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Variable;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3dec02.  v1:= temp @kind object;
  #L3dec04.  call `set`(v2, v4, v1) @signature `Lorg/simpleframework/xml/core/Contact;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3dec0a.  goto L3debdc;
  #L3dec0c.  return @kind void;
}
procedure `org.simpleframework.xml.core.Variable` `get`(`org.simpleframework.xml.core.Collector` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.get:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Variable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3deaf0.  v0:= v1.`org.simpleframework.xml.core.Collector.registry` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L3deaf4.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3deafa.  v2:= temp @kind object;
  #L3deafc.  v2:= (`org.simpleframework.xml.core.Variable`) v2 @kind object;
  #L3deb00.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Variable` `get`(`org.simpleframework.xml.core.Collector` v1 @kind this, `org.simpleframework.xml.core.Label` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.get:(Lorg/simpleframework/xml/core/Label;)Lorg/simpleframework/xml/core/Variable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3deb14.  if v2 == 0 then goto L3deb32;
  #L3deb18.  call temp:= `getKey`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3deb1e.  v2:= temp @kind object;
  #L3deb20.  v0:= v1.`org.simpleframework.xml.core.Collector.registry` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L3deb24.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3deb2a.  v2:= temp @kind object;
  #L3deb2c.  v2:= (`org.simpleframework.xml.core.Variable`) v2 @kind object;
  #L3deb30.  return v2 @kind object;
  #L3deb32.  v2:= 0I;
  #L3deb34.  return v2 @kind object;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.Collector` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Collector;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dead0.  v0:= v1.`org.simpleframework.xml.core.Collector.registry` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L3dead4.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3deada.  v0:= temp @kind object;
  #L3deadc.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Variable` `remove`(`org.simpleframework.xml.core.Collector` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.remove:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Variable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3deb48.  v0:= v1.`org.simpleframework.xml.core.Collector.registry` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L3deb4c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3deb52.  v2:= temp @kind object;
  #L3deb54.  v2:= (`org.simpleframework.xml.core.Variable`) v2 @kind object;
  #L3deb58.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Variable` `resolve`(`org.simpleframework.xml.core.Collector` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.resolve:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Variable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3deb6c.  v0:= v1.`org.simpleframework.xml.core.Collector.alias` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L3deb70.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3deb76.  v2:= temp @kind object;
  #L3deb78.  v2:= (`org.simpleframework.xml.core.Variable`) v2 @kind object;
  #L3deb7c.  return v2 @kind object;
}
procedure `void` `set`(`org.simpleframework.xml.core.Collector` v5 @kind this, `org.simpleframework.xml.core.Label` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3dec20.  v0:= new `org.simpleframework.xml.core.Variable`;
  #L3dec24.  call `<init>`(v0, v6, v7) @signature `Lorg/simpleframework/xml/core/Variable;.<init>:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind direct;
  #L3dec2a.  if v6 == 0 then goto L3dec64;
  #L3dec2e.  call temp:= `getPaths`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L3dec34.  v7:= temp @kind object;
  #L3dec36.  call temp:= `getKey`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3dec3c.  v6:= temp @kind object;
  #L3dec3e.  v1:= length @variable v7;
  #L3dec40.  v2:= 0I;
  #L3dec42.  if v2 >= v1 then goto L3dec5a;
  #L3dec46.  v3:= v7[v2] @kind object;
  #L3dec4a.  v4:= v5.`org.simpleframework.xml.core.Collector.alias` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L3dec4e.  call temp:= `put`(v4, v3, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3dec54.  v2:= v2 + 1;
  #L3dec58.  goto L3dec42;
  #L3dec5a.  v7:= v5.`org.simpleframework.xml.core.Collector.registry` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L3dec5e.  call temp:= `put`(v7, v6, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3dec64.  return @kind void;
}
