record `org.simpleframework.xml.core.TextList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.TextList.factory` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.TextList.primitive` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.TextList.type` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TextList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f0708.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f070e.  v4:= new `org.simpleframework.xml.core.ClassType`;
  #L3f0712.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L3f0716.  call `<init>`(v4, v0) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L3f071c.  v1.`org.simpleframework.xml.core.TextList.type` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L3f0720.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L3f0724.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3f072a.  v1.`org.simpleframework.xml.core.TextList.factory` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L3f072e.  v3:= new `org.simpleframework.xml.core.Primitive`;
  #L3f0732.  call `<init>`(v3, v2, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3f0738.  v1.`org.simpleframework.xml.core.TextList.primitive` @type ^`org.simpleframework.xml.core.Primitive` := v3 @kind object;
  #L3f073c.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.TextList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f0694.  v0:= v3.`org.simpleframework.xml.core.TextList.factory` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L3f0698.  call temp:= `getInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L3f069e.  v0:= temp @kind object;
  #L3f06a0.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L3f06a6.  v1:= temp @kind object;
  #L3f06a8.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L3f06ae.  v2:= temp;
  #L3f06b0.  if v2 == 0 then goto L3f06be;
  #L3f06b4.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L3f06ba.  v4:= temp @kind object;
  #L3f06bc.  return v4 @kind object;
  #L3f06be.  call temp:= `read`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/TextList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f06c4.  v4:= temp @kind object;
  #L3f06c6.  return v4 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.TextList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f06d8.  v0:= v4 @kind object;
  #L3f06da.  v0:= (`java.util.Collection`) v0 @kind object;
  #L3f06de.  v1:= v2.`org.simpleframework.xml.core.TextList.primitive` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3f06e2.  call temp:= `read`(v1, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L3f06e8.  v3:= temp @kind object;
  #L3f06ea.  if v3 == 0 then goto L3f06f4;
  #L3f06ee.  call temp:= `add`(v0, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f06f4.  return v4 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.TextList` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;

  #L3f0680.  v1:= 1I;
  #L3f0682.  return v1;
}
procedure `void` `write`(`org.simpleframework.xml.core.TextList` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f0750.  v4:= (`java.util.Collection`) v4 @kind object;
  #L3f0754.  call temp:= `getParent`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3f075a.  v3:= temp @kind object;
  #L3f075c.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f0762.  v4:= temp @kind object;
  #L3f0764.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f076a.  v0:= temp;
  #L3f076c.  if v0 == 0 then goto L3f0784;
  #L3f0770.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f0776.  v0:= temp @kind object;
  #L3f0778.  v1:= v2.`org.simpleframework.xml.core.TextList.primitive` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L3f077c.  call `write`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L3f0782.  goto L3f0764;
  #L3f0784.  return @kind void;
}
