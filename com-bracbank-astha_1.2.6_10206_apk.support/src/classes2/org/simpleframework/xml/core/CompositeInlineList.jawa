record `org.simpleframework.xml.core.CompositeInlineList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeInlineList.entry` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.CompositeInlineList.factory` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.CompositeInlineList.name` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeInlineList.root` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeInlineList.type` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeInlineList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3df244.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df24a.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L3df24e.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3df254.  v1.`org.simpleframework.xml.core.CompositeInlineList.factory` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L3df258.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L3df25c.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L3df262.  v1.`org.simpleframework.xml.core.CompositeInlineList.root` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L3df266.  v1.`org.simpleframework.xml.core.CompositeInlineList.entry` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L3df26a.  v1.`org.simpleframework.xml.core.CompositeInlineList.type` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L3df26e.  v1.`org.simpleframework.xml.core.CompositeInlineList.name` @type ^`java.lang.String` := v5 @kind object;
  #L3df272.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3df158.  v0:= v2.`org.simpleframework.xml.core.CompositeInlineList.root` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L3df15c.  call temp:= `read`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L3df162.  v3:= temp @kind object;
  #L3df164.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3df16a.  v4:= temp @kind object;
  #L3df16c.  v0:= v2.`org.simpleframework.xml.core.CompositeInlineList.entry` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df170.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df176.  v0:= temp @kind object;
  #L3df178.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3df17e.  v0:= temp;
  #L3df180.  if v0 == 0 then goto L3df186;
  #L3df184.  return v3 @kind object;
  #L3df186.  v3:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3df18a.  v0:= 3I;
  #L3df18c.  v0:= new `java.lang.Object`[v0];
  #L3df190.  v1:= 0I;
  #L3df192.  v0[v1]:= v4 @kind object;
  #L3df196.  v4:= v2.`org.simpleframework.xml.core.CompositeInlineList.entry` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df19a.  v1:= 1I;
  #L3df19c.  v0[v1]:= v4 @kind object;
  #L3df1a0.  v4:= v2.`org.simpleframework.xml.core.CompositeInlineList.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df1a4.  v1:= 2I;
  #L3df1a6.  v0[v1]:= v4 @kind object;
  #L3df1aa.  v4:= "Entry %s does not match %s for %s" @kind object;
  #L3df1ae.  call `<init>`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3df1b4.  throw v3;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.util.Collection` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3df1f4.  call temp:= `getParent`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df1fa.  v0:= temp @kind object;
  #L3df1fc.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3df202.  v1:= temp @kind object;
  #L3df204.  if v4 == 0 then goto L3df230;
  #L3df208.  v2:= v3.`org.simpleframework.xml.core.CompositeInlineList.entry` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df20c.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df212.  v2:= temp @kind object;
  #L3df214.  call temp:= `read`(v3, v4, v2) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L3df21a.  v4:= temp @kind object;
  #L3df21c.  if v4 == 0 then goto L3df226;
  #L3df220.  call temp:= `add`(v5, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3df226.  call temp:= `getNext`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df22c.  v4:= temp @kind object;
  #L3df22e.  goto L3df204;
  #L3df230.  return v5 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineList` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df124.  v0:= v1.`org.simpleframework.xml.core.CompositeInlineList.factory` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L3df128.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:()Ljava/lang/Object;` @kind virtual;
  #L3df12e.  v0:= temp @kind object;
  #L3df130.  v0:= (`java.util.Collection`) v0 @kind object;
  #L3df134.  if v0 == 0 then goto L3df142;
  #L3df138.  call temp:= `read`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @kind direct;
  #L3df13e.  v2:= temp @kind object;
  #L3df140.  return v2 @kind object;
  #L3df142.  v2:= 0I;
  #L3df144.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineList` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3df1c8.  v2:= (`java.util.Collection`) v2 @kind object;
  #L3df1cc.  if v2 == 0 then goto L3df1da;
  #L3df1d0.  call temp:= `read`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @kind direct;
  #L3df1d6.  v1:= temp @kind object;
  #L3df1d8.  return v1 @kind object;
  #L3df1da.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L3df1e0.  v1:= temp @kind object;
  #L3df1e2.  return v1 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeInlineList` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3df0d0.  call temp:= `getParent`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df0d6.  v0:= temp @kind object;
  #L3df0d8.  v1:= v4.`org.simpleframework.xml.core.CompositeInlineList.entry` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df0dc.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df0e2.  v1:= temp @kind object;
  #L3df0e4.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L3df0ea.  v2:= temp @kind object;
  #L3df0ec.  if v5 == 0 then goto L3df10e;
  #L3df0f0.  v3:= v4.`org.simpleframework.xml.core.CompositeInlineList.root` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L3df0f4.  call temp:= `validate`(v3, v5, v1) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L3df0fa.  v5:= temp;
  #L3df0fc.  if v5 != 0 then goto L3df104;
  #L3df100.  v5:= 0I;
  #L3df102.  return v5;
  #L3df104.  call temp:= `getNext`(v0, v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df10a.  v5:= temp @kind object;
  #L3df10c.  goto L3df0ec;
  #L3df10e.  v5:= 1I;
  #L3df110.  return v5;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeInlineList` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3df284.  v4:= (`java.util.Collection`) v4 @kind object;
  #L3df288.  call temp:= `getParent`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L3df28e.  v0:= temp @kind object;
  #L3df290.  call temp:= `isCommitted`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.isCommitted:()Z` @kind interface;
  #L3df296.  v1:= temp;
  #L3df298.  if v1 != 0 then goto L3df2a2;
  #L3df29c.  call `remove`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.remove:()V` @kind interface;
  #L3df2a2.  call `write`(v2, v0, v4) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Collection;)V` @kind virtual;
  #L3df2a8.  return @kind void;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeInlineList` v4 @kind this, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `java.util.Collection` v6 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3df2bc.  call temp:= `iterator`(v6) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3df2c2.  v6:= temp @kind object;
  #L3df2c4.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3df2ca.  v0:= temp;
  #L3df2cc.  if v0 == 0 then goto L3df338;
  #L3df2d0.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3df2d6.  v0:= temp @kind object;
  #L3df2d8.  if v0 == 0 then goto L3df2c4;
  #L3df2dc.  v1:= v4.`org.simpleframework.xml.core.CompositeInlineList.entry` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df2e0.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df2e6.  v1:= temp @kind object;
  #L3df2e8.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3df2ee.  v2:= temp @kind object;
  #L3df2f0.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3df2f6.  v3:= temp;
  #L3df2f8.  if v3 == 0 then goto L3df30c;
  #L3df2fc.  v2:= v4.`org.simpleframework.xml.core.CompositeInlineList.root` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L3df300.  v3:= v4.`org.simpleframework.xml.core.CompositeInlineList.name` @type ^`java.lang.String` @kind object;
  #L3df304.  call `write`(v2, v5, v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L3df30a.  goto L3df2c4;
  #L3df30c.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3df310.  v6:= 3I;
  #L3df312.  v6:= new `java.lang.Object`[v6];
  #L3df316.  v0:= 0I;
  #L3df318.  v6[v0]:= v2 @kind object;
  #L3df31c.  v0:= 1I;
  #L3df31e.  v6[v0]:= v1 @kind object;
  #L3df322.  v0:= v4.`org.simpleframework.xml.core.CompositeInlineList.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df326.  v1:= 2I;
  #L3df328.  v6[v1]:= v0 @kind object;
  #L3df32c.  v0:= "Entry %s does not match %s for %s" @kind object;
  #L3df330.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3df336.  throw v5;
  #L3df338.  return @kind void;
}
