record `org.simpleframework.xml.core.Function` @kind class @AccessFlag PUBLIC {
  `boolean` `org.simpleframework.xml.core.Function.contextual` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `org.simpleframework.xml.core.Function.method` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Function` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Function;.<init>:(Ljava/lang/reflect/Method;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e5d74.  v0:= 0I;
  #L3e5d76.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Function;.<init>:(Ljava/lang/reflect/Method;Z)V` @kind direct;
  #L3e5d7c.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Function` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `boolean` v2 ) @signature `Lorg/simpleframework/xml/core/Function;.<init>:(Ljava/lang/reflect/Method;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e5d90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e5d96.  v0.`org.simpleframework.xml.core.Function.contextual` @type ^`boolean` := v2 @kind boolean;
  #L3e5d9a.  v0.`org.simpleframework.xml.core.Function.method` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L3e5d9e.  return @kind void;
}
procedure `java.lang.Object` `call`(`org.simpleframework.xml.core.Function` v3 @kind this, `org.simpleframework.xml.core.Context` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Function;.call:(Lorg/simpleframework/xml/core/Context;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e5d18.  if v5 == 0 then goto L3e5d60;
  #L3e5d1c.  call temp:= `getSession`(v4) @signature `Lorg/simpleframework/xml/core/Context;.getSession:()Lorg/simpleframework/xml/core/Session;` @kind interface;
  #L3e5d22.  v4:= temp @kind object;
  #L3e5d24.  call temp:= `getMap`(v4) @signature `Lorg/simpleframework/xml/core/Session;.getMap:()Ljava/util/Map;` @kind virtual;
  #L3e5d2a.  v4:= temp @kind object;
  #L3e5d2c.  v0:= v3.`org.simpleframework.xml.core.Function.contextual` @type ^`boolean` @kind boolean;
  #L3e5d30.  v1:= 0I;
  #L3e5d32.  if v0 == 0 then goto L3e5d4e;
  #L3e5d36.  v0:= v3.`org.simpleframework.xml.core.Function.method` @type ^`java.lang.reflect.Method` @kind object;
  #L3e5d3a.  v2:= 1I;
  #L3e5d3c.  v2:= new `java.lang.Object`[v2];
  #L3e5d40.  v2[v1]:= v4 @kind object;
  #L3e5d44.  call temp:= `invoke`(v0, v5, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e5d4a.  v4:= temp @kind object;
  #L3e5d4c.  return v4 @kind object;
  #L3e5d4e.  v4:= v3.`org.simpleframework.xml.core.Function.method` @type ^`java.lang.reflect.Method` @kind object;
  #L3e5d52.  v0:= new `java.lang.Object`[v1];
  #L3e5d56.  call temp:= `invoke`(v4, v5, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e5d5c.  v4:= temp @kind object;
  #L3e5d5e.  return v4 @kind object;
  #L3e5d60.  v4:= 0I;
  #L3e5d62.  return v4 @kind object;
}
