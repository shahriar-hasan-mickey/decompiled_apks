record `org.simpleframework.xml.core.GroupExtractor$Registry` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `java.lang.Iterable` @kind interface {
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.GroupExtractor$Registry.elements` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.GroupExtractor$Registry.text` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.GroupExtractor$Registry` v0 @kind this, `org.simpleframework.xml.core.LabelMap` v1 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.<init>:(Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e6064.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3e606a.  v0.`org.simpleframework.xml.core.GroupExtractor$Registry.elements` @type ^`org.simpleframework.xml.core.LabelMap` := v1 @kind object;
  #L3e606e.  return @kind void;
}
procedure `void` `registerElement`(`org.simpleframework.xml.core.GroupExtractor$Registry` v2 @kind this, `java.lang.Class` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.registerElement:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e60a8.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3e60ae.  v0:= temp @kind object;
  #L3e60b0.  v1:= v2.`org.simpleframework.xml.core.GroupExtractor$Registry.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e60b4.  call temp:= `containsKey`(v1, v0) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e60ba.  v1:= temp;
  #L3e60bc.  if v1 != 0 then goto L3e60ca;
  #L3e60c0.  v1:= v2.`org.simpleframework.xml.core.GroupExtractor$Registry.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e60c4.  call temp:= `put`(v1, v0, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e60ca.  call temp:= `containsKey`(v2, v3) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e60d0.  v0:= temp;
  #L3e60d2.  if v0 != 0 then goto L3e60dc;
  #L3e60d6.  call temp:= `put`(v2, v3, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e60dc.  return @kind void;
}
procedure `void` `registerText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v2 @kind this, `org.simpleframework.xml.core.Label` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e60f0.  call temp:= `getContact`(v3) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L3e60f6.  v0:= temp @kind object;
  #L3e60f8.  v1:= constclass @type ^`org.simpleframework.xml.Text` @kind object;
  #L3e60fc.  call temp:= `getAnnotation`(v0, v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L3e6102.  v0:= temp @kind object;
  #L3e6104.  v0:= (`org.simpleframework.xml.Text`) v0 @kind object;
  #L3e6108.  if v0 == 0 then goto L3e611a;
  #L3e610c.  v1:= new `org.simpleframework.xml.core.TextListLabel`;
  #L3e6110.  call `<init>`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/TextListLabel;.<init>:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/Text;)V` @kind direct;
  #L3e6116.  v2.`org.simpleframework.xml.core.GroupExtractor$Registry.text` @type ^`org.simpleframework.xml.core.Label` := v1 @kind object;
  #L3e611a.  return @kind void;
}
procedure `org.simpleframework.xml.core.Label` `resolveElement`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolveElement:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e5fe8.  if v2 == 0 then goto L3e6008;
  #L3e5fec.  call temp:= `get`(v1, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e5ff2.  v0:= temp @kind object;
  #L3e5ff4.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3e5ff8.  if v0 == 0 then goto L3e5ffe;
  #L3e5ffc.  return v0 @kind object;
  #L3e5ffe.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L3e6004.  v2:= temp @kind object;
  #L3e6006.  goto L3e5fe8;
  #L3e6008.  v2:= 0I;
  #L3e600a.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `resolveText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolveText:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e603c.  v0:= v2.`org.simpleframework.xml.core.GroupExtractor$Registry.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3e6040.  if v0 == 0 then goto L3e604e;
  #L3e6044.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L3e6048.  if v3 != v1 then goto L3e604e;
  #L3e604c.  return v0 @kind object;
  #L3e604e.  v3:= 0I;
  #L3e6050.  return v3 @kind object;
}
procedure `boolean` `isText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.isText:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5f7c.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor$Registry.text` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L3e5f80.  if v0 == 0 then goto L3e5f88;
  #L3e5f84.  v0:= 1I;
  #L3e5f86.  goto L3e5f8a;
  #L3e5f88.  v0:= 0I;
  #L3e5f8a.  return v0;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5f9c.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L3e5fa2.  v0:= temp @kind object;
  #L3e5fa4.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e5faa.  v0:= temp @kind object;
  #L3e5fac.  return v0 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.core.Label` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.register:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6080.  v0:= new `org.simpleframework.xml.core.CacheLabel`;
  #L3e6084.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/CacheLabel;.<init>:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e608a.  call `registerElement`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.registerElement:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e6090.  call `registerText`(v1, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e6096.  return @kind void;
}
procedure `org.simpleframework.xml.core.Label` `resolve`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolve:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5fc0.  call temp:= `resolveText`(v1, v2) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolveText:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L3e5fc6.  v0:= temp @kind object;
  #L3e5fc8.  if v0 != 0 then goto L3e5fd6;
  #L3e5fcc.  call temp:= `resolveElement`(v1, v2) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolveElement:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L3e5fd2.  v2:= temp @kind object;
  #L3e5fd4.  return v2 @kind object;
  #L3e5fd6.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `resolveText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolveText:()Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e601c.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L3e6020.  call temp:= `resolveText`(v1, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolveText:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L3e6026.  v0:= temp @kind object;
  #L3e6028.  return v0 @kind object;
}
