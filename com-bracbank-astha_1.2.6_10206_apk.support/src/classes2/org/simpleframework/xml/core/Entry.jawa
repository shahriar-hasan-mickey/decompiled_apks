record `org.simpleframework.xml.core.Entry` @kind class @AccessFlag PUBLIC {
  `boolean` `org.simpleframework.xml.core.Entry.attribute` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.Entry.contact` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.Entry.entry` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.Entry.key` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.Entry.keyType` @AccessFlag PRIVATE;
  `org.simpleframework.xml.ElementMap` `org.simpleframework.xml.core.Entry.label` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.Entry.value` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.Entry.valueType` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@org.simpleframework.xml.core.Entry.DEFAULT_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.simpleframework.xml.core.Entry` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `org.simpleframework.xml.ElementMap` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/ElementMap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e4de8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e4dee.  call temp:= `attribute`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.attribute:()Z` @kind interface;
  #L3e4df4.  v0:= temp;
  #L3e4df6.  v1.`org.simpleframework.xml.core.Entry.attribute` @type ^`boolean` := v0 @kind boolean;
  #L3e4dfa.  call temp:= `entry`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.entry:()Ljava/lang/String;` @kind interface;
  #L3e4e00.  v0:= temp @kind object;
  #L3e4e02.  v1.`org.simpleframework.xml.core.Entry.entry` @type ^`java.lang.String` := v0 @kind object;
  #L3e4e06.  call temp:= `value`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.value:()Ljava/lang/String;` @kind interface;
  #L3e4e0c.  v0:= temp @kind object;
  #L3e4e0e.  v1.`org.simpleframework.xml.core.Entry.value` @type ^`java.lang.String` := v0 @kind object;
  #L3e4e12.  call temp:= `key`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.key:()Ljava/lang/String;` @kind interface;
  #L3e4e18.  v0:= temp @kind object;
  #L3e4e1a.  v1.`org.simpleframework.xml.core.Entry.key` @type ^`java.lang.String` := v0 @kind object;
  #L3e4e1e.  v1.`org.simpleframework.xml.core.Entry.contact` @type ^`org.simpleframework.xml.core.Contact` := v2 @kind object;
  #L3e4e22.  v1.`org.simpleframework.xml.core.Entry.label` @type ^`org.simpleframework.xml.ElementMap` := v3 @kind object;
  #L3e4e26.  return @kind void;
}
procedure `java.lang.Class` `getDependent`(`org.simpleframework.xml.core.Entry` v3 @kind this, `int` v4 ) @signature `Lorg/simpleframework/xml/core/Entry;.getDependent:(I)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e4bac.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L3e4bb0.  v1:= v3.`org.simpleframework.xml.core.Entry.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3e4bb4.  call temp:= `getDependents`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.getDependents:()[Ljava/lang/Class;` @kind interface;
  #L3e4bba.  v1:= temp @kind object;
  #L3e4bbc.  v2:= length @variable v1;
  #L3e4bbe.  if v2 >= v4 then goto L3e4bc4;
  #L3e4bc2.  return v0 @kind object;
  #L3e4bc4.  v2:= length @variable v1;
  #L3e4bc6.  if v2 != 0 then goto L3e4bcc;
  #L3e4bca.  return v0 @kind object;
  #L3e4bcc.  v4:= v1[v4] @kind object;
  #L3e4bd0.  return v4 @kind object;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.Entry` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.isEmpty:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;

  #L3e4b6c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e4b72.  v1:= temp;
  #L3e4b74.  if v1 != 0 then goto L3e4b7c;
  #L3e4b78.  v1:= 1I;
  #L3e4b7a.  goto L3e4b7e;
  #L3e4b7c.  v1:= 0I;
  #L3e4b7e.  return v1;
}
procedure `org.simpleframework.xml.core.Contact` `getContact`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getContact:()Lorg/simpleframework/xml/core/Contact;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4cb8.  v0:= v1.`org.simpleframework.xml.core.Entry.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3e4cbc.  return v0 @kind object;
}
procedure `java.lang.String` `getEntry`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getEntry:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4be4.  v0:= v1.`org.simpleframework.xml.core.Entry.entry` @type ^`java.lang.String` @kind object;
  #L3e4be8.  if v0 != 0 then goto L3e4bee;
  #L3e4bec.  return v0 @kind object;
  #L3e4bee.  call temp:= `isEmpty`(v1, v0) @signature `Lorg/simpleframework/xml/core/Entry;.isEmpty:(Ljava/lang/String;)Z` @kind direct;
  #L3e4bf4.  v0:= temp;
  #L3e4bf6.  if v0 == 0 then goto L3e4c02;
  #L3e4bfa.  v0:= "entry" @kind object;
  #L3e4bfe.  v1.`org.simpleframework.xml.core.Entry.entry` @type ^`java.lang.String` := v0 @kind object;
  #L3e4c02.  v0:= v1.`org.simpleframework.xml.core.Entry.entry` @type ^`java.lang.String` @kind object;
  #L3e4c06.  return v0 @kind object;
}
procedure `java.lang.String` `getKey`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4c18.  v0:= v1.`org.simpleframework.xml.core.Entry.key` @type ^`java.lang.String` @kind object;
  #L3e4c1c.  if v0 != 0 then goto L3e4c22;
  #L3e4c20.  return v0 @kind object;
  #L3e4c22.  call temp:= `isEmpty`(v1, v0) @signature `Lorg/simpleframework/xml/core/Entry;.isEmpty:(Ljava/lang/String;)Z` @kind direct;
  #L3e4c28.  v0:= temp;
  #L3e4c2a.  if v0 == 0 then goto L3e4c34;
  #L3e4c2e.  v0:= 0I;
  #L3e4c30.  v1.`org.simpleframework.xml.core.Entry.key` @type ^`java.lang.String` := v0 @kind object;
  #L3e4c34.  v0:= v1.`org.simpleframework.xml.core.Entry.key` @type ^`java.lang.String` @kind object;
  #L3e4c38.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Converter` `getKey`(`org.simpleframework.xml.core.Entry` v2 @kind this, `org.simpleframework.xml.core.Context` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e4cd0.  call temp:= `getKeyType`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKeyType:()Lorg/simpleframework/xml/strategy/Type;` @kind virtual;
  #L3e4cd6.  v0:= temp @kind object;
  #L3e4cd8.  call temp:= `isPrimitive`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Lorg/simpleframework/xml/strategy/Type;)Z` @kind interface;
  #L3e4cde.  v1:= temp;
  #L3e4ce0.  if v1 == 0 then goto L3e4cf0;
  #L3e4ce4.  v1:= new `org.simpleframework.xml.core.PrimitiveKey`;
  #L3e4ce8.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3e4cee.  return v1 @kind object;
  #L3e4cf0.  v1:= new `org.simpleframework.xml.core.CompositeKey`;
  #L3e4cf4.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeKey;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3e4cfa.  return v1 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getKeyType`(`org.simpleframework.xml.core.Entry` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getKeyType:()Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e4d48.  v0:= v2.`org.simpleframework.xml.core.Entry.keyType` @type ^`java.lang.Class` @kind object;
  #L3e4d4c.  if v0 != 0 then goto L3e4d76;
  #L3e4d50.  v0:= v2.`org.simpleframework.xml.core.Entry.label` @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L3e4d54.  call temp:= `keyType`(v0) @signature `Lorg/simpleframework/xml/ElementMap;.keyType:()Ljava/lang/Class;` @kind interface;
  #L3e4d5a.  v0:= temp @kind object;
  #L3e4d5c.  v2.`org.simpleframework.xml.core.Entry.keyType` @type ^`java.lang.Class` := v0 @kind object;
  #L3e4d60.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L3e4d64.  if v0 != v1 then goto L3e4d76;
  #L3e4d68.  v0:= 0I;
  #L3e4d6a.  call temp:= `getDependent`(v2, v0) @signature `Lorg/simpleframework/xml/core/Entry;.getDependent:(I)Ljava/lang/Class;` @kind direct;
  #L3e4d70.  v0:= temp @kind object;
  #L3e4d72.  v2.`org.simpleframework.xml.core.Entry.keyType` @type ^`java.lang.Class` := v0 @kind object;
  #L3e4d76.  v0:= new `org.simpleframework.xml.core.ClassType`;
  #L3e4d7a.  v1:= v2.`org.simpleframework.xml.core.Entry.keyType` @type ^`java.lang.Class` @kind object;
  #L3e4d7e.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L3e4d84.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4c4c.  v0:= v1.`org.simpleframework.xml.core.Entry.value` @type ^`java.lang.String` @kind object;
  #L3e4c50.  if v0 != 0 then goto L3e4c56;
  #L3e4c54.  return v0 @kind object;
  #L3e4c56.  call temp:= `isEmpty`(v1, v0) @signature `Lorg/simpleframework/xml/core/Entry;.isEmpty:(Ljava/lang/String;)Z` @kind direct;
  #L3e4c5c.  v0:= temp;
  #L3e4c5e.  if v0 == 0 then goto L3e4c68;
  #L3e4c62.  v0:= 0I;
  #L3e4c64.  v1.`org.simpleframework.xml.core.Entry.value` @type ^`java.lang.String` := v0 @kind object;
  #L3e4c68.  v0:= v1.`org.simpleframework.xml.core.Entry.value` @type ^`java.lang.String` @kind object;
  #L3e4c6c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Converter` `getValue`(`org.simpleframework.xml.core.Entry` v2 @kind this, `org.simpleframework.xml.core.Context` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e4d0c.  call temp:= `getValueType`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getValueType:()Lorg/simpleframework/xml/strategy/Type;` @kind virtual;
  #L3e4d12.  v0:= temp @kind object;
  #L3e4d14.  call temp:= `isPrimitive`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Lorg/simpleframework/xml/strategy/Type;)Z` @kind interface;
  #L3e4d1a.  v1:= temp;
  #L3e4d1c.  if v1 == 0 then goto L3e4d2c;
  #L3e4d20.  v1:= new `org.simpleframework.xml.core.PrimitiveValue`;
  #L3e4d24.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3e4d2a.  return v1 @kind object;
  #L3e4d2c.  v1:= new `org.simpleframework.xml.core.CompositeValue`;
  #L3e4d30.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeValue;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L3e4d36.  return v1 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getValueType`(`org.simpleframework.xml.core.Entry` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getValueType:()Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e4d98.  v0:= v2.`org.simpleframework.xml.core.Entry.valueType` @type ^`java.lang.Class` @kind object;
  #L3e4d9c.  if v0 != 0 then goto L3e4dc6;
  #L3e4da0.  v0:= v2.`org.simpleframework.xml.core.Entry.label` @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L3e4da4.  call temp:= `valueType`(v0) @signature `Lorg/simpleframework/xml/ElementMap;.valueType:()Ljava/lang/Class;` @kind interface;
  #L3e4daa.  v0:= temp @kind object;
  #L3e4dac.  v2.`org.simpleframework.xml.core.Entry.valueType` @type ^`java.lang.Class` := v0 @kind object;
  #L3e4db0.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L3e4db4.  if v0 != v1 then goto L3e4dc6;
  #L3e4db8.  v0:= 1I;
  #L3e4dba.  call temp:= `getDependent`(v2, v0) @signature `Lorg/simpleframework/xml/core/Entry;.getDependent:(I)Ljava/lang/Class;` @kind direct;
  #L3e4dc0.  v0:= temp @kind object;
  #L3e4dc2.  v2.`org.simpleframework.xml.core.Entry.valueType` @type ^`java.lang.Class` := v0 @kind object;
  #L3e4dc6.  v0:= new `org.simpleframework.xml.core.ClassType`;
  #L3e4dca.  v1:= v2.`org.simpleframework.xml.core.Entry.valueType` @type ^`java.lang.Class` @kind object;
  #L3e4dce.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L3e4dd4.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4b54.  v0:= v1.`org.simpleframework.xml.core.Entry.attribute` @type ^`boolean` @kind boolean;
  #L3e4b58.  return v0;
}
procedure `boolean` `isInline`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.isInline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4b90.  call temp:= `isAttribute`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L3e4b96.  v0:= temp;
  #L3e4b98.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.Entry` v3 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e4c80.  v0:= 2I;
  #L3e4c82.  v0:= new `java.lang.Object`[v0];
  #L3e4c86.  v1:= v3.`org.simpleframework.xml.core.Entry.label` @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L3e4c8a.  v2:= 0I;
  #L3e4c8c.  v0[v2]:= v1 @kind object;
  #L3e4c90.  v1:= v3.`org.simpleframework.xml.core.Entry.contact` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L3e4c94.  v2:= 1I;
  #L3e4c96.  v0[v2]:= v1 @kind object;
  #L3e4c9a.  v1:= "%s on %s" @kind object;
  #L3e4c9e.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e4ca4.  v0:= temp @kind object;
  #L3e4ca6.  return v0 @kind object;
}
