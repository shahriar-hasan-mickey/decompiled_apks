record `org.simpleframework.xml.core.MethodPartFactory` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.AnnotationFactory` `org.simpleframework.xml.core.MethodPartFactory.factory` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e8448.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e844e.  v0:= new `org.simpleframework.xml.core.AnnotationFactory`;
  #L3e8452.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3e8458.  v1.`org.simpleframework.xml.core.MethodPartFactory.factory` @type ^`org.simpleframework.xml.core.AnnotationFactory` := v0 @kind object;
  #L3e845c.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getAnnotation:(Ljava/lang/reflect/Method;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e81f0.  call temp:= `getDependents`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getDependents:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;` @kind direct;
  #L3e81f6.  v0:= temp @kind object;
  #L3e81f8.  call temp:= `getType`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getType:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @kind virtual;
  #L3e81fe.  v3:= temp @kind object;
  #L3e8200.  if v3 == 0 then goto L3e8212;
  #L3e8204.  v1:= v2.`org.simpleframework.xml.core.MethodPartFactory.factory` @type ^`org.simpleframework.xml.core.AnnotationFactory` @kind object;
  #L3e8208.  call temp:= `getInstance`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3e820e.  v3:= temp @kind object;
  #L3e8210.  return v3 @kind object;
  #L3e8212.  v3:= 0I;
  #L3e8214.  return v3 @kind object;
}
procedure `java.lang.Class`[] `getDependents`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getDependents:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e8164.  call temp:= `getMethodType`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getMethodType:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/MethodType;` @kind direct;
  #L3e816a.  v0:= temp @kind object;
  #L3e816c.  v1:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8170.  if v0 != v1 then goto L3e8180;
  #L3e8174.  v0:= 0I;
  #L3e8176.  call temp:= `getParameterDependents`(v3, v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getParameterDependents:(Ljava/lang/reflect/Method;I)[Ljava/lang/Class;` @kind static;
  #L3e817c.  v3:= temp @kind object;
  #L3e817e.  return v3 @kind object;
  #L3e8180.  v1:= `@@org.simpleframework.xml.core.MethodType.GET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8184.  if v0 != v1 then goto L3e8192;
  #L3e8188.  call temp:= `getReturnDependents`(v3) @signature `Lorg/simpleframework/xml/core/Reflector;.getReturnDependents:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;` @kind static;
  #L3e818e.  v3:= temp @kind object;
  #L3e8190.  return v3 @kind object;
  #L3e8192.  v1:= `@@org.simpleframework.xml.core.MethodType.IS` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8196.  if v0 != v1 then goto L3e81a4;
  #L3e819a.  call temp:= `getReturnDependents`(v3) @signature `Lorg/simpleframework/xml/core/Reflector;.getReturnDependents:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;` @kind static;
  #L3e81a0.  v3:= temp @kind object;
  #L3e81a2.  return v3 @kind object;
  #L3e81a4.  v3:= 0I;
  #L3e81a6.  return v3 @kind object;
}
procedure `org.simpleframework.xml.core.MethodType` `getMethodType`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getMethodType:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/MethodType;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e83e8.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e83ee.  v2:= temp @kind object;
  #L3e83f0.  v0:= "get" @kind object;
  #L3e83f4.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3e83fa.  v0:= temp;
  #L3e83fc.  if v0 == 0 then goto L3e8406;
  #L3e8400.  v2:= `@@org.simpleframework.xml.core.MethodType.GET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8404.  return v2 @kind object;
  #L3e8406.  v0:= "is" @kind object;
  #L3e840a.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3e8410.  v0:= temp;
  #L3e8412.  if v0 == 0 then goto L3e841c;
  #L3e8416.  v2:= `@@org.simpleframework.xml.core.MethodType.IS` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e841a.  return v2 @kind object;
  #L3e841c.  v0:= "set" @kind object;
  #L3e8420.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3e8426.  v2:= temp;
  #L3e8428.  if v2 == 0 then goto L3e8432;
  #L3e842c.  v2:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8430.  return v2 @kind object;
  #L3e8432.  v2:= `@@org.simpleframework.xml.core.MethodType.NONE` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8436.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.MethodName` `getName`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getName:(Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodName;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e8228.  call temp:= `getMethodType`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getMethodType:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/MethodType;` @kind direct;
  #L3e822e.  v0:= temp @kind object;
  #L3e8230.  v1:= `@@org.simpleframework.xml.core.MethodType.GET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8234.  if v0 != v1 then goto L3e8242;
  #L3e8238.  call temp:= `getRead`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getRead:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @kind direct;
  #L3e823e.  v3:= temp @kind object;
  #L3e8240.  return v3 @kind object;
  #L3e8242.  v1:= `@@org.simpleframework.xml.core.MethodType.IS` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8246.  if v0 != v1 then goto L3e8254;
  #L3e824a.  call temp:= `getRead`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getRead:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @kind direct;
  #L3e8250.  v3:= temp @kind object;
  #L3e8252.  return v3 @kind object;
  #L3e8254.  v1:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8258.  if v0 != v1 then goto L3e8266;
  #L3e825c.  call temp:= `getWrite`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getWrite:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @kind direct;
  #L3e8262.  v3:= temp @kind object;
  #L3e8264.  return v3 @kind object;
  #L3e8266.  v3:= new `org.simpleframework.xml.core.MethodException`;
  #L3e826a.  v0:= 1I;
  #L3e826c.  v0:= new `java.lang.Object`[v0];
  #L3e8270.  v1:= 0I;
  #L3e8272.  v0[v1]:= v4 @kind object;
  #L3e8276.  v4:= "Annotation %s must mark a set or get method" @kind object;
  #L3e827a.  call `<init>`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e8280.  throw v3;
}
procedure `java.lang.Class` `getParameterType`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getParameterType:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e80b0.  call temp:= `getParameterTypes`(v3) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3e80b6.  v0:= temp @kind object;
  #L3e80b8.  v0:= length @variable v0;
  #L3e80ba.  v1:= 1I;
  #L3e80bc.  if v0 != v1 then goto L3e80d0;
  #L3e80c0.  call temp:= `getParameterTypes`(v3) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3e80c6.  v3:= temp @kind object;
  #L3e80c8.  v0:= 0I;
  #L3e80ca.  v3:= v3[v0] @kind object;
  #L3e80ce.  return v3 @kind object;
  #L3e80d0.  v3:= 0I;
  #L3e80d2.  return v3 @kind object;
}
procedure `org.simpleframework.xml.core.MethodName` `getRead`(`org.simpleframework.xml.core.MethodPartFactory` v4 @kind this, `java.lang.reflect.Method` v5 @kind object, `org.simpleframework.xml.core.MethodType` v6 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getRead:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8294.  call temp:= `getParameterTypes`(v5) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3e829a.  v0:= temp @kind object;
  #L3e829c.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e82a2.  v1:= temp @kind object;
  #L3e82a4.  v0:= length @variable v0;
  #L3e82a6.  v2:= 0I;
  #L3e82a8.  v3:= 1I;
  #L3e82aa.  if v0 != 0 then goto L3e82de;
  #L3e82ae.  call temp:= `getTypeName`(v4, v1, v6) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getTypeName:(Ljava/lang/String;Lorg/simpleframework/xml/core/MethodType;)Ljava/lang/String;` @kind direct;
  #L3e82b4.  v0:= temp @kind object;
  #L3e82b6.  if v0 == 0 then goto L3e82c6;
  #L3e82ba.  v1:= new `org.simpleframework.xml.core.MethodName`;
  #L3e82be.  call `<init>`(v1, v5, v6, v0) @signature `Lorg/simpleframework/xml/core/MethodName;.<init>:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;Ljava/lang/String;)V` @kind direct;
  #L3e82c4.  return v1 @kind object;
  #L3e82c6.  v6:= new `org.simpleframework.xml.core.MethodException`;
  #L3e82ca.  v0:= new `java.lang.Object`[v3];
  #L3e82ce.  v0[v2]:= v5 @kind object;
  #L3e82d2.  v5:= "Could not get name for %s" @kind object;
  #L3e82d6.  call `<init>`(v6, v5, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e82dc.  throw v6;
  #L3e82de.  v6:= new `org.simpleframework.xml.core.MethodException`;
  #L3e82e2.  v0:= new `java.lang.Object`[v3];
  #L3e82e6.  v0[v2]:= v5 @kind object;
  #L3e82ea.  v5:= "Get method %s is not a valid property" @kind object;
  #L3e82ee.  call `<init>`(v6, v5, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e82f4.  throw v6;
}
procedure `java.lang.Class` `getReturnType`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getReturnType:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e80e4.  call temp:= `getParameterTypes`(v2) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3e80ea.  v0:= temp @kind object;
  #L3e80ec.  v0:= length @variable v0;
  #L3e80ee.  if v0 != 0 then goto L3e80fc;
  #L3e80f2.  call temp:= `getReturnType`(v2) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L3e80f8.  v2:= temp @kind object;
  #L3e80fa.  return v2 @kind object;
  #L3e80fc.  v2:= 0I;
  #L3e80fe.  return v2 @kind object;
}
procedure `java.lang.String` `getTypeName`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `java.lang.String` v2 @kind object, `org.simpleframework.xml.core.MethodType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getTypeName:(Ljava/lang/String;Lorg/simpleframework/xml/core/MethodType;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e81b8.  call temp:= `getPrefix`(v3) @signature `Lorg/simpleframework/xml/core/MethodType;.getPrefix:()I` @kind virtual;
  #L3e81be.  v3:= temp;
  #L3e81c0.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e81c6.  v0:= temp;
  #L3e81c8.  if v0 <= v3 then goto L3e81d4;
  #L3e81cc.  call temp:= `substring`(v2, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3e81d2.  v2:= temp @kind object;
  #L3e81d4.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3e81da.  v2:= temp @kind object;
  #L3e81dc.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.MethodName` `getWrite`(`org.simpleframework.xml.core.MethodPartFactory` v4 @kind this, `java.lang.reflect.Method` v5 @kind object, `org.simpleframework.xml.core.MethodType` v6 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getWrite:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8308.  call temp:= `getParameterTypes`(v5) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3e830e.  v0:= temp @kind object;
  #L3e8310.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e8316.  v1:= temp @kind object;
  #L3e8318.  v0:= length @variable v0;
  #L3e831a.  v2:= 0I;
  #L3e831c.  v3:= 1I;
  #L3e831e.  if v0 != v3 then goto L3e8352;
  #L3e8322.  call temp:= `getTypeName`(v4, v1, v6) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getTypeName:(Ljava/lang/String;Lorg/simpleframework/xml/core/MethodType;)Ljava/lang/String;` @kind direct;
  #L3e8328.  v0:= temp @kind object;
  #L3e832a.  if v0 == 0 then goto L3e833a;
  #L3e832e.  v1:= new `org.simpleframework.xml.core.MethodName`;
  #L3e8332.  call `<init>`(v1, v5, v6, v0) @signature `Lorg/simpleframework/xml/core/MethodName;.<init>:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;Ljava/lang/String;)V` @kind direct;
  #L3e8338.  return v1 @kind object;
  #L3e833a.  v6:= new `org.simpleframework.xml.core.MethodException`;
  #L3e833e.  v0:= new `java.lang.Object`[v3];
  #L3e8342.  v0[v2]:= v5 @kind object;
  #L3e8346.  v5:= "Could not get name for %s" @kind object;
  #L3e834a.  call `<init>`(v6, v5, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e8350.  throw v6;
  #L3e8352.  v6:= new `org.simpleframework.xml.core.MethodException`;
  #L3e8356.  v0:= new `java.lang.Object`[v3];
  #L3e835a.  v0[v2]:= v5 @kind object;
  #L3e835e.  v5:= "Set method %s is not a valid property" @kind object;
  #L3e8362.  call `<init>`(v6, v5, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e8368.  throw v6;
}
procedure `org.simpleframework.xml.core.MethodPart` `getInstance`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object, `java.lang.annotation.Annotation`[] v5 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getInstance:(Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodPart;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e837c.  call temp:= `getName`(v2, v3, v4) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getName:(Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodName;` @kind direct;
  #L3e8382.  v3:= temp @kind object;
  #L3e8384.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/core/MethodName;.getType:()Lorg/simpleframework/xml/core/MethodType;` @kind virtual;
  #L3e838a.  v0:= temp @kind object;
  #L3e838c.  v1:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8390.  if v0 != v1 then goto L3e83a0;
  #L3e8394.  v0:= new `org.simpleframework.xml.core.SetPart`;
  #L3e8398.  call `<init>`(v0, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/SetPart;.<init>:(Lorg/simpleframework/xml/core/MethodName;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e839e.  return v0 @kind object;
  #L3e83a0.  v0:= new `org.simpleframework.xml.core.GetPart`;
  #L3e83a4.  call `<init>`(v0, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/GetPart;.<init>:(Lorg/simpleframework/xml/core/MethodName;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L3e83aa.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.MethodPart` `getInstance`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `java.lang.reflect.Method` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getInstance:(Ljava/lang/reflect/Method;[Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodPart;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e83bc.  call temp:= `getAnnotation`(v1, v2) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getAnnotation:(Ljava/lang/reflect/Method;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L3e83c2.  v0:= temp @kind object;
  #L3e83c4.  if v0 == 0 then goto L3e83d2;
  #L3e83c8.  call temp:= `getInstance`(v1, v2, v0, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getInstance:(Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodPart;` @kind virtual;
  #L3e83ce.  v2:= temp @kind object;
  #L3e83d0.  return v2 @kind object;
  #L3e83d2.  v2:= 0I;
  #L3e83d4.  return v2 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getType:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8110.  call temp:= `getMethodType`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getMethodType:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/MethodType;` @kind direct;
  #L3e8116.  v0:= temp @kind object;
  #L3e8118.  v1:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e811c.  if v0 != v1 then goto L3e812a;
  #L3e8120.  call temp:= `getParameterType`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getParameterType:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @kind direct;
  #L3e8126.  v3:= temp @kind object;
  #L3e8128.  return v3 @kind object;
  #L3e812a.  v1:= `@@org.simpleframework.xml.core.MethodType.GET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e812e.  if v0 != v1 then goto L3e813c;
  #L3e8132.  call temp:= `getReturnType`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getReturnType:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @kind direct;
  #L3e8138.  v3:= temp @kind object;
  #L3e813a.  return v3 @kind object;
  #L3e813c.  v1:= `@@org.simpleframework.xml.core.MethodType.IS` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L3e8140.  if v0 != v1 then goto L3e814e;
  #L3e8144.  call temp:= `getReturnType`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getReturnType:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @kind direct;
  #L3e814a.  v3:= temp @kind object;
  #L3e814c.  return v3 @kind object;
  #L3e814e.  v3:= 0I;
  #L3e8150.  return v3 @kind object;
}
