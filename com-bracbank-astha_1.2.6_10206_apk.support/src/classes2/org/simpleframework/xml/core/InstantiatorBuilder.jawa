record `org.simpleframework.xml.core.InstantiatorBuilder` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.InstantiatorBuilder.attributes` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Comparer` `org.simpleframework.xml.core.InstantiatorBuilder.comparer` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Detail` `org.simpleframework.xml.core.InstantiatorBuilder.detail` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.InstantiatorBuilder.elements` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Instantiator` `org.simpleframework.xml.core.InstantiatorBuilder.factory` @AccessFlag PRIVATE;
  `java.util.List` `org.simpleframework.xml.core.InstantiatorBuilder.options` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Scanner` `org.simpleframework.xml.core.InstantiatorBuilder.scanner` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.InstantiatorBuilder.texts` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Scanner` v2 @kind object, `org.simpleframework.xml.core.Detail` v3 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e67bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e67c2.  v0:= new `java.util.ArrayList`;
  #L3e67c6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e67cc.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.options` @type ^`java.util.List` := v0 @kind object;
  #L3e67d0.  v0:= new `org.simpleframework.xml.core.Comparer`;
  #L3e67d4.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/Comparer;.<init>:()V` @kind direct;
  #L3e67da.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.comparer` @type ^`org.simpleframework.xml.core.Comparer` := v0 @kind object;
  #L3e67de.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L3e67e2.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @kind direct;
  #L3e67e8.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.attributes` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L3e67ec.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L3e67f0.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @kind direct;
  #L3e67f6.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L3e67fa.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L3e67fe.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @kind direct;
  #L3e6804.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.texts` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L3e6808.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.scanner` @type ^`org.simpleframework.xml.core.Scanner` := v2 @kind object;
  #L3e680c.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.detail` @type ^`org.simpleframework.xml.core.Detail` := v3 @kind object;
  #L3e6810.  return @kind void;
}
procedure `org.simpleframework.xml.core.Instantiator` `build`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.build:(Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/Instantiator;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e6684.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L3e6688.  if v0 != 0 then goto L3e6698;
  #L3e668c.  call temp:= `create`(v1, v2) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.create:(Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/Instantiator;` @kind direct;
  #L3e6692.  v2:= temp @kind object;
  #L3e6694.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` := v2 @kind object;
  #L3e6698.  v2:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L3e669c.  return v2 @kind object;
}
procedure `boolean` `contains`(`org.simpleframework.xml.core.InstantiatorBuilder` v5 @kind this, `java.lang.String`[] v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.contains:([Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e65e0.  v0:= length @variable v6;
  #L3e65e2.  v1:= 0I;
  #L3e65e4.  v2:= 0I;
  #L3e65e6.  if v2 >= v0 then goto L3e660a;
  #L3e65ea.  v3:= v6[v2] @kind object;
  #L3e65ee.  v4:= 1I;
  #L3e65f0.  if v3 != v7 then goto L3e65f6;
  #L3e65f4.  return v4;
  #L3e65f6.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e65fc.  v3:= temp;
  #L3e65fe.  if v3 == 0 then goto L3e6604;
  #L3e6602.  return v4;
  #L3e6604.  v2:= v2 + 1;
  #L3e6608.  goto L3e65e6;
  #L3e660a.  return v1;
}
procedure `org.simpleframework.xml.core.Creator` `create`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Signature` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.create:(Lorg/simpleframework/xml/core/Signature;)Lorg/simpleframework/xml/core/Creator;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e661c.  v0:= new `org.simpleframework.xml.core.SignatureCreator`;
  #L3e6620.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/SignatureCreator;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L3e6626.  if v2 == 0 then goto L3e6634;
  #L3e662a.  v2:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.options` @type ^`java.util.List` @kind object;
  #L3e662e.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e6634.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Instantiator` `create`(`org.simpleframework.xml.core.InstantiatorBuilder` v4 @kind this, `org.simpleframework.xml.core.Detail` v5 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.create:(Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/Instantiator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e66b0.  v0:= v4.`org.simpleframework.xml.core.InstantiatorBuilder.scanner` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L3e66b4.  call temp:= `getSignature`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @kind interface;
  #L3e66ba.  v0:= temp @kind object;
  #L3e66bc.  v1:= v4.`org.simpleframework.xml.core.InstantiatorBuilder.scanner` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L3e66c0.  call temp:= `getParameters`(v1) @signature `Lorg/simpleframework/xml/core/Scanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @kind interface;
  #L3e66c6.  v1:= temp @kind object;
  #L3e66c8.  if v0 == 0 then goto L3e66d8;
  #L3e66cc.  v2:= new `org.simpleframework.xml.core.SignatureCreator`;
  #L3e66d0.  call `<init>`(v2, v0) @signature `Lorg/simpleframework/xml/core/SignatureCreator;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L3e66d6.  goto L3e66da;
  #L3e66d8.  v2:= 0I;
  #L3e66da.  v0:= new `org.simpleframework.xml.core.ClassInstantiator`;
  #L3e66de.  v3:= v4.`org.simpleframework.xml.core.InstantiatorBuilder.options` @type ^`java.util.List` @kind object;
  #L3e66e2.  call `<init>`(v0, v3, v2, v1, v5) @signature `Lorg/simpleframework/xml/core/ClassInstantiator;.<init>:(Ljava/util/List;Lorg/simpleframework/xml/core/Creator;Lorg/simpleframework/xml/core/ParameterMap;Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3e66e8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Parameter` `create`(`org.simpleframework.xml.core.InstantiatorBuilder` v2 @kind this, `org.simpleframework.xml.core.Parameter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.create:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Parameter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e6790.  call temp:= `resolve`(v2, v3) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.resolve:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L3e6796.  v0:= temp @kind object;
  #L3e6798.  if v0 == 0 then goto L3e67a8;
  #L3e679c.  v1:= new `org.simpleframework.xml.core.CacheParameter`;
  #L3e67a0.  call `<init>`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/CacheParameter;.<init>:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L3e67a6.  return v1 @kind object;
  #L3e67a8.  v3:= 0I;
  #L3e67aa.  return v3 @kind object;
}
procedure `void` `populate`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.populate:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e6824.  v2:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.scanner` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L3e6828.  call temp:= `getSignatures`(v2) @signature `Lorg/simpleframework/xml/core/Scanner;.getSignatures:()Ljava/util/List;` @kind interface;
  #L3e682e.  v2:= temp @kind object;
  #L3e6830.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e6836.  v2:= temp @kind object;
  #L3e6838.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e683e.  v0:= temp;
  #L3e6840.  if v0 == 0 then goto L3e6858;
  #L3e6844.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e684a.  v0:= temp @kind object;
  #L3e684c.  v0:= (`org.simpleframework.xml.core.Signature`) v0 @kind object;
  #L3e6850.  call `populate`(v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.populate:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L3e6856.  goto L3e6838;
  #L3e6858.  return @kind void;
}
procedure `void` `populate`(`org.simpleframework.xml.core.InstantiatorBuilder` v2 @kind this, `org.simpleframework.xml.core.Signature` v3 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.populate:(Lorg/simpleframework/xml/core/Signature;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e686c.  v0:= new `org.simpleframework.xml.core.Signature`;
  #L3e6870.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L3e6876.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/core/Signature;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e687c.  v3:= temp @kind object;
  #L3e687e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e6884.  v1:= temp;
  #L3e6886.  if v1 == 0 then goto L3e68aa;
  #L3e688a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e6890.  v1:= temp @kind object;
  #L3e6892.  v1:= (`org.simpleframework.xml.core.Parameter`) v1 @kind object;
  #L3e6896.  call temp:= `create`(v2, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.create:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Parameter;` @kind direct;
  #L3e689c.  v1:= temp @kind object;
  #L3e689e.  if v1 == 0 then goto L3e687e;
  #L3e68a2.  call `add`(v0, v1) @signature `Lorg/simpleframework/xml/core/Signature;.add:(Lorg/simpleframework/xml/core/Parameter;)V` @kind virtual;
  #L3e68a8.  goto L3e687e;
  #L3e68aa.  call temp:= `create`(v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.create:(Lorg/simpleframework/xml/core/Signature;)Lorg/simpleframework/xml/core/Creator;` @kind direct;
  #L3e68b0.  return @kind void;
}
procedure `void` `register`(`org.simpleframework.xml.core.InstantiatorBuilder` v3 @kind this, `org.simpleframework.xml.core.Label` v4 @kind object, `org.simpleframework.xml.core.LabelMap` v5 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e6910.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3e6916.  v0:= temp @kind object;
  #L3e6918.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L3e691e.  v1:= temp @kind object;
  #L3e6920.  call temp:= `containsKey`(v5, v0) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e6926.  v2:= temp;
  #L3e6928.  if v2 == 0 then goto L3e6954;
  #L3e692c.  call temp:= `get`(v5, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e6932.  v2:= temp @kind object;
  #L3e6934.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L3e6938.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L3e693e.  v2:= temp @kind object;
  #L3e6940.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e6946.  v2:= temp;
  #L3e6948.  if v2 != 0 then goto L3e695a;
  #L3e694c.  call temp:= `remove`(v5, v0) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e6952.  goto L3e695a;
  #L3e6954.  call temp:= `put`(v5, v0, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e695a.  call temp:= `put`(v5, v1, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e6960.  return @kind void;
}
procedure `org.simpleframework.xml.core.Label` `resolve`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Parameter` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.resolve:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e66fc.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/Parameter;.isAttribute:()Z` @kind interface;
  #L3e6702.  v0:= temp;
  #L3e6704.  if v0 == 0 then goto L3e6716;
  #L3e6708.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e670c.  call temp:= `resolve`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.resolve:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/LabelMap;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L3e6712.  v2:= temp @kind object;
  #L3e6714.  return v2 @kind object;
  #L3e6716.  call temp:= `isText`(v2) @signature `Lorg/simpleframework/xml/core/Parameter;.isText:()Z` @kind interface;
  #L3e671c.  v0:= temp;
  #L3e671e.  if v0 == 0 then goto L3e6730;
  #L3e6722.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.texts` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e6726.  call temp:= `resolve`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.resolve:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/LabelMap;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L3e672c.  v2:= temp @kind object;
  #L3e672e.  return v2 @kind object;
  #L3e6730.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e6734.  call temp:= `resolve`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.resolve:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/LabelMap;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L3e673a.  v2:= temp @kind object;
  #L3e673c.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `resolve`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Parameter` v2 @kind object, `org.simpleframework.xml.core.LabelMap` v3 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.resolve:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/LabelMap;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e6750.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Parameter;.getName:()Ljava/lang/String;` @kind interface;
  #L3e6756.  v0:= temp @kind object;
  #L3e6758.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L3e675e.  v2:= temp @kind object;
  #L3e6760.  call temp:= `get`(v3, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e6766.  v2:= temp @kind object;
  #L3e6768.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L3e676c.  if v2 != 0 then goto L3e677c;
  #L3e6770.  call temp:= `get`(v3, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e6776.  v2:= temp @kind object;
  #L3e6778.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L3e677c.  return v2 @kind object;
}
procedure `void` `validate`(`org.simpleframework.xml.core.InstantiatorBuilder` v4 @kind this, `org.simpleframework.xml.core.Detail` v5 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validate:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6974.  v0:= v4.`org.simpleframework.xml.core.InstantiatorBuilder.scanner` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L3e6978.  call temp:= `getParameters`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @kind interface;
  #L3e697e.  v0:= temp @kind object;
  #L3e6980.  call temp:= `getAll`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.getAll:()Ljava/util/List;` @kind virtual;
  #L3e6986.  v0:= temp @kind object;
  #L3e6988.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e698e.  v0:= temp @kind object;
  #L3e6990.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e6996.  v1:= temp;
  #L3e6998.  if v1 == 0 then goto L3e69e6;
  #L3e699c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e69a2.  v1:= temp @kind object;
  #L3e69a4.  v1:= (`org.simpleframework.xml.core.Parameter`) v1 @kind object;
  #L3e69a8.  call temp:= `resolve`(v4, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.resolve:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L3e69ae.  v2:= temp @kind object;
  #L3e69b0.  call temp:= `getPath`(v1) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L3e69b6.  v3:= temp @kind object;
  #L3e69b8.  if v2 == 0 then goto L3e69c4;
  #L3e69bc.  call `validateParameter`(v4, v2, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateParameter:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L3e69c2.  goto L3e6990;
  #L3e69c4.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L3e69c8.  v1:= 2I;
  #L3e69ca.  v1:= new `java.lang.Object`[v1];
  #L3e69ce.  v2:= 0I;
  #L3e69d0.  v1[v2]:= v3 @kind object;
  #L3e69d4.  v2:= 1I;
  #L3e69d6.  v1[v2]:= v5 @kind object;
  #L3e69da.  v5:= "Parameter '%s' does not have a match in %s" @kind object;
  #L3e69de.  call `<init>`(v0, v5, v1) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e69e4.  throw v0;
  #L3e69e6.  call `validateConstructors`(v4) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructors:()V` @kind direct;
  #L3e69ec.  return @kind void;
}
procedure `void` `validateAnnotations`(`org.simpleframework.xml.core.InstantiatorBuilder` v5 @kind this, `org.simpleframework.xml.core.Label` v6 @kind object, `org.simpleframework.xml.core.Parameter` v7 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateAnnotations:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e6a00.  call temp:= `getAnnotation`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L3e6a06.  v6:= temp @kind object;
  #L3e6a08.  call temp:= `getAnnotation`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L3e6a0e.  v0:= temp @kind object;
  #L3e6a10.  call temp:= `getName`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getName:()Ljava/lang/String;` @kind interface;
  #L3e6a16.  v1:= temp @kind object;
  #L3e6a18.  v2:= v5.`org.simpleframework.xml.core.InstantiatorBuilder.comparer` @type ^`org.simpleframework.xml.core.Comparer` @kind object;
  #L3e6a1c.  call temp:= `equals`(v2, v6, v0) @signature `Lorg/simpleframework/xml/core/Comparer;.equals:(Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Z` @kind virtual;
  #L3e6a22.  v2:= temp;
  #L3e6a24.  if v2 != 0 then goto L3e6a74;
  #L3e6a28.  call temp:= `annotationType`(v6) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L3e6a2e.  v6:= temp @kind object;
  #L3e6a30.  call temp:= `annotationType`(v0) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L3e6a36.  v0:= temp @kind object;
  #L3e6a38.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e6a3e.  v2:= temp;
  #L3e6a40.  if v2 == 0 then goto L3e6a46;
  #L3e6a44.  goto L3e6a74;
  #L3e6a46.  v2:= new `org.simpleframework.xml.core.ConstructorException`;
  #L3e6a4a.  v3:= 4I;
  #L3e6a4c.  v3:= new `java.lang.Object`[v3];
  #L3e6a50.  v4:= 0I;
  #L3e6a52.  v3[v4]:= v0 @kind object;
  #L3e6a56.  v0:= 1I;
  #L3e6a58.  v3[v0]:= v6 @kind object;
  #L3e6a5c.  v6:= 2I;
  #L3e6a5e.  v3[v6]:= v1 @kind object;
  #L3e6a62.  v6:= 3I;
  #L3e6a64.  v3[v6]:= v7 @kind object;
  #L3e6a68.  v6:= "Annotation %s does not match %s for '%s' in %s" @kind object;
  #L3e6a6c.  call `<init>`(v2, v6, v3) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e6a72.  throw v2;
  #L3e6a74.  return @kind void;
}
procedure `void` `validateConstructor`(`org.simpleframework.xml.core.InstantiatorBuilder` v3 @kind this, `org.simpleframework.xml.core.Label` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructor:(Lorg/simpleframework/xml/core/Label;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e6a88.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e6a8e.  v5:= temp @kind object;
  #L3e6a90.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e6a96.  v0:= temp;
  #L3e6a98.  if v0 == 0 then goto L3e6ae0;
  #L3e6a9c.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e6aa2.  v0:= temp @kind object;
  #L3e6aa4.  v0:= (`org.simpleframework.xml.core.Creator`) v0 @kind object;
  #L3e6aa8.  call temp:= `getSignature`(v0) @signature `Lorg/simpleframework/xml/core/Creator;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @kind interface;
  #L3e6aae.  v0:= temp @kind object;
  #L3e6ab0.  call temp:= `getContact`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L3e6ab6.  v1:= temp @kind object;
  #L3e6ab8.  call temp:= `getKey`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3e6abe.  v2:= temp @kind object;
  #L3e6ac0.  call temp:= `isReadOnly`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.isReadOnly:()Z` @kind interface;
  #L3e6ac6.  v1:= temp;
  #L3e6ac8.  if v1 == 0 then goto L3e6a90;
  #L3e6acc.  call temp:= `get`(v0, v2) @signature `Lorg/simpleframework/xml/core/Signature;.get:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Parameter;` @kind virtual;
  #L3e6ad2.  v0:= temp @kind object;
  #L3e6ad4.  if v0 != 0 then goto L3e6a90;
  #L3e6ad8.  call `remove`(v5) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L3e6ade.  goto L3e6a90;
  #L3e6ae0.  return @kind void;
}
procedure `void` `validateConstructors`(`org.simpleframework.xml.core.InstantiatorBuilder` v2 @kind this) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructors:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e6af4.  v0:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L3e6af8.  call temp:= `getCreators`(v0) @signature `Lorg/simpleframework/xml/core/Instantiator;.getCreators:()Ljava/util/List;` @kind interface;
  #L3e6afe.  v0:= temp @kind object;
  #L3e6b00.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L3e6b04.  call temp:= `isDefault`(v1) @signature `Lorg/simpleframework/xml/core/Instantiator;.isDefault:()Z` @kind interface;
  #L3e6b0a.  v1:= temp;
  #L3e6b0c.  if v1 == 0 then goto L3e6b24;
  #L3e6b10.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e6b14.  call `validateConstructors`(v2, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructors:(Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e6b1a.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e6b1e.  call `validateConstructors`(v2, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructors:(Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e6b24.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e6b2a.  v1:= temp;
  #L3e6b2c.  if v1 != 0 then goto L3e6b44;
  #L3e6b30.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e6b34.  call `validateConstructors`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructors:(Lorg/simpleframework/xml/core/LabelMap;Ljava/util/List;)V` @kind direct;
  #L3e6b3a.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e6b3e.  call `validateConstructors`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructors:(Lorg/simpleframework/xml/core/LabelMap;Ljava/util/List;)V` @kind direct;
  #L3e6b44.  return @kind void;
}
procedure `void` `validateConstructors`(`org.simpleframework.xml.core.InstantiatorBuilder` v3 @kind this, `org.simpleframework.xml.core.LabelMap` v4 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructors:(Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e6b58.  call temp:= `iterator`(v4) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e6b5e.  v4:= temp @kind object;
  #L3e6b60.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e6b66.  v0:= temp;
  #L3e6b68.  if v0 == 0 then goto L3e6bb8;
  #L3e6b6c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e6b72.  v0:= temp @kind object;
  #L3e6b74.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3e6b78.  if v0 == 0 then goto L3e6b60;
  #L3e6b7c.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L3e6b82.  v1:= temp @kind object;
  #L3e6b84.  call temp:= `isReadOnly`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.isReadOnly:()Z` @kind interface;
  #L3e6b8a.  v1:= temp;
  #L3e6b8c.  if v1 != 0 then goto L3e6b92;
  #L3e6b90.  goto L3e6b60;
  #L3e6b92.  v4:= new `org.simpleframework.xml.core.ConstructorException`;
  #L3e6b96.  v1:= 2I;
  #L3e6b98.  v1:= new `java.lang.Object`[v1];
  #L3e6b9c.  v2:= 0I;
  #L3e6b9e.  v1[v2]:= v0 @kind object;
  #L3e6ba2.  v0:= v3.`org.simpleframework.xml.core.InstantiatorBuilder.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3e6ba6.  v2:= 1I;
  #L3e6ba8.  v1[v2]:= v0 @kind object;
  #L3e6bac.  v0:= "Default constructor can not accept read only %s in %s" @kind object;
  #L3e6bb0.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e6bb6.  throw v4;
  #L3e6bb8.  return @kind void;
}
procedure `void` `validateConstructors`(`org.simpleframework.xml.core.InstantiatorBuilder` v2 @kind this, `org.simpleframework.xml.core.LabelMap` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructors:(Lorg/simpleframework/xml/core/LabelMap;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e6bcc.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e6bd2.  v3:= temp @kind object;
  #L3e6bd4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e6bda.  v0:= temp;
  #L3e6bdc.  if v0 == 0 then goto L3e6bf8;
  #L3e6be0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e6be6.  v0:= temp @kind object;
  #L3e6be8.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L3e6bec.  if v0 == 0 then goto L3e6bd4;
  #L3e6bf0.  call `validateConstructor`(v2, v0, v4) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateConstructor:(Lorg/simpleframework/xml/core/Label;Ljava/util/List;)V` @kind direct;
  #L3e6bf6.  goto L3e6bd4;
  #L3e6bf8.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e6bfe.  v3:= temp;
  #L3e6c00.  if v3 != 0 then goto L3e6c06;
  #L3e6c04.  return @kind void;
  #L3e6c06.  v3:= new `org.simpleframework.xml.core.ConstructorException`;
  #L3e6c0a.  v4:= 1I;
  #L3e6c0c.  v4:= new `java.lang.Object`[v4];
  #L3e6c10.  v0:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3e6c14.  v1:= 0I;
  #L3e6c16.  v4[v1]:= v0 @kind object;
  #L3e6c1a.  v0:= "No constructor accepts all read only values in %s" @kind object;
  #L3e6c1e.  call `<init>`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e6c24.  throw v3;
}
procedure `void` `validateNames`(`org.simpleframework.xml.core.InstantiatorBuilder` v7 @kind this, `org.simpleframework.xml.core.Label` v8 @kind object, `org.simpleframework.xml.core.Parameter` v9 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateNames:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e6c38.  call temp:= `getNames`(v8) @signature `Lorg/simpleframework/xml/core/Label;.getNames:()[Ljava/lang/String;` @kind interface;
  #L3e6c3e.  v0:= temp @kind object;
  #L3e6c40.  call temp:= `getName`(v9) @signature `Lorg/simpleframework/xml/core/Parameter;.getName:()Ljava/lang/String;` @kind interface;
  #L3e6c46.  v1:= temp @kind object;
  #L3e6c48.  call temp:= `contains`(v7, v0, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.contains:([Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L3e6c4e.  v0:= temp;
  #L3e6c50.  if v0 != 0 then goto L3e6cba;
  #L3e6c54.  call temp:= `getName`(v8) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3e6c5a.  v0:= temp @kind object;
  #L3e6c5c.  if v1 == v0 then goto L3e6cba;
  #L3e6c60.  v2:= "Annotation does not match %s for '%s' in %s" @kind object;
  #L3e6c64.  v3:= 2I;
  #L3e6c66.  v4:= 1I;
  #L3e6c68.  v5:= 0I;
  #L3e6c6a.  v6:= 3I;
  #L3e6c6c.  if v1 == 0 then goto L3e6c9e;
  #L3e6c70.  if v0 == 0 then goto L3e6c9e;
  #L3e6c74.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e6c7a.  v0:= temp;
  #L3e6c7c.  if v0 == 0 then goto L3e6c82;
  #L3e6c80.  goto L3e6cba;
  #L3e6c82.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L3e6c86.  v6:= new `java.lang.Object`[v6];
  #L3e6c8a.  v6[v5]:= v8 @kind object;
  #L3e6c8e.  v6[v4]:= v1 @kind object;
  #L3e6c92.  v6[v3]:= v9 @kind object;
  #L3e6c96.  call `<init>`(v0, v2, v6) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e6c9c.  throw v0;
  #L3e6c9e.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L3e6ca2.  v6:= new `java.lang.Object`[v6];
  #L3e6ca6.  v6[v5]:= v8 @kind object;
  #L3e6caa.  v6[v4]:= v1 @kind object;
  #L3e6cae.  v6[v3]:= v9 @kind object;
  #L3e6cb2.  call `<init>`(v0, v2, v6) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e6cb8.  throw v0;
  #L3e6cba.  return @kind void;
}
procedure `void` `validateParameter`(`org.simpleframework.xml.core.InstantiatorBuilder` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object, `org.simpleframework.xml.core.Parameter` v6 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateParameter:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6ccc.  call temp:= `getContact`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L3e6cd2.  v0:= temp @kind object;
  #L3e6cd4.  call temp:= `getName`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getName:()Ljava/lang/String;` @kind interface;
  #L3e6cda.  v1:= temp @kind object;
  #L3e6cdc.  call temp:= `getType`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e6ce2.  v2:= temp @kind object;
  #L3e6ce4.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e6cea.  v0:= temp @kind object;
  #L3e6cec.  call temp:= `isAssignable`(v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind static;
  #L3e6cf2.  v0:= temp;
  #L3e6cf4.  if v0 == 0 then goto L3e6d06;
  #L3e6cf8.  call `validateNames`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateNames:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L3e6cfe.  call `validateAnnotations`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validateAnnotations:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L3e6d04.  return @kind void;
  #L3e6d06.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L3e6d0a.  v2:= 3I;
  #L3e6d0c.  v2:= new `java.lang.Object`[v2];
  #L3e6d10.  v3:= 0I;
  #L3e6d12.  v2[v3]:= v5 @kind object;
  #L3e6d16.  v5:= 1I;
  #L3e6d18.  v2[v5]:= v1 @kind object;
  #L3e6d1c.  v5:= 2I;
  #L3e6d1e.  v2[v5]:= v6 @kind object;
  #L3e6d22.  v5:= "Type is not compatible with %s for '%s' in %s" @kind object;
  #L3e6d26.  call `<init>`(v0, v5, v2) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e6d2c.  throw v0;
}
procedure `org.simpleframework.xml.core.Instantiator` `build`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.build:()Lorg/simpleframework/xml/core/Instantiator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6648.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L3e664c.  if v0 != 0 then goto L3e666e;
  #L3e6650.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3e6654.  call `populate`(v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.populate:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3e665a.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3e665e.  call temp:= `build`(v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.build:(Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/Instantiator;` @kind direct;
  #L3e6664.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.detail` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L3e6668.  call `validate`(v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.validate:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3e666e.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.factory` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L3e6672.  return v0 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Label` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e68c4.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isAttribute:()Z` @kind interface;
  #L3e68ca.  v0:= temp;
  #L3e68cc.  if v0 == 0 then goto L3e68dc;
  #L3e68d0.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.attributes` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e68d4.  call `register`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e68da.  goto L3e68fe;
  #L3e68dc.  call temp:= `isText`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isText:()Z` @kind interface;
  #L3e68e2.  v0:= temp;
  #L3e68e4.  if v0 == 0 then goto L3e68f4;
  #L3e68e8.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.texts` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e68ec.  call `register`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e68f2.  goto L3e68fe;
  #L3e68f4.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.elements` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L3e68f8.  call `register`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L3e68fe.  return @kind void;
}
