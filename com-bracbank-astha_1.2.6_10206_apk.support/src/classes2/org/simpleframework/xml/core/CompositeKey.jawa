record `org.simpleframework.xml.core.CompositeKey` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.CompositeKey.context` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Entry` `org.simpleframework.xml.core.CompositeKey.entry` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeKey.root` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.CompositeKey.style` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeKey.type` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeKey` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.core.Entry` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3df780.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df786.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L3df78a.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L3df790.  v1.`org.simpleframework.xml.core.CompositeKey.root` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L3df794.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/core/Context;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind interface;
  #L3df79a.  v0:= temp @kind object;
  #L3df79c.  v1.`org.simpleframework.xml.core.CompositeKey.style` @type ^`org.simpleframework.xml.stream.Style` := v0 @kind object;
  #L3df7a0.  v1.`org.simpleframework.xml.core.CompositeKey.context` @type ^`org.simpleframework.xml.core.Context` := v2 @kind object;
  #L3df7a4.  v1.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` := v3 @kind object;
  #L3df7a8.  v1.`org.simpleframework.xml.core.CompositeKey.type` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L3df7ac.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeKey` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3df728.  v0:= v2.`org.simpleframework.xml.core.CompositeKey.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3df72c.  call temp:= `getElement`(v0, v4) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3df732.  v4:= temp @kind object;
  #L3df734.  v0:= v2.`org.simpleframework.xml.core.CompositeKey.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df738.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df73e.  v0:= temp @kind object;
  #L3df740.  if v4 == 0 then goto L3df74c;
  #L3df744.  call temp:= `getNext`(v3, v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df74a.  v3:= temp @kind object;
  #L3df74c.  v4:= 0I;
  #L3df74e.  if v3 != 0 then goto L3df754;
  #L3df752.  return v4 @kind object;
  #L3df754.  call temp:= `isEmpty`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.isEmpty:()Z` @kind interface;
  #L3df75a.  v1:= temp;
  #L3df75c.  if v1 == 0 then goto L3df762;
  #L3df760.  return v4 @kind object;
  #L3df762.  v4:= v2.`org.simpleframework.xml.core.CompositeKey.root` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L3df766.  call temp:= `read`(v4, v3, v0) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L3df76c.  v3:= temp @kind object;
  #L3df76e.  return v3 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeKey` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3df5ec.  v0:= v2.`org.simpleframework.xml.core.CompositeKey.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3df5f0.  call temp:= `getElement`(v0, v4) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3df5f6.  v4:= temp @kind object;
  #L3df5f8.  call temp:= `getNext`(v3, v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L3df5fe.  v3:= temp @kind object;
  #L3df600.  v4:= v2.`org.simpleframework.xml.core.CompositeKey.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df604.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df60a.  v4:= temp @kind object;
  #L3df60c.  v0:= 1I;
  #L3df60e.  if v3 != 0 then goto L3df614;
  #L3df612.  return v0;
  #L3df614.  call temp:= `isEmpty`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.isEmpty:()Z` @kind interface;
  #L3df61a.  v1:= temp;
  #L3df61c.  if v1 == 0 then goto L3df622;
  #L3df620.  return v0;
  #L3df622.  v0:= v2.`org.simpleframework.xml.core.CompositeKey.root` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L3df626.  call temp:= `validate`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L3df62c.  v3:= temp;
  #L3df62e.  return v3;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeKey` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3df640.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3df646.  v0:= temp @kind object;
  #L3df648.  v1:= v4.`org.simpleframework.xml.core.CompositeKey.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df64c.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df652.  v1:= temp @kind object;
  #L3df654.  v2:= v4.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df658.  call temp:= `getKey`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L3df65e.  v2:= temp @kind object;
  #L3df660.  if v2 != 0 then goto L3df670;
  #L3df664.  v2:= v4.`org.simpleframework.xml.core.CompositeKey.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3df668.  call temp:= `getName`(v2, v1) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L3df66e.  v2:= temp @kind object;
  #L3df670.  v3:= v4.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df674.  call temp:= `isAttribute`(v3) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L3df67a.  v3:= temp;
  #L3df67c.  if v3 != 0 then goto L3df68a;
  #L3df680.  call temp:= `read`(v4, v5, v2) @signature `Lorg/simpleframework/xml/core/CompositeKey;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @kind direct;
  #L3df686.  v5:= temp @kind object;
  #L3df688.  return v5 @kind object;
  #L3df68a.  v5:= new `org.simpleframework.xml.core.AttributeException`;
  #L3df68e.  v2:= 3I;
  #L3df690.  v2:= new `java.lang.Object`[v2];
  #L3df694.  v3:= 0I;
  #L3df696.  v2[v3]:= v1 @kind object;
  #L3df69a.  v1:= v4.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df69e.  v3:= 1I;
  #L3df6a0.  v2[v3]:= v1 @kind object;
  #L3df6a4.  v1:= 2I;
  #L3df6a6.  v2[v1]:= v0 @kind object;
  #L3df6aa.  v0:= "Can not have %s as an attribute for %s at %s" @kind object;
  #L3df6ae.  call `<init>`(v5, v0, v2) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3df6b4.  throw v5;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeKey` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3df6c8.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3df6ce.  v0:= temp @kind object;
  #L3df6d0.  v1:= v3.`org.simpleframework.xml.core.CompositeKey.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df6d4.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df6da.  v1:= temp @kind object;
  #L3df6dc.  if v5 != 0 then goto L3df6ea;
  #L3df6e0.  call temp:= `read`(v3, v4) @signature `Lorg/simpleframework/xml/core/CompositeKey;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L3df6e6.  v4:= temp @kind object;
  #L3df6e8.  return v4 @kind object;
  #L3df6ea.  v4:= new `org.simpleframework.xml.core.PersistenceException`;
  #L3df6ee.  v5:= 3I;
  #L3df6f0.  v5:= new `java.lang.Object`[v5];
  #L3df6f4.  v2:= 0I;
  #L3df6f6.  v5[v2]:= v1 @kind object;
  #L3df6fa.  v1:= v3.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df6fe.  v2:= 1I;
  #L3df700.  v5[v2]:= v1 @kind object;
  #L3df704.  v1:= 2I;
  #L3df706.  v5[v1]:= v0 @kind object;
  #L3df70a.  v0:= "Can not read key of %s for %s at %s" @kind object;
  #L3df70e.  call `<init>`(v4, v0, v5) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3df714.  throw v4;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeKey` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3df564.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L3df56a.  v0:= temp @kind object;
  #L3df56c.  v1:= v4.`org.simpleframework.xml.core.CompositeKey.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df570.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df576.  v1:= temp @kind object;
  #L3df578.  v2:= v4.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df57c.  call temp:= `getKey`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L3df582.  v2:= temp @kind object;
  #L3df584.  if v2 != 0 then goto L3df594;
  #L3df588.  v2:= v4.`org.simpleframework.xml.core.CompositeKey.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3df58c.  call temp:= `getName`(v2, v1) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L3df592.  v2:= temp @kind object;
  #L3df594.  v3:= v4.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df598.  call temp:= `isAttribute`(v3) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L3df59e.  v3:= temp;
  #L3df5a0.  if v3 != 0 then goto L3df5ae;
  #L3df5a4.  call temp:= `validate`(v4, v5, v2) @signature `Lorg/simpleframework/xml/core/CompositeKey;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @kind direct;
  #L3df5aa.  v5:= temp;
  #L3df5ac.  return v5;
  #L3df5ae.  v5:= new `org.simpleframework.xml.core.ElementException`;
  #L3df5b2.  v2:= 3I;
  #L3df5b4.  v2:= new `java.lang.Object`[v2];
  #L3df5b8.  v3:= 0I;
  #L3df5ba.  v2[v3]:= v1 @kind object;
  #L3df5be.  v1:= v4.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df5c2.  v3:= 1I;
  #L3df5c4.  v2[v3]:= v1 @kind object;
  #L3df5c8.  v1:= 2I;
  #L3df5ca.  v2[v1]:= v0 @kind object;
  #L3df5ce.  v0:= "Can not have %s as an attribute for %s at %s" @kind object;
  #L3df5d2.  call `<init>`(v5, v0, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3df5d8.  throw v5;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeKey` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3df7c0.  v0:= v3.`org.simpleframework.xml.core.CompositeKey.type` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L3df7c4.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L3df7ca.  v0:= temp @kind object;
  #L3df7cc.  v1:= v3.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df7d0.  call temp:= `getKey`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L3df7d6.  v1:= temp @kind object;
  #L3df7d8.  v2:= v3.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df7dc.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L3df7e2.  v2:= temp;
  #L3df7e4.  if v2 != 0 then goto L3df810;
  #L3df7e8.  if v1 != 0 then goto L3df7f8;
  #L3df7ec.  v1:= v3.`org.simpleframework.xml.core.CompositeKey.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L3df7f0.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L3df7f6.  v1:= temp @kind object;
  #L3df7f8.  v2:= v3.`org.simpleframework.xml.core.CompositeKey.style` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L3df7fc.  call temp:= `getElement`(v2, v1) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3df802.  v1:= temp @kind object;
  #L3df804.  v2:= v3.`org.simpleframework.xml.core.CompositeKey.root` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L3df808.  call `write`(v2, v4, v5, v0, v1) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L3df80e.  return @kind void;
  #L3df810.  v4:= new `org.simpleframework.xml.core.ElementException`;
  #L3df814.  v5:= 2I;
  #L3df816.  v5:= new `java.lang.Object`[v5];
  #L3df81a.  v1:= 0I;
  #L3df81c.  v5[v1]:= v0 @kind object;
  #L3df820.  v0:= v3.`org.simpleframework.xml.core.CompositeKey.entry` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L3df824.  v1:= 1I;
  #L3df826.  v5[v1]:= v0 @kind object;
  #L3df82a.  v0:= "Can not have %s as an attribute for %s" @kind object;
  #L3df82e.  call `<init>`(v4, v0, v5) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3df834.  throw v4;
}
