record `org.simpleframework.xml.core.ClassScanner` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.commit` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.complete` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.NamespaceDecorator` `org.simpleframework.xml.core.ClassScanner.decorator` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Order` `org.simpleframework.xml.core.ClassScanner.order` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.persist` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.replace` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.resolve` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Root` `org.simpleframework.xml.core.ClassScanner.root` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ConstructorScanner` `org.simpleframework.xml.core.ClassScanner.scanner` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.ClassScanner.support` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.validate` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3de384.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3de38a.  v0:= new `org.simpleframework.xml.core.ConstructorScanner`;
  #L3de38e.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3de394.  v1.`org.simpleframework.xml.core.ClassScanner.scanner` @type ^`org.simpleframework.xml.core.ConstructorScanner` := v0 @kind object;
  #L3de398.  v0:= new `org.simpleframework.xml.core.NamespaceDecorator`;
  #L3de39c.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.<init>:()V` @kind direct;
  #L3de3a2.  v1.`org.simpleframework.xml.core.ClassScanner.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` := v0 @kind object;
  #L3de3a6.  v1.`org.simpleframework.xml.core.ClassScanner.support` @type ^`org.simpleframework.xml.core.Support` := v3 @kind object;
  #L3de3aa.  call `scan`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.scan:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3de3b0.  return @kind void;
}
procedure `void` `commit`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.commit:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3de3c4.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.commit` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de3c8.  if v0 != 0 then goto L3de3d8;
  #L3de3cc.  call temp:= `getFunction`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getFunction:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L3de3d2.  v2:= temp @kind object;
  #L3de3d4.  v1.`org.simpleframework.xml.core.ClassScanner.commit` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L3de3d8.  return @kind void;
}
procedure `void` `commit`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.commit:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3de3ec.  call temp:= `getNamespace`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getNamespace:()Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L3de3f2.  v2:= temp @kind object;
  #L3de3f4.  if v2 == 0 then goto L3de402;
  #L3de3f8.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L3de3fc.  call `set`(v0, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.set:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L3de402.  return @kind void;
}
procedure `void` `complete`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.complete:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3de414.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.complete` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de418.  if v0 != 0 then goto L3de428;
  #L3de41c.  call temp:= `getFunction`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getFunction:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L3de422.  v2:= temp @kind object;
  #L3de424.  v1.`org.simpleframework.xml.core.ClassScanner.complete` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L3de428.  return @kind void;
}
procedure `void` `definition`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.definition:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3de43c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.root` @type ^`org.simpleframework.xml.Root` @kind object;
  #L3de440.  if v0 != 0 then goto L3de450;
  #L3de444.  call temp:= `getRoot`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getRoot:()Lorg/simpleframework/xml/Root;` @kind interface;
  #L3de44a.  v0:= temp @kind object;
  #L3de44c.  v1.`org.simpleframework.xml.core.ClassScanner.root` @type ^`org.simpleframework.xml.Root` := v0 @kind object;
  #L3de450.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.order` @type ^`org.simpleframework.xml.Order` @kind object;
  #L3de454.  if v0 != 0 then goto L3de464;
  #L3de458.  call temp:= `getOrder`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getOrder:()Lorg/simpleframework/xml/Order;` @kind interface;
  #L3de45e.  v2:= temp @kind object;
  #L3de460.  v1.`org.simpleframework.xml.core.ClassScanner.order` @type ^`org.simpleframework.xml.Order` := v2 @kind object;
  #L3de464.  return @kind void;
}
procedure `org.simpleframework.xml.core.Function` `getFunction`(`org.simpleframework.xml.core.ClassScanner` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getFunction:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3de2ac.  call temp:= `isContextual`(v2, v3) @signature `Lorg/simpleframework/xml/core/ClassScanner;.isContextual:(Ljava/lang/reflect/Method;)Z` @kind direct;
  #L3de2b2.  v0:= temp;
  #L3de2b4.  call temp:= `isAccessible`(v3) @signature `Ljava/lang/reflect/Method;.isAccessible:()Z` @kind virtual;
  #L3de2ba.  v1:= temp;
  #L3de2bc.  if v1 != 0 then goto L3de2c8;
  #L3de2c0.  v1:= 1I;
  #L3de2c2.  call `setAccessible`(v3, v1) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L3de2c8.  v1:= new `org.simpleframework.xml.core.Function`;
  #L3de2cc.  call `<init>`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Function;.<init>:(Ljava/lang/reflect/Method;Z)V` @kind direct;
  #L3de2d2.  return v1 @kind object;
}
procedure `boolean` `isContextual`(`org.simpleframework.xml.core.ClassScanner` v3 @kind this, `java.lang.reflect.Method` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.isContextual:(Ljava/lang/reflect/Method;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3de1dc.  call temp:= `getParameterTypes`(v4) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3de1e2.  v4:= temp @kind object;
  #L3de1e4.  v0:= length @variable v4;
  #L3de1e6.  v1:= 0I;
  #L3de1e8.  v2:= 1I;
  #L3de1ea.  if v0 != v2 then goto L3de200;
  #L3de1ee.  v4:= v4[v1] @kind object;
  #L3de1f2.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L3de1f6.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3de1fc.  v4:= temp;
  #L3de1fe.  return v4;
  #L3de200.  return v1;
}
procedure `void` `method`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.method:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3de478.  call temp:= `getMethods`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getMethods:()Ljava/util/List;` @kind interface;
  #L3de47e.  v2:= temp @kind object;
  #L3de480.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3de486.  v2:= temp @kind object;
  #L3de488.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3de48e.  v0:= temp;
  #L3de490.  if v0 == 0 then goto L3de4a8;
  #L3de494.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3de49a.  v0:= temp @kind object;
  #L3de49c.  v0:= (`org.simpleframework.xml.core.MethodDetail`) v0 @kind object;
  #L3de4a0.  call `method`(v1, v0) @signature `Lorg/simpleframework/xml/core/ClassScanner;.method:(Lorg/simpleframework/xml/core/MethodDetail;)V` @kind direct;
  #L3de4a6.  goto L3de488;
  #L3de4a8.  return @kind void;
}
procedure `void` `method`(`org.simpleframework.xml.core.ClassScanner` v5 @kind this, `org.simpleframework.xml.core.MethodDetail` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.method:(Lorg/simpleframework/xml/core/MethodDetail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3de4bc.  call temp:= `getAnnotations`(v6) @signature `Lorg/simpleframework/xml/core/MethodDetail;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3de4c2.  v0:= temp @kind object;
  #L3de4c4.  call temp:= `getMethod`(v6) @signature `Lorg/simpleframework/xml/core/MethodDetail;.getMethod:()Ljava/lang/reflect/Method;` @kind virtual;
  #L3de4ca.  v6:= temp @kind object;
  #L3de4cc.  v1:= length @variable v0;
  #L3de4ce.  v2:= 0I;
  #L3de4d0.  if v2 >= v1 then goto L3de532;
  #L3de4d4.  v3:= v0[v2] @kind object;
  #L3de4d8.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Commit` @kind boolean;
  #L3de4dc.  if v4 == 0 then goto L3de4e6;
  #L3de4e0.  call `commit`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.commit:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L3de4e6.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Validate` @kind boolean;
  #L3de4ea.  if v4 == 0 then goto L3de4f4;
  #L3de4ee.  call `validate`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.validate:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L3de4f4.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Persist` @kind boolean;
  #L3de4f8.  if v4 == 0 then goto L3de502;
  #L3de4fc.  call `persist`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.persist:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L3de502.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Complete` @kind boolean;
  #L3de506.  if v4 == 0 then goto L3de510;
  #L3de50a.  call `complete`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.complete:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L3de510.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Replace` @kind boolean;
  #L3de514.  if v4 == 0 then goto L3de51e;
  #L3de518.  call `replace`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.replace:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L3de51e.  v3:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Resolve` @kind boolean;
  #L3de522.  if v3 == 0 then goto L3de52c;
  #L3de526.  call `resolve`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.resolve:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L3de52c.  v2:= v2 + 1;
  #L3de530.  goto L3de4d0;
  #L3de532.  return @kind void;
}
procedure `void` `namespace`(`org.simpleframework.xml.core.ClassScanner` v4 @kind this, `org.simpleframework.xml.core.Detail` v5 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.namespace:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3de544.  call temp:= `getNamespaceList`(v5) @signature `Lorg/simpleframework/xml/core/Detail;.getNamespaceList:()Lorg/simpleframework/xml/NamespaceList;` @kind interface;
  #L3de54a.  v0:= temp @kind object;
  #L3de54c.  call temp:= `getNamespace`(v5) @signature `Lorg/simpleframework/xml/core/Detail;.getNamespace:()Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L3de552.  v5:= temp @kind object;
  #L3de554.  if v5 == 0 then goto L3de562;
  #L3de558.  v1:= v4.`org.simpleframework.xml.core.ClassScanner.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L3de55c.  call `add`(v1, v5) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L3de562.  if v0 == 0 then goto L3de58a;
  #L3de566.  call temp:= `value`(v0) @signature `Lorg/simpleframework/xml/NamespaceList;.value:()[Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L3de56c.  v5:= temp @kind object;
  #L3de56e.  v0:= length @variable v5;
  #L3de570.  v1:= 0I;
  #L3de572.  if v1 >= v0 then goto L3de58a;
  #L3de576.  v2:= v5[v1] @kind object;
  #L3de57a.  v3:= v4.`org.simpleframework.xml.core.ClassScanner.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L3de57e.  call `add`(v3, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L3de584.  v1:= v1 + 1;
  #L3de588.  goto L3de572;
  #L3de58a.  return @kind void;
}
procedure `void` `persist`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.persist:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3de59c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.persist` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de5a0.  if v0 != 0 then goto L3de5b0;
  #L3de5a4.  call temp:= `getFunction`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getFunction:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L3de5aa.  v2:= temp @kind object;
  #L3de5ac.  v1.`org.simpleframework.xml.core.ClassScanner.persist` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L3de5b0.  return @kind void;
}
procedure `void` `replace`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.replace:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3de5c4.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.replace` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de5c8.  if v0 != 0 then goto L3de5d8;
  #L3de5cc.  call temp:= `getFunction`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getFunction:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L3de5d2.  v2:= temp @kind object;
  #L3de5d4.  v1.`org.simpleframework.xml.core.ClassScanner.replace` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L3de5d8.  return @kind void;
}
procedure `void` `resolve`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.resolve:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3de5ec.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.resolve` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de5f0.  if v0 != 0 then goto L3de600;
  #L3de5f4.  call temp:= `getFunction`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getFunction:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L3de5fa.  v2:= temp @kind object;
  #L3de5fc.  v1.`org.simpleframework.xml.core.ClassScanner.resolve` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L3de600.  return @kind void;
}
procedure `void` `scan`(`org.simpleframework.xml.core.ClassScanner` v3 @kind this, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.scan:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3de614.  call temp:= `getOverride`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getOverride:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L3de61a.  v0:= temp @kind object;
  #L3de61c.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getType:()Ljava/lang/Class;` @kind interface;
  #L3de622.  v1:= temp @kind object;
  #L3de624.  if v1 == 0 then goto L3de650;
  #L3de628.  v2:= v3.`org.simpleframework.xml.core.ClassScanner.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3de62c.  call temp:= `getDetail`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L3de632.  v1:= temp @kind object;
  #L3de634.  call `namespace`(v3, v1) @signature `Lorg/simpleframework/xml/core/ClassScanner;.namespace:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3de63a.  call `method`(v3, v1) @signature `Lorg/simpleframework/xml/core/ClassScanner;.method:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3de640.  call `definition`(v3, v1) @signature `Lorg/simpleframework/xml/core/ClassScanner;.definition:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3de646.  call temp:= `getSuper`(v1) @signature `Lorg/simpleframework/xml/core/Detail;.getSuper:()Ljava/lang/Class;` @kind interface;
  #L3de64c.  v1:= temp @kind object;
  #L3de64e.  goto L3de624;
  #L3de650.  call `commit`(v3, v4) @signature `Lorg/simpleframework/xml/core/ClassScanner;.commit:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3de656.  return @kind void;
}
procedure `void` `validate`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.validate:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3de668.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.validate` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de66c.  if v0 != 0 then goto L3de67c;
  #L3de670.  call temp:= `getFunction`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getFunction:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L3de676.  v2:= temp @kind object;
  #L3de678.  v1.`org.simpleframework.xml.core.ClassScanner.validate` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L3de67c.  return @kind void;
}
procedure `org.simpleframework.xml.core.Function` `getCommit`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getCommit:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de27c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.commit` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de280.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getComplete`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getComplete:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de294.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.complete` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de298.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Decorator` `getDecorator`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de264.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.decorator` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L3de268.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Order` `getOrder`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getOrder:()Lorg/simpleframework/xml/Order;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de234.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.order` @type ^`org.simpleframework.xml.Order` @kind object;
  #L3de238.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.ParameterMap` `getParameters`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de344.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.scanner` @type ^`org.simpleframework.xml.core.ConstructorScanner` @kind object;
  #L3de348.  call temp:= `getParameters`(v0) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @kind virtual;
  #L3de34e.  v0:= temp @kind object;
  #L3de350.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getPersist`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getPersist:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de2e4.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.persist` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de2e8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getReplace`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getReplace:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de2fc.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.replace` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de300.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getResolve`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getResolve:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de314.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.resolve` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de318.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Root` `getRoot`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getRoot:()Lorg/simpleframework/xml/Root;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de24c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.root` @type ^`org.simpleframework.xml.Root` @kind object;
  #L3de250.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Signature` `getSignature`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de364.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.scanner` @type ^`org.simpleframework.xml.core.ConstructorScanner` @kind object;
  #L3de368.  call temp:= `getSignature`(v0) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @kind virtual;
  #L3de36e.  v0:= temp @kind object;
  #L3de370.  return v0 @kind object;
}
procedure `java.util.List` `getSignatures`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getSignatures:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de214.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.scanner` @type ^`org.simpleframework.xml.core.ConstructorScanner` @kind object;
  #L3de218.  call temp:= `getSignatures`(v0) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignatures:()Ljava/util/List;` @kind virtual;
  #L3de21e.  v0:= temp @kind object;
  #L3de220.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getValidate`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getValidate:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de32c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.validate` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L3de330.  return v0 @kind object;
}
