record `org.simpleframework.xml.core.ParameterContact` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.simpleframework.xml.core.Contact` @kind interface {
  `java.lang.reflect.Constructor` `org.simpleframework.xml.core.ParameterContact.factory` @AccessFlag PUBLIC_FINAL;
  `int` `org.simpleframework.xml.core.ParameterContact.index` @AccessFlag PUBLIC_FINAL;
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.ParameterContact.label` @AccessFlag PUBLIC_FINAL;
  `java.lang.annotation.Annotation`[] `org.simpleframework.xml.core.ParameterContact.labels` @AccessFlag PUBLIC_FINAL;
  `java.lang.Class` `org.simpleframework.xml.core.ParameterContact.owner` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ParameterContact` v1 @kind this, `java.lang.annotation.Annotation` v2 @kind object, `java.lang.reflect.Constructor` v3 @kind object, `int` v4 ) @signature `Lorg/simpleframework/xml/core/ParameterContact;.<init>:(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Constructor;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e9d9c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e9da2.  call temp:= `getParameterAnnotations`(v3) @signature `Ljava/lang/reflect/Constructor;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3e9da8.  v0:= temp @kind object;
  #L3e9daa.  v0:= v0[v4] @kind object;
  #L3e9dae.  v1.`org.simpleframework.xml.core.ParameterContact.labels` @type ^`java.lang.annotation.Annotation`[] := v0 @kind object;
  #L3e9db2.  call temp:= `getDeclaringClass`(v3) @signature `Ljava/lang/reflect/Constructor;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L3e9db8.  v0:= temp @kind object;
  #L3e9dba.  v1.`org.simpleframework.xml.core.ParameterContact.owner` @type ^`java.lang.Class` := v0 @kind object;
  #L3e9dbe.  v1.`org.simpleframework.xml.core.ParameterContact.factory` @type ^`java.lang.reflect.Constructor` := v3 @kind object;
  #L3e9dc2.  v1.`org.simpleframework.xml.core.ParameterContact.index` @type ^`int` := v4;
  #L3e9dc6.  v1.`org.simpleframework.xml.core.ParameterContact.label` @type ^`java.lang.annotation.Annotation` := v2 @kind object;
  #L3e9dca.  return @kind void;
}
procedure `java.lang.Object` `get`(`org.simpleframework.xml.core.ParameterContact` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/core/ParameterContact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3e9cf0.  v1:= 0I;
  #L3e9cf2.  return v1 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.ParameterContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ParameterContact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9d44.  v0:= v1.`org.simpleframework.xml.core.ParameterContact.label` @type ^`java.lang.annotation.Annotation` @kind object;
  #L3e9d48.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.ParameterContact` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ParameterContact;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e9d5c.  v0:= v5.`org.simpleframework.xml.core.ParameterContact.labels` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L3e9d60.  v1:= length @variable v0;
  #L3e9d62.  v2:= 0I;
  #L3e9d64.  if v2 >= v1 then goto L3e9d88;
  #L3e9d68.  v3:= v0[v2] @kind object;
  #L3e9d6c.  call temp:= `annotationType`(v3) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L3e9d72.  v4:= temp @kind object;
  #L3e9d74.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e9d7a.  v4:= temp;
  #L3e9d7c.  if v4 == 0 then goto L3e9d82;
  #L3e9d80.  return v3 @kind object;
  #L3e9d82.  v2:= v2 + 1;
  #L3e9d86.  goto L3e9d64;
  #L3e9d88.  v6:= 0I;
  #L3e9d8a.  return v6 @kind object;
}
procedure `java.lang.Class` `getDeclaringClass`(`org.simpleframework.xml.core.ParameterContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ParameterContact;.getDeclaringClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9c68.  v0:= v1.`org.simpleframework.xml.core.ParameterContact.owner` @type ^`java.lang.Class` @kind object;
  #L3e9c6c.  return v0 @kind object;
}
procedure `java.lang.Class` `getDependent`(`org.simpleframework.xml.core.ParameterContact` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ParameterContact;.getDependent:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9c80.  v0:= v2.`org.simpleframework.xml.core.ParameterContact.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3e9c84.  v1:= v2.`org.simpleframework.xml.core.ParameterContact.index` @type ^`int`;
  #L3e9c88.  call temp:= `getParameterDependent`(v0, v1) @signature `Lorg/simpleframework/xml/core/Reflector;.getParameterDependent:(Ljava/lang/reflect/Constructor;I)Ljava/lang/Class;` @kind static;
  #L3e9c8e.  v0:= temp @kind object;
  #L3e9c90.  return v0 @kind object;
}
procedure `java.lang.Class`[] `getDependents`(`org.simpleframework.xml.core.ParameterContact` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ParameterContact;.getDependents:()[Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9ccc.  v0:= v2.`org.simpleframework.xml.core.ParameterContact.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3e9cd0.  v1:= v2.`org.simpleframework.xml.core.ParameterContact.index` @type ^`int`;
  #L3e9cd4.  call temp:= `getParameterDependents`(v0, v1) @signature `Lorg/simpleframework/xml/core/Reflector;.getParameterDependents:(Ljava/lang/reflect/Constructor;I)[Ljava/lang/Class;` @kind static;
  #L3e9cda.  v0:= temp @kind object;
  #L3e9cdc.  return v0 @kind object;
}
procedure `java.lang.String` `getName`() @signature `Lorg/simpleframework/xml/core/ParameterContact;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.ParameterContact` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ParameterContact;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9ca4.  v0:= v2.`org.simpleframework.xml.core.ParameterContact.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3e9ca8.  call temp:= `getParameterTypes`(v0) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3e9cae.  v0:= temp @kind object;
  #L3e9cb0.  v1:= v2.`org.simpleframework.xml.core.ParameterContact.index` @type ^`int`;
  #L3e9cb4.  v0:= v0[v1] @kind object;
  #L3e9cb8.  return v0 @kind object;
}
procedure `boolean` `isReadOnly`(`org.simpleframework.xml.core.ParameterContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ParameterContact;.isReadOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9c54.  v0:= 0I;
  #L3e9c56.  return v0;
}
procedure `void` `set`(`org.simpleframework.xml.core.ParameterContact` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ParameterContact;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3e9ddc.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.ParameterContact` v3 @kind this) @signature `Lorg/simpleframework/xml/core/ParameterContact;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9d04.  v0:= 2I;
  #L3e9d06.  v0:= new `java.lang.Object`[v0];
  #L3e9d0a.  v1:= v3.`org.simpleframework.xml.core.ParameterContact.index` @type ^`int`;
  #L3e9d0e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9d14.  v1:= temp @kind object;
  #L3e9d16.  v2:= 0I;
  #L3e9d18.  v0[v2]:= v1 @kind object;
  #L3e9d1c.  v1:= v3.`org.simpleframework.xml.core.ParameterContact.factory` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3e9d20.  v2:= 1I;
  #L3e9d22.  v0[v2]:= v1 @kind object;
  #L3e9d26.  v1:= "parameter %s of constructor %s" @kind object;
  #L3e9d2a.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e9d30.  v0:= temp @kind object;
  #L3e9d32.  return v0 @kind object;
}
