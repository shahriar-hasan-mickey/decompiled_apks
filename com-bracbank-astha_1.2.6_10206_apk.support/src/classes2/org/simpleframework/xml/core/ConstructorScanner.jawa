record `org.simpleframework.xml.core.ConstructorScanner` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.Signature` `org.simpleframework.xml.core.ConstructorScanner.primary` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ParameterMap` `org.simpleframework.xml.core.ConstructorScanner.registry` @AccessFlag PRIVATE;
  `java.util.List` `org.simpleframework.xml.core.ConstructorScanner.signatures` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.ConstructorScanner.support` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ConstructorScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e17d4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e17da.  v0:= new `java.util.ArrayList`;
  #L3e17de.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e17e4.  v1.`org.simpleframework.xml.core.ConstructorScanner.signatures` @type ^`java.util.List` := v0 @kind object;
  #L3e17e8.  v0:= new `org.simpleframework.xml.core.ParameterMap`;
  #L3e17ec.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.<init>:()V` @kind direct;
  #L3e17f2.  v1.`org.simpleframework.xml.core.ConstructorScanner.registry` @type ^`org.simpleframework.xml.core.ParameterMap` := v0 @kind object;
  #L3e17f6.  v1.`org.simpleframework.xml.core.ConstructorScanner.support` @type ^`org.simpleframework.xml.core.Support` := v3 @kind object;
  #L3e17fa.  call `scan`(v1, v2) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.scan:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L3e1800.  return @kind void;
}
procedure `void` `scan`(`org.simpleframework.xml.core.ConstructorScanner` v3 @kind this, `java.lang.reflect.Constructor` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.scan:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e1814.  v0:= new `org.simpleframework.xml.core.SignatureScanner`;
  #L3e1818.  v1:= v3.`org.simpleframework.xml.core.ConstructorScanner.registry` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3e181c.  v2:= v3.`org.simpleframework.xml.core.ConstructorScanner.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L3e1820.  call `<init>`(v0, v4, v1, v2) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.<init>:(Ljava/lang/reflect/Constructor;Lorg/simpleframework/xml/core/ParameterMap;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L3e1826.  call temp:= `isValid`(v0) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.isValid:()Z` @kind virtual;
  #L3e182c.  v4:= temp;
  #L3e182e.  if v4 == 0 then goto L3e1876;
  #L3e1832.  call temp:= `getSignatures`(v0) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.getSignatures:()Ljava/util/List;` @kind virtual;
  #L3e1838.  v4:= temp @kind object;
  #L3e183a.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e1840.  v4:= temp @kind object;
  #L3e1842.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e1848.  v0:= temp;
  #L3e184a.  if v0 == 0 then goto L3e1876;
  #L3e184e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e1854.  v0:= temp @kind object;
  #L3e1856.  v0:= (`org.simpleframework.xml.core.Signature`) v0 @kind object;
  #L3e185a.  call temp:= `size`(v0) @signature `Lorg/simpleframework/xml/core/Signature;.size:()I` @kind virtual;
  #L3e1860.  v1:= temp;
  #L3e1862.  if v1 != 0 then goto L3e186a;
  #L3e1866.  v3.`org.simpleframework.xml.core.ConstructorScanner.primary` @type ^`org.simpleframework.xml.core.Signature` := v0 @kind object;
  #L3e186a.  v1:= v3.`org.simpleframework.xml.core.ConstructorScanner.signatures` @type ^`java.util.List` @kind object;
  #L3e186e.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e1874.  goto L3e1842;
  #L3e1876.  return @kind void;
}
procedure `void` `scan`(`org.simpleframework.xml.core.ConstructorScanner` v5 @kind this, `org.simpleframework.xml.core.Detail` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.scan:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e1888.  call temp:= `getConstructors`(v6) @signature `Lorg/simpleframework/xml/core/Detail;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind interface;
  #L3e188e.  v0:= temp @kind object;
  #L3e1890.  call temp:= `isInstantiable`(v6) @signature `Lorg/simpleframework/xml/core/Detail;.isInstantiable:()Z` @kind interface;
  #L3e1896.  v1:= temp;
  #L3e1898.  v2:= 0I;
  #L3e189a.  if v1 == 0 then goto L3e18c2;
  #L3e189e.  v1:= length @variable v0;
  #L3e18a0.  if v2 >= v1 then goto L3e18c0;
  #L3e18a4.  v3:= v0[v2] @kind object;
  #L3e18a8.  call temp:= `isPrimitive`(v6) @signature `Lorg/simpleframework/xml/core/Detail;.isPrimitive:()Z` @kind interface;
  #L3e18ae.  v4:= temp;
  #L3e18b0.  if v4 != 0 then goto L3e18ba;
  #L3e18b4.  call `scan`(v5, v3) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.scan:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L3e18ba.  v2:= v2 + 1;
  #L3e18be.  goto L3e18a0;
  #L3e18c0.  return @kind void;
  #L3e18c2.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L3e18c6.  v1:= 1I;
  #L3e18c8.  v1:= new `java.lang.Object`[v1];
  #L3e18cc.  v1[v2]:= v6 @kind object;
  #L3e18d0.  v6:= "Can not construct inner %s" @kind object;
  #L3e18d4.  call `<init>`(v0, v6, v1) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e18da.  throw v0;
}
procedure `org.simpleframework.xml.core.ParameterMap` `getParameters`(`org.simpleframework.xml.core.ConstructorScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e17a4.  v0:= v1.`org.simpleframework.xml.core.ConstructorScanner.registry` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L3e17a8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Signature` `getSignature`(`org.simpleframework.xml.core.ConstructorScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e17bc.  v0:= v1.`org.simpleframework.xml.core.ConstructorScanner.primary` @type ^`org.simpleframework.xml.core.Signature` @kind object;
  #L3e17c0.  return v0 @kind object;
}
procedure `java.util.List` `getSignatures`(`org.simpleframework.xml.core.ConstructorScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignatures:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1784.  v0:= new `java.util.ArrayList`;
  #L3e1788.  v1:= v2.`org.simpleframework.xml.core.ConstructorScanner.signatures` @type ^`java.util.List` @kind object;
  #L3e178c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3e1792.  return v0 @kind object;
}
