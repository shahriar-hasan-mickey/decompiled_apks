record `org.simpleframework.xml.core.PathParser$PathSection` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Expression` @kind interface {
  `int` `org.simpleframework.xml.core.PathParser$PathSection.begin` @AccessFlag PRIVATE;
  `java.util.List` `org.simpleframework.xml.core.PathParser$PathSection.cache` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.core.PathParser$PathSection.end` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.PathParser$PathSection.path` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.PathParser$PathSection.section` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.PathParser` `org.simpleframework.xml.core.PathParser$PathSection.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PathParser$PathSection` v0 @kind this, `org.simpleframework.xml.core.PathParser` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.<init>:(Lorg/simpleframework/xml/core/PathParser;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ea5a4.  v0.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` := v1 @kind object;
  #L3ea5a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ea5ae.  v1:= new `java.util.ArrayList`;
  #L3ea5b2.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3ea5b8.  v0.`org.simpleframework.xml.core.PathParser$PathSection.cache` @type ^`java.util.List` := v1 @kind object;
  #L3ea5bc.  v0.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int` := v2;
  #L3ea5c0.  v0.`org.simpleframework.xml.core.PathParser$PathSection.end` @type ^`int` := v3;
  #L3ea5c4.  return @kind void;
}
procedure `java.lang.String` `getCanonicalPath`(`org.simpleframework.xml.core.PathParser$PathSection` v5 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getCanonicalPath:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ea2e8.  v0:= 0I;
  #L3ea2ea.  v1:= 0I;
  #L3ea2ec.  v2:= v5.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int`;
  #L3ea2f0.  v3:= 47I;
  #L3ea2f4.  if v0 >= v2 then goto L3ea312;
  #L3ea2f8.  v2:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea2fc.  v2:= v2.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L3ea300.  v1:= v1 + 1;
  #L3ea304.  call temp:= `indexOf`(v2, v3, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3ea30a.  v1:= temp;
  #L3ea30c.  v0:= v0 + 1;
  #L3ea310.  goto L3ea2ec;
  #L3ea312.  v2:= v1;
  #L3ea314.  v4:= v5.`org.simpleframework.xml.core.PathParser$PathSection.end` @type ^`int`;
  #L3ea318.  if v0 > v4 then goto L3ea34c;
  #L3ea31c.  v4:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea320.  v4:= v4.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L3ea324.  v2:= v2 + 1;
  #L3ea328.  call temp:= `indexOf`(v4, v3, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3ea32e.  v2:= temp;
  #L3ea330.  v4:= -1I;
  #L3ea332.  if v2 != v4 then goto L3ea346;
  #L3ea336.  v2:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea33a.  v2:= v2.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L3ea33e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ea344.  v2:= temp;
  #L3ea346.  v0:= v0 + 1;
  #L3ea34a.  goto L3ea314;
  #L3ea34c.  v0:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea350.  v0:= v0.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L3ea354.  v1:= v1 + 1;
  #L3ea358.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3ea35e.  v0:= temp @kind object;
  #L3ea360.  return v0 @kind object;
}
procedure `java.lang.String` `getFragment`(`org.simpleframework.xml.core.PathParser$PathSection` v5 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getFragment:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ea3cc.  v0:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea3d0.  v0:= v0.`org.simpleframework.xml.core.PathParser.start` @type ^`int`;
  #L3ea3d4.  v1:= 0I;
  #L3ea3d6.  v2:= 0I;
  #L3ea3d8.  v3:= v5.`org.simpleframework.xml.core.PathParser$PathSection.end` @type ^`int`;
  #L3ea3dc.  if v1 > v3 then goto L3ea41c;
  #L3ea3e0.  v3:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea3e4.  v4:= v3.`org.simpleframework.xml.core.PathParser.count` @type ^`int`;
  #L3ea3e8.  if v0 < v4 then goto L3ea3f2;
  #L3ea3ec.  v0:= v0 + 1;
  #L3ea3f0.  goto L3ea41c;
  #L3ea3f2.  v3:= v3.`org.simpleframework.xml.core.PathParser.data` @type ^`char`[] @kind object;
  #L3ea3f6.  v4:= v0 + 1;
  #L3ea3fa.  v0:= v3[v0] @kind char;
  #L3ea3fe.  v3:= 47I;
  #L3ea402.  if v0 != v3 then goto L3ea418;
  #L3ea406.  v1:= v1 + 1;
  #L3ea40a.  v0:= v5.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int`;
  #L3ea40e.  if v1 != v0 then goto L3ea418;
  #L3ea412.  v0:= v4;
  #L3ea414.  v2:= v0;
  #L3ea416.  goto L3ea3d8;
  #L3ea418.  v0:= v4;
  #L3ea41a.  goto L3ea3d8;
  #L3ea41c.  v1:= new `java.lang.String`;
  #L3ea420.  v3:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea424.  v3:= v3.`org.simpleframework.xml.core.PathParser.data` @type ^`char`[] @kind object;
  #L3ea428.  v0:= v0 + -1;
  #L3ea42c.  v0:= v0 - v2 @kind int;
  #L3ea42e.  call `<init>`(v1, v3, v2, v0) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L3ea434.  return v1 @kind object;
}
procedure `java.lang.String` `getAttribute`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea2bc.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3ea2c2.  v0:= temp @kind object;
  #L3ea2c4.  if v0 == 0 then goto L3ea2d4;
  #L3ea2c8.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea2cc.  call temp:= `getAttributePath`(v1, v0, v3) @signature `Lorg/simpleframework/xml/core/PathParser;.getAttributePath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3ea2d2.  v3:= temp @kind object;
  #L3ea2d4.  return v3 @kind object;
}
procedure `java.lang.String` `getElement`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea374.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3ea37a.  v0:= temp @kind object;
  #L3ea37c.  if v0 == 0 then goto L3ea38c;
  #L3ea380.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea384.  call temp:= `getElementPath`(v1, v0, v3) @signature `Lorg/simpleframework/xml/core/PathParser;.getElementPath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3ea38a.  v3:= temp @kind object;
  #L3ea38c.  return v3 @kind object;
}
procedure `java.lang.String` `getFirst`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getFirst:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea3a0.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea3a4.  v0:= v0.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L3ea3a8.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int`;
  #L3ea3ac.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ea3b2.  v0:= temp @kind object;
  #L3ea3b4.  v0:= (`java.lang.String`) v0 @kind object;
  #L3ea3b8.  return v0 @kind object;
}
procedure `int` `getIndex`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea288.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea28c.  v0:= v0.`org.simpleframework.xml.core.PathParser.indexes` @type ^`java.util.List` @kind object;
  #L3ea290.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int`;
  #L3ea294.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ea29a.  v0:= temp @kind object;
  #L3ea29c.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3ea2a0.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3ea2a6.  v0:= temp;
  #L3ea2a8.  return v0;
}
procedure `java.lang.String` `getLast`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getLast:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea448.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea44c.  v0:= v0.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L3ea450.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.end` @type ^`int`;
  #L3ea454.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ea45a.  v0:= temp @kind object;
  #L3ea45c.  v0:= (`java.lang.String`) v0 @kind object;
  #L3ea460.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.PathParser$PathSection` v1 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea474.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.section` @type ^`java.lang.String` @kind object;
  #L3ea478.  if v0 != 0 then goto L3ea488;
  #L3ea47c.  call temp:= `getCanonicalPath`(v1) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getCanonicalPath:()Ljava/lang/String;` @kind direct;
  #L3ea482.  v0:= temp @kind object;
  #L3ea484.  v1.`org.simpleframework.xml.core.PathParser$PathSection.section` @type ^`java.lang.String` := v0 @kind object;
  #L3ea488.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.section` @type ^`java.lang.String` @kind object;
  #L3ea48c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getPath`(`org.simpleframework.xml.core.PathParser$PathSection` v1 @kind this, `int` v2 ) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea55c.  v0:= 0I;
  #L3ea55e.  call temp:= `getPath`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L3ea564.  v2:= temp @kind object;
  #L3ea566.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getPath`(`org.simpleframework.xml.core.PathParser$PathSection` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ea578.  v0:= new `org.simpleframework.xml.core.PathParser$PathSection`;
  #L3ea57c.  v1:= v3.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea580.  v2:= v3.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int`;
  #L3ea584.  v2:= v2 + v4 @kind int;
  #L3ea586.  v4:= v3.`org.simpleframework.xml.core.PathParser$PathSection.end` @type ^`int`;
  #L3ea58a.  v4:= v4 - v5 @kind int;
  #L3ea58c.  call `<init>`(v0, v1, v2, v4) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.<init>:(Lorg/simpleframework/xml/core/PathParser;II)V` @kind direct;
  #L3ea592.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea4a0.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea4a4.  v0:= v0.`org.simpleframework.xml.core.PathParser.prefixes` @type ^`java.util.List` @kind object;
  #L3ea4a8.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int`;
  #L3ea4ac.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ea4b2.  v0:= temp @kind object;
  #L3ea4b4.  v0:= (`java.lang.String`) v0 @kind object;
  #L3ea4b8.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.PathParser$PathSection` v4 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.isAttribute:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ea200.  v0:= v4.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea204.  v1:= v0.`org.simpleframework.xml.core.PathParser.attribute` @type ^`boolean` @kind boolean;
  #L3ea208.  v2:= 0I;
  #L3ea20a.  if v1 == 0 then goto L3ea228;
  #L3ea20e.  v1:= v4.`org.simpleframework.xml.core.PathParser$PathSection.end` @type ^`int`;
  #L3ea212.  v0:= v0.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L3ea216.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ea21c.  v0:= temp;
  #L3ea21e.  v3:= 1I;
  #L3ea220.  v0:= v0 - v3 @kind int;
  #L3ea222.  if v1 < v0 then goto L3ea228;
  #L3ea226.  v2:= 1I;
  #L3ea228.  return v2;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea23c.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int`;
  #L3ea240.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.end` @type ^`int`;
  #L3ea244.  if v0 != v1 then goto L3ea24c;
  #L3ea248.  v0:= 1I;
  #L3ea24a.  goto L3ea24e;
  #L3ea24c.  v0:= 0I;
  #L3ea24e.  return v0;
}
procedure `boolean` `isPath`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.isPath:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea260.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.end` @type ^`int`;
  #L3ea264.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int`;
  #L3ea268.  v0:= v0 - v1 @kind int;
  #L3ea26a.  v1:= 1I;
  #L3ea26c.  if v0 < v1 then goto L3ea272;
  #L3ea270.  goto L3ea274;
  #L3ea272.  v1:= 0I;
  #L3ea274.  return v1;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.PathParser$PathSection` v3 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ea4f8.  v0:= v3.`org.simpleframework.xml.core.PathParser$PathSection.cache` @type ^`java.util.List` @kind object;
  #L3ea4fc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3ea502.  v0:= temp;
  #L3ea504.  if v0 == 0 then goto L3ea53c;
  #L3ea508.  v0:= v3.`org.simpleframework.xml.core.PathParser$PathSection.begin` @type ^`int`;
  #L3ea50c.  v1:= v3.`org.simpleframework.xml.core.PathParser$PathSection.end` @type ^`int`;
  #L3ea510.  if v0 > v1 then goto L3ea53c;
  #L3ea514.  v1:= v3.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L3ea518.  v1:= v1.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L3ea51c.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ea522.  v1:= temp @kind object;
  #L3ea524.  v1:= (`java.lang.String`) v1 @kind object;
  #L3ea528.  if v1 == 0 then goto L3ea536;
  #L3ea52c.  v2:= v3.`org.simpleframework.xml.core.PathParser$PathSection.cache` @type ^`java.util.List` @kind object;
  #L3ea530.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ea536.  v0:= v0 + 1;
  #L3ea53a.  goto L3ea50c;
  #L3ea53c.  v0:= v3.`org.simpleframework.xml.core.PathParser$PathSection.cache` @type ^`java.util.List` @kind object;
  #L3ea540.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ea546.  v0:= temp @kind object;
  #L3ea548.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.PathParser$PathSection` v1 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea4cc.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.path` @type ^`java.lang.String` @kind object;
  #L3ea4d0.  if v0 != 0 then goto L3ea4e0;
  #L3ea4d4.  call temp:= `getFragment`(v1) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getFragment:()Ljava/lang/String;` @kind direct;
  #L3ea4da.  v0:= temp @kind object;
  #L3ea4dc.  v1.`org.simpleframework.xml.core.PathParser$PathSection.path` @type ^`java.lang.String` := v0 @kind object;
  #L3ea4e0.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.path` @type ^`java.lang.String` @kind object;
  #L3ea4e4.  return v0 @kind object;
}
