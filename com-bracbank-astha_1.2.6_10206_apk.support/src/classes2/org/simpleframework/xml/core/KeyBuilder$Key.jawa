record `org.simpleframework.xml.core.KeyBuilder$Key` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.KeyBuilder$KeyType` `org.simpleframework.xml.core.KeyBuilder$Key.type` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.KeyBuilder$Key.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.KeyBuilder$Key` v0 @kind this, `org.simpleframework.xml.core.KeyBuilder$KeyType` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.<init>:(Lorg/simpleframework/xml/core/KeyBuilder$KeyType;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e7140.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e7146.  v0.`org.simpleframework.xml.core.KeyBuilder$Key.value` @type ^`java.lang.String` := v2 @kind object;
  #L3e714a.  v0.`org.simpleframework.xml.core.KeyBuilder$Key.type` @type ^`org.simpleframework.xml.core.KeyBuilder$KeyType` := v1 @kind object;
  #L3e714e.  return @kind void;
}
procedure `boolean` `equals`(`org.simpleframework.xml.core.KeyBuilder$Key` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e70a8.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.core.KeyBuilder$Key` @kind boolean;
  #L3e70ac.  if v0 == 0 then goto L3e70be;
  #L3e70b0.  v2:= (`org.simpleframework.xml.core.KeyBuilder$Key`) v2 @kind object;
  #L3e70b4.  call temp:= `equals`(v1, v2) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.equals:(Lorg/simpleframework/xml/core/KeyBuilder$Key;)Z` @kind virtual;
  #L3e70ba.  v2:= temp;
  #L3e70bc.  return v2;
  #L3e70be.  v2:= 0I;
  #L3e70c0.  return v2;
}
procedure `boolean` `equals`(`org.simpleframework.xml.core.KeyBuilder$Key` v2 @kind this, `org.simpleframework.xml.core.KeyBuilder$Key` v3 @kind object) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.equals:(Lorg/simpleframework/xml/core/KeyBuilder$Key;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e70d4.  v0:= v2.`org.simpleframework.xml.core.KeyBuilder$Key.type` @type ^`org.simpleframework.xml.core.KeyBuilder$KeyType` @kind object;
  #L3e70d8.  v1:= v3.`org.simpleframework.xml.core.KeyBuilder$Key.type` @type ^`org.simpleframework.xml.core.KeyBuilder$KeyType` @kind object;
  #L3e70dc.  if v0 != v1 then goto L3e70f2;
  #L3e70e0.  v3:= v3.`org.simpleframework.xml.core.KeyBuilder$Key.value` @type ^`java.lang.String` @kind object;
  #L3e70e4.  v0:= v2.`org.simpleframework.xml.core.KeyBuilder$Key.value` @type ^`java.lang.String` @kind object;
  #L3e70e8.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e70ee.  v3:= temp;
  #L3e70f0.  return v3;
  #L3e70f2.  v3:= 0I;
  #L3e70f4.  return v3;
}
procedure `int` `hashCode`(`org.simpleframework.xml.core.KeyBuilder$Key` v1 @kind this) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7108.  v0:= v1.`org.simpleframework.xml.core.KeyBuilder$Key.value` @type ^`java.lang.String` @kind object;
  #L3e710c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3e7112.  v0:= temp;
  #L3e7114.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.KeyBuilder$Key` v1 @kind this) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7128.  v0:= v1.`org.simpleframework.xml.core.KeyBuilder$Key.value` @type ^`java.lang.String` @kind object;
  #L3e712c.  return v0 @kind object;
}
