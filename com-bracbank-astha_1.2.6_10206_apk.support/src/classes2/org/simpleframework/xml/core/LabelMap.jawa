record `org.simpleframework.xml.core.LabelMap` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `java.lang.Iterable` @kind interface {
  `org.simpleframework.xml.core.Policy` `org.simpleframework.xml.core.LabelMap.policy` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.LabelMap` v1 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e7aec.  v0:= 0I;
  #L3e7aee.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L3e7af4.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.LabelMap` v0 @kind this, `org.simpleframework.xml.core.Policy` v1 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e7b08.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3e7b0e.  v0.`org.simpleframework.xml.core.LabelMap.policy` @type ^`org.simpleframework.xml.core.Policy` := v1 @kind object;
  #L3e7b12.  return @kind void;
}
procedure `java.lang.String`[] `getArray`(`org.simpleframework.xml.core.LabelMap` v1 @kind this, `java.util.Set` v2 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.getArray:(Ljava/util/Set;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e7970.  v0:= 0I;
  #L3e7972.  v0:= new `java.lang.String`[v0];
  #L3e7976.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3e797c.  v2:= temp @kind object;
  #L3e797e.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L3e7982.  return v2 @kind object;
}
procedure `java.lang.String`[] `getKeys`(`org.simpleframework.xml.core.LabelMap` v4 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.getKeys:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e7994.  v0:= new `java.util.HashSet`;
  #L3e7998.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3e799e.  call temp:= `iterator`(v4) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e79a4.  v1:= temp @kind object;
  #L3e79a6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e79ac.  v2:= temp;
  #L3e79ae.  if v2 == 0 then goto L3e79e0;
  #L3e79b2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e79b8.  v2:= temp @kind object;
  #L3e79ba.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L3e79be.  if v2 == 0 then goto L3e79a6;
  #L3e79c2.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L3e79c8.  v3:= temp @kind object;
  #L3e79ca.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L3e79d0.  v2:= temp @kind object;
  #L3e79d2.  call temp:= `add`(v0, v3) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e79d8.  call temp:= `add`(v0, v2) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e79de.  goto L3e79a6;
  #L3e79e0.  call temp:= `getArray`(v4, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getArray:(Ljava/util/Set;)[Ljava/lang/String;` @kind direct;
  #L3e79e6.  v0:= temp @kind object;
  #L3e79e8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getLabel`(`org.simpleframework.xml.core.LabelMap` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;

  #L3e7a78.  call temp:= `remove`(v0, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e7a7e.  v1:= temp @kind object;
  #L3e7a80.  v1:= (`org.simpleframework.xml.core.Label`) v1 @kind object;
  #L3e7a84.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.LabelMap` `getLabels`(`org.simpleframework.xml.core.LabelMap` v4 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e7a98.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L3e7a9c.  v1:= v4.`org.simpleframework.xml.core.LabelMap.policy` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L3e7aa0.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L3e7aa6.  call temp:= `iterator`(v4) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e7aac.  v1:= temp @kind object;
  #L3e7aae.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e7ab4.  v2:= temp;
  #L3e7ab6.  if v2 == 0 then goto L3e7ada;
  #L3e7aba.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e7ac0.  v2:= temp @kind object;
  #L3e7ac2.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L3e7ac6.  if v2 == 0 then goto L3e7aae;
  #L3e7aca.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L3e7ad0.  v3:= temp @kind object;
  #L3e7ad2.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e7ad8.  goto L3e7aae;
  #L3e7ada.  return v0 @kind object;
}
procedure `java.lang.String`[] `getPaths`(`org.simpleframework.xml.core.LabelMap` v3 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.getPaths:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e79fc.  v0:= new `java.util.HashSet`;
  #L3e7a00.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3e7a06.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3e7a0c.  v1:= temp @kind object;
  #L3e7a0e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e7a14.  v2:= temp;
  #L3e7a16.  if v2 == 0 then goto L3e7a3a;
  #L3e7a1a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e7a20.  v2:= temp @kind object;
  #L3e7a22.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L3e7a26.  if v2 == 0 then goto L3e7a0e;
  #L3e7a2a.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L3e7a30.  v2:= temp @kind object;
  #L3e7a32.  call temp:= `add`(v0, v2) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e7a38.  goto L3e7a0e;
  #L3e7a3a.  call temp:= `getArray`(v3, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getArray:(Ljava/util/Set;)[Ljava/lang/String;` @kind direct;
  #L3e7a40.  v0:= temp @kind object;
  #L3e7a42.  return v0 @kind object;
}
procedure `boolean` `isStrict`(`org.simpleframework.xml.core.LabelMap` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7928.  v0:= v1.`org.simpleframework.xml.core.LabelMap.policy` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L3e792c.  if v0 != 0 then goto L3e793a;
  #L3e7930.  call temp:= `isStrict`(v2) @signature `Lorg/simpleframework/xml/core/Context;.isStrict:()Z` @kind interface;
  #L3e7936.  v2:= temp;
  #L3e7938.  return v2;
  #L3e793a.  call temp:= `isStrict`(v2) @signature `Lorg/simpleframework/xml/core/Context;.isStrict:()Z` @kind interface;
  #L3e7940.  v2:= temp;
  #L3e7942.  if v2 == 0 then goto L3e795a;
  #L3e7946.  v2:= v1.`org.simpleframework.xml.core.LabelMap.policy` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L3e794a.  call temp:= `isStrict`(v2) @signature `Lorg/simpleframework/xml/core/Policy;.isStrict:()Z` @kind interface;
  #L3e7950.  v2:= temp;
  #L3e7952.  if v2 == 0 then goto L3e795a;
  #L3e7956.  v2:= 1I;
  #L3e7958.  goto L3e795c;
  #L3e795a.  v2:= 0I;
  #L3e795c.  return v2;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.LabelMap` v1 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7a54.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L3e7a5a.  v0:= temp @kind object;
  #L3e7a5c.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e7a62.  v0:= temp @kind object;
  #L3e7a64.  return v0 @kind object;
}
