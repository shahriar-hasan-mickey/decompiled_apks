record `org.simpleframework.xml.core.NamespaceDecorator` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Decorator` @kind interface {
  `org.simpleframework.xml.Namespace` `org.simpleframework.xml.core.NamespaceDecorator.primary` @AccessFlag PRIVATE;
  `java.util.List` `org.simpleframework.xml.core.NamespaceDecorator.scope` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.NamespaceDecorator` v1 @kind this) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e93e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e93ee.  v0:= new `java.util.ArrayList`;
  #L3e93f2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e93f8.  v1.`org.simpleframework.xml.core.NamespaceDecorator.scope` @type ^`java.util.List` := v0 @kind object;
  #L3e93fc.  return @kind void;
}
procedure `void` `namespace`(`org.simpleframework.xml.core.NamespaceDecorator` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.namespace:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e9470.  v0:= v1.`org.simpleframework.xml.core.NamespaceDecorator.primary` @type ^`org.simpleframework.xml.Namespace` @kind object;
  #L3e9474.  if v0 == 0 then goto L3e9486;
  #L3e9478.  call temp:= `reference`(v0) @signature `Lorg/simpleframework/xml/Namespace;.reference:()Ljava/lang/String;` @kind interface;
  #L3e947e.  v0:= temp @kind object;
  #L3e9480.  call `setReference`(v2, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setReference:(Ljava/lang/String;)V` @kind interface;
  #L3e9486.  return @kind void;
}
procedure `void` `scope`(`org.simpleframework.xml.core.NamespaceDecorator` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.scope:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e9498.  call temp:= `getNamespaces`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L3e949e.  v4:= temp @kind object;
  #L3e94a0.  v0:= v3.`org.simpleframework.xml.core.NamespaceDecorator.scope` @type ^`java.util.List` @kind object;
  #L3e94a4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e94aa.  v0:= temp @kind object;
  #L3e94ac.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e94b2.  v1:= temp;
  #L3e94b4.  if v1 == 0 then goto L3e94dc;
  #L3e94b8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e94be.  v1:= temp @kind object;
  #L3e94c0.  v1:= (`org.simpleframework.xml.Namespace`) v1 @kind object;
  #L3e94c4.  call temp:= `reference`(v1) @signature `Lorg/simpleframework/xml/Namespace;.reference:()Ljava/lang/String;` @kind interface;
  #L3e94ca.  v2:= temp @kind object;
  #L3e94cc.  call temp:= `prefix`(v1) @signature `Lorg/simpleframework/xml/Namespace;.prefix:()Ljava/lang/String;` @kind interface;
  #L3e94d2.  v1:= temp @kind object;
  #L3e94d4.  call temp:= `setReference`(v4, v2, v1) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.setReference:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3e94da.  goto L3e94ac;
  #L3e94dc.  return @kind void;
}
procedure `void` `add`(`org.simpleframework.xml.core.NamespaceDecorator` v1 @kind this, `org.simpleframework.xml.Namespace` v2 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9410.  v0:= v1.`org.simpleframework.xml.core.NamespaceDecorator.scope` @type ^`java.util.List` @kind object;
  #L3e9414.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e941a.  return @kind void;
}
procedure `void` `decorate`(`org.simpleframework.xml.core.NamespaceDecorator` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e942c.  v0:= 0I;
  #L3e942e.  call `decorate`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Decorator;)V` @kind virtual;
  #L3e9434.  return @kind void;
}
procedure `void` `decorate`(`org.simpleframework.xml.core.NamespaceDecorator` v0 @kind this, `org.simpleframework.xml.stream.OutputNode` v1 @kind object, `org.simpleframework.xml.core.Decorator` v2 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Decorator;)V` @AccessFlag PUBLIC {
    temp;

  #L3e9448.  if v2 == 0 then goto L3e9452;
  #L3e944c.  call `decorate`(v2, v1) @signature `Lorg/simpleframework/xml/core/Decorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind interface;
  #L3e9452.  call `scope`(v0, v1) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.scope:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind direct;
  #L3e9458.  call `namespace`(v0, v1) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.namespace:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind direct;
  #L3e945e.  return @kind void;
}
procedure `void` `set`(`org.simpleframework.xml.core.NamespaceDecorator` v0 @kind this, `org.simpleframework.xml.Namespace` v1 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.set:(Lorg/simpleframework/xml/Namespace;)V` @AccessFlag PUBLIC {
    temp;

  #L3e94f0.  if v1 == 0 then goto L3e94fa;
  #L3e94f4.  call `add`(v0, v1) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L3e94fa.  v0.`org.simpleframework.xml.core.NamespaceDecorator.primary` @type ^`org.simpleframework.xml.Namespace` := v1 @kind object;
  #L3e94fe.  return @kind void;
}
