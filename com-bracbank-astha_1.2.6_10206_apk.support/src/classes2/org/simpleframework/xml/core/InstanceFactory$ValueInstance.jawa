record `org.simpleframework.xml.core.InstanceFactory$ValueInstance` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Instance` @kind interface {
  `org.simpleframework.xml.core.InstanceFactory` `org.simpleframework.xml.core.InstanceFactory$ValueInstance.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.lang.Class` `org.simpleframework.xml.core.InstanceFactory$ValueInstance.type` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Value` `org.simpleframework.xml.core.InstanceFactory$ValueInstance.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v0 @kind this, `org.simpleframework.xml.core.InstanceFactory` v1 @kind object, `org.simpleframework.xml.strategy.Value` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.<init>:(Lorg/simpleframework/xml/core/InstanceFactory;Lorg/simpleframework/xml/strategy/Value;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e64c4.  v0.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.this$0` @type ^`org.simpleframework.xml.core.InstanceFactory` := v1 @kind object;
  #L3e64c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e64ce.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Value;.getType:()Ljava/lang/Class;` @kind interface;
  #L3e64d4.  v1:= temp @kind object;
  #L3e64d6.  v0.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.type` @type ^`java.lang.Class` := v1 @kind object;
  #L3e64da.  v0.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.value` @type ^`org.simpleframework.xml.strategy.Value` := v2 @kind object;
  #L3e64de.  return @kind void;
}
procedure `java.lang.Object` `getInstance`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v2 @kind this) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.getInstance:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6454.  v0:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.value` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L3e6458.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/strategy/Value;.isReference:()Z` @kind interface;
  #L3e645e.  v0:= temp;
  #L3e6460.  if v0 == 0 then goto L3e6472;
  #L3e6464.  v0:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.value` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L3e6468.  call temp:= `getValue`(v0) @signature `Lorg/simpleframework/xml/strategy/Value;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3e646e.  v0:= temp @kind object;
  #L3e6470.  return v0 @kind object;
  #L3e6472.  v0:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.this$0` @type ^`org.simpleframework.xml.core.InstanceFactory` @kind object;
  #L3e6476.  v1:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.type` @type ^`java.lang.Class` @kind object;
  #L3e647a.  call temp:= `getObject`(v0, v1) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.getObject:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L3e6480.  v0:= temp @kind object;
  #L3e6482.  v1:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.value` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L3e6486.  if v1 == 0 then goto L3e6490;
  #L3e648a.  call `setValue`(v1, v0) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L3e6490.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v1 @kind this) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e643c.  v0:= v1.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.type` @type ^`java.lang.Class` @kind object;
  #L3e6440.  return v0 @kind object;
}
procedure `boolean` `isReference`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v1 @kind this) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.isReference:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e641c.  v0:= v1.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.value` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L3e6420.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/strategy/Value;.isReference:()Z` @kind interface;
  #L3e6426.  v0:= temp;
  #L3e6428.  return v0;
}
procedure `java.lang.Object` `setInstance`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e64a4.  v0:= v1.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.value` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L3e64a8.  if v0 == 0 then goto L3e64b2;
  #L3e64ac.  call `setValue`(v0, v2) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L3e64b2.  return v2 @kind object;
}
