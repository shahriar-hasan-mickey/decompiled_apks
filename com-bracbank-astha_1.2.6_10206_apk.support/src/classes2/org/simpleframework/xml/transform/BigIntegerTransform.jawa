record `org.simpleframework.xml.transform.BigIntegerTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.BigIntegerTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f75b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f75b6.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.BigIntegerTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f753c.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.read:(Ljava/lang/String;)Ljava/math/BigInteger;` @kind virtual;
  #L3f7542.  v1:= temp @kind object;
  #L3f7544.  return v1 @kind object;
}
procedure `java.math.BigInteger` `read`(`org.simpleframework.xml.transform.BigIntegerTransform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.read:(Ljava/lang/String;)Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7594.  v0:= new `java.math.BigInteger`;
  #L3f7598.  call `<init>`(v0, v2) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f759e.  return v0 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.BigIntegerTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f7558.  v1:= (`java.math.BigInteger`) v1 @kind object;
  #L3f755c.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.write:(Ljava/math/BigInteger;)Ljava/lang/String;` @kind virtual;
  #L3f7562.  v1:= temp @kind object;
  #L3f7564.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.BigIntegerTransform` v0 @kind this, `java.math.BigInteger` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.write:(Ljava/math/BigInteger;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3f7578.  call temp:= `toString`(v1) @signature `Ljava/math/BigInteger;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f757e.  v1:= temp @kind object;
  #L3f7580.  return v1 @kind object;
}
