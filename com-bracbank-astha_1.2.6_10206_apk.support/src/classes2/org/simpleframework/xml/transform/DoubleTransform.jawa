record `org.simpleframework.xml.transform.DoubleTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.DoubleTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/DoubleTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f7fe0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f7fe6.  return @kind void;
}
procedure `java.lang.Double` `read`(`org.simpleframework.xml.transform.DoubleTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/DoubleTransform;.read:(Ljava/lang/String;)Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;

  #L3f7f6c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L3f7f72.  v1:= temp @kind object;
  #L3f7f74.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.DoubleTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/DoubleTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f7f88.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/DoubleTransform;.read:(Ljava/lang/String;)Ljava/lang/Double;` @kind virtual;
  #L3f7f8e.  v1:= temp @kind object;
  #L3f7f90.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.DoubleTransform` v0 @kind this, `java.lang.Double` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/DoubleTransform;.write:(Ljava/lang/Double;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3f7fa4.  call temp:= `toString`(v1) @signature `Ljava/lang/Double;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f7faa.  v1:= temp @kind object;
  #L3f7fac.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.DoubleTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/DoubleTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f7fc0.  v1:= (`java.lang.Double`) v1 @kind object;
  #L3f7fc4.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/DoubleTransform;.write:(Ljava/lang/Double;)Ljava/lang/String;` @kind virtual;
  #L3f7fca.  v1:= temp @kind object;
  #L3f7fcc.  return v1 @kind object;
}
