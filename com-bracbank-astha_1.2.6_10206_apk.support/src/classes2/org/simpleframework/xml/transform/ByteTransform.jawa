record `org.simpleframework.xml.transform.ByteTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f76c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f76ce.  return @kind void;
}
procedure `java.lang.Byte` `read`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.read:(Ljava/lang/String;)Ljava/lang/Byte;` @AccessFlag PUBLIC {
    temp;

  #L3f7654.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(Ljava/lang/String;)Ljava/lang/Byte;` @kind static;
  #L3f765a.  v1:= temp @kind object;
  #L3f765c.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f7670.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.read:(Ljava/lang/String;)Ljava/lang/Byte;` @kind virtual;
  #L3f7676.  v1:= temp @kind object;
  #L3f7678.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this, `java.lang.Byte` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.write:(Ljava/lang/Byte;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3f768c.  call temp:= `toString`(v1) @signature `Ljava/lang/Byte;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f7692.  v1:= temp @kind object;
  #L3f7694.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f76a8.  v1:= (`java.lang.Byte`) v1 @kind object;
  #L3f76ac.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.write:(Ljava/lang/Byte;)Ljava/lang/String;` @kind virtual;
  #L3f76b2.  v1:= temp @kind object;
  #L3f76b4.  return v1 @kind object;
}
