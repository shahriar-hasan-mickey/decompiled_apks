record `org.simpleframework.xml.transform.IntegerTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.IntegerTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/IntegerTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f833c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f8342.  return @kind void;
}
procedure `java.lang.Integer` `read`(`org.simpleframework.xml.transform.IntegerTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/IntegerTransform;.read:(Ljava/lang/String;)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;

  #L3f82c8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L3f82ce.  v1:= temp @kind object;
  #L3f82d0.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.IntegerTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/IntegerTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f82e4.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/IntegerTransform;.read:(Ljava/lang/String;)Ljava/lang/Integer;` @kind virtual;
  #L3f82ea.  v1:= temp @kind object;
  #L3f82ec.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.IntegerTransform` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/IntegerTransform;.write:(Ljava/lang/Integer;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3f8300.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f8306.  v1:= temp @kind object;
  #L3f8308.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.IntegerTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/IntegerTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f831c.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L3f8320.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/IntegerTransform;.write:(Ljava/lang/Integer;)Ljava/lang/String;` @kind virtual;
  #L3f8326.  v1:= temp @kind object;
  #L3f8328.  return v1 @kind object;
}
