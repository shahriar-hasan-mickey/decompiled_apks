record `r2.d` @kind class @AccessFlag PUBLIC {
}
global `r2.e` `@@r2.d.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `s2.a`[] `@@r2.d.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr2/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3fafec.  v0:= 0I;
  #L3fafee.  v1:= "kotlin.reflect.jvm.internal.ReflectionFactoryImpl" @kind object;
  #L3faff2.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3faff8.  v1:= temp @kind object;
  #L3faffa.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L3fb000.  v1:= temp @kind object;
  #L3fb002.  v1:= (`r2.e`) v1 @kind object;
  #L3fb006.  v0:= v1 @kind object;
  #L3fb008.  goto L3fb00c;
  #L3fb00a.  
  #L3fb00c.  if v0 == 0 then goto L3fb012;
  #L3fb010.  goto L3fb01c;
  #L3fb012.  v0:= new `r2.e`;
  #L3fb016.  call `<init>`(v0) @signature `Lr2/e;.<init>:()V` @kind direct;
  #L3fb01c.  `@@r2.d.a` @type ^`r2.e` := v0 @kind object;
  #L3fb020.  v0:= 0I;
  #L3fb022.  v0:= new `s2.a`[v0];
  #L3fb026.  `@@r2.d.b` @type ^`s2.a`[] := v0 @kind object;
  #L3fb02a.  return @kind void;
  catch `java.lang.ClassCastException` @[L3fafee..L3fb006] goto L3fb00a;
  catch `java.lang.ClassNotFoundException` @[L3fafee..L3fb006] goto L3fb00a;
  catch `java.lang.InstantiationException` @[L3fafee..L3fb006] goto L3fb00a;
  catch `java.lang.IllegalAccessException` @[L3fafee..L3fb006] goto L3fb00a;
}
procedure `java.lang.String` `a`(`kotlin.jvm.internal.Lambda` v1 @kind object) @signature `Lr2/d;.a:(Lkotlin/jvm/internal/Lambda;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fafcc.  v0:= `@@r2.d.a` @type ^`r2.e` @kind object;
  #L3fafd0.  call temp:= `a`(v0, v1) @signature `Lr2/e;.a:(Lkotlin/jvm/internal/Lambda;)Ljava/lang/String;` @kind virtual;
  #L3fafd6.  v1:= temp @kind object;
  #L3fafd8.  return v1 @kind object;
}
