record `r2.c` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`r2.c` v0 @kind this) @signature `Lr2/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3fade8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fadee.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v0 @kind object) @signature `Lr2/c;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3fae00.  if v0 != 0 then goto L3fae0a;
  #L3fae04.  call `g`() @signature `Lr2/c;.g:()V` @kind static;
  #L3fae0a.  return @kind void;
}
procedure `void` `b`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lr2/c;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fae1c.  if v1 == 0 then goto L3fae22;
  #L3fae20.  return @kind void;
  #L3fae22.  v1:= new `java.lang.NullPointerException`;
  #L3fae26.  v0:= new `java.lang.StringBuilder`;
  #L3fae2a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fae30.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fae36.  v2:= " must not be null" @kind object;
  #L3fae3a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fae40.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fae46.  v2:= temp @kind object;
  #L3fae48.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fae4e.  call temp:= `e`(v1) @signature `Lr2/c;.e:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3fae54.  v1:= temp @kind object;
  #L3fae56.  v1:= (`java.lang.NullPointerException`) v1 @kind object;
  #L3fae5a.  throw v1;
}
procedure `void` `c`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lr2/c;.c:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3fae6c.  if v0 != 0 then goto L3fae76;
  #L3fae70.  call `h`(v1) @signature `Lr2/c;.h:(Ljava/lang/String;)V` @kind static;
  #L3fae76.  return @kind void;
}
procedure `java.lang.String` `d`(`java.lang.String` v4 @kind object) @signature `Lr2/c;.d:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3face8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3facee.  v0:= temp @kind object;
  #L3facf0.  call temp:= `getStackTrace`(v0) @signature `Ljava/lang/Thread;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L3facf6.  v0:= temp @kind object;
  #L3facf8.  v1:= 4I;
  #L3facfa.  v0:= v0[v1] @kind object;
  #L3facfe.  call temp:= `getClassName`(v0) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L3fad04.  v1:= temp @kind object;
  #L3fad06.  call temp:= `getMethodName`(v0) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L3fad0c.  v0:= temp @kind object;
  #L3fad0e.  v2:= new `java.lang.StringBuilder`;
  #L3fad12.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fad18.  v3:= "Parameter specified as non-null is null: method " @kind object;
  #L3fad1c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fad22.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fad28.  v1:= "." @kind object;
  #L3fad2c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fad32.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fad38.  v0:= ", parameter " @kind object;
  #L3fad3c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fad42.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fad48.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fad4e.  v4:= temp @kind object;
  #L3fad50.  return v4 @kind object;
}
procedure `java.lang.Throwable` `e`(`java.lang.Throwable` v1 @kind object) @signature `Lr2/c;.e:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fad64.  v0:= constclass @type ^`r2.c` @kind object;
  #L3fad68.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3fad6e.  v0:= temp @kind object;
  #L3fad70.  call temp:= `f`(v1, v0) @signature `Lr2/c;.f:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;` @kind static;
  #L3fad76.  v1:= temp @kind object;
  #L3fad78.  return v1 @kind object;
}
procedure `java.lang.Throwable` `f`(`java.lang.Throwable` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lr2/c;.f:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fad8c.  call temp:= `getStackTrace`(v5) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L3fad92.  v0:= temp @kind object;
  #L3fad94.  v1:= length @variable v0;
  #L3fad96.  v2:= -1I;
  #L3fad98.  v3:= 0I;
  #L3fad9a.  if v3 >= v1 then goto L3fadbe;
  #L3fad9e.  v4:= v0[v3] @kind object;
  #L3fada2.  call temp:= `getClassName`(v4) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L3fada8.  v4:= temp @kind object;
  #L3fadaa.  call temp:= `equals`(v6, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fadb0.  v4:= temp;
  #L3fadb2.  if v4 == 0 then goto L3fadb8;
  #L3fadb6.  v2:= v3;
  #L3fadb8.  v3:= v3 + 1;
  #L3fadbc.  goto L3fad9a;
  #L3fadbe.  v2:= v2 + 1;
  #L3fadc2.  call temp:= `copyOfRange`(v0, v2, v1) @signature `Ljava/util/Arrays;.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;` @kind static;
  #L3fadc8.  v6:= temp @kind object;
  #L3fadca.  v6:= (`java.lang.StackTraceElement`[]) v6 @kind object;
  #L3fadce.  call `setStackTrace`(v5, v6) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L3fadd4.  return v5 @kind object;
}
procedure `void` `g`() @signature `Lr2/c;.g:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fae88.  v0:= new `java.lang.NullPointerException`;
  #L3fae8c.  call `<init>`(v0) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L3fae92.  call temp:= `e`(v0) @signature `Lr2/c;.e:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3fae98.  v0:= temp @kind object;
  #L3fae9a.  v0:= (`java.lang.NullPointerException`) v0 @kind object;
  #L3fae9e.  throw v0;
}
procedure `void` `h`(`java.lang.String` v1 @kind object) @signature `Lr2/c;.h:(Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3faeb0.  v0:= new `java.lang.NullPointerException`;
  #L3faeb4.  call temp:= `d`(v1) @signature `Lr2/c;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3faeba.  v1:= temp @kind object;
  #L3faebc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3faec2.  call temp:= `e`(v0) @signature `Lr2/c;.e:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3faec8.  v1:= temp @kind object;
  #L3faeca.  v1:= (`java.lang.NullPointerException`) v1 @kind object;
  #L3faece.  throw v1;
}
procedure `void` `i`(`java.lang.String` v1 @kind object) @signature `Lr2/c;.i:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3faee0.  v0:= new `kotlin.UninitializedPropertyAccessException`;
  #L3faee4.  call `<init>`(v0, v1) @signature `Lkotlin/UninitializedPropertyAccessException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3faeea.  call temp:= `e`(v0) @signature `Lr2/c;.e:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3faef0.  v1:= temp @kind object;
  #L3faef2.  v1:= (`kotlin.UninitializedPropertyAccessException`) v1 @kind object;
  #L3faef6.  throw v1;
}
procedure `void` `j`(`java.lang.String` v2 @kind object) @signature `Lr2/c;.j:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3faf08.  v0:= new `java.lang.StringBuilder`;
  #L3faf0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3faf12.  v1:= "lateinit property " @kind object;
  #L3faf16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3faf1c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3faf22.  v2:= " has not been initialized" @kind object;
  #L3faf26.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3faf2c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3faf32.  v2:= temp @kind object;
  #L3faf34.  call `i`(v2) @signature `Lr2/c;.i:(Ljava/lang/String;)V` @kind static;
  #L3faf3a.  return @kind void;
}
