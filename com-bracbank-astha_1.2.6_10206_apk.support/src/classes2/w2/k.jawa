record `w2.k` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Protocol` `w2.k.a` @AccessFlag PUBLIC_FINAL;
  `int` `w2.k.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `w2.k.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`w2.k` v0 @kind this, `okhttp3.Protocol` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lw2/k;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L405e6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L405e72.  v0.`w2.k.a` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L405e76.  v0.`w2.k.b` @type ^`int` := v2;
  #L405e7a.  v0.`w2.k.c` @type ^`java.lang.String` := v3 @kind object;
  #L405e7e.  return @kind void;
}
procedure `w2.k` `a`(`java.lang.String` v8 @kind object) @signature `Lw2/k;.a:(Ljava/lang/String;)Lw2/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L405e90.  v0:= "HTTP/1." @kind object;
  #L405e94.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L405e9a.  v0:= temp;
  #L405e9c.  v1:= 32I;
  #L405ea0.  v2:= 4I;
  #L405ea2.  v3:= 9I;
  #L405ea6.  v4:= "Unexpected status line: " @kind object;
  #L405eaa.  if v0 == 0 then goto L405f42;
  #L405eae.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L405eb4.  v0:= temp;
  #L405eb6.  if v0 < v3 then goto L405f18;
  #L405eba.  v0:= 8I;
  #L405ebe.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L405ec4.  v0:= temp;
  #L405ec6.  if v0 != v1 then goto L405f18;
  #L405eca.  v0:= 7I;
  #L405ecc.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L405ed2.  v0:= temp;
  #L405ed4.  v0:= v0 + -48;
  #L405ed8.  if v0 != 0 then goto L405ee2;
  #L405edc.  v0:= `@@okhttp3.Protocol.a` @type ^`okhttp3.Protocol` @kind object;
  #L405ee0.  goto L405f58;
  #L405ee2.  v5:= 1I;
  #L405ee4.  if v0 != v5 then goto L405eee;
  #L405ee8.  v0:= `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol` @kind object;
  #L405eec.  goto L405f58;
  #L405eee.  v0:= new `java.net.ProtocolException`;
  #L405ef2.  v1:= new `java.lang.StringBuilder`;
  #L405ef6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405efc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405f02.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405f08.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405f0e.  v8:= temp @kind object;
  #L405f10.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405f16.  throw v0;
  #L405f18.  v0:= new `java.net.ProtocolException`;
  #L405f1c.  v1:= new `java.lang.StringBuilder`;
  #L405f20.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405f26.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405f2c.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405f32.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405f38.  v8:= temp @kind object;
  #L405f3a.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405f40.  throw v0;
  #L405f42.  v0:= "ICY " @kind object;
  #L405f46.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L405f4c.  v0:= temp;
  #L405f4e.  if v0 == 0 then goto L40602a;
  #L405f52.  v0:= `@@okhttp3.Protocol.a` @type ^`okhttp3.Protocol` @kind object;
  #L405f56.  v3:= 4I;
  #L405f58.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L405f5e.  v5:= temp;
  #L405f60.  v6:= v3 + 3;
  #L405f64.  if v5 < v6 then goto L406000;
  #L405f68.  call temp:= `substring`(v8, v3, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L405f6e.  v5:= temp @kind object;
  #L405f70.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L405f76.  v5:= temp;
  #L405f78.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L405f7e.  v7:= temp;
  #L405f80.  if v7 <= v6 then goto L405fc6;
  #L405f84.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L405f8a.  v6:= temp;
  #L405f8c.  if v6 != v1 then goto L405f9c;
  #L405f90.  v3:= v3 + v2 @kind int;
  #L405f92.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L405f98.  v8:= temp @kind object;
  #L405f9a.  goto L405fca;
  #L405f9c.  v0:= new `java.net.ProtocolException`;
  #L405fa0.  v1:= new `java.lang.StringBuilder`;
  #L405fa4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405faa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405fb0.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405fb6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405fbc.  v8:= temp @kind object;
  #L405fbe.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405fc4.  throw v0;
  #L405fc6.  v8:= "" @kind object;
  #L405fca.  v1:= new `w2.k`;
  #L405fce.  call `<init>`(v1, v0, v5, v8) @signature `Lw2/k;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L405fd4.  return v1 @kind object;
  #L405fd6.  v0:= new `java.net.ProtocolException`;
  #L405fda.  v1:= new `java.lang.StringBuilder`;
  #L405fde.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405fe4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405fea.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405ff0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405ff6.  v8:= temp @kind object;
  #L405ff8.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405ffe.  throw v0;
  #L406000.  v0:= new `java.net.ProtocolException`;
  #L406004.  v1:= new `java.lang.StringBuilder`;
  #L406008.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40600e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406014.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40601a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L406020.  v8:= temp @kind object;
  #L406022.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L406028.  throw v0;
  #L40602a.  v0:= new `java.net.ProtocolException`;
  #L40602e.  v1:= new `java.lang.StringBuilder`;
  #L406032.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L406038.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40603e.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406044.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40604a.  v8:= temp @kind object;
  #L40604c.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L406052.  throw v0;
  catch `java.lang.NumberFormatException` @[L405f68..L405f78] goto L405fd6;
}
procedure `java.lang.String` `toString`(`w2.k` v3 @kind this) @signature `Lw2/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L405e00.  v0:= new `java.lang.StringBuilder`;
  #L405e04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405e0a.  v1:= v3.`w2.k.a` @type ^`okhttp3.Protocol` @kind object;
  #L405e0e.  v2:= `@@okhttp3.Protocol.a` @type ^`okhttp3.Protocol` @kind object;
  #L405e12.  if v1 != v2 then goto L405e1c;
  #L405e16.  v1:= "HTTP/1.0" @kind object;
  #L405e1a.  goto L405e20;
  #L405e1c.  v1:= "HTTP/1.1" @kind object;
  #L405e20.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e26.  v1:= 32I;
  #L405e2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e30.  v2:= v3.`w2.k.b` @type ^`int`;
  #L405e34.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e3a.  v2:= v3.`w2.k.c` @type ^`java.lang.String` @kind object;
  #L405e3e.  if v2 == 0 then goto L405e52;
  #L405e42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e48.  v1:= v3.`w2.k.c` @type ^`java.lang.String` @kind object;
  #L405e4c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405e52.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L405e58.  v0:= temp @kind object;
  #L405e5a.  return v0 @kind object;
}
