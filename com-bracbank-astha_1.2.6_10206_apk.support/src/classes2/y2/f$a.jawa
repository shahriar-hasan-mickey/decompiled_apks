record `y2.f$a` @kind class @AccessFlag FINAL extends `okio.q` @kind interface {
  `okio.e` `y2.f$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `y2.f$a.b` @AccessFlag ;
  `byte` `y2.f$a.c` @AccessFlag ;
  `int` `y2.f$a.d` @AccessFlag ;
  `int` `y2.f$a.e` @AccessFlag ;
  `short` `y2.f$a.f` @AccessFlag ;
}
procedure `void` `<init>`(`y2.f$a` v0 @kind this, `okio.e` v1 @kind object) @signature `Ly2/f$a;.<init>:(Lokio/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40b310.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40b316.  v0.`y2.f$a.a` @type ^`okio.e` := v1 @kind object;
  #L40b31a.  return @kind void;
}
procedure `void` `g`(`y2.f$a` v7 @kind this) @signature `Ly2/f$a;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L40b340.  v0:= v7.`y2.f$a.d` @type ^`int`;
  #L40b344.  v1:= v7.`y2.f$a.a` @type ^`okio.e` @kind object;
  #L40b348.  call temp:= `V`(v1) @signature `Ly2/f;.V:(Lokio/e;)I` @kind static;
  #L40b34e.  v1:= temp;
  #L40b350.  v7.`y2.f$a.e` @type ^`int` := v1;
  #L40b354.  v7.`y2.f$a.b` @type ^`int` := v1;
  #L40b358.  v1:= v7.`y2.f$a.a` @type ^`okio.e` @kind object;
  #L40b35c.  call temp:= `readByte`(v1) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L40b362.  v1:= temp;
  #L40b364.  v1:= v1 ^& 255;
  #L40b368.  v1:= (`byte`) v1 @kind i2b;
  #L40b36a.  v2:= v7.`y2.f$a.a` @type ^`okio.e` @kind object;
  #L40b36e.  call temp:= `readByte`(v2) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L40b374.  v2:= temp;
  #L40b376.  v2:= v2 ^& 255;
  #L40b37a.  v2:= (`byte`) v2 @kind i2b;
  #L40b37c.  v7.`y2.f$a.c` @type ^`byte` := v2 @kind byte;
  #L40b380.  v2:= `@@y2.f.e` @type ^`java.util.logging.Logger` @kind object;
  #L40b384.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L40b388.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L40b38e.  v3:= temp;
  #L40b390.  v4:= 1I;
  #L40b392.  if v3 == 0 then goto L40b3b0;
  #L40b396.  v3:= v7.`y2.f$a.d` @type ^`int`;
  #L40b39a.  v5:= v7.`y2.f$a.b` @type ^`int`;
  #L40b39e.  v6:= v7.`y2.f$a.c` @type ^`byte` @kind byte;
  #L40b3a2.  call temp:= `b`(v4, v3, v5, v1, v6) @signature `Ly2/c;.b:(ZIIBB)Ljava/lang/String;` @kind static;
  #L40b3a8.  v3:= temp @kind object;
  #L40b3aa.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L40b3b0.  v2:= v7.`y2.f$a.a` @type ^`okio.e` @kind object;
  #L40b3b4.  call temp:= `readInt`(v2) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L40b3ba.  v2:= temp;
  #L40b3bc.  v3:= 2147483647I;
  #L40b3c2.  v2:= v2 ^& v3 @kind int;
  #L40b3c4.  v7.`y2.f$a.d` @type ^`int` := v2;
  #L40b3c8.  v3:= 9I;
  #L40b3cc.  v5:= 0I;
  #L40b3ce.  if v1 != v3 then goto L40b3ea;
  #L40b3d2.  if v2 != v0 then goto L40b3d8;
  #L40b3d6.  return @kind void;
  #L40b3d8.  v0:= new `java.lang.Object`[v5];
  #L40b3dc.  v1:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L40b3e0.  call temp:= `d`(v1, v0) @signature `Ly2/c;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L40b3e6.  v0:= temp @kind object;
  #L40b3e8.  throw v0;
  #L40b3ea.  v0:= new `java.lang.Object`[v4];
  #L40b3ee.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L40b3f4.  v1:= temp @kind object;
  #L40b3f6.  v0[v5]:= v1 @kind object;
  #L40b3fa.  v1:= "%s != TYPE_CONTINUATION" @kind object;
  #L40b3fe.  call temp:= `d`(v1, v0) @signature `Ly2/c;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L40b404.  v0:= temp @kind object;
  #L40b406.  throw v0;
}
procedure `long` `I`(`y2.f$a` v6 @kind this, `okio.c` v7 @kind object, `long` v8 ) @signature `Ly2/f$a;.I:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40b278.  v0:= v6.`y2.f$a.e` @type ^`int`;
  #L40b27c.  v1:= -1L;
  #L40b280.  if v0 != 0 then goto L40b2b0;
  #L40b284.  v0:= v6.`y2.f$a.a` @type ^`okio.e` @kind object;
  #L40b288.  v3:= v6.`y2.f$a.f` @type ^`short` @kind short;
  #L40b28c.  v3:= (`long`) v3 @kind i2l;
  #L40b28e.  call `f`(v0, v3) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L40b294.  v0:= 0I;
  #L40b296.  v6.`y2.f$a.f` @type ^`short` := v0 @kind char;
  #L40b29a.  v0:= v6.`y2.f$a.c` @type ^`byte` @kind byte;
  #L40b29e.  v0:= v0 ^& 4;
  #L40b2a2.  if v0 == 0 then goto L40b2a8;
  #L40b2a6.  return v1 @kind wide;
  #L40b2a8.  call `g`(v6) @signature `Ly2/f$a;.g:()V` @kind direct;
  #L40b2ae.  goto L40b278;
  #L40b2b0.  v3:= v6.`y2.f$a.a` @type ^`okio.e` @kind object;
  #L40b2b4.  v4:= (`long`) v0 @kind i2l;
  #L40b2b6.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L40b2bc.  v8:= temp @kind wide;
  #L40b2be.  call temp:= `I`(v3, v7, v8) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L40b2c4.  v7:= temp @kind wide;
  #L40b2c6.  v9:= lcmp(v7, v1);
  #L40b2ca.  if v9 != 0 then goto L40b2d0;
  #L40b2ce.  return v1 @kind wide;
  #L40b2d0.  v9:= v6.`y2.f$a.e` @type ^`int`;
  #L40b2d4.  v0:= (`long`) v9 @kind i2l;
  #L40b2d6.  v0:= v0 - v7 @kind long;
  #L40b2d8.  v9:= (`int`) v0 @kind l2i;
  #L40b2da.  v6.`y2.f$a.e` @type ^`int` := v9;
  #L40b2de.  return v7 @kind wide;
}
procedure `void` `close`(`y2.f$a` v0 @kind this) @signature `Ly2/f$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L40b32c.  return @kind void;
}
procedure `okio.r` `e`(`y2.f$a` v1 @kind this) @signature `Ly2/f$a;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b2f0.  v0:= v1.`y2.f$a.a` @type ^`okio.e` @kind object;
  #L40b2f4.  call temp:= `e`(v0) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L40b2fa.  v0:= temp @kind object;
  #L40b2fc.  return v0 @kind object;
}
