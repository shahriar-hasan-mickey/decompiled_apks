record `y2.h` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `okio.d` `y2.h.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `y2.h.b` @AccessFlag PRIVATE_FINAL;
  `okio.c` `y2.h.c` @AccessFlag PRIVATE_FINAL;
  `int` `y2.h.d` @AccessFlag PRIVATE;
  `boolean` `y2.h.e` @AccessFlag PRIVATE;
  `y2.b$b` `y2.h.f` @AccessFlag FINAL;
}
global `java.util.logging.Logger` `@@y2.h.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ly2/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L40cca0.  v0:= constclass @type ^`y2.c` @kind object;
  #L40cca4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L40ccaa.  v0:= temp @kind object;
  #L40ccac.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L40ccb2.  v0:= temp @kind object;
  #L40ccb4.  `@@y2.h.g` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L40ccb8.  return @kind void;
}
procedure `void` `<init>`(`y2.h` v0 @kind this, `okio.d` v1 @kind object, `boolean` v2 ) @signature `Ly2/h;.<init>:(Lokio/d;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40cccc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40ccd2.  v0.`y2.h.a` @type ^`okio.d` := v1 @kind object;
  #L40ccd6.  v0.`y2.h.b` @type ^`boolean` := v2 @kind boolean;
  #L40ccda.  v1:= new `okio.c`;
  #L40ccde.  call `<init>`(v1) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L40cce4.  v0.`y2.h.c` @type ^`okio.c` := v1 @kind object;
  #L40cce8.  v2:= new `y2.b$b`;
  #L40ccec.  call `<init>`(v2, v1) @signature `Ly2/b$b;.<init>:(Lokio/c;)V` @kind direct;
  #L40ccf2.  v0.`y2.h.f` @type ^`y2.b$b` := v2 @kind object;
  #L40ccf6.  v1:= 16384I;
  #L40ccfa.  v0.`y2.h.d` @type ^`int` := v1;
  #L40ccfe.  return @kind void;
}
procedure `void` `X`(`y2.h` v7 @kind this, `int` v8 , `long` v9 ) @signature `Ly2/h;.X:(IJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L40d4d4.  v0:= 0L;
  #L40d4d8.  v2:= lcmp(v9, v0);
  #L40d4dc.  if v2 <= 0 then goto L40d51c;
  #L40d4e0.  v2:= v7.`y2.h.d` @type ^`int`;
  #L40d4e4.  v2:= (`long`) v2 @kind i2l;
  #L40d4e6.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L40d4ec.  v2:= temp @kind wide;
  #L40d4ee.  v3:= (`int`) v2 @kind l2i;
  #L40d4f0.  v4:= (`long`) v3 @kind i2l;
  #L40d4f2.  v9:= v9 - v4 @kind long;
  #L40d4f4.  v2:= 9I;
  #L40d4f8.  v6:= lcmp(v9, v0);
  #L40d4fc.  if v6 != 0 then goto L40d504;
  #L40d500.  v0:= 4I;
  #L40d502.  goto L40d506;
  #L40d504.  v0:= 0I;
  #L40d506.  call `s`(v7, v8, v3, v2, v0) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40d50c.  v0:= v7.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d510.  v1:= v7.`y2.h.c` @type ^`okio.c` @kind object;
  #L40d514.  call `A`(v0, v1, v4) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L40d51a.  goto L40d4d4;
  #L40d51c.  return @kind void;
}
procedure `void` `Y`(`okio.d` v1 @kind object, `int` v2 ) @signature `Ly2/h;.Y:(Lokio/d;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L40d530.  v0:= v2 ^>> 16;
  #L40d534.  v0:= v0 ^& 255;
  #L40d538.  call temp:= `writeByte`(v1, v0) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L40d53e.  v0:= v2 ^>> 8;
  #L40d542.  v0:= v0 ^& 255;
  #L40d546.  call temp:= `writeByte`(v1, v0) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L40d54c.  v2:= v2 ^& 255;
  #L40d550.  call temp:= `writeByte`(v1, v2) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L40d556.  return @kind void;
}
procedure `void` `K`(`y2.h` v3 @kind this, `int` v4 , `okhttp3.internal.http2.ErrorCode` v5 @kind object, `byte`[] v6 @kind object) @signature `Ly2/h;.K:(ILokhttp3/internal/http2/ErrorCode;[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40d038.  @monitorenter v3
  #L40d03a.  v0:= v3.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40d03e.  if v0 != 0 then goto L40d0a4;
  #L40d042.  v0:= v5.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L40d046.  v1:= -1I;
  #L40d048.  v2:= 0I;
  #L40d04a.  if v0 == v1 then goto L40d092;
  #L40d04e.  v0:= length @variable v6;
  #L40d050.  v0:= v0 + 8;
  #L40d054.  v1:= 7I;
  #L40d056.  call `s`(v3, v2, v0, v1, v2) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40d05c.  v0:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d060.  call temp:= `writeInt`(v0, v4) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40d066.  v4:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d06a.  v5:= v5.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L40d06e.  call temp:= `writeInt`(v4, v5) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40d074.  v4:= length @variable v6;
  #L40d076.  if v4 <= 0 then goto L40d084;
  #L40d07a.  v4:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d07e.  call temp:= `write`(v4, v6) @signature `Lokio/d;.write:([B)Lokio/d;` @kind interface;
  #L40d084.  v4:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d088.  call `flush`(v4) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40d08e.  @monitorexit v3
  #L40d090.  return @kind void;
  #L40d092.  v4:= "errorCode.httpCode == -1" @kind object;
  #L40d096.  v5:= new `java.lang.Object`[v2];
  #L40d09a.  call temp:= `c`(v4, v5) @signature `Ly2/c;.c:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L40d0a0.  v4:= temp @kind object;
  #L40d0a2.  throw v4;
  #L40d0a4.  v4:= new `java.io.IOException`;
  #L40d0a8.  v5:= "closed" @kind object;
  #L40d0ac.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d0b2.  throw v4;
  #L40d0b4.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40d0b6.  @monitorexit v3
  #L40d0b8.  throw v4;
  catch `java.lang.Throwable` @[L40d03a..L40d08e] goto L40d0b4;
  catch `java.lang.Throwable` @[L40d092..L40d0b4] goto L40d0b4;
}
procedure `int` `L`(`y2.h` v1 @kind this) @signature `Ly2/h;.L:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40cc88.  v0:= v1.`y2.h.d` @type ^`int`;
  #L40cc8c.  return v0;
}
procedure `void` `R`(`y2.h` v6 @kind this, `boolean` v7 , `int` v8 , `java.util.List` v9 @kind object) @signature `Ly2/h;.R:(ZILjava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40d0e0.  v0:= v6.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40d0e4.  if v0 != 0 then goto L40d14c;
  #L40d0e8.  v0:= v6.`y2.h.f` @type ^`y2.b$b` @kind object;
  #L40d0ec.  call `g`(v0, v9) @signature `Ly2/b$b;.g:(Ljava/util/List;)V` @kind virtual;
  #L40d0f2.  v9:= v6.`y2.h.c` @type ^`okio.c` @kind object;
  #L40d0f6.  call temp:= `g0`(v9) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L40d0fc.  v0:= temp @kind wide;
  #L40d0fe.  v9:= v6.`y2.h.d` @type ^`int`;
  #L40d102.  v2:= (`long`) v9 @kind i2l;
  #L40d104.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L40d10a.  v2:= temp @kind wide;
  #L40d10c.  v9:= (`int`) v2 @kind l2i;
  #L40d10e.  v2:= (`long`) v9 @kind i2l;
  #L40d110.  v4:= lcmp(v0, v2);
  #L40d114.  if v4 != 0 then goto L40d11c;
  #L40d118.  v5:= 4I;
  #L40d11a.  goto L40d11e;
  #L40d11c.  v5:= 0I;
  #L40d11e.  if v7 == 0 then goto L40d128;
  #L40d122.  v7:= v5 ^| 1;
  #L40d126.  v5:= (`byte`) v7 @kind i2b;
  #L40d128.  v7:= 1I;
  #L40d12a.  call `s`(v6, v8, v9, v7, v5) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40d130.  v7:= v6.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d134.  v9:= v6.`y2.h.c` @type ^`okio.c` @kind object;
  #L40d138.  call `A`(v7, v9, v2) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L40d13e.  if v4 <= 0 then goto L40d14a;
  #L40d142.  v0:= v0 - v2 @kind long;
  #L40d144.  call `X`(v6, v8, v0) @signature `Ly2/h;.X:(IJ)V` @kind direct;
  #L40d14a.  return @kind void;
  #L40d14c.  v7:= new `java.io.IOException`;
  #L40d150.  v8:= "closed" @kind object;
  #L40d154.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d15a.  throw v7;
}
procedure `void` `T`(`y2.h` v8 @kind this, `int` v9 , `int` v10 , `java.util.List` v11 @kind object) @signature `Ly2/h;.T:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L40d1ec.  @monitorenter v8
  #L40d1ee.  v0:= v8.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40d1f2.  if v0 != 0 then goto L40d26a;
  #L40d1f6.  v0:= v8.`y2.h.f` @type ^`y2.b$b` @kind object;
  #L40d1fa.  call `g`(v0, v11) @signature `Ly2/b$b;.g:(Ljava/util/List;)V` @kind virtual;
  #L40d200.  v11:= v8.`y2.h.c` @type ^`okio.c` @kind object;
  #L40d204.  call temp:= `g0`(v11) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L40d20a.  v0:= temp @kind wide;
  #L40d20c.  v11:= v8.`y2.h.d` @type ^`int`;
  #L40d210.  v2:= 4I;
  #L40d212.  v11:= v11 - v2 @kind int;
  #L40d214.  v3:= (`long`) v11 @kind i2l;
  #L40d216.  call temp:= `min`(v3, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L40d21c.  v3:= temp @kind wide;
  #L40d21e.  v11:= (`int`) v3 @kind l2i;
  #L40d220.  v3:= 5I;
  #L40d222.  v4:= (`long`) v11 @kind i2l;
  #L40d224.  v6:= lcmp(v0, v4);
  #L40d228.  if v6 != 0 then goto L40d230;
  #L40d22c.  v7:= 4I;
  #L40d22e.  goto L40d232;
  #L40d230.  v7:= 0I;
  #L40d232.  v11:= v11 + v2 @kind int;
  #L40d234.  call `s`(v8, v9, v11, v3, v7) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40d23a.  v11:= v8.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d23e.  v2:= 2147483647I;
  #L40d244.  v10:= v10 ^& v2 @kind int;
  #L40d246.  call temp:= `writeInt`(v11, v10) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40d24c.  v10:= v8.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d250.  v11:= v8.`y2.h.c` @type ^`okio.c` @kind object;
  #L40d254.  call `A`(v10, v11, v4) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L40d25a.  if v6 <= 0 then goto L40d266;
  #L40d25e.  v0:= v0 - v4 @kind long;
  #L40d260.  call `X`(v8, v9, v0) @signature `Ly2/h;.X:(IJ)V` @kind direct;
  #L40d266.  @monitorexit v8
  #L40d268.  return @kind void;
  #L40d26a.  v9:= new `java.io.IOException`;
  #L40d26e.  v10:= "closed" @kind object;
  #L40d272.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d278.  throw v9;
  #L40d27a.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40d27c.  @monitorexit v8
  #L40d27e.  throw v9;
  catch `java.lang.Throwable` @[L40d1ee..L40d266] goto L40d27a;
  catch `java.lang.Throwable` @[L40d26a..L40d27a] goto L40d27a;
}
procedure `void` `U`(`y2.h` v3 @kind this, `int` v4 , `okhttp3.internal.http2.ErrorCode` v5 @kind object) @signature `Ly2/h;.U:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40d2a4.  @monitorenter v3
  #L40d2a6.  v0:= v3.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40d2aa.  if v0 != 0 then goto L40d2ec;
  #L40d2ae.  v0:= v5.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L40d2b2.  v1:= -1I;
  #L40d2b4.  if v0 == v1 then goto L40d2e0;
  #L40d2b8.  v0:= 4I;
  #L40d2ba.  v1:= 3I;
  #L40d2bc.  v2:= 0I;
  #L40d2be.  call `s`(v3, v4, v0, v1, v2) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40d2c4.  v4:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d2c8.  v5:= v5.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L40d2cc.  call temp:= `writeInt`(v4, v5) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40d2d2.  v4:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d2d6.  call `flush`(v4) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40d2dc.  @monitorexit v3
  #L40d2de.  return @kind void;
  #L40d2e0.  v4:= new `java.lang.IllegalArgumentException`;
  #L40d2e4.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40d2ea.  throw v4;
  #L40d2ec.  v4:= new `java.io.IOException`;
  #L40d2f0.  v5:= "closed" @kind object;
  #L40d2f4.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d2fa.  throw v4;
  #L40d2fc.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40d2fe.  @monitorexit v3
  #L40d300.  throw v4;
  catch `java.lang.Throwable` @[L40d2a6..L40d2dc] goto L40d2fc;
  catch `java.lang.Throwable` @[L40d2e0..L40d2fc] goto L40d2fc;
}
procedure `void` `V`(`y2.h` v4 @kind this, `y2.k` v5 @kind object) @signature `Ly2/h;.V:(Ly2/k;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40d328.  @monitorenter v4
  #L40d32a.  v0:= v4.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40d32e.  if v0 != 0 then goto L40d3a2;
  #L40d332.  call temp:= `j`(v5) @signature `Ly2/k;.j:()I` @kind virtual;
  #L40d338.  v0:= temp;
  #L40d33a.  v0:= v0 * 6;
  #L40d33e.  v1:= 0I;
  #L40d340.  v2:= 4I;
  #L40d342.  call `s`(v4, v1, v0, v2, v1) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40d348.  v0:= 10I;
  #L40d34c.  if v1 >= v0 then goto L40d394;
  #L40d350.  call temp:= `g`(v5, v1) @signature `Ly2/k;.g:(I)Z` @kind virtual;
  #L40d356.  v0:= temp;
  #L40d358.  if v0 != 0 then goto L40d35e;
  #L40d35c.  goto L40d38e;
  #L40d35e.  if v1 != v2 then goto L40d366;
  #L40d362.  v0:= 3I;
  #L40d364.  goto L40d372;
  #L40d366.  v0:= 7I;
  #L40d368.  if v1 != v0 then goto L40d370;
  #L40d36c.  v0:= 4I;
  #L40d36e.  goto L40d372;
  #L40d370.  v0:= v1;
  #L40d372.  v3:= v4.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d376.  call temp:= `writeShort`(v3, v0) @signature `Lokio/d;.writeShort:(I)Lokio/d;` @kind interface;
  #L40d37c.  v0:= v4.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d380.  call temp:= `b`(v5, v1) @signature `Ly2/k;.b:(I)I` @kind virtual;
  #L40d386.  v3:= temp;
  #L40d388.  call temp:= `writeInt`(v0, v3) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40d38e.  v1:= v1 + 1;
  #L40d392.  goto L40d348;
  #L40d394.  v5:= v4.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d398.  call `flush`(v5) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40d39e.  @monitorexit v4
  #L40d3a0.  return @kind void;
  #L40d3a2.  v5:= new `java.io.IOException`;
  #L40d3a6.  v0:= "closed" @kind object;
  #L40d3aa.  call `<init>`(v5, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d3b0.  throw v5;
  #L40d3b2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40d3b4.  @monitorexit v4
  #L40d3b6.  throw v5;
  catch `java.lang.Throwable` @[L40d32a..L40d39e] goto L40d3b2;
  catch `java.lang.Throwable` @[L40d3a2..L40d3b2] goto L40d3b2;
}
procedure `void` `W`(`y2.h` v0 @kind this, `boolean` v1 , `int` v2 , `int` v3 , `java.util.List` v4 @kind object) @signature `Ly2/h;.W:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L40d3dc.  @monitorenter v0
  #L40d3de.  v3:= v0.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40d3e2.  if v3 != 0 then goto L40d3f0;
  #L40d3e6.  call `R`(v0, v1, v2, v4) @signature `Ly2/h;.R:(ZILjava/util/List;)V` @kind virtual;
  #L40d3ec.  @monitorexit v0
  #L40d3ee.  return @kind void;
  #L40d3f0.  v1:= new `java.io.IOException`;
  #L40d3f4.  v2:= "closed" @kind object;
  #L40d3f8.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d3fe.  throw v1;
  #L40d400.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40d402.  @monitorexit v0
  #L40d404.  throw v1;
  catch `java.lang.Throwable` @[L40d3de..L40d3ec] goto L40d400;
  catch `java.lang.Throwable` @[L40d3f0..L40d400] goto L40d400;
}
procedure `void` `a`(`y2.h` v4 @kind this, `int` v5 , `long` v6 ) @signature `Ly2/h;.a:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40d42c.  @monitorenter v4
  #L40d42e.  v0:= v4.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40d432.  if v0 != 0 then goto L40d498;
  #L40d436.  v0:= 0L;
  #L40d43a.  v2:= 0I;
  #L40d43c.  v3:= lcmp(v6, v0);
  #L40d440.  if v3 == 0 then goto L40d478;
  #L40d444.  v0:= 2147483647L;
  #L40d44a.  v3:= lcmp(v6, v0);
  #L40d44e.  if v3 > 0 then goto L40d478;
  #L40d452.  v0:= 4I;
  #L40d454.  v1:= 8I;
  #L40d458.  call `s`(v4, v5, v0, v1, v2) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40d45e.  v5:= v4.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d462.  v7:= (`int`) v6 @kind l2i;
  #L40d464.  call temp:= `writeInt`(v5, v7) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40d46a.  v5:= v4.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d46e.  call `flush`(v5) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40d474.  @monitorexit v4
  #L40d476.  return @kind void;
  #L40d478.  v5:= "windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s" @kind object;
  #L40d47c.  v0:= 1I;
  #L40d47e.  v0:= new `java.lang.Object`[v0];
  #L40d482.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L40d488.  v6:= temp @kind object;
  #L40d48a.  v0[v2]:= v6 @kind object;
  #L40d48e.  call temp:= `c`(v5, v0) @signature `Ly2/c;.c:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L40d494.  v5:= temp @kind object;
  #L40d496.  throw v5;
  #L40d498.  v5:= new `java.io.IOException`;
  #L40d49c.  v6:= "closed" @kind object;
  #L40d4a0.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d4a6.  throw v5;
  #L40d4a8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40d4aa.  @monitorexit v4
  #L40d4ac.  throw v5;
  catch `java.lang.Throwable` @[L40d42e..L40d474] goto L40d4a8;
  catch `java.lang.Throwable` @[L40d478..L40d4a8] goto L40d4a8;
}
procedure `void` `b`(`y2.h` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Ly2/h;.b:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40d16c.  @monitorenter v3
  #L40d16e.  v0:= v3.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40d172.  if v0 != 0 then goto L40d1b0;
  #L40d176.  v0:= 8I;
  #L40d17a.  v1:= 6I;
  #L40d17c.  v2:= 0I;
  #L40d17e.  if v4 == 0 then goto L40d186;
  #L40d182.  v4:= 1I;
  #L40d184.  goto L40d188;
  #L40d186.  v4:= 0I;
  #L40d188.  call `s`(v3, v2, v0, v1, v4) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40d18e.  v4:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d192.  call temp:= `writeInt`(v4, v5) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40d198.  v4:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d19c.  call temp:= `writeInt`(v4, v6) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40d1a2.  v4:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40d1a6.  call `flush`(v4) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40d1ac.  @monitorexit v3
  #L40d1ae.  return @kind void;
  #L40d1b0.  v4:= new `java.io.IOException`;
  #L40d1b4.  v5:= "closed" @kind object;
  #L40d1b8.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d1be.  throw v4;
  #L40d1c0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40d1c2.  @monitorexit v3
  #L40d1c4.  throw v4;
  catch `java.lang.Throwable` @[L40d16e..L40d1ac] goto L40d1c0;
  catch `java.lang.Throwable` @[L40d1b0..L40d1c0] goto L40d1c0;
}
procedure `void` `close`(`y2.h` v1 @kind this) @signature `Ly2/h;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40cda0.  @monitorenter v1
  #L40cda2.  v0:= 1I;
  #L40cda4.  v1.`y2.h.e` @type ^`boolean` := v0 @kind boolean;
  #L40cda8.  v0:= v1.`y2.h.a` @type ^`okio.d` @kind object;
  #L40cdac.  call `close`(v0) @signature `Lokio/p;.close:()V` @kind interface;
  #L40cdb2.  @monitorexit v1
  #L40cdb4.  return @kind void;
  #L40cdb6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40cdb8.  @monitorexit v1
  #L40cdba.  throw v0;
  catch `java.lang.Throwable` @[L40cda4..L40cdb2] goto L40cdb6;
}
procedure `void` `flush`(`y2.h` v2 @kind this) @signature `Ly2/h;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40cf18.  @monitorenter v2
  #L40cf1a.  v0:= v2.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40cf1e.  if v0 != 0 then goto L40cf30;
  #L40cf22.  v0:= v2.`y2.h.a` @type ^`okio.d` @kind object;
  #L40cf26.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40cf2c.  @monitorexit v2
  #L40cf2e.  return @kind void;
  #L40cf30.  v0:= new `java.io.IOException`;
  #L40cf34.  v1:= "closed" @kind object;
  #L40cf38.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40cf3e.  throw v0;
  #L40cf40.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40cf42.  @monitorexit v2
  #L40cf44.  throw v0;
  catch `java.lang.Throwable` @[L40cf1a..L40cf2c] goto L40cf40;
  catch `java.lang.Throwable` @[L40cf30..L40cf40] goto L40cf40;
}
procedure `void` `g`(`y2.h` v2 @kind this, `y2.k` v3 @kind object) @signature `Ly2/h;.g:(Ly2/k;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40cd10.  @monitorenter v2
  #L40cd12.  v0:= v2.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40cd16.  if v0 != 0 then goto L40cd64;
  #L40cd1a.  v0:= v2.`y2.h.d` @type ^`int`;
  #L40cd1e.  call temp:= `f`(v3, v0) @signature `Ly2/k;.f:(I)I` @kind virtual;
  #L40cd24.  v0:= temp;
  #L40cd26.  v2.`y2.h.d` @type ^`int` := v0;
  #L40cd2a.  call temp:= `c`(v3) @signature `Ly2/k;.c:()I` @kind virtual;
  #L40cd30.  v0:= temp;
  #L40cd32.  v1:= -1I;
  #L40cd34.  if v0 == v1 then goto L40cd4a;
  #L40cd38.  v0:= v2.`y2.h.f` @type ^`y2.b$b` @kind object;
  #L40cd3c.  call temp:= `c`(v3) @signature `Ly2/k;.c:()I` @kind virtual;
  #L40cd42.  v3:= temp;
  #L40cd44.  call `e`(v0, v3) @signature `Ly2/b$b;.e:(I)V` @kind virtual;
  #L40cd4a.  v3:= 4I;
  #L40cd4c.  v0:= 1I;
  #L40cd4e.  v1:= 0I;
  #L40cd50.  call `s`(v2, v1, v1, v3, v0) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40cd56.  v3:= v2.`y2.h.a` @type ^`okio.d` @kind object;
  #L40cd5a.  call `flush`(v3) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40cd60.  @monitorexit v2
  #L40cd62.  return @kind void;
  #L40cd64.  v3:= new `java.io.IOException`;
  #L40cd68.  v0:= "closed" @kind object;
  #L40cd6c.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40cd72.  throw v3;
  #L40cd74.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40cd76.  @monitorexit v2
  #L40cd78.  throw v3;
  catch `java.lang.Throwable` @[L40cd12..L40cd60] goto L40cd74;
  catch `java.lang.Throwable` @[L40cd64..L40cd74] goto L40cd74;
}
procedure `void` `h`(`y2.h` v2 @kind this, `int` v3 , `byte` v4 , `okio.c` v5 @kind object, `int` v6 ) @signature `Ly2/h;.h:(IBLokio/c;I)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L40ceec.  v0:= 0I;
  #L40ceee.  call `s`(v2, v3, v6, v0, v4) @signature `Ly2/h;.s:(IIBB)V` @kind virtual;
  #L40cef4.  if v6 <= 0 then goto L40cf04;
  #L40cef8.  v3:= v2.`y2.h.a` @type ^`okio.d` @kind object;
  #L40cefc.  v0:= (`long`) v6 @kind i2l;
  #L40cefe.  call `A`(v3, v5, v0) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L40cf04.  return @kind void;
}
procedure `void` `o`(`y2.h` v5 @kind this) @signature `Ly2/h;.o:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40cdd8.  @monitorenter v5
  #L40cdda.  v0:= v5.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40cdde.  if v0 != 0 then goto L40ce50;
  #L40cde2.  v0:= v5.`y2.h.b` @type ^`boolean` @kind boolean;
  #L40cde6.  if v0 != 0 then goto L40cdee;
  #L40cdea.  @monitorexit v5
  #L40cdec.  return @kind void;
  #L40cdee.  v0:= `@@y2.h.g` @type ^`java.util.logging.Logger` @kind object;
  #L40cdf2.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L40cdf6.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L40cdfc.  v1:= temp;
  #L40cdfe.  if v1 == 0 then goto L40ce2c;
  #L40ce02.  v1:= ">> CONNECTION %s" @kind object;
  #L40ce06.  v2:= 1I;
  #L40ce08.  v2:= new `java.lang.Object`[v2];
  #L40ce0c.  v3:= 0I;
  #L40ce0e.  v4:= `@@y2.c.a` @type ^`okio.ByteString` @kind object;
  #L40ce12.  call temp:= `i`(v4) @signature `Lokio/ByteString;.i:()Ljava/lang/String;` @kind virtual;
  #L40ce18.  v4:= temp @kind object;
  #L40ce1a.  v2[v3]:= v4 @kind object;
  #L40ce1e.  call temp:= `r`(v1, v2) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40ce24.  v1:= temp @kind object;
  #L40ce26.  call `fine`(v0, v1) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L40ce2c.  v0:= v5.`y2.h.a` @type ^`okio.d` @kind object;
  #L40ce30.  v1:= `@@y2.c.a` @type ^`okio.ByteString` @kind object;
  #L40ce34.  call temp:= `t`(v1) @signature `Lokio/ByteString;.t:()[B` @kind virtual;
  #L40ce3a.  v1:= temp @kind object;
  #L40ce3c.  call temp:= `write`(v0, v1) @signature `Lokio/d;.write:([B)Lokio/d;` @kind interface;
  #L40ce42.  v0:= v5.`y2.h.a` @type ^`okio.d` @kind object;
  #L40ce46.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40ce4c.  @monitorexit v5
  #L40ce4e.  return @kind void;
  #L40ce50.  v0:= new `java.io.IOException`;
  #L40ce54.  v1:= "closed" @kind object;
  #L40ce58.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40ce5e.  throw v0;
  #L40ce60.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40ce62.  @monitorexit v5
  #L40ce64.  throw v0;
  catch `java.lang.Throwable` @[L40cdda..L40cde6] goto L40ce60;
  catch `java.lang.Throwable` @[L40cdee..L40ce4c] goto L40ce60;
  catch `java.lang.Throwable` @[L40ce50..L40ce60] goto L40ce60;
}
procedure `void` `p`(`y2.h` v1 @kind this, `boolean` v2 , `int` v3 , `okio.c` v4 @kind object, `int` v5 ) @signature `Ly2/h;.p:(ZILokio/c;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40ce94.  @monitorenter v1
  #L40ce96.  v0:= v1.`y2.h.e` @type ^`boolean` @kind boolean;
  #L40ce9a.  if v0 != 0 then goto L40ceb2;
  #L40ce9e.  v0:= 0I;
  #L40cea0.  if v2 == 0 then goto L40cea8;
  #L40cea4.  v2:= 1I;
  #L40cea6.  v0:= (`byte`) v2 @kind i2b;
  #L40cea8.  call `h`(v1, v3, v0, v4, v5) @signature `Ly2/h;.h:(IBLokio/c;I)V` @kind virtual;
  #L40ceae.  @monitorexit v1
  #L40ceb0.  return @kind void;
  #L40ceb2.  v2:= new `java.io.IOException`;
  #L40ceb6.  v3:= "closed" @kind object;
  #L40ceba.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40cec0.  throw v2;
  #L40cec2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40cec4.  @monitorexit v1
  #L40cec6.  throw v2;
  catch `java.lang.Throwable` @[L40ce96..L40ceae] goto L40cec2;
  catch `java.lang.Throwable` @[L40ceb2..L40cec2] goto L40cec2;
}
procedure `void` `s`(`y2.h` v3 @kind this, `int` v4 , `int` v5 , `byte` v6 , `byte` v7 ) @signature `Ly2/h;.s:(IIBB)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40cf6c.  v0:= `@@y2.h.g` @type ^`java.util.logging.Logger` @kind object;
  #L40cf70.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L40cf74.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L40cf7a.  v1:= temp;
  #L40cf7c.  v2:= 0I;
  #L40cf7e.  if v1 == 0 then goto L40cf90;
  #L40cf82.  call temp:= `b`(v2, v4, v5, v6, v7) @signature `Ly2/c;.b:(ZIIBB)Ljava/lang/String;` @kind static;
  #L40cf88.  v1:= temp @kind object;
  #L40cf8a.  call `fine`(v0, v1) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L40cf90.  v0:= v3.`y2.h.d` @type ^`int`;
  #L40cf94.  v1:= 1I;
  #L40cf96.  if v5 > v0 then goto L40cffc;
  #L40cf9a.  v0:= -2147483648I;
  #L40cf9e.  v0:= v0 ^& v4 @kind int;
  #L40cfa0.  if v0 != 0 then goto L40cfde;
  #L40cfa4.  v0:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40cfa8.  call `Y`(v0, v5) @signature `Ly2/h;.Y:(Lokio/d;I)V` @kind static;
  #L40cfae.  v5:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40cfb2.  v6:= v6 ^& 255;
  #L40cfb6.  call temp:= `writeByte`(v5, v6) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L40cfbc.  v5:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40cfc0.  v6:= v7 ^& 255;
  #L40cfc4.  call temp:= `writeByte`(v5, v6) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L40cfca.  v5:= v3.`y2.h.a` @type ^`okio.d` @kind object;
  #L40cfce.  v6:= 2147483647I;
  #L40cfd4.  v4:= v4 ^& v6 @kind int;
  #L40cfd6.  call temp:= `writeInt`(v5, v4) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40cfdc.  return @kind void;
  #L40cfde.  v5:= new `java.lang.Object`[v1];
  #L40cfe2.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40cfe8.  v4:= temp @kind object;
  #L40cfea.  v5[v2]:= v4 @kind object;
  #L40cfee.  v4:= "reserved bit set: %s" @kind object;
  #L40cff2.  call temp:= `c`(v4, v5) @signature `Ly2/c;.c:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L40cff8.  v4:= temp @kind object;
  #L40cffa.  throw v4;
  #L40cffc.  v4:= 2I;
  #L40cffe.  v4:= new `java.lang.Object`[v4];
  #L40d002.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40d008.  v6:= temp @kind object;
  #L40d00a.  v4[v2]:= v6 @kind object;
  #L40d00e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40d014.  v5:= temp @kind object;
  #L40d016.  v4[v1]:= v5 @kind object;
  #L40d01a.  v5:= "FRAME_SIZE_ERROR length > %d: %d" @kind object;
  #L40d01e.  call temp:= `c`(v5, v4) @signature `Ly2/c;.c:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L40d024.  v4:= temp @kind object;
  #L40d026.  throw v4;
}
