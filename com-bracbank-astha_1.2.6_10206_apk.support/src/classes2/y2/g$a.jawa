record `y2.g$a` @kind class @AccessFlag FINAL extends `okio.p` @kind interface {
  `okio.c` `y2.g$a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `y2.g$a.b` @AccessFlag ;
  `boolean` `y2.g$a.c` @AccessFlag ;
  `y2.g` `y2.g$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Ly2/g$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L40bd6c.  return @kind void;
}
procedure `void` `<init>`(`y2.g$a` v0 @kind this, `y2.g` v1 @kind object) @signature `Ly2/g$a;.<init>:(Ly2/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40bd80.  v0.`y2.g$a.d` @type ^`y2.g` := v1 @kind object;
  #L40bd84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40bd8a.  v1:= new `okio.c`;
  #L40bd8e.  call `<init>`(v1) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L40bd94.  v0.`y2.g$a.a` @type ^`okio.c` := v1 @kind object;
  #L40bd98.  return @kind void;
}
procedure `void` `g`(`y2.g$a` v11 @kind this, `boolean` v12 ) @signature `Ly2/g$a;.g:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L40be8c.  v0:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40be90.  @monitorenter v0
  #L40be92.  v1:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40be96.  v1:= v1.`y2.g.k` @type ^`y2.g$c` @kind object;
  #L40be9a.  call `k`(v1) @signature `Lokio/a;.k:()V` @kind virtual;
  #L40bea0.  v1:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bea4.  v2:= v1.`y2.g.b` @type ^`long` @kind wide;
  #L40bea8.  v4:= 0L;
  #L40beac.  v6:= lcmp(v2, v4);
  #L40beb0.  if v6 > 0 then goto L40bed4;
  #L40beb4.  v2:= v11.`y2.g$a.c` @type ^`boolean` @kind boolean;
  #L40beb8.  if v2 != 0 then goto L40bed4;
  #L40bebc.  v2:= v11.`y2.g$a.b` @type ^`boolean` @kind boolean;
  #L40bec0.  if v2 != 0 then goto L40bed4;
  #L40bec4.  v2:= v1.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L40bec8.  if v2 != 0 then goto L40bed4;
  #L40becc.  call `t`(v1) @signature `Ly2/g;.t:()V` @kind virtual;
  #L40bed2.  goto L40bea0;
  #L40bed4.  v1:= v1.`y2.g.k` @type ^`y2.g$c` @kind object;
  #L40bed8.  call `u`(v1) @signature `Ly2/g$c;.u:()V` @kind virtual;
  #L40bede.  v1:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bee2.  call `e`(v1) @signature `Ly2/g;.e:()V` @kind virtual;
  #L40bee8.  v1:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40beec.  v1:= v1.`y2.g.b` @type ^`long` @kind wide;
  #L40bef0.  v3:= v11.`y2.g$a.a` @type ^`okio.c` @kind object;
  #L40bef4.  call temp:= `g0`(v3) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L40befa.  v3:= temp @kind wide;
  #L40befc.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L40bf02.  v9:= temp @kind wide;
  #L40bf04.  v1:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bf08.  v2:= v1.`y2.g.b` @type ^`long` @kind wide;
  #L40bf0c.  v2:= v2 - v9 @kind long;
  #L40bf0e.  v1.`y2.g.b` @type ^`long` := v2 @kind wide;
  #L40bf12.  @monitorexit v0
  #L40bf14.  v0:= v1.`y2.g.k` @type ^`y2.g$c` @kind object;
  #L40bf18.  call `k`(v0) @signature `Lokio/a;.k:()V` @kind virtual;
  #L40bf1e.  v0:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bf22.  v5:= v0.`y2.g.d` @type ^`y2.e` @kind object;
  #L40bf26.  v6:= v0.`y2.g.c` @type ^`int`;
  #L40bf2a.  if v12 == 0 then goto L40bf48;
  #L40bf2e.  v12:= v11.`y2.g$a.a` @type ^`okio.c` @kind object;
  #L40bf32.  call temp:= `g0`(v12) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L40bf38.  v0:= temp @kind wide;
  #L40bf3a.  v12:= lcmp(v9, v0);
  #L40bf3e.  if v12 != 0 then goto L40bf48;
  #L40bf42.  v12:= 1I;
  #L40bf44.  v7:= 1I;
  #L40bf46.  goto L40bf4c;
  #L40bf48.  v12:= 0I;
  #L40bf4a.  v7:= 0I;
  #L40bf4c.  v8:= v11.`y2.g$a.a` @type ^`okio.c` @kind object;
  #L40bf50.  call `k0`(v5, v6, v7, v8, v9) @signature `Ly2/e;.k0:(IZLokio/c;J)V` @kind virtual;
  #L40bf56.  v12:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bf5a.  v12:= v12.`y2.g.k` @type ^`y2.g$c` @kind object;
  #L40bf5e.  call `u`(v12) @signature `Ly2/g$c;.u:()V` @kind virtual;
  #L40bf64.  return @kind void;
  #L40bf66.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40bf68.  v0:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bf6c.  v0:= v0.`y2.g.k` @type ^`y2.g$c` @kind object;
  #L40bf70.  call `u`(v0) @signature `Ly2/g$c;.u:()V` @kind virtual;
  #L40bf76.  throw v12;
  #L40bf78.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40bf7a.  v1:= v11.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bf7e.  v1:= v1.`y2.g.k` @type ^`y2.g$c` @kind object;
  #L40bf82.  call `u`(v1) @signature `Ly2/g$c;.u:()V` @kind virtual;
  #L40bf88.  throw v12;
  #L40bf8a.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40bf8c.  @monitorexit v0
  #L40bf8e.  throw v12;
  catch `java.lang.Throwable` @[L40be92..L40bea0] goto L40bf8a;
  catch `java.lang.Throwable` @[L40bea0..L40bed2] goto L40bf78;
  catch `java.lang.Throwable` @[L40bed4..L40bf14] goto L40bf8a;
  catch `java.lang.Throwable` @[L40bf1e..L40bf56] goto L40bf66;
  catch `java.lang.Throwable` @[L40bf7a..L40bf8e] goto L40bf8a;
}
procedure `void` `A`(`y2.g$a` v2 @kind this, `okio.c` v3 @kind object, `long` v4 ) @signature `Ly2/g$a;.A:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40c040.  v0:= v2.`y2.g$a.a` @type ^`okio.c` @kind object;
  #L40c044.  call `A`(v0, v3, v4) @signature `Lokio/c;.A:(Lokio/c;J)V` @kind virtual;
  #L40c04a.  v3:= v2.`y2.g$a.a` @type ^`okio.c` @kind object;
  #L40c04e.  call temp:= `g0`(v3) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L40c054.  v3:= temp @kind wide;
  #L40c056.  v0:= 16384L;
  #L40c05a.  v5:= lcmp(v3, v0);
  #L40c05e.  if v5 < 0 then goto L40c06c;
  #L40c062.  v3:= 0I;
  #L40c064.  call `g`(v2, v3) @signature `Ly2/g$a;.g:(Z)V` @kind direct;
  #L40c06a.  goto L40c04a;
  #L40c06c.  return @kind void;
}
procedure `void` `close`(`y2.g$a` v8 @kind this) @signature `Ly2/g$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L40bdac.  v0:= v8.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bdb0.  @monitorenter v0
  #L40bdb2.  v1:= v8.`y2.g$a.b` @type ^`boolean` @kind boolean;
  #L40bdb6.  if v1 == 0 then goto L40bdbe;
  #L40bdba.  @monitorexit v0
  #L40bdbc.  return @kind void;
  #L40bdbe.  @monitorexit v0
  #L40bdc0.  v0:= v8.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bdc4.  v0:= v0.`y2.g.i` @type ^`y2.g$a` @kind object;
  #L40bdc8.  v0:= v0.`y2.g$a.c` @type ^`boolean` @kind boolean;
  #L40bdcc.  v1:= 1I;
  #L40bdce.  if v0 != 0 then goto L40be20;
  #L40bdd2.  v0:= v8.`y2.g$a.a` @type ^`okio.c` @kind object;
  #L40bdd6.  call temp:= `g0`(v0) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L40bddc.  v2:= temp @kind wide;
  #L40bdde.  v4:= 0L;
  #L40bde2.  v0:= lcmp(v2, v4);
  #L40bde6.  if v0 <= 0 then goto L40be06;
  #L40bdea.  v0:= v8.`y2.g$a.a` @type ^`okio.c` @kind object;
  #L40bdee.  call temp:= `g0`(v0) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L40bdf4.  v2:= temp @kind wide;
  #L40bdf6.  v0:= lcmp(v2, v4);
  #L40bdfa.  if v0 <= 0 then goto L40be20;
  #L40bdfe.  call `g`(v8, v1) @signature `Ly2/g$a;.g:(Z)V` @kind direct;
  #L40be04.  goto L40bdea;
  #L40be06.  v0:= v8.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40be0a.  v2:= v0.`y2.g.d` @type ^`y2.e` @kind object;
  #L40be0e.  v3:= v0.`y2.g.c` @type ^`int`;
  #L40be12.  v4:= 1I;
  #L40be14.  v5:= 0I;
  #L40be16.  v6:= 0L;
  #L40be1a.  call `k0`(v2, v3, v4, v5, v6) @signature `Ly2/e;.k0:(IZLokio/c;J)V` @kind virtual;
  #L40be20.  v2:= v8.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40be24.  @monitorenter v2
  #L40be26.  v8.`y2.g$a.b` @type ^`boolean` := v1 @kind boolean;
  #L40be2a.  @monitorexit v2
  #L40be2c.  v0:= v8.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40be30.  v0:= v0.`y2.g.d` @type ^`y2.e` @kind object;
  #L40be34.  call `flush`(v0) @signature `Ly2/e;.flush:()V` @kind virtual;
  #L40be3a.  v0:= v8.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40be3e.  call `d`(v0) @signature `Ly2/g;.d:()V` @kind virtual;
  #L40be44.  return @kind void;
  #L40be46.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40be48.  @monitorexit v2
  #L40be4a.  throw v0;
  #L40be4c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40be4e.  @monitorexit v0
  #L40be50.  throw v1;
  catch `java.lang.Throwable` @[L40bdb2..L40bdc0] goto L40be4c;
  catch `java.lang.Throwable` @[L40be26..L40be2c] goto L40be46;
  catch `java.lang.Throwable` @[L40be48..L40be4a] goto L40be46;
  catch `java.lang.Throwable` @[L40be4e..L40be50] goto L40be4c;
}
procedure `okio.r` `e`(`y2.g$a` v1 @kind this) @signature `Ly2/g$a;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bd50.  v0:= v1.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bd54.  v0:= v0.`y2.g.k` @type ^`y2.g$c` @kind object;
  #L40bd58.  return v0 @kind object;
}
procedure `void` `flush`(`y2.g$a` v5 @kind this) @signature `Ly2/g$a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40bfd0.  v0:= v5.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bfd4.  @monitorenter v0
  #L40bfd6.  v1:= v5.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40bfda.  call `e`(v1) @signature `Ly2/g;.e:()V` @kind virtual;
  #L40bfe0.  @monitorexit v0
  #L40bfe2.  v0:= v5.`y2.g$a.a` @type ^`okio.c` @kind object;
  #L40bfe6.  call temp:= `g0`(v0) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L40bfec.  v0:= temp @kind wide;
  #L40bfee.  v2:= 0L;
  #L40bff2.  v4:= lcmp(v0, v2);
  #L40bff6.  if v4 <= 0 then goto L40c012;
  #L40bffa.  v0:= 0I;
  #L40bffc.  call `g`(v5, v0) @signature `Ly2/g$a;.g:(Z)V` @kind direct;
  #L40c002.  v0:= v5.`y2.g$a.d` @type ^`y2.g` @kind object;
  #L40c006.  v0:= v0.`y2.g.d` @type ^`y2.e` @kind object;
  #L40c00a.  call `flush`(v0) @signature `Ly2/e;.flush:()V` @kind virtual;
  #L40c010.  goto L40bfe2;
  #L40c012.  return @kind void;
  #L40c014.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40c016.  @monitorexit v0
  #L40c018.  throw v1;
  catch `java.lang.Throwable` @[L40bfd6..L40bfe2] goto L40c014;
  catch `java.lang.Throwable` @[L40c016..L40c018] goto L40c014;
}
