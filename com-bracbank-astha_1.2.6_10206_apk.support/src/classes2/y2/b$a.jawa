record `y2.b$a` @kind class @AccessFlag FINAL {
  `java.util.List` `y2.b$a.a` @AccessFlag PRIVATE_FINAL;
  `okio.e` `y2.b$a.b` @AccessFlag PRIVATE_FINAL;
  `int` `y2.b$a.c` @AccessFlag PRIVATE_FINAL;
  `int` `y2.b$a.d` @AccessFlag PRIVATE;
  `y2.a`[] `y2.b$a.e` @AccessFlag ;
  `int` `y2.b$a.f` @AccessFlag ;
  `int` `y2.b$a.g` @AccessFlag ;
  `int` `y2.b$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`y2.b$a` v1 @kind this, `int` v2 , `int` v3 , `okio.q` v4 @kind object) @signature `Ly2/b$a;.<init>:(IILokio/q;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4083ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4083f2.  v0:= new `java.util.ArrayList`;
  #L4083f6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4083fc.  v1.`y2.b$a.a` @type ^`java.util.List` := v0 @kind object;
  #L408400.  v0:= 8I;
  #L408404.  v0:= new `y2.a`[v0];
  #L408408.  v1.`y2.b$a.e` @type ^`y2.a`[] := v0 @kind object;
  #L40840c.  v0:= length @variable v0;
  #L40840e.  v0:= v0 + -1;
  #L408412.  v1.`y2.b$a.f` @type ^`int` := v0;
  #L408416.  v0:= 0I;
  #L408418.  v1.`y2.b$a.g` @type ^`int` := v0;
  #L40841c.  v1.`y2.b$a.h` @type ^`int` := v0;
  #L408420.  v1.`y2.b$a.c` @type ^`int` := v2;
  #L408424.  v1.`y2.b$a.d` @type ^`int` := v3;
  #L408428.  call temp:= `b`(v4) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L40842e.  v2:= temp @kind object;
  #L408430.  v1.`y2.b$a.b` @type ^`okio.e` := v2 @kind object;
  #L408434.  return @kind void;
}
procedure `void` `<init>`(`y2.b$a` v0 @kind this, `int` v1 , `okio.q` v2 @kind object) @signature `Ly2/b$a;.<init>:(ILokio/q;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L408448.  call `<init>`(v0, v1, v1, v2) @signature `Ly2/b$a;.<init>:(IILokio/q;)V` @kind direct;
  #L40844e.  return @kind void;
}
procedure `void` `a`(`y2.b$a` v2 @kind this) @signature `Ly2/b$a;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L408460.  v0:= v2.`y2.b$a.d` @type ^`int`;
  #L408464.  v1:= v2.`y2.b$a.h` @type ^`int`;
  #L408468.  if v0 >= v1 then goto L408480;
  #L40846c.  if v0 != 0 then goto L408478;
  #L408470.  call `b`(v2) @signature `Ly2/b$a;.b:()V` @kind direct;
  #L408476.  goto L408480;
  #L408478.  v1:= v1 - v0 @kind int;
  #L40847a.  call temp:= `d`(v2, v1) @signature `Ly2/b$a;.d:(I)I` @kind direct;
  #L408480.  return @kind void;
}
procedure `void` `b`(`y2.b$a` v2 @kind this) @signature `Ly2/b$a;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L408494.  v0:= v2.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L408498.  v1:= 0I;
  #L40849a.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L4084a0.  v0:= v2.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L4084a4.  v0:= length @variable v0;
  #L4084a6.  v0:= v0 + -1;
  #L4084aa.  v2.`y2.b$a.f` @type ^`int` := v0;
  #L4084ae.  v0:= 0I;
  #L4084b0.  v2.`y2.b$a.g` @type ^`int` := v0;
  #L4084b4.  v2.`y2.b$a.h` @type ^`int` := v0;
  #L4084b8.  return @kind void;
}
procedure `int` `c`(`y2.b$a` v1 @kind this, `int` v2 ) @signature `Ly2/b$a;.c:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4081bc.  v0:= v1.`y2.b$a.f` @type ^`int`;
  #L4081c0.  v0:= v0 + 1;
  #L4081c4.  v0:= v0 + v2 @kind int;
  #L4081c6.  return v0;
}
procedure `int` `d`(`y2.b$a` v4 @kind this, `int` v5 ) @signature `Ly2/b$a;.d:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4081d8.  v0:= 0I;
  #L4081da.  if v5 <= 0 then goto L40824c;
  #L4081de.  v1:= v4.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L4081e2.  v1:= length @variable v1;
  #L4081e4.  v1:= v1 + -1;
  #L4081e8.  v2:= v4.`y2.b$a.f` @type ^`int`;
  #L4081ec.  if v1 < v2 then goto L40822a;
  #L4081f0.  if v5 <= 0 then goto L40822a;
  #L4081f4.  v2:= v4.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L4081f8.  v3:= v2[v1] @kind object;
  #L4081fc.  v3:= v3.`y2.a.c` @type ^`int`;
  #L408200.  v5:= v5 - v3 @kind int;
  #L408202.  v3:= v4.`y2.b$a.h` @type ^`int`;
  #L408206.  v2:= v2[v1] @kind object;
  #L40820a.  v2:= v2.`y2.a.c` @type ^`int`;
  #L40820e.  v3:= v3 - v2 @kind int;
  #L408210.  v4.`y2.b$a.h` @type ^`int` := v3;
  #L408214.  v2:= v4.`y2.b$a.g` @type ^`int`;
  #L408218.  v2:= v2 + -1;
  #L40821c.  v4.`y2.b$a.g` @type ^`int` := v2;
  #L408220.  v0:= v0 + 1;
  #L408224.  v1:= v1 + -1;
  #L408228.  goto L4081e8;
  #L40822a.  v5:= v4.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L40822e.  v1:= v2 + 1;
  #L408232.  v2:= v2 + 1;
  #L408236.  v2:= v2 + v0 @kind int;
  #L408238.  v3:= v4.`y2.b$a.g` @type ^`int`;
  #L40823c.  call `arraycopy`(v5, v1, v5, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L408242.  v5:= v4.`y2.b$a.f` @type ^`int`;
  #L408246.  v5:= v5 + v0 @kind int;
  #L408248.  v4.`y2.b$a.f` @type ^`int` := v5;
  #L40824c.  return v0;
}
procedure `okio.ByteString` `f`(`y2.b$a` v3 @kind this, `int` v4 ) @signature `Ly2/b$a;.f:(I)Lokio/ByteString;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4082f0.  call temp:= `h`(v3, v4) @signature `Ly2/b$a;.h:(I)Z` @kind direct;
  #L4082f6.  v0:= temp;
  #L4082f8.  if v0 == 0 then goto L40830a;
  #L4082fc.  v0:= `@@y2.b.a` @type ^`y2.a`[] @kind object;
  #L408300.  v4:= v0[v4] @kind object;
  #L408304.  v4:= v4.`y2.a.a` @type ^`okio.ByteString` @kind object;
  #L408308.  return v4 @kind object;
  #L40830a.  v0:= `@@y2.b.a` @type ^`y2.a`[] @kind object;
  #L40830e.  v0:= length @variable v0;
  #L408310.  v0:= v4 - v0 @kind int;
  #L408314.  call temp:= `c`(v3, v0) @signature `Ly2/b$a;.c:(I)I` @kind direct;
  #L40831a.  v0:= temp;
  #L40831c.  if v0 < 0 then goto L408334;
  #L408320.  v1:= v3.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L408324.  v2:= length @variable v1;
  #L408326.  if v0 >= v2 then goto L408334;
  #L40832a.  v4:= v1[v0] @kind object;
  #L40832e.  v4:= v4.`y2.a.a` @type ^`okio.ByteString` @kind object;
  #L408332.  return v4 @kind object;
  #L408334.  v0:= new `java.io.IOException`;
  #L408338.  v1:= new `java.lang.StringBuilder`;
  #L40833c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L408342.  v2:= "Header index too large " @kind object;
  #L408346.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40834c.  v4:= v4 + 1;
  #L408350.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L408356.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40835c.  v4:= temp @kind object;
  #L40835e.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408364.  throw v0;
}
procedure `void` `g`(`y2.b$a` v5 @kind this, `int` v6 , `y2.a` v7 @kind object) @signature `Ly2/b$a;.g:(ILy2/a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4084cc.  v0:= v5.`y2.b$a.a` @type ^`java.util.List` @kind object;
  #L4084d0.  call temp:= `add`(v0, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4084d6.  v0:= v7.`y2.a.c` @type ^`int`;
  #L4084da.  v1:= -1I;
  #L4084dc.  if v6 == v1 then goto L4084f6;
  #L4084e0.  v2:= v5.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L4084e4.  call temp:= `c`(v5, v6) @signature `Ly2/b$a;.c:(I)I` @kind direct;
  #L4084ea.  v3:= temp;
  #L4084ec.  v2:= v2[v3] @kind object;
  #L4084f0.  v2:= v2.`y2.a.c` @type ^`int`;
  #L4084f4.  v0:= v0 - v2 @kind int;
  #L4084f6.  v2:= v5.`y2.b$a.d` @type ^`int`;
  #L4084fa.  if v0 <= v2 then goto L408506;
  #L4084fe.  call `b`(v5) @signature `Ly2/b$a;.b:()V` @kind direct;
  #L408504.  return @kind void;
  #L408506.  v3:= v5.`y2.b$a.h` @type ^`int`;
  #L40850a.  v3:= v3 + v0 @kind int;
  #L40850c.  v3:= v3 - v2 @kind int;
  #L40850e.  call temp:= `d`(v5, v3) @signature `Ly2/b$a;.d:(I)I` @kind direct;
  #L408514.  v2:= temp;
  #L408516.  if v6 != v1 then goto L408576;
  #L40851a.  v6:= v5.`y2.b$a.g` @type ^`int`;
  #L40851e.  v6:= v6 + 1;
  #L408522.  v1:= v5.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L408526.  v2:= length @variable v1;
  #L408528.  if v6 <= v2 then goto L408554;
  #L40852c.  v6:= length @variable v1;
  #L40852e.  v6:= v6 * 2;
  #L408532.  v6:= new `y2.a`[v6];
  #L408536.  v2:= 0I;
  #L408538.  v3:= length @variable v1;
  #L40853a.  v4:= length @variable v1;
  #L40853c.  call `arraycopy`(v1, v2, v6, v3, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L408542.  v1:= v5.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L408546.  v1:= length @variable v1;
  #L408548.  v1:= v1 + -1;
  #L40854c.  v5.`y2.b$a.f` @type ^`int` := v1;
  #L408550.  v5.`y2.b$a.e` @type ^`y2.a`[] := v6 @kind object;
  #L408554.  v6:= v5.`y2.b$a.f` @type ^`int`;
  #L408558.  v1:= v6 + -1;
  #L40855c.  v5.`y2.b$a.f` @type ^`int` := v1;
  #L408560.  v1:= v5.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L408564.  v1[v6]:= v7 @kind object;
  #L408568.  v6:= v5.`y2.b$a.g` @type ^`int`;
  #L40856c.  v6:= v6 + 1;
  #L408570.  v5.`y2.b$a.g` @type ^`int` := v6;
  #L408574.  goto L40858a;
  #L408576.  call temp:= `c`(v5, v6) @signature `Ly2/b$a;.c:(I)I` @kind direct;
  #L40857c.  v1:= temp;
  #L40857e.  v1:= v1 + v2 @kind int;
  #L408580.  v6:= v6 + v1 @kind int;
  #L408582.  v1:= v5.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L408586.  v1[v6]:= v7 @kind object;
  #L40858a.  v6:= v5.`y2.b$a.h` @type ^`int`;
  #L40858e.  v6:= v6 + v0 @kind int;
  #L408590.  v5.`y2.b$a.h` @type ^`int` := v6;
  #L408594.  return @kind void;
}
procedure `boolean` `h`(`y2.b$a` v2 @kind this, `int` v3 ) @signature `Ly2/b$a;.h:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L408194.  v0:= 1I;
  #L408196.  if v3 < 0 then goto L4081a8;
  #L40819a.  v1:= `@@y2.b.a` @type ^`y2.a`[] @kind object;
  #L40819e.  v1:= length @variable v1;
  #L4081a0.  v1:= v1 - v0 @kind int;
  #L4081a2.  if v3 > v1 then goto L4081a8;
  #L4081a6.  goto L4081aa;
  #L4081a8.  v0:= 0I;
  #L4081aa.  return v0;
}
procedure `int` `i`(`y2.b$a` v1 @kind this) @signature `Ly2/b$a;.i:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L408260.  v0:= v1.`y2.b$a.b` @type ^`okio.e` @kind object;
  #L408264.  call temp:= `readByte`(v0) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L40826a.  v0:= temp;
  #L40826c.  v0:= v0 ^& 255;
  #L408270.  return v0;
}
procedure `void` `l`(`y2.b$a` v3 @kind this, `int` v4 ) @signature `Ly2/b$a;.l:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4086d4.  call temp:= `h`(v3, v4) @signature `Ly2/b$a;.h:(I)Z` @kind direct;
  #L4086da.  v0:= temp;
  #L4086dc.  if v0 == 0 then goto L4086f4;
  #L4086e0.  v0:= `@@y2.b.a` @type ^`y2.a`[] @kind object;
  #L4086e4.  v4:= v0[v4] @kind object;
  #L4086e8.  v0:= v3.`y2.b$a.a` @type ^`java.util.List` @kind object;
  #L4086ec.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4086f2.  goto L408722;
  #L4086f4.  v0:= `@@y2.b.a` @type ^`y2.a`[] @kind object;
  #L4086f8.  v0:= length @variable v0;
  #L4086fa.  v0:= v4 - v0 @kind int;
  #L4086fe.  call temp:= `c`(v3, v0) @signature `Ly2/b$a;.c:(I)I` @kind direct;
  #L408704.  v0:= temp;
  #L408706.  if v0 < 0 then goto L408724;
  #L40870a.  v1:= v3.`y2.b$a.e` @type ^`y2.a`[] @kind object;
  #L40870e.  v2:= length @variable v1;
  #L408710.  if v0 >= v2 then goto L408724;
  #L408714.  v4:= v3.`y2.b$a.a` @type ^`java.util.List` @kind object;
  #L408718.  v0:= v1[v0] @kind object;
  #L40871c.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L408722.  return @kind void;
  #L408724.  v0:= new `java.io.IOException`;
  #L408728.  v1:= new `java.lang.StringBuilder`;
  #L40872c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L408732.  v2:= "Header index too large " @kind object;
  #L408736.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40873c.  v4:= v4 + 1;
  #L408740.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L408746.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40874c.  v4:= temp @kind object;
  #L40874e.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408754.  throw v0;
}
procedure `void` `n`(`y2.b$a` v2 @kind this, `int` v3 ) @signature `Ly2/b$a;.n:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L408768.  call temp:= `f`(v2, v3) @signature `Ly2/b$a;.f:(I)Lokio/ByteString;` @kind direct;
  #L40876e.  v3:= temp @kind object;
  #L408770.  call temp:= `j`(v2) @signature `Ly2/b$a;.j:()Lokio/ByteString;` @kind virtual;
  #L408776.  v0:= temp @kind object;
  #L408778.  v1:= new `y2.a`;
  #L40877c.  call `<init>`(v1, v3, v0) @signature `Ly2/a;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L408782.  v3:= -1I;
  #L408784.  call `g`(v2, v3, v1) @signature `Ly2/b$a;.g:(ILy2/a;)V` @kind direct;
  #L40878a.  return @kind void;
}
procedure `void` `o`(`y2.b$a` v3 @kind this) @signature `Ly2/b$a;.o:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L40879c.  call temp:= `j`(v3) @signature `Ly2/b$a;.j:()Lokio/ByteString;` @kind virtual;
  #L4087a2.  v0:= temp @kind object;
  #L4087a4.  call temp:= `a`(v0) @signature `Ly2/b;.a:(Lokio/ByteString;)Lokio/ByteString;` @kind static;
  #L4087aa.  v0:= temp @kind object;
  #L4087ac.  call temp:= `j`(v3) @signature `Ly2/b$a;.j:()Lokio/ByteString;` @kind virtual;
  #L4087b2.  v1:= temp @kind object;
  #L4087b4.  v2:= new `y2.a`;
  #L4087b8.  call `<init>`(v2, v0, v1) @signature `Ly2/a;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L4087be.  v0:= -1I;
  #L4087c0.  call `g`(v3, v0, v2) @signature `Ly2/b$a;.g:(ILy2/a;)V` @kind direct;
  #L4087c6.  return @kind void;
}
procedure `void` `p`(`y2.b$a` v3 @kind this, `int` v4 ) @signature `Ly2/b$a;.p:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4087d8.  call temp:= `f`(v3, v4) @signature `Ly2/b$a;.f:(I)Lokio/ByteString;` @kind direct;
  #L4087de.  v4:= temp @kind object;
  #L4087e0.  call temp:= `j`(v3) @signature `Ly2/b$a;.j:()Lokio/ByteString;` @kind virtual;
  #L4087e6.  v0:= temp @kind object;
  #L4087e8.  v1:= v3.`y2.b$a.a` @type ^`java.util.List` @kind object;
  #L4087ec.  v2:= new `y2.a`;
  #L4087f0.  call `<init>`(v2, v4, v0) @signature `Ly2/a;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L4087f6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4087fc.  return @kind void;
}
procedure `void` `q`(`y2.b$a` v4 @kind this) @signature `Ly2/b$a;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L408810.  call temp:= `j`(v4) @signature `Ly2/b$a;.j:()Lokio/ByteString;` @kind virtual;
  #L408816.  v0:= temp @kind object;
  #L408818.  call temp:= `a`(v0) @signature `Ly2/b;.a:(Lokio/ByteString;)Lokio/ByteString;` @kind static;
  #L40881e.  v0:= temp @kind object;
  #L408820.  call temp:= `j`(v4) @signature `Ly2/b$a;.j:()Lokio/ByteString;` @kind virtual;
  #L408826.  v1:= temp @kind object;
  #L408828.  v2:= v4.`y2.b$a.a` @type ^`java.util.List` @kind object;
  #L40882c.  v3:= new `y2.a`;
  #L408830.  call `<init>`(v3, v0, v1) @signature `Ly2/a;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L408836.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40883c.  return @kind void;
}
procedure `java.util.List` `e`(`y2.b$a` v2 @kind this) @signature `Ly2/b$a;.e:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4082c4.  v0:= new `java.util.ArrayList`;
  #L4082c8.  v1:= v2.`y2.b$a.a` @type ^`java.util.List` @kind object;
  #L4082cc.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4082d2.  v1:= v2.`y2.b$a.a` @type ^`java.util.List` @kind object;
  #L4082d6.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4082dc.  return v0 @kind object;
}
procedure `okio.ByteString` `j`(`y2.b$a` v5 @kind this) @signature `Ly2/b$a;.j:()Lokio/ByteString;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L408378.  call temp:= `i`(v5) @signature `Ly2/b$a;.i:()I` @kind direct;
  #L40837e.  v0:= temp;
  #L408380.  v1:= v0 ^& 128;
  #L408384.  v2:= 128I;
  #L408388.  if v1 != v2 then goto L408390;
  #L40838c.  v1:= 1I;
  #L40838e.  goto L408392;
  #L408390.  v1:= 0I;
  #L408392.  v2:= 127I;
  #L408396.  call temp:= `m`(v5, v0, v2) @signature `Ly2/b$a;.m:(II)I` @kind virtual;
  #L40839c.  v0:= temp;
  #L40839e.  if v1 == 0 then goto L4083ca;
  #L4083a2.  call temp:= `f`() @signature `Ly2/i;.f:()Ly2/i;` @kind static;
  #L4083a8.  v1:= temp @kind object;
  #L4083aa.  v2:= v5.`y2.b$a.b` @type ^`okio.e` @kind object;
  #L4083ae.  v3:= (`long`) v0 @kind i2l;
  #L4083b0.  call temp:= `F`(v2, v3) @signature `Lokio/e;.F:(J)[B` @kind interface;
  #L4083b6.  v0:= temp @kind object;
  #L4083b8.  call temp:= `c`(v1, v0) @signature `Ly2/i;.c:([B)[B` @kind virtual;
  #L4083be.  v0:= temp @kind object;
  #L4083c0.  call temp:= `j`(v0) @signature `Lokio/ByteString;.j:([B)Lokio/ByteString;` @kind static;
  #L4083c6.  v0:= temp @kind object;
  #L4083c8.  return v0 @kind object;
  #L4083ca.  v1:= v5.`y2.b$a.b` @type ^`okio.e` @kind object;
  #L4083ce.  v2:= (`long`) v0 @kind i2l;
  #L4083d0.  call temp:= `k`(v1, v2) @signature `Lokio/e;.k:(J)Lokio/ByteString;` @kind interface;
  #L4083d6.  v0:= temp @kind object;
  #L4083d8.  return v0 @kind object;
}
procedure `void` `k`(`y2.b$a` v3 @kind this) @signature `Ly2/b$a;.k:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4085a8.  v0:= v3.`y2.b$a.b` @type ^`okio.e` @kind object;
  #L4085ac.  call temp:= `n`(v0) @signature `Lokio/e;.n:()Z` @kind interface;
  #L4085b2.  v0:= temp;
  #L4085b4.  if v0 != 0 then goto L4086c2;
  #L4085b8.  v0:= v3.`y2.b$a.b` @type ^`okio.e` @kind object;
  #L4085bc.  call temp:= `readByte`(v0) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L4085c2.  v0:= temp;
  #L4085c4.  v0:= v0 ^& 255;
  #L4085c8.  v1:= 128I;
  #L4085cc.  if v0 == v1 then goto L4086b2;
  #L4085d0.  v2:= v0 ^& 128;
  #L4085d4.  if v2 != v1 then goto L4085f0;
  #L4085d8.  v1:= 127I;
  #L4085dc.  call temp:= `m`(v3, v0, v1) @signature `Ly2/b$a;.m:(II)I` @kind virtual;
  #L4085e2.  v0:= temp;
  #L4085e4.  v0:= v0 + -1;
  #L4085e8.  call `l`(v3, v0) @signature `Ly2/b$a;.l:(I)V` @kind direct;
  #L4085ee.  goto L4085a8;
  #L4085f0.  v1:= 64I;
  #L4085f4.  if v0 != v1 then goto L408600;
  #L4085f8.  call `o`(v3) @signature `Ly2/b$a;.o:()V` @kind direct;
  #L4085fe.  goto L4085a8;
  #L408600.  v2:= v0 ^& 64;
  #L408604.  if v2 != v1 then goto L408620;
  #L408608.  v1:= 63I;
  #L40860c.  call temp:= `m`(v3, v0, v1) @signature `Ly2/b$a;.m:(II)I` @kind virtual;
  #L408612.  v0:= temp;
  #L408614.  v0:= v0 + -1;
  #L408618.  call `n`(v3, v0) @signature `Ly2/b$a;.n:(I)V` @kind direct;
  #L40861e.  goto L4085a8;
  #L408620.  v1:= v0 ^& 32;
  #L408624.  v2:= 32I;
  #L408628.  if v1 != v2 then goto L408682;
  #L40862c.  v1:= 31I;
  #L408630.  call temp:= `m`(v3, v0, v1) @signature `Ly2/b$a;.m:(II)I` @kind virtual;
  #L408636.  v0:= temp;
  #L408638.  v3.`y2.b$a.d` @type ^`int` := v0;
  #L40863c.  if v0 < 0 then goto L408650;
  #L408640.  v1:= v3.`y2.b$a.c` @type ^`int`;
  #L408644.  if v0 > v1 then goto L408650;
  #L408648.  call `a`(v3) @signature `Ly2/b$a;.a:()V` @kind direct;
  #L40864e.  goto L4085a8;
  #L408650.  v0:= new `java.io.IOException`;
  #L408654.  v1:= new `java.lang.StringBuilder`;
  #L408658.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40865e.  v2:= "Invalid dynamic table size update " @kind object;
  #L408662.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408668.  v2:= v3.`y2.b$a.d` @type ^`int`;
  #L40866c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L408672.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L408678.  v1:= temp @kind object;
  #L40867a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408680.  throw v0;
  #L408682.  v1:= 16I;
  #L408686.  if v0 == v1 then goto L4086a8;
  #L40868a.  if v0 != 0 then goto L408690;
  #L40868e.  goto L4086a8;
  #L408690.  v1:= 15I;
  #L408694.  call temp:= `m`(v3, v0, v1) @signature `Ly2/b$a;.m:(II)I` @kind virtual;
  #L40869a.  v0:= temp;
  #L40869c.  v0:= v0 + -1;
  #L4086a0.  call `p`(v3, v0) @signature `Ly2/b$a;.p:(I)V` @kind direct;
  #L4086a6.  goto L4085a8;
  #L4086a8.  call `q`(v3) @signature `Ly2/b$a;.q:()V` @kind direct;
  #L4086ae.  goto L4085a8;
  #L4086b2.  v0:= new `java.io.IOException`;
  #L4086b6.  v1:= "index == 0" @kind object;
  #L4086ba.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4086c0.  throw v0;
  #L4086c2.  return @kind void;
}
procedure `int` `m`(`y2.b$a` v2 @kind this, `int` v3 , `int` v4 ) @signature `Ly2/b$a;.m:(II)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L408284.  v3:= v3 ^& v4 @kind int;
  #L408286.  if v3 >= v4 then goto L40828c;
  #L40828a.  return v3;
  #L40828c.  v3:= 0I;
  #L40828e.  call temp:= `i`(v2) @signature `Ly2/b$a;.i:()I` @kind direct;
  #L408294.  v0:= temp;
  #L408296.  v1:= v0 ^& 128;
  #L40829a.  if v1 == 0 then goto L4082ac;
  #L40829e.  v0:= v0 ^& 127;
  #L4082a2.  v0:= v0 ^< v3 @kind int;
  #L4082a4.  v4:= v4 + v0 @kind int;
  #L4082a6.  v3:= v3 + 7;
  #L4082aa.  goto L40828e;
  #L4082ac.  v3:= v0 ^< v3 @kind int;
  #L4082b0.  v4:= v4 + v3 @kind int;
  #L4082b2.  return v4;
}
