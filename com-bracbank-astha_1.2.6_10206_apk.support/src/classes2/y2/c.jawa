record `y2.c` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okio.ByteString` `@@y2.c.a` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@y2.c.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@y2.c.c` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@y2.c.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ly2/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L40d6fc.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L40d700.  call temp:= `g`(v0) @signature `Lokio/ByteString;.g:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L40d706.  v0:= temp @kind object;
  #L40d708.  `@@y2.c.a` @type ^`okio.ByteString` := v0 @kind object;
  #L40d70c.  v1:= "DATA" @kind object;
  #L40d710.  v2:= "HEADERS" @kind object;
  #L40d714.  v3:= "PRIORITY" @kind object;
  #L40d718.  v4:= "RST_STREAM" @kind object;
  #L40d71c.  v5:= "SETTINGS" @kind object;
  #L40d720.  v6:= "PUSH_PROMISE" @kind object;
  #L40d724.  v7:= "PING" @kind object;
  #L40d728.  v8:= "GOAWAY" @kind object;
  #L40d72c.  v9:= "WINDOW_UPDATE" @kind object;
  #L40d730.  v10:= "CONTINUATION" @kind object;
  #L40d734.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10];
  #L40d73a.  v0:= temp @kind object;
  #L40d73c.  `@@y2.c.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L40d740.  v0:= 64I;
  #L40d744.  v0:= new `java.lang.String`[v0];
  #L40d748.  `@@y2.c.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L40d74c.  v0:= 256I;
  #L40d750.  v0:= new `java.lang.String`[v0];
  #L40d754.  `@@y2.c.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L40d758.  v0:= 0I;
  #L40d75a.  v1:= 0I;
  #L40d75c.  v2:= `@@y2.c.d` @type ^`java.lang.String`[] @kind object;
  #L40d760.  v3:= length @variable v2;
  #L40d762.  v4:= 32I;
  #L40d766.  v5:= 1I;
  #L40d768.  if v1 >= v3 then goto L40d79e;
  #L40d76c.  v3:= new `java.lang.Object`[v5];
  #L40d770.  call temp:= `toBinaryString`(v1) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L40d776.  v5:= temp @kind object;
  #L40d778.  v3[v0]:= v5 @kind object;
  #L40d77c.  v5:= "%8s" @kind object;
  #L40d780.  call temp:= `r`(v5, v3) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40d786.  v3:= temp @kind object;
  #L40d788.  v5:= 48I;
  #L40d78c.  call temp:= `replace`(v3, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L40d792.  v3:= temp @kind object;
  #L40d794.  v2[v1]:= v3 @kind object;
  #L40d798.  v1:= v1 + 1;
  #L40d79c.  goto L40d75c;
  #L40d79e.  v1:= `@@y2.c.c` @type ^`java.lang.String`[] @kind object;
  #L40d7a2.  v2:= "" @kind object;
  #L40d7a6.  v1[v0]:= v2 @kind object;
  #L40d7aa.  v2:= "END_STREAM" @kind object;
  #L40d7ae.  v1[v5]:= v2 @kind object;
  #L40d7b2.  v2:= new `int`[v5];
  #L40d7b6.  v2[v0]:= v5;
  #L40d7ba.  v3:= "PADDED" @kind object;
  #L40d7be.  v6:= 8I;
  #L40d7c2.  v1[v6]:= v3 @kind object;
  #L40d7c6.  v1:= 0I;
  #L40d7c8.  v3:= "|PADDED" @kind object;
  #L40d7cc.  if v1 >= v5 then goto L40d808;
  #L40d7d0.  v7:= v2[v1];
  #L40d7d4.  v8:= `@@y2.c.c` @type ^`java.lang.String`[] @kind object;
  #L40d7d8.  v9:= v7 ^| 8;
  #L40d7dc.  v10:= new `java.lang.StringBuilder`;
  #L40d7e0.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40d7e6.  v7:= v8[v7] @kind object;
  #L40d7ea.  call temp:= `append`(v10, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d7f0.  call temp:= `append`(v10, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d7f6.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40d7fc.  v3:= temp @kind object;
  #L40d7fe.  v8[v9]:= v3 @kind object;
  #L40d802.  v1:= v1 + 1;
  #L40d806.  goto L40d7c8;
  #L40d808.  v1:= `@@y2.c.c` @type ^`java.lang.String`[] @kind object;
  #L40d80c.  v7:= 4I;
  #L40d80e.  v8:= "END_HEADERS" @kind object;
  #L40d812.  v1[v7]:= v8 @kind object;
  #L40d816.  v7:= "PRIORITY" @kind object;
  #L40d81a.  v1[v4]:= v7 @kind object;
  #L40d81e.  v4:= 36I;
  #L40d822.  v7:= "END_HEADERS|PRIORITY" @kind object;
  #L40d826.  v1[v4]:= v7 @kind object;
  #L40d82a.  v1:= 3I;
  #L40d82c.  v4:= new `int`[v1];
  #L40d830.  goto L40d8f0;
  #L40d836.  v7:= 0I;
  #L40d838.  if v7 >= v1 then goto L40d8ca;
  #L40d83c.  v8:= v4[v7];
  #L40d840.  v9:= 0I;
  #L40d842.  if v9 >= v5 then goto L40d8c4;
  #L40d846.  v10:= v2[v9];
  #L40d84a.  v11:= `@@y2.c.c` @type ^`java.lang.String`[] @kind object;
  #L40d84e.  v12:= v10 ^| v8 @kind int;
  #L40d852.  v13:= new `java.lang.StringBuilder`;
  #L40d856.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40d85c.  v14:= v11[v10] @kind object;
  #L40d860.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d866.  v14:= 124I;
  #L40d86a.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d870.  v15:= v11[v8] @kind object;
  #L40d874.  call temp:= `append`(v13, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d87a.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40d880.  v13:= temp @kind object;
  #L40d882.  v11[v12]:= v13 @kind object;
  #L40d886.  v12:= v12 ^| v6 @kind int;
  #L40d888.  v13:= new `java.lang.StringBuilder`;
  #L40d88c.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40d892.  v10:= v11[v10] @kind object;
  #L40d896.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d89c.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d8a2.  v10:= v11[v8] @kind object;
  #L40d8a6.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d8ac.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d8b2.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40d8b8.  v10:= temp @kind object;
  #L40d8ba.  v11[v12]:= v10 @kind object;
  #L40d8be.  v9:= v9 + 1;
  #L40d8c2.  goto L40d842;
  #L40d8c4.  v7:= v7 + 1;
  #L40d8c8.  goto L40d838;
  #L40d8ca.  v1:= `@@y2.c.c` @type ^`java.lang.String`[] @kind object;
  #L40d8ce.  v2:= length @variable v1;
  #L40d8d0.  if v0 >= v2 then goto L40d8ee;
  #L40d8d4.  v2:= v1[v0] @kind object;
  #L40d8d8.  if v2 != 0 then goto L40d8e8;
  #L40d8dc.  v2:= `@@y2.c.d` @type ^`java.lang.String`[] @kind object;
  #L40d8e0.  v2:= v2[v0] @kind object;
  #L40d8e4.  v1[v0]:= v2 @kind object;
  #L40d8e8.  v0:= v0 + 1;
  #L40d8ec.  goto L40d8ca;
  #L40d8ee.  return @kind void;
  #L40d8f0.  v4:= (4I, 32I, 36I) @kind object;
  #L40d903.  goto L40d836;
}
procedure `void` `<init>`(`y2.c` v0 @kind this) @signature `Ly2/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L40d914.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40d91a.  return @kind void;
}
procedure `java.lang.String` `a`(`byte` v2 , `byte` v3 ) @signature `Ly2/c;.a:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L40d5b0.  if v3 != 0 then goto L40d5ba;
  #L40d5b4.  v2:= "" @kind object;
  #L40d5b8.  return v2 @kind object;
  #L40d5ba.  v0:= 2I;
  #L40d5bc.  if v2 == v0 then goto L40d64e;
  #L40d5c0.  v0:= 3I;
  #L40d5c2.  if v2 == v0 then goto L40d64e;
  #L40d5c6.  v0:= 4I;
  #L40d5c8.  if v2 == v0 then goto L40d638;
  #L40d5cc.  v0:= 6I;
  #L40d5ce.  if v2 == v0 then goto L40d638;
  #L40d5d2.  v0:= 7I;
  #L40d5d4.  if v2 == v0 then goto L40d64e;
  #L40d5d8.  v0:= 8I;
  #L40d5dc.  if v2 == v0 then goto L40d64e;
  #L40d5e0.  v0:= `@@y2.c.c` @type ^`java.lang.String`[] @kind object;
  #L40d5e4.  v1:= length @variable v0;
  #L40d5e6.  if v3 >= v1 then goto L40d5f0;
  #L40d5ea.  v0:= v0[v3] @kind object;
  #L40d5ee.  goto L40d5f8;
  #L40d5f0.  v0:= `@@y2.c.d` @type ^`java.lang.String`[] @kind object;
  #L40d5f4.  v0:= v0[v3] @kind object;
  #L40d5f8.  v1:= 5I;
  #L40d5fa.  if v2 != v1 then goto L40d618;
  #L40d5fe.  v1:= v3 ^& 4;
  #L40d602.  if v1 == 0 then goto L40d618;
  #L40d606.  v2:= "HEADERS" @kind object;
  #L40d60a.  v3:= "PUSH_PROMISE" @kind object;
  #L40d60e.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L40d614.  v2:= temp @kind object;
  #L40d616.  return v2 @kind object;
  #L40d618.  if v2 != 0 then goto L40d636;
  #L40d61c.  v2:= v3 ^& 32;
  #L40d620.  if v2 == 0 then goto L40d636;
  #L40d624.  v2:= "PRIORITY" @kind object;
  #L40d628.  v3:= "COMPRESSED" @kind object;
  #L40d62c.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L40d632.  v2:= temp @kind object;
  #L40d634.  return v2 @kind object;
  #L40d636.  return v0 @kind object;
  #L40d638.  v2:= 1I;
  #L40d63a.  if v3 != v2 then goto L40d644;
  #L40d63e.  v2:= "ACK" @kind object;
  #L40d642.  goto L40d64c;
  #L40d644.  v2:= `@@y2.c.d` @type ^`java.lang.String`[] @kind object;
  #L40d648.  v2:= v2[v3] @kind object;
  #L40d64c.  return v2 @kind object;
  #L40d64e.  v2:= `@@y2.c.d` @type ^`java.lang.String`[] @kind object;
  #L40d652.  v2:= v2[v3] @kind object;
  #L40d656.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`boolean` v4 , `int` v5 , `int` v6 , `byte` v7 , `byte` v8 ) @signature `Ly2/c;.b:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40d668.  v0:= `@@y2.c.b` @type ^`java.lang.String`[] @kind object;
  #L40d66c.  v1:= length @variable v0;
  #L40d66e.  v2:= 0I;
  #L40d670.  v3:= 1I;
  #L40d672.  if v7 >= v1 then goto L40d67c;
  #L40d676.  v0:= v0[v7] @kind object;
  #L40d67a.  goto L40d698;
  #L40d67c.  v0:= new `java.lang.Object`[v3];
  #L40d680.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L40d686.  v1:= temp @kind object;
  #L40d688.  v0[v2]:= v1 @kind object;
  #L40d68c.  v1:= "0x%02x" @kind object;
  #L40d690.  call temp:= `r`(v1, v0) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40d696.  v0:= temp @kind object;
  #L40d698.  call temp:= `a`(v7, v8) @signature `Ly2/c;.a:(BB)Ljava/lang/String;` @kind static;
  #L40d69e.  v7:= temp @kind object;
  #L40d6a0.  v8:= 5I;
  #L40d6a2.  v8:= new `java.lang.Object`[v8];
  #L40d6a6.  if v4 == 0 then goto L40d6b0;
  #L40d6aa.  v4:= "<<" @kind object;
  #L40d6ae.  goto L40d6b4;
  #L40d6b0.  v4:= ">>" @kind object;
  #L40d6b4.  v8[v2]:= v4 @kind object;
  #L40d6b8.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40d6be.  v4:= temp @kind object;
  #L40d6c0.  v8[v3]:= v4 @kind object;
  #L40d6c4.  v4:= 2I;
  #L40d6c6.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40d6cc.  v5:= temp @kind object;
  #L40d6ce.  v8[v4]:= v5 @kind object;
  #L40d6d2.  v4:= 3I;
  #L40d6d4.  v8[v4]:= v0 @kind object;
  #L40d6d8.  v4:= 4I;
  #L40d6da.  v8[v4]:= v7 @kind object;
  #L40d6de.  v4:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L40d6e2.  call temp:= `r`(v4, v8) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40d6e8.  v4:= temp @kind object;
  #L40d6ea.  return v4 @kind object;
}
procedure `java.lang.IllegalArgumentException` `c`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Ly2/c;.c:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;

  #L40d58c.  v0:= new `java.lang.IllegalArgumentException`;
  #L40d590.  call temp:= `r`(v1, v2) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40d596.  v1:= temp @kind object;
  #L40d598.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d59e.  throw v0;
}
procedure `java.io.IOException` `d`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Ly2/c;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;

  #L40d568.  v0:= new `java.io.IOException`;
  #L40d56c.  call temp:= `r`(v1, v2) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40d572.  v1:= temp @kind object;
  #L40d574.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d57a.  throw v0;
}
