record `y2.g` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `y2.g.a` @AccessFlag ;
  `long` `y2.g.b` @AccessFlag ;
  `int` `y2.g.c` @AccessFlag FINAL;
  `y2.e` `y2.g.d` @AccessFlag FINAL;
  `java.util.Deque` `y2.g.e` @AccessFlag PRIVATE_FINAL;
  `y2.a$a` `y2.g.f` @AccessFlag PRIVATE;
  `boolean` `y2.g.g` @AccessFlag PRIVATE;
  `y2.g$b` `y2.g.h` @AccessFlag PRIVATE_FINAL;
  `y2.g$a` `y2.g.i` @AccessFlag FINAL;
  `y2.g$c` `y2.g.j` @AccessFlag FINAL;
  `y2.g$c` `y2.g.k` @AccessFlag FINAL;
  `okhttp3.internal.http2.ErrorCode` `y2.g.l` @AccessFlag ;
}
procedure `void` `<clinit>`() @signature `Ly2/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L40c88c.  return @kind void;
}
procedure `void` `<init>`(`y2.g` v3 @kind this, `int` v4 , `y2.e` v5 @kind object, `boolean` v6 , `boolean` v7 , `okhttp3.q` v8 @kind object) @signature `Ly2/g;.<init>:(ILy2/e;ZZLokhttp3/q;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40c8a0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40c8a6.  v0:= 0L;
  #L40c8aa.  v3.`y2.g.a` @type ^`long` := v0 @kind wide;
  #L40c8ae.  v0:= new `java.util.ArrayDeque`;
  #L40c8b2.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L40c8b8.  v3.`y2.g.e` @type ^`java.util.Deque` := v0 @kind object;
  #L40c8bc.  v1:= new `y2.g$c`;
  #L40c8c0.  call `<init>`(v1, v3) @signature `Ly2/g$c;.<init>:(Ly2/g;)V` @kind direct;
  #L40c8c6.  v3.`y2.g.j` @type ^`y2.g$c` := v1 @kind object;
  #L40c8ca.  v1:= new `y2.g$c`;
  #L40c8ce.  call `<init>`(v1, v3) @signature `Ly2/g$c;.<init>:(Ly2/g;)V` @kind direct;
  #L40c8d4.  v3.`y2.g.k` @type ^`y2.g$c` := v1 @kind object;
  #L40c8d8.  v1:= 0I;
  #L40c8da.  v3.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L40c8de.  v1:= "connection == null" @kind object;
  #L40c8e2.  call temp:= `requireNonNull`(v5, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40c8e8.  v3.`y2.g.c` @type ^`int` := v4;
  #L40c8ec.  v3.`y2.g.d` @type ^`y2.e` := v5 @kind object;
  #L40c8f0.  v4:= v5.`y2.e.o` @type ^`y2.k` @kind object;
  #L40c8f4.  call temp:= `d`(v4) @signature `Ly2/k;.d:()I` @kind virtual;
  #L40c8fa.  v4:= temp;
  #L40c8fc.  v1:= (`long`) v4 @kind i2l;
  #L40c8fe.  v3.`y2.g.b` @type ^`long` := v1 @kind wide;
  #L40c902.  v4:= new `y2.g$b`;
  #L40c906.  v5:= v5.`y2.e.n` @type ^`y2.k` @kind object;
  #L40c90a.  call temp:= `d`(v5) @signature `Ly2/k;.d:()I` @kind virtual;
  #L40c910.  v5:= temp;
  #L40c912.  v1:= (`long`) v5 @kind i2l;
  #L40c914.  call `<init>`(v4, v3, v1) @signature `Ly2/g$b;.<init>:(Ly2/g;J)V` @kind direct;
  #L40c91a.  v3.`y2.g.h` @type ^`y2.g$b` := v4 @kind object;
  #L40c91e.  v5:= new `y2.g$a`;
  #L40c922.  call `<init>`(v5, v3) @signature `Ly2/g$a;.<init>:(Ly2/g;)V` @kind direct;
  #L40c928.  v3.`y2.g.i` @type ^`y2.g$a` := v5 @kind object;
  #L40c92c.  v4.`y2.g$b.e` @type ^`boolean` := v7 @kind boolean;
  #L40c930.  v5.`y2.g$a.c` @type ^`boolean` := v6 @kind boolean;
  #L40c934.  if v8 == 0 then goto L40c93e;
  #L40c938.  call temp:= `add`(v0, v8) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40c93e.  call temp:= `l`(v3) @signature `Ly2/g;.l:()Z` @kind virtual;
  #L40c944.  v4:= temp;
  #L40c946.  if v4 == 0 then goto L40c960;
  #L40c94a.  if v8 != 0 then goto L40c950;
  #L40c94e.  goto L40c960;
  #L40c950.  v4:= new `java.lang.IllegalStateException`;
  #L40c954.  v5:= "locally-initiated streams shouldn't have headers yet" @kind object;
  #L40c958.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40c95e.  throw v4;
  #L40c960.  call temp:= `l`(v3) @signature `Ly2/g;.l:()Z` @kind virtual;
  #L40c966.  v4:= temp;
  #L40c968.  if v4 != 0 then goto L40c982;
  #L40c96c.  if v8 == 0 then goto L40c972;
  #L40c970.  goto L40c982;
  #L40c972.  v4:= new `java.lang.IllegalStateException`;
  #L40c976.  v5:= "remotely-initiated streams should have headers" @kind object;
  #L40c97a.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40c980.  throw v4;
  #L40c982.  return @kind void;
}
procedure `java.util.Deque` `a`(`y2.g` v0 @kind object) @signature `Ly2/g;.a:(Ly2/g;)Ljava/util/Deque;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L40c718.  v0:= v0.`y2.g.e` @type ^`java.util.Deque` @kind object;
  #L40c71c.  return v0 @kind object;
}
procedure `y2.a$a` `b`(`y2.g` v0 @kind object) @signature `Ly2/g;.b:(Ly2/g;)Ly2/a$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L40cc70.  v0:= v0.`y2.g.f` @type ^`y2.a$a` @kind object;
  #L40cc74.  return v0 @kind object;
}
procedure `boolean` `g`(`y2.g` v2 @kind this, `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Ly2/g;.g:(Lokhttp3/internal/http2/ErrorCode;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40c5e0.  @monitorenter v2
  #L40c5e2.  v0:= v2.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L40c5e6.  v1:= 0I;
  #L40c5e8.  if v0 == 0 then goto L40c5f0;
  #L40c5ec.  @monitorexit v2
  #L40c5ee.  return v1;
  #L40c5f0.  v0:= v2.`y2.g.h` @type ^`y2.g$b` @kind object;
  #L40c5f4.  v0:= v0.`y2.g$b.e` @type ^`boolean` @kind boolean;
  #L40c5f8.  if v0 == 0 then goto L40c60c;
  #L40c5fc.  v0:= v2.`y2.g.i` @type ^`y2.g$a` @kind object;
  #L40c600.  v0:= v0.`y2.g$a.c` @type ^`boolean` @kind boolean;
  #L40c604.  if v0 == 0 then goto L40c60c;
  #L40c608.  @monitorexit v2
  #L40c60a.  return v1;
  #L40c60c.  v2.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` := v3 @kind object;
  #L40c610.  call `notifyAll`(v2) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L40c616.  @monitorexit v2
  #L40c618.  v3:= v2.`y2.g.d` @type ^`y2.e` @kind object;
  #L40c61c.  v0:= v2.`y2.g.c` @type ^`int`;
  #L40c620.  call temp:= `f0`(v3, v0) @signature `Ly2/e;.f0:(I)Ly2/g;` @kind virtual;
  #L40c626.  v3:= 1I;
  #L40c628.  return v3;
  #L40c62a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40c62c.  @monitorexit v2
  #L40c62e.  throw v3;
  catch `java.lang.Throwable` @[L40c5e2..L40c618] goto L40c62a;
  catch `java.lang.Throwable` @[L40c62c..L40c62e] goto L40c62a;
}
procedure `void` `c`(`y2.g` v3 @kind this, `long` v4 ) @signature `Ly2/g;.c:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L40c994.  v0:= v3.`y2.g.b` @type ^`long` @kind wide;
  #L40c998.  v0:= v0 + v4 @kind long;
  #L40c99a.  v3.`y2.g.b` @type ^`long` := v0 @kind wide;
  #L40c99e.  v0:= 0L;
  #L40c9a2.  v2:= lcmp(v4, v0);
  #L40c9a6.  if v2 <= 0 then goto L40c9b0;
  #L40c9aa.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L40c9b0.  return @kind void;
}
procedure `void` `d`(`y2.g` v2 @kind this) @signature `Ly2/g;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L40c9c4.  @monitorenter v2
  #L40c9c6.  v0:= v2.`y2.g.h` @type ^`y2.g$b` @kind object;
  #L40c9ca.  v1:= v0.`y2.g$b.e` @type ^`boolean` @kind boolean;
  #L40c9ce.  if v1 != 0 then goto L40c9f2;
  #L40c9d2.  v0:= v0.`y2.g$b.d` @type ^`boolean` @kind boolean;
  #L40c9d6.  if v0 == 0 then goto L40c9f2;
  #L40c9da.  v0:= v2.`y2.g.i` @type ^`y2.g$a` @kind object;
  #L40c9de.  v1:= v0.`y2.g$a.c` @type ^`boolean` @kind boolean;
  #L40c9e2.  if v1 != 0 then goto L40c9ee;
  #L40c9e6.  v0:= v0.`y2.g$a.b` @type ^`boolean` @kind boolean;
  #L40c9ea.  if v0 == 0 then goto L40c9f2;
  #L40c9ee.  v0:= 1I;
  #L40c9f0.  goto L40c9f4;
  #L40c9f2.  v0:= 0I;
  #L40c9f4.  call temp:= `m`(v2) @signature `Ly2/g;.m:()Z` @kind virtual;
  #L40c9fa.  v1:= temp;
  #L40c9fc.  @monitorexit v2
  #L40c9fe.  if v0 == 0 then goto L40ca0e;
  #L40ca02.  v0:= `@@okhttp3.internal.http2.ErrorCode.f` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L40ca06.  call `f`(v2, v0) @signature `Ly2/g;.f:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L40ca0c.  goto L40ca20;
  #L40ca0e.  if v1 != 0 then goto L40ca20;
  #L40ca12.  v0:= v2.`y2.g.d` @type ^`y2.e` @kind object;
  #L40ca16.  v1:= v2.`y2.g.c` @type ^`int`;
  #L40ca1a.  call temp:= `f0`(v0, v1) @signature `Ly2/e;.f0:(I)Ly2/g;` @kind virtual;
  #L40ca20.  return @kind void;
  #L40ca22.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40ca24.  @monitorexit v2
  #L40ca26.  throw v0;
  catch `java.lang.Throwable` @[L40c9c6..L40c9fe] goto L40ca22;
  catch `java.lang.Throwable` @[L40ca24..L40ca26] goto L40ca22;
}
procedure `void` `e`(`y2.g` v2 @kind this) @signature `Ly2/g;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L40ca4c.  v0:= v2.`y2.g.i` @type ^`y2.g$a` @kind object;
  #L40ca50.  v1:= v0.`y2.g$a.b` @type ^`boolean` @kind boolean;
  #L40ca54.  if v1 != 0 then goto L40ca8a;
  #L40ca58.  v0:= v0.`y2.g$a.c` @type ^`boolean` @kind boolean;
  #L40ca5c.  if v0 != 0 then goto L40ca7a;
  #L40ca60.  v0:= v2.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L40ca64.  if v0 != 0 then goto L40ca6a;
  #L40ca68.  return @kind void;
  #L40ca6a.  v0:= new `okhttp3.internal.http2.StreamResetException`;
  #L40ca6e.  v1:= v2.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L40ca72.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/StreamResetException;.<init>:(Lokhttp3/internal/http2/ErrorCode;)V` @kind direct;
  #L40ca78.  throw v0;
  #L40ca7a.  v0:= new `java.io.IOException`;
  #L40ca7e.  v1:= "stream finished" @kind object;
  #L40ca82.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40ca88.  throw v0;
  #L40ca8a.  v0:= new `java.io.IOException`;
  #L40ca8e.  v1:= "stream closed" @kind object;
  #L40ca92.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40ca98.  throw v0;
}
procedure `void` `f`(`y2.g` v2 @kind this, `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Ly2/g;.f:(Lokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40caac.  call temp:= `g`(v2, v3) @signature `Ly2/g;.g:(Lokhttp3/internal/http2/ErrorCode;)Z` @kind direct;
  #L40cab2.  v0:= temp;
  #L40cab4.  if v0 != 0 then goto L40caba;
  #L40cab8.  return @kind void;
  #L40caba.  v0:= v2.`y2.g.d` @type ^`y2.e` @kind object;
  #L40cabe.  v1:= v2.`y2.g.c` @type ^`int`;
  #L40cac2.  call `m0`(v0, v1, v3) @signature `Ly2/e;.m0:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L40cac8.  return @kind void;
}
procedure `void` `h`(`y2.g` v2 @kind this, `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Ly2/g;.h:(Lokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40cadc.  call temp:= `g`(v2, v3) @signature `Ly2/g;.g:(Lokhttp3/internal/http2/ErrorCode;)Z` @kind direct;
  #L40cae2.  v0:= temp;
  #L40cae4.  if v0 != 0 then goto L40caea;
  #L40cae8.  return @kind void;
  #L40caea.  v0:= v2.`y2.g.d` @type ^`y2.e` @kind object;
  #L40caee.  v1:= v2.`y2.g.c` @type ^`int`;
  #L40caf2.  call `n0`(v0, v1, v3) @signature `Ly2/e;.n0:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L40caf8.  return @kind void;
}
procedure `int` `i`(`y2.g` v1 @kind this) @signature `Ly2/g;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c700.  v0:= v1.`y2.g.c` @type ^`int`;
  #L40c704.  return v0;
}
procedure `okio.p` `j`(`y2.g` v2 @kind this) @signature `Ly2/g;.j:()Lokio/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40c7e8.  @monitorenter v2
  #L40c7ea.  v0:= v2.`y2.g.g` @type ^`boolean` @kind boolean;
  #L40c7ee.  if v0 != 0 then goto L40c810;
  #L40c7f2.  call temp:= `l`(v2) @signature `Ly2/g;.l:()Z` @kind virtual;
  #L40c7f8.  v0:= temp;
  #L40c7fa.  if v0 == 0 then goto L40c800;
  #L40c7fe.  goto L40c810;
  #L40c800.  v0:= new `java.lang.IllegalStateException`;
  #L40c804.  v1:= "reply before requesting the sink" @kind object;
  #L40c808.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40c80e.  throw v0;
  #L40c810.  @monitorexit v2
  #L40c812.  v0:= v2.`y2.g.i` @type ^`y2.g$a` @kind object;
  #L40c816.  return v0 @kind object;
  #L40c818.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40c81a.  @monitorexit v2
  #L40c81c.  throw v0;
  catch `java.lang.Throwable` @[L40c7ea..L40c812] goto L40c818;
  catch `java.lang.Throwable` @[L40c81a..L40c81c] goto L40c818;
}
procedure `okio.q` `k`(`y2.g` v1 @kind this) @signature `Ly2/g;.k:()Lokio/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c844.  v0:= v1.`y2.g.h` @type ^`y2.g$b` @kind object;
  #L40c848.  return v0 @kind object;
}
procedure `boolean` `l`(`y2.g` v4 @kind this) @signature `Ly2/g;.l:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40c654.  v0:= v4.`y2.g.c` @type ^`int`;
  #L40c658.  v1:= 1I;
  #L40c65a.  v0:= v0 ^& v1 @kind int;
  #L40c65c.  v2:= 0I;
  #L40c65e.  if v0 != v1 then goto L40c666;
  #L40c662.  v0:= 1I;
  #L40c664.  goto L40c668;
  #L40c666.  v0:= 0I;
  #L40c668.  v3:= v4.`y2.g.d` @type ^`y2.e` @kind object;
  #L40c66c.  v3:= v3.`y2.e.a` @type ^`boolean` @kind boolean;
  #L40c670.  if v3 != v0 then goto L40c676;
  #L40c674.  goto L40c678;
  #L40c676.  v1:= 0I;
  #L40c678.  return v1;
}
procedure `boolean` `m`(`y2.g` v3 @kind this) @signature `Ly2/g;.m:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40c68c.  @monitorenter v3
  #L40c68e.  v0:= v3.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L40c692.  v1:= 0I;
  #L40c694.  if v0 == 0 then goto L40c69c;
  #L40c698.  @monitorexit v3
  #L40c69a.  return v1;
  #L40c69c.  v0:= v3.`y2.g.h` @type ^`y2.g$b` @kind object;
  #L40c6a0.  v2:= v0.`y2.g$b.e` @type ^`boolean` @kind boolean;
  #L40c6a4.  if v2 != 0 then goto L40c6b0;
  #L40c6a8.  v0:= v0.`y2.g$b.d` @type ^`boolean` @kind boolean;
  #L40c6ac.  if v0 == 0 then goto L40c6d0;
  #L40c6b0.  v0:= v3.`y2.g.i` @type ^`y2.g$a` @kind object;
  #L40c6b4.  v2:= v0.`y2.g$a.c` @type ^`boolean` @kind boolean;
  #L40c6b8.  if v2 != 0 then goto L40c6c4;
  #L40c6bc.  v0:= v0.`y2.g$a.b` @type ^`boolean` @kind boolean;
  #L40c6c0.  if v0 == 0 then goto L40c6d0;
  #L40c6c4.  v0:= v3.`y2.g.g` @type ^`boolean` @kind boolean;
  #L40c6c8.  if v0 == 0 then goto L40c6d0;
  #L40c6cc.  @monitorexit v3
  #L40c6ce.  return v1;
  #L40c6d0.  v0:= 1I;
  #L40c6d2.  @monitorexit v3
  #L40c6d4.  return v0;
  #L40c6d6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40c6d8.  @monitorexit v3
  #L40c6da.  throw v0;
  catch `java.lang.Throwable` @[L40c68e..L40c692] goto L40c6d6;
  catch `java.lang.Throwable` @[L40c69c..L40c6c8] goto L40c6d6;
}
procedure `okio.r` `n`(`y2.g` v1 @kind this) @signature `Ly2/g;.n:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c85c.  v0:= v1.`y2.g.j` @type ^`y2.g$c` @kind object;
  #L40c860.  return v0 @kind object;
}
procedure `void` `o`(`y2.g` v3 @kind this, `okio.e` v4 @kind object, `int` v5 ) @signature `Ly2/g;.o:(Lokio/e;I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L40cb0c.  v0:= v3.`y2.g.h` @type ^`y2.g$b` @kind object;
  #L40cb10.  v1:= (`long`) v5 @kind i2l;
  #L40cb12.  call `g`(v0, v4, v1) @signature `Ly2/g$b;.g:(Lokio/e;J)V` @kind virtual;
  #L40cb18.  return @kind void;
}
procedure `void` `p`(`y2.g` v2 @kind this) @signature `Ly2/g;.p:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L40cb2c.  @monitorenter v2
  #L40cb2e.  v0:= v2.`y2.g.h` @type ^`y2.g$b` @kind object;
  #L40cb32.  v1:= 1I;
  #L40cb34.  v0.`y2.g$b.e` @type ^`boolean` := v1 @kind boolean;
  #L40cb38.  call temp:= `m`(v2) @signature `Ly2/g;.m:()Z` @kind virtual;
  #L40cb3e.  v0:= temp;
  #L40cb40.  call `notifyAll`(v2) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L40cb46.  @monitorexit v2
  #L40cb48.  if v0 != 0 then goto L40cb5a;
  #L40cb4c.  v0:= v2.`y2.g.d` @type ^`y2.e` @kind object;
  #L40cb50.  v1:= v2.`y2.g.c` @type ^`int`;
  #L40cb54.  call temp:= `f0`(v0, v1) @signature `Ly2/e;.f0:(I)Ly2/g;` @kind virtual;
  #L40cb5a.  return @kind void;
  #L40cb5c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40cb5e.  @monitorexit v2
  #L40cb60.  throw v0;
  catch `java.lang.Throwable` @[L40cb2e..L40cb48] goto L40cb5c;
  catch `java.lang.Throwable` @[L40cb5e..L40cb60] goto L40cb5c;
}
procedure `void` `q`(`y2.g` v1 @kind this, `java.util.List` v2 @kind object) @signature `Ly2/g;.q:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;

  #L40cb88.  @monitorenter v1
  #L40cb8a.  v0:= 1I;
  #L40cb8c.  v1.`y2.g.g` @type ^`boolean` := v0 @kind boolean;
  #L40cb90.  v0:= v1.`y2.g.e` @type ^`java.util.Deque` @kind object;
  #L40cb94.  call temp:= `H`(v2) @signature `Lt2/c;.H:(Ljava/util/List;)Lokhttp3/q;` @kind static;
  #L40cb9a.  v2:= temp @kind object;
  #L40cb9c.  call temp:= `add`(v0, v2) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40cba2.  call temp:= `m`(v1) @signature `Ly2/g;.m:()Z` @kind virtual;
  #L40cba8.  v2:= temp;
  #L40cbaa.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L40cbb0.  @monitorexit v1
  #L40cbb2.  if v2 != 0 then goto L40cbc4;
  #L40cbb6.  v2:= v1.`y2.g.d` @type ^`y2.e` @kind object;
  #L40cbba.  v0:= v1.`y2.g.c` @type ^`int`;
  #L40cbbe.  call temp:= `f0`(v2, v0) @signature `Ly2/e;.f0:(I)Ly2/g;` @kind virtual;
  #L40cbc4.  return @kind void;
  #L40cbc6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40cbc8.  @monitorexit v1
  #L40cbca.  throw v2;
  catch `java.lang.Throwable` @[L40cb8c..L40cbb2] goto L40cbc6;
  catch `java.lang.Throwable` @[L40cbc8..L40cbca] goto L40cbc6;
}
procedure `void` `r`(`y2.g` v1 @kind this, `okhttp3.internal.http2.ErrorCode` v2 @kind object) @signature `Ly2/g;.r:(Lokhttp3/internal/http2/ErrorCode;)V` @AccessFlag  {
    temp;
    v0;

  #L40cbf0.  @monitorenter v1
  #L40cbf2.  v0:= v1.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L40cbf6.  if v0 != 0 then goto L40cc04;
  #L40cbfa.  v1.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` := v2 @kind object;
  #L40cbfe.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L40cc04.  @monitorexit v1
  #L40cc06.  return @kind void;
  #L40cc08.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40cc0a.  @monitorexit v1
  #L40cc0c.  throw v2;
  catch `java.lang.Throwable` @[L40cbf2..L40cc04] goto L40cc08;
}
procedure `okhttp3.q` `s`(`y2.g` v2 @kind this) @signature `Ly2/g;.s:()Lokhttp3/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40c730.  @monitorenter v2
  #L40c732.  v0:= v2.`y2.g.j` @type ^`y2.g$c` @kind object;
  #L40c736.  call `k`(v0) @signature `Lokio/a;.k:()V` @kind virtual;
  #L40c73c.  v0:= v2.`y2.g.e` @type ^`java.util.Deque` @kind object;
  #L40c740.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L40c746.  v0:= temp;
  #L40c748.  if v0 == 0 then goto L40c75c;
  #L40c74c.  v0:= v2.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L40c750.  if v0 != 0 then goto L40c75c;
  #L40c754.  call `t`(v2) @signature `Ly2/g;.t:()V` @kind virtual;
  #L40c75a.  goto L40c73c;
  #L40c75c.  v0:= v2.`y2.g.j` @type ^`y2.g$c` @kind object;
  #L40c760.  call `u`(v0) @signature `Ly2/g$c;.u:()V` @kind virtual;
  #L40c766.  v0:= v2.`y2.g.e` @type ^`java.util.Deque` @kind object;
  #L40c76a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L40c770.  v0:= temp;
  #L40c772.  if v0 != 0 then goto L40c78a;
  #L40c776.  v0:= v2.`y2.g.e` @type ^`java.util.Deque` @kind object;
  #L40c77a.  call temp:= `removeFirst`(v0) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L40c780.  v0:= temp @kind object;
  #L40c782.  v0:= (`okhttp3.q`) v0 @kind object;
  #L40c786.  @monitorexit v2
  #L40c788.  return v0 @kind object;
  #L40c78a.  v0:= new `okhttp3.internal.http2.StreamResetException`;
  #L40c78e.  v1:= v2.`y2.g.l` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L40c792.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/StreamResetException;.<init>:(Lokhttp3/internal/http2/ErrorCode;)V` @kind direct;
  #L40c798.  throw v0;
  #L40c79a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40c79c.  v1:= v2.`y2.g.j` @type ^`y2.g$c` @kind object;
  #L40c7a0.  call `u`(v1) @signature `Ly2/g$c;.u:()V` @kind virtual;
  #L40c7a6.  throw v0;
  #L40c7a8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40c7aa.  @monitorexit v2
  #L40c7ac.  throw v0;
  catch `java.lang.Throwable` @[L40c732..L40c73c] goto L40c7a8;
  catch `java.lang.Throwable` @[L40c73c..L40c75a] goto L40c79a;
  catch `java.lang.Throwable` @[L40c75c..L40c786] goto L40c7a8;
  catch `java.lang.Throwable` @[L40c78a..L40c7a8] goto L40c7a8;
}
procedure `void` `t`(`y2.g` v1 @kind this) @signature `Ly2/g;.t:()V` @AccessFlag  {
    temp;
    v0;

  #L40cc2c.  call `wait`(v1) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L40cc32.  return @kind void;
  #L40cc34.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L40cc3a.  v0:= temp @kind object;
  #L40cc3c.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L40cc42.  v0:= new `java.io.InterruptedIOException`;
  #L40cc46.  call `<init>`(v0) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L40cc4c.  throw v0;
  catch `java.lang.InterruptedException` @[L40cc2c..L40cc32] goto L40cc34;
}
procedure `okio.r` `u`(`y2.g` v1 @kind this) @signature `Ly2/g;.u:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c874.  v0:= v1.`y2.g.k` @type ^`y2.g$c` @kind object;
  #L40c878.  return v0 @kind object;
}
