record `y2.b$b` @kind class @AccessFlag FINAL {
  `okio.c` `y2.b$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `y2.b$b.b` @AccessFlag PRIVATE_FINAL;
  `int` `y2.b$b.c` @AccessFlag PRIVATE;
  `boolean` `y2.b$b.d` @AccessFlag PRIVATE;
  `int` `y2.b$b.e` @AccessFlag ;
  `int` `y2.b$b.f` @AccessFlag ;
  `y2.a`[] `y2.b$b.g` @AccessFlag ;
  `int` `y2.b$b.h` @AccessFlag ;
  `int` `y2.b$b.i` @AccessFlag ;
  `int` `y2.b$b.j` @AccessFlag ;
}
procedure `void` `<init>`(`y2.b$b` v1 @kind this, `int` v2 , `boolean` v3 , `okio.c` v4 @kind object) @signature `Ly2/b$b;.<init>:(IZLokio/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4088f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4088f6.  v0:= 2147483647I;
  #L4088fc.  v1.`y2.b$b.c` @type ^`int` := v0;
  #L408900.  v0:= 8I;
  #L408904.  v0:= new `y2.a`[v0];
  #L408908.  v1.`y2.b$b.g` @type ^`y2.a`[] := v0 @kind object;
  #L40890c.  v0:= length @variable v0;
  #L40890e.  v0:= v0 + -1;
  #L408912.  v1.`y2.b$b.h` @type ^`int` := v0;
  #L408916.  v0:= 0I;
  #L408918.  v1.`y2.b$b.i` @type ^`int` := v0;
  #L40891c.  v1.`y2.b$b.j` @type ^`int` := v0;
  #L408920.  v1.`y2.b$b.e` @type ^`int` := v2;
  #L408924.  v1.`y2.b$b.f` @type ^`int` := v2;
  #L408928.  v1.`y2.b$b.b` @type ^`boolean` := v3 @kind boolean;
  #L40892c.  v1.`y2.b$b.a` @type ^`okio.c` := v4 @kind object;
  #L408930.  return @kind void;
}
procedure `void` `<init>`(`y2.b$b` v2 @kind this, `okio.c` v3 @kind object) @signature `Ly2/b$b;.<init>:(Lokio/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L408944.  v0:= 4096I;
  #L408948.  v1:= 1I;
  #L40894a.  call `<init>`(v2, v0, v1, v3) @signature `Ly2/b$b;.<init>:(IZLokio/c;)V` @kind direct;
  #L408950.  return @kind void;
}
procedure `void` `a`(`y2.b$b` v2 @kind this) @signature `Ly2/b$b;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L408964.  v0:= v2.`y2.b$b.f` @type ^`int`;
  #L408968.  v1:= v2.`y2.b$b.j` @type ^`int`;
  #L40896c.  if v0 >= v1 then goto L408984;
  #L408970.  if v0 != 0 then goto L40897c;
  #L408974.  call `b`(v2) @signature `Ly2/b$b;.b:()V` @kind direct;
  #L40897a.  goto L408984;
  #L40897c.  v1:= v1 - v0 @kind int;
  #L40897e.  call temp:= `c`(v2, v1) @signature `Ly2/b$b;.c:(I)I` @kind direct;
  #L408984.  return @kind void;
}
procedure `void` `b`(`y2.b$b` v2 @kind this) @signature `Ly2/b$b;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L408998.  v0:= v2.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L40899c.  v1:= 0I;
  #L40899e.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L4089a4.  v0:= v2.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L4089a8.  v0:= length @variable v0;
  #L4089aa.  v0:= v0 + -1;
  #L4089ae.  v2.`y2.b$b.h` @type ^`int` := v0;
  #L4089b2.  v0:= 0I;
  #L4089b4.  v2.`y2.b$b.i` @type ^`int` := v0;
  #L4089b8.  v2.`y2.b$b.j` @type ^`int` := v0;
  #L4089bc.  return @kind void;
}
procedure `int` `c`(`y2.b$b` v4 @kind this, `int` v5 ) @signature `Ly2/b$b;.c:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L408850.  v0:= 0I;
  #L408852.  if v5 <= 0 then goto L4088de;
  #L408856.  v1:= v4.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L40885a.  v1:= length @variable v1;
  #L40885c.  v1:= v1 + -1;
  #L408860.  v2:= v4.`y2.b$b.h` @type ^`int`;
  #L408864.  if v1 < v2 then goto L4088a2;
  #L408868.  if v5 <= 0 then goto L4088a2;
  #L40886c.  v2:= v4.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L408870.  v3:= v2[v1] @kind object;
  #L408874.  v3:= v3.`y2.a.c` @type ^`int`;
  #L408878.  v5:= v5 - v3 @kind int;
  #L40887a.  v3:= v4.`y2.b$b.j` @type ^`int`;
  #L40887e.  v2:= v2[v1] @kind object;
  #L408882.  v2:= v2.`y2.a.c` @type ^`int`;
  #L408886.  v3:= v3 - v2 @kind int;
  #L408888.  v4.`y2.b$b.j` @type ^`int` := v3;
  #L40888c.  v2:= v4.`y2.b$b.i` @type ^`int`;
  #L408890.  v2:= v2 + -1;
  #L408894.  v4.`y2.b$b.i` @type ^`int` := v2;
  #L408898.  v0:= v0 + 1;
  #L40889c.  v1:= v1 + -1;
  #L4088a0.  goto L408860;
  #L4088a2.  v5:= v4.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L4088a6.  v1:= v2 + 1;
  #L4088aa.  v2:= v2 + 1;
  #L4088ae.  v2:= v2 + v0 @kind int;
  #L4088b0.  v3:= v4.`y2.b$b.i` @type ^`int`;
  #L4088b4.  call `arraycopy`(v5, v1, v5, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4088ba.  v5:= v4.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L4088be.  v1:= v4.`y2.b$b.h` @type ^`int`;
  #L4088c2.  v2:= v1 + 1;
  #L4088c6.  v1:= v1 + 1;
  #L4088ca.  v1:= v1 + v0 @kind int;
  #L4088cc.  v3:= 0I;
  #L4088ce.  call `fill`(v5, v2, v1, v3) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L4088d4.  v5:= v4.`y2.b$b.h` @type ^`int`;
  #L4088d8.  v5:= v5 + v0 @kind int;
  #L4088da.  v4.`y2.b$b.h` @type ^`int` := v5;
  #L4088de.  return v0;
}
procedure `void` `d`(`y2.b$b` v6 @kind this, `y2.a` v7 @kind object) @signature `Ly2/b$b;.d:(Ly2/a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4089d0.  v0:= v7.`y2.a.c` @type ^`int`;
  #L4089d4.  v1:= v6.`y2.b$b.f` @type ^`int`;
  #L4089d8.  if v0 <= v1 then goto L4089e4;
  #L4089dc.  call `b`(v6) @signature `Ly2/b$b;.b:()V` @kind direct;
  #L4089e2.  return @kind void;
  #L4089e4.  v2:= v6.`y2.b$b.j` @type ^`int`;
  #L4089e8.  v2:= v2 + v0 @kind int;
  #L4089ea.  v2:= v2 - v1 @kind int;
  #L4089ec.  call temp:= `c`(v6, v2) @signature `Ly2/b$b;.c:(I)I` @kind direct;
  #L4089f2.  v1:= v6.`y2.b$b.i` @type ^`int`;
  #L4089f6.  v1:= v1 + 1;
  #L4089fa.  v2:= v6.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L4089fe.  v3:= length @variable v2;
  #L408a00.  if v1 <= v3 then goto L408a2c;
  #L408a04.  v1:= length @variable v2;
  #L408a06.  v1:= v1 * 2;
  #L408a0a.  v1:= new `y2.a`[v1];
  #L408a0e.  v3:= 0I;
  #L408a10.  v4:= length @variable v2;
  #L408a12.  v5:= length @variable v2;
  #L408a14.  call `arraycopy`(v2, v3, v1, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L408a1a.  v2:= v6.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L408a1e.  v2:= length @variable v2;
  #L408a20.  v2:= v2 + -1;
  #L408a24.  v6.`y2.b$b.h` @type ^`int` := v2;
  #L408a28.  v6.`y2.b$b.g` @type ^`y2.a`[] := v1 @kind object;
  #L408a2c.  v1:= v6.`y2.b$b.h` @type ^`int`;
  #L408a30.  v2:= v1 + -1;
  #L408a34.  v6.`y2.b$b.h` @type ^`int` := v2;
  #L408a38.  v2:= v6.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L408a3c.  v2[v1]:= v7 @kind object;
  #L408a40.  v7:= v6.`y2.b$b.i` @type ^`int`;
  #L408a44.  v7:= v7 + 1;
  #L408a48.  v6.`y2.b$b.i` @type ^`int` := v7;
  #L408a4c.  v7:= v6.`y2.b$b.j` @type ^`int`;
  #L408a50.  v7:= v7 + v0 @kind int;
  #L408a52.  v6.`y2.b$b.j` @type ^`int` := v7;
  #L408a56.  return @kind void;
}
procedure `void` `e`(`y2.b$b` v1 @kind this, `int` v2 ) @signature `Ly2/b$b;.e:(I)V` @AccessFlag  {
    temp;
    v0;

  #L408a68.  v1.`y2.b$b.e` @type ^`int` := v2;
  #L408a6c.  v0:= 16384I;
  #L408a70.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L408a76.  v2:= temp;
  #L408a78.  v0:= v1.`y2.b$b.f` @type ^`int`;
  #L408a7c.  if v0 != v2 then goto L408a82;
  #L408a80.  return @kind void;
  #L408a82.  if v2 >= v0 then goto L408a96;
  #L408a86.  v0:= v1.`y2.b$b.c` @type ^`int`;
  #L408a8a.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L408a90.  v0:= temp;
  #L408a92.  v1.`y2.b$b.c` @type ^`int` := v0;
  #L408a96.  v0:= 1I;
  #L408a98.  v1.`y2.b$b.d` @type ^`boolean` := v0 @kind boolean;
  #L408a9c.  v1.`y2.b$b.f` @type ^`int` := v2;
  #L408aa0.  call `a`(v1) @signature `Ly2/b$b;.a:()V` @kind direct;
  #L408aa6.  return @kind void;
}
procedure `void` `f`(`y2.b$b` v3 @kind this, `okio.ByteString` v4 @kind object) @signature `Ly2/b$b;.f:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L408ab8.  v0:= v3.`y2.b$b.b` @type ^`boolean` @kind boolean;
  #L408abc.  v1:= 127I;
  #L408ac0.  if v0 == 0 then goto L408b1e;
  #L408ac4.  call temp:= `f`() @signature `Ly2/i;.f:()Ly2/i;` @kind static;
  #L408aca.  v0:= temp @kind object;
  #L408acc.  call temp:= `e`(v0, v4) @signature `Ly2/i;.e:(Lokio/ByteString;)I` @kind virtual;
  #L408ad2.  v0:= temp;
  #L408ad4.  call temp:= `p`(v4) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L408ada.  v2:= temp;
  #L408adc.  if v0 >= v2 then goto L408b1e;
  #L408ae0.  v0:= new `okio.c`;
  #L408ae4.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L408aea.  call temp:= `f`() @signature `Ly2/i;.f:()Ly2/i;` @kind static;
  #L408af0.  v2:= temp @kind object;
  #L408af2.  call `d`(v2, v4, v0) @signature `Ly2/i;.d:(Lokio/ByteString;Lokio/d;)V` @kind virtual;
  #L408af8.  call temp:= `b0`(v0) @signature `Lokio/c;.b0:()Lokio/ByteString;` @kind virtual;
  #L408afe.  v4:= temp @kind object;
  #L408b00.  call temp:= `p`(v4) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L408b06.  v0:= temp;
  #L408b08.  v2:= 128I;
  #L408b0c.  call `h`(v3, v0, v1, v2) @signature `Ly2/b$b;.h:(III)V` @kind virtual;
  #L408b12.  v0:= v3.`y2.b$b.a` @type ^`okio.c` @kind object;
  #L408b16.  call temp:= `k0`(v0, v4) @signature `Lokio/c;.k0:(Lokio/ByteString;)Lokio/c;` @kind virtual;
  #L408b1c.  goto L408b38;
  #L408b1e.  call temp:= `p`(v4) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L408b24.  v0:= temp;
  #L408b26.  v2:= 0I;
  #L408b28.  call `h`(v3, v0, v1, v2) @signature `Ly2/b$b;.h:(III)V` @kind virtual;
  #L408b2e.  v0:= v3.`y2.b$b.a` @type ^`okio.c` @kind object;
  #L408b32.  call temp:= `k0`(v0, v4) @signature `Lokio/c;.k0:(Lokio/ByteString;)Lokio/c;` @kind virtual;
  #L408b38.  return @kind void;
}
procedure `void` `g`(`y2.b$b` v13 @kind this, `java.util.List` v14 @kind object) @signature `Ly2/b$b;.g:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L408b4c.  v0:= v13.`y2.b$b.d` @type ^`boolean` @kind boolean;
  #L408b50.  v1:= 0I;
  #L408b52.  if v0 == 0 then goto L408b88;
  #L408b56.  v0:= v13.`y2.b$b.c` @type ^`int`;
  #L408b5a.  v2:= v13.`y2.b$b.f` @type ^`int`;
  #L408b5e.  v3:= 32I;
  #L408b62.  v4:= 31I;
  #L408b66.  if v0 >= v2 then goto L408b70;
  #L408b6a.  call `h`(v13, v0, v4, v3) @signature `Ly2/b$b;.h:(III)V` @kind virtual;
  #L408b70.  v13.`y2.b$b.d` @type ^`boolean` := v1 @kind boolean;
  #L408b74.  v0:= 2147483647I;
  #L408b7a.  v13.`y2.b$b.c` @type ^`int` := v0;
  #L408b7e.  v0:= v13.`y2.b$b.f` @type ^`int`;
  #L408b82.  call `h`(v13, v0, v4, v3) @signature `Ly2/b$b;.h:(III)V` @kind virtual;
  #L408b88.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L408b8e.  v0:= temp;
  #L408b90.  v2:= 0I;
  #L408b92.  if v2 >= v0 then goto L408d22;
  #L408b96.  call temp:= `get`(v14, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L408b9c.  v3:= temp @kind object;
  #L408b9e.  v3:= (`y2.a`) v3 @kind object;
  #L408ba2.  v4:= v3.`y2.a.a` @type ^`okio.ByteString` @kind object;
  #L408ba6.  call temp:= `s`(v4) @signature `Lokio/ByteString;.s:()Lokio/ByteString;` @kind virtual;
  #L408bac.  v4:= temp @kind object;
  #L408bae.  v5:= v3.`y2.a.b` @type ^`okio.ByteString` @kind object;
  #L408bb2.  v6:= `@@y2.b.b` @type ^`java.util.Map` @kind object;
  #L408bb6.  call temp:= `get`(v6, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L408bbc.  v6:= temp @kind object;
  #L408bbe.  v6:= (`java.lang.Integer`) v6 @kind object;
  #L408bc2.  v7:= -1I;
  #L408bc4.  v8:= 1I;
  #L408bc6.  if v6 == 0 then goto L408c26;
  #L408bca.  call temp:= `intValue`(v6) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L408bd0.  v6:= temp;
  #L408bd2.  v6:= v6 + v8 @kind int;
  #L408bd4.  if v6 <= v8 then goto L408c20;
  #L408bd8.  v9:= 8I;
  #L408bdc.  if v6 >= v9 then goto L408c20;
  #L408be0.  v9:= `@@y2.b.a` @type ^`y2.a`[] @kind object;
  #L408be4.  v10:= v6 + -1;
  #L408be8.  v10:= v9[v10] @kind object;
  #L408bec.  v10:= v10.`y2.a.b` @type ^`okio.ByteString` @kind object;
  #L408bf0.  call temp:= `q`(v10, v5) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L408bf6.  v10:= temp;
  #L408bf8.  if v10 == 0 then goto L408c00;
  #L408bfc.  v9:= v6;
  #L408bfe.  goto L408c2a;
  #L408c00.  v9:= v9[v6] @kind object;
  #L408c04.  v9:= v9.`y2.a.b` @type ^`okio.ByteString` @kind object;
  #L408c08.  call temp:= `q`(v9, v5) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L408c0e.  v9:= temp;
  #L408c10.  if v9 == 0 then goto L408c20;
  #L408c14.  v9:= v6 + 1;
  #L408c18.  v12:= v9;
  #L408c1a.  v9:= v6;
  #L408c1c.  v6:= v12;
  #L408c1e.  goto L408c2a;
  #L408c20.  v9:= v6;
  #L408c22.  v6:= -1I;
  #L408c24.  goto L408c2a;
  #L408c26.  v6:= -1I;
  #L408c28.  v9:= -1I;
  #L408c2a.  if v6 != v7 then goto L408c98;
  #L408c2e.  v10:= v13.`y2.b$b.h` @type ^`int`;
  #L408c32.  v10:= v10 + v8 @kind int;
  #L408c34.  v8:= v13.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L408c38.  v8:= length @variable v8;
  #L408c3a.  if v10 >= v8 then goto L408c98;
  #L408c3e.  v11:= v13.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L408c42.  v11:= v11[v10] @kind object;
  #L408c46.  v11:= v11.`y2.a.a` @type ^`okio.ByteString` @kind object;
  #L408c4a.  call temp:= `q`(v11, v4) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L408c50.  v11:= temp;
  #L408c52.  if v11 == 0 then goto L408c92;
  #L408c56.  v11:= v13.`y2.b$b.g` @type ^`y2.a`[] @kind object;
  #L408c5a.  v11:= v11[v10] @kind object;
  #L408c5e.  v11:= v11.`y2.a.b` @type ^`okio.ByteString` @kind object;
  #L408c62.  call temp:= `q`(v11, v5) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L408c68.  v11:= temp;
  #L408c6a.  if v11 == 0 then goto L408c7e;
  #L408c6e.  v6:= v13.`y2.b$b.h` @type ^`int`;
  #L408c72.  v10:= v10 - v6 @kind int;
  #L408c74.  v6:= `@@y2.b.a` @type ^`y2.a`[] @kind object;
  #L408c78.  v6:= length @variable v6;
  #L408c7a.  v6:= v6 + v10 @kind int;
  #L408c7c.  goto L408c98;
  #L408c7e.  if v9 != v7 then goto L408c92;
  #L408c82.  v9:= v13.`y2.b$b.h` @type ^`int`;
  #L408c86.  v9:= v10 - v9 @kind int;
  #L408c8a.  v11:= `@@y2.b.a` @type ^`y2.a`[] @kind object;
  #L408c8e.  v11:= length @variable v11;
  #L408c90.  v9:= v9 + v11 @kind int;
  #L408c92.  v10:= v10 + 1;
  #L408c96.  goto L408c3a;
  #L408c98.  if v6 == v7 then goto L408cac;
  #L408c9c.  v3:= 127I;
  #L408ca0.  v4:= 128I;
  #L408ca4.  call `h`(v13, v6, v3, v4) @signature `Ly2/b$b;.h:(III)V` @kind virtual;
  #L408caa.  goto L408d1a;
  #L408cac.  v6:= 64I;
  #L408cb0.  if v9 != v7 then goto L408cd2;
  #L408cb4.  v7:= v13.`y2.b$b.a` @type ^`okio.c` @kind object;
  #L408cb8.  call temp:= `o0`(v7, v6) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L408cbe.  call `f`(v13, v4) @signature `Ly2/b$b;.f:(Lokio/ByteString;)V` @kind virtual;
  #L408cc4.  call `f`(v13, v5) @signature `Ly2/b$b;.f:(Lokio/ByteString;)V` @kind virtual;
  #L408cca.  call `d`(v13, v3) @signature `Ly2/b$b;.d:(Ly2/a;)V` @kind direct;
  #L408cd0.  goto L408d1a;
  #L408cd2.  v7:= `@@y2.a.d` @type ^`okio.ByteString` @kind object;
  #L408cd6.  call temp:= `q`(v4, v7) @signature `Lokio/ByteString;.q:(Lokio/ByteString;)Z` @kind virtual;
  #L408cdc.  v7:= temp;
  #L408cde.  if v7 == 0 then goto L408d04;
  #L408ce2.  v7:= `@@y2.a.i` @type ^`okio.ByteString` @kind object;
  #L408ce6.  call temp:= `equals`(v7, v4) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L408cec.  v4:= temp;
  #L408cee.  if v4 != 0 then goto L408d04;
  #L408cf2.  v3:= 15I;
  #L408cf6.  call `h`(v13, v9, v3, v1) @signature `Ly2/b$b;.h:(III)V` @kind virtual;
  #L408cfc.  call `f`(v13, v5) @signature `Ly2/b$b;.f:(Lokio/ByteString;)V` @kind virtual;
  #L408d02.  goto L408d1a;
  #L408d04.  v4:= 63I;
  #L408d08.  call `h`(v13, v9, v4, v6) @signature `Ly2/b$b;.h:(III)V` @kind virtual;
  #L408d0e.  call `f`(v13, v5) @signature `Ly2/b$b;.f:(Lokio/ByteString;)V` @kind virtual;
  #L408d14.  call `d`(v13, v3) @signature `Ly2/b$b;.d:(Ly2/a;)V` @kind direct;
  #L408d1a.  v2:= v2 + 1;
  #L408d1e.  goto L408b92;
  #L408d22.  return @kind void;
}
procedure `void` `h`(`y2.b$b` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Ly2/b$b;.h:(III)V` @AccessFlag  {
    temp;
    v0;

  #L408d34.  if v2 >= v3 then goto L408d46;
  #L408d38.  v3:= v1.`y2.b$b.a` @type ^`okio.c` @kind object;
  #L408d3c.  v2:= v2 ^| v4 @kind int;
  #L408d3e.  call temp:= `o0`(v3, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L408d44.  return @kind void;
  #L408d46.  v0:= v1.`y2.b$b.a` @type ^`okio.c` @kind object;
  #L408d4a.  v4:= v4 ^| v3 @kind int;
  #L408d4c.  call temp:= `o0`(v0, v4) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L408d52.  v2:= v2 - v3 @kind int;
  #L408d54.  v3:= 128I;
  #L408d58.  if v2 < v3 then goto L408d72;
  #L408d5c.  v4:= v2 ^& 127;
  #L408d60.  v0:= v1.`y2.b$b.a` @type ^`okio.c` @kind object;
  #L408d64.  v3:= v3 ^| v4 @kind int;
  #L408d66.  call temp:= `o0`(v0, v3) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L408d6c.  v2:= v2 ^>> 7;
  #L408d70.  goto L408d54;
  #L408d72.  v3:= v1.`y2.b$b.a` @type ^`okio.c` @kind object;
  #L408d76.  call temp:= `o0`(v3, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L408d7c.  return @kind void;
}
