record `io.reactivex.exceptions.OnErrorNotImplementedException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.RuntimeException` @kind class {
}
global `long` `@@io.reactivex.exceptions.OnErrorNotImplementedException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.exceptions.OnErrorNotImplementedException` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/exceptions/OnErrorNotImplementedException;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38ed28.  if v2 == 0 then goto L38ed36;
  #L38ed2c.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L38ed32.  v0:= temp @kind object;
  #L38ed34.  goto L38ed38;
  #L38ed36.  v0:= 0I;
  #L38ed38.  if v2 == 0 then goto L38ed3e;
  #L38ed3c.  goto L38ed48;
  #L38ed3e.  v2:= new `java.lang.NullPointerException`;
  #L38ed42.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38ed48.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L38ed4e.  return @kind void;
}
