record `io.reactivex.disposables.ReferenceDisposable` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.atomic.AtomicReference` @kind class, `e2.b` @kind interface {
}
global `long` `@@io.reactivex.disposables.ReferenceDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.disposables.ReferenceDisposable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/disposables/ReferenceDisposable;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L38e6c0.  v0:= "value is null" @kind object;
  #L38e6c4.  call temp:= `d`(v2, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L38e6ca.  v2:= temp @kind object;
  #L38e6cc.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38e6d2.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v0 @kind object) @signature `Lio/reactivex/disposables/ReferenceDisposable;.a:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `d`(`io.reactivex.disposables.ReferenceDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/ReferenceDisposable;.d:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L38e69c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38e6a2.  v0:= temp @kind object;
  #L38e6a4.  if v0 != 0 then goto L38e6ac;
  #L38e6a8.  v0:= 1I;
  #L38e6aa.  goto L38e6ae;
  #L38e6ac.  v0:= 0I;
  #L38e6ae.  return v0;
}
procedure `void` `e`(`io.reactivex.disposables.ReferenceDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/ReferenceDisposable;.e:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L38e6e4.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38e6ea.  v0:= temp @kind object;
  #L38e6ec.  if v0 == 0 then goto L38e704;
  #L38e6f0.  v0:= 0I;
  #L38e6f2.  call temp:= `getAndSet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e6f8.  v0:= temp @kind object;
  #L38e6fa.  if v0 == 0 then goto L38e704;
  #L38e6fe.  call `a`(v1, v0) @signature `Lio/reactivex/disposables/ReferenceDisposable;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L38e704.  return @kind void;
}
