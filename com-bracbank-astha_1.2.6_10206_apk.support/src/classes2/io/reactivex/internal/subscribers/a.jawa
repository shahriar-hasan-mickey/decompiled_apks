record `io.reactivex.internal.subscribers.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `k2.a` @kind interface, `k2.g` @kind interface {
  `k2.a` `io.reactivex.internal.subscribers.a.a` @AccessFlag PROTECTED_FINAL;
  `d3.c` `io.reactivex.internal.subscribers.a.b` @AccessFlag PROTECTED;
  `k2.g` `io.reactivex.internal.subscribers.a.c` @AccessFlag PROTECTED;
  `boolean` `io.reactivex.internal.subscribers.a.d` @AccessFlag PROTECTED;
  `int` `io.reactivex.internal.subscribers.a.e` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`io.reactivex.internal.subscribers.a` v0 @kind this, `k2.a` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.<init>:(Lk2/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39d65c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39d662.  v0.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` := v1 @kind object;
  #L39d666.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.subscribers.a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d718.  v0:= v1.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` @kind boolean;
  #L39d71c.  if v0 == 0 then goto L39d728;
  #L39d720.  call `q`(v2) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L39d726.  return @kind void;
  #L39d728.  v0:= 1I;
  #L39d72a.  v1.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` := v0 @kind boolean;
  #L39d72e.  v0:= v1.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` @kind object;
  #L39d732.  call `a`(v0, v2) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L39d738.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.subscribers.a` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.b:()V` @AccessFlag PROTECTED {
    temp;

  #L39d678.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.subscribers.a` v1 @kind this, `d3.c` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.c:(Ld3/c;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L39d74c.  v0:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`d3.c` @kind object;
  #L39d750.  call temp:= `i`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.i:(Ld3/c;Ld3/c;)Z` @kind static;
  #L39d756.  v0:= temp;
  #L39d758.  if v0 == 0 then goto L39d78c;
  #L39d75c.  v1.`io.reactivex.internal.subscribers.a.b` @type ^`d3.c` := v2 @kind object;
  #L39d760.  v0:= instanceof @variable v2 @type ^`k2.g` @kind boolean;
  #L39d764.  if v0 == 0 then goto L39d770;
  #L39d768.  v2:= (`k2.g`) v2 @kind object;
  #L39d76c.  v1.`io.reactivex.internal.subscribers.a.c` @type ^`k2.g` := v2 @kind object;
  #L39d770.  call temp:= `d`(v1) @signature `Lio/reactivex/internal/subscribers/a;.d:()Z` @kind virtual;
  #L39d776.  v2:= temp;
  #L39d778.  if v2 == 0 then goto L39d78c;
  #L39d77c.  v2:= v1.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` @kind object;
  #L39d780.  call `c`(v2, v1) @signature `Lb2/h;.c:(Ld3/c;)V` @kind interface;
  #L39d786.  call `b`(v1) @signature `Lio/reactivex/internal/subscribers/a;.b:()V` @kind virtual;
  #L39d78c.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d68c.  v0:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`d3.c` @kind object;
  #L39d690.  call `cancel`(v0) @signature `Ld3/c;.cancel:()V` @kind interface;
  #L39d696.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d6a8.  v0:= v1.`io.reactivex.internal.subscribers.a.c` @type ^`k2.g` @kind object;
  #L39d6ac.  call `clear`(v0) @signature `Lk2/j;.clear:()V` @kind interface;
  #L39d6b2.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.d:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L39d5d0.  v0:= 1I;
  #L39d5d2.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.subscribers.a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.e:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L39d6c4.  call `b`(v2) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L39d6ca.  v0:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`d3.c` @kind object;
  #L39d6ce.  call `cancel`(v0) @signature `Ld3/c;.cancel:()V` @kind interface;
  #L39d6d4.  call `a`(v1, v2) @signature `Lio/reactivex/internal/subscribers/a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L39d6da.  return @kind void;
}
procedure `void` `g`(`io.reactivex.internal.subscribers.a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/subscribers/a;.g:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d7a0.  v0:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`d3.c` @kind object;
  #L39d7a4.  call `g`(v0, v2) @signature `Ld3/c;.g:(J)V` @kind interface;
  #L39d7aa.  return @kind void;
}
procedure `int` `i`(`io.reactivex.internal.subscribers.a` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/internal/subscribers/a;.i:(I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L39d624.  v0:= v2.`io.reactivex.internal.subscribers.a.c` @type ^`k2.g` @kind object;
  #L39d628.  if v0 == 0 then goto L39d646;
  #L39d62c.  v1:= v3 ^& 4;
  #L39d630.  if v1 != 0 then goto L39d646;
  #L39d634.  call temp:= `h`(v0, v3) @signature `Lk2/f;.h:(I)I` @kind interface;
  #L39d63a.  v3:= temp;
  #L39d63c.  if v3 == 0 then goto L39d644;
  #L39d640.  v2.`io.reactivex.internal.subscribers.a.e` @type ^`int` := v3;
  #L39d644.  return v3;
  #L39d646.  v3:= 0I;
  #L39d648.  return v3;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d5e4.  v0:= v1.`io.reactivex.internal.subscribers.a.c` @type ^`k2.g` @kind object;
  #L39d5e8.  call temp:= `isEmpty`(v0) @signature `Lk2/j;.isEmpty:()Z` @kind interface;
  #L39d5ee.  v0:= temp;
  #L39d5f0.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.subscribers.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L39d604.  v2:= new `java.lang.UnsupportedOperationException`;
  #L39d608.  v0:= "Should not be called!" @kind object;
  #L39d60c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39d612.  throw v2;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d6ec.  v0:= v1.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` @kind boolean;
  #L39d6f0.  if v0 == 0 then goto L39d6f6;
  #L39d6f4.  return @kind void;
  #L39d6f6.  v0:= 1I;
  #L39d6f8.  v1.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` := v0 @kind boolean;
  #L39d6fc.  v0:= v1.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` @kind object;
  #L39d700.  call `onComplete`(v0) @signature `Ld3/b;.onComplete:()V` @kind interface;
  #L39d706.  return @kind void;
}
