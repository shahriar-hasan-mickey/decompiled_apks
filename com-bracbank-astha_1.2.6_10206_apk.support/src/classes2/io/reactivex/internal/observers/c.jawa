record `io.reactivex.internal.observers.c` @kind class @AccessFlag PUBLIC_FINAL extends `b2.s` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.observers.c.a` @AccessFlag FINAL;
  `b2.s` `io.reactivex.internal.observers.c.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.c` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object, `b2.s` v2 @kind object) @signature `Lio/reactivex/internal/observers/c;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lb2/s;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38f7e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38f7ea.  v0.`io.reactivex.internal.observers.c.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L38f7ee.  v0.`io.reactivex.internal.observers.c.b` @type ^`b2.s` := v2 @kind object;
  #L38f7f2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.observers.c` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/c;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f804.  v0:= v1.`io.reactivex.internal.observers.c.b` @type ^`b2.s` @kind object;
  #L38f808.  call `a`(v0, v2) @signature `Lb2/s;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L38f80e.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.observers.c` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/observers/c;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f820.  v0:= v1.`io.reactivex.internal.observers.c.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L38f824.  call temp:= `c`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.c:(Ljava/util/concurrent/atomic/AtomicReference;Le2/b;)Z` @kind static;
  #L38f82a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.observers.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/c;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f83c.  v0:= v1.`io.reactivex.internal.observers.c.b` @type ^`b2.s` @kind object;
  #L38f840.  call `onSuccess`(v0, v2) @signature `Lb2/s;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L38f846.  return @kind void;
}
