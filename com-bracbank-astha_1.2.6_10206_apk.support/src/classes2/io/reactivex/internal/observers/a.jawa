record `io.reactivex.internal.observers.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `b2.p` @kind interface, `k2.e` @kind interface {
  `b2.p` `io.reactivex.internal.observers.a.a` @AccessFlag PROTECTED_FINAL;
  `e2.b` `io.reactivex.internal.observers.a.b` @AccessFlag PROTECTED;
  `k2.e` `io.reactivex.internal.observers.a.c` @AccessFlag PROTECTED;
  `boolean` `io.reactivex.internal.observers.a.d` @AccessFlag PROTECTED;
  `int` `io.reactivex.internal.observers.a.e` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.a` v0 @kind this, `b2.p` v1 @kind object) @signature `Lio/reactivex/internal/observers/a;.<init>:(Lb2/p;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38f388.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38f38e.  v0.`io.reactivex.internal.observers.a.a` @type ^`b2.p` := v1 @kind object;
  #L38f392.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.observers.a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f444.  v0:= v1.`io.reactivex.internal.observers.a.d` @type ^`boolean` @kind boolean;
  #L38f448.  if v0 == 0 then goto L38f454;
  #L38f44c.  call `q`(v2) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L38f452.  return @kind void;
  #L38f454.  v0:= 1I;
  #L38f456.  v1.`io.reactivex.internal.observers.a.d` @type ^`boolean` := v0 @kind boolean;
  #L38f45a.  v0:= v1.`io.reactivex.internal.observers.a.a` @type ^`b2.p` @kind object;
  #L38f45e.  call `a`(v0, v2) @signature `Lb2/p;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L38f464.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.observers.a` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/observers/a;.b:(Le2/b;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L38f478.  v0:= v1.`io.reactivex.internal.observers.a.b` @type ^`e2.b` @kind object;
  #L38f47c.  call temp:= `i`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.i:(Le2/b;Le2/b;)Z` @kind static;
  #L38f482.  v0:= temp;
  #L38f484.  if v0 == 0 then goto L38f4b8;
  #L38f488.  v1.`io.reactivex.internal.observers.a.b` @type ^`e2.b` := v2 @kind object;
  #L38f48c.  v0:= instanceof @variable v2 @type ^`k2.e` @kind boolean;
  #L38f490.  if v0 == 0 then goto L38f49c;
  #L38f494.  v2:= (`k2.e`) v2 @kind object;
  #L38f498.  v1.`io.reactivex.internal.observers.a.c` @type ^`k2.e` := v2 @kind object;
  #L38f49c.  call temp:= `f`(v1) @signature `Lio/reactivex/internal/observers/a;.f:()Z` @kind virtual;
  #L38f4a2.  v2:= temp;
  #L38f4a4.  if v2 == 0 then goto L38f4b8;
  #L38f4a8.  v2:= v1.`io.reactivex.internal.observers.a.a` @type ^`b2.p` @kind object;
  #L38f4ac.  call `b`(v2, v1) @signature `Lb2/p;.b:(Le2/b;)V` @kind interface;
  #L38f4b2.  call `c`(v1) @signature `Lio/reactivex/internal/observers/a;.c:()V` @kind virtual;
  #L38f4b8.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.observers.a` v0 @kind this) @signature `Lio/reactivex/internal/observers/a;.c:()V` @AccessFlag PROTECTED {
    temp;

  #L38f3a4.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.observers.a` v1 @kind this) @signature `Lio/reactivex/internal/observers/a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f3b8.  v0:= v1.`io.reactivex.internal.observers.a.c` @type ^`k2.e` @kind object;
  #L38f3bc.  call `clear`(v0) @signature `Lk2/j;.clear:()V` @kind interface;
  #L38f3c2.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.observers.a` v1 @kind this) @signature `Lio/reactivex/internal/observers/a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f2f0.  v0:= v1.`io.reactivex.internal.observers.a.b` @type ^`e2.b` @kind object;
  #L38f2f4.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L38f2fa.  v0:= temp;
  #L38f2fc.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.observers.a` v1 @kind this) @signature `Lio/reactivex/internal/observers/a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f3d4.  v0:= v1.`io.reactivex.internal.observers.a.b` @type ^`e2.b` @kind object;
  #L38f3d8.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L38f3de.  return @kind void;
}
procedure `boolean` `f`(`io.reactivex.internal.observers.a` v1 @kind this) @signature `Lio/reactivex/internal/observers/a;.f:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L38f2dc.  v0:= 1I;
  #L38f2de.  return v0;
}
procedure `void` `g`(`io.reactivex.internal.observers.a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/a;.g:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L38f3f0.  call `b`(v2) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L38f3f6.  v0:= v1.`io.reactivex.internal.observers.a.b` @type ^`e2.b` @kind object;
  #L38f3fa.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L38f400.  call `a`(v1, v2) @signature `Lio/reactivex/internal/observers/a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L38f406.  return @kind void;
}
procedure `int` `i`(`io.reactivex.internal.observers.a` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/internal/observers/a;.i:(I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L38f350.  v0:= v2.`io.reactivex.internal.observers.a.c` @type ^`k2.e` @kind object;
  #L38f354.  if v0 == 0 then goto L38f372;
  #L38f358.  v1:= v3 ^& 4;
  #L38f35c.  if v1 != 0 then goto L38f372;
  #L38f360.  call temp:= `h`(v0, v3) @signature `Lk2/f;.h:(I)I` @kind interface;
  #L38f366.  v3:= temp;
  #L38f368.  if v3 == 0 then goto L38f370;
  #L38f36c.  v2.`io.reactivex.internal.observers.a.e` @type ^`int` := v3;
  #L38f370.  return v3;
  #L38f372.  v3:= 0I;
  #L38f374.  return v3;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.observers.a` v1 @kind this) @signature `Lio/reactivex/internal/observers/a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f310.  v0:= v1.`io.reactivex.internal.observers.a.c` @type ^`k2.e` @kind object;
  #L38f314.  call temp:= `isEmpty`(v0) @signature `Lk2/j;.isEmpty:()Z` @kind interface;
  #L38f31a.  v0:= temp;
  #L38f31c.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.observers.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/a;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L38f330.  v2:= new `java.lang.UnsupportedOperationException`;
  #L38f334.  v0:= "Should not be called!" @kind object;
  #L38f338.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38f33e.  throw v2;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.a` v1 @kind this) @signature `Lio/reactivex/internal/observers/a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f418.  v0:= v1.`io.reactivex.internal.observers.a.d` @type ^`boolean` @kind boolean;
  #L38f41c.  if v0 == 0 then goto L38f422;
  #L38f420.  return @kind void;
  #L38f422.  v0:= 1I;
  #L38f424.  v1.`io.reactivex.internal.observers.a.d` @type ^`boolean` := v0 @kind boolean;
  #L38f428.  v0:= v1.`io.reactivex.internal.observers.a.a` @type ^`b2.p` @kind object;
  #L38f42c.  call `onComplete`(v0) @signature `Lb2/p;.onComplete:()V` @kind interface;
  #L38f432.  return @kind void;
}
