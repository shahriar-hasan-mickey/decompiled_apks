record `io.reactivex.internal.disposables.DisposableHelper` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e2.b` @kind interface {
}
global `io.reactivex.internal.disposables.DisposableHelper` `@@io.reactivex.internal.disposables.DisposableHelper.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.disposables.DisposableHelper`[] `@@io.reactivex.internal.disposables.DisposableHelper.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L38ef74.  v0:= new `io.reactivex.internal.disposables.DisposableHelper`;
  #L38ef78.  v1:= "DISPOSED" @kind object;
  #L38ef7c.  v2:= 0I;
  #L38ef7e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38ef84.  `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` := v0 @kind object;
  #L38ef88.  v1:= 1I;
  #L38ef8a.  v1:= new `io.reactivex.internal.disposables.DisposableHelper`[v1];
  #L38ef8e.  v1[v2]:= v0 @kind object;
  #L38ef92.  `@@io.reactivex.internal.disposables.DisposableHelper.b` @type ^`io.reactivex.internal.disposables.DisposableHelper`[] := v1 @kind object;
  #L38ef96.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.disposables.DisposableHelper` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L38efa8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38efae.  return @kind void;
}
procedure `boolean` `a`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.a:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L38ed90.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38ed96.  v0:= temp @kind object;
  #L38ed98.  v0:= (`e2.b`) v0 @kind object;
  #L38ed9c.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L38eda0.  if v0 == v1 then goto L38edc2;
  #L38eda4.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38edaa.  v2:= temp @kind object;
  #L38edac.  v2:= (`e2.b`) v2 @kind object;
  #L38edb0.  if v2 == v1 then goto L38edc2;
  #L38edb4.  if v2 == 0 then goto L38edbe;
  #L38edb8.  call `e`(v2) @signature `Le2/b;.e:()V` @kind interface;
  #L38edbe.  v2:= 1I;
  #L38edc0.  return v2;
  #L38edc2.  v2:= 0I;
  #L38edc4.  return v2;
}
procedure `boolean` `b`(`e2.b` v1 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.b:(Le2/b;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38edec.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L38edf0.  if v1 != v0 then goto L38edf8;
  #L38edf4.  v1:= 1I;
  #L38edf6.  goto L38edfa;
  #L38edf8.  v1:= 0I;
  #L38edfa.  return v1;
}
procedure `boolean` `c`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object, `e2.b` v3 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.c:(Ljava/util/concurrent/atomic/AtomicReference;Le2/b;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L38ee0c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38ee12.  v0:= temp @kind object;
  #L38ee14.  v0:= (`e2.b`) v0 @kind object;
  #L38ee18.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L38ee1c.  if v0 != v1 then goto L38ee2e;
  #L38ee20.  if v3 == 0 then goto L38ee2a;
  #L38ee24.  call `e`(v3) @signature `Le2/b;.e:()V` @kind interface;
  #L38ee2a.  v2:= 0I;
  #L38ee2c.  return v2;
  #L38ee2e.  call temp:= `compareAndSet`(v2, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L38ee34.  v0:= temp;
  #L38ee36.  if v0 == 0 then goto L38ee0c;
  #L38ee3a.  v2:= 1I;
  #L38ee3c.  return v2;
}
procedure `void` `f`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.f:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L38efd4.  v0:= new `io.reactivex.exceptions.ProtocolViolationException`;
  #L38efd8.  v1:= "Disposable already set!" @kind object;
  #L38efdc.  call `<init>`(v0, v1) @signature `Lio/reactivex/exceptions/ProtocolViolationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38efe2.  call `q`(v0) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L38efe8.  return @kind void;
}
procedure `boolean` `g`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object, `e2.b` v3 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.g:(Ljava/util/concurrent/atomic/AtomicReference;Le2/b;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L38ee50.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38ee56.  v0:= temp @kind object;
  #L38ee58.  v0:= (`e2.b`) v0 @kind object;
  #L38ee5c.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L38ee60.  if v0 != v1 then goto L38ee72;
  #L38ee64.  if v3 == 0 then goto L38ee6e;
  #L38ee68.  call `e`(v3) @signature `Le2/b;.e:()V` @kind interface;
  #L38ee6e.  v2:= 0I;
  #L38ee70.  return v2;
  #L38ee72.  call temp:= `compareAndSet`(v2, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L38ee78.  v1:= temp;
  #L38ee7a.  if v1 == 0 then goto L38ee50;
  #L38ee7e.  if v0 == 0 then goto L38ee88;
  #L38ee82.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L38ee88.  v2:= 1I;
  #L38ee8a.  return v2;
}
procedure `boolean` `h`(`java.util.concurrent.atomic.AtomicReference` v1 @kind object, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.h:(Ljava/util/concurrent/atomic/AtomicReference;Le2/b;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38ee9c.  v0:= "d is null" @kind object;
  #L38eea0.  call temp:= `d`(v2, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L38eea6.  v0:= 0I;
  #L38eea8.  call temp:= `compareAndSet`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L38eeae.  v0:= temp;
  #L38eeb0.  if v0 != 0 then goto L38eed4;
  #L38eeb4.  call `e`(v2) @signature `Le2/b;.e:()V` @kind interface;
  #L38eeba.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38eec0.  v1:= temp @kind object;
  #L38eec2.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L38eec6.  if v1 == v2 then goto L38eed0;
  #L38eeca.  call `f`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.f:()V` @kind static;
  #L38eed0.  v1:= 0I;
  #L38eed2.  return v1;
  #L38eed4.  v1:= 1I;
  #L38eed6.  return v1;
}
procedure `boolean` `i`(`e2.b` v1 @kind object, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.i:(Le2/b;Le2/b;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38eee8.  v0:= 0I;
  #L38eeea.  if v2 != 0 then goto L38ef04;
  #L38eeee.  v1:= new `java.lang.NullPointerException`;
  #L38eef2.  v2:= "next is null" @kind object;
  #L38eef6.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38eefc.  call `q`(v1) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L38ef02.  return v0;
  #L38ef04.  if v1 == 0 then goto L38ef16;
  #L38ef08.  call `e`(v2) @signature `Le2/b;.e:()V` @kind interface;
  #L38ef0e.  call `f`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.f:()V` @kind static;
  #L38ef14.  return v0;
  #L38ef16.  v1:= 1I;
  #L38ef18.  return v1;
}
procedure `io.reactivex.internal.disposables.DisposableHelper` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/disposables/DisposableHelper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38ef2c.  v0:= constclass @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L38ef30.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L38ef36.  v1:= temp @kind object;
  #L38ef38.  v1:= (`io.reactivex.internal.disposables.DisposableHelper`) v1 @kind object;
  #L38ef3c.  return v1 @kind object;
}
procedure `io.reactivex.internal.disposables.DisposableHelper`[] `values`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.values:()[Lio/reactivex/internal/disposables/DisposableHelper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38ef50.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.b` @type ^`io.reactivex.internal.disposables.DisposableHelper`[] @kind object;
  #L38ef54.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/disposables/DisposableHelper;.clone:()Ljava/lang/Object;` @kind virtual;
  #L38ef5a.  v0:= temp @kind object;
  #L38ef5c.  v0:= (`io.reactivex.internal.disposables.DisposableHelper`[]) v0 @kind object;
  #L38ef60.  return v0 @kind object;
}
procedure `boolean` `d`(`io.reactivex.internal.disposables.DisposableHelper` v1 @kind this) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38edd8.  v0:= 1I;
  #L38edda.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.disposables.DisposableHelper` v0 @kind this) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L38efc0.  return @kind void;
}
