record `io.reactivex.internal.schedulers.e$a` @kind class @AccessFlag FINAL {
  `boolean` `io.reactivex.internal.schedulers.e$a.a` @AccessFlag ;
  `int` `io.reactivex.internal.schedulers.e$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.e$a` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/e$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39cce4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39ccea.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.schedulers.e$a` v3 @kind this, `java.util.Properties` v4 @kind object) @signature `Lio/reactivex/internal/schedulers/e$a;.a:(Ljava/util/Properties;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L39ccfc.  v0:= "rx2.purge-enabled" @kind object;
  #L39cd00.  call temp:= `containsKey`(v4, v0) @signature `Ljava/util/Properties;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L39cd06.  v1:= temp;
  #L39cd08.  v2:= 1I;
  #L39cd0a.  if v1 == 0 then goto L39cd24;
  #L39cd0e.  call temp:= `getProperty`(v4, v0) @signature `Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L39cd14.  v0:= temp @kind object;
  #L39cd16.  call temp:= `parseBoolean`(v0) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L39cd1c.  v0:= temp;
  #L39cd1e.  v3.`io.reactivex.internal.schedulers.e$a.a` @type ^`boolean` := v0 @kind boolean;
  #L39cd22.  goto L39cd28;
  #L39cd24.  v3.`io.reactivex.internal.schedulers.e$a.a` @type ^`boolean` := v2 @kind boolean;
  #L39cd28.  v0:= v3.`io.reactivex.internal.schedulers.e$a.a` @type ^`boolean` @kind boolean;
  #L39cd2c.  if v0 == 0 then goto L39cd5c;
  #L39cd30.  v0:= "rx2.purge-period-seconds" @kind object;
  #L39cd34.  call temp:= `containsKey`(v4, v0) @signature `Ljava/util/Properties;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L39cd3a.  v1:= temp;
  #L39cd3c.  if v1 == 0 then goto L39cd5c;
  #L39cd40.  call temp:= `getProperty`(v4, v0) @signature `Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L39cd46.  v4:= temp @kind object;
  #L39cd48.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L39cd4e.  v4:= temp;
  #L39cd50.  v3.`io.reactivex.internal.schedulers.e$a.b` @type ^`int` := v4;
  #L39cd54.  goto L39cd60;
  #L39cd56.  v3.`io.reactivex.internal.schedulers.e$a.b` @type ^`int` := v2;
  #L39cd5a.  goto L39cd60;
  #L39cd5c.  v3.`io.reactivex.internal.schedulers.e$a.b` @type ^`int` := v2;
  #L39cd60.  return @kind void;
  catch `java.lang.NumberFormatException` @[L39cd40..L39cd54] goto L39cd56;
}
