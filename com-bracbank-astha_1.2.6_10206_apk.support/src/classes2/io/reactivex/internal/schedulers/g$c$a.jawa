record `io.reactivex.internal.schedulers.g$c$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.internal.schedulers.g$b` `io.reactivex.internal.schedulers.g$c$a.a` @AccessFlag FINAL;
  `io.reactivex.internal.schedulers.g$c` `io.reactivex.internal.schedulers.g$c$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.g$c$a` v0 @kind this, `io.reactivex.internal.schedulers.g$c` v1 @kind object, `io.reactivex.internal.schedulers.g$b` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/g$c$a;.<init>:(Lio/reactivex/internal/schedulers/g$c;Lio/reactivex/internal/schedulers/g$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39d300.  v0.`io.reactivex.internal.schedulers.g$c$a.b` @type ^`io.reactivex.internal.schedulers.g$c` := v1 @kind object;
  #L39d304.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39d30a.  v0.`io.reactivex.internal.schedulers.g$c$a.a` @type ^`io.reactivex.internal.schedulers.g$b` := v2 @kind object;
  #L39d30e.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.g$c$a` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/g$c$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39d320.  v0:= v2.`io.reactivex.internal.schedulers.g$c$a.a` @type ^`io.reactivex.internal.schedulers.g$b` @kind object;
  #L39d324.  v1:= 1I;
  #L39d326.  v0.`io.reactivex.internal.schedulers.g$b.d` @type ^`boolean` := v1 @kind boolean;
  #L39d32a.  v0:= v2.`io.reactivex.internal.schedulers.g$c$a.b` @type ^`io.reactivex.internal.schedulers.g$c` @kind object;
  #L39d32e.  v0:= v0.`io.reactivex.internal.schedulers.g$c.a` @type ^`java.util.concurrent.PriorityBlockingQueue` @kind object;
  #L39d332.  v1:= v2.`io.reactivex.internal.schedulers.g$c$a.a` @type ^`io.reactivex.internal.schedulers.g$b` @kind object;
  #L39d336.  call temp:= `remove`(v0, v1) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L39d33c.  return @kind void;
}
