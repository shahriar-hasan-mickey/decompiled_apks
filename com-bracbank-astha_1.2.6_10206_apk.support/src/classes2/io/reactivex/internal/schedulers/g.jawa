record `io.reactivex.internal.schedulers.g` @kind class @AccessFlag PUBLIC_FINAL extends `b2.q` @kind class {
}
global `io.reactivex.internal.schedulers.g` `@@io.reactivex.internal.schedulers.g.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/schedulers/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39d598.  v0:= new `io.reactivex.internal.schedulers.g`;
  #L39d59c.  call `<init>`(v0) @signature `Lio/reactivex/internal/schedulers/g;.<init>:()V` @kind direct;
  #L39d5a2.  `@@io.reactivex.internal.schedulers.g.b` @type ^`io.reactivex.internal.schedulers.g` := v0 @kind object;
  #L39d5a6.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.g` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/g;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39d5b8.  call `<init>`(v0) @signature `Lb2/q;.<init>:()V` @kind direct;
  #L39d5be.  return @kind void;
}
procedure `io.reactivex.internal.schedulers.g` `d`() @signature `Lio/reactivex/internal/schedulers/g;.d:()Lio/reactivex/internal/schedulers/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39d580.  v0:= `@@io.reactivex.internal.schedulers.g.b` @type ^`io.reactivex.internal.schedulers.g` @kind object;
  #L39d584.  return v0 @kind object;
}
procedure `b2.q$b` `a`(`io.reactivex.internal.schedulers.g` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/g;.a:()Lb2/q$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d4ec.  v0:= new `io.reactivex.internal.schedulers.g$c`;
  #L39d4f0.  call `<init>`(v0) @signature `Lio/reactivex/internal/schedulers/g$c;.<init>:()V` @kind direct;
  #L39d4f6.  return v0 @kind object;
}
procedure `e2.b` `b`(`io.reactivex.internal.schedulers.g` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/g;.b:(Ljava/lang/Runnable;)Le2/b;` @AccessFlag PUBLIC {
    temp;

  #L39d508.  call temp:= `s`(v1) @signature `Ll2/a;.s:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L39d50e.  v1:= temp @kind object;
  #L39d510.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L39d516.  v1:= `@@io.reactivex.internal.disposables.EmptyDisposable.a` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L39d51a.  return v1 @kind object;
}
procedure `e2.b` `c`(`io.reactivex.internal.schedulers.g` v0 @kind this, `java.lang.Runnable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/internal/schedulers/g;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Le2/b;` @AccessFlag PUBLIC {
    temp;

  #L39d52c.  call `sleep`(v4, v2) @signature `Ljava/util/concurrent/TimeUnit;.sleep:(J)V` @kind virtual;
  #L39d532.  call temp:= `s`(v1) @signature `Ll2/a;.s:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L39d538.  v1:= temp @kind object;
  #L39d53a.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L39d540.  goto L39d558;
  #L39d542.  v1:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L39d544.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L39d54a.  v2:= temp @kind object;
  #L39d54c.  call `interrupt`(v2) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L39d552.  call `q`(v1) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L39d558.  v1:= `@@io.reactivex.internal.disposables.EmptyDisposable.a` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L39d55c.  return v1 @kind object;
  catch `java.lang.InterruptedException` @[L39d52c..L39d540] goto L39d542;
}
