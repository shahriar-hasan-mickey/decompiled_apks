record `io.reactivex.internal.schedulers.f` @kind class @AccessFlag PUBLIC_FINAL extends `b2.q` @kind class {
  `java.util.concurrent.ThreadFactory` `io.reactivex.internal.schedulers.f.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.schedulers.f.c` @AccessFlag FINAL;
}
global `io.reactivex.internal.schedulers.RxThreadFactory` `@@io.reactivex.internal.schedulers.f.d` @AccessFlag STATIC_FINAL;
global `java.util.concurrent.ScheduledExecutorService` `@@io.reactivex.internal.schedulers.f.e` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/schedulers/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39d11c.  v0:= 0I;
  #L39d11e.  call temp:= `newScheduledThreadPool`(v0) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L39d124.  v0:= temp @kind object;
  #L39d126.  `@@io.reactivex.internal.schedulers.f.e` @type ^`java.util.concurrent.ScheduledExecutorService` := v0 @kind object;
  #L39d12a.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L39d130.  v0:= "rx2.single-priority" @kind object;
  #L39d134.  v1:= 5I;
  #L39d136.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L39d13c.  v0:= temp @kind object;
  #L39d13e.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L39d144.  v0:= temp;
  #L39d146.  v1:= 10I;
  #L39d14a.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L39d150.  v0:= temp;
  #L39d152.  v1:= 1I;
  #L39d154.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L39d15a.  v0:= temp;
  #L39d15c.  v2:= new `io.reactivex.internal.schedulers.RxThreadFactory`;
  #L39d160.  v3:= "RxSingleScheduler" @kind object;
  #L39d164.  call `<init>`(v2, v3, v0, v1) @signature `Lio/reactivex/internal/schedulers/RxThreadFactory;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L39d16a.  `@@io.reactivex.internal.schedulers.f.d` @type ^`io.reactivex.internal.schedulers.RxThreadFactory` := v2 @kind object;
  #L39d16e.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.f` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39d180.  v0:= `@@io.reactivex.internal.schedulers.f.d` @type ^`io.reactivex.internal.schedulers.RxThreadFactory` @kind object;
  #L39d184.  call `<init>`(v1, v0) @signature `Lio/reactivex/internal/schedulers/f;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L39d18a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.f` v1 @kind this, `java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/f;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39d19c.  call `<init>`(v1) @signature `Lb2/q;.<init>:()V` @kind direct;
  #L39d1a2.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L39d1a6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L39d1ac.  v1.`io.reactivex.internal.schedulers.f.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L39d1b0.  v1.`io.reactivex.internal.schedulers.f.b` @type ^`java.util.concurrent.ThreadFactory` := v2 @kind object;
  #L39d1b4.  call temp:= `d`(v2) @signature `Lio/reactivex/internal/schedulers/f;.d:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L39d1ba.  v2:= temp @kind object;
  #L39d1bc.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L39d1c2.  return @kind void;
}
procedure `java.util.concurrent.ScheduledExecutorService` `d`(`java.util.concurrent.ThreadFactory` v0 @kind object) @signature `Lio/reactivex/internal/schedulers/f;.d:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag STATIC {
    temp;

  #L39d100.  call temp:= `a`(v0) @signature `Lio/reactivex/internal/schedulers/e;.a:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L39d106.  v0:= temp @kind object;
  #L39d108.  return v0 @kind object;
}
procedure `b2.q$b` `a`(`io.reactivex.internal.schedulers.f` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/f;.a:()Lb2/q$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39d04c.  v0:= new `io.reactivex.internal.schedulers.f$a`;
  #L39d050.  v1:= v2.`io.reactivex.internal.schedulers.f.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L39d054.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L39d05a.  v1:= temp @kind object;
  #L39d05c.  v1:= (`java.util.concurrent.ScheduledExecutorService`) v1 @kind object;
  #L39d060.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/schedulers/f$a;.<init>:(Ljava/util/concurrent/ScheduledExecutorService;)V` @kind direct;
  #L39d066.  return v0 @kind object;
}
procedure `e2.b` `c`(`io.reactivex.internal.schedulers.f` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lio/reactivex/internal/schedulers/f;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Le2/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d078.  v0:= new `io.reactivex.internal.schedulers.ScheduledDirectTask`;
  #L39d07c.  call temp:= `s`(v4) @signature `Ll2/a;.s:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L39d082.  v4:= temp @kind object;
  #L39d084.  call `<init>`(v0, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L39d08a.  v1:= 0L;
  #L39d08e.  v4:= lcmp(v5, v1);
  #L39d092.  if v4 > 0 then goto L39d0b0;
  #L39d096.  v4:= v3.`io.reactivex.internal.schedulers.f.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L39d09a.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L39d0a0.  v4:= temp @kind object;
  #L39d0a2.  v4:= (`java.util.concurrent.ScheduledExecutorService`) v4 @kind object;
  #L39d0a6.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L39d0ac.  v4:= temp @kind object;
  #L39d0ae.  goto L39d0c8;
  #L39d0b0.  v4:= v3.`io.reactivex.internal.schedulers.f.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L39d0b4.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L39d0ba.  v4:= temp @kind object;
  #L39d0bc.  v4:= (`java.util.concurrent.ScheduledExecutorService`) v4 @kind object;
  #L39d0c0.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L39d0c6.  v4:= temp @kind object;
  #L39d0c8.  call `a`(v0, v4) @signature `Lio/reactivex/internal/schedulers/AbstractDirectTask;.a:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L39d0ce.  return v0 @kind object;
  #L39d0d0.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L39d0d2.  call `q`(v4) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L39d0d8.  v4:= `@@io.reactivex.internal.disposables.EmptyDisposable.a` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L39d0dc.  return v4 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L39d096..L39d0ce] goto L39d0d0;
}
