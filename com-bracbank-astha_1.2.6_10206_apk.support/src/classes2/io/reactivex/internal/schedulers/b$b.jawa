record `io.reactivex.internal.schedulers.b$b` @kind class @AccessFlag FINAL extends `b2.q$b` @kind class {
  `e2.a` `io.reactivex.internal.schedulers.b$b.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.schedulers.b$a` `io.reactivex.internal.schedulers.b$b.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.schedulers.b$c` `io.reactivex.internal.schedulers.b$b.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.schedulers.b$b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.b$b` v1 @kind this, `io.reactivex.internal.schedulers.b$a` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/b$b;.<init>:(Lio/reactivex/internal/schedulers/b$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L39c39c.  call `<init>`(v1) @signature `Lb2/q$b;.<init>:()V` @kind direct;
  #L39c3a2.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L39c3a6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L39c3ac.  v1.`io.reactivex.internal.schedulers.b$b.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L39c3b0.  v1.`io.reactivex.internal.schedulers.b$b.b` @type ^`io.reactivex.internal.schedulers.b$a` := v2 @kind object;
  #L39c3b4.  v0:= new `e2.a`;
  #L39c3b8.  call `<init>`(v0) @signature `Le2/a;.<init>:()V` @kind direct;
  #L39c3be.  v1.`io.reactivex.internal.schedulers.b$b.a` @type ^`e2.a` := v0 @kind object;
  #L39c3c2.  call temp:= `b`(v2) @signature `Lio/reactivex/internal/schedulers/b$a;.b:()Lio/reactivex/internal/schedulers/b$c;` @kind virtual;
  #L39c3c8.  v2:= temp @kind object;
  #L39c3ca.  v1.`io.reactivex.internal.schedulers.b$b.c` @type ^`io.reactivex.internal.schedulers.b$c` := v2 @kind object;
  #L39c3ce.  return @kind void;
}
procedure `e2.b` `c`(`io.reactivex.internal.schedulers.b$b` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/internal/schedulers/b$b;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Le2/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39c35c.  v0:= v6.`io.reactivex.internal.schedulers.b$b.a` @type ^`e2.a` @kind object;
  #L39c360.  call temp:= `d`(v0) @signature `Le2/a;.d:()Z` @kind virtual;
  #L39c366.  v0:= temp;
  #L39c368.  if v0 == 0 then goto L39c372;
  #L39c36c.  v7:= `@@io.reactivex.internal.disposables.EmptyDisposable.a` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L39c370.  return v7 @kind object;
  #L39c372.  v0:= v6.`io.reactivex.internal.schedulers.b$b.c` @type ^`io.reactivex.internal.schedulers.b$c` @kind object;
  #L39c376.  v5:= v6.`io.reactivex.internal.schedulers.b$b.a` @type ^`e2.a` @kind object;
  #L39c37a.  v1:= v7 @kind object;
  #L39c37c.  v2:= v8 @kind wide;
  #L39c37e.  v4:= v10 @kind object;
  #L39c380.  call temp:= `f`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/schedulers/d;.f:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Li2/a;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L39c386.  v7:= temp @kind object;
  #L39c388.  return v7 @kind object;
}
procedure `boolean` `d`(`io.reactivex.internal.schedulers.b$b` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/b$b;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c33c.  v0:= v1.`io.reactivex.internal.schedulers.b$b.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L39c340.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L39c346.  v0:= temp;
  #L39c348.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.schedulers.b$b` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/b$b;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c3e0.  v0:= v3.`io.reactivex.internal.schedulers.b$b.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L39c3e4.  v1:= 0I;
  #L39c3e6.  v2:= 1I;
  #L39c3e8.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L39c3ee.  v0:= temp;
  #L39c3f0.  if v0 == 0 then goto L39c40c;
  #L39c3f4.  v0:= v3.`io.reactivex.internal.schedulers.b$b.a` @type ^`e2.a` @kind object;
  #L39c3f8.  call `e`(v0) @signature `Le2/a;.e:()V` @kind virtual;
  #L39c3fe.  v0:= v3.`io.reactivex.internal.schedulers.b$b.b` @type ^`io.reactivex.internal.schedulers.b$a` @kind object;
  #L39c402.  v1:= v3.`io.reactivex.internal.schedulers.b$b.c` @type ^`io.reactivex.internal.schedulers.b$c` @kind object;
  #L39c406.  call `d`(v0, v1) @signature `Lio/reactivex/internal/schedulers/b$a;.d:(Lio/reactivex/internal/schedulers/b$c;)V` @kind virtual;
  #L39c40c.  return @kind void;
}
