record `io.reactivex.internal.schedulers.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@io.reactivex.internal.schedulers.e.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@io.reactivex.internal.schedulers.e.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicReference` `@@io.reactivex.internal.schedulers.e.c` @AccessFlag STATIC_FINAL;
global `java.util.Map` `@@io.reactivex.internal.schedulers.e.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/schedulers/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39ce2c.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L39ce30.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L39ce36.  `@@io.reactivex.internal.schedulers.e.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L39ce3a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L39ce3e.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L39ce44.  `@@io.reactivex.internal.schedulers.e.d` @type ^`java.util.Map` := v0 @kind object;
  #L39ce48.  call temp:= `getProperties`() @signature `Ljava/lang/System;.getProperties:()Ljava/util/Properties;` @kind static;
  #L39ce4e.  v0:= temp @kind object;
  #L39ce50.  v1:= new `io.reactivex.internal.schedulers.e$a`;
  #L39ce54.  call `<init>`(v1) @signature `Lio/reactivex/internal/schedulers/e$a;.<init>:()V` @kind direct;
  #L39ce5a.  call `a`(v1, v0) @signature `Lio/reactivex/internal/schedulers/e$a;.a:(Ljava/util/Properties;)V` @kind virtual;
  #L39ce60.  v0:= v1.`io.reactivex.internal.schedulers.e$a.a` @type ^`boolean` @kind boolean;
  #L39ce64.  `@@io.reactivex.internal.schedulers.e.a` @type ^`boolean` := v0 @kind boolean;
  #L39ce68.  v0:= v1.`io.reactivex.internal.schedulers.e$a.b` @type ^`int`;
  #L39ce6c.  `@@io.reactivex.internal.schedulers.e.b` @type ^`int` := v0;
  #L39ce70.  call `b`() @signature `Lio/reactivex/internal/schedulers/e;.b:()V` @kind static;
  #L39ce76.  return @kind void;
}
procedure `java.util.concurrent.ScheduledExecutorService` `a`(`java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/e;.a:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39ce04.  v0:= 1I;
  #L39ce06.  call temp:= `newScheduledThreadPool`(v0, v1) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L39ce0c.  v1:= temp @kind object;
  #L39ce0e.  v0:= `@@io.reactivex.internal.schedulers.e.a` @type ^`boolean` @kind boolean;
  #L39ce12.  call `c`(v0, v1) @signature `Lio/reactivex/internal/schedulers/e;.c:(ZLjava/util/concurrent/ScheduledExecutorService;)V` @kind static;
  #L39ce18.  return v1 @kind object;
}
procedure `void` `b`() @signature `Lio/reactivex/internal/schedulers/e;.b:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39ce88.  v0:= `@@io.reactivex.internal.schedulers.e.a` @type ^`boolean` @kind boolean;
  #L39ce8c.  call `d`(v0) @signature `Lio/reactivex/internal/schedulers/e;.d:(Z)V` @kind static;
  #L39ce92.  return @kind void;
}
procedure `void` `c`(`boolean` v1 , `java.util.concurrent.ScheduledExecutorService` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/e;.c:(ZLjava/util/concurrent/ScheduledExecutorService;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L39cea4.  if v1 == 0 then goto L39cec0;
  #L39cea8.  v1:= instanceof @variable v2 @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` @kind boolean;
  #L39ceac.  if v1 == 0 then goto L39cec0;
  #L39ceb0.  v1:= v2 @kind object;
  #L39ceb2.  v1:= (`java.util.concurrent.ScheduledThreadPoolExecutor`) v1 @kind object;
  #L39ceb6.  v0:= `@@io.reactivex.internal.schedulers.e.d` @type ^`java.util.Map` @kind object;
  #L39ceba.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39cec0.  return @kind void;
}
procedure `void` `d`(`boolean` v11 ) @signature `Lio/reactivex/internal/schedulers/e;.d:(Z)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L39ced4.  if v11 == 0 then goto L39cf38;
  #L39ced8.  v11:= `@@io.reactivex.internal.schedulers.e.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L39cedc.  call temp:= `get`(v11) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L39cee2.  v0:= temp @kind object;
  #L39cee4.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L39cee8.  if v0 == 0 then goto L39ceee;
  #L39ceec.  return @kind void;
  #L39ceee.  v1:= 1I;
  #L39cef0.  v2:= new `io.reactivex.internal.schedulers.RxThreadFactory`;
  #L39cef4.  v3:= "RxSchedulerPurge" @kind object;
  #L39cef8.  call `<init>`(v2, v3) @signature `Lio/reactivex/internal/schedulers/RxThreadFactory;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39cefe.  call temp:= `newScheduledThreadPool`(v1, v2) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L39cf04.  v4:= temp @kind object;
  #L39cf06.  call temp:= `compareAndSet`(v11, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L39cf0c.  v11:= temp;
  #L39cf0e.  if v11 == 0 then goto L39cf30;
  #L39cf12.  v5:= new `io.reactivex.internal.schedulers.e$b`;
  #L39cf16.  call `<init>`(v5) @signature `Lio/reactivex/internal/schedulers/e$b;.<init>:()V` @kind direct;
  #L39cf1c.  v11:= `@@io.reactivex.internal.schedulers.e.b` @type ^`int`;
  #L39cf20.  v6:= (`long`) v11 @kind i2l;
  #L39cf22.  v8:= (`long`) v11 @kind i2l;
  #L39cf24.  v10:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L39cf28.  call temp:= `scheduleAtFixedRate`(v4, v5, v6, v8, v10) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L39cf2e.  return @kind void;
  #L39cf30.  call temp:= `shutdownNow`(v4) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L39cf36.  goto L39ced8;
  #L39cf38.  return @kind void;
}
