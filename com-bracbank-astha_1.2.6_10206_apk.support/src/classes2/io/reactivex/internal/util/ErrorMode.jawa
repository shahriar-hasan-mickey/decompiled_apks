record `io.reactivex.internal.util.ErrorMode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.reactivex.internal.util.ErrorMode` `@@io.reactivex.internal.util.ErrorMode.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.util.ErrorMode` `@@io.reactivex.internal.util.ErrorMode.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.util.ErrorMode` `@@io.reactivex.internal.util.ErrorMode.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.util.ErrorMode`[] `@@io.reactivex.internal.util.ErrorMode.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/util/ErrorMode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L39ed7c.  v0:= new `io.reactivex.internal.util.ErrorMode`;
  #L39ed80.  v1:= "IMMEDIATE" @kind object;
  #L39ed84.  v2:= 0I;
  #L39ed86.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39ed8c.  `@@io.reactivex.internal.util.ErrorMode.a` @type ^`io.reactivex.internal.util.ErrorMode` := v0 @kind object;
  #L39ed90.  v1:= new `io.reactivex.internal.util.ErrorMode`;
  #L39ed94.  v3:= "BOUNDARY" @kind object;
  #L39ed98.  v4:= 1I;
  #L39ed9a.  call `<init>`(v1, v3, v4) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39eda0.  `@@io.reactivex.internal.util.ErrorMode.b` @type ^`io.reactivex.internal.util.ErrorMode` := v1 @kind object;
  #L39eda4.  v3:= new `io.reactivex.internal.util.ErrorMode`;
  #L39eda8.  v5:= "END" @kind object;
  #L39edac.  v6:= 2I;
  #L39edae.  call `<init>`(v3, v5, v6) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39edb4.  `@@io.reactivex.internal.util.ErrorMode.c` @type ^`io.reactivex.internal.util.ErrorMode` := v3 @kind object;
  #L39edb8.  v5:= 3I;
  #L39edba.  v5:= new `io.reactivex.internal.util.ErrorMode`[v5];
  #L39edbe.  v5[v2]:= v0 @kind object;
  #L39edc2.  v5[v4]:= v1 @kind object;
  #L39edc6.  v5[v6]:= v3 @kind object;
  #L39edca.  `@@io.reactivex.internal.util.ErrorMode.d` @type ^`io.reactivex.internal.util.ErrorMode`[] := v5 @kind object;
  #L39edce.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.ErrorMode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L39ede0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39ede6.  return @kind void;
}
procedure `io.reactivex.internal.util.ErrorMode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/util/ErrorMode;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/util/ErrorMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39ed34.  v0:= constclass @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L39ed38.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L39ed3e.  v1:= temp @kind object;
  #L39ed40.  v1:= (`io.reactivex.internal.util.ErrorMode`) v1 @kind object;
  #L39ed44.  return v1 @kind object;
}
procedure `io.reactivex.internal.util.ErrorMode`[] `values`() @signature `Lio/reactivex/internal/util/ErrorMode;.values:()[Lio/reactivex/internal/util/ErrorMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39ed58.  v0:= `@@io.reactivex.internal.util.ErrorMode.d` @type ^`io.reactivex.internal.util.ErrorMode`[] @kind object;
  #L39ed5c.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/util/ErrorMode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L39ed62.  v0:= temp @kind object;
  #L39ed64.  v0:= (`io.reactivex.internal.util.ErrorMode`[]) v0 @kind object;
  #L39ed68.  return v0 @kind object;
}
