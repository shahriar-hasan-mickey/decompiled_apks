record `io.reactivex.internal.operators.flowable.c$a` @kind class @AccessFlag FINAL extends `b2.h` @kind interface, `e2.b` @kind interface {
  `b2.k` `io.reactivex.internal.operators.flowable.c$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.c$a.b` @AccessFlag FINAL;
  `d3.c` `io.reactivex.internal.operators.flowable.c$a.c` @AccessFlag ;
  `long` `io.reactivex.internal.operators.flowable.c$a.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.flowable.c$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.c$a` v0 @kind this, `b2.k` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/c$a;.<init>:(Lb2/k;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L391d0c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L391d12.  v0.`io.reactivex.internal.operators.flowable.c$a.a` @type ^`b2.k` := v1 @kind object;
  #L391d16.  v0.`io.reactivex.internal.operators.flowable.c$a.b` @type ^`long` := v2 @kind wide;
  #L391d1a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.c$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/c$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L391d84.  v0:= v1.`io.reactivex.internal.operators.flowable.c$a.e` @type ^`boolean` @kind boolean;
  #L391d88.  if v0 == 0 then goto L391d94;
  #L391d8c.  call `q`(v2) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L391d92.  return @kind void;
  #L391d94.  v0:= 1I;
  #L391d96.  v1.`io.reactivex.internal.operators.flowable.c$a.e` @type ^`boolean` := v0 @kind boolean;
  #L391d9a.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.a` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L391d9e.  v1.`io.reactivex.internal.operators.flowable.c$a.c` @type ^`d3.c` := v0 @kind object;
  #L391da2.  v0:= v1.`io.reactivex.internal.operators.flowable.c$a.a` @type ^`b2.k` @kind object;
  #L391da6.  call `a`(v0, v2) @signature `Lb2/k;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L391dac.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.flowable.c$a` v2 @kind this, `d3.c` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/c$a;.c:(Ld3/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L391e1c.  v0:= v2.`io.reactivex.internal.operators.flowable.c$a.c` @type ^`d3.c` @kind object;
  #L391e20.  call temp:= `i`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.i:(Ld3/c;Ld3/c;)Z` @kind static;
  #L391e26.  v0:= temp;
  #L391e28.  if v0 == 0 then goto L391e4a;
  #L391e2c.  v2.`io.reactivex.internal.operators.flowable.c$a.c` @type ^`d3.c` := v3 @kind object;
  #L391e30.  v0:= v2.`io.reactivex.internal.operators.flowable.c$a.a` @type ^`b2.k` @kind object;
  #L391e34.  call `b`(v0, v2) @signature `Lb2/k;.b:(Le2/b;)V` @kind interface;
  #L391e3a.  v0:= 9223372036854775807L;
  #L391e44.  call `g`(v3, v0) @signature `Ld3/c;.g:(J)V` @kind interface;
  #L391e4a.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.operators.flowable.c$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/c$a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L391ce8.  v0:= v2.`io.reactivex.internal.operators.flowable.c$a.c` @type ^`d3.c` @kind object;
  #L391cec.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.a` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L391cf0.  if v0 != v1 then goto L391cf8;
  #L391cf4.  v0:= 1I;
  #L391cf6.  goto L391cfa;
  #L391cf8.  v0:= 0I;
  #L391cfa.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.operators.flowable.c$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/c$a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L391d2c.  v0:= v1.`io.reactivex.internal.operators.flowable.c$a.c` @type ^`d3.c` @kind object;
  #L391d30.  call `cancel`(v0) @signature `Ld3/c;.cancel:()V` @kind interface;
  #L391d36.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.a` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L391d3a.  v1.`io.reactivex.internal.operators.flowable.c$a.c` @type ^`d3.c` := v0 @kind object;
  #L391d3e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.c$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/c$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L391d50.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.a` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L391d54.  v1.`io.reactivex.internal.operators.flowable.c$a.c` @type ^`d3.c` := v0 @kind object;
  #L391d58.  v0:= v1.`io.reactivex.internal.operators.flowable.c$a.e` @type ^`boolean` @kind boolean;
  #L391d5c.  if v0 != 0 then goto L391d70;
  #L391d60.  v0:= 1I;
  #L391d62.  v1.`io.reactivex.internal.operators.flowable.c$a.e` @type ^`boolean` := v0 @kind boolean;
  #L391d66.  v0:= v1.`io.reactivex.internal.operators.flowable.c$a.a` @type ^`b2.k` @kind object;
  #L391d6a.  call `onComplete`(v0) @signature `Lb2/k;.onComplete:()V` @kind interface;
  #L391d70.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.c$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/c$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L391dc0.  v0:= v5.`io.reactivex.internal.operators.flowable.c$a.e` @type ^`boolean` @kind boolean;
  #L391dc4.  if v0 == 0 then goto L391dca;
  #L391dc8.  return @kind void;
  #L391dca.  v0:= v5.`io.reactivex.internal.operators.flowable.c$a.d` @type ^`long` @kind wide;
  #L391dce.  v2:= v5.`io.reactivex.internal.operators.flowable.c$a.b` @type ^`long` @kind wide;
  #L391dd2.  v4:= lcmp(v0, v2);
  #L391dd6.  if v4 != 0 then goto L391dfe;
  #L391dda.  v0:= 1I;
  #L391ddc.  v5.`io.reactivex.internal.operators.flowable.c$a.e` @type ^`boolean` := v0 @kind boolean;
  #L391de0.  v0:= v5.`io.reactivex.internal.operators.flowable.c$a.c` @type ^`d3.c` @kind object;
  #L391de4.  call `cancel`(v0) @signature `Ld3/c;.cancel:()V` @kind interface;
  #L391dea.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.a` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L391dee.  v5.`io.reactivex.internal.operators.flowable.c$a.c` @type ^`d3.c` := v0 @kind object;
  #L391df2.  v0:= v5.`io.reactivex.internal.operators.flowable.c$a.a` @type ^`b2.k` @kind object;
  #L391df6.  call `onSuccess`(v0, v6) @signature `Lb2/k;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L391dfc.  return @kind void;
  #L391dfe.  v2:= 1L;
  #L391e02.  v0:= v0 + v2 @kind long;
  #L391e04.  v5.`io.reactivex.internal.operators.flowable.c$a.d` @type ^`long` := v0 @kind wide;
  #L391e08.  return @kind void;
}
