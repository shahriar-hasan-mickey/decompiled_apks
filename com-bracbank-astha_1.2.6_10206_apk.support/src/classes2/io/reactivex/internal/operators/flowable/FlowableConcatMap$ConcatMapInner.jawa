record `io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.SubscriptionArbiter` @kind class, `b2.h` @kind interface {
  `io.reactivex.internal.operators.flowable.FlowableConcatMap$b` `io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.parent` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.produced` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableConcatMap$b` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableConcatMap$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3909bc.  call `<init>`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.<init>:()V` @kind direct;
  #L3909c2.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableConcatMap$b` := v1 @kind object;
  #L3909c6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L390a10.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.produced` @type ^`long` @kind wide;
  #L390a14.  v2:= 0L;
  #L390a18.  v4:= lcmp(v0, v2);
  #L390a1c.  if v4 == 0 then goto L390a2a;
  #L390a20.  v5.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.produced` @type ^`long` := v2 @kind wide;
  #L390a24.  call `h`(v5, v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.h:(J)V` @kind virtual;
  #L390a2a.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableConcatMap$b` @kind object;
  #L390a2e.  call `e`(v0, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$b;.e:(Ljava/lang/Throwable;)V` @kind interface;
  #L390a34.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner` v0 @kind this, `d3.c` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;.c:(Ld3/c;)V` @AccessFlag PUBLIC {
    temp;

  #L390a74.  call `i`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.i:(Ld3/c;)V` @kind virtual;
  #L390a7a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner` v5 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3909d8.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.produced` @type ^`long` @kind wide;
  #L3909dc.  v2:= 0L;
  #L3909e0.  v4:= lcmp(v0, v2);
  #L3909e4.  if v4 == 0 then goto L3909f2;
  #L3909e8.  v5.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.produced` @type ^`long` := v2 @kind wide;
  #L3909ec.  call `h`(v5, v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.h:(J)V` @kind virtual;
  #L3909f2.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableConcatMap$b` @kind object;
  #L3909f6.  call `d`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$b;.d:()V` @kind interface;
  #L3909fc.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L390a48.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.produced` @type ^`long` @kind wide;
  #L390a4c.  v2:= 1L;
  #L390a50.  v0:= v0 + v2 @kind long;
  #L390a52.  v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.produced` @type ^`long` := v0 @kind wide;
  #L390a56.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableConcatMap$b` @kind object;
  #L390a5a.  call `b`(v0, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$b;.b:(Ljava/lang/Object;)V` @kind interface;
  #L390a60.  return @kind void;
}
