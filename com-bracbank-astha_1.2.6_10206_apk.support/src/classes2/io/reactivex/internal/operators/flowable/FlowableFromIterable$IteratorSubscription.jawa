record `io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription` @kind class {
  `d3.b` `io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription.actual` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription` v0 @kind this, `d3.b` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable$IteratorSubscription;.<init>:(Ld3/b;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3946dc.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable$BaseRangeSubscription;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L3946e2.  v0.`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription.actual` @type ^`d3.b` := v1 @kind object;
  #L3946e6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription` v4 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable$IteratorSubscription;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3946f8.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.it` @type ^`java.util.Iterator` @kind object;
  #L3946fc.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription.actual` @type ^`d3.b` @kind object;
  #L394700.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394704.  if v2 == 0 then goto L39470a;
  #L394708.  return @kind void;
  #L39470a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L394710.  v2:= temp @kind object;
  #L394712.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394716.  if v3 == 0 then goto L39471c;
  #L39471a.  return @kind void;
  #L39471c.  if v2 != 0 then goto L394736;
  #L394720.  v0:= new `java.lang.NullPointerException`;
  #L394724.  v2:= "Iterator.next() returned a null value" @kind object;
  #L394728.  call `<init>`(v0, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39472e.  call `a`(v1, v0) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L394734.  return @kind void;
  #L394736.  call `onNext`(v1, v2) @signature `Ld3/b;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L39473c.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394740.  if v2 == 0 then goto L394746;
  #L394744.  return @kind void;
  #L394746.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L39474c.  v2:= temp;
  #L39474e.  if v2 != 0 then goto L394700;
  #L394752.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394756.  if v0 != 0 then goto L394760;
  #L39475a.  call `onComplete`(v1) @signature `Ld3/b;.onComplete:()V` @kind interface;
  #L394760.  return @kind void;
  #L394762.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394764.  call `b`(v0) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L39476a.  call `a`(v1, v0) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L394770.  return @kind void;
  #L394772.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394774.  call `b`(v0) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L39477a.  call `a`(v1, v0) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L394780.  return @kind void;
  catch `java.lang.Throwable` @[L39470a..L394712] goto L394772;
  catch `java.lang.Throwable` @[L394746..L39474e] goto L394762;
}
procedure `void` `b`(`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription` v8 @kind this, `long` v9 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable$IteratorSubscription;.b:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3947ac.  v0:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.it` @type ^`java.util.Iterator` @kind object;
  #L3947b0.  v1:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription.actual` @type ^`d3.b` @kind object;
  #L3947b4.  v2:= 0L;
  #L3947b8.  v4:= v2 @kind wide;
  #L3947ba.  v6:= lcmp(v4, v9);
  #L3947be.  if v6 == 0 then goto L39484c;
  #L3947c2.  v6:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L3947c6.  if v6 == 0 then goto L3947cc;
  #L3947ca.  return @kind void;
  #L3947cc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3947d2.  v6:= temp @kind object;
  #L3947d4.  v7:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L3947d8.  if v7 == 0 then goto L3947de;
  #L3947dc.  return @kind void;
  #L3947de.  if v6 != 0 then goto L3947f8;
  #L3947e2.  v9:= new `java.lang.NullPointerException`;
  #L3947e6.  v10:= "Iterator.next() returned a null value" @kind object;
  #L3947ea.  call `<init>`(v9, v10) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3947f0.  call `a`(v1, v9) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L3947f6.  return @kind void;
  #L3947f8.  call `onNext`(v1, v6) @signature `Ld3/b;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L3947fe.  v6:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394802.  if v6 == 0 then goto L394808;
  #L394806.  return @kind void;
  #L394808.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L39480e.  v6:= temp;
  #L394810.  if v6 != 0 then goto L394824;
  #L394814.  v9:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394818.  if v9 != 0 then goto L394822;
  #L39481c.  call `onComplete`(v1) @signature `Ld3/b;.onComplete:()V` @kind interface;
  #L394822.  return @kind void;
  #L394824.  v6:= 1L;
  #L394828.  v4:= v4 + v6 @kind long;
  #L39482a.  goto L3947ba;
  #L39482c.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39482e.  call `b`(v9) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L394834.  call `a`(v1, v9) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L39483a.  return @kind void;
  #L39483c.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39483e.  call `b`(v9) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L394844.  call `a`(v1, v9) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L39484a.  return @kind void;
  #L39484c.  call temp:= `get`(v8) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L394852.  v9:= temp @kind wide;
  #L394854.  v6:= lcmp(v4, v9);
  #L394858.  if v6 != 0 then goto L3947ba;
  #L39485c.  v9:= -v4 @kind long;
  #L39485e.  call temp:= `addAndGet`(v8, v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.addAndGet:(J)J` @kind virtual;
  #L394864.  v9:= temp @kind wide;
  #L394866.  v4:= lcmp(v9, v2);
  #L39486a.  if v4 != 0 then goto L3947b8;
  #L39486e.  return @kind void;
  catch `java.lang.Throwable` @[L3947cc..L3947d4] goto L39483c;
  catch `java.lang.Throwable` @[L394808..L394810] goto L39482c;
}
