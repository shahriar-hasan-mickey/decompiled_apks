record `io.reactivex.internal.operators.flowable.b$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.a` @kind class {
  `h2.d` `io.reactivex.internal.operators.flowable.b$a.f` @AccessFlag FINAL;
  `h2.d` `io.reactivex.internal.operators.flowable.b$a.g` @AccessFlag FINAL;
  `h2.a` `io.reactivex.internal.operators.flowable.b$a.h` @AccessFlag FINAL;
  `h2.a` `io.reactivex.internal.operators.flowable.b$a.i` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.b$a` v0 @kind this, `k2.a` v1 @kind object, `h2.d` v2 @kind object, `h2.d` v3 @kind object, `h2.a` v4 @kind object, `h2.a` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/b$a;.<init>:(Lk2/a;Lh2/d;Lh2/d;Lh2/a;Lh2/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L391688.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/a;.<init>:(Lk2/a;)V` @kind direct;
  #L39168e.  v0.`io.reactivex.internal.operators.flowable.b$a.f` @type ^`h2.d` := v2 @kind object;
  #L391692.  v0.`io.reactivex.internal.operators.flowable.b$a.g` @type ^`h2.d` := v3 @kind object;
  #L391696.  v0.`io.reactivex.internal.operators.flowable.b$a.h` @type ^`h2.a` := v4 @kind object;
  #L39169a.  v0.`io.reactivex.internal.operators.flowable.b$a.i` @type ^`h2.a` := v5 @kind object;
  #L39169e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.b$a` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lio/reactivex/internal/operators/flowable/b$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L391724.  v0:= v6.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` @kind boolean;
  #L391728.  if v0 == 0 then goto L391734;
  #L39172c.  call `q`(v7) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L391732.  return @kind void;
  #L391734.  v0:= 1I;
  #L391736.  v6.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` := v0 @kind boolean;
  #L39173a.  v1:= 0I;
  #L39173c.  v2:= v6.`io.reactivex.internal.operators.flowable.b$a.g` @type ^`h2.d` @kind object;
  #L391740.  call `accept`(v2, v7) @signature `Lh2/d;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L391746.  goto L391774;
  #L391748.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39174a.  call `b`(v2) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L391750.  v3:= v6.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` @kind object;
  #L391754.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L391758.  v5:= 2I;
  #L39175a.  v5:= new `java.lang.Throwable`[v5];
  #L39175e.  v5[v1]:= v7 @kind object;
  #L391762.  v5[v0]:= v2 @kind object;
  #L391766.  call `<init>`(v4, v5) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L39176c.  call `a`(v3, v4) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L391772.  v0:= 0I;
  #L391774.  if v0 == 0 then goto L391782;
  #L391778.  v0:= v6.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` @kind object;
  #L39177c.  call `a`(v0, v7) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L391782.  v7:= v6.`io.reactivex.internal.operators.flowable.b$a.i` @type ^`h2.a` @kind object;
  #L391786.  call `run`(v7) @signature `Lh2/a;.run:()V` @kind interface;
  #L39178c.  goto L39179c;
  #L39178e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L391790.  call `b`(v7) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L391796.  call `q`(v7) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L39179c.  return @kind void;
  catch `java.lang.Throwable` @[L39173c..L391746] goto L391748;
  catch `java.lang.Throwable` @[L391782..L39178c] goto L39178e;
}
procedure `boolean` `f`(`io.reactivex.internal.operators.flowable.b$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/b$a;.f:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L391510.  v0:= v2.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` @kind boolean;
  #L391514.  v1:= 0I;
  #L391516.  if v0 == 0 then goto L39151c;
  #L39151a.  return v1;
  #L39151c.  v0:= v2.`io.reactivex.internal.operators.flowable.b$a.f` @type ^`h2.d` @kind object;
  #L391520.  call `accept`(v0, v3) @signature `Lh2/d;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L391526.  v0:= v2.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` @kind object;
  #L39152a.  call temp:= `f`(v0, v3) @signature `Lk2/a;.f:(Ljava/lang/Object;)Z` @kind interface;
  #L391530.  v3:= temp;
  #L391532.  return v3;
  #L391534.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L391536.  call `e`(v2, v3) @signature `Lio/reactivex/internal/subscribers/a;.e:(Ljava/lang/Throwable;)V` @kind virtual;
  #L39153c.  return v1;
  catch `java.lang.Throwable` @[L39151c..L391526] goto L391534;
}
procedure `int` `h`(`io.reactivex.internal.operators.flowable.b$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/flowable/b$a;.h:(I)I` @AccessFlag PUBLIC {
    temp;

  #L39155c.  call temp:= `i`(v0, v1) @signature `Lio/reactivex/internal/subscribers/a;.i:(I)I` @kind virtual;
  #L391562.  v1:= temp;
  #L391564.  return v1;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.b$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/b$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3916b0.  v0:= v1.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` @kind boolean;
  #L3916b4.  if v0 == 0 then goto L3916ba;
  #L3916b8.  return @kind void;
  #L3916ba.  v0:= v1.`io.reactivex.internal.operators.flowable.b$a.h` @type ^`h2.a` @kind object;
  #L3916be.  call `run`(v0) @signature `Lh2/a;.run:()V` @kind interface;
  #L3916c4.  v0:= 1I;
  #L3916c6.  v1.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` := v0 @kind boolean;
  #L3916ca.  v0:= v1.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` @kind object;
  #L3916ce.  call `onComplete`(v0) @signature `Ld3/b;.onComplete:()V` @kind interface;
  #L3916d4.  v0:= v1.`io.reactivex.internal.operators.flowable.b$a.i` @type ^`h2.a` @kind object;
  #L3916d8.  call `run`(v0) @signature `Lh2/a;.run:()V` @kind interface;
  #L3916de.  goto L3916ee;
  #L3916e0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3916e2.  call `b`(v0) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L3916e8.  call `q`(v0) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L3916ee.  return @kind void;
  #L3916f0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3916f2.  call `e`(v1, v0) @signature `Lio/reactivex/internal/subscribers/a;.e:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3916f8.  return @kind void;
  catch `java.lang.Throwable` @[L3916ba..L3916c4] goto L3916f0;
  catch `java.lang.Throwable` @[L3916d4..L3916de] goto L3916e0;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.b$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/b$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3917c8.  v0:= v1.`io.reactivex.internal.subscribers.a.d` @type ^`boolean` @kind boolean;
  #L3917cc.  if v0 == 0 then goto L3917d2;
  #L3917d0.  return @kind void;
  #L3917d2.  v0:= v1.`io.reactivex.internal.subscribers.a.e` @type ^`int`;
  #L3917d6.  if v0 == 0 then goto L3917e8;
  #L3917da.  v2:= v1.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` @kind object;
  #L3917de.  v0:= 0I;
  #L3917e0.  call `onNext`(v2, v0) @signature `Ld3/b;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L3917e6.  return @kind void;
  #L3917e8.  v0:= v1.`io.reactivex.internal.operators.flowable.b$a.f` @type ^`h2.d` @kind object;
  #L3917ec.  call `accept`(v0, v2) @signature `Lh2/d;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3917f2.  v0:= v1.`io.reactivex.internal.subscribers.a.a` @type ^`k2.a` @kind object;
  #L3917f6.  call `onNext`(v0, v2) @signature `Ld3/b;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L3917fc.  return @kind void;
  #L3917fe.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L391800.  call `e`(v1, v2) @signature `Lio/reactivex/internal/subscribers/a;.e:(Ljava/lang/Throwable;)V` @kind virtual;
  #L391806.  return @kind void;
  catch `java.lang.Throwable` @[L3917e8..L3917f2] goto L3917fe;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.b$a` v6 @kind this) @signature `Lio/reactivex/internal/operators/flowable/b$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L391578.  v0:= 0I;
  #L39157a.  v1:= 2I;
  #L39157c.  v2:= 1I;
  #L39157e.  v3:= v6.`io.reactivex.internal.subscribers.a.c` @type ^`k2.g` @kind object;
  #L391582.  call temp:= `poll`(v3) @signature `Lk2/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L391588.  v3:= temp @kind object;
  #L39158a.  if v3 == 0 then goto L3915e8;
  #L39158e.  v4:= v6.`io.reactivex.internal.operators.flowable.b$a.f` @type ^`h2.d` @kind object;
  #L391592.  call `accept`(v4, v3) @signature `Lh2/d;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L391598.  v0:= v6.`io.reactivex.internal.operators.flowable.b$a.i` @type ^`h2.a` @kind object;
  #L39159c.  call `run`(v0) @signature `Lh2/a;.run:()V` @kind interface;
  #L3915a2.  goto L391604;
  #L3915a4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3915a6.  call `b`(v3) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L3915ac.  v4:= v6.`io.reactivex.internal.operators.flowable.b$a.g` @type ^`h2.d` @kind object;
  #L3915b0.  call `accept`(v4, v3) @signature `Lh2/d;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3915b6.  call temp:= `c`(v3) @signature `Lio/reactivex/internal/util/ExceptionHelper;.c:(Ljava/lang/Throwable;)Ljava/lang/Exception;` @kind static;
  #L3915bc.  v0:= temp @kind object;
  #L3915be.  throw v0;
  #L3915c0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3915c2.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L3915c6.  v1:= new `java.lang.Throwable`[v1];
  #L3915ca.  v1[v0]:= v3 @kind object;
  #L3915ce.  v1[v2]:= v4 @kind object;
  #L3915d2.  call `<init>`(v5, v1) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L3915d8.  throw v5;
  #L3915da.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3915dc.  v1:= v6.`io.reactivex.internal.operators.flowable.b$a.i` @type ^`h2.a` @kind object;
  #L3915e0.  call `run`(v1) @signature `Lh2/a;.run:()V` @kind interface;
  #L3915e6.  throw v0;
  #L3915e8.  v0:= v6.`io.reactivex.internal.subscribers.a.e` @type ^`int`;
  #L3915ec.  if v0 != v2 then goto L391604;
  #L3915f0.  v0:= v6.`io.reactivex.internal.operators.flowable.b$a.h` @type ^`h2.a` @kind object;
  #L3915f4.  call `run`(v0) @signature `Lh2/a;.run:()V` @kind interface;
  #L3915fa.  v0:= v6.`io.reactivex.internal.operators.flowable.b$a.i` @type ^`h2.a` @kind object;
  #L3915fe.  call `run`(v0) @signature `Lh2/a;.run:()V` @kind interface;
  #L391604.  return v3 @kind object;
  #L391606.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L391608.  call `b`(v3) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L39160e.  v4:= v6.`io.reactivex.internal.operators.flowable.b$a.g` @type ^`h2.d` @kind object;
  #L391612.  call `accept`(v4, v3) @signature `Lh2/d;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L391618.  call temp:= `c`(v3) @signature `Lio/reactivex/internal/util/ExceptionHelper;.c:(Ljava/lang/Throwable;)Ljava/lang/Exception;` @kind static;
  #L39161e.  v0:= temp @kind object;
  #L391620.  throw v0;
  #L391622.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L391624.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L391628.  v1:= new `java.lang.Throwable`[v1];
  #L39162c.  v1[v0]:= v3 @kind object;
  #L391630.  v1[v2]:= v4 @kind object;
  #L391634.  call `<init>`(v5, v1) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L39163a.  throw v5;
  catch `java.lang.Throwable` @[L39157e..L39158a] goto L391606;
  catch `java.lang.Throwable` @[L39158e..L391598] goto L3915a4;
  catch `java.lang.Throwable` @[L3915a6..L3915ac] goto L3915da;
  catch `java.lang.Throwable` @[L3915ac..L3915b6] goto L3915c0;
  catch `java.lang.Throwable` @[L3915b6..L3915da] goto L3915da;
  catch `java.lang.Throwable` @[L39160e..L391618] goto L391622;
}
