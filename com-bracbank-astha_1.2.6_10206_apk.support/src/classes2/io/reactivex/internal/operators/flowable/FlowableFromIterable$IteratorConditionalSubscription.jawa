record `io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription` @kind class {
  `k2.a` `io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription.actual` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription` v0 @kind this, `k2.a` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable$IteratorConditionalSubscription;.<init>:(Lk2/a;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L394518.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable$BaseRangeSubscription;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L39451e.  v0.`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription.actual` @type ^`k2.a` := v1 @kind object;
  #L394522.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription` v4 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable$IteratorConditionalSubscription;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L394534.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.it` @type ^`java.util.Iterator` @kind object;
  #L394538.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription.actual` @type ^`k2.a` @kind object;
  #L39453c.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394540.  if v2 == 0 then goto L394546;
  #L394544.  return @kind void;
  #L394546.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L39454c.  v2:= temp @kind object;
  #L39454e.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394552.  if v3 == 0 then goto L394558;
  #L394556.  return @kind void;
  #L394558.  if v2 != 0 then goto L394572;
  #L39455c.  v0:= new `java.lang.NullPointerException`;
  #L394560.  v2:= "Iterator.next() returned a null value" @kind object;
  #L394564.  call `<init>`(v0, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39456a.  call `a`(v1, v0) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L394570.  return @kind void;
  #L394572.  call temp:= `f`(v1, v2) @signature `Lk2/a;.f:(Ljava/lang/Object;)Z` @kind interface;
  #L394578.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L39457c.  if v2 == 0 then goto L394582;
  #L394580.  return @kind void;
  #L394582.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L394588.  v2:= temp;
  #L39458a.  if v2 != 0 then goto L39453c;
  #L39458e.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394592.  if v0 != 0 then goto L39459c;
  #L394596.  call `onComplete`(v1) @signature `Ld3/b;.onComplete:()V` @kind interface;
  #L39459c.  return @kind void;
  #L39459e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3945a0.  call `b`(v0) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L3945a6.  call `a`(v1, v0) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L3945ac.  return @kind void;
  #L3945ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3945b0.  call `b`(v0) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L3945b6.  call `a`(v1, v0) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L3945bc.  return @kind void;
  catch `java.lang.Throwable` @[L394546..L39454e] goto L3945ae;
  catch `java.lang.Throwable` @[L394582..L39458a] goto L39459e;
}
procedure `void` `b`(`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription` v8 @kind this, `long` v9 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable$IteratorConditionalSubscription;.b:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3945e8.  v0:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.it` @type ^`java.util.Iterator` @kind object;
  #L3945ec.  v1:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription.actual` @type ^`k2.a` @kind object;
  #L3945f0.  v2:= 0L;
  #L3945f4.  v4:= v2 @kind wide;
  #L3945f6.  v6:= lcmp(v4, v9);
  #L3945fa.  if v6 == 0 then goto L39468e;
  #L3945fe.  v6:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394602.  if v6 == 0 then goto L394608;
  #L394606.  return @kind void;
  #L394608.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L39460e.  v6:= temp @kind object;
  #L394610.  v7:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394614.  if v7 == 0 then goto L39461a;
  #L394618.  return @kind void;
  #L39461a.  if v6 != 0 then goto L394634;
  #L39461e.  v9:= new `java.lang.NullPointerException`;
  #L394622.  v10:= "Iterator.next() returned a null value" @kind object;
  #L394626.  call `<init>`(v9, v10) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39462c.  call `a`(v1, v9) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L394632.  return @kind void;
  #L394634.  call temp:= `f`(v1, v6) @signature `Lk2/a;.f:(Ljava/lang/Object;)Z` @kind interface;
  #L39463a.  v6:= temp;
  #L39463c.  v7:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394640.  if v7 == 0 then goto L394646;
  #L394644.  return @kind void;
  #L394646.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L39464c.  v7:= temp;
  #L39464e.  if v7 != 0 then goto L394662;
  #L394652.  v9:= v8.`io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.cancelled` @type ^`boolean` @kind boolean;
  #L394656.  if v9 != 0 then goto L394660;
  #L39465a.  call `onComplete`(v1) @signature `Ld3/b;.onComplete:()V` @kind interface;
  #L394660.  return @kind void;
  #L394662.  if v6 == 0 then goto L3945f6;
  #L394666.  v6:= 1L;
  #L39466a.  v4:= v4 + v6 @kind long;
  #L39466c.  goto L3945f6;
  #L39466e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394670.  call `b`(v9) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L394676.  call `a`(v1, v9) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L39467c.  return @kind void;
  #L39467e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394680.  call `b`(v9) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L394686.  call `a`(v1, v9) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L39468c.  return @kind void;
  #L39468e.  call temp:= `get`(v8) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L394694.  v9:= temp @kind wide;
  #L394696.  v6:= lcmp(v4, v9);
  #L39469a.  if v6 != 0 then goto L3945f6;
  #L39469e.  v9:= -v4 @kind long;
  #L3946a0.  call temp:= `addAndGet`(v8, v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.addAndGet:(J)J` @kind virtual;
  #L3946a6.  v9:= temp @kind wide;
  #L3946a8.  v4:= lcmp(v9, v2);
  #L3946ac.  if v4 != 0 then goto L3945f4;
  #L3946b0.  return @kind void;
  catch `java.lang.Throwable` @[L394608..L394610] goto L39467e;
  catch `java.lang.Throwable` @[L394646..L39464e] goto L39466e;
}
