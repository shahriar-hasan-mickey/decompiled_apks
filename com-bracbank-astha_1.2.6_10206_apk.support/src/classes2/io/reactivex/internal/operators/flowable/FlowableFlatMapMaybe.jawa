record `io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `h2.e` `io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe` v0 @kind this, `b2.e` v1 @kind object, `h2.e` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapMaybe;.<init>:(Lb2/e;Lh2/e;ZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3937d4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lb2/e;)V` @kind direct;
  #L3937da.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe.c` @type ^`h2.e` := v2 @kind object;
  #L3937de.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe.d` @type ^`boolean` := v3 @kind boolean;
  #L3937e2.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe.e` @type ^`int` := v4;
  #L3937e6.  return @kind void;
}
procedure `void` `I`(`io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe` v5 @kind this, `d3.b` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapMaybe;.I:(Ld3/b;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3937f8.  v0:= v5.`io.reactivex.internal.operators.flowable.a.b` @type ^`b2.e` @kind object;
  #L3937fc.  v1:= new `io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber`;
  #L393800.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe.c` @type ^`h2.e` @kind object;
  #L393804.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe.d` @type ^`boolean` @kind boolean;
  #L393808.  v4:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe.e` @type ^`int`;
  #L39380c.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapMaybe$FlatMapMaybeSubscriber;.<init>:(Ld3/b;Lh2/e;ZI)V` @kind direct;
  #L393812.  call `H`(v0, v1) @signature `Lb2/e;.H:(Lb2/h;)V` @kind virtual;
  #L393818.  return @kind void;
}
