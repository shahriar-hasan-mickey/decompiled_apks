record `io.reactivex.internal.operators.flowable.FlowableConcatMap$c` @kind class @AccessFlag FINAL extends `d3.c` @kind interface {
  `d3.b` `io.reactivex.internal.operators.flowable.FlowableConcatMap$c.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableConcatMap$c.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableConcatMap$c.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$c` v0 @kind this, `java.lang.Object` v1 @kind object, `d3.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$c;.<init>:(Ljava/lang/Object;Ld3/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L390a8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L390a92.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap$c.b` @type ^`java.lang.Object` := v1 @kind object;
  #L390a96.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap$c.a` @type ^`d3.b` := v2 @kind object;
  #L390a9a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$c` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$c;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L390aac.  return @kind void;
}
procedure `void` `g`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$c` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$c;.g:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L390ac0.  v0:= 0L;
  #L390ac4.  v2:= lcmp(v4, v0);
  #L390ac8.  if v2 <= 0 then goto L390aee;
  #L390acc.  v4:= v3.`io.reactivex.internal.operators.flowable.FlowableConcatMap$c.c` @type ^`boolean` @kind boolean;
  #L390ad0.  if v4 != 0 then goto L390aee;
  #L390ad4.  v4:= 1I;
  #L390ad6.  v3.`io.reactivex.internal.operators.flowable.FlowableConcatMap$c.c` @type ^`boolean` := v4 @kind boolean;
  #L390ada.  v4:= v3.`io.reactivex.internal.operators.flowable.FlowableConcatMap$c.a` @type ^`d3.b` @kind object;
  #L390ade.  v5:= v3.`io.reactivex.internal.operators.flowable.FlowableConcatMap$c.b` @type ^`java.lang.Object` @kind object;
  #L390ae2.  call `onNext`(v4, v5) @signature `Ld3/b;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L390ae8.  call `onComplete`(v4) @signature `Ld3/b;.onComplete:()V` @kind interface;
  #L390aee.  return @kind void;
}
