record `io.reactivex.internal.operators.flowable.FlowableObserveOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `b2.q` `io.reactivex.internal.operators.flowable.FlowableObserveOn.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableObserveOn.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableObserveOn.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableObserveOn` v0 @kind this, `b2.e` v1 @kind object, `b2.q` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableObserveOn;.<init>:(Lb2/e;Lb2/q;ZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L395820.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lb2/e;)V` @kind direct;
  #L395826.  v0.`io.reactivex.internal.operators.flowable.FlowableObserveOn.c` @type ^`b2.q` := v2 @kind object;
  #L39582a.  v0.`io.reactivex.internal.operators.flowable.FlowableObserveOn.d` @type ^`boolean` := v3 @kind boolean;
  #L39582e.  v0.`io.reactivex.internal.operators.flowable.FlowableObserveOn.e` @type ^`int` := v4;
  #L395832.  return @kind void;
}
procedure `void` `I`(`io.reactivex.internal.operators.flowable.FlowableObserveOn` v5 @kind this, `d3.b` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableObserveOn;.I:(Ld3/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L395844.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableObserveOn.c` @type ^`b2.q` @kind object;
  #L395848.  call temp:= `a`(v0) @signature `Lb2/q;.a:()Lb2/q$b;` @kind virtual;
  #L39584e.  v0:= temp @kind object;
  #L395850.  v1:= instanceof @variable v6 @type ^`k2.a` @kind boolean;
  #L395854.  if v1 == 0 then goto L39587a;
  #L395858.  v1:= v5.`io.reactivex.internal.operators.flowable.a.b` @type ^`b2.e` @kind object;
  #L39585c.  v2:= new `io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber`;
  #L395860.  v6:= (`k2.a`) v6 @kind object;
  #L395864.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableObserveOn.d` @type ^`boolean` @kind boolean;
  #L395868.  v4:= v5.`io.reactivex.internal.operators.flowable.FlowableObserveOn.e` @type ^`int`;
  #L39586c.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableObserveOn$ObserveOnConditionalSubscriber;.<init>:(Lk2/a;Lb2/q$b;ZI)V` @kind direct;
  #L395872.  call `H`(v1, v2) @signature `Lb2/e;.H:(Lb2/h;)V` @kind virtual;
  #L395878.  goto L395896;
  #L39587a.  v1:= v5.`io.reactivex.internal.operators.flowable.a.b` @type ^`b2.e` @kind object;
  #L39587e.  v2:= new `io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber`;
  #L395882.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableObserveOn.d` @type ^`boolean` @kind boolean;
  #L395886.  v4:= v5.`io.reactivex.internal.operators.flowable.FlowableObserveOn.e` @type ^`int`;
  #L39588a.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableObserveOn$ObserveOnSubscriber;.<init>:(Ld3/b;Lb2/q$b;ZI)V` @kind direct;
  #L395890.  call `H`(v1, v2) @signature `Lb2/e;.H:(Lb2/h;)V` @kind virtual;
  #L395896.  return @kind void;
}
