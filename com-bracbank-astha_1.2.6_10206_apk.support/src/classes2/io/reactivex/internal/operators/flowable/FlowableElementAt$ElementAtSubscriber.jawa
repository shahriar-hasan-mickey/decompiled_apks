record `io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `b2.h` @kind interface {
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.count` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.defaultValue` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.done` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.errorOnFewer` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.index` @AccessFlag FINAL;
  `d3.c` `io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.s` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber` v0 @kind this, `d3.b` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$ElementAtSubscriber;.<init>:(Ld3/b;JLjava/lang/Object;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L391b84.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Ld3/b;)V` @kind direct;
  #L391b8a.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.index` @type ^`long` := v2 @kind wide;
  #L391b8e.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.defaultValue` @type ^`java.lang.Object` := v4 @kind object;
  #L391b92.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.errorOnFewer` @type ^`boolean` := v5 @kind boolean;
  #L391b96.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$ElementAtSubscriber;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L391c24.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.done` @type ^`boolean` @kind boolean;
  #L391c28.  if v0 == 0 then goto L391c34;
  #L391c2c.  call `q`(v2) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L391c32.  return @kind void;
  #L391c34.  v0:= 1I;
  #L391c36.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L391c3a.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`d3.b` @kind object;
  #L391c3e.  call `a`(v0, v2) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L391c44.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber` v2 @kind this, `d3.c` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$ElementAtSubscriber;.c:(Ld3/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L391ca8.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.s` @type ^`d3.c` @kind object;
  #L391cac.  call temp:= `i`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.i:(Ld3/c;Ld3/c;)Z` @kind static;
  #L391cb2.  v0:= temp;
  #L391cb4.  if v0 == 0 then goto L391cd6;
  #L391cb8.  v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.s` @type ^`d3.c` := v3 @kind object;
  #L391cbc.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`d3.b` @kind object;
  #L391cc0.  call `c`(v0, v2) @signature `Ld3/b;.c:(Ld3/c;)V` @kind interface;
  #L391cc6.  v0:= 9223372036854775807L;
  #L391cd0.  call `g`(v3, v0) @signature `Ld3/c;.g:(J)V` @kind interface;
  #L391cd6.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$ElementAtSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L391ba8.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L391bae.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.s` @type ^`d3.c` @kind object;
  #L391bb2.  call `cancel`(v0) @signature `Ld3/c;.cancel:()V` @kind interface;
  #L391bb8.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$ElementAtSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L391bcc.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.done` @type ^`boolean` @kind boolean;
  #L391bd0.  if v0 != 0 then goto L391c12;
  #L391bd4.  v0:= 1I;
  #L391bd6.  v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L391bda.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.defaultValue` @type ^`java.lang.Object` @kind object;
  #L391bde.  if v0 != 0 then goto L391c0c;
  #L391be2.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.errorOnFewer` @type ^`boolean` @kind boolean;
  #L391be6.  if v0 == 0 then goto L391c00;
  #L391bea.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`d3.b` @kind object;
  #L391bee.  v1:= new `java.util.NoSuchElementException`;
  #L391bf2.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L391bf8.  call `a`(v0, v1) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L391bfe.  goto L391c12;
  #L391c00.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`d3.b` @kind object;
  #L391c04.  call `onComplete`(v0) @signature `Ld3/b;.onComplete:()V` @kind interface;
  #L391c0a.  goto L391c12;
  #L391c0c.  call `d`(v2, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L391c12.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$ElementAtSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L391c58.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.done` @type ^`boolean` @kind boolean;
  #L391c5c.  if v0 == 0 then goto L391c62;
  #L391c60.  return @kind void;
  #L391c62.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.count` @type ^`long` @kind wide;
  #L391c66.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.index` @type ^`long` @kind wide;
  #L391c6a.  v4:= lcmp(v0, v2);
  #L391c6e.  if v4 != 0 then goto L391c8a;
  #L391c72.  v0:= 1I;
  #L391c74.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L391c78.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.s` @type ^`d3.c` @kind object;
  #L391c7c.  call `cancel`(v0) @signature `Ld3/c;.cancel:()V` @kind interface;
  #L391c82.  call `d`(v5, v6) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L391c88.  return @kind void;
  #L391c8a.  v2:= 1L;
  #L391c8e.  v0:= v0 + v2 @kind long;
  #L391c90.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber.count` @type ^`long` := v0 @kind wide;
  #L391c94.  return @kind void;
}
