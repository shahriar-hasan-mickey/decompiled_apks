record `io.reactivex.internal.operators.flowable.FlowableFlattenIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `h2.e` `io.reactivex.internal.operators.flowable.FlowableFlattenIterable.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableFlattenIterable.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableFlattenIterable` v0 @kind this, `b2.e` v1 @kind object, `h2.e` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlattenIterable;.<init>:(Lb2/e;Lh2/e;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L393f30.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lb2/e;)V` @kind direct;
  #L393f36.  v0.`io.reactivex.internal.operators.flowable.FlowableFlattenIterable.c` @type ^`h2.e` := v2 @kind object;
  #L393f3a.  v0.`io.reactivex.internal.operators.flowable.FlowableFlattenIterable.d` @type ^`int` := v3;
  #L393f3e.  return @kind void;
}
procedure `void` `I`(`io.reactivex.internal.operators.flowable.FlowableFlattenIterable` v4 @kind this, `d3.b` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlattenIterable;.I:(Ld3/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L393f50.  v0:= v4.`io.reactivex.internal.operators.flowable.a.b` @type ^`b2.e` @kind object;
  #L393f54.  v1:= instanceof @variable v0 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L393f58.  if v1 == 0 then goto L393fb4;
  #L393f5c.  v0:= (`java.util.concurrent.Callable`) v0 @kind object;
  #L393f60.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L393f66.  v0:= temp @kind object;
  #L393f68.  if v0 != 0 then goto L393f74;
  #L393f6c.  call `a`(v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.a:(Ld3/b;)V` @kind static;
  #L393f72.  return @kind void;
  #L393f74.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableFlattenIterable.c` @type ^`h2.e` @kind object;
  #L393f78.  call temp:= `apply`(v1, v0) @signature `Lh2/e;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L393f7e.  v0:= temp @kind object;
  #L393f80.  v0:= (`java.lang.Iterable`) v0 @kind object;
  #L393f84.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L393f8a.  v0:= temp @kind object;
  #L393f8c.  call `K`(v5, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromIterable;.K:(Ld3/b;Ljava/util/Iterator;)V` @kind static;
  #L393f92.  return @kind void;
  #L393f94.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L393f96.  call `b`(v0) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L393f9c.  call `b`(v0, v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.b:(Ljava/lang/Throwable;Ld3/b;)V` @kind static;
  #L393fa2.  return @kind void;
  #L393fa4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L393fa6.  call `b`(v0) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L393fac.  call `b`(v0, v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.b:(Ljava/lang/Throwable;Ld3/b;)V` @kind static;
  #L393fb2.  return @kind void;
  #L393fb4.  v1:= new `io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber`;
  #L393fb8.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableFlattenIterable.c` @type ^`h2.e` @kind object;
  #L393fbc.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableFlattenIterable.d` @type ^`int`;
  #L393fc0.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlattenIterable$FlattenIterableSubscriber;.<init>:(Ld3/b;Lh2/e;I)V` @kind direct;
  #L393fc6.  call `H`(v0, v1) @signature `Lb2/e;.H:(Lb2/h;)V` @kind virtual;
  #L393fcc.  return @kind void;
  catch `java.lang.Throwable` @[L393f5c..L393f68] goto L393fa4;
  catch `java.lang.Throwable` @[L393f74..L393f8c] goto L393f94;
}
