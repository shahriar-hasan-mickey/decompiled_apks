record `io.reactivex.internal.operators.flowable.FlowableConcatMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `h2.e` `io.reactivex.internal.operators.flowable.FlowableConcatMap.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableConcatMap.d` @AccessFlag FINAL;
  `io.reactivex.internal.util.ErrorMode` `io.reactivex.internal.operators.flowable.FlowableConcatMap.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableConcatMap` v0 @kind this, `b2.e` v1 @kind object, `h2.e` v2 @kind object, `int` v3 , `io.reactivex.internal.util.ErrorMode` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.<init>:(Lb2/e;Lh2/e;ILio/reactivex/internal/util/ErrorMode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L390b54.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lb2/e;)V` @kind direct;
  #L390b5a.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap.c` @type ^`h2.e` := v2 @kind object;
  #L390b5e.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap.d` @type ^`int` := v3;
  #L390b62.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap.e` @type ^`io.reactivex.internal.util.ErrorMode` := v4 @kind object;
  #L390b66.  return @kind void;
}
procedure `d3.b` `K`(`d3.b` v2 @kind object, `h2.e` v3 @kind object, `int` v4 , `io.reactivex.internal.util.ErrorMode` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.K:(Ld3/b;Lh2/e;ILio/reactivex/internal/util/ErrorMode;)Ld3/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L390b00.  v0:= `@@io.reactivex.internal.operators.flowable.FlowableConcatMap$a.a` @type ^`int`[] @kind object;
  #L390b04.  call temp:= `ordinal`(v5) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L390b0a.  v5:= temp;
  #L390b0c.  v5:= v0[v5];
  #L390b10.  v0:= 1I;
  #L390b12.  if v5 == v0 then goto L390b34;
  #L390b16.  v1:= 2I;
  #L390b18.  if v5 == v1 then goto L390b28;
  #L390b1c.  v5:= new `io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate`;
  #L390b20.  call `<init>`(v5, v2, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapImmediate;.<init>:(Ld3/b;Lh2/e;I)V` @kind direct;
  #L390b26.  return v5 @kind object;
  #L390b28.  v5:= new `io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed`;
  #L390b2c.  call `<init>`(v5, v2, v3, v4, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapDelayed;.<init>:(Ld3/b;Lh2/e;IZ)V` @kind direct;
  #L390b32.  return v5 @kind object;
  #L390b34.  v5:= new `io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed`;
  #L390b38.  v0:= 0I;
  #L390b3a.  call `<init>`(v5, v2, v3, v4, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapDelayed;.<init>:(Ld3/b;Lh2/e;IZ)V` @kind direct;
  #L390b40.  return v5 @kind object;
}
procedure `void` `I`(`io.reactivex.internal.operators.flowable.FlowableConcatMap` v4 @kind this, `d3.b` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.I:(Ld3/b;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L390b78.  v0:= v4.`io.reactivex.internal.operators.flowable.a.b` @type ^`b2.e` @kind object;
  #L390b7c.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap.c` @type ^`h2.e` @kind object;
  #L390b80.  call temp:= `b`(v0, v5, v1) @signature `Lio/reactivex/internal/operators/flowable/i;.b:(Ld3/a;Ld3/b;Lh2/e;)Z` @kind static;
  #L390b86.  v0:= temp;
  #L390b88.  if v0 == 0 then goto L390b8e;
  #L390b8c.  return @kind void;
  #L390b8e.  v0:= v4.`io.reactivex.internal.operators.flowable.a.b` @type ^`b2.e` @kind object;
  #L390b92.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap.c` @type ^`h2.e` @kind object;
  #L390b96.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap.d` @type ^`int`;
  #L390b9a.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap.e` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L390b9e.  call temp:= `K`(v5, v1, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.K:(Ld3/b;Lh2/e;ILio/reactivex/internal/util/ErrorMode;)Ld3/b;` @kind static;
  #L390ba4.  v5:= temp @kind object;
  #L390ba6.  call `a`(v0, v5) @signature `Lb2/e;.a:(Ld3/b;)V` @kind virtual;
  #L390bac.  return @kind void;
}
