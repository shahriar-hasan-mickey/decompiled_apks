record `io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription` @kind class @AccessFlag ABSTRACT extends `io.reactivex.internal.subscriptions.BasicQueueSubscription` @kind class {
  `java.lang.Object`[] `io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.array` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.cancelled` @AccessFlag VOLATILE;
  `int` `io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.index` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.<init>:([Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3942d0.  call `<init>`(v0) @signature `Lio/reactivex/internal/subscriptions/BasicQueueSubscription;.<init>:()V` @kind direct;
  #L3942d6.  v0.`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.array` @type ^`java.lang.Object`[] := v1 @kind object;
  #L3942da.  return @kind void;
}
procedure `void` `a`() @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.a:()V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `b`(`long` v0 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.b:(J)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.cancel:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3942ec.  v0:= 1I;
  #L3942ee.  v1.`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L3942f2.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L394304.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.array` @type ^`java.lang.Object`[] @kind object;
  #L394308.  v0:= length @variable v0;
  #L39430a.  v1.`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.index` @type ^`int` := v0;
  #L39430e.  return @kind void;
}
procedure `void` `g`(`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription` v5 @kind this, `long` v6 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.g:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L394320.  call temp:= `h`(v6) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.h:(J)Z` @kind static;
  #L394326.  v0:= temp;
  #L394328.  if v0 == 0 then goto L394360;
  #L39432c.  call temp:= `a`(v5, v6) @signature `Lio/reactivex/internal/util/b;.a:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L394332.  v0:= temp @kind wide;
  #L394334.  v2:= 0L;
  #L394338.  v4:= lcmp(v0, v2);
  #L39433c.  if v4 != 0 then goto L394360;
  #L394340.  v0:= 9223372036854775807L;
  #L39434a.  v2:= lcmp(v6, v0);
  #L39434e.  if v2 != 0 then goto L39435a;
  #L394352.  call `a`(v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.a:()V` @kind virtual;
  #L394358.  goto L394360;
  #L39435a.  call `b`(v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.b:(J)V` @kind virtual;
  #L394360.  return @kind void;
}
procedure `int` `h`(`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.h:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L39427c.  v1:= v1 ^& 1;
  #L394280.  return v1;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L394254.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.index` @type ^`int`;
  #L394258.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.array` @type ^`java.lang.Object`[] @kind object;
  #L39425c.  v1:= length @variable v1;
  #L39425e.  if v0 != v1 then goto L394266;
  #L394262.  v0:= 1I;
  #L394264.  goto L394268;
  #L394266.  v0:= 0I;
  #L394268.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription` v3 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$BaseArraySubscription;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L394294.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.index` @type ^`int`;
  #L394298.  v1:= v3.`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.array` @type ^`java.lang.Object`[] @kind object;
  #L39429c.  v2:= length @variable v1;
  #L39429e.  if v0 != v2 then goto L3942a6;
  #L3942a2.  v0:= 0I;
  #L3942a4.  return v0 @kind object;
  #L3942a6.  v2:= v0 + 1;
  #L3942aa.  v3.`io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.index` @type ^`int` := v2;
  #L3942ae.  v0:= v1[v0] @kind object;
  #L3942b2.  v1:= "array element is null" @kind object;
  #L3942b6.  call temp:= `d`(v0, v1) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3942bc.  v0:= temp @kind object;
  #L3942be.  return v0 @kind object;
}
