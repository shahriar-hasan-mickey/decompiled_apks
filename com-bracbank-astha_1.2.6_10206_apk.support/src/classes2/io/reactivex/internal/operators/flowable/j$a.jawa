record `io.reactivex.internal.operators.flowable.j$a` @kind class @AccessFlag FINAL extends `b2.h` @kind interface, `e2.b` @kind interface {
  `b2.s` `io.reactivex.internal.operators.flowable.j$a.a` @AccessFlag FINAL;
  `d3.c` `io.reactivex.internal.operators.flowable.j$a.b` @AccessFlag ;
  `java.util.Collection` `io.reactivex.internal.operators.flowable.j$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.j$a` v0 @kind this, `b2.s` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/j$a;.<init>:(Lb2/s;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L396edc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L396ee2.  v0.`io.reactivex.internal.operators.flowable.j$a.a` @type ^`b2.s` := v1 @kind object;
  #L396ee6.  v0.`io.reactivex.internal.operators.flowable.j$a.c` @type ^`java.util.Collection` := v2 @kind object;
  #L396eea.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.j$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/j$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L396f48.  v0:= 0I;
  #L396f4a.  v1.`io.reactivex.internal.operators.flowable.j$a.c` @type ^`java.util.Collection` := v0 @kind object;
  #L396f4e.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.a` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L396f52.  v1.`io.reactivex.internal.operators.flowable.j$a.b` @type ^`d3.c` := v0 @kind object;
  #L396f56.  v0:= v1.`io.reactivex.internal.operators.flowable.j$a.a` @type ^`b2.s` @kind object;
  #L396f5a.  call `a`(v0, v2) @signature `Lb2/s;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L396f60.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.flowable.j$a` v2 @kind this, `d3.c` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/j$a;.c:(Ld3/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L396f90.  v0:= v2.`io.reactivex.internal.operators.flowable.j$a.b` @type ^`d3.c` @kind object;
  #L396f94.  call temp:= `i`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.i:(Ld3/c;Ld3/c;)Z` @kind static;
  #L396f9a.  v0:= temp;
  #L396f9c.  if v0 == 0 then goto L396fbe;
  #L396fa0.  v2.`io.reactivex.internal.operators.flowable.j$a.b` @type ^`d3.c` := v3 @kind object;
  #L396fa4.  v0:= v2.`io.reactivex.internal.operators.flowable.j$a.a` @type ^`b2.s` @kind object;
  #L396fa8.  call `b`(v0, v2) @signature `Lb2/s;.b:(Le2/b;)V` @kind interface;
  #L396fae.  v0:= 9223372036854775807L;
  #L396fb8.  call `g`(v3, v0) @signature `Ld3/c;.g:(J)V` @kind interface;
  #L396fbe.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.operators.flowable.j$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/j$a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L396eb8.  v0:= v2.`io.reactivex.internal.operators.flowable.j$a.b` @type ^`d3.c` @kind object;
  #L396ebc.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.a` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L396ec0.  if v0 != v1 then goto L396ec8;
  #L396ec4.  v0:= 1I;
  #L396ec6.  goto L396eca;
  #L396ec8.  v0:= 0I;
  #L396eca.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.operators.flowable.j$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/j$a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L396efc.  v0:= v1.`io.reactivex.internal.operators.flowable.j$a.b` @type ^`d3.c` @kind object;
  #L396f00.  call `cancel`(v0) @signature `Ld3/c;.cancel:()V` @kind interface;
  #L396f06.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.a` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L396f0a.  v1.`io.reactivex.internal.operators.flowable.j$a.b` @type ^`d3.c` := v0 @kind object;
  #L396f0e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.j$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/j$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L396f20.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.a` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L396f24.  v2.`io.reactivex.internal.operators.flowable.j$a.b` @type ^`d3.c` := v0 @kind object;
  #L396f28.  v0:= v2.`io.reactivex.internal.operators.flowable.j$a.a` @type ^`b2.s` @kind object;
  #L396f2c.  v1:= v2.`io.reactivex.internal.operators.flowable.j$a.c` @type ^`java.util.Collection` @kind object;
  #L396f30.  call `onSuccess`(v0, v1) @signature `Lb2/s;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L396f36.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.j$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/j$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L396f74.  v0:= v1.`io.reactivex.internal.operators.flowable.j$a.c` @type ^`java.util.Collection` @kind object;
  #L396f78.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L396f7e.  return @kind void;
}
