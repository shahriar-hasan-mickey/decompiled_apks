record `io.reactivex.internal.operators.completable.CompletableConcatArray` @kind class @AccessFlag PUBLIC_FINAL extends `b2.a` @kind class {
  `b2.c`[] `io.reactivex.internal.operators.completable.CompletableConcatArray.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableConcatArray` v0 @kind this, `b2.c`[] v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray;.<init>:([Lb2/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38f954.  call `<init>`(v0) @signature `Lb2/a;.<init>:()V` @kind direct;
  #L38f95a.  v0.`io.reactivex.internal.operators.completable.CompletableConcatArray.a` @type ^`b2.c`[] := v1 @kind object;
  #L38f95e.  return @kind void;
}
procedure `void` `p`(`io.reactivex.internal.operators.completable.CompletableConcatArray` v2 @kind this, `b2.b` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray;.p:(Lb2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f970.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver`;
  #L38f974.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableConcatArray.a` @type ^`b2.c`[] @kind object;
  #L38f978.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.<init>:(Lb2/b;[Lb2/c;)V` @kind direct;
  #L38f97e.  v1:= v0.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L38f982.  call `b`(v3, v1) @signature `Lb2/b;.b:(Le2/b;)V` @kind interface;
  #L38f988.  call `c`(v0) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.c:()V` @kind virtual;
  #L38f98e.  return @kind void;
}
