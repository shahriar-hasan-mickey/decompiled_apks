record `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `b2.b` @kind interface {
  `b2.b` `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.actual` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.index` @AccessFlag ;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @AccessFlag FINAL;
  `b2.c`[] `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sources` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v0 @kind this, `b2.b` v1 @kind object, `b2.c`[] v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.<init>:(Lb2/b;[Lb2/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L38f858.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L38f85e.  v0.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.actual` @type ^`b2.b` := v1 @kind object;
  #L38f862.  v0.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sources` @type ^`b2.c`[] := v2 @kind object;
  #L38f866.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L38f86a.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L38f870.  v0.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L38f874.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f91c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.actual` @type ^`b2.b` @kind object;
  #L38f920.  call `a`(v0, v2) @signature `Lb2/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L38f926.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f938.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L38f93c.  call temp:= `a`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.a:(Le2/b;)Z` @kind virtual;
  #L38f942.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L38f888.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L38f88c.  call temp:= `d`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.d:()Z` @kind virtual;
  #L38f892.  v0:= temp;
  #L38f894.  if v0 == 0 then goto L38f89a;
  #L38f898.  return @kind void;
  #L38f89a.  call temp:= `getAndIncrement`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L38f8a0.  v0:= temp;
  #L38f8a2.  if v0 == 0 then goto L38f8a8;
  #L38f8a6.  return @kind void;
  #L38f8a8.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sources` @type ^`b2.c`[] @kind object;
  #L38f8ac.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L38f8b0.  call temp:= `d`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.d:()Z` @kind virtual;
  #L38f8b6.  v1:= temp;
  #L38f8b8.  if v1 == 0 then goto L38f8be;
  #L38f8bc.  return @kind void;
  #L38f8be.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.index` @type ^`int`;
  #L38f8c2.  v2:= v1 + 1;
  #L38f8c6.  v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.index` @type ^`int` := v2;
  #L38f8ca.  v2:= length @variable v0;
  #L38f8cc.  if v1 != v2 then goto L38f8dc;
  #L38f8d0.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.actual` @type ^`b2.b` @kind object;
  #L38f8d4.  call `onComplete`(v0) @signature `Lb2/b;.onComplete:()V` @kind interface;
  #L38f8da.  return @kind void;
  #L38f8dc.  v1:= v0[v1] @kind object;
  #L38f8e0.  call `b`(v1, v3) @signature `Lb2/c;.b:(Lb2/b;)V` @kind interface;
  #L38f8e6.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L38f8ec.  v1:= temp;
  #L38f8ee.  if v1 != 0 then goto L38f8ac;
  #L38f8f2.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L38f904.  call `c`(v0) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.c:()V` @kind virtual;
  #L38f90a.  return @kind void;
}
