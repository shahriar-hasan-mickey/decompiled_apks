record `io.reactivex.internal.operators.completable.b` @kind class @AccessFlag PUBLIC_FINAL extends `b2.a` @kind class {
  `h2.a` `io.reactivex.internal.operators.completable.b.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.b` v0 @kind this, `h2.a` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/b;.<init>:(Lh2/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38f9f0.  call `<init>`(v0) @signature `Lb2/a;.<init>:()V` @kind direct;
  #L38f9f6.  v0.`io.reactivex.internal.operators.completable.b.a` @type ^`h2.a` := v1 @kind object;
  #L38f9fa.  return @kind void;
}
procedure `void` `p`(`io.reactivex.internal.operators.completable.b` v2 @kind this, `b2.b` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/b;.p:(Lb2/b;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L38fa0c.  call temp:= `b`() @signature `Lio/reactivex/disposables/a;.b:()Le2/b;` @kind static;
  #L38fa12.  v0:= temp @kind object;
  #L38fa14.  call `b`(v3, v0) @signature `Lb2/b;.b:(Le2/b;)V` @kind interface;
  #L38fa1a.  v1:= v2.`io.reactivex.internal.operators.completable.b.a` @type ^`h2.a` @kind object;
  #L38fa1e.  call `run`(v1) @signature `Lh2/a;.run:()V` @kind interface;
  #L38fa24.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L38fa2a.  v0:= temp;
  #L38fa2c.  if v0 != 0 then goto L38fa36;
  #L38fa30.  call `onComplete`(v3) @signature `Lb2/b;.onComplete:()V` @kind interface;
  #L38fa36.  return @kind void;
  #L38fa38.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38fa3a.  call `b`(v1) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L38fa40.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L38fa46.  v0:= temp;
  #L38fa48.  if v0 != 0 then goto L38fa52;
  #L38fa4c.  call `a`(v3, v1) @signature `Lb2/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L38fa52.  return @kind void;
  catch `java.lang.Throwable` @[L38fa1a..L38fa24] goto L38fa38;
}
