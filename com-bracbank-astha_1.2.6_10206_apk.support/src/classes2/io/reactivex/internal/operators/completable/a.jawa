record `io.reactivex.internal.operators.completable.a` @kind class @AccessFlag PUBLIC_FINAL extends `b2.a` @kind class {
}
global `b2.a` `@@io.reactivex.internal.operators.completable.a.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/completable/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L38f9a0.  v0:= new `io.reactivex.internal.operators.completable.a`;
  #L38f9a4.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/completable/a;.<init>:()V` @kind direct;
  #L38f9aa.  `@@io.reactivex.internal.operators.completable.a.a` @type ^`b2.a` := v0 @kind object;
  #L38f9ae.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.a` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L38f9c0.  call `<init>`(v0) @signature `Lb2/a;.<init>:()V` @kind direct;
  #L38f9c6.  return @kind void;
}
procedure `void` `p`(`io.reactivex.internal.operators.completable.a` v0 @kind this, `b2.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/a;.p:(Lb2/b;)V` @AccessFlag PUBLIC {
    temp;

  #L38f9d8.  call `a`(v1) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.a:(Lb2/b;)V` @kind static;
  #L38f9de.  return @kind void;
}
