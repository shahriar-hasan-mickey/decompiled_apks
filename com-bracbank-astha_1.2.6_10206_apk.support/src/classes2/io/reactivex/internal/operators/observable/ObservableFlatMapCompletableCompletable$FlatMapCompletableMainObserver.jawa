record `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `e2.b` @kind interface, `b2.p` @kind interface {
  `b2.b` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.actual` @AccessFlag FINAL;
  `e2.b` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.delayErrors` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.disposed` @AccessFlag VOLATILE;
  `io.reactivex.internal.util.AtomicThrowable` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.errors` @AccessFlag FINAL;
  `h2.e` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.mapper` @AccessFlag FINAL;
  `e2.a` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.set` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` v0 @kind this, `b2.b` v1 @kind object, `h2.e` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.<init>:(Lb2/b;Lh2/e;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39a4f4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L39a4fa.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.actual` @type ^`b2.b` := v1 @kind object;
  #L39a4fe.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.mapper` @type ^`h2.e` := v2 @kind object;
  #L39a502.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.delayErrors` @type ^`boolean` := v3 @kind boolean;
  #L39a506.  v1:= new `io.reactivex.internal.util.AtomicThrowable`;
  #L39a50a.  call `<init>`(v1) @signature `Lio/reactivex/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L39a510.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` := v1 @kind object;
  #L39a514.  v1:= new `e2.a`;
  #L39a518.  call `<init>`(v1) @signature `Le2/a;.<init>:()V` @kind direct;
  #L39a51e.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.set` @type ^`e2.a` := v1 @kind object;
  #L39a522.  v1:= 1I;
  #L39a524.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L39a52a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a5f4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L39a5f8.  call temp:= `a`(v0, v2) @signature `Lio/reactivex/internal/util/AtomicThrowable;.a:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L39a5fe.  v0:= temp;
  #L39a600.  if v0 == 0 then goto L39a65c;
  #L39a604.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.delayErrors` @type ^`boolean` @kind boolean;
  #L39a608.  if v2 == 0 then goto L39a630;
  #L39a60c.  call temp:= `decrementAndGet`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L39a612.  v2:= temp;
  #L39a614.  if v2 != 0 then goto L39a662;
  #L39a618.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L39a61c.  call temp:= `b`(v2) @signature `Lio/reactivex/internal/util/AtomicThrowable;.b:()Ljava/lang/Throwable;` @kind virtual;
  #L39a622.  v2:= temp @kind object;
  #L39a624.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.actual` @type ^`b2.b` @kind object;
  #L39a628.  call `a`(v0, v2) @signature `Lb2/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L39a62e.  goto L39a662;
  #L39a630.  call `e`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.e:()V` @kind virtual;
  #L39a636.  v2:= 0I;
  #L39a638.  call temp:= `getAndSet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I` @kind virtual;
  #L39a63e.  v2:= temp;
  #L39a640.  if v2 <= 0 then goto L39a662;
  #L39a644.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L39a648.  call temp:= `b`(v2) @signature `Lio/reactivex/internal/util/AtomicThrowable;.b:()Ljava/lang/Throwable;` @kind virtual;
  #L39a64e.  v2:= temp @kind object;
  #L39a650.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.actual` @type ^`b2.b` @kind object;
  #L39a654.  call `a`(v0, v2) @signature `Lb2/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L39a65a.  goto L39a662;
  #L39a65c.  call `q`(v2) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L39a662.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a6f8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.d` @type ^`e2.b` @kind object;
  #L39a6fc.  call temp:= `i`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.i:(Le2/b;Le2/b;)Z` @kind static;
  #L39a702.  v0:= temp;
  #L39a704.  if v0 == 0 then goto L39a716;
  #L39a708.  v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.d` @type ^`e2.b` := v2 @kind object;
  #L39a70c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.actual` @type ^`b2.b` @kind object;
  #L39a710.  call `b`(v2, v1) @signature `Lb2/b;.b:(Le2/b;)V` @kind interface;
  #L39a716.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` v1 @kind this, `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.c:(Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver;)V` @AccessFlag  {
    temp;
    v0;

  #L39a568.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.set` @type ^`e2.a` @kind object;
  #L39a56c.  call temp:= `a`(v0, v2) @signature `Le2/a;.a:(Le2/b;)Z` @kind virtual;
  #L39a572.  call `onComplete`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.onComplete:()V` @kind virtual;
  #L39a578.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a4d4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.d` @type ^`e2.b` @kind object;
  #L39a4d8.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L39a4de.  v0:= temp;
  #L39a4e0.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a53c.  v0:= 1I;
  #L39a53e.  v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.disposed` @type ^`boolean` := v0 @kind boolean;
  #L39a542.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.d` @type ^`e2.b` @kind object;
  #L39a546.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L39a54c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.set` @type ^`e2.a` @kind object;
  #L39a550.  call `e`(v0) @signature `Le2/a;.e:()V` @kind virtual;
  #L39a556.  return @kind void;
}
procedure `void` `f`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` v1 @kind this, `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.f:(Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L39a58c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.set` @type ^`e2.a` @kind object;
  #L39a590.  call temp:= `a`(v0, v2) @signature `Le2/a;.a:(Le2/b;)Z` @kind virtual;
  #L39a596.  call `a`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L39a59c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a5b0.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L39a5b6.  v0:= temp;
  #L39a5b8.  if v0 != 0 then goto L39a5e2;
  #L39a5bc.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L39a5c0.  call temp:= `b`(v0) @signature `Lio/reactivex/internal/util/AtomicThrowable;.b:()Ljava/lang/Throwable;` @kind virtual;
  #L39a5c6.  v0:= temp @kind object;
  #L39a5c8.  if v0 == 0 then goto L39a5d8;
  #L39a5cc.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.actual` @type ^`b2.b` @kind object;
  #L39a5d0.  call `a`(v1, v0) @signature `Lb2/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L39a5d6.  goto L39a5e2;
  #L39a5d8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.actual` @type ^`b2.b` @kind object;
  #L39a5dc.  call `onComplete`(v0) @signature `Lb2/b;.onComplete:()V` @kind interface;
  #L39a5e2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a674.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.mapper` @type ^`h2.e` @kind object;
  #L39a678.  call temp:= `apply`(v0, v3) @signature `Lh2/e;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39a67e.  v3:= temp @kind object;
  #L39a680.  v0:= "The mapper returned a null CompletableSource" @kind object;
  #L39a684.  call temp:= `d`(v3, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L39a68a.  v3:= temp @kind object;
  #L39a68c.  v3:= (`b2.c`) v3 @kind object;
  #L39a690.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L39a696.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver`;
  #L39a69a.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;)V` @kind direct;
  #L39a6a0.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.disposed` @type ^`boolean` @kind boolean;
  #L39a6a4.  if v1 != 0 then goto L39a6be;
  #L39a6a8.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.set` @type ^`e2.a` @kind object;
  #L39a6ac.  call temp:= `b`(v1, v0) @signature `Le2/a;.b:(Le2/b;)Z` @kind virtual;
  #L39a6b2.  v1:= temp;
  #L39a6b4.  if v1 == 0 then goto L39a6be;
  #L39a6b8.  call `b`(v3, v0) @signature `Lb2/c;.b:(Lb2/b;)V` @kind interface;
  #L39a6be.  return @kind void;
  #L39a6c0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39a6c2.  call `b`(v3) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L39a6c8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver.d` @type ^`e2.b` @kind object;
  #L39a6cc.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L39a6d2.  call `a`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L39a6d8.  return @kind void;
  catch `java.lang.Throwable` @[L39a674..L39a690] goto L39a6c0;
}
