record `io.reactivex.internal.operators.observable.c$a` @kind class @AccessFlag FINAL extends `b2.p` @kind interface, `e2.b` @kind interface {
  `b2.s` `io.reactivex.internal.operators.observable.c$a.a` @AccessFlag FINAL;
  `h2.g` `io.reactivex.internal.operators.observable.c$a.b` @AccessFlag FINAL;
  `e2.b` `io.reactivex.internal.operators.observable.c$a.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.c$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.c$a` v0 @kind this, `b2.s` v1 @kind object, `h2.g` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c$a;.<init>:(Lb2/s;Lh2/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L399370.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L399376.  v0.`io.reactivex.internal.operators.observable.c$a.a` @type ^`b2.s` := v1 @kind object;
  #L39937a.  v0.`io.reactivex.internal.operators.observable.c$a.b` @type ^`h2.g` := v2 @kind object;
  #L39937e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.c$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3993dc.  v0:= v1.`io.reactivex.internal.operators.observable.c$a.d` @type ^`boolean` @kind boolean;
  #L3993e0.  if v0 == 0 then goto L3993ec;
  #L3993e4.  call `q`(v2) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L3993ea.  return @kind void;
  #L3993ec.  v0:= 1I;
  #L3993ee.  v1.`io.reactivex.internal.operators.observable.c$a.d` @type ^`boolean` := v0 @kind boolean;
  #L3993f2.  v0:= v1.`io.reactivex.internal.operators.observable.c$a.a` @type ^`b2.s` @kind object;
  #L3993f6.  call `a`(v0, v2) @signature `Lb2/s;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L3993fc.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.observable.c$a` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c$a;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399480.  v0:= v1.`io.reactivex.internal.operators.observable.c$a.c` @type ^`e2.b` @kind object;
  #L399484.  call temp:= `i`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.i:(Le2/b;Le2/b;)Z` @kind static;
  #L39948a.  v0:= temp;
  #L39948c.  if v0 == 0 then goto L39949e;
  #L399490.  v1.`io.reactivex.internal.operators.observable.c$a.c` @type ^`e2.b` := v2 @kind object;
  #L399494.  v2:= v1.`io.reactivex.internal.operators.observable.c$a.a` @type ^`b2.s` @kind object;
  #L399498.  call `b`(v2, v1) @signature `Lb2/s;.b:(Le2/b;)V` @kind interface;
  #L39949e.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.operators.observable.c$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/c$a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399350.  v0:= v1.`io.reactivex.internal.operators.observable.c$a.c` @type ^`e2.b` @kind object;
  #L399354.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L39935a.  v0:= temp;
  #L39935c.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.operators.observable.c$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/c$a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399390.  v0:= v1.`io.reactivex.internal.operators.observable.c$a.c` @type ^`e2.b` @kind object;
  #L399394.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L39939a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.c$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/c$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3993ac.  v0:= v2.`io.reactivex.internal.operators.observable.c$a.d` @type ^`boolean` @kind boolean;
  #L3993b0.  if v0 != 0 then goto L3993c8;
  #L3993b4.  v0:= 1I;
  #L3993b6.  v2.`io.reactivex.internal.operators.observable.c$a.d` @type ^`boolean` := v0 @kind boolean;
  #L3993ba.  v0:= v2.`io.reactivex.internal.operators.observable.c$a.a` @type ^`b2.s` @kind object;
  #L3993be.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L3993c2.  call `onSuccess`(v0, v1) @signature `Lb2/s;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L3993c8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.c$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399410.  v0:= v1.`io.reactivex.internal.operators.observable.c$a.d` @type ^`boolean` @kind boolean;
  #L399414.  if v0 == 0 then goto L39941a;
  #L399418.  return @kind void;
  #L39941a.  v0:= v1.`io.reactivex.internal.operators.observable.c$a.b` @type ^`h2.g` @kind object;
  #L39941e.  call temp:= `a`(v0, v2) @signature `Lh2/g;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L399424.  v2:= temp;
  #L399426.  if v2 == 0 then goto L399448;
  #L39942a.  v2:= 1I;
  #L39942c.  v1.`io.reactivex.internal.operators.observable.c$a.d` @type ^`boolean` := v2 @kind boolean;
  #L399430.  v2:= v1.`io.reactivex.internal.operators.observable.c$a.c` @type ^`e2.b` @kind object;
  #L399434.  call `e`(v2) @signature `Le2/b;.e:()V` @kind interface;
  #L39943a.  v2:= v1.`io.reactivex.internal.operators.observable.c$a.a` @type ^`b2.s` @kind object;
  #L39943e.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L399442.  call `onSuccess`(v2, v0) @signature `Lb2/s;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L399448.  return @kind void;
  #L39944a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39944c.  call `b`(v2) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L399452.  v0:= v1.`io.reactivex.internal.operators.observable.c$a.c` @type ^`e2.b` @kind object;
  #L399456.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L39945c.  call `a`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/c$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L399462.  return @kind void;
  catch `java.lang.Throwable` @[L39941a..L399426] goto L39944a;
}
