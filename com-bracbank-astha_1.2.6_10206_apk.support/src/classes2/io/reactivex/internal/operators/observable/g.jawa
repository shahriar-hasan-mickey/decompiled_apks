record `io.reactivex.internal.operators.observable.g` @kind class @AccessFlag PUBLIC_FINAL extends `b2.n` @kind class, `k2.h` @kind interface {
  `java.lang.Object` `io.reactivex.internal.operators.observable.g.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/g;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39aae8.  call `<init>`(v0) @signature `Lb2/n;.<init>:()V` @kind direct;
  #L39aaee.  v0.`io.reactivex.internal.operators.observable.g.a` @type ^`java.lang.Object` := v1 @kind object;
  #L39aaf2.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.observable.g` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/g;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39aad0.  v0:= v1.`io.reactivex.internal.operators.observable.g.a` @type ^`java.lang.Object` @kind object;
  #L39aad4.  return v0 @kind object;
}
procedure `void` `r`(`io.reactivex.internal.operators.observable.g` v2 @kind this, `b2.p` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/g;.r:(Lb2/p;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L39ab04.  v0:= new `io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable`;
  #L39ab08.  v1:= v2.`io.reactivex.internal.operators.observable.g.a` @type ^`java.lang.Object` @kind object;
  #L39ab0c.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.<init>:(Lb2/p;Ljava/lang/Object;)V` @kind direct;
  #L39ab12.  call `b`(v3, v0) @signature `Lb2/p;.b:(Le2/b;)V` @kind interface;
  #L39ab18.  call `run`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.run:()V` @kind virtual;
  #L39ab1e.  return @kind void;
}
