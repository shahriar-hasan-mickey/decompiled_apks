record `io.reactivex.internal.operators.observable.i$a` @kind class @AccessFlag FINAL extends `b2.p` @kind interface {
  `b2.p` `io.reactivex.internal.operators.observable.i$a.a` @AccessFlag FINAL;
  `b2.o` `io.reactivex.internal.operators.observable.i$a.b` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.observable.i$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.i$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.i$a` v0 @kind this, `b2.p` v1 @kind object, `b2.o` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/i$a;.<init>:(Lb2/p;Lb2/o;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39af98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39af9e.  v0.`io.reactivex.internal.operators.observable.i$a.a` @type ^`b2.p` := v1 @kind object;
  #L39afa2.  v0.`io.reactivex.internal.operators.observable.i$a.b` @type ^`b2.o` := v2 @kind object;
  #L39afa6.  v1:= 1I;
  #L39afa8.  v0.`io.reactivex.internal.operators.observable.i$a.d` @type ^`boolean` := v1 @kind boolean;
  #L39afac.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L39afb0.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L39afb6.  v0.`io.reactivex.internal.operators.observable.i$a.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L39afba.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.i$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/i$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39b004.  v0:= v1.`io.reactivex.internal.operators.observable.i$a.a` @type ^`b2.p` @kind object;
  #L39b008.  call `a`(v0, v2) @signature `Lb2/p;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L39b00e.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.observable.i$a` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/i$a;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39b04c.  v0:= v1.`io.reactivex.internal.operators.observable.i$a.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L39b050.  call temp:= `b`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.b:(Le2/b;)Z` @kind virtual;
  #L39b056.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.i$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/i$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39afcc.  v0:= v1.`io.reactivex.internal.operators.observable.i$a.d` @type ^`boolean` @kind boolean;
  #L39afd0.  if v0 == 0 then goto L39afe6;
  #L39afd4.  v0:= 0I;
  #L39afd6.  v1.`io.reactivex.internal.operators.observable.i$a.d` @type ^`boolean` := v0 @kind boolean;
  #L39afda.  v0:= v1.`io.reactivex.internal.operators.observable.i$a.b` @type ^`b2.o` @kind object;
  #L39afde.  call `c`(v0, v1) @signature `Lb2/o;.c:(Lb2/p;)V` @kind interface;
  #L39afe4.  goto L39aff0;
  #L39afe6.  v0:= v1.`io.reactivex.internal.operators.observable.i$a.a` @type ^`b2.p` @kind object;
  #L39afea.  call `onComplete`(v0) @signature `Lb2/p;.onComplete:()V` @kind interface;
  #L39aff0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.i$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/i$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39b020.  v0:= v1.`io.reactivex.internal.operators.observable.i$a.d` @type ^`boolean` @kind boolean;
  #L39b024.  if v0 == 0 then goto L39b02e;
  #L39b028.  v0:= 0I;
  #L39b02a.  v1.`io.reactivex.internal.operators.observable.i$a.d` @type ^`boolean` := v0 @kind boolean;
  #L39b02e.  v0:= v1.`io.reactivex.internal.operators.observable.i$a.a` @type ^`b2.p` @kind object;
  #L39b032.  call `onNext`(v0, v2) @signature `Lb2/p;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L39b038.  return @kind void;
}
