record `io.reactivex.internal.operators.observable.h$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.a` @kind class {
  `h2.e` `io.reactivex.internal.operators.observable.h$a.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.h$a` v0 @kind this, `b2.p` v1 @kind object, `h2.e` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/h$a;.<init>:(Lb2/p;Lh2/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39ab8c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/a;.<init>:(Lb2/p;)V` @kind direct;
  #L39ab92.  v0.`io.reactivex.internal.operators.observable.h$a.f` @type ^`h2.e` := v2 @kind object;
  #L39ab96.  return @kind void;
}
procedure `int` `h`(`io.reactivex.internal.operators.observable.h$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/h$a;.h:(I)I` @AccessFlag PUBLIC {
    temp;

  #L39ab30.  call temp:= `i`(v0, v1) @signature `Lio/reactivex/internal/observers/a;.i:(I)I` @kind virtual;
  #L39ab36.  v1:= temp;
  #L39ab38.  return v1;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.h$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/h$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39aba8.  v0:= v1.`io.reactivex.internal.observers.a.d` @type ^`boolean` @kind boolean;
  #L39abac.  if v0 == 0 then goto L39abb2;
  #L39abb0.  return @kind void;
  #L39abb2.  v0:= v1.`io.reactivex.internal.observers.a.e` @type ^`int`;
  #L39abb6.  if v0 == 0 then goto L39abc8;
  #L39abba.  v2:= v1.`io.reactivex.internal.observers.a.a` @type ^`b2.p` @kind object;
  #L39abbe.  v0:= 0I;
  #L39abc0.  call `onNext`(v2, v0) @signature `Lb2/p;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L39abc6.  return @kind void;
  #L39abc8.  v0:= v1.`io.reactivex.internal.operators.observable.h$a.f` @type ^`h2.e` @kind object;
  #L39abcc.  call temp:= `apply`(v0, v2) @signature `Lh2/e;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39abd2.  v2:= temp @kind object;
  #L39abd4.  v0:= "The mapper function returned a null value." @kind object;
  #L39abd8.  call temp:= `d`(v2, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L39abde.  v2:= temp @kind object;
  #L39abe0.  v0:= v1.`io.reactivex.internal.observers.a.a` @type ^`b2.p` @kind object;
  #L39abe4.  call `onNext`(v0, v2) @signature `Lb2/p;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L39abea.  return @kind void;
  #L39abec.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39abee.  call `g`(v1, v2) @signature `Lio/reactivex/internal/observers/a;.g:(Ljava/lang/Throwable;)V` @kind virtual;
  #L39abf4.  return @kind void;
  catch `java.lang.Throwable` @[L39abc8..L39abe0] goto L39abec;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.h$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/h$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39ab4c.  v0:= v2.`io.reactivex.internal.observers.a.c` @type ^`k2.e` @kind object;
  #L39ab50.  call temp:= `poll`(v0) @signature `Lk2/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L39ab56.  v0:= temp @kind object;
  #L39ab58.  if v0 == 0 then goto L39ab76;
  #L39ab5c.  v1:= v2.`io.reactivex.internal.operators.observable.h$a.f` @type ^`h2.e` @kind object;
  #L39ab60.  call temp:= `apply`(v1, v0) @signature `Lh2/e;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39ab66.  v0:= temp @kind object;
  #L39ab68.  v1:= "The mapper function returned a null value." @kind object;
  #L39ab6c.  call temp:= `d`(v0, v1) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L39ab72.  v0:= temp @kind object;
  #L39ab74.  goto L39ab78;
  #L39ab76.  v0:= 0I;
  #L39ab78.  return v0 @kind object;
}
