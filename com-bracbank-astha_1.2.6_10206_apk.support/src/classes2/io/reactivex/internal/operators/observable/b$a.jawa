record `io.reactivex.internal.operators.observable.b$a` @kind class @AccessFlag FINAL extends `b2.p` @kind interface, `e2.b` @kind interface {
  `b2.p` `io.reactivex.internal.operators.observable.b$a.a` @AccessFlag FINAL;
  `h2.g` `io.reactivex.internal.operators.observable.b$a.b` @AccessFlag FINAL;
  `e2.b` `io.reactivex.internal.operators.observable.b$a.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.b$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.b$a` v0 @kind this, `b2.p` v1 @kind object, `h2.g` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/b$a;.<init>:(Lb2/p;Lh2/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3991fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L399202.  v0.`io.reactivex.internal.operators.observable.b$a.a` @type ^`b2.p` := v1 @kind object;
  #L399206.  v0.`io.reactivex.internal.operators.observable.b$a.b` @type ^`h2.g` := v2 @kind object;
  #L39920a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.b$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/b$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399270.  v0:= v1.`io.reactivex.internal.operators.observable.b$a.d` @type ^`boolean` @kind boolean;
  #L399274.  if v0 == 0 then goto L399280;
  #L399278.  call `q`(v2) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L39927e.  return @kind void;
  #L399280.  v0:= 1I;
  #L399282.  v1.`io.reactivex.internal.operators.observable.b$a.d` @type ^`boolean` := v0 @kind boolean;
  #L399286.  v0:= v1.`io.reactivex.internal.operators.observable.b$a.a` @type ^`b2.p` @kind object;
  #L39928a.  call `a`(v0, v2) @signature `Lb2/p;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L399290.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.observable.b$a` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/b$a;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399320.  v0:= v1.`io.reactivex.internal.operators.observable.b$a.c` @type ^`e2.b` @kind object;
  #L399324.  call temp:= `i`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.i:(Le2/b;Le2/b;)Z` @kind static;
  #L39932a.  v0:= temp;
  #L39932c.  if v0 == 0 then goto L39933e;
  #L399330.  v1.`io.reactivex.internal.operators.observable.b$a.c` @type ^`e2.b` := v2 @kind object;
  #L399334.  v2:= v1.`io.reactivex.internal.operators.observable.b$a.a` @type ^`b2.p` @kind object;
  #L399338.  call `b`(v2, v1) @signature `Lb2/p;.b:(Le2/b;)V` @kind interface;
  #L39933e.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.operators.observable.b$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/b$a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3991dc.  v0:= v1.`io.reactivex.internal.operators.observable.b$a.c` @type ^`e2.b` @kind object;
  #L3991e0.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L3991e6.  v0:= temp;
  #L3991e8.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.operators.observable.b$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/b$a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39921c.  v0:= v1.`io.reactivex.internal.operators.observable.b$a.c` @type ^`e2.b` @kind object;
  #L399220.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L399226.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.b$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/b$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399238.  v0:= v2.`io.reactivex.internal.operators.observable.b$a.d` @type ^`boolean` @kind boolean;
  #L39923c.  if v0 != 0 then goto L39925e;
  #L399240.  v0:= 1I;
  #L399242.  v2.`io.reactivex.internal.operators.observable.b$a.d` @type ^`boolean` := v0 @kind boolean;
  #L399246.  v0:= v2.`io.reactivex.internal.operators.observable.b$a.a` @type ^`b2.p` @kind object;
  #L39924a.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L39924e.  call `onNext`(v0, v1) @signature `Lb2/p;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L399254.  v0:= v2.`io.reactivex.internal.operators.observable.b$a.a` @type ^`b2.p` @kind object;
  #L399258.  call `onComplete`(v0) @signature `Lb2/p;.onComplete:()V` @kind interface;
  #L39925e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.b$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/b$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3992a4.  v0:= v1.`io.reactivex.internal.operators.observable.b$a.d` @type ^`boolean` @kind boolean;
  #L3992a8.  if v0 == 0 then goto L3992ae;
  #L3992ac.  return @kind void;
  #L3992ae.  v0:= v1.`io.reactivex.internal.operators.observable.b$a.b` @type ^`h2.g` @kind object;
  #L3992b2.  call temp:= `a`(v0, v2) @signature `Lh2/g;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L3992b8.  v2:= temp;
  #L3992ba.  if v2 == 0 then goto L3992e6;
  #L3992be.  v2:= 1I;
  #L3992c0.  v1.`io.reactivex.internal.operators.observable.b$a.d` @type ^`boolean` := v2 @kind boolean;
  #L3992c4.  v2:= v1.`io.reactivex.internal.operators.observable.b$a.c` @type ^`e2.b` @kind object;
  #L3992c8.  call `e`(v2) @signature `Le2/b;.e:()V` @kind interface;
  #L3992ce.  v2:= v1.`io.reactivex.internal.operators.observable.b$a.a` @type ^`b2.p` @kind object;
  #L3992d2.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3992d6.  call `onNext`(v2, v0) @signature `Lb2/p;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L3992dc.  v2:= v1.`io.reactivex.internal.operators.observable.b$a.a` @type ^`b2.p` @kind object;
  #L3992e0.  call `onComplete`(v2) @signature `Lb2/p;.onComplete:()V` @kind interface;
  #L3992e6.  return @kind void;
  #L3992e8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3992ea.  call `b`(v2) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L3992f0.  v0:= v1.`io.reactivex.internal.operators.observable.b$a.c` @type ^`e2.b` @kind object;
  #L3992f4.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L3992fa.  call `a`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/b$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L399300.  return @kind void;
  catch `java.lang.Throwable` @[L3992ae..L3992ba] goto L3992e8;
}
