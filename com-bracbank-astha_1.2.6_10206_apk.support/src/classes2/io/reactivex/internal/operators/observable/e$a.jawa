record `io.reactivex.internal.operators.observable.e$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.a` @kind class {
  `h2.g` `io.reactivex.internal.operators.observable.e$a.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.e$a` v0 @kind this, `b2.p` v1 @kind object, `h2.g` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/e$a;.<init>:(Lb2/p;Lh2/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L399624.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/a;.<init>:(Lb2/p;)V` @kind direct;
  #L39962a.  v0.`io.reactivex.internal.operators.observable.e$a.f` @type ^`h2.g` := v2 @kind object;
  #L39962e.  return @kind void;
}
procedure `int` `h`(`io.reactivex.internal.operators.observable.e$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/e$a;.h:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3995d4.  call temp:= `i`(v0, v1) @signature `Lio/reactivex/internal/observers/a;.i:(I)I` @kind virtual;
  #L3995da.  v1:= temp;
  #L3995dc.  return v1;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.e$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/e$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399640.  v0:= v1.`io.reactivex.internal.observers.a.e` @type ^`int`;
  #L399644.  if v0 != 0 then goto L39966e;
  #L399648.  v0:= v1.`io.reactivex.internal.operators.observable.e$a.f` @type ^`h2.g` @kind object;
  #L39964c.  call temp:= `a`(v0, v2) @signature `Lh2/g;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L399652.  v0:= temp;
  #L399654.  if v0 == 0 then goto L39967a;
  #L399658.  v0:= v1.`io.reactivex.internal.observers.a.a` @type ^`b2.p` @kind object;
  #L39965c.  call `onNext`(v0, v2) @signature `Lb2/p;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L399662.  goto L39967a;
  #L399664.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L399666.  call `g`(v1, v2) @signature `Lio/reactivex/internal/observers/a;.g:(Ljava/lang/Throwable;)V` @kind virtual;
  #L39966c.  return @kind void;
  #L39966e.  v2:= v1.`io.reactivex.internal.observers.a.a` @type ^`b2.p` @kind object;
  #L399672.  v0:= 0I;
  #L399674.  call `onNext`(v2, v0) @signature `Lb2/p;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L39967a.  return @kind void;
  catch `java.lang.Throwable` @[L399648..L399654] goto L399664;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.e$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/e$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3995f0.  v0:= v2.`io.reactivex.internal.observers.a.c` @type ^`k2.e` @kind object;
  #L3995f4.  call temp:= `poll`(v0) @signature `Lk2/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L3995fa.  v0:= temp @kind object;
  #L3995fc.  if v0 == 0 then goto L399610;
  #L399600.  v1:= v2.`io.reactivex.internal.operators.observable.e$a.f` @type ^`h2.g` @kind object;
  #L399604.  call temp:= `a`(v1, v0) @signature `Lh2/g;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L39960a.  v1:= temp;
  #L39960c.  if v1 == 0 then goto L3995f0;
  #L399610.  return v0 @kind object;
}
