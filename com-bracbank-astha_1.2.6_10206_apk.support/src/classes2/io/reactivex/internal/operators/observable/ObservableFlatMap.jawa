record `io.reactivex.internal.operators.observable.ObservableFlatMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `h2.e` `io.reactivex.internal.operators.observable.ObservableFlatMap.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableFlatMap.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableFlatMap.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableFlatMap.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFlatMap` v0 @kind this, `b2.o` v1 @kind object, `h2.e` v2 @kind object, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lb2/o;Lh2/e;ZII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39a7fc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lb2/o;)V` @kind direct;
  #L39a802.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMap.b` @type ^`h2.e` := v2 @kind object;
  #L39a806.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMap.c` @type ^`boolean` := v3 @kind boolean;
  #L39a80a.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMap.d` @type ^`int` := v4;
  #L39a80e.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMap.e` @type ^`int` := v5;
  #L39a812.  return @kind void;
}
procedure `void` `r`(`io.reactivex.internal.operators.observable.ObservableFlatMap` v8 @kind this, `b2.p` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.r:(Lb2/p;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L39a824.  v0:= v8.`io.reactivex.internal.operators.observable.a.a` @type ^`b2.o` @kind object;
  #L39a828.  v1:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.b` @type ^`h2.e` @kind object;
  #L39a82c.  call temp:= `b`(v0, v9, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.b:(Lb2/o;Lb2/p;Lh2/e;)Z` @kind static;
  #L39a832.  v0:= temp;
  #L39a834.  if v0 == 0 then goto L39a83a;
  #L39a838.  return @kind void;
  #L39a83a.  v0:= v8.`io.reactivex.internal.operators.observable.a.a` @type ^`b2.o` @kind object;
  #L39a83e.  v7:= new `io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver`;
  #L39a842.  v3:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.b` @type ^`h2.e` @kind object;
  #L39a846.  v4:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.c` @type ^`boolean` @kind boolean;
  #L39a84a.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.d` @type ^`int`;
  #L39a84e.  v6:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.e` @type ^`int`;
  #L39a852.  v1:= v7 @kind object;
  #L39a854.  v2:= v9 @kind object;
  #L39a856.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap$MergeObserver;.<init>:(Lb2/p;Lh2/e;ZII)V` @kind direct;
  #L39a85c.  call `c`(v0, v7) @signature `Lb2/o;.c:(Lb2/p;)V` @kind interface;
  #L39a862.  return @kind void;
}
