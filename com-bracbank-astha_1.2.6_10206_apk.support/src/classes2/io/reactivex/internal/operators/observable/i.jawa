record `io.reactivex.internal.operators.observable.i` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `b2.o` `io.reactivex.internal.operators.observable.i.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.i` v0 @kind this, `b2.o` v1 @kind object, `b2.o` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/i;.<init>:(Lb2/o;Lb2/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39b068.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lb2/o;)V` @kind direct;
  #L39b06e.  v0.`io.reactivex.internal.operators.observable.i.b` @type ^`b2.o` := v2 @kind object;
  #L39b072.  return @kind void;
}
procedure `void` `r`(`io.reactivex.internal.operators.observable.i` v2 @kind this, `b2.p` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/i;.r:(Lb2/p;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39b084.  v0:= new `io.reactivex.internal.operators.observable.i$a`;
  #L39b088.  v1:= v2.`io.reactivex.internal.operators.observable.i.b` @type ^`b2.o` @kind object;
  #L39b08c.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/observable/i$a;.<init>:(Lb2/p;Lb2/o;)V` @kind direct;
  #L39b092.  v1:= v0.`io.reactivex.internal.operators.observable.i$a.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L39b096.  call `b`(v3, v1) @signature `Lb2/p;.b:(Le2/b;)V` @kind interface;
  #L39b09c.  v3:= v2.`io.reactivex.internal.operators.observable.a.a` @type ^`b2.o` @kind object;
  #L39b0a0.  call `c`(v3, v0) @signature `Lb2/o;.c:(Lb2/p;)V` @kind interface;
  #L39b0a6.  return @kind void;
}
