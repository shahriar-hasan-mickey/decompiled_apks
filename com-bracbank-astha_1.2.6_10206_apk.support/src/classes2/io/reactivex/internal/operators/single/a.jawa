record `io.reactivex.internal.operators.single.a` @kind class @AccessFlag PUBLIC_FINAL extends `b2.r` @kind class {
  `b2.t` `io.reactivex.internal.operators.single.a.a` @AccessFlag FINAL;
  `h2.d` `io.reactivex.internal.operators.single.a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.a` v0 @kind this, `b2.t` v1 @kind object, `h2.d` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/a;.<init>:(Lb2/t;Lh2/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39b170.  call `<init>`(v0) @signature `Lb2/r;.<init>:()V` @kind direct;
  #L39b176.  v0.`io.reactivex.internal.operators.single.a.a` @type ^`b2.t` := v1 @kind object;
  #L39b17a.  v0.`io.reactivex.internal.operators.single.a.b` @type ^`h2.d` := v2 @kind object;
  #L39b17e.  return @kind void;
}
procedure `void` `k`(`io.reactivex.internal.operators.single.a` v2 @kind this, `b2.s` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/a;.k:(Lb2/s;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L39b190.  v0:= v2.`io.reactivex.internal.operators.single.a.a` @type ^`b2.t` @kind object;
  #L39b194.  v1:= new `io.reactivex.internal.operators.single.a$a`;
  #L39b198.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/internal/operators/single/a$a;.<init>:(Lio/reactivex/internal/operators/single/a;Lb2/s;)V` @kind direct;
  #L39b19e.  call `c`(v0, v1) @signature `Lb2/t;.c:(Lb2/s;)V` @kind interface;
  #L39b1a4.  return @kind void;
}
