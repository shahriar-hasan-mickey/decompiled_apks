record `io.reactivex.internal.operators.single.c` @kind class @AccessFlag PUBLIC_FINAL extends `b2.r` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.single.c.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/c;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39b2a4.  call `<init>`(v0) @signature `Lb2/r;.<init>:()V` @kind direct;
  #L39b2aa.  v0.`io.reactivex.internal.operators.single.c.a` @type ^`java.lang.Object` := v1 @kind object;
  #L39b2ae.  return @kind void;
}
procedure `void` `k`(`io.reactivex.internal.operators.single.c` v1 @kind this, `b2.s` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/c;.k:(Lb2/s;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L39b2c0.  call temp:= `a`() @signature `Lio/reactivex/disposables/a;.a:()Le2/b;` @kind static;
  #L39b2c6.  v0:= temp @kind object;
  #L39b2c8.  call `b`(v2, v0) @signature `Lb2/s;.b:(Le2/b;)V` @kind interface;
  #L39b2ce.  v0:= v1.`io.reactivex.internal.operators.single.c.a` @type ^`java.lang.Object` @kind object;
  #L39b2d2.  call `onSuccess`(v2, v0) @signature `Lb2/s;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L39b2d8.  return @kind void;
}
