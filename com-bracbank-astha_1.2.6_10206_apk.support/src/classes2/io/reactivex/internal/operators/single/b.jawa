record `io.reactivex.internal.operators.single.b` @kind class @AccessFlag PUBLIC_FINAL extends `b2.r` @kind class {
  `b2.t` `io.reactivex.internal.operators.single.b.a` @AccessFlag FINAL;
  `h2.d` `io.reactivex.internal.operators.single.b.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.b` v0 @kind this, `b2.t` v1 @kind object, `h2.d` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/b;.<init>:(Lb2/t;Lh2/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39b25c.  call `<init>`(v0) @signature `Lb2/r;.<init>:()V` @kind direct;
  #L39b262.  v0.`io.reactivex.internal.operators.single.b.a` @type ^`b2.t` := v1 @kind object;
  #L39b266.  v0.`io.reactivex.internal.operators.single.b.b` @type ^`h2.d` := v2 @kind object;
  #L39b26a.  return @kind void;
}
procedure `void` `k`(`io.reactivex.internal.operators.single.b` v2 @kind this, `b2.s` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/b;.k:(Lb2/s;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L39b27c.  v0:= v2.`io.reactivex.internal.operators.single.b.a` @type ^`b2.t` @kind object;
  #L39b280.  v1:= new `io.reactivex.internal.operators.single.b$a`;
  #L39b284.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/internal/operators/single/b$a;.<init>:(Lio/reactivex/internal/operators/single/b;Lb2/s;)V` @kind direct;
  #L39b28a.  call `c`(v0, v1) @signature `Lb2/t;.c:(Lb2/s;)V` @kind interface;
  #L39b290.  return @kind void;
}
