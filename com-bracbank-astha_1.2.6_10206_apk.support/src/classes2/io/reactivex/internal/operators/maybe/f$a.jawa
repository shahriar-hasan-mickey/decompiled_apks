record `io.reactivex.internal.operators.maybe.f$a` @kind class @AccessFlag FINAL extends `b2.b` @kind interface, `e2.b` @kind interface {
  `b2.k` `io.reactivex.internal.operators.maybe.f$a.a` @AccessFlag FINAL;
  `e2.b` `io.reactivex.internal.operators.maybe.f$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.f$a` v0 @kind this, `b2.k` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/f$a;.<init>:(Lb2/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L397ca4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L397caa.  v0.`io.reactivex.internal.operators.maybe.f$a.a` @type ^`b2.k` := v1 @kind object;
  #L397cae.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.f$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/f$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397d08.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L397d0c.  v1.`io.reactivex.internal.operators.maybe.f$a.b` @type ^`e2.b` := v0 @kind object;
  #L397d10.  v0:= v1.`io.reactivex.internal.operators.maybe.f$a.a` @type ^`b2.k` @kind object;
  #L397d14.  call `a`(v0, v2) @signature `Lb2/k;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L397d1a.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.maybe.f$a` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/f$a;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397d2c.  v0:= v1.`io.reactivex.internal.operators.maybe.f$a.b` @type ^`e2.b` @kind object;
  #L397d30.  call temp:= `i`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.i:(Le2/b;Le2/b;)Z` @kind static;
  #L397d36.  v0:= temp;
  #L397d38.  if v0 == 0 then goto L397d4a;
  #L397d3c.  v1.`io.reactivex.internal.operators.maybe.f$a.b` @type ^`e2.b` := v2 @kind object;
  #L397d40.  v2:= v1.`io.reactivex.internal.operators.maybe.f$a.a` @type ^`b2.k` @kind object;
  #L397d44.  call `b`(v2, v1) @signature `Lb2/k;.b:(Le2/b;)V` @kind interface;
  #L397d4a.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.operators.maybe.f$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/f$a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397c84.  v0:= v1.`io.reactivex.internal.operators.maybe.f$a.b` @type ^`e2.b` @kind object;
  #L397c88.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L397c8e.  v0:= temp;
  #L397c90.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.operators.maybe.f$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/f$a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397cc0.  v0:= v1.`io.reactivex.internal.operators.maybe.f$a.b` @type ^`e2.b` @kind object;
  #L397cc4.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L397cca.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L397cce.  v1.`io.reactivex.internal.operators.maybe.f$a.b` @type ^`e2.b` := v0 @kind object;
  #L397cd2.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.f$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/f$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397ce4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L397ce8.  v1.`io.reactivex.internal.operators.maybe.f$a.b` @type ^`e2.b` := v0 @kind object;
  #L397cec.  v0:= v1.`io.reactivex.internal.operators.maybe.f$a.a` @type ^`b2.k` @kind object;
  #L397cf0.  call `onComplete`(v0) @signature `Lb2/k;.onComplete:()V` @kind interface;
  #L397cf6.  return @kind void;
}
