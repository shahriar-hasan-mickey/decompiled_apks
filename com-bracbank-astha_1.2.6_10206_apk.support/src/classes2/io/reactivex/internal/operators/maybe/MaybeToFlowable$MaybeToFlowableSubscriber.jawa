record `io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `b2.k` @kind interface {
  `e2.b` `io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber.d` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber` v0 @kind this, `d3.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeToFlowable$MaybeToFlowableSubscriber;.<init>:(Ld3/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L398c2c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Ld3/b;)V` @kind direct;
  #L398c32.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeToFlowable$MaybeToFlowableSubscriber;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L398c84.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`d3.b` @kind object;
  #L398c88.  call `a`(v0, v2) @signature `Ld3/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L398c8e.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeToFlowable$MaybeToFlowableSubscriber;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L398ca0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber.d` @type ^`e2.b` @kind object;
  #L398ca4.  call temp:= `i`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.i:(Le2/b;Le2/b;)Z` @kind static;
  #L398caa.  v0:= temp;
  #L398cac.  if v0 == 0 then goto L398cbe;
  #L398cb0.  v1.`io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber.d` @type ^`e2.b` := v2 @kind object;
  #L398cb4.  v2:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`d3.b` @kind object;
  #L398cb8.  call `c`(v2, v1) @signature `Ld3/b;.c:(Ld3/c;)V` @kind interface;
  #L398cbe.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeToFlowable$MaybeToFlowableSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L398c44.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L398c4a.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber.d` @type ^`e2.b` @kind object;
  #L398c4e.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L398c54.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeToFlowable$MaybeToFlowableSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L398c68.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.actual` @type ^`d3.b` @kind object;
  #L398c6c.  call `onComplete`(v0) @signature `Ld3/b;.onComplete:()V` @kind interface;
  #L398c72.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeToFlowable$MaybeToFlowableSubscriber;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L398cd0.  call `d`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L398cd6.  return @kind void;
}
