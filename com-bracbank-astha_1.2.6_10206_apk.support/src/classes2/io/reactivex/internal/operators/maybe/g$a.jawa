record `io.reactivex.internal.operators.maybe.g$a` @kind class @AccessFlag FINAL extends `b2.k` @kind interface, `e2.b` @kind interface {
  `b2.k` `io.reactivex.internal.operators.maybe.g$a.a` @AccessFlag FINAL;
  `e2.b` `io.reactivex.internal.operators.maybe.g$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.g$a` v0 @kind this, `b2.k` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/g$a;.<init>:(Lb2/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L397dc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L397dc6.  v0.`io.reactivex.internal.operators.maybe.g$a.a` @type ^`b2.k` := v1 @kind object;
  #L397dca.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.g$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/g$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397e18.  v0:= v1.`io.reactivex.internal.operators.maybe.g$a.a` @type ^`b2.k` @kind object;
  #L397e1c.  call `a`(v0, v2) @signature `Lb2/k;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L397e22.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.maybe.g$a` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/g$a;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397e34.  v0:= v1.`io.reactivex.internal.operators.maybe.g$a.b` @type ^`e2.b` @kind object;
  #L397e38.  call temp:= `i`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.i:(Le2/b;Le2/b;)Z` @kind static;
  #L397e3e.  v0:= temp;
  #L397e40.  if v0 == 0 then goto L397e52;
  #L397e44.  v1.`io.reactivex.internal.operators.maybe.g$a.b` @type ^`e2.b` := v2 @kind object;
  #L397e48.  v2:= v1.`io.reactivex.internal.operators.maybe.g$a.a` @type ^`b2.k` @kind object;
  #L397e4c.  call `b`(v2, v1) @signature `Lb2/k;.b:(Le2/b;)V` @kind interface;
  #L397e52.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.operators.maybe.g$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/g$a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397da0.  v0:= v1.`io.reactivex.internal.operators.maybe.g$a.b` @type ^`e2.b` @kind object;
  #L397da4.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L397daa.  v0:= temp;
  #L397dac.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.operators.maybe.g$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/g$a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397ddc.  v0:= v1.`io.reactivex.internal.operators.maybe.g$a.b` @type ^`e2.b` @kind object;
  #L397de0.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L397de6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.g$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/g$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L397df8.  v0:= v2.`io.reactivex.internal.operators.maybe.g$a.a` @type ^`b2.k` @kind object;
  #L397dfc.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L397e00.  call `onSuccess`(v0, v1) @signature `Lb2/k;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L397e06.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.g$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/g$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397e64.  v2:= v1.`io.reactivex.internal.operators.maybe.g$a.a` @type ^`b2.k` @kind object;
  #L397e68.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L397e6c.  call `onSuccess`(v2, v0) @signature `Lb2/k;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L397e72.  return @kind void;
}
