record `io.reactivex.internal.operators.maybe.MaybeFlatten` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.a` @kind class {
  `h2.e` `io.reactivex.internal.operators.maybe.MaybeFlatten.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatten` v0 @kind this, `b2.m` v1 @kind object, `h2.e` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten;.<init>:(Lb2/m;Lh2/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L397b78.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lb2/m;)V` @kind direct;
  #L397b7e.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatten.b` @type ^`h2.e` := v2 @kind object;
  #L397b82.  return @kind void;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.MaybeFlatten` v3 @kind this, `b2.k` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten;.u:(Lb2/k;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L397b94.  v0:= v3.`io.reactivex.internal.operators.maybe.a.a` @type ^`b2.m` @kind object;
  #L397b98.  v1:= new `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver`;
  #L397b9c.  v2:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatten.b` @type ^`h2.e` @kind object;
  #L397ba0.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.<init>:(Lb2/k;Lh2/e;)V` @kind direct;
  #L397ba6.  call `a`(v0, v1) @signature `Lb2/m;.a:(Lb2/k;)V` @kind interface;
  #L397bac.  return @kind void;
}
