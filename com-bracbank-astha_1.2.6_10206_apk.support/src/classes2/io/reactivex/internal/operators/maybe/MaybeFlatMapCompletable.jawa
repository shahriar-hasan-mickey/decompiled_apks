record `io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `b2.a` @kind class {
  `b2.m` `io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.a` @AccessFlag FINAL;
  `h2.e` `io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable` v0 @kind this, `b2.m` v1 @kind object, `h2.e` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapCompletable;.<init>:(Lb2/m;Lh2/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39794c.  call `<init>`(v0) @signature `Lb2/a;.<init>:()V` @kind direct;
  #L397952.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.a` @type ^`b2.m` := v1 @kind object;
  #L397956.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.b` @type ^`h2.e` := v2 @kind object;
  #L39795a.  return @kind void;
}
procedure `void` `p`(`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable` v2 @kind this, `b2.b` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapCompletable;.p:(Lb2/b;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L39796c.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver`;
  #L397970.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.b` @type ^`h2.e` @kind object;
  #L397974.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapCompletable$FlatMapCompletableObserver;.<init>:(Lb2/b;Lh2/e;)V` @kind direct;
  #L39797a.  call `b`(v3, v0) @signature `Lb2/b;.b:(Le2/b;)V` @kind interface;
  #L397980.  v3:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable.a` @type ^`b2.m` @kind object;
  #L397984.  call `a`(v3, v0) @signature `Lb2/m;.a:(Lb2/k;)V` @kind interface;
  #L39798a.  return @kind void;
}
