record `io.reactivex.internal.operators.maybe.MaybeSubscribeOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.a` @kind class {
  `b2.q` `io.reactivex.internal.operators.maybe.MaybeSubscribeOn.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeSubscribeOn` v0 @kind this, `b2.m` v1 @kind object, `b2.q` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn;.<init>:(Lb2/m;Lb2/q;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3989e4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lb2/m;)V` @kind direct;
  #L3989ea.  v0.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn.b` @type ^`b2.q` := v2 @kind object;
  #L3989ee.  return @kind void;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.MaybeSubscribeOn` v4 @kind this, `b2.k` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn;.u:(Lb2/k;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L398a00.  v0:= new `io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver`;
  #L398a04.  call `<init>`(v0, v5) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn$SubscribeOnMaybeObserver;.<init>:(Lb2/k;)V` @kind direct;
  #L398a0a.  call `b`(v5, v0) @signature `Lb2/k;.b:(Le2/b;)V` @kind interface;
  #L398a10.  v5:= v0.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L398a14.  v1:= v4.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn.b` @type ^`b2.q` @kind object;
  #L398a18.  v2:= new `io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a`;
  #L398a1c.  v3:= v4.`io.reactivex.internal.operators.maybe.a.a` @type ^`b2.m` @kind object;
  #L398a20.  call `<init>`(v2, v0, v3) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn$a;.<init>:(Lb2/k;Lb2/m;)V` @kind direct;
  #L398a26.  call temp:= `b`(v1, v2) @signature `Lb2/q;.b:(Ljava/lang/Runnable;)Le2/b;` @kind virtual;
  #L398a2c.  v0:= temp @kind object;
  #L398a2e.  call temp:= `a`(v5, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.a:(Le2/b;)Z` @kind virtual;
  #L398a34.  return @kind void;
}
