record `io.reactivex.internal.operators.maybe.c` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.a` @kind class {
  `h2.g` `io.reactivex.internal.operators.maybe.c.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.c` v0 @kind this, `b2.m` v1 @kind object, `h2.g` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/c;.<init>:(Lb2/m;Lh2/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3977f8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lb2/m;)V` @kind direct;
  #L3977fe.  v0.`io.reactivex.internal.operators.maybe.c.b` @type ^`h2.g` := v2 @kind object;
  #L397802.  return @kind void;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.c` v3 @kind this, `b2.k` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/c;.u:(Lb2/k;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L397814.  v0:= v3.`io.reactivex.internal.operators.maybe.a.a` @type ^`b2.m` @kind object;
  #L397818.  v1:= new `io.reactivex.internal.operators.maybe.c$a`;
  #L39781c.  v2:= v3.`io.reactivex.internal.operators.maybe.c.b` @type ^`h2.g` @kind object;
  #L397820.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/c$a;.<init>:(Lb2/k;Lh2/g;)V` @kind direct;
  #L397826.  call `a`(v0, v1) @signature `Lb2/m;.a:(Lb2/k;)V` @kind interface;
  #L39782c.  return @kind void;
}
