record `io.reactivex.internal.operators.maybe.e` @kind class @AccessFlag PUBLIC_FINAL extends `b2.i` @kind class, `java.util.concurrent.Callable` @kind interface {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.maybe.e.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.e` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/e;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L397be0.  call `<init>`(v0) @signature `Lb2/i;.<init>:()V` @kind direct;
  #L397be6.  v0.`io.reactivex.internal.operators.maybe.e.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L397bea.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.maybe.e` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/e;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397bc0.  v0:= v1.`io.reactivex.internal.operators.maybe.e.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L397bc4.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L397bca.  v0:= temp @kind object;
  #L397bcc.  return v0 @kind object;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.e` v2 @kind this, `b2.k` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/e;.u:(Lb2/k;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L397bfc.  call temp:= `b`() @signature `Lio/reactivex/disposables/a;.b:()Le2/b;` @kind static;
  #L397c02.  v0:= temp @kind object;
  #L397c04.  call `b`(v3, v0) @signature `Lb2/k;.b:(Le2/b;)V` @kind interface;
  #L397c0a.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L397c10.  v1:= temp;
  #L397c12.  if v1 != 0 then goto L397c64;
  #L397c16.  v1:= v2.`io.reactivex.internal.operators.maybe.e.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L397c1a.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L397c20.  v1:= temp @kind object;
  #L397c22.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L397c28.  v0:= temp;
  #L397c2a.  if v0 != 0 then goto L397c64;
  #L397c2e.  if v1 != 0 then goto L397c3a;
  #L397c32.  call `onComplete`(v3) @signature `Lb2/k;.onComplete:()V` @kind interface;
  #L397c38.  goto L397c64;
  #L397c3a.  call `onSuccess`(v3, v1) @signature `Lb2/k;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L397c40.  goto L397c64;
  #L397c42.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L397c44.  call `b`(v1) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L397c4a.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L397c50.  v0:= temp;
  #L397c52.  if v0 != 0 then goto L397c5e;
  #L397c56.  call `a`(v3, v1) @signature `Lb2/k;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L397c5c.  goto L397c64;
  #L397c5e.  call `q`(v1) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L397c64.  return @kind void;
  catch `java.lang.Throwable` @[L397c16..L397c22] goto L397c42;
}
