record `io.reactivex.internal.operators.maybe.MaybeCallbackObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `b2.k` @kind interface, `e2.b` @kind interface {
  `h2.a` `io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onComplete` @AccessFlag FINAL;
  `h2.d` `io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onError` @AccessFlag FINAL;
  `h2.d` `io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onSuccess` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.maybe.MaybeCallbackObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v0 @kind this, `h2.d` v1 @kind object, `h2.d` v2 @kind object, `h2.a` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.<init>:(Lh2/d;Lh2/d;Lh2/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39715c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L397162.  v0.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onSuccess` @type ^`h2.d` := v1 @kind object;
  #L397166.  v0.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onError` @type ^`h2.d` := v2 @kind object;
  #L39716a.  v0.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onComplete` @type ^`h2.a` := v3 @kind object;
  #L39716e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3971dc.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3971e0.  call `lazySet`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L3971e6.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onError` @type ^`h2.d` @kind object;
  #L3971ea.  call `accept`(v0, v5) @signature `Lh2/d;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3971f0.  goto L39721c;
  #L3971f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3971f4.  call `b`(v0) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L3971fa.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L3971fe.  v2:= 2I;
  #L397200.  v2:= new `java.lang.Throwable`[v2];
  #L397204.  v3:= 0I;
  #L397206.  v2[v3]:= v5 @kind object;
  #L39720a.  v5:= 1I;
  #L39720c.  v2[v5]:= v0 @kind object;
  #L397210.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L397216.  call `q`(v1) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L39721c.  return @kind void;
  catch `java.lang.Throwable` @[L3971e6..L3971f0] goto L3971f2;
}
procedure `void` `b`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v0 @kind this, `e2.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;

  #L39723c.  call temp:= `h`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.h:(Ljava/util/concurrent/atomic/AtomicReference;Le2/b;)Z` @kind static;
  #L397242.  return @kind void;
}
procedure `boolean` `d`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397134.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L39713a.  v0:= temp @kind object;
  #L39713c.  v0:= (`e2.b`) v0 @kind object;
  #L397140.  call temp:= `b`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.b:(Le2/b;)Z` @kind static;
  #L397146.  v0:= temp;
  #L397148.  return v0;
}
procedure `void` `e`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L397180.  call temp:= `a`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.a:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L397186.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397198.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L39719c.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L3971a2.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onComplete` @type ^`h2.a` @kind object;
  #L3971a6.  call `run`(v0) @signature `Lh2/a;.run:()V` @kind interface;
  #L3971ac.  goto L3971bc;
  #L3971ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3971b0.  call `b`(v0) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L3971b6.  call `q`(v0) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L3971bc.  return @kind void;
  catch `java.lang.Throwable` @[L3971a2..L3971ac] goto L3971ae;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397254.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.a` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L397258.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L39725e.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onSuccess` @type ^`h2.d` @kind object;
  #L397262.  call `accept`(v0, v2) @signature `Lh2/d;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L397268.  goto L397278;
  #L39726a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39726c.  call `b`(v2) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L397272.  call `q`(v2) @signature `Ll2/a;.q:(Ljava/lang/Throwable;)V` @kind static;
  #L397278.  return @kind void;
  catch `java.lang.Throwable` @[L39725e..L397268] goto L39726a;
}
