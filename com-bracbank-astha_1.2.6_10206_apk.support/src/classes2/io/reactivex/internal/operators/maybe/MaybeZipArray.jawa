record `io.reactivex.internal.operators.maybe.MaybeZipArray` @kind class @AccessFlag PUBLIC_FINAL extends `b2.i` @kind class {
  `b2.m`[] `io.reactivex.internal.operators.maybe.MaybeZipArray.a` @AccessFlag FINAL;
  `h2.e` `io.reactivex.internal.operators.maybe.MaybeZipArray.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeZipArray` v0 @kind this, `b2.m`[] v1 @kind object, `h2.e` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeZipArray;.<init>:([Lb2/m;Lh2/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L399108.  call `<init>`(v0) @signature `Lb2/i;.<init>:()V` @kind direct;
  #L39910e.  v0.`io.reactivex.internal.operators.maybe.MaybeZipArray.a` @type ^`b2.m`[] := v1 @kind object;
  #L399112.  v0.`io.reactivex.internal.operators.maybe.MaybeZipArray.b` @type ^`h2.e` := v2 @kind object;
  #L399116.  return @kind void;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.MaybeZipArray` v5 @kind this, `b2.k` v6 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeZipArray;.u:(Lb2/k;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L399128.  v0:= v5.`io.reactivex.internal.operators.maybe.MaybeZipArray.a` @type ^`b2.m`[] @kind object;
  #L39912c.  v1:= length @variable v0;
  #L39912e.  v2:= 0I;
  #L399130.  v3:= 1I;
  #L399132.  if v1 != v3 then goto L399156;
  #L399136.  v0:= v0[v2] @kind object;
  #L39913a.  v1:= new `io.reactivex.internal.operators.maybe.j$a`;
  #L39913e.  v2:= new `io.reactivex.internal.operators.maybe.MaybeZipArray$a`;
  #L399142.  call `<init>`(v2, v5) @signature `Lio/reactivex/internal/operators/maybe/MaybeZipArray$a;.<init>:(Lio/reactivex/internal/operators/maybe/MaybeZipArray;)V` @kind direct;
  #L399148.  call `<init>`(v1, v6, v2) @signature `Lio/reactivex/internal/operators/maybe/j$a;.<init>:(Lb2/k;Lh2/e;)V` @kind direct;
  #L39914e.  call `a`(v0, v1) @signature `Lb2/m;.a:(Lb2/k;)V` @kind interface;
  #L399154.  return @kind void;
  #L399156.  v3:= new `io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator`;
  #L39915a.  v4:= v5.`io.reactivex.internal.operators.maybe.MaybeZipArray.b` @type ^`h2.e` @kind object;
  #L39915e.  call `<init>`(v3, v6, v1, v4) @signature `Lio/reactivex/internal/operators/maybe/MaybeZipArray$ZipCoordinator;.<init>:(Lb2/k;ILh2/e;)V` @kind direct;
  #L399164.  call `b`(v6, v3) @signature `Lb2/k;.b:(Le2/b;)V` @kind interface;
  #L39916a.  if v2 >= v1 then goto L3991ae;
  #L39916e.  call temp:= `d`(v3) @signature `Lio/reactivex/internal/operators/maybe/MaybeZipArray$ZipCoordinator;.d:()Z` @kind virtual;
  #L399174.  v6:= temp;
  #L399176.  if v6 == 0 then goto L39917c;
  #L39917a.  return @kind void;
  #L39917c.  v6:= v0[v2] @kind object;
  #L399180.  if v6 != 0 then goto L39919a;
  #L399184.  v6:= new `java.lang.NullPointerException`;
  #L399188.  v0:= "One of the sources is null" @kind object;
  #L39918c.  call `<init>`(v6, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L399192.  call `c`(v3, v6, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeZipArray$ZipCoordinator;.c:(Ljava/lang/Throwable;I)V` @kind virtual;
  #L399198.  return @kind void;
  #L39919a.  v4:= v3.`io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator.observers` @type ^`io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver`[] @kind object;
  #L39919e.  v4:= v4[v2] @kind object;
  #L3991a2.  call `a`(v6, v4) @signature `Lb2/m;.a:(Lb2/k;)V` @kind interface;
  #L3991a8.  v2:= v2 + 1;
  #L3991ac.  goto L39916a;
  #L3991ae.  return @kind void;
}
