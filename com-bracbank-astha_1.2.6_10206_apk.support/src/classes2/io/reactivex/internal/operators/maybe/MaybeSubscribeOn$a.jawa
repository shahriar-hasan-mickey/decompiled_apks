record `io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `b2.k` `io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a.a` @AccessFlag FINAL;
  `b2.m` `io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a` v0 @kind this, `b2.k` v1 @kind object, `b2.m` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn$a;.<init>:(Lb2/k;Lb2/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3989a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3989aa.  v0.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a.a` @type ^`b2.k` := v1 @kind object;
  #L3989ae.  v0.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a.b` @type ^`b2.m` := v2 @kind object;
  #L3989b2.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3989c4.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a.b` @type ^`b2.m` @kind object;
  #L3989c8.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn$a.a` @type ^`b2.k` @kind object;
  #L3989cc.  call `a`(v0, v1) @signature `Lb2/m;.a:(Lb2/k;)V` @kind interface;
  #L3989d2.  return @kind void;
}
