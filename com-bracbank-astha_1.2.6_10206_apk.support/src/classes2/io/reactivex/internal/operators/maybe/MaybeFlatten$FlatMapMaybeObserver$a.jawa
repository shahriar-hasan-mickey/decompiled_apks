record `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a` @kind class @AccessFlag FINAL extends `b2.k` @kind interface {
  `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a` v0 @kind this, `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver$a;.<init>:(Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39799c.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` := v1 @kind object;
  #L3979a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3979a6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3979d8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` @kind object;
  #L3979dc.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.actual` @type ^`b2.k` @kind object;
  #L3979e0.  call `a`(v0, v2) @signature `Lb2/k;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L3979e6.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a` v1 @kind this, `e2.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver$a;.b:(Le2/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3979f8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` @kind object;
  #L3979fc.  call temp:= `h`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.h:(Ljava/util/concurrent/atomic/AtomicReference;Le2/b;)Z` @kind static;
  #L397a02.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3979b8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` @kind object;
  #L3979bc.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.actual` @type ^`b2.k` @kind object;
  #L3979c0.  call `onComplete`(v0) @signature `Lb2/k;.onComplete:()V` @kind interface;
  #L3979c6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397a14.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` @kind object;
  #L397a18.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.actual` @type ^`b2.k` @kind object;
  #L397a1c.  call `onSuccess`(v0, v2) @signature `Lb2/k;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L397a22.  return @kind void;
}
