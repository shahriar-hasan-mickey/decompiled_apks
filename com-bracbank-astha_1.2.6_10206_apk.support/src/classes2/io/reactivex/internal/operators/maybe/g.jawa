record `io.reactivex.internal.operators.maybe.g` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.a` @kind class {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.g` v0 @kind this, `b2.m` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/g;.<init>:(Lb2/m;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L397ff4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lb2/m;)V` @kind direct;
  #L397ffa.  return @kind void;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.g` v2 @kind this, `b2.k` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/g;.u:(Lb2/k;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L39800c.  v0:= v2.`io.reactivex.internal.operators.maybe.a.a` @type ^`b2.m` @kind object;
  #L398010.  v1:= new `io.reactivex.internal.operators.maybe.g$a`;
  #L398014.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/maybe/g$a;.<init>:(Lb2/k;)V` @kind direct;
  #L39801a.  call `a`(v0, v1) @signature `Lb2/m;.a:(Lb2/k;)V` @kind interface;
  #L398020.  return @kind void;
}
