record `io.reactivex.internal.operators.maybe.d` @kind class @AccessFlag PUBLIC_FINAL extends `b2.i` @kind class {
  `b2.t` `io.reactivex.internal.operators.maybe.d.a` @AccessFlag FINAL;
  `h2.g` `io.reactivex.internal.operators.maybe.d.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.d` v0 @kind this, `b2.t` v1 @kind object, `h2.g` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/d;.<init>:(Lb2/t;Lh2/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3977ac.  call `<init>`(v0) @signature `Lb2/i;.<init>:()V` @kind direct;
  #L3977b2.  v0.`io.reactivex.internal.operators.maybe.d.a` @type ^`b2.t` := v1 @kind object;
  #L3977b6.  v0.`io.reactivex.internal.operators.maybe.d.b` @type ^`h2.g` := v2 @kind object;
  #L3977ba.  return @kind void;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.d` v3 @kind this, `b2.k` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/d;.u:(Lb2/k;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L3977cc.  v0:= v3.`io.reactivex.internal.operators.maybe.d.a` @type ^`b2.t` @kind object;
  #L3977d0.  v1:= new `io.reactivex.internal.operators.maybe.d$a`;
  #L3977d4.  v2:= v3.`io.reactivex.internal.operators.maybe.d.b` @type ^`h2.g` @kind object;
  #L3977d8.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/d$a;.<init>:(Lb2/k;Lh2/g;)V` @kind direct;
  #L3977de.  call `c`(v0, v1) @signature `Lb2/t;.c:(Lb2/s;)V` @kind interface;
  #L3977e4.  return @kind void;
}
