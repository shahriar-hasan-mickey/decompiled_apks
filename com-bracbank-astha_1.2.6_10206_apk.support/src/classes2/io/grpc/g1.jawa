record `io.grpc.g1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.Executor` @kind interface {
  `java.lang.Thread$UncaughtExceptionHandler` `io.grpc.g1.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Queue` `io.grpc.g1.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.grpc.g1.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.g1` v1 @kind this, `java.lang.Thread$UncaughtExceptionHandler` v2 @kind object) @signature `Lio/grpc/g1;.<init>:(Ljava/lang/Thread$UncaughtExceptionHandler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3652cc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3652d2.  v0:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L3652d6.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L3652dc.  v1.`io.grpc.g1.b` @type ^`java.util.Queue` := v0 @kind object;
  #L3652e0.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L3652e4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3652ea.  v1.`io.grpc.g1.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L3652ee.  v0:= "uncaughtExceptionHandler" @kind object;
  #L3652f2.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3652f8.  v2:= temp @kind object;
  #L3652fa.  v2:= (`java.lang.Thread$UncaughtExceptionHandler`) v2 @kind object;
  #L3652fe.  v1.`io.grpc.g1.a` @type ^`java.lang.Thread$UncaughtExceptionHandler` := v2 @kind object;
  #L365302.  return @kind void;
}
procedure `void` `a`(`io.grpc.g1` v4 @kind this) @signature `Lio/grpc/g1;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L365314.  v0:= v4.`io.grpc.g1.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L365318.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L36531e.  v1:= temp @kind object;
  #L365320.  v2:= 0I;
  #L365322.  call temp:= `compareAndSet`(v0, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L365328.  v0:= temp;
  #L36532a.  if v0 != 0 then goto L365330;
  #L36532e.  return @kind void;
  #L365330.  v0:= v4.`io.grpc.g1.b` @type ^`java.util.Queue` @kind object;
  #L365334.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L36533a.  v0:= temp @kind object;
  #L36533c.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L365340.  if v0 == 0 then goto L365362;
  #L365344.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L36534a.  goto L365330;
  #L36534c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36534e.  v1:= v4.`io.grpc.g1.a` @type ^`java.lang.Thread$UncaughtExceptionHandler` @kind object;
  #L365352.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L365358.  v3:= temp @kind object;
  #L36535a.  call `uncaughtException`(v1, v3, v0) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L365360.  goto L365330;
  #L365362.  v0:= v4.`io.grpc.g1.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L365366.  call `set`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L36536c.  v0:= v4.`io.grpc.g1.b` @type ^`java.util.Queue` @kind object;
  #L365370.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L365376.  v0:= temp;
  #L365378.  if v0 == 0 then goto L365314;
  #L36537c.  return @kind void;
  #L36537e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L365380.  v1:= v4.`io.grpc.g1.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L365384.  call `set`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L36538a.  throw v0;
  catch `java.lang.Throwable` @[L365330..L365340] goto L36537e;
  catch `java.lang.Throwable` @[L365344..L36534a] goto L36534c;
  catch `java.lang.Throwable` @[L36534e..L365360] goto L36537e;
}
procedure `void` `b`(`io.grpc.g1` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lio/grpc/g1;.b:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3653dc.  v0:= v2.`io.grpc.g1.b` @type ^`java.util.Queue` @kind object;
  #L3653e0.  v1:= "runnable is null" @kind object;
  #L3653e4.  call temp:= `checkNotNull`(v3, v1) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3653ea.  v3:= temp @kind object;
  #L3653ec.  v3:= (`java.lang.Runnable`) v3 @kind object;
  #L3653f0.  call temp:= `add`(v0, v3) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3653f6.  return @kind void;
}
procedure `io.grpc.g1$d` `c`(`io.grpc.g1` v2 @kind this, `java.lang.Runnable` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `java.util.concurrent.ScheduledExecutorService` v7 @kind object) @signature `Lio/grpc/g1;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/g1$d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L365238.  v0:= new `io.grpc.g1$c`;
  #L36523c.  call `<init>`(v0, v3) @signature `Lio/grpc/g1$c;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L365242.  v1:= new `io.grpc.g1$a`;
  #L365246.  call `<init>`(v1, v2, v0, v3) @signature `Lio/grpc/g1$a;.<init>:(Lio/grpc/g1;Lio/grpc/g1$c;Ljava/lang/Runnable;)V` @kind direct;
  #L36524c.  call temp:= `schedule`(v7, v1, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L365252.  v3:= temp @kind object;
  #L365254.  v4:= new `io.grpc.g1$d`;
  #L365258.  v5:= 0I;
  #L36525a.  call `<init>`(v4, v0, v3, v5) @signature `Lio/grpc/g1$d;.<init>:(Lio/grpc/g1$c;Ljava/util/concurrent/ScheduledFuture;Lio/grpc/g1$a;)V` @kind direct;
  #L365260.  return v4 @kind object;
}
procedure `io.grpc.g1$d` `d`(`io.grpc.g1` v14 @kind this, `java.lang.Runnable` v15 @kind object, `long` v16 , `long` v18 , `java.util.concurrent.TimeUnit` v20 @kind object, `java.util.concurrent.ScheduledExecutorService` v21 @kind object) @signature `Lio/grpc/g1;.d:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/g1$d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L365274.  v6:= new `io.grpc.g1$c`;
  #L365278.  v3:= v15 @kind object;
  #L36527a.  call `<init>`(v6, v15) @signature `Lio/grpc/g1$c;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L365280.  v8:= new `io.grpc.g1$b`;
  #L365284.  v0:= v8 @kind object;
  #L365286.  v1:= v14 @kind object;
  #L365288.  v2:= v6 @kind object;
  #L36528a.  v4:= v18 @kind wide;
  #L36528e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/grpc/g1$b;.<init>:(Lio/grpc/g1;Lio/grpc/g1$c;Ljava/lang/Runnable;J)V` @kind direct;
  #L365294.  v7:= v21 @kind object;
  #L365298.  v9:= v16 @kind wide;
  #L36529c.  v11:= v18 @kind wide;
  #L3652a0.  v13:= v20 @kind object;
  #L3652a4.  call temp:= `scheduleWithFixedDelay`(v7, v8, v9, v11, v13) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L3652aa.  v0:= temp @kind object;
  #L3652ac.  v1:= new `io.grpc.g1$d`;
  #L3652b0.  v2:= 0I;
  #L3652b2.  call `<init>`(v1, v6, v0, v2) @signature `Lio/grpc/g1$d;.<init>:(Lio/grpc/g1$c;Ljava/util/concurrent/ScheduledFuture;Lio/grpc/g1$a;)V` @kind direct;
  #L3652b8.  return v1 @kind object;
}
procedure `void` `e`(`io.grpc.g1` v2 @kind this) @signature `Lio/grpc/g1;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L365408.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L36540e.  v0:= temp @kind object;
  #L365410.  v1:= v2.`io.grpc.g1.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L365414.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L36541a.  v1:= temp @kind object;
  #L36541c.  if v0 != v1 then goto L365424;
  #L365420.  v0:= 1I;
  #L365422.  goto L365426;
  #L365424.  v0:= 0I;
  #L365426.  v1:= "Not called from the SynchronizationContext" @kind object;
  #L36542a.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L365430.  return @kind void;
}
procedure `void` `execute`(`io.grpc.g1` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/grpc/g1;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3653bc.  call `b`(v0, v1) @signature `Lio/grpc/g1;.b:(Ljava/lang/Runnable;)V` @kind virtual;
  #L3653c2.  call `a`(v0) @signature `Lio/grpc/g1;.a:()V` @kind virtual;
  #L3653c8.  return @kind void;
}
