record `io.grpc.a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.IdentityHashMap` `io.grpc.a.a` @AccessFlag PRIVATE_FINAL;
}
global `java.util.IdentityHashMap` `@@io.grpc.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.a` `@@io.grpc.a.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L35ce90.  v0:= new `java.util.IdentityHashMap`;
  #L35ce94.  call `<init>`(v0) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L35ce9a.  `@@io.grpc.a.b` @type ^`java.util.IdentityHashMap` := v0 @kind object;
  #L35ce9e.  v1:= new `io.grpc.a`;
  #L35cea2.  call `<init>`(v1, v0) @signature `Lio/grpc/a;.<init>:(Ljava/util/IdentityHashMap;)V` @kind direct;
  #L35cea8.  `@@io.grpc.a.c` @type ^`io.grpc.a` := v1 @kind object;
  #L35ceac.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.a` v0 @kind this, `java.util.IdentityHashMap` v1 @kind object) @signature `Lio/grpc/a;.<init>:(Ljava/util/IdentityHashMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L35cec0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35cec6.  v0.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` := v1 @kind object;
  #L35ceca.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.a` v0 @kind this, `java.util.IdentityHashMap` v1 @kind object, `io.grpc.a$a` v2 @kind object) @signature `Lio/grpc/a;.<init>:(Ljava/util/IdentityHashMap;Lio/grpc/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L35cedc.  call `<init>`(v0, v1) @signature `Lio/grpc/a;.<init>:(Ljava/util/IdentityHashMap;)V` @kind direct;
  #L35cee2.  return @kind void;
}
procedure `java.util.IdentityHashMap` `a`(`io.grpc.a` v0 @kind object) @signature `Lio/grpc/a;.a:(Lio/grpc/a;)Ljava/util/IdentityHashMap;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L35ce78.  v0:= v0.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` @kind object;
  #L35ce7c.  return v0 @kind object;
}
procedure `io.grpc.a$b` `c`() @signature `Lio/grpc/a;.c:()Lio/grpc/a$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35cdf4.  v0:= new `io.grpc.a$b`;
  #L35cdf8.  v1:= `@@io.grpc.a.c` @type ^`io.grpc.a` @kind object;
  #L35cdfc.  v2:= 0I;
  #L35cdfe.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/a$b;.<init>:(Lio/grpc/a;Lio/grpc/a$a;)V` @kind direct;
  #L35ce04.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`io.grpc.a` v1 @kind this, `io.grpc.a$c` v2 @kind object) @signature `Lio/grpc/a;.b:(Lio/grpc/a$c;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35ce38.  v0:= v1.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` @kind object;
  #L35ce3c.  call temp:= `get`(v0, v2) @signature `Ljava/util/IdentityHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L35ce42.  v2:= temp @kind object;
  #L35ce44.  return v2 @kind object;
}
procedure `io.grpc.a$b` `d`(`io.grpc.a` v2 @kind this) @signature `Lio/grpc/a;.d:()Lio/grpc/a$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35ce18.  v0:= new `io.grpc.a$b`;
  #L35ce1c.  v1:= 0I;
  #L35ce1e.  call `<init>`(v0, v2, v1) @signature `Lio/grpc/a$b;.<init>:(Lio/grpc/a;Lio/grpc/a$a;)V` @kind direct;
  #L35ce24.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.grpc.a` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/grpc/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35ccbc.  v0:= 1I;
  #L35ccbe.  if v6 != v7 then goto L35ccc4;
  #L35ccc2.  return v0;
  #L35ccc4.  v1:= 0I;
  #L35ccc6.  if v7 == 0 then goto L35cd70;
  #L35ccca.  v2:= constclass @type ^`io.grpc.a` @kind object;
  #L35ccce.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L35ccd4.  v3:= temp @kind object;
  #L35ccd6.  if v2 == v3 then goto L35ccdc;
  #L35ccda.  goto L35cd70;
  #L35ccdc.  v7:= (`io.grpc.a`) v7 @kind object;
  #L35cce0.  v2:= v6.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` @kind object;
  #L35cce4.  call temp:= `size`(v2) @signature `Ljava/util/IdentityHashMap;.size:()I` @kind virtual;
  #L35ccea.  v2:= temp;
  #L35ccec.  v3:= v7.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` @kind object;
  #L35ccf0.  call temp:= `size`(v3) @signature `Ljava/util/IdentityHashMap;.size:()I` @kind virtual;
  #L35ccf6.  v3:= temp;
  #L35ccf8.  if v2 == v3 then goto L35ccfe;
  #L35ccfc.  return v1;
  #L35ccfe.  v2:= v6.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` @kind object;
  #L35cd02.  call temp:= `entrySet`(v2) @signature `Ljava/util/IdentityHashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L35cd08.  v2:= temp @kind object;
  #L35cd0a.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L35cd10.  v2:= temp @kind object;
  #L35cd12.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L35cd18.  v3:= temp;
  #L35cd1a.  if v3 == 0 then goto L35cd6e;
  #L35cd1e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L35cd24.  v3:= temp @kind object;
  #L35cd26.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L35cd2a.  v4:= v7.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` @kind object;
  #L35cd2e.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L35cd34.  v5:= temp @kind object;
  #L35cd36.  call temp:= `containsKey`(v4, v5) @signature `Ljava/util/IdentityHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L35cd3c.  v4:= temp;
  #L35cd3e.  if v4 != 0 then goto L35cd44;
  #L35cd42.  return v1;
  #L35cd44.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L35cd4a.  v4:= temp @kind object;
  #L35cd4c.  v5:= v7.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` @kind object;
  #L35cd50.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L35cd56.  v3:= temp @kind object;
  #L35cd58.  call temp:= `get`(v5, v3) @signature `Ljava/util/IdentityHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L35cd5e.  v3:= temp @kind object;
  #L35cd60.  call temp:= `equal`(v4, v3) @signature `Lcom/google/common/base/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L35cd66.  v3:= temp;
  #L35cd68.  if v3 != 0 then goto L35cd12;
  #L35cd6c.  return v1;
  #L35cd6e.  return v0;
  #L35cd70.  return v1;
}
procedure `int` `hashCode`(`io.grpc.a` v6 @kind this) @signature `Lio/grpc/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35cd84.  v0:= v6.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` @kind object;
  #L35cd88.  call temp:= `entrySet`(v0) @signature `Ljava/util/IdentityHashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L35cd8e.  v0:= temp @kind object;
  #L35cd90.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L35cd96.  v0:= temp @kind object;
  #L35cd98.  v1:= 0I;
  #L35cd9a.  v2:= 0I;
  #L35cd9c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L35cda2.  v3:= temp;
  #L35cda4.  if v3 == 0 then goto L35cde0;
  #L35cda8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L35cdae.  v3:= temp @kind object;
  #L35cdb0.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L35cdb4.  v4:= 2I;
  #L35cdb6.  v4:= new `java.lang.Object`[v4];
  #L35cdba.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L35cdc0.  v5:= temp @kind object;
  #L35cdc2.  v4[v1]:= v5 @kind object;
  #L35cdc6.  v5:= 1I;
  #L35cdc8.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L35cdce.  v3:= temp @kind object;
  #L35cdd0.  v4[v5]:= v3 @kind object;
  #L35cdd4.  call temp:= `hashCode`(v4) @signature `Lcom/google/common/base/Objects;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L35cdda.  v3:= temp;
  #L35cddc.  v2:= v2 + v3 @kind int;
  #L35cdde.  goto L35cd9c;
  #L35cde0.  return v2;
}
procedure `java.lang.String` `toString`(`io.grpc.a` v1 @kind this) @signature `Lio/grpc/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35ce58.  v0:= v1.`io.grpc.a.a` @type ^`java.util.IdentityHashMap` @kind object;
  #L35ce5c.  call temp:= `toString`(v0) @signature `Ljava/util/IdentityHashMap;.toString:()Ljava/lang/String;` @kind virtual;
  #L35ce62.  v0:= temp @kind object;
  #L35ce64.  return v0 @kind object;
}
