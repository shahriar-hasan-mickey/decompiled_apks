record `io.grpc.p` @kind class @AccessFlag PUBLIC {
  `io.grpc.y0` `io.grpc.p.a` @AccessFlag FINAL;
  `int` `io.grpc.p.b` @AccessFlag FINAL;
}
global `java.util.logging.Logger` `@@io.grpc.p.c` @AccessFlag STATIC_FINAL;
global `io.grpc.p` `@@io.grpc.p.d` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L35e3bc.  v0:= constclass @type ^`io.grpc.p` @kind object;
  #L35e3c0.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L35e3c6.  v0:= temp @kind object;
  #L35e3c8.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L35e3ce.  v0:= temp @kind object;
  #L35e3d0.  `@@io.grpc.p.c` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L35e3d4.  v0:= new `io.grpc.p`;
  #L35e3d8.  call `<init>`(v0) @signature `Lio/grpc/p;.<init>:()V` @kind direct;
  #L35e3de.  `@@io.grpc.p.d` @type ^`io.grpc.p` := v0 @kind object;
  #L35e3e2.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.p` v1 @kind this) @signature `Lio/grpc/p;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L35e3f4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35e3fa.  v0:= 0I;
  #L35e3fc.  v1.`io.grpc.p.a` @type ^`io.grpc.y0` := v0 @kind object;
  #L35e400.  v0:= 0I;
  #L35e402.  v1.`io.grpc.p.b` @type ^`int` := v0;
  #L35e406.  call `k`(v0) @signature `Lio/grpc/p;.k:(I)V` @kind static;
  #L35e40c.  return @kind void;
}
procedure `java.lang.Object` `d`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L35e2bc.  if v0 == 0 then goto L35e2c2;
  #L35e2c0.  return v0 @kind object;
  #L35e2c2.  v0:= new `java.lang.NullPointerException`;
  #L35e2c6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35e2cc.  v1:= temp @kind object;
  #L35e2ce.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35e2d4.  throw v0;
}
procedure `io.grpc.p` `e`() @signature `Lio/grpc/p;.e:()Lio/grpc/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35e264.  call temp:= `j`() @signature `Lio/grpc/p;.j:()Lio/grpc/p$c;` @kind static;
  #L35e26a.  v0:= temp @kind object;
  #L35e26c.  call temp:= `b`(v0) @signature `Lio/grpc/p$c;.b:()Lio/grpc/p;` @kind virtual;
  #L35e272.  v0:= temp @kind object;
  #L35e274.  if v0 != 0 then goto L35e27c;
  #L35e278.  v0:= `@@io.grpc.p.d` @type ^`io.grpc.p` @kind object;
  #L35e27c.  return v0 @kind object;
}
procedure `io.grpc.p$c` `j`() @signature `Lio/grpc/p;.j:()Lio/grpc/p$c;` @AccessFlag STATIC {
    temp;
    v0;

  #L35e290.  v0:= `@@io.grpc.p$b.a` @type ^`io.grpc.p$c` @kind object;
  #L35e294.  return v0 @kind object;
}
procedure `void` `k`(`int` v3 ) @signature `Lio/grpc/p;.k:(I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35e488.  v0:= 1000I;
  #L35e48c.  if v3 != v0 then goto L35e4ac;
  #L35e490.  v3:= `@@io.grpc.p.c` @type ^`java.util.logging.Logger` @kind object;
  #L35e494.  v0:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L35e498.  v1:= new `java.lang.Exception`;
  #L35e49c.  call `<init>`(v1) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L35e4a2.  v2:= "Context ancestry chain length is abnormally long. This suggests an error in application code. Length exceeded: 1000" @kind object;
  #L35e4a6.  call `log`(v3, v0, v2, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L35e4ac.  return @kind void;
}
procedure `void` `a`(`io.grpc.p` v1 @kind this, `io.grpc.p$a` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lio/grpc/p;.a:(Lio/grpc/p$a;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e420.  v0:= "cancellationListener" @kind object;
  #L35e424.  call temp:= `d`(v2, v0) @signature `Lio/grpc/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L35e42a.  v2:= "executor" @kind object;
  #L35e42e.  call temp:= `d`(v3, v2) @signature `Lio/grpc/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L35e434.  return @kind void;
}
procedure `io.grpc.p` `b`(`io.grpc.p` v1 @kind this) @signature `Lio/grpc/p;.b:()Lio/grpc/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e238.  call temp:= `j`() @signature `Lio/grpc/p;.j:()Lio/grpc/p$c;` @kind static;
  #L35e23e.  v0:= temp @kind object;
  #L35e240.  call temp:= `d`(v0, v1) @signature `Lio/grpc/p$c;.d:(Lio/grpc/p;)Lio/grpc/p;` @kind virtual;
  #L35e246.  v0:= temp @kind object;
  #L35e248.  if v0 != 0 then goto L35e250;
  #L35e24c.  v0:= `@@io.grpc.p.d` @type ^`io.grpc.p` @kind object;
  #L35e250.  return v0 @kind object;
}
procedure `java.lang.Throwable` `c`(`io.grpc.p` v1 @kind this) @signature `Lio/grpc/p;.c:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e2e8.  v0:= 0I;
  #L35e2ea.  return v0 @kind object;
}
procedure `void` `f`(`io.grpc.p` v1 @kind this, `io.grpc.p` v2 @kind object) @signature `Lio/grpc/p;.f:(Lio/grpc/p;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e448.  v0:= "toAttach" @kind object;
  #L35e44c.  call temp:= `d`(v2, v0) @signature `Lio/grpc/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L35e452.  call temp:= `j`() @signature `Lio/grpc/p;.j:()Lio/grpc/p$c;` @kind static;
  #L35e458.  v0:= temp @kind object;
  #L35e45a.  call `c`(v0, v1, v2) @signature `Lio/grpc/p$c;.c:(Lio/grpc/p;Lio/grpc/p;)V` @kind virtual;
  #L35e460.  return @kind void;
}
procedure `io.grpc.r` `g`(`io.grpc.p` v1 @kind this) @signature `Lio/grpc/p;.g:()Lio/grpc/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e2a8.  v0:= 0I;
  #L35e2aa.  return v0 @kind object;
}
procedure `boolean` `h`(`io.grpc.p` v1 @kind this) @signature `Lio/grpc/p;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e224.  v0:= 0I;
  #L35e226.  return v0;
}
procedure `void` `i`(`io.grpc.p` v0 @kind this, `io.grpc.p$a` v1 @kind object) @signature `Lio/grpc/p;.i:(Lio/grpc/p$a;)V` @AccessFlag PUBLIC {
    temp;

  #L35e474.  return @kind void;
}
