record `io.grpc.okhttp.OkHttpFrameLogger` @kind class @AccessFlag  {
  `java.util.logging.Logger` `io.grpc.okhttp.OkHttpFrameLogger.a` @AccessFlag PRIVATE_FINAL;
  `java.util.logging.Level` `io.grpc.okhttp.OkHttpFrameLogger.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.okhttp.OkHttpFrameLogger` v0 @kind this, `java.util.logging.Level` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.<init>:(Ljava/util/logging/Level;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L386b78.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L386b7e.  v2:= temp @kind object;
  #L386b80.  call temp:= `getLogger`(v2) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L386b86.  v2:= temp @kind object;
  #L386b88.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.<init>:(Ljava/util/logging/Level;Ljava/util/logging/Logger;)V` @kind direct;
  #L386b8e.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.okhttp.OkHttpFrameLogger` v1 @kind this, `java.util.logging.Level` v2 @kind object, `java.util.logging.Logger` v3 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.<init>:(Ljava/util/logging/Level;Ljava/util/logging/Logger;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L386ba0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L386ba6.  v0:= "level" @kind object;
  #L386baa.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L386bb0.  v2:= temp @kind object;
  #L386bb2.  v2:= (`java.util.logging.Level`) v2 @kind object;
  #L386bb6.  v1.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` := v2 @kind object;
  #L386bba.  v2:= "logger" @kind object;
  #L386bbe.  call temp:= `checkNotNull`(v3, v2) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L386bc4.  v2:= temp @kind object;
  #L386bc6.  v2:= (`java.util.logging.Logger`) v2 @kind object;
  #L386bca.  v1.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` := v2 @kind object;
  #L386bce.  return @kind void;
}
procedure `boolean` `a`(`io.grpc.okhttp.OkHttpFrameLogger` v2 @kind this) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L386a64.  v0:= v2.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386a68.  v1:= v2.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386a6c.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L386a72.  v0:= temp;
  #L386a74.  return v0;
}
procedure `java.lang.String` `l`(`okio.c` v5 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.l:(Lokio/c;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L386a88.  call temp:= `g0`(v5) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L386a8e.  v0:= temp @kind wide;
  #L386a90.  v2:= 64L;
  #L386a94.  v4:= lcmp(v0, v2);
  #L386a98.  if v4 > 0 then goto L386aae;
  #L386a9c.  call temp:= `h0`(v5) @signature `Lokio/c;.h0:()Lokio/ByteString;` @kind virtual;
  #L386aa2.  v5:= temp @kind object;
  #L386aa4.  call temp:= `i`(v5) @signature `Lokio/ByteString;.i:()Ljava/lang/String;` @kind virtual;
  #L386aaa.  v5:= temp @kind object;
  #L386aac.  return v5 @kind object;
  #L386aae.  call temp:= `g0`(v5) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L386ab4.  v0:= temp @kind wide;
  #L386ab6.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L386abc.  v0:= temp @kind wide;
  #L386abe.  v1:= (`int`) v0 @kind l2i;
  #L386ac0.  v0:= new `java.lang.StringBuilder`;
  #L386ac4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386aca.  call temp:= `i0`(v5, v1) @signature `Lokio/c;.i0:(I)Lokio/ByteString;` @kind virtual;
  #L386ad0.  v5:= temp @kind object;
  #L386ad2.  call temp:= `i`(v5) @signature `Lokio/ByteString;.i:()Ljava/lang/String;` @kind virtual;
  #L386ad8.  v5:= temp @kind object;
  #L386ada.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386ae0.  v5:= "..." @kind object;
  #L386ae4.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386aea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386af0.  v5:= temp @kind object;
  #L386af2.  return v5 @kind object;
}
procedure `java.lang.String` `m`(`w1.g` v6 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.m:(Lw1/g;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L386b04.  v0:= new `java.util.EnumMap`;
  #L386b08.  v1:= constclass @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` @kind object;
  #L386b0c.  call `<init>`(v0, v1) @signature `Ljava/util/EnumMap;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L386b12.  call temp:= `values`() @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.values:()[Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;` @kind static;
  #L386b18.  v1:= temp @kind object;
  #L386b1a.  v2:= length @variable v1;
  #L386b1c.  v3:= 0I;
  #L386b1e.  if v3 >= v2 then goto L386b5e;
  #L386b22.  v4:= v1[v3] @kind object;
  #L386b26.  call temp:= `a`(v4) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.a:()I` @kind virtual;
  #L386b2c.  v5:= temp;
  #L386b2e.  call temp:= `d`(v6, v5) @signature `Lw1/g;.d:(I)Z` @kind virtual;
  #L386b34.  v5:= temp;
  #L386b36.  if v5 == 0 then goto L386b58;
  #L386b3a.  call temp:= `a`(v4) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.a:()I` @kind virtual;
  #L386b40.  v5:= temp;
  #L386b42.  call temp:= `a`(v6, v5) @signature `Lw1/g;.a:(I)I` @kind virtual;
  #L386b48.  v5:= temp;
  #L386b4a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L386b50.  v5:= temp @kind object;
  #L386b52.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/EnumMap;.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L386b58.  v3:= v3 + 1;
  #L386b5c.  goto L386b1e;
  #L386b5e.  call temp:= `toString`(v0) @signature `Ljava/util/EnumMap;.toString:()Ljava/lang/String;` @kind virtual;
  #L386b64.  v6:= temp @kind object;
  #L386b66.  return v6 @kind object;
}
procedure `void` `b`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object, `int` v5 , `okio.c` v6 @kind object, `int` v7 , `boolean` v8 ) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.b:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;ILokio/c;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386be0.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386be6.  v0:= temp;
  #L386be8.  if v0 == 0 then goto L386c5a;
  #L386bec.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386bf0.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386bf4.  v2:= new `java.lang.StringBuilder`;
  #L386bf8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386bfe.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c04.  v4:= " DATA: streamId=" @kind object;
  #L386c08.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c0e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c14.  v4:= " endStream=" @kind object;
  #L386c18.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c1e.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c24.  v4:= " length=" @kind object;
  #L386c28.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c2e.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c34.  v4:= " bytes=" @kind object;
  #L386c38.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c3e.  call temp:= `l`(v6) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.l:(Lokio/c;)Ljava/lang/String;` @kind static;
  #L386c44.  v4:= temp @kind object;
  #L386c46.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c4c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386c52.  v4:= temp @kind object;
  #L386c54.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L386c5a.  return @kind void;
}
procedure `void` `c`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object, `int` v5 , `io.grpc.okhttp.internal.framed.ErrorCode` v6 @kind object, `okio.ByteString` v7 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.c:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;ILio/grpc/okhttp/internal/framed/ErrorCode;Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386c6c.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386c72.  v0:= temp;
  #L386c74.  if v0 == 0 then goto L386d00;
  #L386c78.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386c7c.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386c80.  v2:= new `java.lang.StringBuilder`;
  #L386c84.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386c8a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c90.  v4:= " GO_AWAY: lastStreamId=" @kind object;
  #L386c94.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386c9a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L386ca0.  v4:= " errorCode=" @kind object;
  #L386ca4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386caa.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386cb0.  v4:= " length=" @kind object;
  #L386cb4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386cba.  call temp:= `p`(v7) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L386cc0.  v4:= temp;
  #L386cc2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L386cc8.  v4:= " bytes=" @kind object;
  #L386ccc.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386cd2.  v4:= new `okio.c`;
  #L386cd6.  call `<init>`(v4) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L386cdc.  call temp:= `k0`(v4, v7) @signature `Lokio/c;.k0:(Lokio/ByteString;)Lokio/c;` @kind virtual;
  #L386ce2.  v4:= temp @kind object;
  #L386ce4.  call temp:= `l`(v4) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.l:(Lokio/c;)Ljava/lang/String;` @kind static;
  #L386cea.  v4:= temp @kind object;
  #L386cec.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386cf2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386cf8.  v4:= temp @kind object;
  #L386cfa.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L386d00.  return @kind void;
}
procedure `void` `d`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object, `int` v5 , `java.util.List` v6 @kind object, `boolean` v7 ) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.d:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;ILjava/util/List;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386d14.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386d1a.  v0:= temp;
  #L386d1c.  if v0 == 0 then goto L386d76;
  #L386d20.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386d24.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386d28.  v2:= new `java.lang.StringBuilder`;
  #L386d2c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386d32.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386d38.  v4:= " HEADERS: streamId=" @kind object;
  #L386d3c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386d42.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L386d48.  v4:= " headers=" @kind object;
  #L386d4c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386d52.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386d58.  v4:= " endStream=" @kind object;
  #L386d5c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386d62.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L386d68.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386d6e.  v4:= temp @kind object;
  #L386d70.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L386d76.  return @kind void;
}
procedure `void` `e`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object, `long` v5 ) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.e:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386d88.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386d8e.  v0:= temp;
  #L386d90.  if v0 == 0 then goto L386dca;
  #L386d94.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386d98.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386d9c.  v2:= new `java.lang.StringBuilder`;
  #L386da0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386da6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386dac.  v4:= " PING: ack=false bytes=" @kind object;
  #L386db0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386db6.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L386dbc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386dc2.  v4:= temp @kind object;
  #L386dc4.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L386dca.  return @kind void;
}
procedure `void` `f`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object, `long` v5 ) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.f:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386ddc.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386de2.  v0:= temp;
  #L386de4.  if v0 == 0 then goto L386e1e;
  #L386de8.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386dec.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386df0.  v2:= new `java.lang.StringBuilder`;
  #L386df4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386dfa.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e00.  v4:= " PING: ack=true bytes=" @kind object;
  #L386e04.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e0a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e10.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386e16.  v4:= temp @kind object;
  #L386e18.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L386e1e.  return @kind void;
}
procedure `void` `g`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object, `int` v5 , `int` v6 , `java.util.List` v7 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.g:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;IILjava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386e30.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386e36.  v0:= temp;
  #L386e38.  if v0 == 0 then goto L386e92;
  #L386e3c.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386e40.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386e44.  v2:= new `java.lang.StringBuilder`;
  #L386e48.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386e4e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e54.  v4:= " PUSH_PROMISE: streamId=" @kind object;
  #L386e58.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e5e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e64.  v4:= " promisedStreamId=" @kind object;
  #L386e68.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e6e.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e74.  v4:= " headers=" @kind object;
  #L386e78.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e7e.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386e84.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386e8a.  v4:= temp @kind object;
  #L386e8c.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L386e92.  return @kind void;
}
procedure `void` `h`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object, `int` v5 , `io.grpc.okhttp.internal.framed.ErrorCode` v6 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.h:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;ILio/grpc/okhttp/internal/framed/ErrorCode;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386ea4.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386eaa.  v0:= temp;
  #L386eac.  if v0 == 0 then goto L386ef6;
  #L386eb0.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386eb4.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386eb8.  v2:= new `java.lang.StringBuilder`;
  #L386ebc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386ec2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386ec8.  v4:= " RST_STREAM: streamId=" @kind object;
  #L386ecc.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386ed2.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L386ed8.  v4:= " errorCode=" @kind object;
  #L386edc.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386ee2.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386ee8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386eee.  v4:= temp @kind object;
  #L386ef0.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L386ef6.  return @kind void;
}
procedure `void` `i`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object, `w1.g` v5 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.i:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;Lw1/g;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386f08.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386f0e.  v0:= temp;
  #L386f10.  if v0 == 0 then goto L386f52;
  #L386f14.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386f18.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386f1c.  v2:= new `java.lang.StringBuilder`;
  #L386f20.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386f26.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386f2c.  v4:= " SETTINGS: ack=false settings=" @kind object;
  #L386f30.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386f36.  call temp:= `m`(v5) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.m:(Lw1/g;)Ljava/lang/String;` @kind static;
  #L386f3c.  v4:= temp @kind object;
  #L386f3e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386f44.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386f4a.  v4:= temp @kind object;
  #L386f4c.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L386f52.  return @kind void;
}
procedure `void` `j`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.j:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386f64.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386f6a.  v0:= temp;
  #L386f6c.  if v0 == 0 then goto L386fa0;
  #L386f70.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386f74.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386f78.  v2:= new `java.lang.StringBuilder`;
  #L386f7c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386f82.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386f88.  v4:= " SETTINGS: ack=true" @kind object;
  #L386f8c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386f92.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386f98.  v4:= temp @kind object;
  #L386f9a.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L386fa0.  return @kind void;
}
procedure `void` `k`(`io.grpc.okhttp.OkHttpFrameLogger` v3 @kind this, `io.grpc.okhttp.OkHttpFrameLogger$Direction` v4 @kind object, `int` v5 , `long` v6 ) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.k:(Lio/grpc/okhttp/OkHttpFrameLogger$Direction;IJ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L386fb4.  call temp:= `a`(v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger;.a:()Z` @kind direct;
  #L386fba.  v0:= temp;
  #L386fbc.  if v0 == 0 then goto L387006;
  #L386fc0.  v0:= v3.`io.grpc.okhttp.OkHttpFrameLogger.a` @type ^`java.util.logging.Logger` @kind object;
  #L386fc4.  v1:= v3.`io.grpc.okhttp.OkHttpFrameLogger.b` @type ^`java.util.logging.Level` @kind object;
  #L386fc8.  v2:= new `java.lang.StringBuilder`;
  #L386fcc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386fd2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386fd8.  v4:= " WINDOW_UPDATE: streamId=" @kind object;
  #L386fdc.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386fe2.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L386fe8.  v4:= " windowSizeIncrement=" @kind object;
  #L386fec.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386ff2.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L386ff8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386ffe.  v4:= temp @kind object;
  #L387000.  call `log`(v0, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L387006.  return @kind void;
}
