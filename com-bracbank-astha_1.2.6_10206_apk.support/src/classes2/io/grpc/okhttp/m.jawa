record `io.grpc.okhttp.m` @kind class @AccessFlag  {
  `io.grpc.okhttp.m$d` `io.grpc.okhttp.m.a` @AccessFlag PRIVATE_FINAL;
  `w1.b` `io.grpc.okhttp.m.b` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.okhttp.m.c` @AccessFlag PRIVATE;
  `io.grpc.okhttp.m$c` `io.grpc.okhttp.m.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.okhttp.m` v2 @kind this, `io.grpc.okhttp.m$d` v3 @kind object, `w1.b` v4 @kind object) @signature `Lio/grpc/okhttp/m;.<init>:(Lio/grpc/okhttp/m$d;Lw1/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3882fc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L388302.  v0:= "transport" @kind object;
  #L388306.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38830c.  v3:= temp @kind object;
  #L38830e.  v3:= (`io.grpc.okhttp.m$d`) v3 @kind object;
  #L388312.  v2.`io.grpc.okhttp.m.a` @type ^`io.grpc.okhttp.m$d` := v3 @kind object;
  #L388316.  v3:= "frameWriter" @kind object;
  #L38831a.  call temp:= `checkNotNull`(v4, v3) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L388320.  v3:= temp @kind object;
  #L388322.  v3:= (`w1.b`) v3 @kind object;
  #L388326.  v2.`io.grpc.okhttp.m.b` @type ^`w1.b` := v3 @kind object;
  #L38832a.  v3:= 65535I;
  #L388330.  v2.`io.grpc.okhttp.m.c` @type ^`int` := v3;
  #L388334.  v4:= new `io.grpc.okhttp.m$c`;
  #L388338.  v0:= 0I;
  #L38833a.  v1:= 0I;
  #L38833c.  call `<init>`(v4, v2, v0, v3, v1) @signature `Lio/grpc/okhttp/m$c;.<init>:(Lio/grpc/okhttp/m;IILio/grpc/okhttp/m$b;)V` @kind direct;
  #L388342.  v2.`io.grpc.okhttp.m.d` @type ^`io.grpc.okhttp.m$c` := v4 @kind object;
  #L388346.  return @kind void;
}
procedure `io.grpc.okhttp.m$c` `a`(`io.grpc.okhttp.m` v0 @kind object) @signature `Lio/grpc/okhttp/m;.a:(Lio/grpc/okhttp/m;)Lio/grpc/okhttp/m$c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3882b4.  v0:= v0.`io.grpc.okhttp.m.d` @type ^`io.grpc.okhttp.m$c` @kind object;
  #L3882b8.  return v0 @kind object;
}
procedure `w1.b` `b`(`io.grpc.okhttp.m` v0 @kind object) @signature `Lio/grpc/okhttp/m;.b:(Lio/grpc/okhttp/m;)Lw1/b;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3884fc.  v0:= v0.`io.grpc.okhttp.m.b` @type ^`w1.b` @kind object;
  #L388500.  return v0 @kind object;
}
procedure `io.grpc.okhttp.m$c` `c`(`io.grpc.okhttp.m` v3 @kind this, `io.grpc.okhttp.m$b` v4 @kind object, `int` v5 ) @signature `Lio/grpc/okhttp/m;.c:(Lio/grpc/okhttp/m$b;I)Lio/grpc/okhttp/m$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3882cc.  v0:= new `io.grpc.okhttp.m$c`;
  #L3882d0.  v1:= v3.`io.grpc.okhttp.m.c` @type ^`int`;
  #L3882d4.  v2:= "stream" @kind object;
  #L3882d8.  call temp:= `checkNotNull`(v4, v2) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3882de.  v4:= temp @kind object;
  #L3882e0.  v4:= (`io.grpc.okhttp.m$b`) v4 @kind object;
  #L3882e4.  call `<init>`(v0, v3, v5, v1, v4) @signature `Lio/grpc/okhttp/m$c;.<init>:(Lio/grpc/okhttp/m;IILio/grpc/okhttp/m$b;)V` @kind direct;
  #L3882ea.  return v0 @kind object;
}
procedure `void` `d`(`io.grpc.okhttp.m` v4 @kind this, `boolean` v5 , `io.grpc.okhttp.m$c` v6 @kind object, `okio.c` v7 @kind object, `boolean` v8 ) @signature `Lio/grpc/okhttp/m;.d:(ZLio/grpc/okhttp/m$c;Lokio/c;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L388358.  v0:= "source" @kind object;
  #L38835c.  call temp:= `checkNotNull`(v7, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L388362.  call temp:= `j`(v6) @signature `Lio/grpc/okhttp/m$c;.j:()I` @kind virtual;
  #L388368.  v0:= temp;
  #L38836a.  call temp:= `e`(v6) @signature `Lio/grpc/okhttp/m$c;.e:()Z` @kind virtual;
  #L388370.  v1:= temp;
  #L388372.  call temp:= `g0`(v7) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L388378.  v2:= temp @kind wide;
  #L38837a.  v3:= (`int`) v2 @kind l2i;
  #L38837c.  if v1 != 0 then goto L38838c;
  #L388380.  if v0 < v3 then goto L38838c;
  #L388384.  call `k`(v6, v7, v3, v5) @signature `Lio/grpc/okhttp/m$c;.k:(Lokio/c;IZ)V` @kind virtual;
  #L38838a.  goto L3883ac;
  #L38838c.  if v1 != 0 then goto L38839c;
  #L388390.  if v0 <= 0 then goto L38839c;
  #L388394.  v1:= 0I;
  #L388396.  call `k`(v6, v7, v0, v1) @signature `Lio/grpc/okhttp/m$c;.k:(Lokio/c;IZ)V` @kind virtual;
  #L38839c.  call temp:= `g0`(v7) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L3883a2.  v0:= temp @kind wide;
  #L3883a4.  v1:= (`int`) v0 @kind l2i;
  #L3883a6.  call `d`(v6, v7, v1, v5) @signature `Lio/grpc/okhttp/m$c;.d:(Lokio/c;IZ)V` @kind virtual;
  #L3883ac.  if v8 == 0 then goto L3883b6;
  #L3883b0.  call `e`(v4) @signature `Lio/grpc/okhttp/m;.e:()V` @kind virtual;
  #L3883b6.  return @kind void;
}
procedure `void` `e`(`io.grpc.okhttp.m` v2 @kind this) @signature `Lio/grpc/okhttp/m;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3883c8.  v0:= v2.`io.grpc.okhttp.m.b` @type ^`w1.b` @kind object;
  #L3883cc.  call `flush`(v0) @signature `Lw1/b;.flush:()V` @kind interface;
  #L3883d2.  return @kind void;
  #L3883d4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3883d6.  v1:= new `java.lang.RuntimeException`;
  #L3883da.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3883e0.  throw v1;
  catch `java.io.IOException` @[L3883c8..L3883d2] goto L3883d4;
}
procedure `boolean` `f`(`io.grpc.okhttp.m` v5 @kind this, `int` v6 ) @signature `Lio/grpc/okhttp/m;.f:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3881d8.  if v6 < 0 then goto L388216;
  #L3881dc.  v0:= v5.`io.grpc.okhttp.m.c` @type ^`int`;
  #L3881e0.  v0:= v6 - v0 @kind int;
  #L3881e4.  v5.`io.grpc.okhttp.m.c` @type ^`int` := v6;
  #L3881e8.  v6:= v5.`io.grpc.okhttp.m.a` @type ^`io.grpc.okhttp.m$d` @kind object;
  #L3881ec.  call temp:= `a`(v6) @signature `Lio/grpc/okhttp/m$d;.a:()[Lio/grpc/okhttp/m$c;` @kind interface;
  #L3881f2.  v6:= temp @kind object;
  #L3881f4.  v1:= length @variable v6;
  #L3881f6.  v2:= 0I;
  #L3881f8.  v3:= 0I;
  #L3881fa.  if v3 >= v1 then goto L38820e;
  #L3881fe.  v4:= v6[v3] @kind object;
  #L388202.  call temp:= `f`(v4, v0) @signature `Lio/grpc/okhttp/m$c;.f:(I)I` @kind virtual;
  #L388208.  v3:= v3 + 1;
  #L38820c.  goto L3881fa;
  #L38820e.  if v0 <= 0 then goto L388214;
  #L388212.  v2:= 1I;
  #L388214.  return v2;
  #L388216.  v0:= new `java.lang.IllegalArgumentException`;
  #L38821a.  v1:= new `java.lang.StringBuilder`;
  #L38821e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L388224.  v2:= "Invalid initial window size: " @kind object;
  #L388228.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38822e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L388234.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38823a.  v6:= temp @kind object;
  #L38823c.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L388242.  throw v0;
}
procedure `int` `g`(`io.grpc.okhttp.m` v2 @kind this, `io.grpc.okhttp.m$c` v3 @kind object, `int` v4 ) @signature `Lio/grpc/okhttp/m;.g:(Lio/grpc/okhttp/m$c;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L388254.  if v3 != 0 then goto L38826c;
  #L388258.  v3:= v2.`io.grpc.okhttp.m.d` @type ^`io.grpc.okhttp.m$c` @kind object;
  #L38825c.  call temp:= `f`(v3, v4) @signature `Lio/grpc/okhttp/m$c;.f:(I)I` @kind virtual;
  #L388262.  v3:= temp;
  #L388264.  call `h`(v2) @signature `Lio/grpc/okhttp/m;.h:()V` @kind virtual;
  #L38826a.  goto L3882a2;
  #L38826c.  call temp:= `f`(v3, v4) @signature `Lio/grpc/okhttp/m$c;.f:(I)I` @kind virtual;
  #L388272.  v4:= temp;
  #L388274.  v0:= new `io.grpc.okhttp.m$e`;
  #L388278.  v1:= 0I;
  #L38827a.  call `<init>`(v0, v1) @signature `Lio/grpc/okhttp/m$e;.<init>:(Lio/grpc/okhttp/m$a;)V` @kind direct;
  #L388280.  call temp:= `j`(v3) @signature `Lio/grpc/okhttp/m$c;.j:()I` @kind virtual;
  #L388286.  v1:= temp;
  #L388288.  call temp:= `l`(v3, v1, v0) @signature `Lio/grpc/okhttp/m$c;.l:(ILio/grpc/okhttp/m$e;)I` @kind virtual;
  #L38828e.  call temp:= `a`(v0) @signature `Lio/grpc/okhttp/m$e;.a:()Z` @kind virtual;
  #L388294.  v3:= temp;
  #L388296.  if v3 == 0 then goto L3882a0;
  #L38829a.  call `e`(v2) @signature `Lio/grpc/okhttp/m;.e:()V` @kind virtual;
  #L3882a0.  v3:= v4;
  #L3882a2.  return v3;
}
procedure `void` `h`(`io.grpc.okhttp.m` v8 @kind this) @signature `Lio/grpc/okhttp/m;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L388404.  v0:= v8.`io.grpc.okhttp.m.a` @type ^`io.grpc.okhttp.m$d` @kind object;
  #L388408.  call temp:= `a`(v0) @signature `Lio/grpc/okhttp/m$d;.a:()[Lio/grpc/okhttp/m$c;` @kind interface;
  #L38840e.  v0:= temp @kind object;
  #L388410.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L388416.  v1:= temp @kind object;
  #L388418.  call `shuffle`(v1) @signature `Ljava/util/Collections;.shuffle:(Ljava/util/List;)V` @kind static;
  #L38841e.  v1:= v8.`io.grpc.okhttp.m.d` @type ^`io.grpc.okhttp.m$c` @kind object;
  #L388422.  call temp:= `i`(v1) @signature `Lio/grpc/okhttp/m$c;.i:()I` @kind virtual;
  #L388428.  v1:= temp;
  #L38842a.  v2:= length @variable v0;
  #L38842c.  v3:= 0I;
  #L38842e.  if v2 <= 0 then goto L38849a;
  #L388432.  if v1 <= 0 then goto L38849a;
  #L388436.  v4:= (`float`) v1 @kind i2f;
  #L388438.  v5:= (`float`) v2 @kind i2f;
  #L38843a.  v4:= v4 / v5 @kind float;
  #L38843c.  v4:= (`double`) v4 @kind f2d;
  #L38843e.  call temp:= `ceil`(v4) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L388444.  v4:= temp @kind wide;
  #L388446.  v4:= (`int`) v4 @kind d2i;
  #L388448.  v5:= 0I;
  #L38844a.  if v5 >= v2 then goto L388496;
  #L38844e.  if v1 <= 0 then goto L388496;
  #L388452.  v6:= v0[v5] @kind object;
  #L388456.  call temp:= `h`(v6) @signature `Lio/grpc/okhttp/m$c;.h:()I` @kind virtual;
  #L38845c.  v7:= temp;
  #L38845e.  call temp:= `min`(v7, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L388464.  v7:= temp;
  #L388466.  call temp:= `min`(v1, v7) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L38846c.  v7:= temp;
  #L38846e.  if v7 <= 0 then goto L38847a;
  #L388472.  call `a`(v6, v7) @signature `Lio/grpc/okhttp/m$c;.a:(I)V` @kind virtual;
  #L388478.  v1:= v1 - v7 @kind int;
  #L38847a.  call temp:= `h`(v6) @signature `Lio/grpc/okhttp/m$c;.h:()I` @kind virtual;
  #L388480.  v7:= temp;
  #L388482.  if v7 <= 0 then goto L388490;
  #L388486.  v7:= v3 + 1;
  #L38848a.  v0[v3]:= v6 @kind object;
  #L38848e.  v3:= v7;
  #L388490.  v5:= v5 + 1;
  #L388494.  goto L38844a;
  #L388496.  v2:= v3;
  #L388498.  goto L38842c;
  #L38849a.  v0:= new `io.grpc.okhttp.m$e`;
  #L38849e.  v1:= 0I;
  #L3884a0.  call `<init>`(v0, v1) @signature `Lio/grpc/okhttp/m$e;.<init>:(Lio/grpc/okhttp/m$a;)V` @kind direct;
  #L3884a6.  v1:= v8.`io.grpc.okhttp.m.a` @type ^`io.grpc.okhttp.m$d` @kind object;
  #L3884aa.  call temp:= `a`(v1) @signature `Lio/grpc/okhttp/m$d;.a:()[Lio/grpc/okhttp/m$c;` @kind interface;
  #L3884b0.  v1:= temp @kind object;
  #L3884b2.  v2:= length @variable v1;
  #L3884b4.  if v3 >= v2 then goto L3884d6;
  #L3884b8.  v4:= v1[v3] @kind object;
  #L3884bc.  call temp:= `b`(v4) @signature `Lio/grpc/okhttp/m$c;.b:()I` @kind virtual;
  #L3884c2.  v5:= temp;
  #L3884c4.  call temp:= `l`(v4, v5, v0) @signature `Lio/grpc/okhttp/m$c;.l:(ILio/grpc/okhttp/m$e;)I` @kind virtual;
  #L3884ca.  call `c`(v4) @signature `Lio/grpc/okhttp/m$c;.c:()V` @kind virtual;
  #L3884d0.  v3:= v3 + 1;
  #L3884d4.  goto L3884b4;
  #L3884d6.  call temp:= `a`(v0) @signature `Lio/grpc/okhttp/m$e;.a:()Z` @kind virtual;
  #L3884dc.  v0:= temp;
  #L3884de.  if v0 == 0 then goto L3884e8;
  #L3884e2.  call `e`(v8) @signature `Lio/grpc/okhttp/m;.e:()V` @kind virtual;
  #L3884e8.  return @kind void;
}
