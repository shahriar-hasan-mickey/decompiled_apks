record `io.grpc.okhttp.OkHttpFrameLogger$Direction` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.grpc.okhttp.OkHttpFrameLogger$Direction` `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.okhttp.OkHttpFrameLogger$Direction` `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.okhttp.OkHttpFrameLogger$Direction`[] `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.c` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3868d4.  v0:= new `io.grpc.okhttp.OkHttpFrameLogger$Direction`;
  #L3868d8.  v1:= "INBOUND" @kind object;
  #L3868dc.  v2:= 0I;
  #L3868de.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3868e4.  `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.a` @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction` := v0 @kind object;
  #L3868e8.  v1:= new `io.grpc.okhttp.OkHttpFrameLogger$Direction`;
  #L3868ec.  v3:= "OUTBOUND" @kind object;
  #L3868f0.  v4:= 1I;
  #L3868f2.  call `<init>`(v1, v3, v4) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3868f8.  `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.b` @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction` := v1 @kind object;
  #L3868fc.  v3:= 2I;
  #L3868fe.  v3:= new `io.grpc.okhttp.OkHttpFrameLogger$Direction`[v3];
  #L386902.  v3[v2]:= v0 @kind object;
  #L386906.  v3[v4]:= v1 @kind object;
  #L38690a.  `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.c` @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction`[] := v3 @kind object;
  #L38690e.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.okhttp.OkHttpFrameLogger$Direction` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L386920.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L386926.  return @kind void;
}
procedure `io.grpc.okhttp.OkHttpFrameLogger$Direction` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.valueOf:(Ljava/lang/String;)Lio/grpc/okhttp/OkHttpFrameLogger$Direction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38688c.  v0:= constclass @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction` @kind object;
  #L386890.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L386896.  v1:= temp @kind object;
  #L386898.  v1:= (`io.grpc.okhttp.OkHttpFrameLogger$Direction`) v1 @kind object;
  #L38689c.  return v1 @kind object;
}
procedure `io.grpc.okhttp.OkHttpFrameLogger$Direction`[] `values`() @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.values:()[Lio/grpc/okhttp/OkHttpFrameLogger$Direction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3868b0.  v0:= `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.c` @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction`[] @kind object;
  #L3868b4.  call temp:= `clone`(v0) @signature `[Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3868ba.  v0:= temp @kind object;
  #L3868bc.  v0:= (`io.grpc.okhttp.OkHttpFrameLogger$Direction`[]) v0 @kind object;
  #L3868c0.  return v0 @kind object;
}
