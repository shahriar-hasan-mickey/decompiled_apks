record `io.grpc.okhttp.j` @kind class @AccessFlag FINAL {
}
global `java.util.List` `@@io.grpc.okhttp.j.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/okhttp/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L387ca8.  v0:= 1I;
  #L387caa.  v0:= new `io.grpc.okhttp.internal.Protocol`[v0];
  #L387cae.  v1:= `@@io.grpc.okhttp.internal.Protocol.d` @type ^`io.grpc.okhttp.internal.Protocol` @kind object;
  #L387cb2.  v2:= 0I;
  #L387cb4.  v0[v2]:= v1 @kind object;
  #L387cb8.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L387cbe.  v0:= temp @kind object;
  #L387cc0.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L387cc6.  v0:= temp @kind object;
  #L387cc8.  `@@io.grpc.okhttp.j.a` @type ^`java.util.List` := v0 @kind object;
  #L387ccc.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object) @signature `Lio/grpc/okhttp/j;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L387b5c.  v0:= "[" @kind object;
  #L387b60.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L387b66.  v0:= temp;
  #L387b68.  if v0 == 0 then goto L387b90;
  #L387b6c.  v0:= "]" @kind object;
  #L387b70.  call temp:= `endsWith`(v2, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L387b76.  v0:= temp;
  #L387b78.  if v0 == 0 then goto L387b90;
  #L387b7c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L387b82.  v0:= temp;
  #L387b84.  v1:= 1I;
  #L387b86.  v0:= v0 - v1 @kind int;
  #L387b88.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L387b8e.  v2:= temp @kind object;
  #L387b90.  return v2 @kind object;
}
procedure `javax.net.ssl.SSLSocket` `b`(`javax.net.ssl.SSLSocketFactory` v2 @kind object, `javax.net.ssl.HostnameVerifier` v3 @kind object, `java.net.Socket` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 , `io.grpc.okhttp.internal.a` v7 @kind object) @signature `Lio/grpc/okhttp/j;.b:(Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Ljava/net/Socket;Ljava/lang/String;ILio/grpc/okhttp/internal/a;)Ljavax/net/ssl/SSLSocket;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L387ba4.  v0:= "sslSocketFactory" @kind object;
  #L387ba8.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L387bae.  v0:= "socket" @kind object;
  #L387bb2.  call temp:= `checkNotNull`(v4, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L387bb8.  v0:= "spec" @kind object;
  #L387bbc.  call temp:= `checkNotNull`(v7, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L387bc2.  v0:= 1I;
  #L387bc4.  call temp:= `createSocket`(v2, v4, v5, v6, v0) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L387bca.  v2:= temp @kind object;
  #L387bcc.  v2:= (`javax.net.ssl.SSLSocket`) v2 @kind object;
  #L387bd0.  v4:= 0I;
  #L387bd2.  call `c`(v7, v2, v4) @signature `Lio/grpc/okhttp/internal/a;.c:(Ljavax/net/ssl/SSLSocket;Z)V` @kind virtual;
  #L387bd8.  call temp:= `e`() @signature `Lio/grpc/okhttp/g;.e:()Lio/grpc/okhttp/g;` @kind static;
  #L387bde.  v4:= temp @kind object;
  #L387be0.  call temp:= `f`(v7) @signature `Lio/grpc/okhttp/internal/a;.f:()Z` @kind virtual;
  #L387be6.  v6:= temp;
  #L387be8.  if v6 == 0 then goto L387bf2;
  #L387bec.  v6:= `@@io.grpc.okhttp.j.a` @type ^`java.util.List` @kind object;
  #L387bf0.  goto L387bf4;
  #L387bf2.  v6:= 0I;
  #L387bf4.  call temp:= `h`(v4, v2, v5, v6) @signature `Lio/grpc/okhttp/g;.h:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;` @kind virtual;
  #L387bfa.  v4:= temp @kind object;
  #L387bfc.  v6:= `@@io.grpc.okhttp.j.a` @type ^`java.util.List` @kind object;
  #L387c00.  call temp:= `a`(v4) @signature `Lio/grpc/okhttp/internal/Protocol;.a:(Ljava/lang/String;)Lio/grpc/okhttp/internal/Protocol;` @kind static;
  #L387c06.  v7:= temp @kind object;
  #L387c08.  call temp:= `contains`(v6, v7) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L387c0e.  v7:= temp;
  #L387c10.  v0:= new `java.lang.StringBuilder`;
  #L387c14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L387c1a.  v1:= "Only " @kind object;
  #L387c1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L387c24.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L387c2a.  v6:= " are supported, but negotiated protocol is %s" @kind object;
  #L387c2e.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L387c34.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L387c3a.  v6:= temp @kind object;
  #L387c3c.  call `checkState`(v7, v6, v4) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L387c42.  if v3 != 0 then goto L387c4a;
  #L387c46.  v3:= `@@io.grpc.okhttp.internal.e.a` @type ^`io.grpc.okhttp.internal.e` @kind object;
  #L387c4a.  call temp:= `a`(v5) @signature `Lio/grpc/okhttp/j;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L387c50.  v4:= temp @kind object;
  #L387c52.  call temp:= `getSession`(v2) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L387c58.  v6:= temp @kind object;
  #L387c5a.  call temp:= `verify`(v3, v4, v6) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L387c60.  v3:= temp;
  #L387c62.  if v3 == 0 then goto L387c68;
  #L387c66.  return v2 @kind object;
  #L387c68.  v2:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L387c6c.  v3:= new `java.lang.StringBuilder`;
  #L387c70.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L387c76.  v4:= "Cannot verify hostname: " @kind object;
  #L387c7a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L387c80.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L387c86.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L387c8c.  v3:= temp @kind object;
  #L387c8e.  call `<init>`(v2, v3) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L387c94.  throw v2;
}
