record `io.grpc.okhttp.internal.a$b` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `io.grpc.okhttp.internal.a$b.a` @AccessFlag PRIVATE;
  `java.lang.String`[] `io.grpc.okhttp.internal.a$b.b` @AccessFlag PRIVATE;
  `java.lang.String`[] `io.grpc.okhttp.internal.a$b.c` @AccessFlag PRIVATE;
  `boolean` `io.grpc.okhttp.internal.a$b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.grpc.okhttp.internal.a$b` v1 @kind this, `io.grpc.okhttp.internal.a` v2 @kind object) @signature `Lio/grpc/okhttp/internal/a$b;.<init>:(Lio/grpc/okhttp/internal/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L389be4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L389bea.  v0:= v2.`io.grpc.okhttp.internal.a.a` @type ^`boolean` @kind boolean;
  #L389bee.  v1.`io.grpc.okhttp.internal.a$b.a` @type ^`boolean` := v0 @kind boolean;
  #L389bf2.  call temp:= `a`(v2) @signature `Lio/grpc/okhttp/internal/a;.a:(Lio/grpc/okhttp/internal/a;)[Ljava/lang/String;` @kind static;
  #L389bf8.  v0:= temp @kind object;
  #L389bfa.  v1.`io.grpc.okhttp.internal.a$b.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L389bfe.  call temp:= `b`(v2) @signature `Lio/grpc/okhttp/internal/a;.b:(Lio/grpc/okhttp/internal/a;)[Ljava/lang/String;` @kind static;
  #L389c04.  v0:= temp @kind object;
  #L389c06.  v1.`io.grpc.okhttp.internal.a$b.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L389c0a.  v2:= v2.`io.grpc.okhttp.internal.a.d` @type ^`boolean` @kind boolean;
  #L389c0e.  v1.`io.grpc.okhttp.internal.a$b.d` @type ^`boolean` := v2 @kind boolean;
  #L389c12.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.okhttp.internal.a$b` v0 @kind this, `boolean` v1 ) @signature `Lio/grpc/okhttp/internal/a$b;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L389bc8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L389bce.  v0.`io.grpc.okhttp.internal.a$b.a` @type ^`boolean` := v1 @kind boolean;
  #L389bd2.  return @kind void;
}
procedure `boolean` `a`(`io.grpc.okhttp.internal.a$b` v0 @kind object) @signature `Lio/grpc/okhttp/internal/a$b;.a:(Lio/grpc/okhttp/internal/a$b;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3899d4.  v0:= v0.`io.grpc.okhttp.internal.a$b.a` @type ^`boolean` @kind boolean;
  #L3899d8.  return v0;
}
procedure `java.lang.String`[] `b`(`io.grpc.okhttp.internal.a$b` v0 @kind object) @signature `Lio/grpc/okhttp/internal/a$b;.b:(Lio/grpc/okhttp/internal/a$b;)[Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L389b98.  v0:= v0.`io.grpc.okhttp.internal.a$b.b` @type ^`java.lang.String`[] @kind object;
  #L389b9c.  return v0 @kind object;
}
procedure `java.lang.String`[] `c`(`io.grpc.okhttp.internal.a$b` v0 @kind object) @signature `Lio/grpc/okhttp/internal/a$b;.c:(Lio/grpc/okhttp/internal/a$b;)[Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L389bb0.  v0:= v0.`io.grpc.okhttp.internal.a$b.c` @type ^`java.lang.String`[] @kind object;
  #L389bb4.  return v0 @kind object;
}
procedure `boolean` `d`(`io.grpc.okhttp.internal.a$b` v0 @kind object) @signature `Lio/grpc/okhttp/internal/a$b;.d:(Lio/grpc/okhttp/internal/a$b;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3899ec.  v0:= v0.`io.grpc.okhttp.internal.a$b.d` @type ^`boolean` @kind boolean;
  #L3899f0.  return v0;
}
procedure `io.grpc.okhttp.internal.a` `e`(`io.grpc.okhttp.internal.a$b` v2 @kind this) @signature `Lio/grpc/okhttp/internal/a$b;.e:()Lio/grpc/okhttp/internal/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L389a04.  v0:= new `io.grpc.okhttp.internal.a`;
  #L389a08.  v1:= 0I;
  #L389a0a.  call `<init>`(v0, v2, v1) @signature `Lio/grpc/okhttp/internal/a;.<init>:(Lio/grpc/okhttp/internal/a$b;Lio/grpc/okhttp/internal/a$a;)V` @kind direct;
  #L389a10.  return v0 @kind object;
}
procedure `io.grpc.okhttp.internal.a$b` `f`(`io.grpc.okhttp.internal.a$b` v3 @kind this, `io.grpc.okhttp.internal.CipherSuite`[] v4 @kind object) @signature `Lio/grpc/okhttp/internal/a$b;.f:([Lio/grpc/okhttp/internal/CipherSuite;)Lio/grpc/okhttp/internal/a$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L389a24.  v0:= v3.`io.grpc.okhttp.internal.a$b.a` @type ^`boolean` @kind boolean;
  #L389a28.  if v0 == 0 then goto L389a52;
  #L389a2c.  v0:= length @variable v4;
  #L389a2e.  v0:= new `java.lang.String`[v0];
  #L389a32.  v1:= 0I;
  #L389a34.  v2:= length @variable v4;
  #L389a36.  if v1 >= v2 then goto L389a4c;
  #L389a3a.  v2:= v4[v1] @kind object;
  #L389a3e.  v2:= v2.`io.grpc.okhttp.internal.CipherSuite.javaName` @type ^`java.lang.String` @kind object;
  #L389a42.  v0[v1]:= v2 @kind object;
  #L389a46.  v1:= v1 + 1;
  #L389a4a.  goto L389a34;
  #L389a4c.  v3.`io.grpc.okhttp.internal.a$b.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L389a50.  return v3 @kind object;
  #L389a52.  v4:= new `java.lang.IllegalStateException`;
  #L389a56.  v0:= "no cipher suites for cleartext connections" @kind object;
  #L389a5a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L389a60.  throw v4;
}
procedure `io.grpc.okhttp.internal.a$b` `g`(`io.grpc.okhttp.internal.a$b` v1 @kind this, `java.lang.String`[] v2 @kind object) @signature `Lio/grpc/okhttp/internal/a$b;.g:([Ljava/lang/String;)Lio/grpc/okhttp/internal/a$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389a74.  v0:= v1.`io.grpc.okhttp.internal.a$b.a` @type ^`boolean` @kind boolean;
  #L389a78.  if v0 == 0 then goto L389a9a;
  #L389a7c.  if v2 != 0 then goto L389a88;
  #L389a80.  v2:= 0I;
  #L389a82.  v1.`io.grpc.okhttp.internal.a$b.b` @type ^`java.lang.String`[] := v2 @kind object;
  #L389a86.  goto L389a98;
  #L389a88.  call temp:= `clone`(v2) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L389a8e.  v2:= temp @kind object;
  #L389a90.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L389a94.  v1.`io.grpc.okhttp.internal.a$b.b` @type ^`java.lang.String`[] := v2 @kind object;
  #L389a98.  return v1 @kind object;
  #L389a9a.  v2:= new `java.lang.IllegalStateException`;
  #L389a9e.  v0:= "no cipher suites for cleartext connections" @kind object;
  #L389aa2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L389aa8.  throw v2;
}
procedure `io.grpc.okhttp.internal.a$b` `h`(`io.grpc.okhttp.internal.a$b` v1 @kind this, `boolean` v2 ) @signature `Lio/grpc/okhttp/internal/a$b;.h:(Z)Lio/grpc/okhttp/internal/a$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389abc.  v0:= v1.`io.grpc.okhttp.internal.a$b.a` @type ^`boolean` @kind boolean;
  #L389ac0.  if v0 == 0 then goto L389aca;
  #L389ac4.  v1.`io.grpc.okhttp.internal.a$b.d` @type ^`boolean` := v2 @kind boolean;
  #L389ac8.  return v1 @kind object;
  #L389aca.  v2:= new `java.lang.IllegalStateException`;
  #L389ace.  v0:= "no TLS extensions for cleartext connections" @kind object;
  #L389ad2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L389ad8.  throw v2;
}
procedure `io.grpc.okhttp.internal.a$b` `i`(`io.grpc.okhttp.internal.a$b` v3 @kind this, `io.grpc.okhttp.internal.TlsVersion`[] v4 @kind object) @signature `Lio/grpc/okhttp/internal/a$b;.i:([Lio/grpc/okhttp/internal/TlsVersion;)Lio/grpc/okhttp/internal/a$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L389aec.  v0:= v3.`io.grpc.okhttp.internal.a$b.a` @type ^`boolean` @kind boolean;
  #L389af0.  if v0 == 0 then goto L389b30;
  #L389af4.  v0:= length @variable v4;
  #L389af6.  if v0 == 0 then goto L389b20;
  #L389afa.  v0:= length @variable v4;
  #L389afc.  v0:= new `java.lang.String`[v0];
  #L389b00.  v1:= 0I;
  #L389b02.  v2:= length @variable v4;
  #L389b04.  if v1 >= v2 then goto L389b1a;
  #L389b08.  v2:= v4[v1] @kind object;
  #L389b0c.  v2:= v2.`io.grpc.okhttp.internal.TlsVersion.javaName` @type ^`java.lang.String` @kind object;
  #L389b10.  v0[v1]:= v2 @kind object;
  #L389b14.  v1:= v1 + 1;
  #L389b18.  goto L389b02;
  #L389b1a.  v3.`io.grpc.okhttp.internal.a$b.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L389b1e.  return v3 @kind object;
  #L389b20.  v4:= new `java.lang.IllegalArgumentException`;
  #L389b24.  v0:= "At least one TlsVersion is required" @kind object;
  #L389b28.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L389b2e.  throw v4;
  #L389b30.  v4:= new `java.lang.IllegalStateException`;
  #L389b34.  v0:= "no TLS versions for cleartext connections" @kind object;
  #L389b38.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L389b3e.  throw v4;
}
procedure `io.grpc.okhttp.internal.a$b` `j`(`io.grpc.okhttp.internal.a$b` v1 @kind this, `java.lang.String`[] v2 @kind object) @signature `Lio/grpc/okhttp/internal/a$b;.j:([Ljava/lang/String;)Lio/grpc/okhttp/internal/a$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389b50.  v0:= v1.`io.grpc.okhttp.internal.a$b.a` @type ^`boolean` @kind boolean;
  #L389b54.  if v0 == 0 then goto L389b76;
  #L389b58.  if v2 != 0 then goto L389b64;
  #L389b5c.  v2:= 0I;
  #L389b5e.  v1.`io.grpc.okhttp.internal.a$b.c` @type ^`java.lang.String`[] := v2 @kind object;
  #L389b62.  goto L389b74;
  #L389b64.  call temp:= `clone`(v2) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L389b6a.  v2:= temp @kind object;
  #L389b6c.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L389b70.  v1.`io.grpc.okhttp.internal.a$b.c` @type ^`java.lang.String`[] := v2 @kind object;
  #L389b74.  return v1 @kind object;
  #L389b76.  v2:= new `java.lang.IllegalStateException`;
  #L389b7a.  v0:= "no TLS versions for cleartext connections" @kind object;
  #L389b7e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L389b84.  throw v2;
}
