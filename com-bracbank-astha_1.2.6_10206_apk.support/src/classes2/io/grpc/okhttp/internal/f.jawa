record `io.grpc.okhttp.internal.f` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `io.grpc.okhttp.internal.f.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `io.grpc.okhttp.internal.f.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class`[] `io.grpc.okhttp.internal.f.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.okhttp.internal.f` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Class`[] v3 @kind object) @signature `Lio/grpc/okhttp/internal/f;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38b5ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38b5f2.  v0.`io.grpc.okhttp.internal.f.a` @type ^`java.lang.Class` := v1 @kind object;
  #L38b5f6.  v0.`io.grpc.okhttp.internal.f.b` @type ^`java.lang.String` := v2 @kind object;
  #L38b5fa.  v0.`io.grpc.okhttp.internal.f.c` @type ^`java.lang.Class`[] := v3 @kind object;
  #L38b5fe.  return @kind void;
}
procedure `java.lang.reflect.Method` `a`(`io.grpc.okhttp.internal.f` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lio/grpc/okhttp/internal/f;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L38b52c.  v0:= v3.`io.grpc.okhttp.internal.f.b` @type ^`java.lang.String` @kind object;
  #L38b530.  v1:= 0I;
  #L38b532.  if v0 == 0 then goto L38b566;
  #L38b536.  v2:= v3.`io.grpc.okhttp.internal.f.c` @type ^`java.lang.Class`[] @kind object;
  #L38b53a.  call temp:= `b`(v4, v0, v2) @signature `Lio/grpc/okhttp/internal/f;.b:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind static;
  #L38b540.  v4:= temp @kind object;
  #L38b542.  if v4 == 0 then goto L38b564;
  #L38b546.  v0:= v3.`io.grpc.okhttp.internal.f.a` @type ^`java.lang.Class` @kind object;
  #L38b54a.  if v0 == 0 then goto L38b564;
  #L38b54e.  call temp:= `getReturnType`(v4) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L38b554.  v2:= temp @kind object;
  #L38b556.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L38b55c.  v0:= temp;
  #L38b55e.  if v0 != 0 then goto L38b564;
  #L38b562.  goto L38b566;
  #L38b564.  v1:= v4 @kind object;
  #L38b566.  return v1 @kind object;
}
procedure `java.lang.reflect.Method` `b`(`java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lio/grpc/okhttp/internal/f;.b:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L38b578.  v0:= 0I;
  #L38b57a.  if v2 != 0 then goto L38b580;
  #L38b57e.  return v0 @kind object;
  #L38b580.  call temp:= `getModifiers`(v2) @signature `Ljava/lang/Class;.getModifiers:()I` @kind virtual;
  #L38b586.  v1:= temp;
  #L38b588.  v1:= v1 ^& 1;
  #L38b58c.  if v1 != 0 then goto L38b5a2;
  #L38b590.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L38b596.  v2:= temp @kind object;
  #L38b598.  call temp:= `b`(v2, v3, v4) @signature `Lio/grpc/okhttp/internal/f;.b:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind static;
  #L38b59e.  v2:= temp @kind object;
  #L38b5a0.  return v2 @kind object;
  #L38b5a2.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L38b5a8.  v2:= temp @kind object;
  #L38b5aa.  call temp:= `getModifiers`(v2) @signature `Ljava/lang/reflect/Method;.getModifiers:()I` @kind virtual;
  #L38b5b0.  v3:= temp;
  #L38b5b2.  v3:= v3 ^& 1;
  #L38b5b6.  if v3 != 0 then goto L38b5bc;
  #L38b5ba.  goto L38b5be;
  #L38b5bc.  v0:= v2 @kind object;
  #L38b5be.  return v0 @kind object;
  catch `java.lang.NoSuchMethodException` @[L38b580..L38b5aa] goto L38b5be;
  catch `java.lang.NoSuchMethodException` @[L38b5aa..L38b5b2] goto L38b5bc;
}
procedure `java.lang.Object` `c`(`io.grpc.okhttp.internal.f` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lio/grpc/okhttp/internal/f;.c:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38b380.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L38b386.  v0:= temp @kind object;
  #L38b388.  call temp:= `a`(v3, v0) @signature `Lio/grpc/okhttp/internal/f;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind direct;
  #L38b38e.  v0:= temp @kind object;
  #L38b390.  if v0 == 0 then goto L38b3d4;
  #L38b394.  call temp:= `invoke`(v0, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38b39a.  v4:= temp @kind object;
  #L38b39c.  return v4 @kind object;
  #L38b39e.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L38b3a0.  v5:= new `java.lang.AssertionError`;
  #L38b3a4.  v1:= new `java.lang.StringBuilder`;
  #L38b3a8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38b3ae.  v2:= "Unexpectedly could not call: " @kind object;
  #L38b3b2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b3b8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b3be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38b3c4.  v0:= temp @kind object;
  #L38b3c6.  call `<init>`(v5, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38b3cc.  call temp:= `initCause`(v5, v4) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L38b3d2.  throw v5;
  #L38b3d4.  v5:= new `java.lang.AssertionError`;
  #L38b3d8.  v0:= new `java.lang.StringBuilder`;
  #L38b3dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38b3e2.  v1:= "Method " @kind object;
  #L38b3e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b3ec.  v1:= v3.`io.grpc.okhttp.internal.f.b` @type ^`java.lang.String` @kind object;
  #L38b3f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b3f6.  v1:= " not supported for object " @kind object;
  #L38b3fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b400.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b406.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38b40c.  v4:= temp @kind object;
  #L38b40e.  call `<init>`(v5, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38b414.  throw v5;
  catch `java.lang.IllegalAccessException` @[L38b394..L38b39c] goto L38b39e;
}
procedure `java.lang.Object` `d`(`io.grpc.okhttp.internal.f` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lio/grpc/okhttp/internal/f;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38b438.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L38b43e.  v0:= temp @kind object;
  #L38b440.  call temp:= `a`(v2, v0) @signature `Lio/grpc/okhttp/internal/f;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind direct;
  #L38b446.  v0:= temp @kind object;
  #L38b448.  v1:= 0I;
  #L38b44a.  if v0 != 0 then goto L38b450;
  #L38b44e.  return v1 @kind object;
  #L38b450.  call temp:= `invoke`(v0, v3, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38b456.  v3:= temp @kind object;
  #L38b458.  return v3 @kind object;
  #L38b45a.  return v1 @kind object;
  catch `java.lang.IllegalAccessException` @[L38b450..L38b458] goto L38b45a;
}
procedure `java.lang.Object` `e`(`io.grpc.okhttp.internal.f` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lio/grpc/okhttp/internal/f;.e:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b47c.  call temp:= `d`(v1, v2, v3) @signature `Lio/grpc/okhttp/internal/f;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38b482.  v2:= temp @kind object;
  #L38b484.  return v2 @kind object;
  #L38b486.  v2:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L38b488.  call temp:= `getTargetException`(v2) @signature `Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;` @kind virtual;
  #L38b48e.  v2:= temp @kind object;
  #L38b490.  v3:= instanceof @variable v2 @type ^`java.lang.RuntimeException` @kind boolean;
  #L38b494.  if v3 == 0 then goto L38b49e;
  #L38b498.  v2:= (`java.lang.RuntimeException`) v2 @kind object;
  #L38b49c.  throw v2;
  #L38b49e.  v3:= new `java.lang.AssertionError`;
  #L38b4a2.  v0:= "Unexpected exception" @kind object;
  #L38b4a6.  call `<init>`(v3, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38b4ac.  call temp:= `initCause`(v3, v2) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L38b4b2.  throw v3;
  catch `java.lang.reflect.InvocationTargetException` @[L38b47c..L38b484] goto L38b486;
}
procedure `java.lang.Object` `f`(`io.grpc.okhttp.internal.f` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lio/grpc/okhttp/internal/f;.f:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b4d4.  call temp:= `c`(v1, v2, v3) @signature `Lio/grpc/okhttp/internal/f;.c:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38b4da.  v2:= temp @kind object;
  #L38b4dc.  return v2 @kind object;
  #L38b4de.  v2:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L38b4e0.  call temp:= `getTargetException`(v2) @signature `Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;` @kind virtual;
  #L38b4e6.  v2:= temp @kind object;
  #L38b4e8.  v3:= instanceof @variable v2 @type ^`java.lang.RuntimeException` @kind boolean;
  #L38b4ec.  if v3 == 0 then goto L38b4f6;
  #L38b4f0.  v2:= (`java.lang.RuntimeException`) v2 @kind object;
  #L38b4f4.  throw v2;
  #L38b4f6.  v3:= new `java.lang.AssertionError`;
  #L38b4fa.  v0:= "Unexpected exception" @kind object;
  #L38b4fe.  call `<init>`(v3, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38b504.  call temp:= `initCause`(v3, v2) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L38b50a.  throw v3;
  catch `java.lang.reflect.InvocationTargetException` @[L38b4d4..L38b4dc] goto L38b4de;
}
procedure `boolean` `g`(`io.grpc.okhttp.internal.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/okhttp/internal/f;.g:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L38b354.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L38b35a.  v1:= temp @kind object;
  #L38b35c.  call temp:= `a`(v0, v1) @signature `Lio/grpc/okhttp/internal/f;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind direct;
  #L38b362.  v1:= temp @kind object;
  #L38b364.  if v1 == 0 then goto L38b36c;
  #L38b368.  v1:= 1I;
  #L38b36a.  goto L38b36e;
  #L38b36c.  v1:= 0I;
  #L38b36e.  return v1;
}
