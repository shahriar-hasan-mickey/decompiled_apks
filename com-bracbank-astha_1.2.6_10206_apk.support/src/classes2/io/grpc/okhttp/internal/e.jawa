record `io.grpc.okhttp.internal.e` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `io.grpc.okhttp.internal.e` `@@io.grpc.okhttp.internal.e.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.regex.Pattern` `@@io.grpc.okhttp.internal.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/okhttp/internal/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L38b30c.  v0:= new `io.grpc.okhttp.internal.e`;
  #L38b310.  call `<init>`(v0) @signature `Lio/grpc/okhttp/internal/e;.<init>:()V` @kind direct;
  #L38b316.  `@@io.grpc.okhttp.internal.e.a` @type ^`io.grpc.okhttp.internal.e` := v0 @kind object;
  #L38b31a.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L38b31e.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L38b324.  v0:= temp @kind object;
  #L38b326.  `@@io.grpc.okhttp.internal.e.b` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L38b32a.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.okhttp.internal.e` v0 @kind this) @signature `Lio/grpc/okhttp/internal/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L38b33c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38b342.  return @kind void;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v4 @kind object, `int` v5 ) @signature `Lio/grpc/okhttp/internal/e;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38b250.  v0:= new `java.util.ArrayList`;
  #L38b254.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38b25a.  call temp:= `getSubjectAlternativeNames`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L38b260.  v4:= temp @kind object;
  #L38b262.  if v4 != 0 then goto L38b270;
  #L38b266.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L38b26c.  v4:= temp @kind object;
  #L38b26e.  return v4 @kind object;
  #L38b270.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38b276.  v4:= temp @kind object;
  #L38b278.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38b27e.  v1:= temp;
  #L38b280.  if v1 == 0 then goto L38b2de;
  #L38b284.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38b28a.  v1:= temp @kind object;
  #L38b28c.  v1:= (`java.util.List`) v1 @kind object;
  #L38b290.  if v1 == 0 then goto L38b278;
  #L38b294.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38b29a.  v2:= temp;
  #L38b29c.  v3:= 2I;
  #L38b29e.  if v2 >= v3 then goto L38b2a4;
  #L38b2a2.  goto L38b278;
  #L38b2a4.  v2:= 0I;
  #L38b2a6.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38b2ac.  v2:= temp @kind object;
  #L38b2ae.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L38b2b2.  if v2 != 0 then goto L38b2b8;
  #L38b2b6.  goto L38b278;
  #L38b2b8.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L38b2be.  v2:= temp;
  #L38b2c0.  if v2 != v5 then goto L38b278;
  #L38b2c4.  v2:= 1I;
  #L38b2c6.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38b2cc.  v1:= temp @kind object;
  #L38b2ce.  v1:= (`java.lang.String`) v1 @kind object;
  #L38b2d2.  if v1 == 0 then goto L38b278;
  #L38b2d6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38b2dc.  goto L38b278;
  #L38b2de.  return v0 @kind object;
  #L38b2e0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L38b2e6.  v4:= temp @kind object;
  #L38b2e8.  return v4 @kind object;
  catch `java.security.cert.CertificateParsingException` @[L38b25a..L38b2dc] goto L38b2e0;
}
procedure `boolean` `c`(`java.lang.String` v1 @kind object) @signature `Lio/grpc/okhttp/internal/e;.c:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L38afcc.  v0:= `@@io.grpc.okhttp.internal.e.b` @type ^`java.util.regex.Pattern` @kind object;
  #L38afd0.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L38afd6.  v1:= temp @kind object;
  #L38afd8.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L38afde.  v1:= temp;
  #L38afe0.  return v1;
}
procedure `boolean` `d`(`io.grpc.okhttp.internal.e` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lio/grpc/okhttp/internal/e;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38aff4.  v0:= 0I;
  #L38aff6.  if v8 == 0 then goto L38b15c;
  #L38affa.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38b000.  v1:= temp;
  #L38b002.  if v1 == 0 then goto L38b15c;
  #L38b006.  v1:= "." @kind object;
  #L38b00a.  call temp:= `startsWith`(v8, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L38b010.  v2:= temp;
  #L38b012.  if v2 != 0 then goto L38b15c;
  #L38b016.  v2:= ".." @kind object;
  #L38b01a.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L38b020.  v3:= temp;
  #L38b022.  if v3 == 0 then goto L38b02a;
  #L38b026.  goto L38b15c;
  #L38b02a.  if v9 == 0 then goto L38b15c;
  #L38b02e.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38b034.  v3:= temp;
  #L38b036.  if v3 == 0 then goto L38b15c;
  #L38b03a.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L38b040.  v3:= temp;
  #L38b042.  if v3 != 0 then goto L38b15c;
  #L38b046.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L38b04c.  v2:= temp;
  #L38b04e.  if v2 == 0 then goto L38b056;
  #L38b052.  goto L38b15c;
  #L38b056.  call temp:= `endsWith`(v8, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L38b05c.  v2:= temp;
  #L38b05e.  v3:= 46I;
  #L38b062.  if v2 != 0 then goto L38b084;
  #L38b066.  v2:= new `java.lang.StringBuilder`;
  #L38b06a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38b070.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b076.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b07c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38b082.  v8:= temp @kind object;
  #L38b084.  call temp:= `endsWith`(v9, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L38b08a.  v1:= temp;
  #L38b08c.  if v1 != 0 then goto L38b0ae;
  #L38b090.  v1:= new `java.lang.StringBuilder`;
  #L38b094.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38b09a.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b0a0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b0a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38b0ac.  v9:= temp @kind object;
  #L38b0ae.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L38b0b2.  call temp:= `toLowerCase`(v9, v1) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L38b0b8.  v9:= temp @kind object;
  #L38b0ba.  v1:= "*" @kind object;
  #L38b0be.  call temp:= `contains`(v9, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L38b0c4.  v1:= temp;
  #L38b0c6.  if v1 != 0 then goto L38b0d4;
  #L38b0ca.  call temp:= `equals`(v8, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38b0d0.  v8:= temp;
  #L38b0d2.  return v8;
  #L38b0d4.  v1:= "*." @kind object;
  #L38b0d8.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L38b0de.  v2:= temp;
  #L38b0e0.  if v2 == 0 then goto L38b15c;
  #L38b0e4.  v2:= 42I;
  #L38b0e8.  v4:= 1I;
  #L38b0ea.  call temp:= `indexOf`(v9, v2, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L38b0f0.  v2:= temp;
  #L38b0f2.  v5:= -1I;
  #L38b0f4.  if v2 == v5 then goto L38b0fa;
  #L38b0f8.  goto L38b15c;
  #L38b0fa.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38b100.  v2:= temp;
  #L38b102.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38b108.  v6:= temp;
  #L38b10a.  if v2 >= v6 then goto L38b110;
  #L38b10e.  return v0;
  #L38b110.  call temp:= `equals`(v1, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38b116.  v1:= temp;
  #L38b118.  if v1 == 0 then goto L38b11e;
  #L38b11c.  return v0;
  #L38b11e.  call temp:= `substring`(v9, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L38b124.  v9:= temp @kind object;
  #L38b126.  call temp:= `endsWith`(v8, v9) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L38b12c.  v1:= temp;
  #L38b12e.  if v1 != 0 then goto L38b134;
  #L38b132.  return v0;
  #L38b134.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38b13a.  v1:= temp;
  #L38b13c.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38b142.  v9:= temp;
  #L38b144.  v1:= v1 - v9 @kind int;
  #L38b146.  if v1 <= 0 then goto L38b15a;
  #L38b14a.  v1:= v1 - v4 @kind int;
  #L38b14c.  call temp:= `lastIndexOf`(v8, v3, v1) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L38b152.  v8:= temp;
  #L38b154.  if v8 == v5 then goto L38b15a;
  #L38b158.  return v0;
  #L38b15a.  return v4;
  #L38b15c.  return v0;
}
procedure `boolean` `e`(`io.grpc.okhttp.internal.e` v6 @kind this, `java.lang.String` v7 @kind object, `java.security.cert.X509Certificate` v8 @kind object) @signature `Lio/grpc/okhttp/internal/e;.e:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L38b170.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L38b174.  call temp:= `toLowerCase`(v7, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L38b17a.  v7:= temp @kind object;
  #L38b17c.  v0:= 2I;
  #L38b17e.  call temp:= `a`(v8, v0) @signature `Lio/grpc/okhttp/internal/e;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L38b184.  v0:= temp @kind object;
  #L38b186.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38b18c.  v1:= temp;
  #L38b18e.  v2:= 1I;
  #L38b190.  v3:= 0I;
  #L38b192.  v4:= 0I;
  #L38b194.  v5:= 0I;
  #L38b196.  if v4 >= v1 then goto L38b1bc;
  #L38b19a.  call temp:= `get`(v0, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38b1a0.  v5:= temp @kind object;
  #L38b1a2.  v5:= (`java.lang.String`) v5 @kind object;
  #L38b1a6.  call temp:= `d`(v6, v7, v5) @signature `Lio/grpc/okhttp/internal/e;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L38b1ac.  v5:= temp;
  #L38b1ae.  if v5 == 0 then goto L38b1b4;
  #L38b1b2.  return v2;
  #L38b1b4.  v4:= v4 + 1;
  #L38b1b8.  v5:= 1I;
  #L38b1ba.  goto L38b196;
  #L38b1bc.  if v5 != 0 then goto L38b1ec;
  #L38b1c0.  call temp:= `getSubjectX500Principal`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L38b1c6.  v8:= temp @kind object;
  #L38b1c8.  v0:= new `io.grpc.okhttp.internal.c`;
  #L38b1cc.  call `<init>`(v0, v8) @signature `Lio/grpc/okhttp/internal/c;.<init>:(Ljavax/security/auth/x500/X500Principal;)V` @kind direct;
  #L38b1d2.  v8:= "cn" @kind object;
  #L38b1d6.  call temp:= `b`(v0, v8) @signature `Lio/grpc/okhttp/internal/c;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L38b1dc.  v8:= temp @kind object;
  #L38b1de.  if v8 == 0 then goto L38b1ec;
  #L38b1e2.  call temp:= `d`(v6, v7, v8) @signature `Lio/grpc/okhttp/internal/e;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L38b1e8.  v7:= temp;
  #L38b1ea.  return v7;
  #L38b1ec.  return v3;
}
procedure `boolean` `f`(`io.grpc.okhttp.internal.e` v4 @kind this, `java.lang.String` v5 @kind object, `java.security.cert.X509Certificate` v6 @kind object) @signature `Lio/grpc/okhttp/internal/e;.f:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38b200.  v0:= 7I;
  #L38b202.  call temp:= `a`(v6, v0) @signature `Lio/grpc/okhttp/internal/e;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L38b208.  v6:= temp @kind object;
  #L38b20a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38b210.  v0:= temp;
  #L38b212.  v1:= 0I;
  #L38b214.  v2:= 0I;
  #L38b216.  if v2 >= v0 then goto L38b23c;
  #L38b21a.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38b220.  v3:= temp @kind object;
  #L38b222.  v3:= (`java.lang.String`) v3 @kind object;
  #L38b226.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L38b22c.  v3:= temp;
  #L38b22e.  if v3 == 0 then goto L38b236;
  #L38b232.  v5:= 1I;
  #L38b234.  return v5;
  #L38b236.  v2:= v2 + 1;
  #L38b23a.  goto L38b216;
  #L38b23c.  return v1;
}
procedure `boolean` `b`(`io.grpc.okhttp.internal.e` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lio/grpc/okhttp/internal/e;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38af5c.  call temp:= `c`(v2) @signature `Lio/grpc/okhttp/internal/e;.c:(Ljava/lang/String;)Z` @kind static;
  #L38af62.  v0:= temp;
  #L38af64.  if v0 == 0 then goto L38af72;
  #L38af68.  call temp:= `f`(v1, v2, v3) @signature `Lio/grpc/okhttp/internal/e;.f:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L38af6e.  v2:= temp;
  #L38af70.  goto L38af7a;
  #L38af72.  call temp:= `e`(v1, v2, v3) @signature `Lio/grpc/okhttp/internal/e;.e:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L38af78.  v2:= temp;
  #L38af7a.  return v2;
}
procedure `boolean` `verify`(`io.grpc.okhttp.internal.e` v1 @kind this, `java.lang.String` v2 @kind object, `javax.net.ssl.SSLSession` v3 @kind object) @signature `Lio/grpc/okhttp/internal/e;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38af8c.  v0:= 0I;
  #L38af8e.  call temp:= `getPeerCertificates`(v3) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L38af94.  v3:= temp @kind object;
  #L38af96.  v3:= v3[v0] @kind object;
  #L38af9a.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L38af9e.  call temp:= `b`(v1, v2, v3) @signature `Lio/grpc/okhttp/internal/e;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L38afa4.  v2:= temp;
  #L38afa6.  return v2;
  #L38afa8.  return v0;
  catch `javax.net.ssl.SSLException` @[L38af8e..L38afa6] goto L38afa8;
}
