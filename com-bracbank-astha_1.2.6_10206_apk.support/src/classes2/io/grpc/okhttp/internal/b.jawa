record `io.grpc.okhttp.internal.b` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/grpc/okhttp/internal/b;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38a124.  v0:= new `java.lang.StringBuilder`;
  #L38a128.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38a12e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38a134.  v1:= ":" @kind object;
  #L38a138.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38a13e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38a144.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38a14a.  v1:= temp @kind object;
  #L38a14c.  v2:= "ISO-8859-1" @kind object;
  #L38a150.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L38a156.  v1:= temp @kind object;
  #L38a158.  call temp:= `j`(v1) @signature `Lokio/ByteString;.j:([B)Lokio/ByteString;` @kind static;
  #L38a15e.  v1:= temp @kind object;
  #L38a160.  call temp:= `a`(v1) @signature `Lokio/ByteString;.a:()Ljava/lang/String;` @kind virtual;
  #L38a166.  v1:= temp @kind object;
  #L38a168.  v2:= new `java.lang.StringBuilder`;
  #L38a16c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38a172.  v0:= "Basic " @kind object;
  #L38a176.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38a17c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38a182.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38a188.  v1:= temp @kind object;
  #L38a18a.  return v1 @kind object;
  #L38a18c.  v1:= new `java.lang.AssertionError`;
  #L38a190.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L38a196.  throw v1;
  catch `java.io.UnsupportedEncodingException` @[L38a124..L38a18a] goto L38a18c;
}
