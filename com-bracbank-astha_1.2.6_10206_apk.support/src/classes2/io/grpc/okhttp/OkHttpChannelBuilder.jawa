record `io.grpc.okhttp.OkHttpChannelBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `io.grpc.internal.b` @kind class {
  `io.grpc.internal.z0` `io.grpc.okhttp.OkHttpChannelBuilder.b` @AccessFlag PRIVATE_FINAL;
  `io.grpc.internal.f2$b` `io.grpc.okhttp.OkHttpChannelBuilder.c` @AccessFlag PRIVATE;
  `io.grpc.internal.g1` `io.grpc.okhttp.OkHttpChannelBuilder.d` @AccessFlag PRIVATE;
  `io.grpc.internal.g1` `io.grpc.okhttp.OkHttpChannelBuilder.e` @AccessFlag PRIVATE;
  `javax.net.SocketFactory` `io.grpc.okhttp.OkHttpChannelBuilder.f` @AccessFlag PRIVATE;
  `javax.net.ssl.SSLSocketFactory` `io.grpc.okhttp.OkHttpChannelBuilder.g` @AccessFlag PRIVATE;
  `boolean` `io.grpc.okhttp.OkHttpChannelBuilder.h` @AccessFlag PRIVATE_FINAL;
  `javax.net.ssl.HostnameVerifier` `io.grpc.okhttp.OkHttpChannelBuilder.i` @AccessFlag PRIVATE;
  `io.grpc.okhttp.internal.a` `io.grpc.okhttp.OkHttpChannelBuilder.j` @AccessFlag PRIVATE;
  `io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` `io.grpc.okhttp.OkHttpChannelBuilder.k` @AccessFlag PRIVATE;
  `long` `io.grpc.okhttp.OkHttpChannelBuilder.l` @AccessFlag PRIVATE;
  `long` `io.grpc.okhttp.OkHttpChannelBuilder.m` @AccessFlag PRIVATE;
  `int` `io.grpc.okhttp.OkHttpChannelBuilder.n` @AccessFlag PRIVATE;
  `boolean` `io.grpc.okhttp.OkHttpChannelBuilder.o` @AccessFlag PRIVATE;
  `int` `io.grpc.okhttp.OkHttpChannelBuilder.p` @AccessFlag PRIVATE;
  `boolean` `io.grpc.okhttp.OkHttpChannelBuilder.q` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@io.grpc.okhttp.OkHttpChannelBuilder.r` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.okhttp.internal.a` `@@io.grpc.okhttp.OkHttpChannelBuilder.s` @AccessFlag STATIC_FINAL;
global `long` `@@io.grpc.okhttp.OkHttpChannelBuilder.t` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.internal.w1$d` `@@io.grpc.okhttp.OkHttpChannelBuilder.u` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.internal.g1` `@@io.grpc.okhttp.OkHttpChannelBuilder.v` @AccessFlag STATIC_FINAL;
global `java.util.EnumSet` `@@io.grpc.okhttp.OkHttpChannelBuilder.w` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L383328.  v0:= constclass @type ^`io.grpc.okhttp.OkHttpChannelBuilder` @kind object;
  #L38332c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L383332.  v0:= temp @kind object;
  #L383334.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L38333a.  v0:= temp @kind object;
  #L38333c.  `@@io.grpc.okhttp.OkHttpChannelBuilder.r` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L383340.  v0:= new `io.grpc.okhttp.internal.a$b`;
  #L383344.  v1:= `@@io.grpc.okhttp.internal.a.f` @type ^`io.grpc.okhttp.internal.a` @kind object;
  #L383348.  call `<init>`(v0, v1) @signature `Lio/grpc/okhttp/internal/a$b;.<init>:(Lio/grpc/okhttp/internal/a;)V` @kind direct;
  #L38334e.  v1:= 6I;
  #L383350.  v1:= new `io.grpc.okhttp.internal.CipherSuite`[v1];
  #L383354.  v2:= `@@io.grpc.okhttp.internal.CipherSuite.L0` @type ^`io.grpc.okhttp.internal.CipherSuite` @kind object;
  #L383358.  v3:= 0I;
  #L38335a.  v1[v3]:= v2 @kind object;
  #L38335e.  v2:= `@@io.grpc.okhttp.internal.CipherSuite.P0` @type ^`io.grpc.okhttp.internal.CipherSuite` @kind object;
  #L383362.  v4:= 1I;
  #L383364.  v1[v4]:= v2 @kind object;
  #L383368.  v2:= `@@io.grpc.okhttp.internal.CipherSuite.M0` @type ^`io.grpc.okhttp.internal.CipherSuite` @kind object;
  #L38336c.  v5:= 2I;
  #L38336e.  v1[v5]:= v2 @kind object;
  #L383372.  v2:= `@@io.grpc.okhttp.internal.CipherSuite.Q0` @type ^`io.grpc.okhttp.internal.CipherSuite` @kind object;
  #L383376.  v5:= 3I;
  #L383378.  v1[v5]:= v2 @kind object;
  #L38337c.  v2:= `@@io.grpc.okhttp.internal.CipherSuite.U0` @type ^`io.grpc.okhttp.internal.CipherSuite` @kind object;
  #L383380.  v5:= 4I;
  #L383382.  v1[v5]:= v2 @kind object;
  #L383386.  v2:= `@@io.grpc.okhttp.internal.CipherSuite.T0` @type ^`io.grpc.okhttp.internal.CipherSuite` @kind object;
  #L38338a.  v5:= 5I;
  #L38338c.  v1[v5]:= v2 @kind object;
  #L383390.  call temp:= `f`(v0, v1) @signature `Lio/grpc/okhttp/internal/a$b;.f:([Lio/grpc/okhttp/internal/CipherSuite;)Lio/grpc/okhttp/internal/a$b;` @kind virtual;
  #L383396.  v0:= temp @kind object;
  #L383398.  v1:= new `io.grpc.okhttp.internal.TlsVersion`[v4];
  #L38339c.  v2:= `@@io.grpc.okhttp.internal.TlsVersion.b` @type ^`io.grpc.okhttp.internal.TlsVersion` @kind object;
  #L3833a0.  v1[v3]:= v2 @kind object;
  #L3833a4.  call temp:= `i`(v0, v1) @signature `Lio/grpc/okhttp/internal/a$b;.i:([Lio/grpc/okhttp/internal/TlsVersion;)Lio/grpc/okhttp/internal/a$b;` @kind virtual;
  #L3833aa.  v0:= temp @kind object;
  #L3833ac.  call temp:= `h`(v0, v4) @signature `Lio/grpc/okhttp/internal/a$b;.h:(Z)Lio/grpc/okhttp/internal/a$b;` @kind virtual;
  #L3833b2.  v0:= temp @kind object;
  #L3833b4.  call temp:= `e`(v0) @signature `Lio/grpc/okhttp/internal/a$b;.e:()Lio/grpc/okhttp/internal/a;` @kind virtual;
  #L3833ba.  v0:= temp @kind object;
  #L3833bc.  `@@io.grpc.okhttp.OkHttpChannelBuilder.s` @type ^`io.grpc.okhttp.internal.a` := v0 @kind object;
  #L3833c0.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3833c4.  v1:= 1000L;
  #L3833c8.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L3833ce.  v0:= temp @kind wide;
  #L3833d0.  `@@io.grpc.okhttp.OkHttpChannelBuilder.t` @type ^`long` := v0 @kind wide;
  #L3833d4.  v0:= new `io.grpc.okhttp.OkHttpChannelBuilder$a`;
  #L3833d8.  call `<init>`(v0) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder$a;.<init>:()V` @kind direct;
  #L3833de.  `@@io.grpc.okhttp.OkHttpChannelBuilder.u` @type ^`io.grpc.internal.w1$d` := v0 @kind object;
  #L3833e2.  call temp:= `c`(v0) @signature `Lio/grpc/internal/x1;.c:(Lio/grpc/internal/w1$d;)Lio/grpc/internal/x1;` @kind static;
  #L3833e8.  v0:= temp @kind object;
  #L3833ea.  `@@io.grpc.okhttp.OkHttpChannelBuilder.v` @type ^`io.grpc.internal.g1` := v0 @kind object;
  #L3833ee.  v0:= `@@io.grpc.TlsChannelCredentials$Feature.b` @type ^`io.grpc.TlsChannelCredentials$Feature` @kind object;
  #L3833f2.  v1:= `@@io.grpc.TlsChannelCredentials$Feature.c` @type ^`io.grpc.TlsChannelCredentials$Feature` @kind object;
  #L3833f6.  call temp:= `of`(v0, v1) @signature `Ljava/util/EnumSet;.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;` @kind static;
  #L3833fc.  v0:= temp @kind object;
  #L3833fe.  `@@io.grpc.okhttp.OkHttpChannelBuilder.w` @type ^`java.util.EnumSet` := v0 @kind object;
  #L383402.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.okhttp.OkHttpChannelBuilder` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.<init>:(Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L383414.  call `<init>`(v5) @signature `Lio/grpc/internal/b;.<init>:()V` @kind direct;
  #L38341a.  call temp:= `a`() @signature `Lio/grpc/internal/f2;.a:()Lio/grpc/internal/f2$b;` @kind static;
  #L383420.  v0:= temp @kind object;
  #L383422.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.c` @type ^`io.grpc.internal.f2$b` := v0 @kind object;
  #L383426.  v0:= `@@io.grpc.okhttp.OkHttpChannelBuilder.v` @type ^`io.grpc.internal.g1` @kind object;
  #L38342a.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.d` @type ^`io.grpc.internal.g1` := v0 @kind object;
  #L38342e.  v0:= `@@io.grpc.internal.GrpcUtil.v` @type ^`io.grpc.internal.w1$d` @kind object;
  #L383432.  call temp:= `c`(v0) @signature `Lio/grpc/internal/x1;.c:(Lio/grpc/internal/w1$d;)Lio/grpc/internal/x1;` @kind static;
  #L383438.  v0:= temp @kind object;
  #L38343a.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.e` @type ^`io.grpc.internal.g1` := v0 @kind object;
  #L38343e.  v0:= `@@io.grpc.okhttp.OkHttpChannelBuilder.s` @type ^`io.grpc.okhttp.internal.a` @kind object;
  #L383442.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.j` @type ^`io.grpc.okhttp.internal.a` := v0 @kind object;
  #L383446.  v0:= `@@io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType.a` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` @kind object;
  #L38344a.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.k` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` := v0 @kind object;
  #L38344e.  v0:= 9223372036854775807L;
  #L383458.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.l` @type ^`long` := v0 @kind wide;
  #L38345c.  v0:= `@@io.grpc.internal.GrpcUtil.n` @type ^`long` @kind wide;
  #L383460.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.m` @type ^`long` := v0 @kind wide;
  #L383464.  v0:= 65535I;
  #L38346a.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.n` @type ^`int` := v0;
  #L38346e.  v0:= 2147483647I;
  #L383474.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.p` @type ^`int` := v0;
  #L383478.  v0:= 0I;
  #L38347a.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.q` @type ^`boolean` := v0 @kind boolean;
  #L38347e.  v1:= new `io.grpc.internal.z0`;
  #L383482.  v2:= new `io.grpc.okhttp.OkHttpChannelBuilder$d`;
  #L383486.  v3:= 0I;
  #L383488.  call `<init>`(v2, v5, v3) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder$d;.<init>:(Lio/grpc/okhttp/OkHttpChannelBuilder;Lio/grpc/okhttp/OkHttpChannelBuilder$a;)V` @kind direct;
  #L38348e.  v4:= new `io.grpc.okhttp.OkHttpChannelBuilder$c`;
  #L383492.  call `<init>`(v4, v5, v3) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder$c;.<init>:(Lio/grpc/okhttp/OkHttpChannelBuilder;Lio/grpc/okhttp/OkHttpChannelBuilder$a;)V` @kind direct;
  #L383498.  call `<init>`(v1, v6, v2, v4) @signature `Lio/grpc/internal/z0;.<init>:(Ljava/lang/String;Lio/grpc/internal/z0$c;Lio/grpc/internal/z0$b;)V` @kind direct;
  #L38349e.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.b` @type ^`io.grpc.internal.z0` := v1 @kind object;
  #L3834a2.  v5.`io.grpc.okhttp.OkHttpChannelBuilder.h` @type ^`boolean` := v0 @kind boolean;
  #L3834a6.  return @kind void;
}
procedure `io.grpc.okhttp.OkHttpChannelBuilder` `forTarget`(`java.lang.String` v1 @kind object) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.forTarget:(Ljava/lang/String;)Lio/grpc/okhttp/OkHttpChannelBuilder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38309c.  v0:= new `io.grpc.okhttp.OkHttpChannelBuilder`;
  #L3830a0.  call `<init>`(v0, v1) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3830a6.  return v0 @kind object;
}
procedure `io.grpc.r0` `c`(`io.grpc.okhttp.OkHttpChannelBuilder` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.c:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/r0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L383064.  call temp:= `i`(v0, v1, v3) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.i:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/okhttp/OkHttpChannelBuilder;` @kind virtual;
  #L38306a.  v1:= temp @kind object;
  #L38306c.  return v1 @kind object;
}
procedure `io.grpc.r0` `d`(`io.grpc.okhttp.OkHttpChannelBuilder` v1 @kind this) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.d:()Lio/grpc/r0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L383080.  call temp:= `j`(v1) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.j:()Lio/grpc/okhttp/OkHttpChannelBuilder;` @kind virtual;
  #L383086.  v0:= temp @kind object;
  #L383088.  return v0 @kind object;
}
procedure `io.grpc.r0` `e`(`io.grpc.okhttp.OkHttpChannelBuilder` v1 @kind this) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.e:()Lio/grpc/r0;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L38304c.  v0:= v1.`io.grpc.okhttp.OkHttpChannelBuilder.b` @type ^`io.grpc.internal.z0` @kind object;
  #L383050.  return v0 @kind object;
}
procedure `io.grpc.okhttp.OkHttpChannelBuilder$e` `f`(`io.grpc.okhttp.OkHttpChannelBuilder` v22 @kind this) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.f:()Lio/grpc/okhttp/OkHttpChannelBuilder$e;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L3831d4.  v0:= v22 @kind object;
  #L3831d8.  v1:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.l` @type ^`long` @kind wide;
  #L3831dc.  v3:= 9223372036854775807L;
  #L3831e6.  v5:= lcmp(v1, v3);
  #L3831ea.  if v5 == 0 then goto L3831f4;
  #L3831ee.  v1:= 1I;
  #L3831f0.  v10:= 1I;
  #L3831f2.  goto L3831f8;
  #L3831f4.  v1:= 0I;
  #L3831f6.  v10:= 0I;
  #L3831f8.  v1:= new `io.grpc.okhttp.OkHttpChannelBuilder$e`;
  #L3831fc.  v2:= v1 @kind object;
  #L3831fe.  v3:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.d` @type ^`io.grpc.internal.g1` @kind object;
  #L383202.  v4:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.e` @type ^`io.grpc.internal.g1` @kind object;
  #L383206.  v5:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.f` @type ^`javax.net.SocketFactory` @kind object;
  #L38320a.  call temp:= `g`(v22) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.g:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L383210.  v6:= temp @kind object;
  #L383212.  v7:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.i` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L383216.  v8:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.j` @type ^`io.grpc.okhttp.internal.a` @kind object;
  #L38321a.  v9:= v0.`io.grpc.internal.b.a` @type ^`int`;
  #L38321e.  v11:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.l` @type ^`long` @kind wide;
  #L383222.  v13:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.m` @type ^`long` @kind wide;
  #L383226.  v15:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.n` @type ^`int`;
  #L38322a.  v21:= v1 @kind object;
  #L38322e.  v1:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.o` @type ^`boolean` @kind boolean;
  #L383232.  v16:= v1;
  #L383236.  v1:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.p` @type ^`int`;
  #L38323a.  v17:= v1;
  #L38323e.  v1:= v0.`io.grpc.okhttp.OkHttpChannelBuilder.c` @type ^`io.grpc.internal.f2$b` @kind object;
  #L383242.  v18:= v1 @kind object;
  #L383246.  v19:= 0I;
  #L38324a.  v20:= 0I;
  #L38324e.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v13, v15, v16, v17, v18, v19, v20) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder$e;.<init>:(Lio/grpc/internal/g1;Lio/grpc/internal/g1;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lio/grpc/okhttp/internal/a;IZJJIZILio/grpc/internal/f2$b;ZLio/grpc/okhttp/OkHttpChannelBuilder$a;)V` @kind direct;
  #L383254.  return v21 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `g`(`io.grpc.okhttp.OkHttpChannelBuilder` v3 @kind this) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.g:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L383268.  v0:= `@@io.grpc.okhttp.OkHttpChannelBuilder$b.b` @type ^`int`[] @kind object;
  #L38326c.  v1:= v3.`io.grpc.okhttp.OkHttpChannelBuilder.k` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` @kind object;
  #L383270.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L383276.  v1:= temp;
  #L383278.  v0:= v0[v1];
  #L38327c.  v1:= 1I;
  #L38327e.  if v0 == v1 then goto L383302;
  #L383282.  v1:= 2I;
  #L383284.  if v0 != v1 then goto L3832d0;
  #L383288.  v0:= v3.`io.grpc.okhttp.OkHttpChannelBuilder.g` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L38328c.  if v0 != 0 then goto L3832b8;
  #L383290.  v0:= "Default" @kind object;
  #L383294.  call temp:= `e`() @signature `Lio/grpc/okhttp/internal/Platform;.e:()Lio/grpc/okhttp/internal/Platform;` @kind static;
  #L38329a.  v1:= temp @kind object;
  #L38329c.  call temp:= `g`(v1) @signature `Lio/grpc/okhttp/internal/Platform;.g:()Ljava/security/Provider;` @kind virtual;
  #L3832a2.  v1:= temp @kind object;
  #L3832a4.  call temp:= `getInstance`(v0, v1) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L3832aa.  v0:= temp @kind object;
  #L3832ac.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3832b2.  v0:= temp @kind object;
  #L3832b4.  v3.`io.grpc.okhttp.OkHttpChannelBuilder.g` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L3832b8.  v0:= v3.`io.grpc.okhttp.OkHttpChannelBuilder.g` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3832bc.  return v0 @kind object;
  #L3832be.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L3832c0.  v1:= new `java.lang.RuntimeException`;
  #L3832c4.  v2:= "TLS Provider failure" @kind object;
  #L3832c8.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3832ce.  throw v1;
  #L3832d0.  v0:= new `java.lang.RuntimeException`;
  #L3832d4.  v1:= new `java.lang.StringBuilder`;
  #L3832d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3832de.  v2:= "Unknown negotiation type: " @kind object;
  #L3832e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3832e8.  v2:= v3.`io.grpc.okhttp.OkHttpChannelBuilder.k` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` @kind object;
  #L3832ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3832f2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3832f8.  v1:= temp @kind object;
  #L3832fa.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L383300.  throw v0;
  #L383302.  v0:= 0I;
  #L383304.  return v0 @kind object;
  catch `java.security.GeneralSecurityException` @[L383288..L3832bc] goto L3832be;
}
procedure `int` `h`(`io.grpc.okhttp.OkHttpChannelBuilder` v3 @kind this) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.h:()I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L382fdc.  v0:= `@@io.grpc.okhttp.OkHttpChannelBuilder$b.b` @type ^`int`[] @kind object;
  #L382fe0.  v1:= v3.`io.grpc.okhttp.OkHttpChannelBuilder.k` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` @kind object;
  #L382fe4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L382fea.  v1:= temp;
  #L382fec.  v0:= v0[v1];
  #L382ff0.  v1:= 1I;
  #L382ff2.  if v0 == v1 then goto L383034;
  #L382ff6.  v1:= 2I;
  #L382ff8.  if v0 != v1 then goto L383002;
  #L382ffc.  v0:= 443I;
  #L383000.  return v0;
  #L383002.  v0:= new `java.lang.AssertionError`;
  #L383006.  v1:= new `java.lang.StringBuilder`;
  #L38300a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L383010.  v2:= v3.`io.grpc.okhttp.OkHttpChannelBuilder.k` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` @kind object;
  #L383014.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38301a.  v2:= " not handled" @kind object;
  #L38301e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383024.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38302a.  v1:= temp @kind object;
  #L38302c.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L383032.  throw v0;
  #L383034.  v0:= 80I;
  #L383038.  return v0;
}
procedure `io.grpc.okhttp.OkHttpChannelBuilder` `i`(`io.grpc.okhttp.OkHttpChannelBuilder` v3 @kind this, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.i:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/okhttp/OkHttpChannelBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3830b8.  v0:= 0L;
  #L3830bc.  v2:= lcmp(v4, v0);
  #L3830c0.  if v2 <= 0 then goto L3830c8;
  #L3830c4.  v0:= 1I;
  #L3830c6.  goto L3830ca;
  #L3830c8.  v0:= 0I;
  #L3830ca.  v1:= "keepalive time must be positive" @kind object;
  #L3830ce.  call `checkArgument`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L3830d4.  call temp:= `toNanos`(v6, v4) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L3830da.  v4:= temp @kind wide;
  #L3830dc.  v3.`io.grpc.okhttp.OkHttpChannelBuilder.l` @type ^`long` := v4 @kind wide;
  #L3830e0.  call temp:= `l`(v4) @signature `Lio/grpc/internal/KeepAliveManager;.l:(J)J` @kind static;
  #L3830e6.  v4:= temp @kind wide;
  #L3830e8.  v3.`io.grpc.okhttp.OkHttpChannelBuilder.l` @type ^`long` := v4 @kind wide;
  #L3830ec.  v0:= `@@io.grpc.okhttp.OkHttpChannelBuilder.t` @type ^`long` @kind wide;
  #L3830f0.  v6:= lcmp(v4, v0);
  #L3830f4.  if v6 < 0 then goto L383106;
  #L3830f8.  v4:= 9223372036854775807L;
  #L383102.  v3.`io.grpc.okhttp.OkHttpChannelBuilder.l` @type ^`long` := v4 @kind wide;
  #L383106.  return v3 @kind object;
}
procedure `io.grpc.okhttp.OkHttpChannelBuilder` `j`(`io.grpc.okhttp.OkHttpChannelBuilder` v2 @kind this) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.j:()Lio/grpc/okhttp/OkHttpChannelBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3831a8.  v0:= v2.`io.grpc.okhttp.OkHttpChannelBuilder.h` @type ^`boolean` @kind boolean;
  #L3831ac.  v0:= v0 ^~ 1;
  #L3831b0.  v1:= "Cannot change security when using ChannelCredentials" @kind object;
  #L3831b4.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L3831ba.  v0:= `@@io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType.b` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` @kind object;
  #L3831be.  v2.`io.grpc.okhttp.OkHttpChannelBuilder.k` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` := v0 @kind object;
  #L3831c2.  return v2 @kind object;
}
procedure `io.grpc.okhttp.OkHttpChannelBuilder` `scheduledExecutorService`(`io.grpc.okhttp.OkHttpChannelBuilder` v2 @kind this, `java.util.concurrent.ScheduledExecutorService` v3 @kind object) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.scheduledExecutorService:(Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/okhttp/OkHttpChannelBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L383118.  v0:= new `io.grpc.internal.d0`;
  #L38311c.  v1:= "scheduledExecutorService" @kind object;
  #L383120.  call temp:= `checkNotNull`(v3, v1) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L383126.  v3:= temp @kind object;
  #L383128.  v3:= (`java.util.concurrent.ScheduledExecutorService`) v3 @kind object;
  #L38312c.  call `<init>`(v0, v3) @signature `Lio/grpc/internal/d0;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L383132.  v2.`io.grpc.okhttp.OkHttpChannelBuilder.e` @type ^`io.grpc.internal.g1` := v0 @kind object;
  #L383136.  return v2 @kind object;
}
procedure `io.grpc.okhttp.OkHttpChannelBuilder` `sslSocketFactory`(`io.grpc.okhttp.OkHttpChannelBuilder` v2 @kind this, `javax.net.ssl.SSLSocketFactory` v3 @kind object) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.sslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)Lio/grpc/okhttp/OkHttpChannelBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L383148.  v0:= v2.`io.grpc.okhttp.OkHttpChannelBuilder.h` @type ^`boolean` @kind boolean;
  #L38314c.  v0:= v0 ^~ 1;
  #L383150.  v1:= "Cannot change security when using ChannelCredentials" @kind object;
  #L383154.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L38315a.  v2.`io.grpc.okhttp.OkHttpChannelBuilder.g` @type ^`javax.net.ssl.SSLSocketFactory` := v3 @kind object;
  #L38315e.  v3:= `@@io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType.a` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` @kind object;
  #L383162.  v2.`io.grpc.okhttp.OkHttpChannelBuilder.k` @type ^`io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType` := v3 @kind object;
  #L383166.  return v2 @kind object;
}
procedure `io.grpc.okhttp.OkHttpChannelBuilder` `transportExecutor`(`io.grpc.okhttp.OkHttpChannelBuilder` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object) @signature `Lio/grpc/okhttp/OkHttpChannelBuilder;.transportExecutor:(Ljava/util/concurrent/Executor;)Lio/grpc/okhttp/OkHttpChannelBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L383178.  if v2 != 0 then goto L383186;
  #L38317c.  v2:= `@@io.grpc.okhttp.OkHttpChannelBuilder.v` @type ^`io.grpc.internal.g1` @kind object;
  #L383180.  v1.`io.grpc.okhttp.OkHttpChannelBuilder.d` @type ^`io.grpc.internal.g1` := v2 @kind object;
  #L383184.  goto L383194;
  #L383186.  v0:= new `io.grpc.internal.d0`;
  #L38318a.  call `<init>`(v0, v2) @signature `Lio/grpc/internal/d0;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L383190.  v1.`io.grpc.okhttp.OkHttpChannelBuilder.d` @type ^`io.grpc.internal.g1` := v0 @kind object;
  #L383194.  return v1 @kind object;
}
