record `io.grpc.okhttp.m$c` @kind class @AccessFlag PUBLIC_FINAL {
  `okio.c` `io.grpc.okhttp.m$c.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `io.grpc.okhttp.m$c.b` @AccessFlag PRIVATE;
  `int` `io.grpc.okhttp.m$c.c` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.okhttp.m$c.d` @AccessFlag PRIVATE;
  `int` `io.grpc.okhttp.m$c.e` @AccessFlag PRIVATE;
  `io.grpc.okhttp.m$b` `io.grpc.okhttp.m$c.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.okhttp.m$c.g` @AccessFlag PRIVATE;
  `io.grpc.okhttp.m` `io.grpc.okhttp.m$c.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.okhttp.m$c` v0 @kind this, `io.grpc.okhttp.m` v1 @kind object, `int` v2 , `int` v3 , `io.grpc.okhttp.m$b` v4 @kind object) @signature `Lio/grpc/okhttp/m$c;.<init>:(Lio/grpc/okhttp/m;IILio/grpc/okhttp/m$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L388028.  v0.`io.grpc.okhttp.m$c.h` @type ^`io.grpc.okhttp.m` := v1 @kind object;
  #L38802c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L388032.  v1:= new `okio.c`;
  #L388036.  call `<init>`(v1) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L38803c.  v0.`io.grpc.okhttp.m$c.a` @type ^`okio.c` := v1 @kind object;
  #L388040.  v1:= 0I;
  #L388042.  v0.`io.grpc.okhttp.m$c.g` @type ^`boolean` := v1 @kind boolean;
  #L388046.  v0.`io.grpc.okhttp.m$c.c` @type ^`int` := v2;
  #L38804a.  v0.`io.grpc.okhttp.m$c.d` @type ^`int` := v3;
  #L38804e.  v0.`io.grpc.okhttp.m$c.f` @type ^`io.grpc.okhttp.m$b` := v4 @kind object;
  #L388052.  return @kind void;
}
procedure `void` `a`(`io.grpc.okhttp.m$c` v1 @kind this, `int` v2 ) @signature `Lio/grpc/okhttp/m$c;.a:(I)V` @AccessFlag  {
    temp;
    v0;

  #L388064.  v0:= v1.`io.grpc.okhttp.m$c.e` @type ^`int`;
  #L388068.  v0:= v0 + v2 @kind int;
  #L38806a.  v1.`io.grpc.okhttp.m$c.e` @type ^`int` := v0;
  #L38806e.  return @kind void;
}
procedure `int` `b`(`io.grpc.okhttp.m$c` v1 @kind this) @signature `Lio/grpc/okhttp/m$c;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L387e48.  v0:= v1.`io.grpc.okhttp.m$c.e` @type ^`int`;
  #L387e4c.  return v0;
}
procedure `void` `c`(`io.grpc.okhttp.m$c` v1 @kind this) @signature `Lio/grpc/okhttp/m$c;.c:()V` @AccessFlag  {
    temp;
    v0;

  #L388080.  v0:= 0I;
  #L388082.  v1.`io.grpc.okhttp.m$c.e` @type ^`int` := v0;
  #L388086.  return @kind void;
}
procedure `void` `d`(`io.grpc.okhttp.m$c` v3 @kind this, `okio.c` v4 @kind object, `int` v5 , `boolean` v6 ) @signature `Lio/grpc/okhttp/m$c;.d:(Lokio/c;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L388098.  v0:= v3.`io.grpc.okhttp.m$c.a` @type ^`okio.c` @kind object;
  #L38809c.  v1:= (`long`) v5 @kind i2l;
  #L38809e.  call `A`(v0, v4, v1) @signature `Lokio/c;.A:(Lokio/c;J)V` @kind virtual;
  #L3880a4.  v4:= v3.`io.grpc.okhttp.m$c.g` @type ^`boolean` @kind boolean;
  #L3880a8.  v4:= v4 ^| v6 @kind int;
  #L3880aa.  v3.`io.grpc.okhttp.m$c.g` @type ^`boolean` := v4 @kind boolean;
  #L3880ae.  return @kind void;
}
procedure `boolean` `e`(`io.grpc.okhttp.m$c` v5 @kind this) @signature `Lio/grpc/okhttp/m$c;.e:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L387e18.  v0:= v5.`io.grpc.okhttp.m$c.a` @type ^`okio.c` @kind object;
  #L387e1c.  call temp:= `g0`(v0) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L387e22.  v0:= temp @kind wide;
  #L387e24.  v2:= 0L;
  #L387e28.  v4:= lcmp(v0, v2);
  #L387e2c.  if v4 <= 0 then goto L387e34;
  #L387e30.  v0:= 1I;
  #L387e32.  goto L387e36;
  #L387e34.  v0:= 0I;
  #L387e36.  return v0;
}
procedure `int` `f`(`io.grpc.okhttp.m$c` v2 @kind this, `int` v3 ) @signature `Lio/grpc/okhttp/m$c;.f:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L387e60.  if v3 <= 0 then goto L387ea8;
  #L387e64.  v0:= 2147483647I;
  #L387e6a.  v0:= v0 - v3 @kind int;
  #L387e6c.  v1:= v2.`io.grpc.okhttp.m$c.d` @type ^`int`;
  #L387e70.  if v0 < v1 then goto L387e76;
  #L387e74.  goto L387ea8;
  #L387e76.  v3:= new `java.lang.IllegalArgumentException`;
  #L387e7a.  v0:= new `java.lang.StringBuilder`;
  #L387e7e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L387e84.  v1:= "Window size overflow for stream: " @kind object;
  #L387e88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L387e8e.  v1:= v2.`io.grpc.okhttp.m$c.c` @type ^`int`;
  #L387e92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L387e98.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L387e9e.  v0:= temp @kind object;
  #L387ea0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L387ea6.  throw v3;
  #L387ea8.  v0:= v2.`io.grpc.okhttp.m$c.d` @type ^`int`;
  #L387eac.  v0:= v0 + v3 @kind int;
  #L387eae.  v2.`io.grpc.okhttp.m$c.d` @type ^`int` := v0;
  #L387eb2.  return v0;
}
procedure `int` `g`(`io.grpc.okhttp.m$c` v3 @kind this) @signature `Lio/grpc/okhttp/m$c;.g:()I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L387ec4.  v0:= v3.`io.grpc.okhttp.m$c.d` @type ^`int`;
  #L387ec8.  v1:= v3.`io.grpc.okhttp.m$c.a` @type ^`okio.c` @kind object;
  #L387ecc.  call temp:= `g0`(v1) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L387ed2.  v1:= temp @kind wide;
  #L387ed4.  v2:= (`int`) v1 @kind l2i;
  #L387ed6.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L387edc.  v0:= temp;
  #L387ede.  v1:= 0I;
  #L387ee0.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L387ee6.  v0:= temp;
  #L387ee8.  return v0;
}
procedure `int` `h`(`io.grpc.okhttp.m$c` v2 @kind this) @signature `Lio/grpc/okhttp/m$c;.h:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L387efc.  call temp:= `g`(v2) @signature `Lio/grpc/okhttp/m$c;.g:()I` @kind virtual;
  #L387f02.  v0:= temp;
  #L387f04.  v1:= v2.`io.grpc.okhttp.m$c.e` @type ^`int`;
  #L387f08.  v0:= v0 - v1 @kind int;
  #L387f0a.  return v0;
}
procedure `int` `i`(`io.grpc.okhttp.m$c` v1 @kind this) @signature `Lio/grpc/okhttp/m$c;.i:()I` @AccessFlag  {
    temp;
    v0;

  #L387f1c.  v0:= v1.`io.grpc.okhttp.m$c.d` @type ^`int`;
  #L387f20.  return v0;
}
procedure `int` `j`(`io.grpc.okhttp.m$c` v2 @kind this) @signature `Lio/grpc/okhttp/m$c;.j:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L387f34.  v0:= v2.`io.grpc.okhttp.m$c.d` @type ^`int`;
  #L387f38.  v1:= v2.`io.grpc.okhttp.m$c.h` @type ^`io.grpc.okhttp.m` @kind object;
  #L387f3c.  call temp:= `a`(v1) @signature `Lio/grpc/okhttp/m;.a:(Lio/grpc/okhttp/m;)Lio/grpc/okhttp/m$c;` @kind static;
  #L387f42.  v1:= temp @kind object;
  #L387f44.  call temp:= `i`(v1) @signature `Lio/grpc/okhttp/m$c;.i:()I` @kind virtual;
  #L387f4a.  v1:= temp;
  #L387f4c.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L387f52.  v0:= temp;
  #L387f54.  return v0;
}
procedure `void` `k`(`io.grpc.okhttp.m$c` v6 @kind this, `okio.c` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lio/grpc/okhttp/m$c;.k:(Lokio/c;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3880c0.  v0:= v6.`io.grpc.okhttp.m$c.h` @type ^`io.grpc.okhttp.m` @kind object;
  #L3880c4.  call temp:= `b`(v0) @signature `Lio/grpc/okhttp/m;.b:(Lio/grpc/okhttp/m;)Lw1/b;` @kind static;
  #L3880ca.  v0:= temp @kind object;
  #L3880cc.  call temp:= `L`(v0) @signature `Lw1/b;.L:()I` @kind interface;
  #L3880d2.  v0:= temp;
  #L3880d4.  call temp:= `min`(v8, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3880da.  v0:= temp;
  #L3880dc.  v1:= v6.`io.grpc.okhttp.m$c.h` @type ^`io.grpc.okhttp.m` @kind object;
  #L3880e0.  call temp:= `a`(v1) @signature `Lio/grpc/okhttp/m;.a:(Lio/grpc/okhttp/m;)Lio/grpc/okhttp/m$c;` @kind static;
  #L3880e6.  v1:= temp @kind object;
  #L3880e8.  v2:= -v0 @kind int;
  #L3880ea.  call temp:= `f`(v1, v2) @signature `Lio/grpc/okhttp/m$c;.f:(I)I` @kind virtual;
  #L3880f0.  call temp:= `f`(v6, v2) @signature `Lio/grpc/okhttp/m$c;.f:(I)I` @kind virtual;
  #L3880f6.  call temp:= `g0`(v7) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L3880fc.  v1:= temp @kind wide;
  #L3880fe.  v3:= (`long`) v0 @kind i2l;
  #L388100.  v5:= lcmp(v1, v3);
  #L388104.  if v5 != 0 then goto L388110;
  #L388108.  if v9 == 0 then goto L388110;
  #L38810c.  v1:= 1I;
  #L38810e.  goto L388112;
  #L388110.  v1:= 0I;
  #L388112.  v2:= v6.`io.grpc.okhttp.m$c.h` @type ^`io.grpc.okhttp.m` @kind object;
  #L388116.  call temp:= `b`(v2) @signature `Lio/grpc/okhttp/m;.b:(Lio/grpc/okhttp/m;)Lw1/b;` @kind static;
  #L38811c.  v2:= temp @kind object;
  #L38811e.  v3:= v6.`io.grpc.okhttp.m$c.c` @type ^`int`;
  #L388122.  call `p`(v2, v1, v3, v7, v0) @signature `Lw1/b;.p:(ZILokio/c;I)V` @kind interface;
  #L388128.  v1:= v6.`io.grpc.okhttp.m$c.f` @type ^`io.grpc.okhttp.m$b` @kind object;
  #L38812c.  call `b`(v1, v0) @signature `Lio/grpc/okhttp/m$b;.b:(I)V` @kind interface;
  #L388132.  v8:= v8 - v0 @kind int;
  #L388134.  if v8 > 0 then goto L3880c0;
  #L388138.  return @kind void;
  #L38813a.  v7:= Exception @type ^`java.io.IOException` @kind object;
  #L38813c.  v8:= new `java.lang.RuntimeException`;
  #L388140.  call `<init>`(v8, v7) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L388146.  throw v8;
  catch `java.io.IOException` @[L3880f6..L388128] goto L38813a;
}
procedure `int` `l`(`io.grpc.okhttp.m$c` v8 @kind this, `int` v9 , `io.grpc.okhttp.m$e` v10 @kind object) @signature `Lio/grpc/okhttp/m$c;.l:(ILio/grpc/okhttp/m$e;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L387f68.  call temp:= `j`(v8) @signature `Lio/grpc/okhttp/m$c;.j:()I` @kind virtual;
  #L387f6e.  v0:= temp;
  #L387f70.  call temp:= `min`(v9, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L387f76.  v0:= temp;
  #L387f78.  v1:= 0I;
  #L387f7a.  v2:= 0I;
  #L387f7c.  call temp:= `e`(v8) @signature `Lio/grpc/okhttp/m$c;.e:()Z` @kind virtual;
  #L387f82.  v3:= temp;
  #L387f84.  if v3 == 0 then goto L387ff4;
  #L387f88.  if v0 <= 0 then goto L387ff4;
  #L387f8c.  v3:= (`long`) v0 @kind i2l;
  #L387f8e.  v5:= v8.`io.grpc.okhttp.m$c.a` @type ^`okio.c` @kind object;
  #L387f92.  call temp:= `g0`(v5) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L387f98.  v5:= temp @kind wide;
  #L387f9a.  v7:= lcmp(v3, v5);
  #L387f9e.  if v7 < 0 then goto L387fcc;
  #L387fa2.  v0:= v8.`io.grpc.okhttp.m$c.a` @type ^`okio.c` @kind object;
  #L387fa6.  call temp:= `g0`(v0) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L387fac.  v3:= temp @kind wide;
  #L387fae.  v0:= (`int`) v3 @kind l2i;
  #L387fb0.  v2:= v2 + v0 @kind int;
  #L387fb2.  v0:= v8.`io.grpc.okhttp.m$c.a` @type ^`okio.c` @kind object;
  #L387fb6.  call temp:= `g0`(v0) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L387fbc.  v3:= temp @kind wide;
  #L387fbe.  v4:= (`int`) v3 @kind l2i;
  #L387fc0.  v3:= v8.`io.grpc.okhttp.m$c.g` @type ^`boolean` @kind boolean;
  #L387fc4.  call `k`(v8, v0, v4, v3) @signature `Lio/grpc/okhttp/m$c;.k:(Lokio/c;IZ)V` @kind virtual;
  #L387fca.  goto L387fd8;
  #L387fcc.  v2:= v2 + v0 @kind int;
  #L387fce.  v3:= v8.`io.grpc.okhttp.m$c.a` @type ^`okio.c` @kind object;
  #L387fd2.  call `k`(v8, v3, v0, v1) @signature `Lio/grpc/okhttp/m$c;.k:(Lokio/c;IZ)V` @kind virtual;
  #L387fd8.  call `b`(v10) @signature `Lio/grpc/okhttp/m$e;.b:()V` @kind virtual;
  #L387fde.  v0:= v9 - v2 @kind int;
  #L387fe2.  call temp:= `j`(v8) @signature `Lio/grpc/okhttp/m$c;.j:()I` @kind virtual;
  #L387fe8.  v3:= temp;
  #L387fea.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L387ff0.  v0:= temp;
  #L387ff2.  goto L387f7c;
  #L387ff4.  call temp:= `e`(v8) @signature `Lio/grpc/okhttp/m$c;.e:()Z` @kind virtual;
  #L387ffa.  v9:= temp;
  #L387ffc.  if v9 != 0 then goto L388014;
  #L388000.  v9:= v8.`io.grpc.okhttp.m$c.b` @type ^`java.lang.Runnable` @kind object;
  #L388004.  if v9 == 0 then goto L388014;
  #L388008.  call `run`(v9) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L38800e.  v9:= 0I;
  #L388010.  v8.`io.grpc.okhttp.m$c.b` @type ^`java.lang.Runnable` := v9 @kind object;
  #L388014.  return v2;
}
