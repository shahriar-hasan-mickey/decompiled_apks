record `io.grpc.okhttp.a$b` @kind class @AccessFlag  extends `io.grpc.okhttp.a$e` @kind class {
  `a2.b` `io.grpc.okhttp.a$b.b` @AccessFlag FINAL;
  `io.grpc.okhttp.a` `io.grpc.okhttp.a$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.okhttp.a$b` v1 @kind this, `io.grpc.okhttp.a` v2 @kind object) @signature `Lio/grpc/okhttp/a$b;.<init>:(Lio/grpc/okhttp/a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L381abc.  v1.`io.grpc.okhttp.a$b.c` @type ^`io.grpc.okhttp.a` := v2 @kind object;
  #L381ac0.  v0:= 0I;
  #L381ac2.  call `<init>`(v1, v2, v0) @signature `Lio/grpc/okhttp/a$e;.<init>:(Lio/grpc/okhttp/a;Lio/grpc/okhttp/a$a;)V` @kind direct;
  #L381ac8.  call temp:= `e`() @signature `La2/c;.e:()La2/b;` @kind static;
  #L381ace.  v2:= temp @kind object;
  #L381ad0.  v1.`io.grpc.okhttp.a$b.b` @type ^`a2.b` := v2 @kind object;
  #L381ad4.  return @kind void;
}
procedure `void` `a`(`io.grpc.okhttp.a$b` v5 @kind this) @signature `Lio/grpc/okhttp/a$b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L381ae8.  v0:= "WriteRunnable.runFlush" @kind object;
  #L381aec.  call `f`(v0) @signature `La2/c;.f:(Ljava/lang/String;)V` @kind static;
  #L381af2.  v0:= v5.`io.grpc.okhttp.a$b.b` @type ^`a2.b` @kind object;
  #L381af6.  call `d`(v0) @signature `La2/c;.d:(La2/b;)V` @kind static;
  #L381afc.  v0:= new `okio.c`;
  #L381b00.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L381b06.  v1:= v5.`io.grpc.okhttp.a$b.c` @type ^`io.grpc.okhttp.a` @kind object;
  #L381b0a.  call temp:= `g`(v1) @signature `Lio/grpc/okhttp/a;.g:(Lio/grpc/okhttp/a;)Ljava/lang/Object;` @kind static;
  #L381b10.  v1:= temp @kind object;
  #L381b12.  @monitorenter v1
  #L381b14.  v2:= v5.`io.grpc.okhttp.a$b.c` @type ^`io.grpc.okhttp.a` @kind object;
  #L381b18.  call temp:= `h`(v2) @signature `Lio/grpc/okhttp/a;.h:(Lio/grpc/okhttp/a;)Lokio/c;` @kind static;
  #L381b1e.  v2:= temp @kind object;
  #L381b20.  v3:= v5.`io.grpc.okhttp.a$b.c` @type ^`io.grpc.okhttp.a` @kind object;
  #L381b24.  call temp:= `h`(v3) @signature `Lio/grpc/okhttp/a;.h:(Lio/grpc/okhttp/a;)Lokio/c;` @kind static;
  #L381b2a.  v3:= temp @kind object;
  #L381b2c.  call temp:= `g0`(v3) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L381b32.  v3:= temp @kind wide;
  #L381b34.  call `A`(v0, v2, v3) @signature `Lokio/c;.A:(Lokio/c;J)V` @kind virtual;
  #L381b3a.  v2:= v5.`io.grpc.okhttp.a$b.c` @type ^`io.grpc.okhttp.a` @kind object;
  #L381b3e.  v3:= 0I;
  #L381b40.  call temp:= `U`(v2, v3) @signature `Lio/grpc/okhttp/a;.U:(Lio/grpc/okhttp/a;Z)Z` @kind static;
  #L381b46.  @monitorexit v1
  #L381b48.  v1:= v5.`io.grpc.okhttp.a$b.c` @type ^`io.grpc.okhttp.a` @kind object;
  #L381b4c.  call temp:= `T`(v1) @signature `Lio/grpc/okhttp/a;.T:(Lio/grpc/okhttp/a;)Lokio/p;` @kind static;
  #L381b52.  v1:= temp @kind object;
  #L381b54.  call temp:= `g0`(v0) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L381b5a.  v2:= temp @kind wide;
  #L381b5c.  call `A`(v1, v0, v2) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L381b62.  v0:= v5.`io.grpc.okhttp.a$b.c` @type ^`io.grpc.okhttp.a` @kind object;
  #L381b66.  call temp:= `T`(v0) @signature `Lio/grpc/okhttp/a;.T:(Lio/grpc/okhttp/a;)Lokio/p;` @kind static;
  #L381b6c.  v0:= temp @kind object;
  #L381b6e.  call `flush`(v0) @signature `Lokio/p;.flush:()V` @kind interface;
  #L381b74.  v0:= "WriteRunnable.runFlush" @kind object;
  #L381b78.  call `h`(v0) @signature `La2/c;.h:(Ljava/lang/String;)V` @kind static;
  #L381b7e.  return @kind void;
  #L381b80.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L381b82.  @monitorexit v1
  #L381b84.  throw v0;
  #L381b86.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L381b88.  v1:= "WriteRunnable.runFlush" @kind object;
  #L381b8c.  call `h`(v1) @signature `La2/c;.h:(Ljava/lang/String;)V` @kind static;
  #L381b92.  throw v0;
  catch `java.lang.Throwable` @[L381b06..L381b14] goto L381b86;
  catch `java.lang.Throwable` @[L381b14..L381b48] goto L381b80;
  catch `java.lang.Throwable` @[L381b48..L381b74] goto L381b86;
  catch `java.lang.Throwable` @[L381b82..L381b84] goto L381b80;
  catch `java.lang.Throwable` @[L381b84..L381b86] goto L381b86;
}
