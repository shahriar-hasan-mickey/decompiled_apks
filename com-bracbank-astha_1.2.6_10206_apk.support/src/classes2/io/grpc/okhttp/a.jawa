record `io.grpc.okhttp.a` @kind class @AccessFlag FINAL extends `okio.p` @kind interface {
  `java.lang.Object` `io.grpc.okhttp.a.a` @AccessFlag PRIVATE_FINAL;
  `okio.c` `io.grpc.okhttp.a.b` @AccessFlag PRIVATE_FINAL;
  `io.grpc.internal.u1` `io.grpc.okhttp.a.c` @AccessFlag PRIVATE_FINAL;
  `io.grpc.okhttp.b$a` `io.grpc.okhttp.a.d` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.okhttp.a.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.okhttp.a.f` @AccessFlag PRIVATE;
  `boolean` `io.grpc.okhttp.a.g` @AccessFlag PRIVATE;
  `boolean` `io.grpc.okhttp.a.h` @AccessFlag PRIVATE;
  `okio.p` `io.grpc.okhttp.a.i` @AccessFlag PRIVATE;
  `java.net.Socket` `io.grpc.okhttp.a.j` @AccessFlag PRIVATE;
  `boolean` `io.grpc.okhttp.a.k` @AccessFlag PRIVATE;
  `int` `io.grpc.okhttp.a.l` @AccessFlag PRIVATE;
  `int` `io.grpc.okhttp.a.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.grpc.okhttp.a` v1 @kind this, `io.grpc.internal.u1` v2 @kind object, `io.grpc.okhttp.b$a` v3 @kind object, `int` v4 ) @signature `Lio/grpc/okhttp/a;.<init>:(Lio/grpc/internal/u1;Lio/grpc/okhttp/b$a;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L381f74.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L381f7a.  v0:= new `java.lang.Object`;
  #L381f7e.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L381f84.  v1.`io.grpc.okhttp.a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L381f88.  v0:= new `okio.c`;
  #L381f8c.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L381f92.  v1.`io.grpc.okhttp.a.b` @type ^`okio.c` := v0 @kind object;
  #L381f96.  v0:= 0I;
  #L381f98.  v1.`io.grpc.okhttp.a.f` @type ^`boolean` := v0 @kind boolean;
  #L381f9c.  v1.`io.grpc.okhttp.a.g` @type ^`boolean` := v0 @kind boolean;
  #L381fa0.  v1.`io.grpc.okhttp.a.h` @type ^`boolean` := v0 @kind boolean;
  #L381fa4.  v0:= "executor" @kind object;
  #L381fa8.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L381fae.  v2:= temp @kind object;
  #L381fb0.  v2:= (`io.grpc.internal.u1`) v2 @kind object;
  #L381fb4.  v1.`io.grpc.okhttp.a.c` @type ^`io.grpc.internal.u1` := v2 @kind object;
  #L381fb8.  v2:= "exceptionHandler" @kind object;
  #L381fbc.  call temp:= `checkNotNull`(v3, v2) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L381fc2.  v2:= temp @kind object;
  #L381fc4.  v2:= (`io.grpc.okhttp.b$a`) v2 @kind object;
  #L381fc8.  v1.`io.grpc.okhttp.a.d` @type ^`io.grpc.okhttp.b$a` := v2 @kind object;
  #L381fcc.  v1.`io.grpc.okhttp.a.e` @type ^`int` := v4;
  #L381fd0.  return @kind void;
}
procedure `int` `K`(`io.grpc.okhttp.a` v0 @kind object) @signature `Lio/grpc/okhttp/a;.K:(Lio/grpc/okhttp/a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L381e74.  v0:= v0.`io.grpc.okhttp.a.m` @type ^`int`;
  #L381e78.  return v0;
}
procedure `int` `R`(`io.grpc.okhttp.a` v1 @kind object, `int` v2 ) @signature `Lio/grpc/okhttp/a;.R:(Lio/grpc/okhttp/a;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L381e8c.  v0:= v1.`io.grpc.okhttp.a.m` @type ^`int`;
  #L381e90.  v0:= v0 - v2 @kind int;
  #L381e92.  v1.`io.grpc.okhttp.a.m` @type ^`int` := v0;
  #L381e96.  return v0;
}
procedure `okio.p` `T`(`io.grpc.okhttp.a` v0 @kind object) @signature `Lio/grpc/okhttp/a;.T:(Lio/grpc/okhttp/a;)Lokio/p;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L381f44.  v0:= v0.`io.grpc.okhttp.a.i` @type ^`okio.p` @kind object;
  #L381f48.  return v0 @kind object;
}
procedure `boolean` `U`(`io.grpc.okhttp.a` v0 @kind object, `boolean` v1 ) @signature `Lio/grpc/okhttp/a;.U:(Lio/grpc/okhttp/a;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L381e5c.  v0.`io.grpc.okhttp.a.g` @type ^`boolean` := v1 @kind boolean;
  #L381e60.  return v1;
}
procedure `io.grpc.okhttp.b$a` `V`(`io.grpc.okhttp.a` v0 @kind object) @signature `Lio/grpc/okhttp/a;.V:(Lio/grpc/okhttp/a;)Lio/grpc/okhttp/b$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L381ee4.  v0:= v0.`io.grpc.okhttp.a.d` @type ^`io.grpc.okhttp.b$a` @kind object;
  #L381ee8.  return v0 @kind object;
}
procedure `java.net.Socket` `W`(`io.grpc.okhttp.a` v0 @kind object) @signature `Lio/grpc/okhttp/a;.W:(Lio/grpc/okhttp/a;)Ljava/net/Socket;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L381f14.  v0:= v0.`io.grpc.okhttp.a.j` @type ^`java.net.Socket` @kind object;
  #L381f18.  return v0 @kind object;
}
procedure `int` `X`(`io.grpc.okhttp.a` v2 @kind object) @signature `Lio/grpc/okhttp/a;.X:(Lio/grpc/okhttp/a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L381ea8.  v0:= v2.`io.grpc.okhttp.a.l` @type ^`int`;
  #L381eac.  v1:= v0 + 1;
  #L381eb0.  v2.`io.grpc.okhttp.a.l` @type ^`int` := v1;
  #L381eb4.  return v0;
}
procedure `io.grpc.okhttp.a` `a0`(`io.grpc.internal.u1` v1 @kind object, `io.grpc.okhttp.b$a` v2 @kind object, `int` v3 ) @signature `Lio/grpc/okhttp/a;.a0:(Lio/grpc/internal/u1;Lio/grpc/okhttp/b$a;I)Lio/grpc/okhttp/a;` @AccessFlag STATIC {
    temp;
    v0;

  #L381ec8.  v0:= new `io.grpc.okhttp.a`;
  #L381ecc.  call `<init>`(v0, v1, v2, v3) @signature `Lio/grpc/okhttp/a;.<init>:(Lio/grpc/internal/u1;Lio/grpc/okhttp/b$a;I)V` @kind direct;
  #L381ed2.  return v0 @kind object;
}
procedure `java.lang.Object` `g`(`io.grpc.okhttp.a` v0 @kind object) @signature `Lio/grpc/okhttp/a;.g:(Lio/grpc/okhttp/a;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L381efc.  v0:= v0.`io.grpc.okhttp.a.a` @type ^`java.lang.Object` @kind object;
  #L381f00.  return v0 @kind object;
}
procedure `okio.c` `h`(`io.grpc.okhttp.a` v0 @kind object) @signature `Lio/grpc/okhttp/a;.h:(Lio/grpc/okhttp/a;)Lokio/c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L381f2c.  v0:= v0.`io.grpc.okhttp.a.b` @type ^`okio.c` @kind object;
  #L381f30.  return v0 @kind object;
}
procedure `boolean` `s`(`io.grpc.okhttp.a` v0 @kind object, `boolean` v1 ) @signature `Lio/grpc/okhttp/a;.s:(Lio/grpc/okhttp/a;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L381e44.  v0.`io.grpc.okhttp.a.f` @type ^`boolean` := v1 @kind boolean;
  #L381e48.  return v1;
}
procedure `void` `A`(`io.grpc.okhttp.a` v6 @kind this, `okio.c` v7 @kind object, `long` v8 ) @signature `Lio/grpc/okhttp/a;.A:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L382134.  v0:= "source" @kind object;
  #L382138.  call temp:= `checkNotNull`(v7, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38213e.  v0:= v6.`io.grpc.okhttp.a.h` @type ^`boolean` @kind boolean;
  #L382142.  if v0 != 0 then goto L38221e;
  #L382146.  v0:= "AsyncSink.write" @kind object;
  #L38214a.  call `f`(v0) @signature `La2/c;.f:(Ljava/lang/String;)V` @kind static;
  #L382150.  v0:= v6.`io.grpc.okhttp.a.a` @type ^`java.lang.Object` @kind object;
  #L382154.  @monitorenter v0
  #L382156.  v1:= v6.`io.grpc.okhttp.a.b` @type ^`okio.c` @kind object;
  #L38215a.  call `A`(v1, v7, v8) @signature `Lokio/c;.A:(Lokio/c;J)V` @kind virtual;
  #L382160.  v7:= v6.`io.grpc.okhttp.a.m` @type ^`int`;
  #L382164.  v8:= v6.`io.grpc.okhttp.a.l` @type ^`int`;
  #L382168.  v7:= v7 + v8 @kind int;
  #L38216a.  v6.`io.grpc.okhttp.a.m` @type ^`int` := v7;
  #L38216e.  v8:= 0I;
  #L382170.  v6.`io.grpc.okhttp.a.l` @type ^`int` := v8;
  #L382174.  v9:= v6.`io.grpc.okhttp.a.k` @type ^`boolean` @kind boolean;
  #L382178.  v1:= 1I;
  #L38217a.  if v9 != 0 then goto L38218e;
  #L38217e.  v9:= v6.`io.grpc.okhttp.a.e` @type ^`int`;
  #L382182.  if v7 <= v9 then goto L38218e;
  #L382186.  v6.`io.grpc.okhttp.a.k` @type ^`boolean` := v1 @kind boolean;
  #L38218a.  v8:= 1I;
  #L38218c.  goto L3821bc;
  #L38218e.  v7:= v6.`io.grpc.okhttp.a.f` @type ^`boolean` @kind boolean;
  #L382192.  if v7 != 0 then goto L382206;
  #L382196.  v7:= v6.`io.grpc.okhttp.a.g` @type ^`boolean` @kind boolean;
  #L38219a.  if v7 != 0 then goto L382206;
  #L38219e.  v7:= v6.`io.grpc.okhttp.a.b` @type ^`okio.c` @kind object;
  #L3821a2.  call temp:= `R`(v7) @signature `Lokio/c;.R:()J` @kind virtual;
  #L3821a8.  v2:= temp @kind wide;
  #L3821aa.  v4:= 0L;
  #L3821ae.  v7:= lcmp(v2, v4);
  #L3821b2.  if v7 > 0 then goto L3821b8;
  #L3821b6.  goto L382206;
  #L3821b8.  v6.`io.grpc.okhttp.a.f` @type ^`boolean` := v1 @kind boolean;
  #L3821bc.  @monitorexit v0
  #L3821be.  if v8 == 0 then goto L3821e6;
  #L3821c2.  v7:= v6.`io.grpc.okhttp.a.j` @type ^`java.net.Socket` @kind object;
  #L3821c6.  call `close`(v7) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L3821cc.  goto L3821da;
  #L3821ce.  v7:= Exception @type ^`java.io.IOException` @kind object;
  #L3821d0.  v8:= v6.`io.grpc.okhttp.a.d` @type ^`io.grpc.okhttp.b$a` @kind object;
  #L3821d4.  call `f`(v8, v7) @signature `Lio/grpc/okhttp/b$a;.f:(Ljava/lang/Throwable;)V` @kind interface;
  #L3821da.  v7:= "AsyncSink.write" @kind object;
  #L3821de.  call `h`(v7) @signature `La2/c;.h:(Ljava/lang/String;)V` @kind static;
  #L3821e4.  return @kind void;
  #L3821e6.  v7:= v6.`io.grpc.okhttp.a.c` @type ^`io.grpc.internal.u1` @kind object;
  #L3821ea.  v8:= new `io.grpc.okhttp.a$a`;
  #L3821ee.  call `<init>`(v8, v6) @signature `Lio/grpc/okhttp/a$a;.<init>:(Lio/grpc/okhttp/a;)V` @kind direct;
  #L3821f4.  call `execute`(v7, v8) @signature `Lio/grpc/internal/u1;.execute:(Ljava/lang/Runnable;)V` @kind virtual;
  #L3821fa.  v7:= "AsyncSink.write" @kind object;
  #L3821fe.  call `h`(v7) @signature `La2/c;.h:(Ljava/lang/String;)V` @kind static;
  #L382204.  return @kind void;
  #L382206.  @monitorexit v0
  #L382208.  goto L3821da;
  #L38220a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38220c.  @monitorexit v0
  #L38220e.  throw v7;
  #L382210.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L382212.  v8:= "AsyncSink.write" @kind object;
  #L382216.  call `h`(v8) @signature `La2/c;.h:(Ljava/lang/String;)V` @kind static;
  #L38221c.  throw v7;
  #L38221e.  v7:= new `java.io.IOException`;
  #L382222.  v8:= "closed" @kind object;
  #L382226.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38222c.  throw v7;
  catch `java.lang.Throwable` @[L382150..L382156] goto L382210;
  catch `java.lang.Throwable` @[L382156..L3821be] goto L38220a;
  catch `java.io.IOException` @[L3821c2..L3821cc] goto L3821ce;
  catch `java.lang.Throwable` @[L3821c2..L3821cc] goto L382210;
  catch `java.lang.Throwable` @[L3821d0..L3821da] goto L382210;
  catch `java.lang.Throwable` @[L3821e6..L3821fa] goto L382210;
  catch `java.lang.Throwable` @[L382206..L38220e] goto L38220a;
  catch `java.lang.Throwable` @[L38220e..L382210] goto L382210;
}
procedure `void` `Y`(`io.grpc.okhttp.a` v2 @kind this, `okio.p` v3 @kind object, `java.net.Socket` v4 @kind object) @signature `Lio/grpc/okhttp/a;.Y:(Lokio/p;Ljava/net/Socket;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L381fe4.  v0:= v2.`io.grpc.okhttp.a.i` @type ^`okio.p` @kind object;
  #L381fe8.  if v0 != 0 then goto L381ff0;
  #L381fec.  v0:= 1I;
  #L381fee.  goto L381ff2;
  #L381ff0.  v0:= 0I;
  #L381ff2.  v1:= "AsyncSink's becomeConnected should only be called once." @kind object;
  #L381ff6.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L381ffc.  v0:= "sink" @kind object;
  #L382000.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L382006.  v3:= temp @kind object;
  #L382008.  v3:= (`okio.p`) v3 @kind object;
  #L38200c.  v2.`io.grpc.okhttp.a.i` @type ^`okio.p` := v3 @kind object;
  #L382010.  v3:= "socket" @kind object;
  #L382014.  call temp:= `checkNotNull`(v4, v3) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38201a.  v3:= temp @kind object;
  #L38201c.  v3:= (`java.net.Socket`) v3 @kind object;
  #L382020.  v2.`io.grpc.okhttp.a.j` @type ^`java.net.Socket` := v3 @kind object;
  #L382024.  return @kind void;
}
procedure `w1.b` `Z`(`io.grpc.okhttp.a` v1 @kind this, `w1.b` v2 @kind object) @signature `Lio/grpc/okhttp/a;.Z:(Lw1/b;)Lw1/b;` @AccessFlag  {
    temp;
    v0;

  #L382284.  v0:= new `io.grpc.okhttp.a$d`;
  #L382288.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/okhttp/a$d;.<init>:(Lio/grpc/okhttp/a;Lw1/b;)V` @kind direct;
  #L38228e.  return v0 @kind object;
}
procedure `void` `close`(`io.grpc.okhttp.a` v2 @kind this) @signature `Lio/grpc/okhttp/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L382038.  v0:= v2.`io.grpc.okhttp.a.h` @type ^`boolean` @kind boolean;
  #L38203c.  if v0 == 0 then goto L382042;
  #L382040.  return @kind void;
  #L382042.  v0:= 1I;
  #L382044.  v2.`io.grpc.okhttp.a.h` @type ^`boolean` := v0 @kind boolean;
  #L382048.  v0:= v2.`io.grpc.okhttp.a.c` @type ^`io.grpc.internal.u1` @kind object;
  #L38204c.  v1:= new `io.grpc.okhttp.a$c`;
  #L382050.  call `<init>`(v1, v2) @signature `Lio/grpc/okhttp/a$c;.<init>:(Lio/grpc/okhttp/a;)V` @kind direct;
  #L382056.  call `execute`(v0, v1) @signature `Lio/grpc/internal/u1;.execute:(Ljava/lang/Runnable;)V` @kind virtual;
  #L38205c.  return @kind void;
}
procedure `okio.r` `e`(`io.grpc.okhttp.a` v1 @kind this) @signature `Lio/grpc/okhttp/a;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L381f5c.  v0:= `@@okio.r.d` @type ^`okio.r` @kind object;
  #L381f60.  return v0 @kind object;
}
procedure `void` `flush`(`io.grpc.okhttp.a` v2 @kind this) @signature `Lio/grpc/okhttp/a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L382070.  v0:= v2.`io.grpc.okhttp.a.h` @type ^`boolean` @kind boolean;
  #L382074.  if v0 != 0 then goto L3820da;
  #L382078.  v0:= "AsyncSink.flush" @kind object;
  #L38207c.  call `f`(v0) @signature `La2/c;.f:(Ljava/lang/String;)V` @kind static;
  #L382082.  v0:= v2.`io.grpc.okhttp.a.a` @type ^`java.lang.Object` @kind object;
  #L382086.  @monitorenter v0
  #L382088.  v1:= v2.`io.grpc.okhttp.a.g` @type ^`boolean` @kind boolean;
  #L38208c.  if v1 == 0 then goto L38209e;
  #L382090.  @monitorexit v0
  #L382092.  v0:= "AsyncSink.flush" @kind object;
  #L382096.  call `h`(v0) @signature `La2/c;.h:(Ljava/lang/String;)V` @kind static;
  #L38209c.  return @kind void;
  #L38209e.  v1:= 1I;
  #L3820a0.  v2.`io.grpc.okhttp.a.g` @type ^`boolean` := v1 @kind boolean;
  #L3820a4.  @monitorexit v0
  #L3820a6.  v0:= v2.`io.grpc.okhttp.a.c` @type ^`io.grpc.internal.u1` @kind object;
  #L3820aa.  v1:= new `io.grpc.okhttp.a$b`;
  #L3820ae.  call `<init>`(v1, v2) @signature `Lio/grpc/okhttp/a$b;.<init>:(Lio/grpc/okhttp/a;)V` @kind direct;
  #L3820b4.  call `execute`(v0, v1) @signature `Lio/grpc/internal/u1;.execute:(Ljava/lang/Runnable;)V` @kind virtual;
  #L3820ba.  v0:= "AsyncSink.flush" @kind object;
  #L3820be.  call `h`(v0) @signature `La2/c;.h:(Ljava/lang/String;)V` @kind static;
  #L3820c4.  return @kind void;
  #L3820c6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3820c8.  @monitorexit v0
  #L3820ca.  throw v1;
  #L3820cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3820ce.  v1:= "AsyncSink.flush" @kind object;
  #L3820d2.  call `h`(v1) @signature `La2/c;.h:(Ljava/lang/String;)V` @kind static;
  #L3820d8.  throw v0;
  #L3820da.  v0:= new `java.io.IOException`;
  #L3820de.  v1:= "closed" @kind object;
  #L3820e2.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3820e8.  throw v0;
  catch `java.lang.Throwable` @[L382082..L382088] goto L3820cc;
  catch `java.lang.Throwable` @[L382088..L382092] goto L3820c6;
  catch `java.lang.Throwable` @[L3820a0..L3820a6] goto L3820c6;
  catch `java.lang.Throwable` @[L3820a6..L3820ba] goto L3820cc;
  catch `java.lang.Throwable` @[L3820c8..L3820ca] goto L3820c6;
  catch `java.lang.Throwable` @[L3820ca..L3820cc] goto L3820cc;
}
