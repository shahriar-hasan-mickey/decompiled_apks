record `io.grpc.a0$c` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `io.grpc.a0$c.a` @AccessFlag PUBLIC_FINAL;
  `java.security.cert.Certificate` `io.grpc.a0$c.b` @AccessFlag PUBLIC_FINAL;
  `java.security.cert.Certificate` `io.grpc.a0$c.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`io.grpc.a0$c` v8 @kind this, `javax.net.ssl.SSLSession` v9 @kind object) @signature `Lio/grpc/a0$c;.<init>:(Ljavax/net/ssl/SSLSession;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L35f8cc.  call `<init>`(v8) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35f8d2.  call temp:= `getCipherSuite`(v9) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L35f8d8.  v0:= temp @kind object;
  #L35f8da.  call temp:= `getLocalCertificates`(v9) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L35f8e0.  v1:= temp @kind object;
  #L35f8e2.  v2:= 0I;
  #L35f8e4.  v3:= 0I;
  #L35f8e6.  if v1 == 0 then goto L35f8f0;
  #L35f8ea.  v1:= v1[v3] @kind object;
  #L35f8ee.  goto L35f8f2;
  #L35f8f0.  v1:= v2 @kind object;
  #L35f8f2.  call temp:= `getPeerCertificates`(v9) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L35f8f8.  v4:= temp @kind object;
  #L35f8fa.  if v4 == 0 then goto L35f938;
  #L35f8fe.  v9:= v4[v3] @kind object;
  #L35f902.  v2:= v9 @kind object;
  #L35f904.  goto L35f938;
  #L35f906.  v4:= Exception @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind object;
  #L35f908.  call temp:= `a`() @signature `Lio/grpc/a0;.a:()Ljava/util/logging/Logger;` @kind static;
  #L35f90e.  v5:= temp @kind object;
  #L35f910.  v6:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L35f914.  v7:= 1I;
  #L35f916.  v7:= new `java.lang.Object`[v7];
  #L35f91a.  call temp:= `getPeerHost`(v9) @signature `Ljavax/net/ssl/SSLSession;.getPeerHost:()Ljava/lang/String;` @kind interface;
  #L35f920.  v9:= temp @kind object;
  #L35f922.  v7[v3]:= v9 @kind object;
  #L35f926.  v9:= "Peer cert not available for peerHost=%s" @kind object;
  #L35f92a.  call temp:= `format`(v9, v7) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35f930.  v9:= temp @kind object;
  #L35f932.  call `log`(v5, v6, v9, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L35f938.  v8.`io.grpc.a0$c.a` @type ^`java.lang.String` := v0 @kind object;
  #L35f93c.  v8.`io.grpc.a0$c.b` @type ^`java.security.cert.Certificate` := v1 @kind object;
  #L35f940.  v8.`io.grpc.a0$c.c` @type ^`java.security.cert.Certificate` := v2 @kind object;
  #L35f944.  return @kind void;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L35f8f2..L35f902] goto L35f906;
}
