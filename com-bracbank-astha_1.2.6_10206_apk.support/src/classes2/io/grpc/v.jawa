record `io.grpc.v` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `io.grpc.v.a` @AccessFlag PRIVATE_FINAL;
  `io.grpc.a` `io.grpc.v.b` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.v.c` @AccessFlag PRIVATE_FINAL;
}
global `io.grpc.a$c` `@@io.grpc.v.d` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L35edc8.  v0:= "io.grpc.EquivalentAddressGroup.ATTR_AUTHORITY_OVERRIDE" @kind object;
  #L35edcc.  call temp:= `a`(v0) @signature `Lio/grpc/a$c;.a:(Ljava/lang/String;)Lio/grpc/a$c;` @kind static;
  #L35edd2.  v0:= temp @kind object;
  #L35edd4.  `@@io.grpc.v.d` @type ^`io.grpc.a$c` := v0 @kind object;
  #L35edd8.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.v` v1 @kind this, `java.net.SocketAddress` v2 @kind object) @signature `Lio/grpc/v;.<init>:(Ljava/net/SocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L35edec.  v0:= `@@io.grpc.a.c` @type ^`io.grpc.a` @kind object;
  #L35edf0.  call `<init>`(v1, v2, v0) @signature `Lio/grpc/v;.<init>:(Ljava/net/SocketAddress;Lio/grpc/a;)V` @kind direct;
  #L35edf6.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.v` v0 @kind this, `java.net.SocketAddress` v1 @kind object, `io.grpc.a` v2 @kind object) @signature `Lio/grpc/v;.<init>:(Ljava/net/SocketAddress;Lio/grpc/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L35ee08.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L35ee0e.  v1:= temp @kind object;
  #L35ee10.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/v;.<init>:(Ljava/util/List;Lio/grpc/a;)V` @kind direct;
  #L35ee16.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.v` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lio/grpc/v;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L35ee28.  v0:= `@@io.grpc.a.c` @type ^`io.grpc.a` @kind object;
  #L35ee2c.  call `<init>`(v1, v2, v0) @signature `Lio/grpc/v;.<init>:(Ljava/util/List;Lio/grpc/a;)V` @kind direct;
  #L35ee32.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.v` v2 @kind this, `java.util.List` v3 @kind object, `io.grpc.a` v4 @kind object) @signature `Lio/grpc/v;.<init>:(Ljava/util/List;Lio/grpc/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L35ee44.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35ee4a.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L35ee50.  v0:= temp;
  #L35ee52.  v0:= v0 ^~ 1;
  #L35ee56.  v1:= "addrs is empty" @kind object;
  #L35ee5a.  call `checkArgument`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L35ee60.  v0:= new `java.util.ArrayList`;
  #L35ee64.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L35ee6a.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L35ee70.  v3:= temp @kind object;
  #L35ee72.  v2.`io.grpc.v.a` @type ^`java.util.List` := v3 @kind object;
  #L35ee76.  v0:= "attrs" @kind object;
  #L35ee7a.  call temp:= `checkNotNull`(v4, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L35ee80.  v4:= temp @kind object;
  #L35ee82.  v4:= (`io.grpc.a`) v4 @kind object;
  #L35ee86.  v2.`io.grpc.v.b` @type ^`io.grpc.a` := v4 @kind object;
  #L35ee8a.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L35ee90.  v3:= temp;
  #L35ee92.  v2.`io.grpc.v.c` @type ^`int` := v3;
  #L35ee96.  return @kind void;
}
procedure `java.util.List` `a`(`io.grpc.v` v1 @kind this) @signature `Lio/grpc/v;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35edb0.  v0:= v1.`io.grpc.v.a` @type ^`java.util.List` @kind object;
  #L35edb4.  return v0 @kind object;
}
procedure `io.grpc.a` `b`(`io.grpc.v` v1 @kind this) @signature `Lio/grpc/v;.b:()Lio/grpc/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35ed40.  v0:= v1.`io.grpc.v.b` @type ^`io.grpc.a` @kind object;
  #L35ed44.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.grpc.v` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/grpc/v;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35ec8c.  v0:= instanceof @variable v5 @type ^`io.grpc.v` @kind boolean;
  #L35ec90.  v1:= 0I;
  #L35ec92.  if v0 != 0 then goto L35ec98;
  #L35ec96.  return v1;
  #L35ec98.  v5:= (`io.grpc.v`) v5 @kind object;
  #L35ec9c.  v0:= v4.`io.grpc.v.a` @type ^`java.util.List` @kind object;
  #L35eca0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35eca6.  v0:= temp;
  #L35eca8.  v2:= v5.`io.grpc.v.a` @type ^`java.util.List` @kind object;
  #L35ecac.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35ecb2.  v2:= temp;
  #L35ecb4.  if v0 == v2 then goto L35ecba;
  #L35ecb8.  return v1;
  #L35ecba.  v0:= 0I;
  #L35ecbc.  v2:= v4.`io.grpc.v.a` @type ^`java.util.List` @kind object;
  #L35ecc0.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35ecc6.  v2:= temp;
  #L35ecc8.  if v0 >= v2 then goto L35ecfc;
  #L35eccc.  v2:= v4.`io.grpc.v.a` @type ^`java.util.List` @kind object;
  #L35ecd0.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35ecd6.  v2:= temp @kind object;
  #L35ecd8.  v2:= (`java.net.SocketAddress`) v2 @kind object;
  #L35ecdc.  v3:= v5.`io.grpc.v.a` @type ^`java.util.List` @kind object;
  #L35ece0.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35ece6.  v3:= temp @kind object;
  #L35ece8.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35ecee.  v2:= temp;
  #L35ecf0.  if v2 != 0 then goto L35ecf6;
  #L35ecf4.  return v1;
  #L35ecf6.  v0:= v0 + 1;
  #L35ecfa.  goto L35ecbc;
  #L35ecfc.  v0:= v4.`io.grpc.v.b` @type ^`io.grpc.a` @kind object;
  #L35ed00.  v5:= v5.`io.grpc.v.b` @type ^`io.grpc.a` @kind object;
  #L35ed04.  call temp:= `equals`(v0, v5) @signature `Lio/grpc/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35ed0a.  v5:= temp;
  #L35ed0c.  if v5 != 0 then goto L35ed12;
  #L35ed10.  return v1;
  #L35ed12.  v5:= 1I;
  #L35ed14.  return v5;
}
procedure `int` `hashCode`(`io.grpc.v` v1 @kind this) @signature `Lio/grpc/v;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35ed28.  v0:= v1.`io.grpc.v.c` @type ^`int`;
  #L35ed2c.  return v0;
}
procedure `java.lang.String` `toString`(`io.grpc.v` v2 @kind this) @signature `Lio/grpc/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35ed58.  v0:= new `java.lang.StringBuilder`;
  #L35ed5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35ed62.  v1:= "[" @kind object;
  #L35ed66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ed6c.  v1:= v2.`io.grpc.v.a` @type ^`java.util.List` @kind object;
  #L35ed70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ed76.  v1:= "/" @kind object;
  #L35ed7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ed80.  v1:= v2.`io.grpc.v.b` @type ^`io.grpc.a` @kind object;
  #L35ed84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ed8a.  v1:= "]" @kind object;
  #L35ed8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ed94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35ed9a.  v0:= temp @kind object;
  #L35ed9c.  return v0 @kind object;
}
