record `io.grpc.Status$c` @kind class @AccessFlag FINAL extends `io.grpc.t0$j` @kind interface {
}
global `byte`[] `@@io.grpc.Status$c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/Status$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3645dc.  v0:= 16I;
  #L3645e0.  v0:= new `byte`[v0];
  #L3645e4.  goto L3645f0;
  #L3645ea.  `@@io.grpc.Status$c.a` @type ^`byte`[] := v0 @kind object;
  #L3645ee.  return @kind void;
  #L3645f0.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L364607.  goto L3645ea;
}
procedure `void` `<init>`(`io.grpc.Status$c` v0 @kind this) @signature `Lio/grpc/Status$c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L364618.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36461e.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.Status$c` v0 @kind this, `io.grpc.Status$a` v1 @kind object) @signature `Lio/grpc/Status$c;.<init>:(Lio/grpc/Status$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L364630.  call `<init>`(v0) @signature `Lio/grpc/Status$c;.<init>:()V` @kind direct;
  #L364636.  return @kind void;
}
procedure `boolean` `c`(`byte` v1 ) @signature `Lio/grpc/Status$c;.c:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L364388.  v0:= 32I;
  #L36438c.  if v1 < v0 then goto L3643a6;
  #L364390.  v0:= 126I;
  #L364394.  if v1 >= v0 then goto L3643a6;
  #L364398.  v0:= 37I;
  #L36439c.  if v1 != v0 then goto L3643a2;
  #L3643a0.  goto L3643a6;
  #L3643a2.  v1:= 0I;
  #L3643a4.  goto L3643a8;
  #L3643a6.  v1:= 1I;
  #L3643a8.  return v1;
}
procedure `java.lang.String` `e`(`byte`[] v7 @kind object) @signature `Lio/grpc/Status$c;.e:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L364534.  v0:= length @variable v7;
  #L364536.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L36453c.  v0:= temp @kind object;
  #L36453e.  v1:= 0I;
  #L364540.  v2:= 0I;
  #L364542.  v3:= length @variable v7;
  #L364544.  if v2 >= v3 then goto L36459c;
  #L364548.  v3:= v7[v2] @kind byte;
  #L36454c.  v4:= 37I;
  #L364550.  if v3 != v4 then goto L36458c;
  #L364554.  v3:= v2 + 2;
  #L364558.  v4:= length @variable v7;
  #L36455a.  if v3 >= v4 then goto L36458c;
  #L36455e.  v3:= new `java.lang.String`;
  #L364562.  v4:= v2 + 1;
  #L364566.  v5:= `@@com.google.common.base.Charsets.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L36456a.  v6:= 2I;
  #L36456c.  call `<init>`(v3, v7, v4, v6, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L364572.  v4:= 16I;
  #L364576.  call temp:= `parseInt`(v3, v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L36457c.  v3:= temp;
  #L36457e.  v3:= (`byte`) v3 @kind i2b;
  #L364580.  call temp:= `put`(v0, v3) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L364586.  v2:= v2 + 3;
  #L36458a.  goto L364542;
  #L36458c.  v3:= v7[v2] @kind byte;
  #L364590.  call temp:= `put`(v0, v3) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L364596.  v2:= v2 + 1;
  #L36459a.  goto L364542;
  #L36459c.  v7:= new `java.lang.String`;
  #L3645a0.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3645a6.  v2:= temp @kind object;
  #L3645a8.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L3645ae.  v0:= temp;
  #L3645b0.  v3:= `@@com.google.common.base.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L3645b4.  call `<init>`(v7, v2, v1, v0, v3) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L3645ba.  return v7 @kind object;
  catch `java.lang.NumberFormatException` @[L36455e..L364586] goto L36458c;
}
procedure `byte`[] `g`(`byte`[] v6 @kind object, `int` v7 ) @signature `Lio/grpc/Status$c;.g:([BI)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L364424.  v0:= length @variable v6;
  #L364426.  v0:= v0 - v7 @kind int;
  #L364428.  v0:= v0 * 3;
  #L36442c.  v0:= v0 + v7 @kind int;
  #L36442e.  v0:= new `byte`[v0];
  #L364432.  if v7 == 0 then goto L36443e;
  #L364436.  v1:= 0I;
  #L364438.  call `arraycopy`(v6, v1, v0, v1, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L36443e.  v1:= v7;
  #L364440.  v2:= length @variable v6;
  #L364442.  if v7 >= v2 then goto L36449c;
  #L364446.  v2:= v6[v7] @kind byte;
  #L36444a.  call temp:= `c`(v2) @signature `Lio/grpc/Status$c;.c:(B)Z` @kind static;
  #L364450.  v3:= temp;
  #L364452.  if v3 == 0 then goto L36448c;
  #L364456.  v3:= 37I;
  #L36445a.  v0[v1]:= v3 @kind byte;
  #L36445e.  v3:= v1 + 1;
  #L364462.  v4:= `@@io.grpc.Status$c.a` @type ^`byte`[] @kind object;
  #L364466.  v5:= v2 ^> 4;
  #L36446a.  v5:= v5 ^& 15;
  #L36446e.  v5:= v4[v5] @kind byte;
  #L364472.  v0[v3]:= v5 @kind byte;
  #L364476.  v3:= v1 + 2;
  #L36447a.  v2:= v2 ^& 15;
  #L36447e.  v2:= v4[v2] @kind byte;
  #L364482.  v0[v3]:= v2 @kind byte;
  #L364486.  v1:= v1 + 3;
  #L36448a.  goto L364496;
  #L36448c.  v3:= v1 + 1;
  #L364490.  v0[v1]:= v2 @kind byte;
  #L364494.  v1:= v3;
  #L364496.  v7:= v7 + 1;
  #L36449a.  goto L364440;
  #L36449c.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L3644a2.  v6:= temp @kind object;
  #L3644a4.  return v6 @kind object;
}
procedure `byte`[] `a`(`io.grpc.Status$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/Status$c;.a:(Ljava/lang/Object;)[B` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3643bc.  v1:= (`java.lang.String`) v1 @kind object;
  #L3643c0.  call temp:= `f`(v0, v1) @signature `Lio/grpc/Status$c;.f:(Ljava/lang/String;)[B` @kind virtual;
  #L3643c6.  v1:= temp @kind object;
  #L3643c8.  return v1 @kind object;
}
procedure `java.lang.Object` `b`(`io.grpc.Status$c` v0 @kind this, `byte`[] v1 @kind object) @signature `Lio/grpc/Status$c;.b:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3644b8.  call temp:= `d`(v0, v1) @signature `Lio/grpc/Status$c;.d:([B)Ljava/lang/String;` @kind virtual;
  #L3644be.  v1:= temp @kind object;
  #L3644c0.  return v1 @kind object;
}
procedure `java.lang.String` `d`(`io.grpc.Status$c` v4 @kind this, `byte`[] v5 @kind object) @signature `Lio/grpc/Status$c;.d:([B)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3644d4.  v0:= 0I;
  #L3644d6.  v1:= 0I;
  #L3644d8.  v2:= length @variable v5;
  #L3644da.  if v1 >= v2 then goto L364516;
  #L3644de.  v2:= v5[v1] @kind byte;
  #L3644e2.  v3:= 32I;
  #L3644e6.  if v2 < v3 then goto L36450c;
  #L3644ea.  v3:= 126I;
  #L3644ee.  if v2 >= v3 then goto L36450c;
  #L3644f2.  v3:= 37I;
  #L3644f6.  if v2 != v3 then goto L364506;
  #L3644fa.  v2:= v1 + 2;
  #L3644fe.  v3:= length @variable v5;
  #L364500.  if v2 >= v3 then goto L364506;
  #L364504.  goto L36450c;
  #L364506.  v1:= v1 + 1;
  #L36450a.  goto L3644d8;
  #L36450c.  call temp:= `e`(v5) @signature `Lio/grpc/Status$c;.e:([B)Ljava/lang/String;` @kind static;
  #L364512.  v5:= temp @kind object;
  #L364514.  return v5 @kind object;
  #L364516.  v1:= new `java.lang.String`;
  #L36451a.  call `<init>`(v1, v5, v0) @signature `Ljava/lang/String;.<init>:([BI)V` @kind direct;
  #L364520.  return v1 @kind object;
}
procedure `byte`[] `f`(`io.grpc.Status$c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/grpc/Status$c;.f:(Ljava/lang/String;)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3643dc.  v0:= `@@com.google.common.base.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L3643e0.  call temp:= `getBytes`(v3, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3643e6.  v3:= temp @kind object;
  #L3643e8.  v0:= 0I;
  #L3643ea.  v1:= length @variable v3;
  #L3643ec.  if v0 >= v1 then goto L364410;
  #L3643f0.  v1:= v3[v0] @kind byte;
  #L3643f4.  call temp:= `c`(v1) @signature `Lio/grpc/Status$c;.c:(B)Z` @kind static;
  #L3643fa.  v1:= temp;
  #L3643fc.  if v1 == 0 then goto L36440a;
  #L364400.  call temp:= `g`(v3, v0) @signature `Lio/grpc/Status$c;.g:([BI)[B` @kind static;
  #L364406.  v3:= temp @kind object;
  #L364408.  return v3 @kind object;
  #L36440a.  v0:= v0 + 1;
  #L36440e.  goto L3643ea;
  #L364410.  return v3 @kind object;
}
