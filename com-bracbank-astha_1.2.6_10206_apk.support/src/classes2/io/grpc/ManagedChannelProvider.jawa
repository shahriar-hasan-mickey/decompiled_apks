record `io.grpc.ManagedChannelProvider` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`io.grpc.ManagedChannelProvider` v0 @kind this) @signature `Lio/grpc/ManagedChannelProvider;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L36109c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3610a2.  return @kind void;
}
procedure `io.grpc.ManagedChannelProvider` `d`() @signature `Lio/grpc/ManagedChannelProvider;.d:()Lio/grpc/ManagedChannelProvider;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L361064.  call temp:= `b`() @signature `Lio/grpc/s0;.b:()Lio/grpc/s0;` @kind static;
  #L36106a.  v0:= temp @kind object;
  #L36106c.  call temp:= `d`(v0) @signature `Lio/grpc/s0;.d:()Lio/grpc/ManagedChannelProvider;` @kind virtual;
  #L361072.  v0:= temp @kind object;
  #L361074.  if v0 == 0 then goto L36107a;
  #L361078.  return v0 @kind object;
  #L36107a.  v0:= new `io.grpc.ManagedChannelProvider$ProviderNotFoundException`;
  #L36107e.  v1:= "No functional channel service provider found. Try adding a dependency on the grpc-okhttp, grpc-netty, or grpc-netty-shaded artifact" @kind object;
  #L361082.  call `<init>`(v0, v1) @signature `Lio/grpc/ManagedChannelProvider$ProviderNotFoundException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L361088.  throw v0;
}
procedure `io.grpc.r0` `a`(`java.lang.String` v0 @kind object) @signature `Lio/grpc/ManagedChannelProvider;.a:(Ljava/lang/String;)Lio/grpc/r0;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `b`() @signature `Lio/grpc/ManagedChannelProvider;.b:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `c`() @signature `Lio/grpc/ManagedChannelProvider;.c:()I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
