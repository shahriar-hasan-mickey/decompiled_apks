record `io.grpc.internal.h` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `io.grpc.internal.h.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.grpc.internal.h.b` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@io.grpc.internal.h.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L366fc0.  v0:= constclass @type ^`io.grpc.internal.h` @kind object;
  #L366fc4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L366fca.  v0:= temp @kind object;
  #L366fcc.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L366fd2.  v0:= temp @kind object;
  #L366fd4.  `@@io.grpc.internal.h.c` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L366fd8.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.h` v4 @kind this, `java.lang.String` v5 @kind object, `long` v6 ) @signature `Lio/grpc/internal/h;.<init>:(Ljava/lang/String;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L366fec.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L366ff2.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L366ff6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L366ffc.  v4.`io.grpc.internal.h.b` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L367000.  v1:= 0L;
  #L367004.  v3:= lcmp(v6, v1);
  #L367008.  if v3 <= 0 then goto L367010;
  #L36700c.  v1:= 1I;
  #L36700e.  goto L367012;
  #L367010.  v1:= 0I;
  #L367012.  v2:= "value must be positive" @kind object;
  #L367016.  call `checkArgument`(v1, v2) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L36701c.  v4.`io.grpc.internal.h.a` @type ^`java.lang.String` := v5 @kind object;
  #L367020.  call `set`(v0, v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.set:(J)V` @kind virtual;
  #L367026.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicLong` `a`(`io.grpc.internal.h` v0 @kind object) @signature `Lio/grpc/internal/h;.a:(Lio/grpc/internal/h;)Ljava/util/concurrent/atomic/AtomicLong;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L366f90.  v0:= v0.`io.grpc.internal.h.b` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L366f94.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`io.grpc.internal.h` v0 @kind object) @signature `Lio/grpc/internal/h;.b:(Lio/grpc/internal/h;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L366f78.  v0:= v0.`io.grpc.internal.h.a` @type ^`java.lang.String` @kind object;
  #L366f7c.  return v0 @kind object;
}
procedure `java.util.logging.Logger` `c`() @signature `Lio/grpc/internal/h;.c:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L366fa8.  v0:= `@@io.grpc.internal.h.c` @type ^`java.util.logging.Logger` @kind object;
  #L366fac.  return v0 @kind object;
}
procedure `io.grpc.internal.h$b` `d`(`io.grpc.internal.h` v4 @kind this) @signature `Lio/grpc/internal/h;.d:()Lio/grpc/internal/h$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L366f4c.  v0:= new `io.grpc.internal.h$b`;
  #L366f50.  v1:= v4.`io.grpc.internal.h.b` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L366f54.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L366f5a.  v1:= temp @kind wide;
  #L366f5c.  v3:= 0I;
  #L366f5e.  call `<init>`(v0, v4, v1, v3) @signature `Lio/grpc/internal/h$b;.<init>:(Lio/grpc/internal/h;JLio/grpc/internal/h$a;)V` @kind direct;
  #L366f64.  return v0 @kind object;
}
