record `io.grpc.internal.a0` @kind class @AccessFlag PUBLIC_FINAL extends `io.grpc.internal.j` @kind interface {
  `java.util.Random` `io.grpc.internal.a0.a` @AccessFlag PRIVATE;
  `long` `io.grpc.internal.a0.b` @AccessFlag PRIVATE;
  `long` `io.grpc.internal.a0.c` @AccessFlag PRIVATE;
  `double` `io.grpc.internal.a0.d` @AccessFlag PRIVATE;
  `double` `io.grpc.internal.a0.e` @AccessFlag PRIVATE;
  `long` `io.grpc.internal.a0.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.grpc.internal.a0` v3 @kind this) @signature `Lio/grpc/internal/a0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L36e174.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36e17a.  v0:= new `java.util.Random`;
  #L36e17e.  call `<init>`(v0) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L36e184.  v3.`io.grpc.internal.a0.a` @type ^`java.util.Random` := v0 @kind object;
  #L36e188.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L36e18c.  v1:= 1L;
  #L36e190.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L36e196.  v0:= temp @kind wide;
  #L36e198.  v3.`io.grpc.internal.a0.b` @type ^`long` := v0 @kind wide;
  #L36e19c.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L36e1a0.  v1:= 2L;
  #L36e1a4.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L36e1aa.  v0:= temp @kind wide;
  #L36e1ac.  v3.`io.grpc.internal.a0.c` @type ^`long` := v0 @kind wide;
  #L36e1b0.  v0:= 1.6D;
  #L36e1ba.  v3.`io.grpc.internal.a0.d` @type ^`double` := v0 @kind wide;
  #L36e1be.  v0:= 0.2D;
  #L36e1c8.  v3.`io.grpc.internal.a0.e` @type ^`double` := v0 @kind wide;
  #L36e1cc.  v0:= v3.`io.grpc.internal.a0.b` @type ^`long` @kind wide;
  #L36e1d0.  v3.`io.grpc.internal.a0.f` @type ^`long` := v0 @kind wide;
  #L36e1d4.  return @kind void;
}
procedure `long` `b`(`io.grpc.internal.a0` v2 @kind this, `double` v3 , `double` v5 ) @signature `Lio/grpc/internal/a0;.b:(DD)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L36e138.  v0:= dcmpl(v5, v3);
  #L36e13c.  if v0 < 0 then goto L36e144;
  #L36e140.  v0:= 1I;
  #L36e142.  goto L36e146;
  #L36e144.  v0:= 0I;
  #L36e146.  call `checkArgument`(v0) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(Z)V` @kind static;
  #L36e14c.  v5:= v5 - v3 @kind double;
  #L36e14e.  v0:= v2.`io.grpc.internal.a0.a` @type ^`java.util.Random` @kind object;
  #L36e152.  call temp:= `nextDouble`(v0) @signature `Ljava/util/Random;.nextDouble:()D` @kind virtual;
  #L36e158.  v0:= temp @kind wide;
  #L36e15a.  v0:= v0 * v5 @kind double;
  #L36e15e.  v0:= v0 + v3 @kind double;
  #L36e160.  v3:= (`long`) v0 @kind d2l;
  #L36e162.  return v3 @kind wide;
}
procedure `long` `a`(`io.grpc.internal.a0` v8 @kind this) @signature `Lio/grpc/internal/a0;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L36e0ec.  v0:= v8.`io.grpc.internal.a0.f` @type ^`long` @kind wide;
  #L36e0f0.  v2:= (`double`) v0 @kind l2d;
  #L36e0f2.  v4:= v8.`io.grpc.internal.a0.d` @type ^`double` @kind wide;
  #L36e0f6.  v4:= v4 * v2 @kind double;
  #L36e0fa.  v4:= (`long`) v4 @kind d2l;
  #L36e0fc.  v6:= v8.`io.grpc.internal.a0.c` @type ^`long` @kind wide;
  #L36e100.  call temp:= `min`(v4, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L36e106.  v4:= temp @kind wide;
  #L36e108.  v8.`io.grpc.internal.a0.f` @type ^`long` := v4 @kind wide;
  #L36e10c.  v4:= v8.`io.grpc.internal.a0.e` @type ^`double` @kind wide;
  #L36e110.  v6:= -v4 @kind double;
  #L36e112.  v6:= v6 * v2 @kind double;
  #L36e116.  v4:= v4 * v2 @kind double;
  #L36e11a.  call temp:= `b`(v8, v6, v4) @signature `Lio/grpc/internal/a0;.b:(DD)J` @kind direct;
  #L36e120.  v2:= temp @kind wide;
  #L36e122.  v0:= v0 + v2 @kind long;
  #L36e124.  return v0 @kind wide;
}
