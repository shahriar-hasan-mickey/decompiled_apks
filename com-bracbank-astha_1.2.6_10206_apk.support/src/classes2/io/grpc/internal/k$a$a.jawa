record `io.grpc.internal.k$a$a` @kind class @AccessFlag  extends `io.grpc.internal.e1$a` @kind interface {
  `io.grpc.internal.k$a` `io.grpc.internal.k$a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.k$a$a` v0 @kind this, `io.grpc.internal.k$a` v1 @kind object) @signature `Lio/grpc/internal/k$a$a;.<init>:(Lio/grpc/internal/k$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L367670.  v0.`io.grpc.internal.k$a$a.a` @type ^`io.grpc.internal.k$a` := v1 @kind object;
  #L367674.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36767a.  return @kind void;
}
procedure `void` `onComplete`(`io.grpc.internal.k$a$a` v1 @kind this) @signature `Lio/grpc/internal/k$a$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36768c.  v0:= v1.`io.grpc.internal.k$a$a.a` @type ^`io.grpc.internal.k$a` @kind object;
  #L367690.  call temp:= `f`(v0) @signature `Lio/grpc/internal/k$a;.f:(Lio/grpc/internal/k$a;)Ljava/util/concurrent/atomic/AtomicInteger;` @kind static;
  #L367696.  v0:= temp @kind object;
  #L367698.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L36769e.  v0:= temp;
  #L3676a0.  if v0 != 0 then goto L3676ae;
  #L3676a4.  v0:= v1.`io.grpc.internal.k$a$a.a` @type ^`io.grpc.internal.k$a` @kind object;
  #L3676a8.  call `i`(v0) @signature `Lio/grpc/internal/k$a;.i:(Lio/grpc/internal/k$a;)V` @kind static;
  #L3676ae.  return @kind void;
}
