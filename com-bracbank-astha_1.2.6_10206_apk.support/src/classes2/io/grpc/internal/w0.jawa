record `io.grpc.internal.w0` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `io.grpc.internal.w0.a` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@io.grpc.internal.w0.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/w0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L374c14.  v0:= constclass @type ^`io.grpc.internal.w0` @kind object;
  #L374c18.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L374c1e.  v0:= temp @kind object;
  #L374c20.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L374c26.  v0:= temp @kind object;
  #L374c28.  `@@io.grpc.internal.w0.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L374c2c.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.w0` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lio/grpc/internal/w0;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L374c40.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L374c46.  v0:= "task" @kind object;
  #L374c4a.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L374c50.  v2:= temp @kind object;
  #L374c52.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L374c56.  v1.`io.grpc.internal.w0.a` @type ^`java.lang.Runnable` := v2 @kind object;
  #L374c5a.  return @kind void;
}
procedure `void` `run`(`io.grpc.internal.w0` v5 @kind this) @signature `Lio/grpc/internal/w0;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L374c6c.  v0:= v5.`io.grpc.internal.w0.a` @type ^`java.lang.Runnable` @kind object;
  #L374c70.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L374c76.  return @kind void;
  #L374c78.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L374c7a.  v1:= `@@io.grpc.internal.w0.b` @type ^`java.util.logging.Logger` @kind object;
  #L374c7e.  v2:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L374c82.  v3:= new `java.lang.StringBuilder`;
  #L374c86.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L374c8c.  v4:= "Exception while executing runnable " @kind object;
  #L374c90.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374c96.  v4:= v5.`io.grpc.internal.w0.a` @type ^`java.lang.Runnable` @kind object;
  #L374c9a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374ca0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L374ca6.  v3:= temp @kind object;
  #L374ca8.  call `log`(v1, v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L374cae.  call `throwIfUnchecked`(v0) @signature `Lcom/google/common/base/Throwables;.throwIfUnchecked:(Ljava/lang/Throwable;)V` @kind static;
  #L374cb4.  v1:= new `java.lang.AssertionError`;
  #L374cb8.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L374cbe.  throw v1;
  catch `java.lang.Throwable` @[L374c6c..L374c76] goto L374c78;
}
procedure `java.lang.String` `toString`(`io.grpc.internal.w0` v2 @kind this) @signature `Lio/grpc/internal/w0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L374bd0.  v0:= new `java.lang.StringBuilder`;
  #L374bd4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L374bda.  v1:= "LogExceptionRunnable(" @kind object;
  #L374bde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374be4.  v1:= v2.`io.grpc.internal.w0.a` @type ^`java.lang.Runnable` @kind object;
  #L374be8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374bee.  v1:= ")" @kind object;
  #L374bf2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374bf8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L374bfe.  v0:= temp @kind object;
  #L374c00.  return v0 @kind object;
}
