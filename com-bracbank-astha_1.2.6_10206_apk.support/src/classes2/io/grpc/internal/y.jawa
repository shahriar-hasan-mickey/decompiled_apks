record `io.grpc.internal.y` @kind class @AccessFlag  extends `io.grpc.internal.o` @kind interface {
  `boolean` `io.grpc.internal.y.a` @AccessFlag PRIVATE_VOLATILE;
  `io.grpc.internal.ClientStreamListener` `io.grpc.internal.y.b` @AccessFlag PRIVATE;
  `io.grpc.internal.o` `io.grpc.internal.y.c` @AccessFlag PRIVATE;
  `io.grpc.Status` `io.grpc.internal.y.d` @AccessFlag PRIVATE;
  `java.util.List` `io.grpc.internal.y.e` @AccessFlag PRIVATE;
  `io.grpc.internal.y$p` `io.grpc.internal.y.f` @AccessFlag PRIVATE;
  `long` `io.grpc.internal.y.g` @AccessFlag PRIVATE;
  `long` `io.grpc.internal.y.h` @AccessFlag PRIVATE;
  `java.util.List` `io.grpc.internal.y.i` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/y;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L36c610.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.y` v1 @kind this) @signature `Lio/grpc/internal/y;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L36c624.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36c62a.  v0:= new `java.util.ArrayList`;
  #L36c62e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36c634.  v1.`io.grpc.internal.y.e` @type ^`java.util.List` := v0 @kind object;
  #L36c638.  v0:= new `java.util.ArrayList`;
  #L36c63c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36c642.  v1.`io.grpc.internal.y.i` @type ^`java.util.List` := v0 @kind object;
  #L36c646.  return @kind void;
}
procedure `io.grpc.internal.o` `p`(`io.grpc.internal.y` v0 @kind object) @signature `Lio/grpc/internal/y;.p:(Lio/grpc/internal/y;)Lio/grpc/internal/o;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36c57c.  v0:= v0.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36c580.  return v0 @kind object;
}
procedure `void` `r`(`io.grpc.internal.y` v0 @kind object) @signature `Lio/grpc/internal/y;.r:(Lio/grpc/internal/y;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36c658.  call `t`(v0) @signature `Lio/grpc/internal/y;.t:()V` @kind direct;
  #L36c65e.  return @kind void;
}
procedure `void` `s`(`io.grpc.internal.y` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lio/grpc/internal/y;.s:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L36c7a8.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c7ac.  if v0 == 0 then goto L36c7b4;
  #L36c7b0.  v0:= 1I;
  #L36c7b2.  goto L36c7b6;
  #L36c7b4.  v0:= 0I;
  #L36c7b6.  v1:= "May only be called after start" @kind object;
  #L36c7ba.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36c7c0.  @monitorenter v2
  #L36c7c2.  v0:= v2.`io.grpc.internal.y.a` @type ^`boolean` @kind boolean;
  #L36c7c6.  if v0 != 0 then goto L36c7d8;
  #L36c7ca.  v0:= v2.`io.grpc.internal.y.e` @type ^`java.util.List` @kind object;
  #L36c7ce.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36c7d4.  @monitorexit v2
  #L36c7d6.  return @kind void;
  #L36c7d8.  @monitorexit v2
  #L36c7da.  call `run`(v3) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L36c7e0.  return @kind void;
  #L36c7e2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36c7e4.  @monitorexit v2
  #L36c7e6.  throw v3;
  catch `java.lang.Throwable` @[L36c7c2..L36c7da] goto L36c7e2;
  catch `java.lang.Throwable` @[L36c7e4..L36c7e6] goto L36c7e2;
}
procedure `void` `t`(`io.grpc.internal.y` v3 @kind this) @signature `Lio/grpc/internal/y;.t:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L36c80c.  v0:= new `java.util.ArrayList`;
  #L36c810.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36c816.  @monitorenter v3
  #L36c818.  v1:= v3.`io.grpc.internal.y.e` @type ^`java.util.List` @kind object;
  #L36c81c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L36c822.  v1:= temp;
  #L36c824.  if v1 == 0 then goto L36c846;
  #L36c828.  v0:= 0I;
  #L36c82a.  v3.`io.grpc.internal.y.e` @type ^`java.util.List` := v0 @kind object;
  #L36c82e.  v0:= 1I;
  #L36c830.  v3.`io.grpc.internal.y.a` @type ^`boolean` := v0 @kind boolean;
  #L36c834.  v0:= v3.`io.grpc.internal.y.f` @type ^`io.grpc.internal.y$p` @kind object;
  #L36c838.  @monitorexit v3
  #L36c83a.  if v0 == 0 then goto L36c844;
  #L36c83e.  call `g`(v0) @signature `Lio/grpc/internal/y$p;.g:()V` @kind virtual;
  #L36c844.  return @kind void;
  #L36c846.  v1:= v3.`io.grpc.internal.y.e` @type ^`java.util.List` @kind object;
  #L36c84a.  v3.`io.grpc.internal.y.e` @type ^`java.util.List` := v0 @kind object;
  #L36c84e.  @monitorexit v3
  #L36c850.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36c856.  v0:= temp @kind object;
  #L36c858.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36c85e.  v2:= temp;
  #L36c860.  if v2 == 0 then goto L36c878;
  #L36c864.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36c86a.  v2:= temp @kind object;
  #L36c86c.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L36c870.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L36c876.  goto L36c858;
  #L36c878.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L36c87e.  v0:= v1 @kind object;
  #L36c880.  goto L36c816;
  #L36c882.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36c884.  @monitorexit v3
  #L36c886.  throw v0;
  catch `java.lang.Throwable` @[L36c818..L36c83a] goto L36c882;
  catch `java.lang.Throwable` @[L36c846..L36c850] goto L36c882;
  catch `java.lang.Throwable` @[L36c884..L36c886] goto L36c882;
}
procedure `void` `u`(`io.grpc.internal.y` v2 @kind this, `io.grpc.internal.ClientStreamListener` v3 @kind object) @signature `Lio/grpc/internal/y;.u:(Lio/grpc/internal/ClientStreamListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L36c940.  v0:= v2.`io.grpc.internal.y.i` @type ^`java.util.List` @kind object;
  #L36c944.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36c94a.  v0:= temp @kind object;
  #L36c94c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36c952.  v1:= temp;
  #L36c954.  if v1 == 0 then goto L36c96c;
  #L36c958.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36c95e.  v1:= temp @kind object;
  #L36c960.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L36c964.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L36c96a.  goto L36c94c;
  #L36c96c.  v0:= 0I;
  #L36c96e.  v2.`io.grpc.internal.y.i` @type ^`java.util.List` := v0 @kind object;
  #L36c972.  v0:= v2.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36c976.  call `o`(v0, v3) @signature `Lio/grpc/internal/o;.o:(Lio/grpc/internal/ClientStreamListener;)V` @kind interface;
  #L36c97c.  return @kind void;
}
procedure `void` `w`(`io.grpc.internal.y` v3 @kind this, `io.grpc.internal.o` v4 @kind object) @signature `Lio/grpc/internal/y;.w:(Lio/grpc/internal/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L36cc5c.  v0:= v3.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36cc60.  if v0 != 0 then goto L36cc68;
  #L36cc64.  v1:= 1I;
  #L36cc66.  goto L36cc6a;
  #L36cc68.  v1:= 0I;
  #L36cc6a.  v2:= "realStream already set to %s" @kind object;
  #L36cc6e.  call `checkState`(v1, v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L36cc74.  v3.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` := v4 @kind object;
  #L36cc78.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L36cc7e.  v0:= temp @kind wide;
  #L36cc80.  v3.`io.grpc.internal.y.h` @type ^`long` := v0 @kind wide;
  #L36cc84.  return @kind void;
}
procedure `void` `a`(`io.grpc.internal.y` v2 @kind this, `boolean` v3 ) @signature `Lio/grpc/internal/y;.a:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36cc0c.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36cc10.  if v0 == 0 then goto L36cc18;
  #L36cc14.  v0:= 1I;
  #L36cc16.  goto L36cc1a;
  #L36cc18.  v0:= 0I;
  #L36cc1a.  v1:= "May only be called after start" @kind object;
  #L36cc1e.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36cc24.  v0:= v2.`io.grpc.internal.y.a` @type ^`boolean` @kind boolean;
  #L36cc28.  if v0 == 0 then goto L36cc38;
  #L36cc2c.  v0:= v2.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36cc30.  call `a`(v0, v3) @signature `Lio/grpc/internal/a2;.a:(Z)V` @kind interface;
  #L36cc36.  goto L36cc48;
  #L36cc38.  v0:= new `io.grpc.internal.y$f`;
  #L36cc3c.  call `<init>`(v0, v2, v3) @signature `Lio/grpc/internal/y$f;.<init>:(Lio/grpc/internal/y;Z)V` @kind direct;
  #L36cc42.  call `s`(v2, v0) @signature `Lio/grpc/internal/y;.s:(Ljava/lang/Runnable;)V` @kind direct;
  #L36cc48.  return @kind void;
}
procedure `void` `b`(`io.grpc.internal.y` v4 @kind this, `io.grpc.Status` v5 @kind object) @signature `Lio/grpc/internal/y;.b:(Lio/grpc/Status;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36c700.  v0:= v4.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c704.  v1:= 1I;
  #L36c706.  v2:= 0I;
  #L36c708.  if v0 == 0 then goto L36c710;
  #L36c70c.  v0:= 1I;
  #L36c70e.  goto L36c712;
  #L36c710.  v0:= 0I;
  #L36c712.  v3:= "May only be called after start" @kind object;
  #L36c716.  call `checkState`(v0, v3) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36c71c.  v0:= "reason" @kind object;
  #L36c720.  call temp:= `checkNotNull`(v5, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36c726.  @monitorenter v4
  #L36c728.  v0:= v4.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36c72c.  if v0 != 0 then goto L36c740;
  #L36c730.  v0:= `@@io.grpc.internal.f1.a` @type ^`io.grpc.internal.f1` @kind object;
  #L36c734.  call `w`(v4, v0) @signature `Lio/grpc/internal/y;.w:(Lio/grpc/internal/o;)V` @kind direct;
  #L36c73a.  v4.`io.grpc.internal.y.d` @type ^`io.grpc.Status` := v5 @kind object;
  #L36c73e.  v1:= 0I;
  #L36c740.  @monitorexit v4
  #L36c742.  if v1 == 0 then goto L36c758;
  #L36c746.  v0:= new `io.grpc.internal.y$n`;
  #L36c74a.  call `<init>`(v0, v4, v5) @signature `Lio/grpc/internal/y$n;.<init>:(Lio/grpc/internal/y;Lio/grpc/Status;)V` @kind direct;
  #L36c750.  call `s`(v4, v0) @signature `Lio/grpc/internal/y;.s:(Ljava/lang/Runnable;)V` @kind direct;
  #L36c756.  goto L36c77c;
  #L36c758.  call `t`(v4) @signature `Lio/grpc/internal/y;.t:()V` @kind direct;
  #L36c75e.  call `v`(v4, v5) @signature `Lio/grpc/internal/y;.v:(Lio/grpc/Status;)V` @kind virtual;
  #L36c764.  v0:= v4.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c768.  v1:= `@@io.grpc.internal.ClientStreamListener$RpcProgress.a` @type ^`io.grpc.internal.ClientStreamListener$RpcProgress` @kind object;
  #L36c76c.  v2:= new `io.grpc.t0`;
  #L36c770.  call `<init>`(v2) @signature `Lio/grpc/t0;.<init>:()V` @kind direct;
  #L36c776.  call `d`(v0, v5, v1, v2) @signature `Lio/grpc/internal/ClientStreamListener;.d:(Lio/grpc/Status;Lio/grpc/internal/ClientStreamListener$RpcProgress;Lio/grpc/t0;)V` @kind interface;
  #L36c77c.  return @kind void;
  #L36c77e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36c780.  @monitorexit v4
  #L36c782.  throw v5;
  catch `java.lang.Throwable` @[L36c728..L36c742] goto L36c77e;
  catch `java.lang.Throwable` @[L36c780..L36c782] goto L36c77e;
}
procedure `void` `c`(`io.grpc.internal.y` v2 @kind this, `io.grpc.m` v3 @kind object) @signature `Lio/grpc/internal/y;.c:(Lio/grpc/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36ca7c.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36ca80.  if v0 != 0 then goto L36ca88;
  #L36ca84.  v0:= 1I;
  #L36ca86.  goto L36ca8a;
  #L36ca88.  v0:= 0I;
  #L36ca8a.  v1:= "May only be called before start" @kind object;
  #L36ca8e.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36ca94.  v0:= "compressor" @kind object;
  #L36ca98.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36ca9e.  v0:= v2.`io.grpc.internal.y.i` @type ^`java.util.List` @kind object;
  #L36caa2.  v1:= new `io.grpc.internal.y$c`;
  #L36caa6.  call `<init>`(v1, v2, v3) @signature `Lio/grpc/internal/y$c;.<init>:(Lio/grpc/internal/y;Lio/grpc/m;)V` @kind direct;
  #L36caac.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36cab2.  return @kind void;
}
procedure `boolean` `d`(`io.grpc.internal.y` v1 @kind this) @signature `Lio/grpc/internal/y;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36c508.  v0:= v1.`io.grpc.internal.y.a` @type ^`boolean` @kind boolean;
  #L36c50c.  if v0 == 0 then goto L36c51e;
  #L36c510.  v0:= v1.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36c514.  call temp:= `d`(v0) @signature `Lio/grpc/internal/a2;.d:()Z` @kind interface;
  #L36c51a.  v0:= temp;
  #L36c51c.  return v0;
  #L36c51e.  v0:= 0I;
  #L36c520.  return v0;
}
procedure `void` `e`(`io.grpc.internal.y` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lio/grpc/internal/y;.e:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36cd3c.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36cd40.  if v0 == 0 then goto L36cd48;
  #L36cd44.  v0:= 1I;
  #L36cd46.  goto L36cd4a;
  #L36cd48.  v0:= 0I;
  #L36cd4a.  v1:= "May only be called after start" @kind object;
  #L36cd4e.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36cd54.  v0:= "message" @kind object;
  #L36cd58.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36cd5e.  v0:= v2.`io.grpc.internal.y.a` @type ^`boolean` @kind boolean;
  #L36cd62.  if v0 == 0 then goto L36cd72;
  #L36cd66.  v0:= v2.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36cd6a.  call `e`(v0, v3) @signature `Lio/grpc/internal/a2;.e:(Ljava/io/InputStream;)V` @kind interface;
  #L36cd70.  goto L36cd82;
  #L36cd72.  v0:= new `io.grpc.internal.y$l`;
  #L36cd76.  call `<init>`(v0, v2, v3) @signature `Lio/grpc/internal/y$l;.<init>:(Lio/grpc/internal/y;Ljava/io/InputStream;)V` @kind direct;
  #L36cd7c.  call `s`(v2, v0) @signature `Lio/grpc/internal/y;.s:(Ljava/lang/Runnable;)V` @kind direct;
  #L36cd82.  return @kind void;
}
procedure `void` `f`(`io.grpc.internal.y` v2 @kind this) @signature `Lio/grpc/internal/y;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36c9a4.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c9a8.  if v0 != 0 then goto L36c9b0;
  #L36c9ac.  v0:= 1I;
  #L36c9ae.  goto L36c9b2;
  #L36c9b0.  v0:= 0I;
  #L36c9b2.  v1:= "May only be called before start" @kind object;
  #L36c9b6.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36c9bc.  v0:= v2.`io.grpc.internal.y.i` @type ^`java.util.List` @kind object;
  #L36c9c0.  v1:= new `io.grpc.internal.y$b`;
  #L36c9c4.  call `<init>`(v1, v2) @signature `Lio/grpc/internal/y$b;.<init>:(Lio/grpc/internal/y;)V` @kind direct;
  #L36c9ca.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36c9d0.  return @kind void;
}
procedure `void` `flush`(`io.grpc.internal.y` v2 @kind this) @signature `Lio/grpc/internal/y;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36c8b4.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c8b8.  if v0 == 0 then goto L36c8c0;
  #L36c8bc.  v0:= 1I;
  #L36c8be.  goto L36c8c2;
  #L36c8c0.  v0:= 0I;
  #L36c8c2.  v1:= "May only be called after start" @kind object;
  #L36c8c6.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36c8cc.  v0:= v2.`io.grpc.internal.y.a` @type ^`boolean` @kind boolean;
  #L36c8d0.  if v0 == 0 then goto L36c8e0;
  #L36c8d4.  v0:= v2.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36c8d8.  call `flush`(v0) @signature `Lio/grpc/internal/a2;.flush:()V` @kind interface;
  #L36c8de.  goto L36c8f0;
  #L36c8e0.  v0:= new `io.grpc.internal.y$m`;
  #L36c8e4.  call `<init>`(v0, v2) @signature `Lio/grpc/internal/y$m;.<init>:(Lio/grpc/internal/y;)V` @kind direct;
  #L36c8ea.  call `s`(v2, v0) @signature `Lio/grpc/internal/y;.s:(Ljava/lang/Runnable;)V` @kind direct;
  #L36c8f0.  return @kind void;
}
procedure `void` `g`(`io.grpc.internal.y` v2 @kind this, `int` v3 ) @signature `Lio/grpc/internal/y;.g:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36c9e4.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c9e8.  if v0 == 0 then goto L36c9f0;
  #L36c9ec.  v0:= 1I;
  #L36c9ee.  goto L36c9f2;
  #L36c9f0.  v0:= 0I;
  #L36c9f2.  v1:= "May only be called after start" @kind object;
  #L36c9f6.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36c9fc.  v0:= v2.`io.grpc.internal.y.a` @type ^`boolean` @kind boolean;
  #L36ca00.  if v0 == 0 then goto L36ca10;
  #L36ca04.  v0:= v2.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36ca08.  call `g`(v0, v3) @signature `Lio/grpc/internal/a2;.g:(I)V` @kind interface;
  #L36ca0e.  goto L36ca20;
  #L36ca10.  v0:= new `io.grpc.internal.y$a`;
  #L36ca14.  call `<init>`(v0, v2, v3) @signature `Lio/grpc/internal/y$a;.<init>:(Lio/grpc/internal/y;I)V` @kind direct;
  #L36ca1a.  call `s`(v2, v0) @signature `Lio/grpc/internal/y;.s:(Ljava/lang/Runnable;)V` @kind direct;
  #L36ca20.  return @kind void;
}
procedure `io.grpc.a` `getAttributes`(`io.grpc.internal.y` v1 @kind this) @signature `Lio/grpc/internal/y;.getAttributes:()Lio/grpc/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36c534.  @monitorenter v1
  #L36c536.  v0:= v1.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36c53a.  @monitorexit v1
  #L36c53c.  if v0 == 0 then goto L36c54a;
  #L36c540.  call temp:= `getAttributes`(v0) @signature `Lio/grpc/internal/o;.getAttributes:()Lio/grpc/a;` @kind interface;
  #L36c546.  v0:= temp @kind object;
  #L36c548.  return v0 @kind object;
  #L36c54a.  v0:= `@@io.grpc.a.c` @type ^`io.grpc.a` @kind object;
  #L36c54e.  return v0 @kind object;
  #L36c550.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36c552.  @monitorexit v1
  #L36c554.  throw v0;
  catch `java.lang.Throwable` @[L36c536..L36c53c] goto L36c550;
  catch `java.lang.Throwable` @[L36c552..L36c554] goto L36c550;
}
procedure `void` `h`(`io.grpc.internal.y` v2 @kind this, `int` v3 ) @signature `Lio/grpc/internal/y;.h:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36cb8c.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36cb90.  if v0 != 0 then goto L36cb98;
  #L36cb94.  v0:= 1I;
  #L36cb96.  goto L36cb9a;
  #L36cb98.  v0:= 0I;
  #L36cb9a.  v1:= "May only be called before start" @kind object;
  #L36cb9e.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36cba4.  v0:= v2.`io.grpc.internal.y.i` @type ^`java.util.List` @kind object;
  #L36cba8.  v1:= new `io.grpc.internal.y$g`;
  #L36cbac.  call `<init>`(v1, v2, v3) @signature `Lio/grpc/internal/y$g;.<init>:(Lio/grpc/internal/y;I)V` @kind direct;
  #L36cbb2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36cbb8.  return @kind void;
}
procedure `void` `i`(`io.grpc.internal.y` v2 @kind this, `int` v3 ) @signature `Lio/grpc/internal/y;.i:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36cbcc.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36cbd0.  if v0 != 0 then goto L36cbd8;
  #L36cbd4.  v0:= 1I;
  #L36cbd6.  goto L36cbda;
  #L36cbd8.  v0:= 0I;
  #L36cbda.  v1:= "May only be called before start" @kind object;
  #L36cbde.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36cbe4.  v0:= v2.`io.grpc.internal.y.i` @type ^`java.util.List` @kind object;
  #L36cbe8.  v1:= new `io.grpc.internal.y$h`;
  #L36cbec.  call `<init>`(v1, v2, v3) @signature `Lio/grpc/internal/y$h;.<init>:(Lio/grpc/internal/y;I)V` @kind direct;
  #L36cbf2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36cbf8.  return @kind void;
}
procedure `void` `j`(`io.grpc.internal.y` v2 @kind this, `io.grpc.t` v3 @kind object) @signature `Lio/grpc/internal/y;.j:(Lio/grpc/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36cb04.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36cb08.  if v0 != 0 then goto L36cb10;
  #L36cb0c.  v0:= 1I;
  #L36cb0e.  goto L36cb12;
  #L36cb10.  v0:= 0I;
  #L36cb12.  v1:= "May only be called before start" @kind object;
  #L36cb16.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36cb1c.  v0:= "decompressorRegistry" @kind object;
  #L36cb20.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36cb26.  v0:= v2.`io.grpc.internal.y.i` @type ^`java.util.List` @kind object;
  #L36cb2a.  v1:= new `io.grpc.internal.y$e`;
  #L36cb2e.  call `<init>`(v1, v2, v3) @signature `Lio/grpc/internal/y$e;.<init>:(Lio/grpc/internal/y;Lio/grpc/t;)V` @kind direct;
  #L36cb34.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36cb3a.  return @kind void;
}
procedure `void` `k`(`io.grpc.internal.y` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/grpc/internal/y;.k:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36ca34.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36ca38.  if v0 != 0 then goto L36ca40;
  #L36ca3c.  v0:= 1I;
  #L36ca3e.  goto L36ca42;
  #L36ca40.  v0:= 0I;
  #L36ca42.  v1:= "May only be called before start" @kind object;
  #L36ca46.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36ca4c.  v0:= "authority" @kind object;
  #L36ca50.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36ca56.  v0:= v2.`io.grpc.internal.y.i` @type ^`java.util.List` @kind object;
  #L36ca5a.  v1:= new `io.grpc.internal.y$k`;
  #L36ca5e.  call `<init>`(v1, v2, v3) @signature `Lio/grpc/internal/y$k;.<init>:(Lio/grpc/internal/y;Ljava/lang/String;)V` @kind direct;
  #L36ca64.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36ca6a.  return @kind void;
}
procedure `void` `l`(`io.grpc.internal.y` v5 @kind this, `io.grpc.internal.r0` v6 @kind object) @signature `Lio/grpc/internal/y;.l:(Lio/grpc/internal/r0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36c670.  @monitorenter v5
  #L36c672.  v0:= v5.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c676.  if v0 != 0 then goto L36c67e;
  #L36c67a.  @monitorexit v5
  #L36c67c.  return @kind void;
  #L36c67e.  v0:= v5.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36c682.  if v0 == 0 then goto L36c6ae;
  #L36c686.  v0:= "buffered_nanos" @kind object;
  #L36c68a.  v1:= v5.`io.grpc.internal.y.h` @type ^`long` @kind wide;
  #L36c68e.  v3:= v5.`io.grpc.internal.y.g` @type ^`long` @kind wide;
  #L36c692.  v1:= v1 - v3 @kind long;
  #L36c694.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L36c69a.  v1:= temp @kind object;
  #L36c69c.  call temp:= `b`(v6, v0, v1) @signature `Lio/grpc/internal/r0;.b:(Ljava/lang/String;Ljava/lang/Object;)Lio/grpc/internal/r0;` @kind virtual;
  #L36c6a2.  v0:= v5.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36c6a6.  call `l`(v0, v6) @signature `Lio/grpc/internal/o;.l:(Lio/grpc/internal/r0;)V` @kind interface;
  #L36c6ac.  goto L36c6d8;
  #L36c6ae.  v0:= "buffered_nanos" @kind object;
  #L36c6b2.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L36c6b8.  v1:= temp @kind wide;
  #L36c6ba.  v3:= v5.`io.grpc.internal.y.g` @type ^`long` @kind wide;
  #L36c6be.  v1:= v1 - v3 @kind long;
  #L36c6c0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L36c6c6.  v1:= temp @kind object;
  #L36c6c8.  call temp:= `b`(v6, v0, v1) @signature `Lio/grpc/internal/r0;.b:(Ljava/lang/String;Ljava/lang/Object;)Lio/grpc/internal/r0;` @kind virtual;
  #L36c6ce.  v0:= "waiting_for_connection" @kind object;
  #L36c6d2.  call temp:= `a`(v6, v0) @signature `Lio/grpc/internal/r0;.a:(Ljava/lang/Object;)Lio/grpc/internal/r0;` @kind virtual;
  #L36c6d8.  @monitorexit v5
  #L36c6da.  return @kind void;
  #L36c6dc.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36c6de.  @monitorexit v5
  #L36c6e0.  throw v6;
  catch `java.lang.Throwable` @[L36c672..L36c6e0] goto L36c6dc;
}
procedure `void` `m`(`io.grpc.internal.y` v2 @kind this) @signature `Lio/grpc/internal/y;.m:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36c904.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c908.  if v0 == 0 then goto L36c910;
  #L36c90c.  v0:= 1I;
  #L36c90e.  goto L36c912;
  #L36c910.  v0:= 0I;
  #L36c912.  v1:= "May only be called after start" @kind object;
  #L36c916.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36c91c.  v0:= new `io.grpc.internal.y$o`;
  #L36c920.  call `<init>`(v0, v2) @signature `Lio/grpc/internal/y$o;.<init>:(Lio/grpc/internal/y;)V` @kind direct;
  #L36c926.  call `s`(v2, v0) @signature `Lio/grpc/internal/y;.s:(Ljava/lang/Runnable;)V` @kind direct;
  #L36c92c.  return @kind void;
}
procedure `void` `n`(`io.grpc.internal.y` v2 @kind this, `io.grpc.r` v3 @kind object) @signature `Lio/grpc/internal/y;.n:(Lio/grpc/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36cac4.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36cac8.  if v0 != 0 then goto L36cad0;
  #L36cacc.  v0:= 1I;
  #L36cace.  goto L36cad2;
  #L36cad0.  v0:= 0I;
  #L36cad2.  v1:= "May only be called before start" @kind object;
  #L36cad6.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36cadc.  v0:= v2.`io.grpc.internal.y.i` @type ^`java.util.List` @kind object;
  #L36cae0.  v1:= new `io.grpc.internal.y$i`;
  #L36cae4.  call `<init>`(v1, v2, v3) @signature `Lio/grpc/internal/y$i;.<init>:(Lio/grpc/internal/y;Lio/grpc/r;)V` @kind direct;
  #L36caea.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36caf0.  return @kind void;
}
procedure `void` `o`(`io.grpc.internal.y` v4 @kind this, `io.grpc.internal.ClientStreamListener` v5 @kind object) @signature `Lio/grpc/internal/y;.o:(Lio/grpc/internal/ClientStreamListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36cc98.  v0:= "listener" @kind object;
  #L36cc9c.  call temp:= `checkNotNull`(v5, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36cca2.  v0:= v4.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36cca6.  if v0 != 0 then goto L36ccae;
  #L36ccaa.  v0:= 1I;
  #L36ccac.  goto L36ccb0;
  #L36ccae.  v0:= 0I;
  #L36ccb0.  v1:= "already started" @kind object;
  #L36ccb4.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36ccba.  @monitorenter v4
  #L36ccbc.  v0:= v4.`io.grpc.internal.y.d` @type ^`io.grpc.Status` @kind object;
  #L36ccc0.  v1:= v4.`io.grpc.internal.y.a` @type ^`boolean` @kind boolean;
  #L36ccc4.  if v1 != 0 then goto L36ccd8;
  #L36ccc8.  v2:= new `io.grpc.internal.y$p`;
  #L36cccc.  call `<init>`(v2, v5) @signature `Lio/grpc/internal/y$p;.<init>:(Lio/grpc/internal/ClientStreamListener;)V` @kind direct;
  #L36ccd2.  v4.`io.grpc.internal.y.f` @type ^`io.grpc.internal.y$p` := v2 @kind object;
  #L36ccd6.  v5:= v2 @kind object;
  #L36ccd8.  v4.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` := v5 @kind object;
  #L36ccdc.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L36cce2.  v2:= temp @kind wide;
  #L36cce4.  v4.`io.grpc.internal.y.g` @type ^`long` := v2 @kind wide;
  #L36cce8.  @monitorexit v4
  #L36ccea.  if v0 == 0 then goto L36cd04;
  #L36ccee.  v1:= `@@io.grpc.internal.ClientStreamListener$RpcProgress.a` @type ^`io.grpc.internal.ClientStreamListener$RpcProgress` @kind object;
  #L36ccf2.  v2:= new `io.grpc.t0`;
  #L36ccf6.  call `<init>`(v2) @signature `Lio/grpc/t0;.<init>:()V` @kind direct;
  #L36ccfc.  call `d`(v5, v0, v1, v2) @signature `Lio/grpc/internal/ClientStreamListener;.d:(Lio/grpc/Status;Lio/grpc/internal/ClientStreamListener$RpcProgress;Lio/grpc/t0;)V` @kind interface;
  #L36cd02.  return @kind void;
  #L36cd04.  if v1 == 0 then goto L36cd0e;
  #L36cd08.  call `u`(v4, v5) @signature `Lio/grpc/internal/y;.u:(Lio/grpc/internal/ClientStreamListener;)V` @kind direct;
  #L36cd0e.  return @kind void;
  #L36cd10.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36cd12.  @monitorexit v4
  #L36cd14.  throw v5;
  catch `java.lang.Throwable` @[L36ccbc..L36ccea] goto L36cd10;
  catch `java.lang.Throwable` @[L36cd12..L36cd14] goto L36cd10;
}
procedure `void` `q`(`io.grpc.internal.y` v2 @kind this, `boolean` v3 ) @signature `Lio/grpc/internal/y;.q:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36cb4c.  v0:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36cb50.  if v0 != 0 then goto L36cb58;
  #L36cb54.  v0:= 1I;
  #L36cb56.  goto L36cb5a;
  #L36cb58.  v0:= 0I;
  #L36cb5a.  v1:= "May only be called before start" @kind object;
  #L36cb5e.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36cb64.  v0:= v2.`io.grpc.internal.y.i` @type ^`java.util.List` @kind object;
  #L36cb68.  v1:= new `io.grpc.internal.y$d`;
  #L36cb6c.  call `<init>`(v1, v2, v3) @signature `Lio/grpc/internal/y$d;.<init>:(Lio/grpc/internal/y;Z)V` @kind direct;
  #L36cb72.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36cb78.  return @kind void;
}
procedure `void` `v`(`io.grpc.internal.y` v0 @kind this, `io.grpc.Status` v1 @kind object) @signature `Lio/grpc/internal/y;.v:(Lio/grpc/Status;)V` @AccessFlag PROTECTED {
    temp;

  #L36c990.  return @kind void;
}
procedure `java.lang.Runnable` `x`(`io.grpc.internal.y` v2 @kind this, `io.grpc.internal.o` v3 @kind object) @signature `Lio/grpc/internal/y;.x:(Lio/grpc/internal/o;)Ljava/lang/Runnable;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L36c594.  @monitorenter v2
  #L36c596.  v0:= v2.`io.grpc.internal.y.c` @type ^`io.grpc.internal.o` @kind object;
  #L36c59a.  v1:= 0I;
  #L36c59c.  if v0 == 0 then goto L36c5a4;
  #L36c5a0.  @monitorexit v2
  #L36c5a2.  return v1 @kind object;
  #L36c5a4.  v0:= "stream" @kind object;
  #L36c5a8.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36c5ae.  v3:= temp @kind object;
  #L36c5b0.  v3:= (`io.grpc.internal.o`) v3 @kind object;
  #L36c5b4.  call `w`(v2, v3) @signature `Lio/grpc/internal/y;.w:(Lio/grpc/internal/o;)V` @kind direct;
  #L36c5ba.  v3:= v2.`io.grpc.internal.y.b` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c5be.  if v3 != 0 then goto L36c5cc;
  #L36c5c2.  v2.`io.grpc.internal.y.e` @type ^`java.util.List` := v1 @kind object;
  #L36c5c6.  v0:= 1I;
  #L36c5c8.  v2.`io.grpc.internal.y.a` @type ^`boolean` := v0 @kind boolean;
  #L36c5cc.  @monitorexit v2
  #L36c5ce.  if v3 != 0 then goto L36c5d4;
  #L36c5d2.  return v1 @kind object;
  #L36c5d4.  call `u`(v2, v3) @signature `Lio/grpc/internal/y;.u:(Lio/grpc/internal/ClientStreamListener;)V` @kind direct;
  #L36c5da.  v3:= new `io.grpc.internal.y$j`;
  #L36c5de.  call `<init>`(v3, v2) @signature `Lio/grpc/internal/y$j;.<init>:(Lio/grpc/internal/y;)V` @kind direct;
  #L36c5e4.  return v3 @kind object;
  #L36c5e6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36c5e8.  @monitorexit v2
  #L36c5ea.  throw v3;
  catch `java.lang.Throwable` @[L36c596..L36c5ce] goto L36c5e6;
  catch `java.lang.Throwable` @[L36c5e8..L36c5ea] goto L36c5e6;
}
