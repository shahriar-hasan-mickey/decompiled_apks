record `io.grpc.internal.k$a` @kind class @AccessFlag  extends `io.grpc.internal.g0` @kind class {
  `io.grpc.internal.s` `io.grpc.internal.k$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `io.grpc.internal.k$a.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.grpc.internal.k$a.c` @AccessFlag PRIVATE_FINAL;
  `io.grpc.Status` `io.grpc.internal.k$a.d` @AccessFlag PRIVATE_VOLATILE;
  `io.grpc.Status` `io.grpc.internal.k$a.e` @AccessFlag PRIVATE;
  `io.grpc.Status` `io.grpc.internal.k$a.f` @AccessFlag PRIVATE;
  `io.grpc.internal.e1$a` `io.grpc.internal.k$a.g` @AccessFlag PRIVATE_FINAL;
  `io.grpc.internal.k` `io.grpc.internal.k$a.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.k$a` v1 @kind this, `io.grpc.internal.k` v2 @kind object, `io.grpc.internal.s` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lio/grpc/internal/k$a;.<init>:(Lio/grpc/internal/k;Lio/grpc/internal/s;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L367864.  v1.`io.grpc.internal.k$a.h` @type ^`io.grpc.internal.k` := v2 @kind object;
  #L367868.  call `<init>`(v1) @signature `Lio/grpc/internal/g0;.<init>:()V` @kind direct;
  #L36786e.  v2:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L367872.  v0:= -2147483647I;
  #L367878.  call `<init>`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L36787e.  v1.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` := v2 @kind object;
  #L367882.  v2:= new `io.grpc.internal.k$a$a`;
  #L367886.  call `<init>`(v2, v1) @signature `Lio/grpc/internal/k$a$a;.<init>:(Lio/grpc/internal/k$a;)V` @kind direct;
  #L36788c.  v1.`io.grpc.internal.k$a.g` @type ^`io.grpc.internal.e1$a` := v2 @kind object;
  #L367890.  v2:= "delegate" @kind object;
  #L367894.  call temp:= `checkNotNull`(v3, v2) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36789a.  v2:= temp @kind object;
  #L36789c.  v2:= (`io.grpc.internal.s`) v2 @kind object;
  #L3678a0.  v1.`io.grpc.internal.k$a.a` @type ^`io.grpc.internal.s` := v2 @kind object;
  #L3678a4.  v2:= "authority" @kind object;
  #L3678a8.  call temp:= `checkNotNull`(v4, v2) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3678ae.  v2:= temp @kind object;
  #L3678b0.  v2:= (`java.lang.String`) v2 @kind object;
  #L3678b4.  v1.`io.grpc.internal.k$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L3678b8.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicInteger` `f`(`io.grpc.internal.k$a` v0 @kind object) @signature `Lio/grpc/internal/k$a;.f:(Lio/grpc/internal/k$a;)Ljava/util/concurrent/atomic/AtomicInteger;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36784c.  v0:= v0.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L367850.  return v0 @kind object;
}
procedure `void` `i`(`io.grpc.internal.k$a` v0 @kind object) @signature `Lio/grpc/internal/k$a;.i:(Lio/grpc/internal/k$a;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3678cc.  call `j`(v0) @signature `Lio/grpc/internal/k$a;.j:()V` @kind direct;
  #L3678d2.  return @kind void;
}
procedure `void` `j`(`io.grpc.internal.k$a` v3 @kind this) @signature `Lio/grpc/internal/k$a;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3678e4.  @monitorenter v3
  #L3678e6.  v0:= v3.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L3678ea.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L3678f0.  v0:= temp;
  #L3678f2.  if v0 == 0 then goto L3678fa;
  #L3678f6.  @monitorexit v3
  #L3678f8.  return @kind void;
  #L3678fa.  v0:= v3.`io.grpc.internal.k$a.e` @type ^`io.grpc.Status` @kind object;
  #L3678fe.  v1:= v3.`io.grpc.internal.k$a.f` @type ^`io.grpc.Status` @kind object;
  #L367902.  v2:= 0I;
  #L367904.  v3.`io.grpc.internal.k$a.e` @type ^`io.grpc.Status` := v2 @kind object;
  #L367908.  v3.`io.grpc.internal.k$a.f` @type ^`io.grpc.Status` := v2 @kind object;
  #L36790c.  @monitorexit v3
  #L36790e.  if v0 == 0 then goto L367918;
  #L367912.  call `c`(v3, v0) @signature `Lio/grpc/internal/g0;.c:(Lio/grpc/Status;)V` @kind super;
  #L367918.  if v1 == 0 then goto L367922;
  #L36791c.  call `d`(v3, v1) @signature `Lio/grpc/internal/g0;.d:(Lio/grpc/Status;)V` @kind super;
  #L367922.  return @kind void;
  #L367924.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L367926.  @monitorexit v3
  #L367928.  throw v0;
  catch `java.lang.Throwable` @[L3678e6..L36790e] goto L367924;
  catch `java.lang.Throwable` @[L367926..L367928] goto L367924;
}
procedure `io.grpc.internal.s` `a`(`io.grpc.internal.k$a` v1 @kind this) @signature `Lio/grpc/internal/k$a;.a:()Lio/grpc/internal/s;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L367834.  v0:= v1.`io.grpc.internal.k$a.a` @type ^`io.grpc.internal.s` @kind object;
  #L367838.  return v0 @kind object;
}
procedure `io.grpc.internal.o` `b`(`io.grpc.internal.k$a` v9 @kind this, `io.grpc.MethodDescriptor` v10 @kind object, `io.grpc.t0` v11 @kind object, `io.grpc.c` v12 @kind object, `io.grpc.j`[] v13 @kind object) @signature `Lio/grpc/internal/k$a;.b:(Lio/grpc/MethodDescriptor;Lio/grpc/t0;Lio/grpc/c;[Lio/grpc/j;)Lio/grpc/internal/o;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3676e4.  call temp:= `c`(v12) @signature `Lio/grpc/c;.c:()Lio/grpc/b;` @kind virtual;
  #L3676ea.  v0:= temp @kind object;
  #L3676ec.  if v0 != 0 then goto L3676fe;
  #L3676f0.  v0:= v9.`io.grpc.internal.k$a.h` @type ^`io.grpc.internal.k` @kind object;
  #L3676f4.  call temp:= `g`(v0) @signature `Lio/grpc/internal/k;.g:(Lio/grpc/internal/k;)Lio/grpc/b;` @kind static;
  #L3676fa.  v0:= temp @kind object;
  #L3676fc.  goto L367726;
  #L3676fe.  v1:= v9.`io.grpc.internal.k$a.h` @type ^`io.grpc.internal.k` @kind object;
  #L367702.  call temp:= `g`(v1) @signature `Lio/grpc/internal/k;.g:(Lio/grpc/internal/k;)Lio/grpc/b;` @kind static;
  #L367708.  v1:= temp @kind object;
  #L36770a.  if v1 == 0 then goto L367726;
  #L36770e.  v1:= new `io.grpc.l`;
  #L367712.  v2:= v9.`io.grpc.internal.k$a.h` @type ^`io.grpc.internal.k` @kind object;
  #L367716.  call temp:= `g`(v2) @signature `Lio/grpc/internal/k;.g:(Lio/grpc/internal/k;)Lio/grpc/b;` @kind static;
  #L36771c.  v2:= temp @kind object;
  #L36771e.  call `<init>`(v1, v2, v0) @signature `Lio/grpc/l;.<init>:(Lio/grpc/b;Lio/grpc/b;)V` @kind direct;
  #L367724.  v0:= v1 @kind object;
  #L367726.  if v0 == 0 then goto L3677e8;
  #L36772a.  v8:= new `io.grpc.internal.e1`;
  #L36772e.  v2:= v9.`io.grpc.internal.k$a.a` @type ^`io.grpc.internal.s` @kind object;
  #L367732.  v6:= v9.`io.grpc.internal.k$a.g` @type ^`io.grpc.internal.e1$a` @kind object;
  #L367736.  v1:= v8 @kind object;
  #L367738.  v3:= v10 @kind object;
  #L36773a.  v4:= v11 @kind object;
  #L36773c.  v5:= v12 @kind object;
  #L36773e.  v7:= v13 @kind object;
  #L367740.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lio/grpc/internal/e1;.<init>:(Lio/grpc/internal/p;Lio/grpc/MethodDescriptor;Lio/grpc/t0;Lio/grpc/c;Lio/grpc/internal/e1$a;[Lio/grpc/j;)V` @kind direct;
  #L367746.  v11:= v9.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L36774a.  call temp:= `incrementAndGet`(v11) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L367750.  v11:= temp;
  #L367752.  if v11 <= 0 then goto L367770;
  #L367756.  v10:= v9.`io.grpc.internal.k$a.g` @type ^`io.grpc.internal.e1$a` @kind object;
  #L36775a.  call `onComplete`(v10) @signature `Lio/grpc/internal/e1$a;.onComplete:()V` @kind interface;
  #L367760.  v10:= new `io.grpc.internal.b0`;
  #L367764.  v11:= v9.`io.grpc.internal.k$a.d` @type ^`io.grpc.Status` @kind object;
  #L367768.  call `<init>`(v10, v11, v13) @signature `Lio/grpc/internal/b0;.<init>:(Lio/grpc/Status;[Lio/grpc/j;)V` @kind direct;
  #L36776e.  return v10 @kind object;
  #L367770.  v11:= new `io.grpc.internal.k$a$b`;
  #L367774.  call `<init>`(v11, v9, v10, v12) @signature `Lio/grpc/internal/k$a$b;.<init>:(Lio/grpc/internal/k$a;Lio/grpc/MethodDescriptor;Lio/grpc/c;)V` @kind direct;
  #L36777a.  v10:= instanceof @variable v0 @type ^`io.grpc.h0` @kind boolean;
  #L36777e.  if v10 == 0 then goto L3677aa;
  #L367782.  v10:= v0 @kind object;
  #L367784.  v10:= (`io.grpc.h0`) v10 @kind object;
  #L367788.  call temp:= `a`(v10) @signature `Lio/grpc/h0;.a:()Z` @kind interface;
  #L36778e.  v10:= temp;
  #L367790.  if v10 == 0 then goto L3677aa;
  #L367794.  call temp:= `e`(v12) @signature `Lio/grpc/c;.e:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L36779a.  v10:= temp @kind object;
  #L36779c.  if v10 == 0 then goto L3677aa;
  #L3677a0.  call temp:= `e`(v12) @signature `Lio/grpc/c;.e:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L3677a6.  v10:= temp @kind object;
  #L3677a8.  goto L3677b6;
  #L3677aa.  v10:= v9.`io.grpc.internal.k$a.h` @type ^`io.grpc.internal.k` @kind object;
  #L3677ae.  call temp:= `h`(v10) @signature `Lio/grpc/internal/k;.h:(Lio/grpc/internal/k;)Ljava/util/concurrent/Executor;` @kind static;
  #L3677b4.  v10:= temp @kind object;
  #L3677b6.  call `applyRequestMetadata`(v0, v11, v10, v8) @signature `Lio/grpc/b;.applyRequestMetadata:(Lio/grpc/b$b;Ljava/util/concurrent/Executor;Lio/grpc/b$a;)V` @kind virtual;
  #L3677bc.  goto L3677de;
  #L3677be.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3677c0.  v11:= `@@io.grpc.Status.n` @type ^`io.grpc.Status` @kind object;
  #L3677c4.  v12:= "Credentials should use fail() instead of throwing exceptions" @kind object;
  #L3677c8.  call temp:= `r`(v11, v12) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L3677ce.  v11:= temp @kind object;
  #L3677d0.  call temp:= `q`(v11, v10) @signature `Lio/grpc/Status;.q:(Ljava/lang/Throwable;)Lio/grpc/Status;` @kind virtual;
  #L3677d6.  v10:= temp @kind object;
  #L3677d8.  call `b`(v8, v10) @signature `Lio/grpc/internal/e1;.b:(Lio/grpc/Status;)V` @kind virtual;
  #L3677de.  call temp:= `d`(v8) @signature `Lio/grpc/internal/e1;.d:()Lio/grpc/internal/o;` @kind virtual;
  #L3677e4.  v10:= temp @kind object;
  #L3677e6.  return v10 @kind object;
  #L3677e8.  v0:= v9.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L3677ec.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L3677f2.  v0:= temp;
  #L3677f4.  if v0 < 0 then goto L367808;
  #L3677f8.  v10:= new `io.grpc.internal.b0`;
  #L3677fc.  v11:= v9.`io.grpc.internal.k$a.d` @type ^`io.grpc.Status` @kind object;
  #L367800.  call `<init>`(v10, v11, v13) @signature `Lio/grpc/internal/b0;.<init>:(Lio/grpc/Status;[Lio/grpc/j;)V` @kind direct;
  #L367806.  return v10 @kind object;
  #L367808.  v0:= v9.`io.grpc.internal.k$a.a` @type ^`io.grpc.internal.s` @kind object;
  #L36780c.  call temp:= `b`(v0, v10, v11, v12, v13) @signature `Lio/grpc/internal/p;.b:(Lio/grpc/MethodDescriptor;Lio/grpc/t0;Lio/grpc/c;[Lio/grpc/j;)Lio/grpc/internal/o;` @kind interface;
  #L367812.  v10:= temp @kind object;
  #L367814.  return v10 @kind object;
  catch `java.lang.Throwable` @[L36777a..L3677bc] goto L3677be;
}
procedure `void` `c`(`io.grpc.internal.k$a` v2 @kind this, `io.grpc.Status` v3 @kind object) @signature `Lio/grpc/internal/k$a;.c:(Lio/grpc/Status;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L367950.  v0:= "status" @kind object;
  #L367954.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36795a.  @monitorenter v2
  #L36795c.  v0:= v2.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L367960.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L367966.  v0:= temp;
  #L367968.  if v0 >= 0 then goto L3679a2;
  #L36796c.  v2.`io.grpc.internal.k$a.d` @type ^`io.grpc.Status` := v3 @kind object;
  #L367970.  v0:= v2.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L367974.  v1:= 2147483647I;
  #L36797a.  call temp:= `addAndGet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L367980.  v0:= v2.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L367984.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L36798a.  v0:= temp;
  #L36798c.  if v0 == 0 then goto L367998;
  #L367990.  v2.`io.grpc.internal.k$a.e` @type ^`io.grpc.Status` := v3 @kind object;
  #L367994.  @monitorexit v2
  #L367996.  return @kind void;
  #L367998.  @monitorexit v2
  #L36799a.  call `c`(v2, v3) @signature `Lio/grpc/internal/g0;.c:(Lio/grpc/Status;)V` @kind super;
  #L3679a0.  return @kind void;
  #L3679a2.  @monitorexit v2
  #L3679a4.  return @kind void;
  #L3679a6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3679a8.  @monitorexit v2
  #L3679aa.  throw v3;
  catch `java.lang.Throwable` @[L36795c..L36799a] goto L3679a6;
  catch `java.lang.Throwable` @[L3679a2..L3679aa] goto L3679a6;
}
procedure `void` `d`(`io.grpc.internal.k$a` v2 @kind this, `io.grpc.Status` v3 @kind object) @signature `Lio/grpc/internal/k$a;.d:(Lio/grpc/Status;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3679d0.  v0:= "status" @kind object;
  #L3679d4.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3679da.  @monitorenter v2
  #L3679dc.  v0:= v2.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L3679e0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L3679e6.  v0:= temp;
  #L3679e8.  if v0 >= 0 then goto L367a02;
  #L3679ec.  v2.`io.grpc.internal.k$a.d` @type ^`io.grpc.Status` := v3 @kind object;
  #L3679f0.  v0:= v2.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L3679f4.  v1:= 2147483647I;
  #L3679fa.  call temp:= `addAndGet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L367a00.  goto L367a0e;
  #L367a02.  v0:= v2.`io.grpc.internal.k$a.f` @type ^`io.grpc.Status` @kind object;
  #L367a06.  if v0 == 0 then goto L367a0e;
  #L367a0a.  @monitorexit v2
  #L367a0c.  return @kind void;
  #L367a0e.  v0:= v2.`io.grpc.internal.k$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L367a12.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L367a18.  v0:= temp;
  #L367a1a.  if v0 == 0 then goto L367a26;
  #L367a1e.  v2.`io.grpc.internal.k$a.f` @type ^`io.grpc.Status` := v3 @kind object;
  #L367a22.  @monitorexit v2
  #L367a24.  return @kind void;
  #L367a26.  @monitorexit v2
  #L367a28.  call `d`(v2, v3) @signature `Lio/grpc/internal/g0;.d:(Lio/grpc/Status;)V` @kind super;
  #L367a2e.  return @kind void;
  #L367a30.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L367a32.  @monitorexit v2
  #L367a34.  throw v3;
  catch `java.lang.Throwable` @[L3679dc..L367a28] goto L367a30;
  catch `java.lang.Throwable` @[L367a32..L367a34] goto L367a30;
}
