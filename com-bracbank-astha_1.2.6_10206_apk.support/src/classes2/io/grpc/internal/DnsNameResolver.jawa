record `io.grpc.internal.DnsNameResolver` @kind class @AccessFlag PUBLIC extends `io.grpc.u0` @kind class {
  `io.grpc.z0` `io.grpc.internal.DnsNameResolver.a` @AccessFlag FINAL;
  `java.util.Random` `io.grpc.internal.DnsNameResolver.b` @AccessFlag PRIVATE_FINAL;
  `io.grpc.internal.DnsNameResolver$b` `io.grpc.internal.DnsNameResolver.c` @AccessFlag PROTECTED_VOLATILE;
  `java.util.concurrent.atomic.AtomicReference` `io.grpc.internal.DnsNameResolver.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `io.grpc.internal.DnsNameResolver.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `io.grpc.internal.DnsNameResolver.f` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.internal.DnsNameResolver.g` @AccessFlag PRIVATE_FINAL;
  `io.grpc.internal.w1$d` `io.grpc.internal.DnsNameResolver.h` @AccessFlag PRIVATE_FINAL;
  `long` `io.grpc.internal.DnsNameResolver.i` @AccessFlag PRIVATE_FINAL;
  `io.grpc.g1` `io.grpc.internal.DnsNameResolver.j` @AccessFlag PRIVATE_FINAL;
  `com.google.common.base.Stopwatch` `io.grpc.internal.DnsNameResolver.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.internal.DnsNameResolver.l` @AccessFlag PROTECTED;
  `boolean` `io.grpc.internal.DnsNameResolver.m` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `io.grpc.internal.DnsNameResolver.n` @AccessFlag PRIVATE;
  `boolean` `io.grpc.internal.DnsNameResolver.o` @AccessFlag PRIVATE_FINAL;
  `io.grpc.u0$h` `io.grpc.internal.DnsNameResolver.p` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.internal.DnsNameResolver.q` @AccessFlag PRIVATE;
  `io.grpc.u0$e` `io.grpc.internal.DnsNameResolver.r` @AccessFlag PRIVATE;
}
global `io.grpc.internal.DnsNameResolver$f` `@@io.grpc.internal.DnsNameResolver.A` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@io.grpc.internal.DnsNameResolver.B` @AccessFlag PRIVATE_STATIC;
global `java.util.logging.Logger` `@@io.grpc.internal.DnsNameResolver.s` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Set` `@@io.grpc.internal.DnsNameResolver.t` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@io.grpc.internal.DnsNameResolver.u` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@io.grpc.internal.DnsNameResolver.v` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@io.grpc.internal.DnsNameResolver.w` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@io.grpc.internal.DnsNameResolver.x` @AccessFlag STATIC;
global `boolean` `@@io.grpc.internal.DnsNameResolver.y` @AccessFlag STATIC;
global `boolean` `@@io.grpc.internal.DnsNameResolver.z` @AccessFlag PROTECTED_STATIC;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/DnsNameResolver;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L36dd40.  v0:= constclass @type ^`io.grpc.internal.DnsNameResolver` @kind object;
  #L36dd44.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36dd4a.  v1:= temp @kind object;
  #L36dd4c.  call temp:= `getLogger`(v1) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L36dd52.  v1:= temp @kind object;
  #L36dd54.  `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` := v1 @kind object;
  #L36dd58.  v1:= new `java.util.HashSet`;
  #L36dd5c.  v2:= "clientLanguage" @kind object;
  #L36dd60.  v3:= "percentage" @kind object;
  #L36dd64.  v4:= "clientHostname" @kind object;
  #L36dd68.  v5:= "serviceConfig" @kind object;
  #L36dd6c.  temp:= new `java.lang.String`[v2, v3, v4, v5];
  #L36dd72.  v2:= temp @kind object;
  #L36dd74.  call temp:= `asList`(v2) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L36dd7a.  v2:= temp @kind object;
  #L36dd7c.  call `<init>`(v1, v2) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L36dd82.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L36dd88.  v1:= temp @kind object;
  #L36dd8a.  `@@io.grpc.internal.DnsNameResolver.t` @type ^`java.util.Set` := v1 @kind object;
  #L36dd8e.  v1:= "io.grpc.internal.DnsNameResolverProvider.enable_jndi" @kind object;
  #L36dd92.  v2:= "true" @kind object;
  #L36dd96.  call temp:= `getProperty`(v1, v2) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L36dd9c.  v1:= temp @kind object;
  #L36dd9e.  `@@io.grpc.internal.DnsNameResolver.u` @type ^`java.lang.String` := v1 @kind object;
  #L36dda2.  v2:= "io.grpc.internal.DnsNameResolverProvider.enable_jndi_localhost" @kind object;
  #L36dda6.  v3:= "false" @kind object;
  #L36ddaa.  call temp:= `getProperty`(v2, v3) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L36ddb0.  v2:= temp @kind object;
  #L36ddb2.  `@@io.grpc.internal.DnsNameResolver.v` @type ^`java.lang.String` := v2 @kind object;
  #L36ddb6.  v4:= "io.grpc.internal.DnsNameResolverProvider.enable_service_config" @kind object;
  #L36ddba.  call temp:= `getProperty`(v4, v3) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L36ddc0.  v3:= temp @kind object;
  #L36ddc2.  `@@io.grpc.internal.DnsNameResolver.w` @type ^`java.lang.String` := v3 @kind object;
  #L36ddc6.  call temp:= `parseBoolean`(v1) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L36ddcc.  v1:= temp;
  #L36ddce.  `@@io.grpc.internal.DnsNameResolver.x` @type ^`boolean` := v1 @kind boolean;
  #L36ddd2.  call temp:= `parseBoolean`(v2) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L36ddd8.  v1:= temp;
  #L36ddda.  `@@io.grpc.internal.DnsNameResolver.y` @type ^`boolean` := v1 @kind boolean;
  #L36ddde.  call temp:= `parseBoolean`(v3) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L36dde4.  v1:= temp;
  #L36dde6.  `@@io.grpc.internal.DnsNameResolver.z` @type ^`boolean` := v1 @kind boolean;
  #L36ddea.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L36ddf0.  v0:= temp @kind object;
  #L36ddf2.  call temp:= `v`(v0) @signature `Lio/grpc/internal/DnsNameResolver;.v:(Ljava/lang/ClassLoader;)Lio/grpc/internal/DnsNameResolver$f;` @kind static;
  #L36ddf8.  v0:= temp @kind object;
  #L36ddfa.  `@@io.grpc.internal.DnsNameResolver.A` @type ^`io.grpc.internal.DnsNameResolver$f` := v0 @kind object;
  #L36ddfe.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.DnsNameResolver` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `io.grpc.u0$b` v6 @kind object, `io.grpc.internal.w1$d` v7 @kind object, `com.google.common.base.Stopwatch` v8 @kind object, `boolean` v9 ) @signature `Lio/grpc/internal/DnsNameResolver;.<init>:(Ljava/lang/String;Ljava/lang/String;Lio/grpc/u0$b;Lio/grpc/internal/w1$d;Lcom/google/common/base/Stopwatch;Z)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L36de10.  call `<init>`(v3) @signature `Lio/grpc/u0;.<init>:()V` @kind direct;
  #L36de16.  v4:= new `java.util.Random`;
  #L36de1a.  call `<init>`(v4) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L36de20.  v3.`io.grpc.internal.DnsNameResolver.b` @type ^`java.util.Random` := v4 @kind object;
  #L36de24.  v4:= `@@io.grpc.internal.DnsNameResolver$JdkAddressResolver.a` @type ^`io.grpc.internal.DnsNameResolver$JdkAddressResolver` @kind object;
  #L36de28.  v3.`io.grpc.internal.DnsNameResolver.c` @type ^`io.grpc.internal.DnsNameResolver$b` := v4 @kind object;
  #L36de2c.  v4:= new `java.util.concurrent.atomic.AtomicReference`;
  #L36de30.  call `<init>`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L36de36.  v3.`io.grpc.internal.DnsNameResolver.d` @type ^`java.util.concurrent.atomic.AtomicReference` := v4 @kind object;
  #L36de3a.  v4:= "args" @kind object;
  #L36de3e.  call temp:= `checkNotNull`(v6, v4) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36de44.  v3.`io.grpc.internal.DnsNameResolver.h` @type ^`io.grpc.internal.w1$d` := v7 @kind object;
  #L36de48.  v4:= new `java.lang.StringBuilder`;
  #L36de4c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36de52.  v7:= "//" @kind object;
  #L36de56.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36de5c.  v7:= "name" @kind object;
  #L36de60.  call temp:= `checkNotNull`(v5, v7) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36de66.  v7:= temp @kind object;
  #L36de68.  v7:= (`java.lang.String`) v7 @kind object;
  #L36de6c.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36de72.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36de78.  v4:= temp @kind object;
  #L36de7a.  call temp:= `create`(v4) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L36de80.  v4:= temp @kind object;
  #L36de82.  call temp:= `getHost`(v4) @signature `Ljava/net/URI;.getHost:()Ljava/lang/String;` @kind virtual;
  #L36de88.  v7:= temp @kind object;
  #L36de8a.  v0:= 1I;
  #L36de8c.  v1:= 0I;
  #L36de8e.  if v7 == 0 then goto L36de96;
  #L36de92.  v7:= 1I;
  #L36de94.  goto L36de98;
  #L36de96.  v7:= 0I;
  #L36de98.  v2:= "Invalid DNS name: %s" @kind object;
  #L36de9c.  call `checkArgument`(v7, v2, v5) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L36dea2.  call temp:= `getAuthority`(v4) @signature `Ljava/net/URI;.getAuthority:()Ljava/lang/String;` @kind virtual;
  #L36dea8.  v5:= temp @kind object;
  #L36deaa.  v7:= "nameUri (%s) doesn't have an authority" @kind object;
  #L36deae.  call temp:= `checkNotNull`(v5, v7, v4) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36deb4.  v5:= temp @kind object;
  #L36deb6.  v5:= (`java.lang.String`) v5 @kind object;
  #L36deba.  v3.`io.grpc.internal.DnsNameResolver.e` @type ^`java.lang.String` := v5 @kind object;
  #L36debe.  call temp:= `getHost`(v4) @signature `Ljava/net/URI;.getHost:()Ljava/lang/String;` @kind virtual;
  #L36dec4.  v5:= temp @kind object;
  #L36dec6.  v3.`io.grpc.internal.DnsNameResolver.f` @type ^`java.lang.String` := v5 @kind object;
  #L36deca.  call temp:= `getPort`(v4) @signature `Ljava/net/URI;.getPort:()I` @kind virtual;
  #L36ded0.  v5:= temp;
  #L36ded2.  v7:= -1I;
  #L36ded4.  if v5 != v7 then goto L36dee6;
  #L36ded8.  call temp:= `a`(v6) @signature `Lio/grpc/u0$b;.a:()I` @kind virtual;
  #L36dede.  v4:= temp;
  #L36dee0.  v3.`io.grpc.internal.DnsNameResolver.g` @type ^`int` := v4;
  #L36dee4.  goto L36def2;
  #L36dee6.  call temp:= `getPort`(v4) @signature `Ljava/net/URI;.getPort:()I` @kind virtual;
  #L36deec.  v4:= temp;
  #L36deee.  v3.`io.grpc.internal.DnsNameResolver.g` @type ^`int` := v4;
  #L36def2.  call temp:= `c`(v6) @signature `Lio/grpc/u0$b;.c:()Lio/grpc/z0;` @kind virtual;
  #L36def8.  v4:= temp @kind object;
  #L36defa.  v5:= "proxyDetector" @kind object;
  #L36defe.  call temp:= `checkNotNull`(v4, v5) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36df04.  v4:= temp @kind object;
  #L36df06.  v4:= (`io.grpc.z0`) v4 @kind object;
  #L36df0a.  v3.`io.grpc.internal.DnsNameResolver.a` @type ^`io.grpc.z0` := v4 @kind object;
  #L36df0e.  call temp:= `s`(v9) @signature `Lio/grpc/internal/DnsNameResolver;.s:(Z)J` @kind static;
  #L36df14.  v4:= temp @kind wide;
  #L36df16.  v3.`io.grpc.internal.DnsNameResolver.i` @type ^`long` := v4 @kind wide;
  #L36df1a.  v4:= "stopwatch" @kind object;
  #L36df1e.  call temp:= `checkNotNull`(v8, v4) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36df24.  v4:= temp @kind object;
  #L36df26.  v4:= (`com.google.common.base.Stopwatch`) v4 @kind object;
  #L36df2a.  v3.`io.grpc.internal.DnsNameResolver.k` @type ^`com.google.common.base.Stopwatch` := v4 @kind object;
  #L36df2e.  call temp:= `e`(v6) @signature `Lio/grpc/u0$b;.e:()Lio/grpc/g1;` @kind virtual;
  #L36df34.  v4:= temp @kind object;
  #L36df36.  v5:= "syncContext" @kind object;
  #L36df3a.  call temp:= `checkNotNull`(v4, v5) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36df40.  v4:= temp @kind object;
  #L36df42.  v4:= (`io.grpc.g1`) v4 @kind object;
  #L36df46.  v3.`io.grpc.internal.DnsNameResolver.j` @type ^`io.grpc.g1` := v4 @kind object;
  #L36df4a.  call temp:= `b`(v6) @signature `Lio/grpc/u0$b;.b:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L36df50.  v4:= temp @kind object;
  #L36df52.  v3.`io.grpc.internal.DnsNameResolver.n` @type ^`java.util.concurrent.Executor` := v4 @kind object;
  #L36df56.  if v4 != 0 then goto L36df5c;
  #L36df5a.  goto L36df5e;
  #L36df5c.  v0:= 0I;
  #L36df5e.  v3.`io.grpc.internal.DnsNameResolver.o` @type ^`boolean` := v0 @kind boolean;
  #L36df62.  call temp:= `d`(v6) @signature `Lio/grpc/u0$b;.d:()Lio/grpc/u0$h;` @kind virtual;
  #L36df68.  v4:= temp @kind object;
  #L36df6a.  v5:= "serviceConfigParser" @kind object;
  #L36df6e.  call temp:= `checkNotNull`(v4, v5) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36df74.  v4:= temp @kind object;
  #L36df76.  v4:= (`io.grpc.u0$h`) v4 @kind object;
  #L36df7a.  v3.`io.grpc.internal.DnsNameResolver.p` @type ^`io.grpc.u0$h` := v4 @kind object;
  #L36df7e.  return @kind void;
}
procedure `java.util.List` `A`(`io.grpc.internal.DnsNameResolver` v6 @kind this) @signature `Lio/grpc/internal/DnsNameResolver;.A:()Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L36da40.  v0:= 0I;
  #L36da42.  v1:= v6.`io.grpc.internal.DnsNameResolver.c` @type ^`io.grpc.internal.DnsNameResolver$b` @kind object;
  #L36da46.  v2:= v6.`io.grpc.internal.DnsNameResolver.f` @type ^`java.lang.String` @kind object;
  #L36da4a.  call temp:= `a`(v1, v2) @signature `Lio/grpc/internal/DnsNameResolver$b;.a:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L36da50.  v0:= temp @kind object;
  #L36da52.  v1:= new `java.util.ArrayList`;
  #L36da56.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36da5c.  v2:= temp;
  #L36da5e.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L36da64.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36da6a.  v0:= temp @kind object;
  #L36da6c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36da72.  v2:= temp;
  #L36da74.  if v2 == 0 then goto L36daa4;
  #L36da78.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36da7e.  v2:= temp @kind object;
  #L36da80.  v2:= (`java.net.InetAddress`) v2 @kind object;
  #L36da84.  v3:= new `io.grpc.v`;
  #L36da88.  v4:= new `java.net.InetSocketAddress`;
  #L36da8c.  v5:= v6.`io.grpc.internal.DnsNameResolver.g` @type ^`int`;
  #L36da90.  call `<init>`(v4, v2, v5) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L36da96.  call `<init>`(v3, v4) @signature `Lio/grpc/v;.<init>:(Ljava/net/SocketAddress;)V` @kind direct;
  #L36da9c.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36daa2.  goto L36da6c;
  #L36daa4.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L36daaa.  v0:= temp @kind object;
  #L36daac.  return v0 @kind object;
  #L36daae.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36dab0.  goto L36dac6;
  #L36dab2.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L36dab4.  call `throwIfUnchecked`(v0) @signature `Lcom/google/common/base/Throwables;.throwIfUnchecked:(Ljava/lang/Throwable;)V` @kind static;
  #L36daba.  v1:= new `java.lang.RuntimeException`;
  #L36dabe.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L36dac4.  throw v1;
  #L36dac6.  if v0 == 0 then goto L36dadc;
  #L36daca.  v2:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36dace.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L36dad2.  v4:= "Address resolution failure" @kind object;
  #L36dad6.  call `log`(v2, v3, v4, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L36dadc.  throw v1;
  catch `java.lang.Exception` @[L36da42..L36da52] goto L36dab2;
  catch `java.lang.Throwable` @[L36da42..L36da52] goto L36daae;
  catch `java.lang.Throwable` @[L36dab4..L36dac6] goto L36daae;
}
procedure `io.grpc.u0$c` `B`(`io.grpc.internal.DnsNameResolver` v5 @kind this) @signature `Lio/grpc/internal/DnsNameResolver;.B:()Lio/grpc/u0$c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36d598.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L36d59e.  v0:= temp @kind object;
  #L36d5a0.  call temp:= `u`(v5) @signature `Lio/grpc/internal/DnsNameResolver;.u:()Lio/grpc/internal/DnsNameResolver$e;` @kind virtual;
  #L36d5a6.  v1:= temp @kind object;
  #L36d5a8.  if v1 == 0 then goto L36d5f0;
  #L36d5ac.  v2:= new `java.lang.StringBuilder`;
  #L36d5b0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36d5b6.  v3:= "_grpc_config." @kind object;
  #L36d5ba.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d5c0.  v3:= v5.`io.grpc.internal.DnsNameResolver.f` @type ^`java.lang.String` @kind object;
  #L36d5c4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d5ca.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36d5d0.  v2:= temp @kind object;
  #L36d5d2.  call temp:= `a`(v1, v2) @signature `Lio/grpc/internal/DnsNameResolver$e;.a:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L36d5d8.  v0:= temp @kind object;
  #L36d5da.  goto L36d5f0;
  #L36d5dc.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L36d5de.  v2:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36d5e2.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L36d5e6.  v4:= "ServiceConfig resolution failure" @kind object;
  #L36d5ea.  call `log`(v2, v3, v4, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L36d5f0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L36d5f6.  v1:= temp;
  #L36d5f8.  if v1 != 0 then goto L36d64c;
  #L36d5fc.  v1:= v5.`io.grpc.internal.DnsNameResolver.b` @type ^`java.util.Random` @kind object;
  #L36d600.  call temp:= `r`() @signature `Lio/grpc/internal/DnsNameResolver;.r:()Ljava/lang/String;` @kind static;
  #L36d606.  v2:= temp @kind object;
  #L36d608.  call temp:= `x`(v0, v1, v2) @signature `Lio/grpc/internal/DnsNameResolver;.x:(Ljava/util/List;Ljava/util/Random;Ljava/lang/String;)Lio/grpc/u0$c;` @kind static;
  #L36d60e.  v0:= temp @kind object;
  #L36d610.  if v0 == 0 then goto L36d66e;
  #L36d614.  call temp:= `d`(v0) @signature `Lio/grpc/u0$c;.d:()Lio/grpc/Status;` @kind virtual;
  #L36d61a.  v1:= temp @kind object;
  #L36d61c.  if v1 == 0 then goto L36d632;
  #L36d620.  call temp:= `d`(v0) @signature `Lio/grpc/u0$c;.d:()Lio/grpc/Status;` @kind virtual;
  #L36d626.  v0:= temp @kind object;
  #L36d628.  call temp:= `b`(v0) @signature `Lio/grpc/u0$c;.b:(Lio/grpc/Status;)Lio/grpc/u0$c;` @kind static;
  #L36d62e.  v0:= temp @kind object;
  #L36d630.  return v0 @kind object;
  #L36d632.  call temp:= `c`(v0) @signature `Lio/grpc/u0$c;.c:()Ljava/lang/Object;` @kind virtual;
  #L36d638.  v0:= temp @kind object;
  #L36d63a.  v0:= (`java.util.Map`) v0 @kind object;
  #L36d63e.  v1:= v5.`io.grpc.internal.DnsNameResolver.p` @type ^`io.grpc.u0$h` @kind object;
  #L36d642.  call temp:= `a`(v1, v0) @signature `Lio/grpc/u0$h;.a:(Ljava/util/Map;)Lio/grpc/u0$c;` @kind virtual;
  #L36d648.  v0:= temp @kind object;
  #L36d64a.  return v0 @kind object;
  #L36d64c.  v0:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36d650.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L36d654.  v2:= 1I;
  #L36d656.  v2:= new `java.lang.Object`[v2];
  #L36d65a.  v3:= 0I;
  #L36d65c.  v4:= v5.`io.grpc.internal.DnsNameResolver.f` @type ^`java.lang.String` @kind object;
  #L36d660.  v2[v3]:= v4 @kind object;
  #L36d664.  v3:= "No TXT records found for {0}" @kind object;
  #L36d668.  call `log`(v0, v1, v3, v2) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L36d66e.  v0:= 0I;
  #L36d670.  return v0 @kind object;
  catch `java.lang.Exception` @[L36d5ac..L36d5da] goto L36d5dc;
}
procedure `boolean` `C`(`boolean` v4 , `boolean` v5 , `java.lang.String` v6 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.C:(ZZLjava/lang/String;)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36d3e0.  v0:= 0I;
  #L36d3e2.  if v4 != 0 then goto L36d3e8;
  #L36d3e6.  return v0;
  #L36d3e8.  v4:= "localhost" @kind object;
  #L36d3ec.  call temp:= `equalsIgnoreCase`(v4, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L36d3f2.  v4:= temp;
  #L36d3f4.  if v4 == 0 then goto L36d3fa;
  #L36d3f8.  return v5;
  #L36d3fa.  v4:= ":" @kind object;
  #L36d3fe.  call temp:= `contains`(v6, v4) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L36d404.  v4:= temp;
  #L36d406.  if v4 == 0 then goto L36d40c;
  #L36d40a.  return v0;
  #L36d40c.  v4:= 1I;
  #L36d40e.  v5:= 0I;
  #L36d410.  v1:= 1I;
  #L36d412.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L36d418.  v2:= temp;
  #L36d41a.  if v5 >= v2 then goto L36d44c;
  #L36d41e.  call temp:= `charAt`(v6, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L36d424.  v2:= temp;
  #L36d426.  v3:= 46I;
  #L36d42a.  if v2 == v3 then goto L36d446;
  #L36d42e.  v3:= 48I;
  #L36d432.  if v2 < v3 then goto L36d442;
  #L36d436.  v3:= 57I;
  #L36d43a.  if v2 > v3 then goto L36d442;
  #L36d43e.  v2:= 1I;
  #L36d440.  goto L36d444;
  #L36d442.  v2:= 0I;
  #L36d444.  v1:= v1 ^& v2 @kind int;
  #L36d446.  v5:= v5 + 1;
  #L36d44a.  goto L36d412;
  #L36d44c.  v4:= v4 ^~ v1 @kind int;
  #L36d44e.  return v4;
}
procedure `io.grpc.g1` `f`(`io.grpc.internal.DnsNameResolver` v0 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.f:(Lio/grpc/internal/DnsNameResolver;)Lio/grpc/g1;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36d694.  v0:= v0.`io.grpc.internal.DnsNameResolver.j` @type ^`io.grpc.g1` @kind object;
  #L36d698.  return v0 @kind object;
}
procedure `java.util.logging.Logger` `g`() @signature `Lio/grpc/internal/DnsNameResolver;.g:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L36dc80.  v0:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36dc84.  return v0 @kind object;
}
procedure `java.lang.String` `h`(`io.grpc.internal.DnsNameResolver` v0 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.h:(Lio/grpc/internal/DnsNameResolver;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36d8b0.  v0:= v0.`io.grpc.internal.DnsNameResolver.f` @type ^`java.lang.String` @kind object;
  #L36d8b4.  return v0 @kind object;
}
procedure `io.grpc.v` `i`(`io.grpc.internal.DnsNameResolver` v0 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.i:(Lio/grpc/internal/DnsNameResolver;)Lio/grpc/v;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36d478.  call temp:= `n`(v0) @signature `Lio/grpc/internal/DnsNameResolver;.n:()Lio/grpc/v;` @kind direct;
  #L36d47e.  v0:= temp @kind object;
  #L36d480.  return v0 @kind object;
}
procedure `long` `j`(`io.grpc.internal.DnsNameResolver` v2 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.j:(Lio/grpc/internal/DnsNameResolver;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L36dc98.  v0:= v2.`io.grpc.internal.DnsNameResolver.i` @type ^`long` @kind wide;
  #L36dc9c.  return v0 @kind wide;
}
procedure `com.google.common.base.Stopwatch` `k`(`io.grpc.internal.DnsNameResolver` v0 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.k:(Lio/grpc/internal/DnsNameResolver;)Lcom/google/common/base/Stopwatch;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36d460.  v0:= v0.`io.grpc.internal.DnsNameResolver.k` @type ^`com.google.common.base.Stopwatch` @kind object;
  #L36d464.  return v0 @kind object;
}
procedure `boolean` `l`(`io.grpc.internal.DnsNameResolver` v0 @kind object, `boolean` v1 ) @signature `Lio/grpc/internal/DnsNameResolver;.l:(Lio/grpc/internal/DnsNameResolver;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36d370.  v0.`io.grpc.internal.DnsNameResolver.q` @type ^`boolean` := v1 @kind boolean;
  #L36d374.  return v1;
}
procedure `boolean` `m`(`io.grpc.internal.DnsNameResolver` v5 @kind this) @signature `Lio/grpc/internal/DnsNameResolver;.m:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36d388.  v0:= v5.`io.grpc.internal.DnsNameResolver.l` @type ^`boolean` @kind boolean;
  #L36d38c.  if v0 == 0 then goto L36d3ca;
  #L36d390.  v0:= v5.`io.grpc.internal.DnsNameResolver.i` @type ^`long` @kind wide;
  #L36d394.  v2:= 0L;
  #L36d398.  v4:= lcmp(v0, v2);
  #L36d39c.  if v4 == 0 then goto L36d3ca;
  #L36d3a0.  v4:= lcmp(v0, v2);
  #L36d3a4.  if v4 <= 0 then goto L36d3c6;
  #L36d3a8.  v0:= v5.`io.grpc.internal.DnsNameResolver.k` @type ^`com.google.common.base.Stopwatch` @kind object;
  #L36d3ac.  v1:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L36d3b0.  call temp:= `elapsed`(v0, v1) @signature `Lcom/google/common/base/Stopwatch;.elapsed:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L36d3b6.  v0:= temp @kind wide;
  #L36d3b8.  v2:= v5.`io.grpc.internal.DnsNameResolver.i` @type ^`long` @kind wide;
  #L36d3bc.  v4:= lcmp(v0, v2);
  #L36d3c0.  if v4 <= 0 then goto L36d3c6;
  #L36d3c4.  goto L36d3ca;
  #L36d3c6.  v0:= 0I;
  #L36d3c8.  goto L36d3cc;
  #L36d3ca.  v0:= 1I;
  #L36d3cc.  return v0;
}
procedure `io.grpc.v` `n`(`io.grpc.internal.DnsNameResolver` v2 @kind this) @signature `Lio/grpc/internal/DnsNameResolver;.n:()Lio/grpc/v;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L36d494.  v0:= v2.`io.grpc.internal.DnsNameResolver.f` @type ^`java.lang.String` @kind object;
  #L36d498.  v1:= v2.`io.grpc.internal.DnsNameResolver.g` @type ^`int`;
  #L36d49c.  call temp:= `createUnresolved`(v0, v1) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L36d4a2.  v0:= temp @kind object;
  #L36d4a4.  v1:= v2.`io.grpc.internal.DnsNameResolver.a` @type ^`io.grpc.z0` @kind object;
  #L36d4a8.  call temp:= `a`(v1, v0) @signature `Lio/grpc/z0;.a:(Ljava/net/SocketAddress;)Lio/grpc/ProxiedSocketAddress;` @kind interface;
  #L36d4ae.  v0:= temp @kind object;
  #L36d4b0.  if v0 == 0 then goto L36d4c0;
  #L36d4b4.  v1:= new `io.grpc.v`;
  #L36d4b8.  call `<init>`(v1, v0) @signature `Lio/grpc/v;.<init>:(Ljava/net/SocketAddress;)V` @kind direct;
  #L36d4be.  return v1 @kind object;
  #L36d4c0.  v0:= 0I;
  #L36d4c2.  return v0 @kind object;
}
procedure `java.util.List` `p`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.p:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L36d934.  v0:= "clientLanguage" @kind object;
  #L36d938.  call temp:= `g`(v1, v0) @signature `Lio/grpc/internal/v0;.g:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L36d93e.  v1:= temp @kind object;
  #L36d940.  return v1 @kind object;
}
procedure `java.util.List` `q`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.q:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L36d954.  v0:= "clientHostname" @kind object;
  #L36d958.  call temp:= `g`(v1, v0) @signature `Lio/grpc/internal/v0;.g:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L36d95e.  v1:= temp @kind object;
  #L36d960.  return v1 @kind object;
}
procedure `java.lang.String` `r`() @signature `Lio/grpc/internal/DnsNameResolver;.r:()Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L36d8c8.  v0:= `@@io.grpc.internal.DnsNameResolver.B` @type ^`java.lang.String` @kind object;
  #L36d8cc.  if v0 != 0 then goto L36d8f4;
  #L36d8d0.  call temp:= `getLocalHost`() @signature `Ljava/net/InetAddress;.getLocalHost:()Ljava/net/InetAddress;` @kind static;
  #L36d8d6.  v0:= temp @kind object;
  #L36d8d8.  call temp:= `getHostName`(v0) @signature `Ljava/net/InetAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L36d8de.  v0:= temp @kind object;
  #L36d8e0.  `@@io.grpc.internal.DnsNameResolver.B` @type ^`java.lang.String` := v0 @kind object;
  #L36d8e4.  goto L36d8f4;
  #L36d8e6.  v0:= Exception @type ^`java.net.UnknownHostException` @kind object;
  #L36d8e8.  v1:= new `java.lang.RuntimeException`;
  #L36d8ec.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L36d8f2.  throw v1;
  #L36d8f4.  v0:= `@@io.grpc.internal.DnsNameResolver.B` @type ^`java.lang.String` @kind object;
  #L36d8f8.  return v0 @kind object;
  catch `java.net.UnknownHostException` @[L36d8d0..L36d8e4] goto L36d8e6;
}
procedure `long` `s`(`boolean` v9 ) @signature `Lio/grpc/internal/DnsNameResolver;.s:(Z)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L36dcb0.  v0:= 0L;
  #L36dcb4.  if v9 == 0 then goto L36dcba;
  #L36dcb8.  return v0 @kind wide;
  #L36dcba.  v9:= "networkaddress.cache.ttl" @kind object;
  #L36dcbe.  call temp:= `getProperty`(v9) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L36dcc4.  v2:= temp @kind object;
  #L36dcc6.  v3:= 30L;
  #L36dcca.  if v2 == 0 then goto L36dd0a;
  #L36dcce.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L36dcd4.  v3:= temp @kind wide;
  #L36dcd6.  goto L36dd0a;
  #L36dcd8.  v5:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36dcdc.  v6:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L36dce0.  v7:= 3I;
  #L36dce2.  v7:= new `java.lang.Object`[v7];
  #L36dce6.  v8:= 0I;
  #L36dce8.  v7[v8]:= v9 @kind object;
  #L36dcec.  v9:= 1I;
  #L36dcee.  v7[v9]:= v2 @kind object;
  #L36dcf2.  v9:= 2I;
  #L36dcf4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L36dcfa.  v2:= temp @kind object;
  #L36dcfc.  v7[v9]:= v2 @kind object;
  #L36dd00.  v9:= "Property({0}) valid is not valid number format({1}), fall back to default({2})" @kind object;
  #L36dd04.  call `log`(v5, v6, v9, v7) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L36dd0a.  v9:= lcmp(v3, v0);
  #L36dd0e.  if v9 <= 0 then goto L36dd1e;
  #L36dd12.  v9:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L36dd16.  call temp:= `toNanos`(v9, v3) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L36dd1c.  v3:= temp @kind wide;
  #L36dd1e.  return v3 @kind wide;
  catch `java.lang.NumberFormatException` @[L36dcce..L36dcd6] goto L36dcd8;
}
procedure `java.lang.Double` `t`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.t:(Ljava/util/Map;)Ljava/lang/Double;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L36d890.  v0:= "percentage" @kind object;
  #L36d894.  call temp:= `h`(v1, v0) @signature `Lio/grpc/internal/v0;.h:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L36d89a.  v1:= temp @kind object;
  #L36d89c.  return v1 @kind object;
}
procedure `io.grpc.internal.DnsNameResolver$f` `v`(`java.lang.ClassLoader` v4 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.v:(Ljava/lang/ClassLoader;)Lio/grpc/internal/DnsNameResolver$f;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36d79c.  v0:= 0I;
  #L36d79e.  v1:= "io.grpc.internal.t0" @kind object;
  #L36d7a2.  v2:= 1I;
  #L36d7a4.  call temp:= `forName`(v1, v2, v4) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L36d7aa.  v4:= temp @kind object;
  #L36d7ac.  v1:= constclass @type ^`io.grpc.internal.DnsNameResolver$f` @kind object;
  #L36d7b0.  call temp:= `asSubclass`(v4, v1) @signature `Ljava/lang/Class;.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;` @kind virtual;
  #L36d7b6.  v4:= temp @kind object;
  #L36d7b8.  v1:= 0I;
  #L36d7ba.  v2:= new `java.lang.Class`[v1];
  #L36d7be.  call temp:= `getConstructor`(v4, v2) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L36d7c4.  v4:= temp @kind object;
  #L36d7c6.  v1:= new `java.lang.Object`[v1];
  #L36d7ca.  call temp:= `newInstance`(v4, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L36d7d0.  v4:= temp @kind object;
  #L36d7d2.  v4:= (`io.grpc.internal.DnsNameResolver$f`) v4 @kind object;
  #L36d7d6.  call temp:= `b`(v4) @signature `Lio/grpc/internal/DnsNameResolver$f;.b:()Ljava/lang/Throwable;` @kind interface;
  #L36d7dc.  v1:= temp @kind object;
  #L36d7de.  if v1 == 0 then goto L36d7fe;
  #L36d7e2.  v1:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36d7e6.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L36d7ea.  call temp:= `b`(v4) @signature `Lio/grpc/internal/DnsNameResolver$f;.b:()Ljava/lang/Throwable;` @kind interface;
  #L36d7f0.  v4:= temp @kind object;
  #L36d7f2.  v3:= "JndiResourceResolverFactory not available, skipping." @kind object;
  #L36d7f6.  call `log`(v1, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L36d7fc.  return v0 @kind object;
  #L36d7fe.  return v4 @kind object;
  #L36d800.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L36d802.  v1:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36d806.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L36d80a.  v3:= "Can't construct JndiResourceResolverFactory, skipping." @kind object;
  #L36d80e.  call `log`(v1, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L36d814.  return v0 @kind object;
  #L36d816.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L36d818.  v1:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36d81c.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L36d820.  v3:= "Can't find JndiResourceResolverFactory ctor, skipping." @kind object;
  #L36d824.  call `log`(v1, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L36d82a.  return v0 @kind object;
  #L36d82c.  v4:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L36d82e.  v1:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36d832.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L36d836.  v3:= "Unable to cast JndiResourceResolverFactory, skipping." @kind object;
  #L36d83a.  call `log`(v1, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L36d840.  return v0 @kind object;
  #L36d842.  v4:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L36d844.  v1:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36d848.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L36d84c.  v3:= "Unable to find JndiResourceResolverFactory, skipping." @kind object;
  #L36d850.  call `log`(v1, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L36d856.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L36d79e..L36d7b8] goto L36d842;
  catch `java.lang.ClassCastException` @[L36d79e..L36d7b8] goto L36d82c;
  catch `java.lang.Exception` @[L36d7ba..L36d7c6] goto L36d816;
  catch `java.lang.Exception` @[L36d7c6..L36d7d6] goto L36d800;
}
procedure `java.util.Map` `w`(`java.util.Map` v8 @kind object, `java.util.Random` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.w:(Ljava/util/Map;Ljava/util/Random;Ljava/lang/String;)Ljava/util/Map;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L36db08.  call temp:= `entrySet`(v8) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L36db0e.  v0:= temp @kind object;
  #L36db10.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36db16.  v0:= temp @kind object;
  #L36db18.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36db1e.  v1:= temp;
  #L36db20.  if v1 == 0 then goto L36db50;
  #L36db24.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36db2a.  v1:= temp @kind object;
  #L36db2c.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L36db30.  v2:= `@@io.grpc.internal.DnsNameResolver.t` @type ^`java.util.Set` @kind object;
  #L36db34.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L36db3a.  v3:= temp @kind object;
  #L36db3c.  call temp:= `contains`(v2, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L36db42.  v2:= temp;
  #L36db44.  v3:= "Bad key: %s" @kind object;
  #L36db48.  call `verify`(v2, v3, v1) @signature `Lcom/google/common/base/Verify;.verify:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L36db4e.  goto L36db18;
  #L36db50.  call temp:= `p`(v8) @signature `Lio/grpc/internal/DnsNameResolver;.p:(Ljava/util/Map;)Ljava/util/List;` @kind static;
  #L36db56.  v0:= temp @kind object;
  #L36db58.  v1:= 0I;
  #L36db5a.  v2:= 1I;
  #L36db5c.  v3:= 0I;
  #L36db5e.  if v0 == 0 then goto L36dbaa;
  #L36db62.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L36db68.  v4:= temp;
  #L36db6a.  if v4 != 0 then goto L36dbaa;
  #L36db6e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36db74.  v0:= temp @kind object;
  #L36db76.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36db7c.  v4:= temp;
  #L36db7e.  if v4 == 0 then goto L36dba2;
  #L36db82.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36db88.  v4:= temp @kind object;
  #L36db8a.  v4:= (`java.lang.String`) v4 @kind object;
  #L36db8e.  v5:= "java" @kind object;
  #L36db92.  call temp:= `equalsIgnoreCase`(v5, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L36db98.  v4:= temp;
  #L36db9a.  if v4 == 0 then goto L36db76;
  #L36db9e.  v0:= 1I;
  #L36dba0.  goto L36dba4;
  #L36dba2.  v0:= 0I;
  #L36dba4.  if v0 != 0 then goto L36dbaa;
  #L36dba8.  return v1 @kind object;
  #L36dbaa.  call temp:= `t`(v8) @signature `Lio/grpc/internal/DnsNameResolver;.t:(Ljava/util/Map;)Ljava/lang/Double;` @kind static;
  #L36dbb0.  v0:= temp @kind object;
  #L36dbb2.  if v0 == 0 then goto L36dbe8;
  #L36dbb6.  call temp:= `intValue`(v0) @signature `Ljava/lang/Double;.intValue:()I` @kind virtual;
  #L36dbbc.  v4:= temp;
  #L36dbbe.  v5:= 100I;
  #L36dbc2.  if v4 < 0 then goto L36dbce;
  #L36dbc6.  if v4 > v5 then goto L36dbce;
  #L36dbca.  v6:= 1I;
  #L36dbcc.  goto L36dbd0;
  #L36dbce.  v6:= 0I;
  #L36dbd0.  v7:= "Bad percentage: %s" @kind object;
  #L36dbd4.  call `verify`(v6, v7, v0) @signature `Lcom/google/common/base/Verify;.verify:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L36dbda.  call temp:= `nextInt`(v9, v5) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L36dbe0.  v9:= temp;
  #L36dbe2.  if v9 < v4 then goto L36dbe8;
  #L36dbe6.  return v1 @kind object;
  #L36dbe8.  call temp:= `q`(v8) @signature `Lio/grpc/internal/DnsNameResolver;.q:(Ljava/util/Map;)Ljava/util/List;` @kind static;
  #L36dbee.  v9:= temp @kind object;
  #L36dbf0.  if v9 == 0 then goto L36dc38;
  #L36dbf4.  call temp:= `isEmpty`(v9) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L36dbfa.  v0:= temp;
  #L36dbfc.  if v0 != 0 then goto L36dc38;
  #L36dc00.  call temp:= `iterator`(v9) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36dc06.  v9:= temp @kind object;
  #L36dc08.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36dc0e.  v0:= temp;
  #L36dc10.  if v0 == 0 then goto L36dc30;
  #L36dc14.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36dc1a.  v0:= temp @kind object;
  #L36dc1c.  v0:= (`java.lang.String`) v0 @kind object;
  #L36dc20.  call temp:= `equals`(v0, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L36dc26.  v0:= temp;
  #L36dc28.  if v0 == 0 then goto L36dc08;
  #L36dc2c.  v9:= 1I;
  #L36dc2e.  goto L36dc32;
  #L36dc30.  v9:= 0I;
  #L36dc32.  if v9 != 0 then goto L36dc38;
  #L36dc36.  return v1 @kind object;
  #L36dc38.  v9:= "serviceConfig" @kind object;
  #L36dc3c.  call temp:= `j`(v8, v9) @signature `Lio/grpc/internal/v0;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L36dc42.  v10:= temp @kind object;
  #L36dc44.  if v10 == 0 then goto L36dc4a;
  #L36dc48.  return v10 @kind object;
  #L36dc4a.  v10:= new `com.google.common.base.VerifyException`;
  #L36dc4e.  v0:= 2I;
  #L36dc50.  v0:= new `java.lang.Object`[v0];
  #L36dc54.  v0[v3]:= v8 @kind object;
  #L36dc58.  v0[v2]:= v9 @kind object;
  #L36dc5c.  v8:= "key '%s' missing in '%s'" @kind object;
  #L36dc60.  call temp:= `format`(v8, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L36dc66.  v8:= temp @kind object;
  #L36dc68.  call `<init>`(v10, v8) @signature `Lcom/google/common/base/VerifyException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36dc6e.  throw v10;
}
procedure `io.grpc.u0$c` `x`(`java.util.List` v3 @kind object, `java.util.Random` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.x:(Ljava/util/List;Ljava/util/Random;Ljava/lang/String;)Lio/grpc/u0$c;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L36d4d4.  call temp:= `y`(v3) @signature `Lio/grpc/internal/DnsNameResolver;.y:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L36d4da.  v3:= temp @kind object;
  #L36d4dc.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36d4e2.  v3:= temp @kind object;
  #L36d4e4.  v0:= 0I;
  #L36d4e6.  v1:= v0 @kind object;
  #L36d4e8.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36d4ee.  v2:= temp;
  #L36d4f0.  if v2 == 0 then goto L36d532;
  #L36d4f4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36d4fa.  v1:= temp @kind object;
  #L36d4fc.  v1:= (`java.util.Map`) v1 @kind object;
  #L36d500.  call temp:= `w`(v1, v4, v5) @signature `Lio/grpc/internal/DnsNameResolver;.w:(Ljava/util/Map;Ljava/util/Random;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L36d506.  v1:= temp @kind object;
  #L36d508.  if v1 == 0 then goto L36d4e8;
  #L36d50c.  goto L36d532;
  #L36d50e.  v3:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L36d510.  v4:= `@@io.grpc.Status.h` @type ^`io.grpc.Status` @kind object;
  #L36d514.  v5:= "failed to pick service config choice" @kind object;
  #L36d518.  call temp:= `r`(v4, v5) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L36d51e.  v4:= temp @kind object;
  #L36d520.  call temp:= `q`(v4, v3) @signature `Lio/grpc/Status;.q:(Ljava/lang/Throwable;)Lio/grpc/Status;` @kind virtual;
  #L36d526.  v3:= temp @kind object;
  #L36d528.  call temp:= `b`(v3) @signature `Lio/grpc/u0$c;.b:(Lio/grpc/Status;)Lio/grpc/u0$c;` @kind static;
  #L36d52e.  v3:= temp @kind object;
  #L36d530.  return v3 @kind object;
  #L36d532.  if v1 != 0 then goto L36d538;
  #L36d536.  return v0 @kind object;
  #L36d538.  call temp:= `a`(v1) @signature `Lio/grpc/u0$c;.a:(Ljava/lang/Object;)Lio/grpc/u0$c;` @kind static;
  #L36d53e.  v3:= temp @kind object;
  #L36d540.  return v3 @kind object;
  #L36d542.  v3:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L36d544.  goto L36d548;
  #L36d546.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L36d548.  v4:= `@@io.grpc.Status.h` @type ^`io.grpc.Status` @kind object;
  #L36d54c.  v5:= "failed to parse TXT records" @kind object;
  #L36d550.  call temp:= `r`(v4, v5) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L36d556.  v4:= temp @kind object;
  #L36d558.  call temp:= `q`(v4, v3) @signature `Lio/grpc/Status;.q:(Ljava/lang/Throwable;)Lio/grpc/Status;` @kind virtual;
  #L36d55e.  v3:= temp @kind object;
  #L36d560.  call temp:= `b`(v3) @signature `Lio/grpc/u0$c;.b:(Lio/grpc/Status;)Lio/grpc/u0$c;` @kind static;
  #L36d566.  v3:= temp @kind object;
  #L36d568.  return v3 @kind object;
  catch `java.io.IOException` @[L36d4d4..L36d4dc] goto L36d546;
  catch `java.lang.RuntimeException` @[L36d4d4..L36d4dc] goto L36d542;
  catch `java.lang.RuntimeException` @[L36d500..L36d508] goto L36d50e;
}
procedure `java.util.List` `y`(`java.util.List` v6 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.y:(Ljava/util/List;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L36d974.  v0:= new `java.util.ArrayList`;
  #L36d978.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36d97e.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36d984.  v6:= temp @kind object;
  #L36d986.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36d98c.  v1:= temp;
  #L36d98e.  if v1 == 0 then goto L36da2c;
  #L36d992.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36d998.  v1:= temp @kind object;
  #L36d99a.  v1:= (`java.lang.String`) v1 @kind object;
  #L36d99e.  v2:= "grpc_config=" @kind object;
  #L36d9a2.  call temp:= `startsWith`(v1, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L36d9a8.  v2:= temp;
  #L36d9aa.  if v2 != 0 then goto L36d9ce;
  #L36d9ae.  v2:= `@@io.grpc.internal.DnsNameResolver.s` @type ^`java.util.logging.Logger` @kind object;
  #L36d9b2.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L36d9b6.  v4:= 1I;
  #L36d9b8.  v4:= new `java.lang.Object`[v4];
  #L36d9bc.  v5:= 0I;
  #L36d9be.  v4[v5]:= v1 @kind object;
  #L36d9c2.  v1:= "Ignoring non service config {0}" @kind object;
  #L36d9c6.  call `log`(v2, v3, v1, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L36d9cc.  goto L36d986;
  #L36d9ce.  v2:= 12I;
  #L36d9d2.  call temp:= `substring`(v1, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L36d9d8.  v1:= temp @kind object;
  #L36d9da.  call temp:= `a`(v1) @signature `Lio/grpc/internal/u0;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d9e0.  v1:= temp @kind object;
  #L36d9e2.  v2:= instanceof @variable v1 @type ^`java.util.List` @kind boolean;
  #L36d9e6.  if v2 == 0 then goto L36d9fe;
  #L36d9ea.  v1:= (`java.util.List`) v1 @kind object;
  #L36d9ee.  call temp:= `a`(v1) @signature `Lio/grpc/internal/v0;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L36d9f4.  v1:= temp @kind object;
  #L36d9f6.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L36d9fc.  goto L36d986;
  #L36d9fe.  v6:= new `java.lang.ClassCastException`;
  #L36da02.  v0:= new `java.lang.StringBuilder`;
  #L36da06.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36da0c.  v2:= "wrong type " @kind object;
  #L36da10.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36da16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36da1c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36da22.  v0:= temp @kind object;
  #L36da24.  call `<init>`(v6, v0) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36da2a.  throw v6;
  #L36da2c.  return v0 @kind object;
}
procedure `void` `z`(`io.grpc.internal.DnsNameResolver` v3 @kind this) @signature `Lio/grpc/internal/DnsNameResolver;.z:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L36dfc0.  v0:= v3.`io.grpc.internal.DnsNameResolver.q` @type ^`boolean` @kind boolean;
  #L36dfc4.  if v0 != 0 then goto L36dffc;
  #L36dfc8.  v0:= v3.`io.grpc.internal.DnsNameResolver.m` @type ^`boolean` @kind boolean;
  #L36dfcc.  if v0 != 0 then goto L36dffc;
  #L36dfd0.  call temp:= `m`(v3) @signature `Lio/grpc/internal/DnsNameResolver;.m:()Z` @kind direct;
  #L36dfd6.  v0:= temp;
  #L36dfd8.  if v0 != 0 then goto L36dfde;
  #L36dfdc.  goto L36dffc;
  #L36dfde.  v0:= 1I;
  #L36dfe0.  v3.`io.grpc.internal.DnsNameResolver.q` @type ^`boolean` := v0 @kind boolean;
  #L36dfe4.  v0:= v3.`io.grpc.internal.DnsNameResolver.n` @type ^`java.util.concurrent.Executor` @kind object;
  #L36dfe8.  v1:= new `io.grpc.internal.DnsNameResolver$d`;
  #L36dfec.  v2:= v3.`io.grpc.internal.DnsNameResolver.r` @type ^`io.grpc.u0$e` @kind object;
  #L36dff0.  call `<init>`(v1, v3, v2) @signature `Lio/grpc/internal/DnsNameResolver$d;.<init>:(Lio/grpc/internal/DnsNameResolver;Lio/grpc/u0$e;)V` @kind direct;
  #L36dff6.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L36dffc.  return @kind void;
}
procedure `java.lang.String` `a`(`io.grpc.internal.DnsNameResolver` v1 @kind this) @signature `Lio/grpc/internal/DnsNameResolver;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d91c.  v0:= v1.`io.grpc.internal.DnsNameResolver.e` @type ^`java.lang.String` @kind object;
  #L36d920.  return v0 @kind object;
}
procedure `void` `b`(`io.grpc.internal.DnsNameResolver` v2 @kind this) @signature `Lio/grpc/internal/DnsNameResolver;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36df90.  v0:= v2.`io.grpc.internal.DnsNameResolver.r` @type ^`io.grpc.u0$e` @kind object;
  #L36df94.  if v0 == 0 then goto L36df9c;
  #L36df98.  v0:= 1I;
  #L36df9a.  goto L36df9e;
  #L36df9c.  v0:= 0I;
  #L36df9e.  v1:= "not started" @kind object;
  #L36dfa2.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36dfa8.  call `z`(v2) @signature `Lio/grpc/internal/DnsNameResolver;.z:()V` @kind direct;
  #L36dfae.  return @kind void;
}
procedure `void` `c`(`io.grpc.internal.DnsNameResolver` v2 @kind this) @signature `Lio/grpc/internal/DnsNameResolver;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36e010.  v0:= v2.`io.grpc.internal.DnsNameResolver.m` @type ^`boolean` @kind boolean;
  #L36e014.  if v0 == 0 then goto L36e01a;
  #L36e018.  return @kind void;
  #L36e01a.  v0:= 1I;
  #L36e01c.  v2.`io.grpc.internal.DnsNameResolver.m` @type ^`boolean` := v0 @kind boolean;
  #L36e020.  v0:= v2.`io.grpc.internal.DnsNameResolver.n` @type ^`java.util.concurrent.Executor` @kind object;
  #L36e024.  if v0 == 0 then goto L36e044;
  #L36e028.  v1:= v2.`io.grpc.internal.DnsNameResolver.o` @type ^`boolean` @kind boolean;
  #L36e02c.  if v1 == 0 then goto L36e044;
  #L36e030.  v1:= v2.`io.grpc.internal.DnsNameResolver.h` @type ^`io.grpc.internal.w1$d` @kind object;
  #L36e034.  call temp:= `f`(v1, v0) @signature `Lio/grpc/internal/w1;.f:(Lio/grpc/internal/w1$d;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36e03a.  v0:= temp @kind object;
  #L36e03c.  v0:= (`java.util.concurrent.Executor`) v0 @kind object;
  #L36e040.  v2.`io.grpc.internal.DnsNameResolver.n` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L36e044.  return @kind void;
}
procedure `void` `d`(`io.grpc.internal.DnsNameResolver` v2 @kind this, `io.grpc.u0$e` v3 @kind object) @signature `Lio/grpc/internal/DnsNameResolver;.d:(Lio/grpc/u0$e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36e058.  v0:= v2.`io.grpc.internal.DnsNameResolver.r` @type ^`io.grpc.u0$e` @kind object;
  #L36e05c.  if v0 != 0 then goto L36e064;
  #L36e060.  v0:= 1I;
  #L36e062.  goto L36e066;
  #L36e064.  v0:= 0I;
  #L36e066.  v1:= "already started" @kind object;
  #L36e06a.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36e070.  v0:= v2.`io.grpc.internal.DnsNameResolver.o` @type ^`boolean` @kind boolean;
  #L36e074.  if v0 == 0 then goto L36e08c;
  #L36e078.  v0:= v2.`io.grpc.internal.DnsNameResolver.h` @type ^`io.grpc.internal.w1$d` @kind object;
  #L36e07c.  call temp:= `d`(v0) @signature `Lio/grpc/internal/w1;.d:(Lio/grpc/internal/w1$d;)Ljava/lang/Object;` @kind static;
  #L36e082.  v0:= temp @kind object;
  #L36e084.  v0:= (`java.util.concurrent.Executor`) v0 @kind object;
  #L36e088.  v2.`io.grpc.internal.DnsNameResolver.n` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L36e08c.  v0:= "listener" @kind object;
  #L36e090.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36e096.  v3:= temp @kind object;
  #L36e098.  v3:= (`io.grpc.u0$e`) v3 @kind object;
  #L36e09c.  v2.`io.grpc.internal.DnsNameResolver.r` @type ^`io.grpc.u0$e` := v3 @kind object;
  #L36e0a0.  call `z`(v2) @signature `Lio/grpc/internal/DnsNameResolver;.z:()V` @kind direct;
  #L36e0a6.  return @kind void;
}
procedure `io.grpc.internal.DnsNameResolver$c` `o`(`io.grpc.internal.DnsNameResolver` v4 @kind this, `boolean` v5 ) @signature `Lio/grpc/internal/DnsNameResolver;.o:(Z)Lio/grpc/internal/DnsNameResolver$c;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36d6ac.  v0:= new `io.grpc.internal.DnsNameResolver$c`;
  #L36d6b0.  v1:= 0I;
  #L36d6b2.  call `<init>`(v0, v1) @signature `Lio/grpc/internal/DnsNameResolver$c;.<init>:(Lio/grpc/internal/DnsNameResolver$a;)V` @kind direct;
  #L36d6b8.  call temp:= `A`(v4) @signature `Lio/grpc/internal/DnsNameResolver;.A:()Ljava/util/List;` @kind direct;
  #L36d6be.  v1:= temp @kind object;
  #L36d6c0.  call temp:= `b`(v0, v1) @signature `Lio/grpc/internal/DnsNameResolver$c;.b:(Lio/grpc/internal/DnsNameResolver$c;Ljava/util/List;)Ljava/util/List;` @kind static;
  #L36d6c6.  goto L36d710;
  #L36d6c8.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L36d6ca.  if v5 != 0 then goto L36d710;
  #L36d6ce.  v5:= `@@io.grpc.Status.u` @type ^`io.grpc.Status` @kind object;
  #L36d6d2.  v2:= new `java.lang.StringBuilder`;
  #L36d6d6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36d6dc.  v3:= "Unable to resolve host " @kind object;
  #L36d6e0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d6e6.  v3:= v4.`io.grpc.internal.DnsNameResolver.f` @type ^`java.lang.String` @kind object;
  #L36d6ea.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d6f0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36d6f6.  v2:= temp @kind object;
  #L36d6f8.  call temp:= `r`(v5, v2) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L36d6fe.  v5:= temp @kind object;
  #L36d700.  call temp:= `q`(v5, v1) @signature `Lio/grpc/Status;.q:(Ljava/lang/Throwable;)Lio/grpc/Status;` @kind virtual;
  #L36d706.  v5:= temp @kind object;
  #L36d708.  call temp:= `d`(v0, v5) @signature `Lio/grpc/internal/DnsNameResolver$c;.d:(Lio/grpc/internal/DnsNameResolver$c;Lio/grpc/Status;)Lio/grpc/Status;` @kind static;
  #L36d70e.  return v0 @kind object;
  #L36d710.  v5:= `@@io.grpc.internal.DnsNameResolver.z` @type ^`boolean` @kind boolean;
  #L36d714.  if v5 == 0 then goto L36d726;
  #L36d718.  call temp:= `B`(v4) @signature `Lio/grpc/internal/DnsNameResolver;.B:()Lio/grpc/u0$c;` @kind direct;
  #L36d71e.  v5:= temp @kind object;
  #L36d720.  call temp:= `f`(v0, v5) @signature `Lio/grpc/internal/DnsNameResolver$c;.f:(Lio/grpc/internal/DnsNameResolver$c;Lio/grpc/u0$c;)Lio/grpc/u0$c;` @kind static;
  #L36d726.  return v0 @kind object;
  catch `java.lang.Exception` @[L36d6b8..L36d6c6] goto L36d6c8;
}
procedure `io.grpc.internal.DnsNameResolver$e` `u`(`io.grpc.internal.DnsNameResolver` v3 @kind this) @signature `Lio/grpc/internal/DnsNameResolver;.u:()Lio/grpc/internal/DnsNameResolver$e;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L36d748.  v0:= `@@io.grpc.internal.DnsNameResolver.x` @type ^`boolean` @kind boolean;
  #L36d74c.  v1:= `@@io.grpc.internal.DnsNameResolver.y` @type ^`boolean` @kind boolean;
  #L36d750.  v2:= v3.`io.grpc.internal.DnsNameResolver.f` @type ^`java.lang.String` @kind object;
  #L36d754.  call temp:= `C`(v0, v1, v2) @signature `Lio/grpc/internal/DnsNameResolver;.C:(ZZLjava/lang/String;)Z` @kind static;
  #L36d75a.  v0:= temp;
  #L36d75c.  if v0 != 0 then goto L36d764;
  #L36d760.  v0:= 0I;
  #L36d762.  return v0 @kind object;
  #L36d764.  v0:= v3.`io.grpc.internal.DnsNameResolver.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L36d768.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L36d76e.  v0:= temp @kind object;
  #L36d770.  v0:= (`io.grpc.internal.DnsNameResolver$e`) v0 @kind object;
  #L36d774.  if v0 != 0 then goto L36d788;
  #L36d778.  v1:= `@@io.grpc.internal.DnsNameResolver.A` @type ^`io.grpc.internal.DnsNameResolver$f` @kind object;
  #L36d77c.  if v1 == 0 then goto L36d788;
  #L36d780.  call temp:= `a`(v1) @signature `Lio/grpc/internal/DnsNameResolver$f;.a:()Lio/grpc/internal/DnsNameResolver$e;` @kind interface;
  #L36d786.  v0:= temp @kind object;
  #L36d788.  return v0 @kind object;
}
