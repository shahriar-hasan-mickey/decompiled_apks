record `io.grpc.internal.q1$v` @kind class @AccessFlag FINAL {
  `java.lang.Object` `io.grpc.internal.q1$v.a` @AccessFlag FINAL;
  `java.util.concurrent.Future` `io.grpc.internal.q1$v.b` @AccessFlag ;
  `boolean` `io.grpc.internal.q1$v.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.grpc.internal.q1$v` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/internal/q1$v;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37d744.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37d74a.  v0.`io.grpc.internal.q1$v.a` @type ^`java.lang.Object` := v1 @kind object;
  #L37d74e.  return @kind void;
}
procedure `boolean` `a`(`io.grpc.internal.q1$v` v1 @kind this) @signature `Lio/grpc/internal/q1$v;.a:()Z` @AccessFlag  {
    temp;
    v0;

  #L37d710.  v0:= v1.`io.grpc.internal.q1$v.c` @type ^`boolean` @kind boolean;
  #L37d714.  return v0;
}
procedure `java.util.concurrent.Future` `b`(`io.grpc.internal.q1$v` v1 @kind this) @signature `Lio/grpc/internal/q1$v;.b:()Ljava/util/concurrent/Future;` @AccessFlag  {
    temp;
    v0;

  #L37d728.  v0:= 1I;
  #L37d72a.  v1.`io.grpc.internal.q1$v.c` @type ^`boolean` := v0 @kind boolean;
  #L37d72e.  v0:= v1.`io.grpc.internal.q1$v.b` @type ^`java.util.concurrent.Future` @kind object;
  #L37d732.  return v0 @kind object;
}
procedure `void` `c`(`io.grpc.internal.q1$v` v2 @kind this, `java.util.concurrent.Future` v3 @kind object) @signature `Lio/grpc/internal/q1$v;.c:(Ljava/util/concurrent/Future;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L37d760.  v0:= v2.`io.grpc.internal.q1$v.a` @type ^`java.lang.Object` @kind object;
  #L37d764.  @monitorenter v0
  #L37d766.  v1:= v2.`io.grpc.internal.q1$v.c` @type ^`boolean` @kind boolean;
  #L37d76a.  if v1 != 0 then goto L37d772;
  #L37d76e.  v2.`io.grpc.internal.q1$v.b` @type ^`java.util.concurrent.Future` := v3 @kind object;
  #L37d772.  @monitorexit v0
  #L37d774.  return @kind void;
  #L37d776.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37d778.  @monitorexit v0
  #L37d77a.  throw v3;
  catch `java.lang.Throwable` @[L37d766..L37d77a] goto L37d776;
}
