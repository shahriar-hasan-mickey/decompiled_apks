record `io.grpc.internal.d2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@io.grpc.internal.d2.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@io.grpc.internal.d2.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/d2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L381728.  v0:= constclass @type ^`io.grpc.internal.d2` @kind object;
  #L38172c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L381732.  v0:= temp @kind object;
  #L381734.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L38173a.  v0:= temp @kind object;
  #L38173c.  `@@io.grpc.internal.d2.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L381740.  v0:= `@@com.google.common.base.Charsets.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L381744.  v1:= "-bin" @kind object;
  #L381748.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L38174e.  v0:= temp @kind object;
  #L381750.  `@@io.grpc.internal.d2.b` @type ^`byte`[] := v0 @kind object;
  #L381754.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.d2` v0 @kind this) @signature `Lio/grpc/internal/d2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L381768.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38176e.  return @kind void;
}
procedure `boolean` `a`(`byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lio/grpc/internal/d2;.a:([B[B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L381444.  v0:= length @variable v5;
  #L381446.  v1:= length @variable v6;
  #L381448.  v0:= v0 - v1 @kind int;
  #L38144a.  v1:= 0I;
  #L38144c.  if v0 >= 0 then goto L381452;
  #L381450.  return v1;
  #L381452.  v2:= v0;
  #L381454.  v3:= length @variable v5;
  #L381456.  if v2 >= v3 then goto L381472;
  #L38145a.  v3:= v5[v2] @kind byte;
  #L38145e.  v4:= v2 - v0 @kind int;
  #L381462.  v4:= v6[v4] @kind byte;
  #L381466.  if v3 == v4 then goto L38146c;
  #L38146a.  return v1;
  #L38146c.  v2:= v2 + 1;
  #L381470.  goto L381454;
  #L381472.  v5:= 1I;
  #L381474.  return v5;
}
procedure `boolean` `b`(`byte`[] v5 @kind object) @signature `Lio/grpc/internal/d2;.b:([B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L381488.  v0:= length @variable v5;
  #L38148a.  v1:= 0I;
  #L38148c.  v2:= 0I;
  #L38148e.  if v2 >= v0 then goto L3814b0;
  #L381492.  v3:= v5[v2] @kind byte;
  #L381496.  v4:= 32I;
  #L38149a.  if v3 < v4 then goto L3814ae;
  #L38149e.  v4:= 126I;
  #L3814a2.  if v3 <= v4 then goto L3814a8;
  #L3814a6.  goto L3814ae;
  #L3814a8.  v2:= v2 + 1;
  #L3814ac.  goto L38148e;
  #L3814ae.  return v1;
  #L3814b0.  v5:= 1I;
  #L3814b2.  return v5;
}
procedure `byte`[][] `c`(`byte`[][] v10 @kind object, `int` v11 ) @signature `Lio/grpc/internal/d2;.c:([[BI)[[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3814c4.  v0:= new `java.util.ArrayList`;
  #L3814c8.  v1:= length @variable v10;
  #L3814ca.  v1:= v1 + 10;
  #L3814ce.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3814d4.  v1:= 0I;
  #L3814d6.  v2:= 0I;
  #L3814d8.  if v2 >= v11 then goto L3814ec;
  #L3814dc.  v3:= v10[v2] @kind object;
  #L3814e0.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3814e6.  v2:= v2 + 1;
  #L3814ea.  goto L3814d8;
  #L3814ec.  v2:= length @variable v10;
  #L3814ee.  if v11 >= v2 then goto L38157a;
  #L3814f2.  v2:= v10[v11] @kind object;
  #L3814f6.  v3:= v11 + 1;
  #L3814fa.  v3:= v10[v3] @kind object;
  #L3814fe.  v4:= `@@io.grpc.internal.d2.b` @type ^`byte`[] @kind object;
  #L381502.  call temp:= `a`(v2, v4) @signature `Lio/grpc/internal/d2;.a:([B[B)Z` @kind static;
  #L381508.  v4:= temp;
  #L38150a.  if v4 != 0 then goto L38151c;
  #L38150e.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L381514.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38151a.  goto L381574;
  #L38151c.  v4:= 0I;
  #L38151e.  v5:= 0I;
  #L381520.  v6:= length @variable v3;
  #L381522.  if v4 > v6 then goto L381574;
  #L381526.  v6:= length @variable v3;
  #L381528.  if v4 == v6 then goto L38153a;
  #L38152c.  v6:= v3[v4] @kind byte;
  #L381530.  v7:= 44I;
  #L381534.  if v6 == v7 then goto L38153a;
  #L381538.  goto L38156e;
  #L38153a.  call temp:= `base64`() @signature `Lcom/google/common/io/BaseEncoding;.base64:()Lcom/google/common/io/BaseEncoding;` @kind static;
  #L381540.  v6:= temp @kind object;
  #L381542.  v7:= new `java.lang.String`;
  #L381546.  v8:= v4 - v5 @kind int;
  #L38154a.  v9:= `@@com.google.common.base.Charsets.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L38154e.  call `<init>`(v7, v3, v5, v8, v9) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L381554.  call temp:= `decode`(v6, v7) @signature `Lcom/google/common/io/BaseEncoding;.decode:(Ljava/lang/CharSequence;)[B` @kind virtual;
  #L38155a.  v5:= temp @kind object;
  #L38155c.  v6:= v4 + 1;
  #L381560.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L381566.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38156c.  v5:= v6;
  #L38156e.  v4:= v4 + 1;
  #L381572.  goto L381520;
  #L381574.  v11:= v11 + 2;
  #L381578.  goto L3814ec;
  #L38157a.  v10:= new `byte`[][v1];
  #L38157e.  call temp:= `toArray`(v0, v10) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L381584.  v10:= temp @kind object;
  #L381586.  v10:= (`byte`[][]) v10 @kind object;
  #L38158a.  return v10 @kind object;
}
procedure `byte`[][] `d`(`io.grpc.t0` v8 @kind object) @signature `Lio/grpc/internal/d2;.d:(Lio/grpc/t0;)[[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L38159c.  call temp:= `d`(v8) @signature `Lio/grpc/i0;.d:(Lio/grpc/t0;)[[B` @kind static;
  #L3815a2.  v8:= temp @kind object;
  #L3815a4.  v0:= 0I;
  #L3815a6.  if v8 != 0 then goto L3815b0;
  #L3815aa.  v8:= new `byte`[][v0];
  #L3815ae.  return v8 @kind object;
  #L3815b0.  v1:= 0I;
  #L3815b2.  v2:= 0I;
  #L3815b4.  v3:= length @variable v8;
  #L3815b6.  if v1 >= v3 then goto L38167c;
  #L3815ba.  v3:= v8[v1] @kind object;
  #L3815be.  v4:= v1 + 1;
  #L3815c2.  v4:= v8[v4] @kind object;
  #L3815c6.  v5:= `@@io.grpc.internal.d2.b` @type ^`byte`[] @kind object;
  #L3815ca.  call temp:= `a`(v3, v5) @signature `Lio/grpc/internal/d2;.a:([B[B)Z` @kind static;
  #L3815d0.  v5:= temp;
  #L3815d2.  if v5 == 0 then goto L381600;
  #L3815d6.  v8[v2]:= v3 @kind object;
  #L3815da.  v3:= v2 + 1;
  #L3815de.  v5:= `@@io.grpc.i0.b` @type ^`com.google.common.io.BaseEncoding` @kind object;
  #L3815e2.  call temp:= `encode`(v5, v4) @signature `Lcom/google/common/io/BaseEncoding;.encode:([B)Ljava/lang/String;` @kind virtual;
  #L3815e8.  v4:= temp @kind object;
  #L3815ea.  v5:= `@@com.google.common.base.Charsets.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L3815ee.  call temp:= `getBytes`(v4, v5) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3815f4.  v4:= temp @kind object;
  #L3815f6.  v8[v3]:= v4 @kind object;
  #L3815fa.  v2:= v2 + 2;
  #L3815fe.  goto L381676;
  #L381600.  call temp:= `b`(v4) @signature `Lio/grpc/internal/d2;.b:([B)Z` @kind static;
  #L381606.  v5:= temp;
  #L381608.  if v5 == 0 then goto L38161a;
  #L38160c.  v8[v2]:= v3 @kind object;
  #L381610.  v3:= v2 + 1;
  #L381614.  v8[v3]:= v4 @kind object;
  #L381618.  goto L3815fa;
  #L38161a.  v5:= new `java.lang.String`;
  #L38161e.  v6:= `@@com.google.common.base.Charsets.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L381622.  call `<init>`(v5, v3, v6) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L381628.  v3:= `@@io.grpc.internal.d2.a` @type ^`java.util.logging.Logger` @kind object;
  #L38162c.  v6:= new `java.lang.StringBuilder`;
  #L381630.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L381636.  v7:= "Metadata key=" @kind object;
  #L38163a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381640.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381646.  v5:= ", value=" @kind object;
  #L38164a.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381650.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([B)Ljava/lang/String;` @kind static;
  #L381656.  v4:= temp @kind object;
  #L381658.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38165e.  v4:= " contains invalid ASCII characters" @kind object;
  #L381662.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381668.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38166e.  v4:= temp @kind object;
  #L381670.  call `warning`(v3, v4) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L381676.  v1:= v1 + 2;
  #L38167a.  goto L3815b4;
  #L38167c.  v1:= length @variable v8;
  #L38167e.  if v2 != v1 then goto L381684;
  #L381682.  return v8 @kind object;
  #L381684.  call temp:= `copyOfRange`(v8, v0, v2) @signature `Ljava/util/Arrays;.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;` @kind static;
  #L38168a.  v8:= temp @kind object;
  #L38168c.  v8:= (`byte`[][]) v8 @kind object;
  #L381690.  return v8 @kind object;
}
procedure `byte`[][] `e`(`byte`[][] v7 @kind object) @signature `Lio/grpc/internal/d2;.e:([[B)[[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3816a4.  v0:= 0I;
  #L3816a6.  v1:= 0I;
  #L3816a8.  v2:= length @variable v7;
  #L3816aa.  if v1 >= v2 then goto L381716;
  #L3816ae.  v2:= v7[v1] @kind object;
  #L3816b2.  v3:= v1 + 1;
  #L3816b6.  v4:= v7[v3] @kind object;
  #L3816ba.  v5:= `@@io.grpc.internal.d2.b` @type ^`byte`[] @kind object;
  #L3816be.  call temp:= `a`(v2, v5) @signature `Lio/grpc/internal/d2;.a:([B[B)Z` @kind static;
  #L3816c4.  v2:= temp;
  #L3816c6.  if v2 == 0 then goto L381710;
  #L3816ca.  v2:= 0I;
  #L3816cc.  v5:= length @variable v4;
  #L3816ce.  if v2 >= v5 then goto L3816ee;
  #L3816d2.  v5:= v4[v2] @kind byte;
  #L3816d6.  v6:= 44I;
  #L3816da.  if v5 != v6 then goto L3816e8;
  #L3816de.  call temp:= `c`(v7, v1) @signature `Lio/grpc/internal/d2;.c:([[BI)[[B` @kind static;
  #L3816e4.  v7:= temp @kind object;
  #L3816e6.  return v7 @kind object;
  #L3816e8.  v2:= v2 + 1;
  #L3816ec.  goto L3816cc;
  #L3816ee.  call temp:= `base64`() @signature `Lcom/google/common/io/BaseEncoding;.base64:()Lcom/google/common/io/BaseEncoding;` @kind static;
  #L3816f4.  v2:= temp @kind object;
  #L3816f6.  v5:= new `java.lang.String`;
  #L3816fa.  v6:= `@@com.google.common.base.Charsets.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L3816fe.  call `<init>`(v5, v4, v6) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L381704.  call temp:= `decode`(v2, v5) @signature `Lcom/google/common/io/BaseEncoding;.decode:(Ljava/lang/CharSequence;)[B` @kind virtual;
  #L38170a.  v2:= temp @kind object;
  #L38170c.  v7[v3]:= v2 @kind object;
  #L381710.  v1:= v1 + 2;
  #L381714.  goto L3816a8;
  #L381716.  return v7 @kind object;
}
