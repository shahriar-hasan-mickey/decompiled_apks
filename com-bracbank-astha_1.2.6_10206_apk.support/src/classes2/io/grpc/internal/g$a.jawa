record `io.grpc.internal.g$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `int` `io.grpc.internal.g$a.a` @AccessFlag FINAL_SYNTHETIC;
  `io.grpc.internal.g` `io.grpc.internal.g$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.g$a` v0 @kind this, `io.grpc.internal.g` v1 @kind object, `int` v2 ) @signature `Lio/grpc/internal/g$a;.<init>:(Lio/grpc/internal/g;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L366ac8.  v0.`io.grpc.internal.g$a.b` @type ^`io.grpc.internal.g` := v1 @kind object;
  #L366acc.  v0.`io.grpc.internal.g$a.a` @type ^`int` := v2;
  #L366ad0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L366ad6.  return @kind void;
}
procedure `void` `run`(`io.grpc.internal.g$a` v2 @kind this) @signature `Lio/grpc/internal/g$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L366ae8.  v0:= v2.`io.grpc.internal.g$a.b` @type ^`io.grpc.internal.g` @kind object;
  #L366aec.  call temp:= `b`(v0) @signature `Lio/grpc/internal/g;.b:(Lio/grpc/internal/g;)Lio/grpc/internal/MessageDeframer$b;` @kind static;
  #L366af2.  v0:= temp @kind object;
  #L366af4.  v1:= v2.`io.grpc.internal.g$a.a` @type ^`int`;
  #L366af8.  call `d`(v0, v1) @signature `Lio/grpc/internal/MessageDeframer$b;.d:(I)V` @kind interface;
  #L366afe.  return @kind void;
}
