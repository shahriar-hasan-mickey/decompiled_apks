record `io.grpc.internal.v1` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.grpc.internal.v1` v0 @kind this) @signature `Lio/grpc/internal/v1;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L380bd4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L380bda.  return @kind void;
}
procedure `java.util.List` `A`(`java.util.List` v2 @kind object) @signature `Lio/grpc/internal/v1;.A:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3808e4.  if v2 != 0 then goto L3808ec;
  #L3808e8.  v2:= 0I;
  #L3808ea.  return v2 @kind object;
  #L3808ec.  v0:= new `java.util.ArrayList`;
  #L3808f0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3808f6.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3808fc.  v2:= temp @kind object;
  #L3808fe.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L380904.  v1:= temp;
  #L380906.  if v1 == 0 then goto L380926;
  #L38090a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L380910.  v1:= temp @kind object;
  #L380912.  v1:= (`java.util.Map`) v1 @kind object;
  #L380916.  call temp:= `z`(v1) @signature `Lio/grpc/internal/v1;.z:(Ljava/util/Map;)Lio/grpc/internal/v1$a;` @kind static;
  #L38091c.  v1:= temp @kind object;
  #L38091e.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L380924.  goto L3808fe;
  #L380926.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L38092c.  v2:= temp @kind object;
  #L38092e.  return v2 @kind object;
}
procedure `java.lang.Double` `a`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.a:(Ljava/util/Map;)Ljava/lang/Double;` @AccessFlag STATIC {
    temp;
    v0;

  #L3806a4.  v0:= "backoffMultiplier" @kind object;
  #L3806a8.  call temp:= `h`(v1, v0) @signature `Lio/grpc/internal/v0;.h:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L3806ae.  v1:= temp @kind object;
  #L3806b0.  return v1 @kind object;
}
procedure `java.util.Map` `b`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.b:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L380940.  if v1 != 0 then goto L380948;
  #L380944.  v1:= 0I;
  #L380946.  return v1 @kind object;
  #L380948.  v0:= "healthCheckConfig" @kind object;
  #L38094c.  call temp:= `j`(v1, v0) @signature `Lio/grpc/internal/v0;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L380952.  v1:= temp @kind object;
  #L380954.  return v1 @kind object;
}
procedure `java.lang.Long` `c`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.c:(Ljava/util/Map;)Ljava/lang/Long;` @AccessFlag STATIC {
    temp;
    v0;

  #L380744.  v0:= "hedgingDelay" @kind object;
  #L380748.  call temp:= `l`(v1, v0) @signature `Lio/grpc/internal/v0;.l:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Long;` @kind static;
  #L38074e.  v1:= temp @kind object;
  #L380750.  return v1 @kind object;
}
procedure `java.util.Map` `d`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.d:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag STATIC {
    temp;
    v0;

  #L380968.  v0:= "hedgingPolicy" @kind object;
  #L38096c.  call temp:= `j`(v1, v0) @signature `Lio/grpc/internal/v0;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L380972.  v1:= temp @kind object;
  #L380974.  return v1 @kind object;
}
procedure `java.lang.Long` `e`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.e:(Ljava/util/Map;)Ljava/lang/Long;` @AccessFlag STATIC {
    temp;
    v0;

  #L380764.  v0:= "initialBackoff" @kind object;
  #L380768.  call temp:= `l`(v1, v0) @signature `Lio/grpc/internal/v0;.l:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Long;` @kind static;
  #L38076e.  v1:= temp @kind object;
  #L380770.  return v1 @kind object;
}
procedure `java.util.Set` `f`(`java.util.Map` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/grpc/internal/v1;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3809a8.  call temp:= `e`(v0, v1) @signature `Lio/grpc/internal/v0;.e:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L3809ae.  v0:= temp @kind object;
  #L3809b0.  if v0 != 0 then goto L3809b8;
  #L3809b4.  v0:= 0I;
  #L3809b6.  return v0 @kind object;
  #L3809b8.  call temp:= `u`(v0) @signature `Lio/grpc/internal/v1;.u:(Ljava/util/List;)Ljava/util/Set;` @kind static;
  #L3809be.  v0:= temp @kind object;
  #L3809c0.  return v0 @kind object;
}
procedure `java.util.List` `g`(`java.util.Map` v3 @kind object) @signature `Lio/grpc/internal/v1;.g:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L380824.  v0:= new `java.util.ArrayList`;
  #L380828.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38082e.  v1:= "loadBalancingConfig" @kind object;
  #L380832.  call temp:= `containsKey`(v3, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L380838.  v2:= temp;
  #L38083a.  if v2 == 0 then goto L38084c;
  #L38083e.  call temp:= `f`(v3, v1) @signature `Lio/grpc/internal/v0;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L380844.  v1:= temp @kind object;
  #L380846.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L38084c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L380852.  v1:= temp;
  #L380854.  if v1 == 0 then goto L38088a;
  #L380858.  v1:= "loadBalancingPolicy" @kind object;
  #L38085c.  call temp:= `k`(v3, v1) @signature `Lio/grpc/internal/v0;.k:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L380862.  v3:= temp @kind object;
  #L380864.  if v3 == 0 then goto L38088a;
  #L380868.  v1:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L38086c.  call temp:= `toLowerCase`(v3, v1) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L380872.  v3:= temp @kind object;
  #L380874.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L38087a.  v1:= temp @kind object;
  #L38087c.  call temp:= `singletonMap`(v3, v1) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L380882.  v3:= temp @kind object;
  #L380884.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38088a.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L380890.  v3:= temp @kind object;
  #L380892.  return v3 @kind object;
}
procedure `java.lang.Integer` `h`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.h:(Ljava/util/Map;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;

  #L3806c4.  v0:= "maxAttempts" @kind object;
  #L3806c8.  call temp:= `i`(v1, v0) @signature `Lio/grpc/internal/v0;.i:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L3806ce.  v1:= temp @kind object;
  #L3806d0.  return v1 @kind object;
}
procedure `java.lang.Integer` `i`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.i:(Ljava/util/Map;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;

  #L3806e4.  v0:= "maxAttempts" @kind object;
  #L3806e8.  call temp:= `i`(v1, v0) @signature `Lio/grpc/internal/v0;.i:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L3806ee.  v1:= temp @kind object;
  #L3806f0.  return v1 @kind object;
}
procedure `java.lang.Long` `j`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.j:(Ljava/util/Map;)Ljava/lang/Long;` @AccessFlag STATIC {
    temp;
    v0;

  #L380784.  v0:= "maxBackoff" @kind object;
  #L380788.  call temp:= `l`(v1, v0) @signature `Lio/grpc/internal/v0;.l:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Long;` @kind static;
  #L38078e.  v1:= temp @kind object;
  #L380790.  return v1 @kind object;
}
procedure `java.lang.Integer` `k`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.k:(Ljava/util/Map;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;

  #L380704.  v0:= "maxRequestMessageBytes" @kind object;
  #L380708.  call temp:= `i`(v1, v0) @signature `Lio/grpc/internal/v0;.i:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L38070e.  v1:= temp @kind object;
  #L380710.  return v1 @kind object;
}
procedure `java.lang.Integer` `l`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.l:(Ljava/util/Map;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;

  #L380724.  v0:= "maxResponseMessageBytes" @kind object;
  #L380728.  call temp:= `i`(v1, v0) @signature `Lio/grpc/internal/v0;.i:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L38072e.  v1:= temp @kind object;
  #L380730.  return v1 @kind object;
}
procedure `java.util.List` `m`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.m:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;

  #L3808a4.  v0:= "methodConfig" @kind object;
  #L3808a8.  call temp:= `f`(v1, v0) @signature `Lio/grpc/internal/v0;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L3808ae.  v1:= temp @kind object;
  #L3808b0.  return v1 @kind object;
}
procedure `java.lang.String` `n`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.n:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L3807e4.  v0:= "method" @kind object;
  #L3807e8.  call temp:= `k`(v1, v0) @signature `Lio/grpc/internal/v0;.k:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3807ee.  v1:= temp @kind object;
  #L3807f0.  return v1 @kind object;
}
procedure `java.util.List` `o`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.o:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;

  #L3808c4.  v0:= "name" @kind object;
  #L3808c8.  call temp:= `f`(v1, v0) @signature `Lio/grpc/internal/v0;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L3808ce.  v1:= temp @kind object;
  #L3808d0.  return v1 @kind object;
}
procedure `java.util.Set` `p`(`java.util.Map` v3 @kind object) @signature `Lio/grpc/internal/v1;.p:(Ljava/util/Map;)Ljava/util/Set;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3809d4.  v0:= "nonFatalStatusCodes" @kind object;
  #L3809d8.  call temp:= `f`(v3, v0) @signature `Lio/grpc/internal/v1;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Set;` @kind static;
  #L3809de.  v3:= temp @kind object;
  #L3809e0.  if v3 != 0 then goto L3809fa;
  #L3809e4.  v3:= constclass @type ^`io.grpc.Status$Code` @kind object;
  #L3809e8.  call temp:= `noneOf`(v3) @signature `Ljava/util/EnumSet;.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L3809ee.  v3:= temp @kind object;
  #L3809f0.  call temp:= `unmodifiableSet`(v3) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L3809f6.  v3:= temp @kind object;
  #L3809f8.  return v3 @kind object;
  #L3809fa.  v1:= `@@io.grpc.Status$Code.a` @type ^`io.grpc.Status$Code` @kind object;
  #L3809fe.  call temp:= `contains`(v3, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L380a04.  v1:= temp;
  #L380a06.  v1:= v1 ^~ 1;
  #L380a0a.  v2:= "%s must not contain OK" @kind object;
  #L380a0e.  call `verify`(v1, v2, v0) @signature `Lcom/google/common/base/Verify;.verify:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L380a14.  return v3 @kind object;
}
procedure `java.lang.Long` `q`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.q:(Ljava/util/Map;)Ljava/lang/Long;` @AccessFlag STATIC {
    temp;
    v0;

  #L3807a4.  v0:= "perAttemptRecvTimeout" @kind object;
  #L3807a8.  call temp:= `l`(v1, v0) @signature `Lio/grpc/internal/v0;.l:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Long;` @kind static;
  #L3807ae.  v1:= temp @kind object;
  #L3807b0.  return v1 @kind object;
}
procedure `java.util.Map` `r`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.r:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag STATIC {
    temp;
    v0;

  #L380988.  v0:= "retryPolicy" @kind object;
  #L38098c.  call temp:= `j`(v1, v0) @signature `Lio/grpc/internal/v0;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L380992.  v1:= temp @kind object;
  #L380994.  return v1 @kind object;
}
procedure `java.util.Set` `s`(`java.util.Map` v4 @kind object) @signature `Lio/grpc/internal/v1;.s:(Ljava/util/Map;)Ljava/util/Set;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L380a28.  v0:= "retryableStatusCodes" @kind object;
  #L380a2c.  call temp:= `f`(v4, v0) @signature `Lio/grpc/internal/v1;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Set;` @kind static;
  #L380a32.  v4:= temp @kind object;
  #L380a34.  v1:= 1I;
  #L380a36.  if v4 == 0 then goto L380a3e;
  #L380a3a.  v2:= 1I;
  #L380a3c.  goto L380a40;
  #L380a3e.  v2:= 0I;
  #L380a40.  v3:= "%s is required in retry policy" @kind object;
  #L380a44.  call `verify`(v2, v3, v0) @signature `Lcom/google/common/base/Verify;.verify:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L380a4a.  v2:= `@@io.grpc.Status$Code.a` @type ^`io.grpc.Status$Code` @kind object;
  #L380a4e.  call temp:= `contains`(v4, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L380a54.  v2:= temp;
  #L380a56.  v1:= v1 ^~ v2 @kind int;
  #L380a58.  v2:= "%s must not contain OK" @kind object;
  #L380a5c.  call `verify`(v1, v2, v0) @signature `Lcom/google/common/base/Verify;.verify:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L380a62.  return v4 @kind object;
}
procedure `java.lang.String` `t`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.t:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L380804.  v0:= "service" @kind object;
  #L380808.  call temp:= `k`(v1, v0) @signature `Lio/grpc/internal/v0;.k:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L38080e.  v1:= temp @kind object;
  #L380810.  return v1 @kind object;
}
procedure `java.util.Set` `u`(`java.util.List` v11 @kind object) @signature `Lio/grpc/internal/v1;.u:(Ljava/util/List;)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L380a74.  v0:= constclass @type ^`io.grpc.Status$Code` @kind object;
  #L380a78.  call temp:= `noneOf`(v0) @signature `Ljava/util/EnumSet;.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L380a7e.  v0:= temp @kind object;
  #L380a80.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L380a86.  v11:= temp @kind object;
  #L380a88.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L380a8e.  v1:= temp;
  #L380a90.  if v1 == 0 then goto L380baa;
  #L380a94.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L380a9a.  v1:= temp @kind object;
  #L380a9c.  v2:= instanceof @variable v1 @type ^`java.lang.Double` @kind boolean;
  #L380aa0.  if v2 == 0 then goto L380b0c;
  #L380aa4.  v2:= v1 @kind object;
  #L380aa6.  v2:= (`java.lang.Double`) v2 @kind object;
  #L380aaa.  call temp:= `intValue`(v2) @signature `Ljava/lang/Double;.intValue:()I` @kind virtual;
  #L380ab0.  v3:= temp;
  #L380ab2.  v4:= (`double`) v3 @kind i2d;
  #L380ab4.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L380aba.  v6:= temp @kind wide;
  #L380abc.  v8:= 1I;
  #L380abe.  v9:= 0I;
  #L380ac0.  v10:= dcmpl(v4, v6);
  #L380ac4.  if v10 != 0 then goto L380acc;
  #L380ac8.  v4:= 1I;
  #L380aca.  goto L380ace;
  #L380acc.  v4:= 0I;
  #L380ace.  v5:= "Status code %s is not integral" @kind object;
  #L380ad2.  call `verify`(v4, v5, v1) @signature `Lcom/google/common/base/Verify;.verify:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L380ad8.  call temp:= `i`(v3) @signature `Lio/grpc/Status;.i:(I)Lio/grpc/Status;` @kind static;
  #L380ade.  v3:= temp @kind object;
  #L380ae0.  call temp:= `n`(v3) @signature `Lio/grpc/Status;.n:()Lio/grpc/Status$Code;` @kind virtual;
  #L380ae6.  v3:= temp @kind object;
  #L380ae8.  call temp:= `c`(v3) @signature `Lio/grpc/Status$Code;.c:()I` @kind virtual;
  #L380aee.  v4:= temp;
  #L380af0.  call temp:= `intValue`(v2) @signature `Ljava/lang/Double;.intValue:()I` @kind virtual;
  #L380af6.  v2:= temp;
  #L380af8.  if v4 != v2 then goto L380afe;
  #L380afc.  goto L380b00;
  #L380afe.  v8:= 0I;
  #L380b00.  v2:= "Status code %s is not valid" @kind object;
  #L380b04.  call `verify`(v8, v2, v1) @signature `Lcom/google/common/base/Verify;.verify:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L380b0a.  goto L380b22;
  #L380b0c.  v2:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L380b10.  if v2 == 0 then goto L380b64;
  #L380b14.  v2:= v1 @kind object;
  #L380b16.  v2:= (`java.lang.String`) v2 @kind object;
  #L380b1a.  call temp:= `valueOf`(v2) @signature `Lio/grpc/Status$Code;.valueOf:(Ljava/lang/String;)Lio/grpc/Status$Code;` @kind static;
  #L380b20.  v3:= temp @kind object;
  #L380b22.  call temp:= `add`(v0, v3) @signature `Ljava/util/EnumSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L380b28.  goto L380a88;
  #L380b2a.  v11:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L380b2c.  v0:= new `com.google.common.base.VerifyException`;
  #L380b30.  v2:= new `java.lang.StringBuilder`;
  #L380b34.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L380b3a.  v3:= "Status code " @kind object;
  #L380b3e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380b44.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380b4a.  v1:= " is not valid" @kind object;
  #L380b4e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380b54.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L380b5a.  v1:= temp @kind object;
  #L380b5c.  call `<init>`(v0, v1, v11) @signature `Lcom/google/common/base/VerifyException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L380b62.  throw v0;
  #L380b64.  v11:= new `com.google.common.base.VerifyException`;
  #L380b68.  v0:= new `java.lang.StringBuilder`;
  #L380b6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L380b72.  v2:= "Can not convert status code " @kind object;
  #L380b76.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380b7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380b82.  v2:= " to Status.Code, because its type is " @kind object;
  #L380b86.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380b8c.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L380b92.  v1:= temp @kind object;
  #L380b94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380b9a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L380ba0.  v0:= temp @kind object;
  #L380ba2.  call `<init>`(v11, v0) @signature `Lcom/google/common/base/VerifyException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L380ba8.  throw v11;
  #L380baa.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L380bb0.  v11:= temp @kind object;
  #L380bb2.  return v11 @kind object;
  catch `java.lang.IllegalArgumentException` @[L380b14..L380b22] goto L380b2a;
}
procedure `io.grpc.internal.q1$d0` `v`(`java.util.Map` v6 @kind object) @signature `Lio/grpc/internal/v1;.v:(Ljava/util/Map;)Lio/grpc/internal/q1$d0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L380550.  v0:= 0I;
  #L380552.  if v6 != 0 then goto L380558;
  #L380556.  return v0 @kind object;
  #L380558.  v1:= "retryThrottling" @kind object;
  #L38055c.  call temp:= `j`(v6, v1) @signature `Lio/grpc/internal/v0;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L380562.  v6:= temp @kind object;
  #L380564.  if v6 != 0 then goto L38056a;
  #L380568.  return v0 @kind object;
  #L38056a.  v0:= "maxTokens" @kind object;
  #L38056e.  call temp:= `h`(v6, v0) @signature `Lio/grpc/internal/v0;.h:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L380574.  v0:= temp @kind object;
  #L380576.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Double;.floatValue:()F` @kind virtual;
  #L38057c.  v0:= temp;
  #L38057e.  v1:= "tokenRatio" @kind object;
  #L380582.  call temp:= `h`(v6, v1) @signature `Lio/grpc/internal/v0;.h:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L380588.  v6:= temp @kind object;
  #L38058a.  call temp:= `floatValue`(v6) @signature `Ljava/lang/Double;.floatValue:()F` @kind virtual;
  #L380590.  v6:= temp;
  #L380592.  v1:= 1I;
  #L380594.  v2:= 0I;
  #L380596.  v3:= 0I;
  #L380598.  v4:= fcmpl(v0, v3);
  #L38059c.  if v4 <= 0 then goto L3805a4;
  #L3805a0.  v4:= 1I;
  #L3805a2.  goto L3805a6;
  #L3805a4.  v4:= 0I;
  #L3805a6.  v5:= "maxToken should be greater than zero" @kind object;
  #L3805aa.  call `checkState`(v4, v5) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L3805b0.  v3:= fcmpl(v6, v3);
  #L3805b4.  if v3 <= 0 then goto L3805ba;
  #L3805b8.  goto L3805bc;
  #L3805ba.  v1:= 0I;
  #L3805bc.  v2:= "tokenRatio should be greater than zero" @kind object;
  #L3805c0.  call `checkState`(v1, v2) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L3805c6.  v1:= new `io.grpc.internal.q1$d0`;
  #L3805ca.  call `<init>`(v1, v0, v6) @signature `Lio/grpc/internal/q1$d0;.<init>:(FF)V` @kind direct;
  #L3805d0.  return v1 @kind object;
}
procedure `java.lang.Long` `w`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.w:(Ljava/util/Map;)Ljava/lang/Long;` @AccessFlag STATIC {
    temp;
    v0;

  #L3807c4.  v0:= "timeout" @kind object;
  #L3807c8.  call temp:= `l`(v1, v0) @signature `Lio/grpc/internal/v0;.l:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Long;` @kind static;
  #L3807ce.  v1:= temp @kind object;
  #L3807d0.  return v1 @kind object;
}
procedure `java.lang.Boolean` `x`(`java.util.Map` v1 @kind object) @signature `Lio/grpc/internal/v1;.x:(Ljava/util/Map;)Ljava/lang/Boolean;` @AccessFlag STATIC {
    temp;
    v0;

  #L380684.  v0:= "waitForReady" @kind object;
  #L380688.  call temp:= `d`(v1, v0) @signature `Lio/grpc/internal/v0;.d:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;` @kind static;
  #L38068e.  v1:= temp @kind object;
  #L380690.  return v1 @kind object;
}
procedure `io.grpc.u0$c` `y`(`java.util.List` v4 @kind object, `io.grpc.p0` v5 @kind object) @signature `Lio/grpc/internal/v1;.y:(Ljava/util/List;Lio/grpc/p0;)Lio/grpc/u0$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L380450.  v0:= new `java.util.ArrayList`;
  #L380454.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38045a.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L380460.  v4:= temp @kind object;
  #L380462.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L380468.  v1:= temp;
  #L38046a.  if v1 == 0 then goto L3804fe;
  #L38046e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L380474.  v1:= temp @kind object;
  #L380476.  v1:= (`io.grpc.internal.v1$a`) v1 @kind object;
  #L38047a.  call temp:= `a`(v1) @signature `Lio/grpc/internal/v1$a;.a:()Ljava/lang/String;` @kind virtual;
  #L380480.  v2:= temp @kind object;
  #L380482.  call temp:= `d`(v5, v2) @signature `Lio/grpc/p0;.d:(Ljava/lang/String;)Lio/grpc/o0;` @kind virtual;
  #L380488.  v3:= temp @kind object;
  #L38048a.  if v3 != 0 then goto L380496;
  #L38048e.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L380494.  goto L380462;
  #L380496.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L38049c.  v4:= temp;
  #L38049e.  if v4 != 0 then goto L3804c4;
  #L3804a2.  v4:= constclass @type ^`io.grpc.internal.v1` @kind object;
  #L3804a6.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3804ac.  v4:= temp @kind object;
  #L3804ae.  call temp:= `getLogger`(v4) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3804b4.  v4:= temp @kind object;
  #L3804b6.  v5:= `@@java.util.logging.Level.FINEST` @type ^`java.util.logging.Level` @kind object;
  #L3804ba.  v2:= "{0} specified by Service Config are not available" @kind object;
  #L3804be.  call `log`(v4, v5, v2, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L3804c4.  call temp:= `b`(v1) @signature `Lio/grpc/internal/v1$a;.b:()Ljava/util/Map;` @kind virtual;
  #L3804ca.  v4:= temp @kind object;
  #L3804cc.  call temp:= `e`(v3, v4) @signature `Lio/grpc/o0;.e:(Ljava/util/Map;)Lio/grpc/u0$c;` @kind virtual;
  #L3804d2.  v4:= temp @kind object;
  #L3804d4.  call temp:= `d`(v4) @signature `Lio/grpc/u0$c;.d:()Lio/grpc/Status;` @kind virtual;
  #L3804da.  v5:= temp @kind object;
  #L3804dc.  if v5 == 0 then goto L3804e2;
  #L3804e0.  return v4 @kind object;
  #L3804e2.  v5:= new `io.grpc.internal.v1$b`;
  #L3804e6.  call temp:= `c`(v4) @signature `Lio/grpc/u0$c;.c:()Ljava/lang/Object;` @kind virtual;
  #L3804ec.  v4:= temp @kind object;
  #L3804ee.  call `<init>`(v5, v3, v4) @signature `Lio/grpc/internal/v1$b;.<init>:(Lio/grpc/o0;Ljava/lang/Object;)V` @kind direct;
  #L3804f4.  call temp:= `a`(v5) @signature `Lio/grpc/u0$c;.a:(Ljava/lang/Object;)Lio/grpc/u0$c;` @kind static;
  #L3804fa.  v4:= temp @kind object;
  #L3804fc.  return v4 @kind object;
  #L3804fe.  v4:= `@@io.grpc.Status.h` @type ^`io.grpc.Status` @kind object;
  #L380502.  v5:= new `java.lang.StringBuilder`;
  #L380506.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38050c.  v1:= "None of " @kind object;
  #L380510.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380516.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38051c.  v0:= " specified by Service Config are available." @kind object;
  #L380520.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380526.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38052c.  v5:= temp @kind object;
  #L38052e.  call temp:= `r`(v4, v5) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L380534.  v4:= temp @kind object;
  #L380536.  call temp:= `b`(v4) @signature `Lio/grpc/u0$c;.b:(Lio/grpc/Status;)Lio/grpc/u0$c;` @kind static;
  #L38053c.  v4:= temp @kind object;
  #L38053e.  return v4 @kind object;
}
procedure `io.grpc.internal.v1$a` `z`(`java.util.Map` v3 @kind object) @signature `Lio/grpc/internal/v1;.z:(Ljava/util/Map;)Lio/grpc/internal/v1$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3805e4.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3805ea.  v0:= temp;
  #L3805ec.  v1:= 1I;
  #L3805ee.  if v0 != v1 then goto L38062e;
  #L3805f2.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3805f8.  v0:= temp @kind object;
  #L3805fa.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L380600.  v0:= temp @kind object;
  #L380602.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L380608.  v0:= temp @kind object;
  #L38060a.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L38060e.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L380614.  v0:= temp @kind object;
  #L380616.  v0:= (`java.lang.String`) v0 @kind object;
  #L38061a.  v1:= new `io.grpc.internal.v1$a`;
  #L38061e.  call temp:= `j`(v3, v0) @signature `Lio/grpc/internal/v0;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L380624.  v3:= temp @kind object;
  #L380626.  call `<init>`(v1, v0, v3) @signature `Lio/grpc/internal/v1$a;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L38062c.  return v1 @kind object;
  #L38062e.  v0:= new `java.lang.RuntimeException`;
  #L380632.  v1:= new `java.lang.StringBuilder`;
  #L380636.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38063c.  v2:= "There are " @kind object;
  #L380640.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380646.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L38064c.  v2:= temp;
  #L38064e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L380654.  v2:= " fields in a LoadBalancingConfig object. Exactly one is expected. Config=" @kind object;
  #L380658.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38065e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L380664.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38066a.  v3:= temp @kind object;
  #L38066c.  call `<init>`(v0, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L380672.  throw v0;
}
