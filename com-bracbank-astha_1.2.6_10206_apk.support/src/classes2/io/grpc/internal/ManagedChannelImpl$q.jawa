record `io.grpc.internal.ManagedChannelImpl$q` @kind class @AccessFlag FINAL extends `java.util.concurrent.Executor` @kind interface {
  `io.grpc.internal.g1` `io.grpc.internal.ManagedChannelImpl$q.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `io.grpc.internal.ManagedChannelImpl$q.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.grpc.internal.ManagedChannelImpl$q` v1 @kind this, `io.grpc.internal.g1` v2 @kind object) @signature `Lio/grpc/internal/ManagedChannelImpl$q;.<init>:(Lio/grpc/internal/g1;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3758b0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3758b6.  v0:= "executorPool" @kind object;
  #L3758ba.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3758c0.  v2:= temp @kind object;
  #L3758c2.  v2:= (`io.grpc.internal.g1`) v2 @kind object;
  #L3758c6.  v1.`io.grpc.internal.ManagedChannelImpl$q.a` @type ^`io.grpc.internal.g1` := v2 @kind object;
  #L3758ca.  return @kind void;
}
procedure `java.util.concurrent.Executor` `a`(`io.grpc.internal.ManagedChannelImpl$q` v3 @kind this) @signature `Lio/grpc/internal/ManagedChannelImpl$q;.a:()Ljava/util/concurrent/Executor;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L375854.  @monitorenter v3
  #L375856.  v0:= v3.`io.grpc.internal.ManagedChannelImpl$q.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L37585a.  if v0 != 0 then goto L375886;
  #L37585e.  v0:= v3.`io.grpc.internal.ManagedChannelImpl$q.a` @type ^`io.grpc.internal.g1` @kind object;
  #L375862.  call temp:= `a`(v0) @signature `Lio/grpc/internal/g1;.a:()Ljava/lang/Object;` @kind interface;
  #L375868.  v0:= temp @kind object;
  #L37586a.  v0:= (`java.util.concurrent.Executor`) v0 @kind object;
  #L37586e.  v1:= "%s.getObject()" @kind object;
  #L375872.  v2:= v3.`io.grpc.internal.ManagedChannelImpl$q.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L375876.  call temp:= `checkNotNull`(v0, v1, v2) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37587c.  v0:= temp @kind object;
  #L37587e.  v0:= (`java.util.concurrent.Executor`) v0 @kind object;
  #L375882.  v3.`io.grpc.internal.ManagedChannelImpl$q.b` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L375886.  v0:= v3.`io.grpc.internal.ManagedChannelImpl$q.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L37588a.  @monitorexit v3
  #L37588c.  return v0 @kind object;
  #L37588e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L375890.  @monitorexit v3
  #L375892.  throw v0;
  catch `java.lang.Throwable` @[L375856..L37588a] goto L37588e;
}
procedure `void` `b`(`io.grpc.internal.ManagedChannelImpl$q` v2 @kind this) @signature `Lio/grpc/internal/ManagedChannelImpl$q;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3758fc.  @monitorenter v2
  #L3758fe.  v0:= v2.`io.grpc.internal.ManagedChannelImpl$q.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L375902.  if v0 == 0 then goto L37591a;
  #L375906.  v1:= v2.`io.grpc.internal.ManagedChannelImpl$q.a` @type ^`io.grpc.internal.g1` @kind object;
  #L37590a.  call temp:= `b`(v1, v0) @signature `Lio/grpc/internal/g1;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L375910.  v0:= temp @kind object;
  #L375912.  v0:= (`java.util.concurrent.Executor`) v0 @kind object;
  #L375916.  v2.`io.grpc.internal.ManagedChannelImpl$q.b` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L37591a.  @monitorexit v2
  #L37591c.  return @kind void;
  #L37591e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L375920.  @monitorexit v2
  #L375922.  throw v0;
  catch `java.lang.Throwable` @[L3758fe..L37591a] goto L37591e;
}
procedure `void` `execute`(`io.grpc.internal.ManagedChannelImpl$q` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lio/grpc/internal/ManagedChannelImpl$q;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3758dc.  call temp:= `a`(v1) @signature `Lio/grpc/internal/ManagedChannelImpl$q;.a:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L3758e2.  v0:= temp @kind object;
  #L3758e4.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3758ea.  return @kind void;
}
