record `io.grpc.internal.q1$r` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `io.grpc.Status` `io.grpc.internal.q1$r.a` @AccessFlag FINAL_SYNTHETIC;
  `io.grpc.internal.q1` `io.grpc.internal.q1$r.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.q1$r` v0 @kind this, `io.grpc.internal.q1` v1 @kind object, `io.grpc.Status` v2 @kind object) @signature `Lio/grpc/internal/q1$r;.<init>:(Lio/grpc/internal/q1;Lio/grpc/Status;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37d510.  v0.`io.grpc.internal.q1$r.b` @type ^`io.grpc.internal.q1` := v1 @kind object;
  #L37d514.  v0.`io.grpc.internal.q1$r.a` @type ^`io.grpc.Status` := v2 @kind object;
  #L37d518.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37d51e.  return @kind void;
}
procedure `void` `run`(`io.grpc.internal.q1$r` v4 @kind this) @signature `Lio/grpc/internal/q1$r;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L37d530.  v0:= v4.`io.grpc.internal.q1$r.b` @type ^`io.grpc.internal.q1` @kind object;
  #L37d534.  v1:= 1I;
  #L37d536.  call temp:= `t`(v0, v1) @signature `Lio/grpc/internal/q1;.t:(Lio/grpc/internal/q1;Z)Z` @kind static;
  #L37d53c.  v0:= v4.`io.grpc.internal.q1$r.b` @type ^`io.grpc.internal.q1` @kind object;
  #L37d540.  call temp:= `D`(v0) @signature `Lio/grpc/internal/q1;.D:(Lio/grpc/internal/q1;)Lio/grpc/internal/ClientStreamListener;` @kind static;
  #L37d546.  v0:= temp @kind object;
  #L37d548.  v1:= v4.`io.grpc.internal.q1$r.a` @type ^`io.grpc.Status` @kind object;
  #L37d54c.  v2:= `@@io.grpc.internal.ClientStreamListener$RpcProgress.a` @type ^`io.grpc.internal.ClientStreamListener$RpcProgress` @kind object;
  #L37d550.  v3:= new `io.grpc.t0`;
  #L37d554.  call `<init>`(v3) @signature `Lio/grpc/t0;.<init>:()V` @kind direct;
  #L37d55a.  call `d`(v0, v1, v2, v3) @signature `Lio/grpc/internal/ClientStreamListener;.d:(Lio/grpc/Status;Lio/grpc/internal/ClientStreamListener$RpcProgress;Lio/grpc/t0;)V` @kind interface;
  #L37d560.  return @kind void;
}
