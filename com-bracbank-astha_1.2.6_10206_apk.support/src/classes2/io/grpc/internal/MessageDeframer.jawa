record `io.grpc.internal.MessageDeframer` @kind class @AccessFlag PUBLIC extends `java.io.Closeable` @kind interface, `io.grpc.internal.v` @kind interface {
  `io.grpc.internal.MessageDeframer$b` `io.grpc.internal.MessageDeframer.a` @AccessFlag PRIVATE;
  `int` `io.grpc.internal.MessageDeframer.b` @AccessFlag PRIVATE;
  `io.grpc.internal.z1` `io.grpc.internal.MessageDeframer.c` @AccessFlag PRIVATE_FINAL;
  `io.grpc.internal.f2` `io.grpc.internal.MessageDeframer.d` @AccessFlag PRIVATE_FINAL;
  `io.grpc.s` `io.grpc.internal.MessageDeframer.e` @AccessFlag PRIVATE;
  `io.grpc.internal.GzipInflatingBuffer` `io.grpc.internal.MessageDeframer.f` @AccessFlag PRIVATE;
  `byte`[] `io.grpc.internal.MessageDeframer.g` @AccessFlag PRIVATE;
  `int` `io.grpc.internal.MessageDeframer.h` @AccessFlag PRIVATE;
  `io.grpc.internal.MessageDeframer$State` `io.grpc.internal.MessageDeframer.i` @AccessFlag PRIVATE;
  `int` `io.grpc.internal.MessageDeframer.j` @AccessFlag PRIVATE;
  `boolean` `io.grpc.internal.MessageDeframer.k` @AccessFlag PRIVATE;
  `io.grpc.internal.r` `io.grpc.internal.MessageDeframer.l` @AccessFlag PRIVATE;
  `io.grpc.internal.r` `io.grpc.internal.MessageDeframer.m` @AccessFlag PRIVATE;
  `long` `io.grpc.internal.MessageDeframer.n` @AccessFlag PRIVATE;
  `boolean` `io.grpc.internal.MessageDeframer.o` @AccessFlag PRIVATE;
  `int` `io.grpc.internal.MessageDeframer.p` @AccessFlag PRIVATE;
  `int` `io.grpc.internal.MessageDeframer.r` @AccessFlag PRIVATE;
  `boolean` `io.grpc.internal.MessageDeframer.s` @AccessFlag PRIVATE;
  `boolean` `io.grpc.internal.MessageDeframer.t` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`io.grpc.internal.MessageDeframer` v2 @kind this, `io.grpc.internal.MessageDeframer$b` v3 @kind object, `io.grpc.s` v4 @kind object, `int` v5 , `io.grpc.internal.z1` v6 @kind object, `io.grpc.internal.f2` v7 @kind object) @signature `Lio/grpc/internal/MessageDeframer;.<init>:(Lio/grpc/internal/MessageDeframer$b;Lio/grpc/s;ILio/grpc/internal/z1;Lio/grpc/internal/f2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L37a568.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37a56e.  v0:= `@@io.grpc.internal.MessageDeframer$State.a` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a572.  v2.`io.grpc.internal.MessageDeframer.i` @type ^`io.grpc.internal.MessageDeframer$State` := v0 @kind object;
  #L37a576.  v0:= 5I;
  #L37a578.  v2.`io.grpc.internal.MessageDeframer.j` @type ^`int` := v0;
  #L37a57c.  v0:= new `io.grpc.internal.r`;
  #L37a580.  call `<init>`(v0) @signature `Lio/grpc/internal/r;.<init>:()V` @kind direct;
  #L37a586.  v2.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` := v0 @kind object;
  #L37a58a.  v0:= 0I;
  #L37a58c.  v2.`io.grpc.internal.MessageDeframer.o` @type ^`boolean` := v0 @kind boolean;
  #L37a590.  v1:= -1I;
  #L37a592.  v2.`io.grpc.internal.MessageDeframer.p` @type ^`int` := v1;
  #L37a596.  v2.`io.grpc.internal.MessageDeframer.s` @type ^`boolean` := v0 @kind boolean;
  #L37a59a.  v2.`io.grpc.internal.MessageDeframer.t` @type ^`boolean` := v0 @kind boolean;
  #L37a59e.  v0:= "sink" @kind object;
  #L37a5a2.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37a5a8.  v3:= temp @kind object;
  #L37a5aa.  v3:= (`io.grpc.internal.MessageDeframer$b`) v3 @kind object;
  #L37a5ae.  v2.`io.grpc.internal.MessageDeframer.a` @type ^`io.grpc.internal.MessageDeframer$b` := v3 @kind object;
  #L37a5b2.  v3:= "decompressor" @kind object;
  #L37a5b6.  call temp:= `checkNotNull`(v4, v3) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37a5bc.  v3:= temp @kind object;
  #L37a5be.  v3:= (`io.grpc.s`) v3 @kind object;
  #L37a5c2.  v2.`io.grpc.internal.MessageDeframer.e` @type ^`io.grpc.s` := v3 @kind object;
  #L37a5c6.  v2.`io.grpc.internal.MessageDeframer.b` @type ^`int` := v5;
  #L37a5ca.  v3:= "statsTraceCtx" @kind object;
  #L37a5ce.  call temp:= `checkNotNull`(v6, v3) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37a5d4.  v3:= temp @kind object;
  #L37a5d6.  v3:= (`io.grpc.internal.z1`) v3 @kind object;
  #L37a5da.  v2.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` := v3 @kind object;
  #L37a5de.  v3:= "transportTracer" @kind object;
  #L37a5e2.  call temp:= `checkNotNull`(v7, v3) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37a5e8.  v3:= temp @kind object;
  #L37a5ea.  v3:= (`io.grpc.internal.f2`) v3 @kind object;
  #L37a5ee.  v2.`io.grpc.internal.MessageDeframer.d` @type ^`io.grpc.internal.f2` := v3 @kind object;
  #L37a5f2.  return @kind void;
}
procedure `void` `T`(`io.grpc.internal.MessageDeframer` v7 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.T:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L37a768.  v0:= v7.`io.grpc.internal.MessageDeframer.o` @type ^`boolean` @kind boolean;
  #L37a76c.  if v0 == 0 then goto L37a772;
  #L37a770.  return @kind void;
  #L37a772.  v0:= 1I;
  #L37a774.  v7.`io.grpc.internal.MessageDeframer.o` @type ^`boolean` := v0 @kind boolean;
  #L37a778.  v1:= 0I;
  #L37a77a.  v2:= v7.`io.grpc.internal.MessageDeframer.t` @type ^`boolean` @kind boolean;
  #L37a77e.  if v2 != 0 then goto L37a80c;
  #L37a782.  v2:= v7.`io.grpc.internal.MessageDeframer.n` @type ^`long` @kind wide;
  #L37a786.  v4:= 0L;
  #L37a78a.  v6:= lcmp(v2, v4);
  #L37a78e.  if v6 <= 0 then goto L37a80c;
  #L37a792.  call temp:= `a0`(v7) @signature `Lio/grpc/internal/MessageDeframer;.a0:()Z` @kind direct;
  #L37a798.  v2:= temp;
  #L37a79a.  if v2 == 0 then goto L37a80c;
  #L37a79e.  v2:= `@@io.grpc.internal.MessageDeframer$a.a` @type ^`int`[] @kind object;
  #L37a7a2.  v3:= v7.`io.grpc.internal.MessageDeframer.i` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a7a6.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L37a7ac.  v3:= temp;
  #L37a7ae.  v2:= v2[v3];
  #L37a7b2.  if v2 == v0 then goto L37a804;
  #L37a7b6.  v3:= 2I;
  #L37a7b8.  if v2 != v3 then goto L37a7d2;
  #L37a7bc.  call `Y`(v7) @signature `Lio/grpc/internal/MessageDeframer;.Y:()V` @kind direct;
  #L37a7c2.  v2:= v7.`io.grpc.internal.MessageDeframer.n` @type ^`long` @kind wide;
  #L37a7c6.  v4:= 1L;
  #L37a7ca.  v2:= v2 - v4 @kind long;
  #L37a7cc.  v7.`io.grpc.internal.MessageDeframer.n` @type ^`long` := v2 @kind wide;
  #L37a7d0.  goto L37a778;
  #L37a7d2.  v0:= new `java.lang.AssertionError`;
  #L37a7d6.  v2:= new `java.lang.StringBuilder`;
  #L37a7da.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37a7e0.  v3:= "Invalid state: " @kind object;
  #L37a7e4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37a7ea.  v3:= v7.`io.grpc.internal.MessageDeframer.i` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a7ee.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37a7f4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37a7fa.  v2:= temp @kind object;
  #L37a7fc.  call `<init>`(v0, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L37a802.  throw v0;
  #L37a804.  call `Z`(v7) @signature `Lio/grpc/internal/MessageDeframer;.Z:()V` @kind direct;
  #L37a80a.  goto L37a778;
  #L37a80c.  v0:= v7.`io.grpc.internal.MessageDeframer.t` @type ^`boolean` @kind boolean;
  #L37a810.  if v0 == 0 then goto L37a820;
  #L37a814.  call `close`(v7) @signature `Lio/grpc/internal/MessageDeframer;.close:()V` @kind virtual;
  #L37a81a.  v7.`io.grpc.internal.MessageDeframer.o` @type ^`boolean` := v1 @kind boolean;
  #L37a81e.  return @kind void;
  #L37a820.  v0:= v7.`io.grpc.internal.MessageDeframer.s` @type ^`boolean` @kind boolean;
  #L37a824.  if v0 == 0 then goto L37a83a;
  #L37a828.  call temp:= `X`(v7) @signature `Lio/grpc/internal/MessageDeframer;.X:()Z` @kind direct;
  #L37a82e.  v0:= temp;
  #L37a830.  if v0 == 0 then goto L37a83a;
  #L37a834.  call `close`(v7) @signature `Lio/grpc/internal/MessageDeframer;.close:()V` @kind virtual;
  #L37a83a.  v7.`io.grpc.internal.MessageDeframer.o` @type ^`boolean` := v1 @kind boolean;
  #L37a83e.  return @kind void;
  #L37a840.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37a842.  v7.`io.grpc.internal.MessageDeframer.o` @type ^`boolean` := v1 @kind boolean;
  #L37a846.  throw v0;
  catch `java.lang.Throwable` @[L37a77a..L37a81a] goto L37a840;
  catch `java.lang.Throwable` @[L37a820..L37a83a] goto L37a840;
}
procedure `java.io.InputStream` `U`(`io.grpc.internal.MessageDeframer` v4 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.U:()Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L37a4b0.  v0:= v4.`io.grpc.internal.MessageDeframer.e` @type ^`io.grpc.s` @kind object;
  #L37a4b4.  v1:= `@@io.grpc.k$b.a` @type ^`io.grpc.k` @kind object;
  #L37a4b8.  if v0 == v1 then goto L37a4f4;
  #L37a4bc.  v1:= v4.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a4c0.  v2:= 1I;
  #L37a4c2.  call temp:= `c`(v1, v2) @signature `Lio/grpc/internal/n1;.c:(Lio/grpc/internal/m1;Z)Ljava/io/InputStream;` @kind static;
  #L37a4c8.  v1:= temp @kind object;
  #L37a4ca.  call temp:= `b`(v0, v1) @signature `Lio/grpc/s;.b:(Ljava/io/InputStream;)Ljava/io/InputStream;` @kind interface;
  #L37a4d0.  v0:= temp @kind object;
  #L37a4d2.  v1:= new `io.grpc.internal.MessageDeframer$d`;
  #L37a4d6.  v2:= v4.`io.grpc.internal.MessageDeframer.b` @type ^`int`;
  #L37a4da.  v3:= v4.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a4de.  call `<init>`(v1, v0, v2, v3) @signature `Lio/grpc/internal/MessageDeframer$d;.<init>:(Ljava/io/InputStream;ILio/grpc/internal/z1;)V` @kind direct;
  #L37a4e4.  return v1 @kind object;
  #L37a4e6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L37a4e8.  v1:= new `java.lang.RuntimeException`;
  #L37a4ec.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L37a4f2.  throw v1;
  #L37a4f4.  v0:= `@@io.grpc.Status.t` @type ^`io.grpc.Status` @kind object;
  #L37a4f8.  v1:= "Can't decode compressed gRPC message as compression not configured" @kind object;
  #L37a4fc.  call temp:= `r`(v0, v1) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L37a502.  v0:= temp @kind object;
  #L37a504.  call temp:= `d`(v0) @signature `Lio/grpc/Status;.d:()Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L37a50a.  v0:= temp @kind object;
  #L37a50c.  throw v0;
  catch `java.io.IOException` @[L37a4bc..L37a4e4] goto L37a4e6;
}
procedure `java.io.InputStream` `V`(`io.grpc.internal.MessageDeframer` v3 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.V:()Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L37a530.  v0:= v3.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a534.  v1:= v3.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a538.  call temp:= `d`(v1) @signature `Lio/grpc/internal/r;.d:()I` @kind virtual;
  #L37a53e.  v1:= temp;
  #L37a540.  v1:= (`long`) v1 @kind i2l;
  #L37a542.  call `f`(v0, v1) @signature `Lio/grpc/internal/z1;.f:(J)V` @kind virtual;
  #L37a548.  v0:= v3.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a54c.  v1:= 1I;
  #L37a54e.  call temp:= `c`(v0, v1) @signature `Lio/grpc/internal/n1;.c:(Lio/grpc/internal/m1;Z)Ljava/io/InputStream;` @kind static;
  #L37a554.  v0:= temp @kind object;
  #L37a556.  return v0 @kind object;
}
procedure `boolean` `W`(`io.grpc.internal.MessageDeframer` v1 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.W:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L37a168.  call temp:= `isClosed`(v1) @signature `Lio/grpc/internal/MessageDeframer;.isClosed:()Z` @kind virtual;
  #L37a16e.  v0:= temp;
  #L37a170.  if v0 != 0 then goto L37a182;
  #L37a174.  v0:= v1.`io.grpc.internal.MessageDeframer.s` @type ^`boolean` @kind boolean;
  #L37a178.  if v0 == 0 then goto L37a17e;
  #L37a17c.  goto L37a182;
  #L37a17e.  v0:= 0I;
  #L37a180.  goto L37a184;
  #L37a182.  v0:= 1I;
  #L37a184.  return v0;
}
procedure `boolean` `X`(`io.grpc.internal.MessageDeframer` v1 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.X:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L37a198.  v0:= v1.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a19c.  if v0 == 0 then goto L37a1aa;
  #L37a1a0.  call temp:= `d0`(v0) @signature `Lio/grpc/internal/GzipInflatingBuffer;.d0:()Z` @kind virtual;
  #L37a1a6.  v0:= temp;
  #L37a1a8.  return v0;
  #L37a1aa.  v0:= v1.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` @kind object;
  #L37a1ae.  call temp:= `d`(v0) @signature `Lio/grpc/internal/r;.d:()I` @kind virtual;
  #L37a1b4.  v0:= temp;
  #L37a1b6.  if v0 != 0 then goto L37a1be;
  #L37a1ba.  v0:= 1I;
  #L37a1bc.  goto L37a1c0;
  #L37a1be.  v0:= 0I;
  #L37a1c0.  return v0;
}
procedure `void` `Y`(`io.grpc.internal.MessageDeframer` v6 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.Y:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L37a86c.  v0:= v6.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a870.  v1:= v6.`io.grpc.internal.MessageDeframer.p` @type ^`int`;
  #L37a874.  v2:= v6.`io.grpc.internal.MessageDeframer.r` @type ^`int`;
  #L37a878.  v2:= (`long`) v2 @kind i2l;
  #L37a87a.  v4:= -1L;
  #L37a87e.  call `e`(v0, v1, v2, v4) @signature `Lio/grpc/internal/z1;.e:(IJJ)V` @kind virtual;
  #L37a884.  v0:= 0I;
  #L37a886.  v6.`io.grpc.internal.MessageDeframer.r` @type ^`int` := v0;
  #L37a88a.  v0:= v6.`io.grpc.internal.MessageDeframer.k` @type ^`boolean` @kind boolean;
  #L37a88e.  if v0 == 0 then goto L37a89c;
  #L37a892.  call temp:= `U`(v6) @signature `Lio/grpc/internal/MessageDeframer;.U:()Ljava/io/InputStream;` @kind direct;
  #L37a898.  v0:= temp @kind object;
  #L37a89a.  goto L37a8a4;
  #L37a89c.  call temp:= `V`(v6) @signature `Lio/grpc/internal/MessageDeframer;.V:()Ljava/io/InputStream;` @kind direct;
  #L37a8a2.  v0:= temp @kind object;
  #L37a8a4.  v1:= 0I;
  #L37a8a6.  v6.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` := v1 @kind object;
  #L37a8aa.  v2:= v6.`io.grpc.internal.MessageDeframer.a` @type ^`io.grpc.internal.MessageDeframer$b` @kind object;
  #L37a8ae.  v3:= new `io.grpc.internal.MessageDeframer$c`;
  #L37a8b2.  call `<init>`(v3, v0, v1) @signature `Lio/grpc/internal/MessageDeframer$c;.<init>:(Ljava/io/InputStream;Lio/grpc/internal/MessageDeframer$a;)V` @kind direct;
  #L37a8b8.  call `a`(v2, v3) @signature `Lio/grpc/internal/MessageDeframer$b;.a:(Lio/grpc/internal/b2$a;)V` @kind interface;
  #L37a8be.  v0:= `@@io.grpc.internal.MessageDeframer$State.a` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a8c2.  v6.`io.grpc.internal.MessageDeframer.i` @type ^`io.grpc.internal.MessageDeframer$State` := v0 @kind object;
  #L37a8c6.  v0:= 5I;
  #L37a8c8.  v6.`io.grpc.internal.MessageDeframer.j` @type ^`int` := v0;
  #L37a8cc.  return @kind void;
}
procedure `void` `Z`(`io.grpc.internal.MessageDeframer` v6 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.Z:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L37a8e0.  v0:= v6.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a8e4.  call temp:= `readUnsignedByte`(v0) @signature `Lio/grpc/internal/r;.readUnsignedByte:()I` @kind virtual;
  #L37a8ea.  v0:= temp;
  #L37a8ec.  v1:= v0 ^& 254;
  #L37a8f0.  if v1 != 0 then goto L37a998;
  #L37a8f4.  v1:= 1I;
  #L37a8f6.  v0:= v0 ^& v1 @kind int;
  #L37a8f8.  v2:= 0I;
  #L37a8fa.  if v0 == 0 then goto L37a902;
  #L37a8fe.  v0:= 1I;
  #L37a900.  goto L37a904;
  #L37a902.  v0:= 0I;
  #L37a904.  v6.`io.grpc.internal.MessageDeframer.k` @type ^`boolean` := v0 @kind boolean;
  #L37a908.  v0:= v6.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a90c.  call temp:= `readInt`(v0) @signature `Lio/grpc/internal/c;.readInt:()I` @kind virtual;
  #L37a912.  v0:= temp;
  #L37a914.  v6.`io.grpc.internal.MessageDeframer.j` @type ^`int` := v0;
  #L37a918.  if v0 < 0 then goto L37a94c;
  #L37a91c.  v3:= v6.`io.grpc.internal.MessageDeframer.b` @type ^`int`;
  #L37a920.  if v0 > v3 then goto L37a94c;
  #L37a924.  v0:= v6.`io.grpc.internal.MessageDeframer.p` @type ^`int`;
  #L37a928.  v0:= v0 + v1 @kind int;
  #L37a92a.  v6.`io.grpc.internal.MessageDeframer.p` @type ^`int` := v0;
  #L37a92e.  v1:= v6.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a932.  call `d`(v1, v0) @signature `Lio/grpc/internal/z1;.d:(I)V` @kind virtual;
  #L37a938.  v0:= v6.`io.grpc.internal.MessageDeframer.d` @type ^`io.grpc.internal.f2` @kind object;
  #L37a93c.  call `d`(v0) @signature `Lio/grpc/internal/f2;.d:()V` @kind virtual;
  #L37a942.  v0:= `@@io.grpc.internal.MessageDeframer$State.b` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a946.  v6.`io.grpc.internal.MessageDeframer.i` @type ^`io.grpc.internal.MessageDeframer$State` := v0 @kind object;
  #L37a94a.  return @kind void;
  #L37a94c.  v0:= `@@io.grpc.Status.o` @type ^`io.grpc.Status` @kind object;
  #L37a950.  v3:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L37a954.  v4:= 2I;
  #L37a956.  v4:= new `java.lang.Object`[v4];
  #L37a95a.  v5:= v6.`io.grpc.internal.MessageDeframer.b` @type ^`int`;
  #L37a95e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L37a964.  v5:= temp @kind object;
  #L37a966.  v4[v2]:= v5 @kind object;
  #L37a96a.  v2:= v6.`io.grpc.internal.MessageDeframer.j` @type ^`int`;
  #L37a96e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L37a974.  v2:= temp @kind object;
  #L37a976.  v4[v1]:= v2 @kind object;
  #L37a97a.  v1:= "gRPC message exceeds maximum size %d: %d" @kind object;
  #L37a97e.  call temp:= `format`(v3, v1, v4) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L37a984.  v1:= temp @kind object;
  #L37a986.  call temp:= `r`(v0, v1) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L37a98c.  v0:= temp @kind object;
  #L37a98e.  call temp:= `d`(v0) @signature `Lio/grpc/Status;.d:()Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L37a994.  v0:= temp @kind object;
  #L37a996.  throw v0;
  #L37a998.  v0:= `@@io.grpc.Status.t` @type ^`io.grpc.Status` @kind object;
  #L37a99c.  v1:= "gRPC frame header malformed: reserved bits not zero" @kind object;
  #L37a9a0.  call temp:= `r`(v0, v1) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L37a9a6.  v0:= temp @kind object;
  #L37a9a8.  call temp:= `d`(v0) @signature `Lio/grpc/Status;.d:()Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L37a9ae.  v0:= temp @kind object;
  #L37a9b0.  throw v0;
}
procedure `boolean` `a0`(`io.grpc.internal.MessageDeframer` v8 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.a0:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L37a1d4.  v0:= 0I;
  #L37a1d6.  v1:= v8.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a1da.  if v1 != 0 then goto L37a1ec;
  #L37a1de.  v1:= new `io.grpc.internal.r`;
  #L37a1e2.  call `<init>`(v1) @signature `Lio/grpc/internal/r;.<init>:()V` @kind direct;
  #L37a1e8.  v8.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` := v1 @kind object;
  #L37a1ec.  v1:= 0I;
  #L37a1ee.  v2:= 0I;
  #L37a1f0.  v3:= v8.`io.grpc.internal.MessageDeframer.j` @type ^`int`;
  #L37a1f4.  v4:= v8.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a1f8.  call temp:= `d`(v4) @signature `Lio/grpc/internal/r;.d:()I` @kind virtual;
  #L37a1fe.  v4:= temp;
  #L37a200.  v3:= v3 - v4 @kind int;
  #L37a202.  if v3 <= 0 then goto L37a3a8;
  #L37a206.  v4:= v8.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a20a.  if v4 == 0 then goto L37a316;
  #L37a20e.  v4:= v8.`io.grpc.internal.MessageDeframer.g` @type ^`byte`[] @kind object;
  #L37a212.  if v4 == 0 then goto L37a220;
  #L37a216.  v5:= v8.`io.grpc.internal.MessageDeframer.h` @type ^`int`;
  #L37a21a.  v4:= length @variable v4;
  #L37a21c.  if v5 != v4 then goto L37a238;
  #L37a220.  v4:= 2097152I;
  #L37a224.  call temp:= `min`(v3, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L37a22a.  v4:= temp;
  #L37a22c.  v4:= new `byte`[v4];
  #L37a230.  v8.`io.grpc.internal.MessageDeframer.g` @type ^`byte`[] := v4 @kind object;
  #L37a234.  v8.`io.grpc.internal.MessageDeframer.h` @type ^`int` := v0;
  #L37a238.  v4:= v8.`io.grpc.internal.MessageDeframer.g` @type ^`byte`[] @kind object;
  #L37a23c.  v4:= length @variable v4;
  #L37a23e.  v5:= v8.`io.grpc.internal.MessageDeframer.h` @type ^`int`;
  #L37a242.  v4:= v4 - v5 @kind int;
  #L37a244.  call temp:= `min`(v3, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L37a24a.  v3:= temp;
  #L37a24c.  v4:= v8.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a250.  v5:= v8.`io.grpc.internal.MessageDeframer.g` @type ^`byte`[] @kind object;
  #L37a254.  v6:= v8.`io.grpc.internal.MessageDeframer.h` @type ^`int`;
  #L37a258.  call temp:= `b0`(v4, v5, v6, v3) @signature `Lio/grpc/internal/GzipInflatingBuffer;.b0:([BII)I` @kind virtual;
  #L37a25e.  v3:= temp;
  #L37a260.  v4:= v8.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a264.  call temp:= `X`(v4) @signature `Lio/grpc/internal/GzipInflatingBuffer;.X:()I` @kind virtual;
  #L37a26a.  v4:= temp;
  #L37a26c.  v1:= v1 + v4 @kind int;
  #L37a26e.  v4:= v8.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a272.  call temp:= `Y`(v4) @signature `Lio/grpc/internal/GzipInflatingBuffer;.Y:()I` @kind virtual;
  #L37a278.  v4:= temp;
  #L37a27a.  v2:= v2 + v4 @kind int;
  #L37a27c.  if v3 != 0 then goto L37a2d2;
  #L37a280.  if v1 <= 0 then goto L37a2d0;
  #L37a284.  v3:= v8.`io.grpc.internal.MessageDeframer.a` @type ^`io.grpc.internal.MessageDeframer$b` @kind object;
  #L37a288.  call `d`(v3, v1) @signature `Lio/grpc/internal/MessageDeframer$b;.d:(I)V` @kind interface;
  #L37a28e.  v3:= v8.`io.grpc.internal.MessageDeframer.i` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a292.  v4:= `@@io.grpc.internal.MessageDeframer$State.b` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a296.  if v3 != v4 then goto L37a2d0;
  #L37a29a.  v3:= v8.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a29e.  if v3 == 0 then goto L37a2ba;
  #L37a2a2.  v1:= v8.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a2a6.  v3:= (`long`) v2 @kind i2l;
  #L37a2a8.  call `g`(v1, v3) @signature `Lio/grpc/internal/z1;.g:(J)V` @kind virtual;
  #L37a2ae.  v1:= v8.`io.grpc.internal.MessageDeframer.r` @type ^`int`;
  #L37a2b2.  v1:= v1 + v2 @kind int;
  #L37a2b4.  v8.`io.grpc.internal.MessageDeframer.r` @type ^`int` := v1;
  #L37a2b8.  goto L37a2d0;
  #L37a2ba.  v2:= v8.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a2be.  v3:= (`long`) v1 @kind i2l;
  #L37a2c0.  call `g`(v2, v3) @signature `Lio/grpc/internal/z1;.g:(J)V` @kind virtual;
  #L37a2c6.  v2:= v8.`io.grpc.internal.MessageDeframer.r` @type ^`int`;
  #L37a2ca.  v2:= v2 + v1 @kind int;
  #L37a2cc.  v8.`io.grpc.internal.MessageDeframer.r` @type ^`int` := v2;
  #L37a2d0.  return v0;
  #L37a2d2.  v4:= v8.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a2d6.  v5:= v8.`io.grpc.internal.MessageDeframer.g` @type ^`byte`[] @kind object;
  #L37a2da.  v6:= v8.`io.grpc.internal.MessageDeframer.h` @type ^`int`;
  #L37a2de.  call temp:= `f`(v5, v6, v3) @signature `Lio/grpc/internal/n1;.f:([BII)Lio/grpc/internal/m1;` @kind static;
  #L37a2e4.  v5:= temp @kind object;
  #L37a2e6.  call `h`(v4, v5) @signature `Lio/grpc/internal/r;.h:(Lio/grpc/internal/m1;)V` @kind virtual;
  #L37a2ec.  v4:= v8.`io.grpc.internal.MessageDeframer.h` @type ^`int`;
  #L37a2f0.  v4:= v4 + v3 @kind int;
  #L37a2f2.  v8.`io.grpc.internal.MessageDeframer.h` @type ^`int` := v4;
  #L37a2f6.  goto L37a1f0;
  #L37a2fa.  v0:= Exception @type ^`java.util.zip.DataFormatException` @kind object;
  #L37a2fc.  v3:= new `java.lang.RuntimeException`;
  #L37a300.  call `<init>`(v3, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L37a306.  throw v3;
  #L37a308.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L37a30a.  v3:= new `java.lang.RuntimeException`;
  #L37a30e.  call `<init>`(v3, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L37a314.  throw v3;
  #L37a316.  v4:= v8.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` @kind object;
  #L37a31a.  call temp:= `d`(v4) @signature `Lio/grpc/internal/r;.d:()I` @kind virtual;
  #L37a320.  v4:= temp;
  #L37a322.  if v4 != 0 then goto L37a378;
  #L37a326.  if v1 <= 0 then goto L37a376;
  #L37a32a.  v3:= v8.`io.grpc.internal.MessageDeframer.a` @type ^`io.grpc.internal.MessageDeframer$b` @kind object;
  #L37a32e.  call `d`(v3, v1) @signature `Lio/grpc/internal/MessageDeframer$b;.d:(I)V` @kind interface;
  #L37a334.  v3:= v8.`io.grpc.internal.MessageDeframer.i` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a338.  v4:= `@@io.grpc.internal.MessageDeframer$State.b` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a33c.  if v3 != v4 then goto L37a376;
  #L37a340.  v3:= v8.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a344.  if v3 == 0 then goto L37a360;
  #L37a348.  v1:= v8.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a34c.  v3:= (`long`) v2 @kind i2l;
  #L37a34e.  call `g`(v1, v3) @signature `Lio/grpc/internal/z1;.g:(J)V` @kind virtual;
  #L37a354.  v1:= v8.`io.grpc.internal.MessageDeframer.r` @type ^`int`;
  #L37a358.  v1:= v1 + v2 @kind int;
  #L37a35a.  v8.`io.grpc.internal.MessageDeframer.r` @type ^`int` := v1;
  #L37a35e.  goto L37a376;
  #L37a360.  v2:= v8.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a364.  v3:= (`long`) v1 @kind i2l;
  #L37a366.  call `g`(v2, v3) @signature `Lio/grpc/internal/z1;.g:(J)V` @kind virtual;
  #L37a36c.  v2:= v8.`io.grpc.internal.MessageDeframer.r` @type ^`int`;
  #L37a370.  v2:= v2 + v1 @kind int;
  #L37a372.  v8.`io.grpc.internal.MessageDeframer.r` @type ^`int` := v2;
  #L37a376.  return v0;
  #L37a378.  v4:= v8.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` @kind object;
  #L37a37c.  call temp:= `d`(v4) @signature `Lio/grpc/internal/r;.d:()I` @kind virtual;
  #L37a382.  v4:= temp;
  #L37a384.  call temp:= `min`(v3, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L37a38a.  v3:= temp;
  #L37a38c.  v1:= v1 + v3 @kind int;
  #L37a38e.  v4:= v8.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a392.  v5:= v8.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` @kind object;
  #L37a396.  call temp:= `l`(v5, v3) @signature `Lio/grpc/internal/r;.l:(I)Lio/grpc/internal/m1;` @kind virtual;
  #L37a39c.  v3:= temp @kind object;
  #L37a39e.  call `h`(v4, v3) @signature `Lio/grpc/internal/r;.h:(Lio/grpc/internal/m1;)V` @kind virtual;
  #L37a3a4.  goto L37a1f0;
  #L37a3a8.  v0:= 1I;
  #L37a3aa.  if v1 <= 0 then goto L37a3fa;
  #L37a3ae.  v3:= v8.`io.grpc.internal.MessageDeframer.a` @type ^`io.grpc.internal.MessageDeframer$b` @kind object;
  #L37a3b2.  call `d`(v3, v1) @signature `Lio/grpc/internal/MessageDeframer$b;.d:(I)V` @kind interface;
  #L37a3b8.  v3:= v8.`io.grpc.internal.MessageDeframer.i` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a3bc.  v4:= `@@io.grpc.internal.MessageDeframer$State.b` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a3c0.  if v3 != v4 then goto L37a3fa;
  #L37a3c4.  v3:= v8.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a3c8.  if v3 == 0 then goto L37a3e4;
  #L37a3cc.  v1:= v8.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a3d0.  v3:= (`long`) v2 @kind i2l;
  #L37a3d2.  call `g`(v1, v3) @signature `Lio/grpc/internal/z1;.g:(J)V` @kind virtual;
  #L37a3d8.  v1:= v8.`io.grpc.internal.MessageDeframer.r` @type ^`int`;
  #L37a3dc.  v1:= v1 + v2 @kind int;
  #L37a3de.  v8.`io.grpc.internal.MessageDeframer.r` @type ^`int` := v1;
  #L37a3e2.  goto L37a3fa;
  #L37a3e4.  v2:= v8.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a3e8.  v3:= (`long`) v1 @kind i2l;
  #L37a3ea.  call `g`(v2, v3) @signature `Lio/grpc/internal/z1;.g:(J)V` @kind virtual;
  #L37a3f0.  v2:= v8.`io.grpc.internal.MessageDeframer.r` @type ^`int`;
  #L37a3f4.  v2:= v2 + v1 @kind int;
  #L37a3f6.  v8.`io.grpc.internal.MessageDeframer.r` @type ^`int` := v2;
  #L37a3fa.  return v0;
  #L37a3fc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37a3fe.  v7:= v1;
  #L37a400.  v1:= v0 @kind object;
  #L37a402.  v0:= v7;
  #L37a404.  goto L37a40a;
  #L37a406.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37a408.  v2:= 0I;
  #L37a40a.  if v0 <= 0 then goto L37a45a;
  #L37a40e.  v3:= v8.`io.grpc.internal.MessageDeframer.a` @type ^`io.grpc.internal.MessageDeframer$b` @kind object;
  #L37a412.  call `d`(v3, v0) @signature `Lio/grpc/internal/MessageDeframer$b;.d:(I)V` @kind interface;
  #L37a418.  v3:= v8.`io.grpc.internal.MessageDeframer.i` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a41c.  v4:= `@@io.grpc.internal.MessageDeframer$State.b` @type ^`io.grpc.internal.MessageDeframer$State` @kind object;
  #L37a420.  if v3 != v4 then goto L37a45a;
  #L37a424.  v3:= v8.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a428.  if v3 == 0 then goto L37a444;
  #L37a42c.  v0:= v8.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a430.  v3:= (`long`) v2 @kind i2l;
  #L37a432.  call `g`(v0, v3) @signature `Lio/grpc/internal/z1;.g:(J)V` @kind virtual;
  #L37a438.  v0:= v8.`io.grpc.internal.MessageDeframer.r` @type ^`int`;
  #L37a43c.  v0:= v0 + v2 @kind int;
  #L37a43e.  v8.`io.grpc.internal.MessageDeframer.r` @type ^`int` := v0;
  #L37a442.  goto L37a45a;
  #L37a444.  v2:= v8.`io.grpc.internal.MessageDeframer.c` @type ^`io.grpc.internal.z1` @kind object;
  #L37a448.  v3:= (`long`) v0 @kind i2l;
  #L37a44a.  call `g`(v2, v3) @signature `Lio/grpc/internal/z1;.g:(J)V` @kind virtual;
  #L37a450.  v2:= v8.`io.grpc.internal.MessageDeframer.r` @type ^`int`;
  #L37a454.  v2:= v2 + v0 @kind int;
  #L37a456.  v8.`io.grpc.internal.MessageDeframer.r` @type ^`int` := v2;
  #L37a45a.  throw v1;
  catch `java.lang.Throwable` @[L37a1d6..L37a1ec] goto L37a406;
  catch `java.lang.Throwable` @[L37a1f0..L37a20a] goto L37a3fc;
  catch `java.io.IOException` @[L37a20e..L37a27a] goto L37a308;
  catch `java.util.zip.DataFormatException` @[L37a20e..L37a27a] goto L37a2fa;
  catch `java.lang.Throwable` @[L37a20e..L37a27a] goto L37a3fc;
  catch `java.io.IOException` @[L37a2d2..L37a2f6] goto L37a308;
  catch `java.util.zip.DataFormatException` @[L37a2d2..L37a2f6] goto L37a2fa;
  catch `java.lang.Throwable` @[L37a2d2..L37a2f6] goto L37a3fc;
  catch `java.lang.Throwable` @[L37a2fc..L37a322] goto L37a3fc;
  catch `java.lang.Throwable` @[L37a378..L37a3a4] goto L37a3fc;
}
procedure `void` `K`(`io.grpc.internal.MessageDeframer` v2 @kind this, `io.grpc.s` v3 @kind object) @signature `Lio/grpc/internal/MessageDeframer;.K:(Lio/grpc/s;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37aa0c.  v0:= v2.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37aa10.  if v0 != 0 then goto L37aa18;
  #L37aa14.  v0:= 1I;
  #L37aa16.  goto L37aa1a;
  #L37aa18.  v0:= 0I;
  #L37aa1a.  v1:= "Already set full stream decompressor" @kind object;
  #L37aa1e.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L37aa24.  v0:= "Can't pass an empty decompressor" @kind object;
  #L37aa28.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37aa2e.  v3:= temp @kind object;
  #L37aa30.  v3:= (`io.grpc.s`) v3 @kind object;
  #L37aa34.  v2.`io.grpc.internal.MessageDeframer.e` @type ^`io.grpc.s` := v3 @kind object;
  #L37aa38.  return @kind void;
}
procedure `void` `R`(`io.grpc.internal.MessageDeframer` v2 @kind this, `io.grpc.internal.m1` v3 @kind object) @signature `Lio/grpc/internal/MessageDeframer;.R:(Lio/grpc/internal/m1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37a6f8.  v0:= "data" @kind object;
  #L37a6fc.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37a702.  v0:= 1I;
  #L37a704.  call temp:= `W`(v2) @signature `Lio/grpc/internal/MessageDeframer;.W:()Z` @kind direct;
  #L37a70a.  v1:= temp;
  #L37a70c.  if v1 != 0 then goto L37a732;
  #L37a710.  v1:= v2.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a714.  if v1 == 0 then goto L37a720;
  #L37a718.  call `V`(v1, v3) @signature `Lio/grpc/internal/GzipInflatingBuffer;.V:(Lio/grpc/internal/m1;)V` @kind virtual;
  #L37a71e.  goto L37a72a;
  #L37a720.  v1:= v2.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` @kind object;
  #L37a724.  call `h`(v1, v3) @signature `Lio/grpc/internal/r;.h:(Lio/grpc/internal/m1;)V` @kind virtual;
  #L37a72a.  v0:= 0I;
  #L37a72c.  call `T`(v2) @signature `Lio/grpc/internal/MessageDeframer;.T:()V` @kind direct;
  #L37a732.  if v0 == 0 then goto L37a73c;
  #L37a736.  call `close`(v3) @signature `Lio/grpc/internal/m1;.close:()V` @kind interface;
  #L37a73c.  return @kind void;
  #L37a73e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37a740.  if v0 == 0 then goto L37a74a;
  #L37a744.  call `close`(v3) @signature `Lio/grpc/internal/m1;.close:()V` @kind interface;
  #L37a74a.  throw v1;
  catch `java.lang.Throwable` @[L37a704..L37a732] goto L37a73e;
}
procedure `void` `b0`(`io.grpc.internal.MessageDeframer` v4 @kind this, `io.grpc.internal.GzipInflatingBuffer` v5 @kind object) @signature `Lio/grpc/internal/MessageDeframer;.b0:(Lio/grpc/internal/GzipInflatingBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L37aa4c.  v0:= v4.`io.grpc.internal.MessageDeframer.e` @type ^`io.grpc.s` @kind object;
  #L37aa50.  v1:= `@@io.grpc.k$b.a` @type ^`io.grpc.k` @kind object;
  #L37aa54.  v2:= 1I;
  #L37aa56.  v3:= 0I;
  #L37aa58.  if v0 != v1 then goto L37aa60;
  #L37aa5c.  v0:= 1I;
  #L37aa5e.  goto L37aa62;
  #L37aa60.  v0:= 0I;
  #L37aa62.  v1:= "per-message decompressor already set" @kind object;
  #L37aa66.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L37aa6c.  v0:= v4.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37aa70.  if v0 != 0 then goto L37aa76;
  #L37aa74.  goto L37aa78;
  #L37aa76.  v2:= 0I;
  #L37aa78.  v0:= "full stream decompressor already set" @kind object;
  #L37aa7c.  call `checkState`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L37aa82.  v0:= "Can't pass a null full stream decompressor" @kind object;
  #L37aa86.  call temp:= `checkNotNull`(v5, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37aa8c.  v5:= temp @kind object;
  #L37aa8e.  v5:= (`io.grpc.internal.GzipInflatingBuffer`) v5 @kind object;
  #L37aa92.  v4.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` := v5 @kind object;
  #L37aa96.  v5:= 0I;
  #L37aa98.  v4.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` := v5 @kind object;
  #L37aa9c.  return @kind void;
}
procedure `void` `c0`(`io.grpc.internal.MessageDeframer` v0 @kind this, `io.grpc.internal.MessageDeframer$b` v1 @kind object) @signature `Lio/grpc/internal/MessageDeframer;.c0:(Lio/grpc/internal/MessageDeframer$b;)V` @AccessFlag  {
    temp;

  #L37aab0.  v0.`io.grpc.internal.MessageDeframer.a` @type ^`io.grpc.internal.MessageDeframer$b` := v1 @kind object;
  #L37aab4.  return @kind void;
}
procedure `void` `close`(`io.grpc.internal.MessageDeframer` v5 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L37a604.  call temp:= `isClosed`(v5) @signature `Lio/grpc/internal/MessageDeframer;.isClosed:()Z` @kind virtual;
  #L37a60a.  v0:= temp;
  #L37a60c.  if v0 == 0 then goto L37a612;
  #L37a610.  return @kind void;
  #L37a612.  v0:= v5.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a616.  v1:= 1I;
  #L37a618.  v2:= 0I;
  #L37a61a.  if v0 == 0 then goto L37a62e;
  #L37a61e.  call temp:= `d`(v0) @signature `Lio/grpc/internal/r;.d:()I` @kind virtual;
  #L37a624.  v0:= temp;
  #L37a626.  if v0 <= 0 then goto L37a62e;
  #L37a62a.  v0:= 1I;
  #L37a62c.  goto L37a630;
  #L37a62e.  v0:= 0I;
  #L37a630.  v3:= 0I;
  #L37a632.  v4:= v5.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a636.  if v4 == 0 then goto L37a65a;
  #L37a63a.  if v0 != 0 then goto L37a64e;
  #L37a63e.  call temp:= `Z`(v4) @signature `Lio/grpc/internal/GzipInflatingBuffer;.Z:()Z` @kind virtual;
  #L37a644.  v0:= temp;
  #L37a646.  if v0 == 0 then goto L37a64c;
  #L37a64a.  goto L37a64e;
  #L37a64c.  v1:= 0I;
  #L37a64e.  v0:= v5.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a652.  call `close`(v0) @signature `Lio/grpc/internal/GzipInflatingBuffer;.close:()V` @kind virtual;
  #L37a658.  v0:= v1;
  #L37a65a.  v1:= v5.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` @kind object;
  #L37a65e.  if v1 == 0 then goto L37a668;
  #L37a662.  call `close`(v1) @signature `Lio/grpc/internal/r;.close:()V` @kind virtual;
  #L37a668.  v1:= v5.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` @kind object;
  #L37a66c.  if v1 == 0 then goto L37a676;
  #L37a670.  call `close`(v1) @signature `Lio/grpc/internal/r;.close:()V` @kind virtual;
  #L37a676.  v5.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` := v3 @kind object;
  #L37a67a.  v5.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` := v3 @kind object;
  #L37a67e.  v5.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` := v3 @kind object;
  #L37a682.  v1:= v5.`io.grpc.internal.MessageDeframer.a` @type ^`io.grpc.internal.MessageDeframer$b` @kind object;
  #L37a686.  call `c`(v1, v0) @signature `Lio/grpc/internal/MessageDeframer$b;.c:(Z)V` @kind interface;
  #L37a68c.  return @kind void;
  #L37a68e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37a690.  v5.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` := v3 @kind object;
  #L37a694.  v5.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` := v3 @kind object;
  #L37a698.  v5.`io.grpc.internal.MessageDeframer.l` @type ^`io.grpc.internal.r` := v3 @kind object;
  #L37a69c.  throw v0;
  catch `java.lang.Throwable` @[L37a632..L37a676] goto L37a68e;
}
procedure `void` `d0`(`io.grpc.internal.MessageDeframer` v1 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.d0:()V` @AccessFlag  {
    temp;
    v0;

  #L37aae0.  v0:= 1I;
  #L37aae2.  v1.`io.grpc.internal.MessageDeframer.t` @type ^`boolean` := v0 @kind boolean;
  #L37aae6.  return @kind void;
}
procedure `void` `g`(`io.grpc.internal.MessageDeframer` v4 @kind this, `int` v5 ) @signature `Lio/grpc/internal/MessageDeframer;.g:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L37a9c4.  if v5 <= 0 then goto L37a9cc;
  #L37a9c8.  v0:= 1I;
  #L37a9ca.  goto L37a9ce;
  #L37a9cc.  v0:= 0I;
  #L37a9ce.  v1:= "numMessages must be > 0" @kind object;
  #L37a9d2.  call `checkArgument`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L37a9d8.  call temp:= `isClosed`(v4) @signature `Lio/grpc/internal/MessageDeframer;.isClosed:()Z` @kind virtual;
  #L37a9de.  v0:= temp;
  #L37a9e0.  if v0 == 0 then goto L37a9e6;
  #L37a9e4.  return @kind void;
  #L37a9e6.  v0:= v4.`io.grpc.internal.MessageDeframer.n` @type ^`long` @kind wide;
  #L37a9ea.  v2:= (`long`) v5 @kind i2l;
  #L37a9ec.  v0:= v0 + v2 @kind long;
  #L37a9ee.  v4.`io.grpc.internal.MessageDeframer.n` @type ^`long` := v0 @kind wide;
  #L37a9f2.  call `T`(v4) @signature `Lio/grpc/internal/MessageDeframer;.T:()V` @kind direct;
  #L37a9f8.  return @kind void;
}
procedure `void` `h`(`io.grpc.internal.MessageDeframer` v0 @kind this, `int` v1 ) @signature `Lio/grpc/internal/MessageDeframer;.h:(I)V` @AccessFlag PUBLIC {
    temp;

  #L37aac8.  v0.`io.grpc.internal.MessageDeframer.b` @type ^`int` := v1;
  #L37aacc.  return @kind void;
}
procedure `boolean` `isClosed`(`io.grpc.internal.MessageDeframer` v1 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37a140.  v0:= v1.`io.grpc.internal.MessageDeframer.m` @type ^`io.grpc.internal.r` @kind object;
  #L37a144.  if v0 != 0 then goto L37a154;
  #L37a148.  v0:= v1.`io.grpc.internal.MessageDeframer.f` @type ^`io.grpc.internal.GzipInflatingBuffer` @kind object;
  #L37a14c.  if v0 != 0 then goto L37a154;
  #L37a150.  v0:= 1I;
  #L37a152.  goto L37a156;
  #L37a154.  v0:= 0I;
  #L37a156.  return v0;
}
procedure `void` `s`(`io.grpc.internal.MessageDeframer` v1 @kind this) @signature `Lio/grpc/internal/MessageDeframer;.s:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37a6bc.  call temp:= `isClosed`(v1) @signature `Lio/grpc/internal/MessageDeframer;.isClosed:()Z` @kind virtual;
  #L37a6c2.  v0:= temp;
  #L37a6c4.  if v0 == 0 then goto L37a6ca;
  #L37a6c8.  return @kind void;
  #L37a6ca.  call temp:= `X`(v1) @signature `Lio/grpc/internal/MessageDeframer;.X:()Z` @kind direct;
  #L37a6d0.  v0:= temp;
  #L37a6d2.  if v0 == 0 then goto L37a6de;
  #L37a6d6.  call `close`(v1) @signature `Lio/grpc/internal/MessageDeframer;.close:()V` @kind virtual;
  #L37a6dc.  goto L37a6e4;
  #L37a6de.  v0:= 1I;
  #L37a6e0.  v1.`io.grpc.internal.MessageDeframer.s` @type ^`boolean` := v0 @kind boolean;
  #L37a6e4.  return @kind void;
}
