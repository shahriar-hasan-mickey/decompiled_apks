record `io.grpc.internal.a1` @kind class @AccessFlag FINAL extends `io.grpc.internal.i0` @kind class {
  `io.grpc.internal.a1$a` `io.grpc.internal.a1.b` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ref.ReferenceQueue` `@@io.grpc.internal.a1.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap` `@@io.grpc.internal.a1.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@io.grpc.internal.a1.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/a1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3793b0.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L3793b4.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L3793ba.  `@@io.grpc.internal.a1.c` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L3793be.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3793c2.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3793c8.  `@@io.grpc.internal.a1.d` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L3793cc.  v0:= constclass @type ^`io.grpc.internal.a1` @kind object;
  #L3793d0.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3793d6.  v0:= temp @kind object;
  #L3793d8.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3793de.  v0:= temp @kind object;
  #L3793e0.  `@@io.grpc.internal.a1.e` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3793e4.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.a1` v2 @kind this, `io.grpc.q0` v3 @kind object) @signature `Lio/grpc/internal/a1;.<init>:(Lio/grpc/q0;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3793f8.  v0:= `@@io.grpc.internal.a1.c` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L3793fc.  v1:= `@@io.grpc.internal.a1.d` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L379400.  call `<init>`(v2, v3, v0, v1) @signature `Lio/grpc/internal/a1;.<init>:(Lio/grpc/q0;Ljava/lang/ref/ReferenceQueue;Ljava/util/concurrent/ConcurrentMap;)V` @kind direct;
  #L379406.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.a1` v1 @kind this, `io.grpc.q0` v2 @kind object, `java.lang.ref.ReferenceQueue` v3 @kind object, `java.util.concurrent.ConcurrentMap` v4 @kind object) @signature `Lio/grpc/internal/a1;.<init>:(Lio/grpc/q0;Ljava/lang/ref/ReferenceQueue;Ljava/util/concurrent/ConcurrentMap;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L379418.  call `<init>`(v1, v2) @signature `Lio/grpc/internal/i0;.<init>:(Lio/grpc/q0;)V` @kind direct;
  #L37941e.  v0:= new `io.grpc.internal.a1$a`;
  #L379422.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/grpc/internal/a1$a;.<init>:(Lio/grpc/internal/a1;Lio/grpc/q0;Ljava/lang/ref/ReferenceQueue;Ljava/util/concurrent/ConcurrentMap;)V` @kind direct;
  #L379428.  v1.`io.grpc.internal.a1.b` @type ^`io.grpc.internal.a1$a` := v0 @kind object;
  #L37942c.  return @kind void;
}
procedure `java.util.logging.Logger` `o`() @signature `Lio/grpc/internal/a1;.o:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L379398.  v0:= `@@io.grpc.internal.a1.e` @type ^`java.util.logging.Logger` @kind object;
  #L37939c.  return v0 @kind object;
}
procedure `io.grpc.q0` `m`(`io.grpc.internal.a1` v1 @kind this) @signature `Lio/grpc/internal/a1;.m:()Lio/grpc/q0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L379350.  v0:= v1.`io.grpc.internal.a1.b` @type ^`io.grpc.internal.a1$a` @kind object;
  #L379354.  call `a`(v0) @signature `Lio/grpc/internal/a1$a;.a:(Lio/grpc/internal/a1$a;)V` @kind static;
  #L37935a.  call temp:= `m`(v1) @signature `Lio/grpc/internal/i0;.m:()Lio/grpc/q0;` @kind super;
  #L379360.  v0:= temp @kind object;
  #L379362.  return v0 @kind object;
}
procedure `io.grpc.q0` `n`(`io.grpc.internal.a1` v1 @kind this) @signature `Lio/grpc/internal/a1;.n:()Lio/grpc/q0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L379374.  v0:= v1.`io.grpc.internal.a1.b` @type ^`io.grpc.internal.a1$a` @kind object;
  #L379378.  call `a`(v0) @signature `Lio/grpc/internal/a1$a;.a:(Lio/grpc/internal/a1$a;)V` @kind static;
  #L37937e.  call temp:= `n`(v1) @signature `Lio/grpc/internal/i0;.n:()Lio/grpc/q0;` @kind super;
  #L379384.  v0:= temp @kind object;
  #L379386.  return v0 @kind object;
}
