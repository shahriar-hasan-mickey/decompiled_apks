record `io.grpc.internal.ChannelTracer` @kind class @AccessFlag FINAL {
  `java.lang.Object` `io.grpc.internal.ChannelTracer.a` @AccessFlag PRIVATE_FINAL;
  `io.grpc.f0` `io.grpc.internal.ChannelTracer.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Collection` `io.grpc.internal.ChannelTracer.c` @AccessFlag PRIVATE_FINAL;
  `long` `io.grpc.internal.ChannelTracer.d` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.internal.ChannelTracer.e` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@io.grpc.internal.ChannelTracer.f` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/ChannelTracer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L36805c.  v0:= constclass @type ^`io.grpc.ChannelLogger` @kind object;
  #L368060.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L368066.  v0:= temp @kind object;
  #L368068.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L36806e.  v0:= temp @kind object;
  #L368070.  `@@io.grpc.internal.ChannelTracer.f` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L368074.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.ChannelTracer` v1 @kind this, `io.grpc.f0` v2 @kind object, `int` v3 , `long` v4 , `java.lang.String` v6 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.<init>:(Lio/grpc/f0;IJLjava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L368088.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36808e.  v0:= new `java.lang.Object`;
  #L368092.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L368098.  v1.`io.grpc.internal.ChannelTracer.a` @type ^`java.lang.Object` := v0 @kind object;
  #L36809c.  v0:= "description" @kind object;
  #L3680a0.  call temp:= `checkNotNull`(v6, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3680a6.  v0:= "logId" @kind object;
  #L3680aa.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3680b0.  v2:= temp @kind object;
  #L3680b2.  v2:= (`io.grpc.f0`) v2 @kind object;
  #L3680b6.  v1.`io.grpc.internal.ChannelTracer.b` @type ^`io.grpc.f0` := v2 @kind object;
  #L3680ba.  if v3 <= 0 then goto L3680ce;
  #L3680be.  v2:= new `io.grpc.internal.ChannelTracer$1`;
  #L3680c2.  call `<init>`(v2, v1, v3) @signature `Lio/grpc/internal/ChannelTracer$1;.<init>:(Lio/grpc/internal/ChannelTracer;I)V` @kind direct;
  #L3680c8.  v1.`io.grpc.internal.ChannelTracer.c` @type ^`java.util.Collection` := v2 @kind object;
  #L3680cc.  goto L3680d4;
  #L3680ce.  v2:= 0I;
  #L3680d0.  v1.`io.grpc.internal.ChannelTracer.c` @type ^`java.util.Collection` := v2 @kind object;
  #L3680d4.  v1.`io.grpc.internal.ChannelTracer.d` @type ^`long` := v4 @kind wide;
  #L3680d8.  v2:= new `io.grpc.InternalChannelz$ChannelTrace$Event$a`;
  #L3680dc.  call `<init>`(v2) @signature `Lio/grpc/InternalChannelz$ChannelTrace$Event$a;.<init>:()V` @kind direct;
  #L3680e2.  v3:= new `java.lang.StringBuilder`;
  #L3680e6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3680ec.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3680f2.  v6:= " created" @kind object;
  #L3680f6.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3680fc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L368102.  v3:= temp @kind object;
  #L368104.  call temp:= `b`(v2, v3) @signature `Lio/grpc/InternalChannelz$ChannelTrace$Event$a;.b:(Ljava/lang/String;)Lio/grpc/InternalChannelz$ChannelTrace$Event$a;` @kind virtual;
  #L36810a.  v2:= temp @kind object;
  #L36810c.  v3:= `@@io.grpc.InternalChannelz$ChannelTrace$Event$Severity.b` @type ^`io.grpc.InternalChannelz$ChannelTrace$Event$Severity` @kind object;
  #L368110.  call temp:= `c`(v2, v3) @signature `Lio/grpc/InternalChannelz$ChannelTrace$Event$a;.c:(Lio/grpc/InternalChannelz$ChannelTrace$Event$Severity;)Lio/grpc/InternalChannelz$ChannelTrace$Event$a;` @kind virtual;
  #L368116.  v2:= temp @kind object;
  #L368118.  call temp:= `e`(v2, v4) @signature `Lio/grpc/InternalChannelz$ChannelTrace$Event$a;.e:(J)Lio/grpc/InternalChannelz$ChannelTrace$Event$a;` @kind virtual;
  #L36811e.  v2:= temp @kind object;
  #L368120.  call temp:= `a`(v2) @signature `Lio/grpc/InternalChannelz$ChannelTrace$Event$a;.a:()Lio/grpc/InternalChannelz$ChannelTrace$Event;` @kind virtual;
  #L368126.  v2:= temp @kind object;
  #L368128.  call `e`(v1, v2) @signature `Lio/grpc/internal/ChannelTracer;.e:(Lio/grpc/InternalChannelz$ChannelTrace$Event;)V` @kind virtual;
  #L36812e.  return @kind void;
}
procedure `int` `a`(`io.grpc.internal.ChannelTracer` v2 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.a:(Lio/grpc/internal/ChannelTracer;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L368024.  v0:= v2.`io.grpc.internal.ChannelTracer.e` @type ^`int`;
  #L368028.  v1:= v0 + 1;
  #L36802c.  v2.`io.grpc.internal.ChannelTracer.e` @type ^`int` := v1;
  #L368030.  return v0;
}
procedure `void` `d`(`io.grpc.f0` v4 @kind object, `java.util.logging.Level` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.d:(Lio/grpc/f0;Ljava/util/logging/Level;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L368140.  v0:= `@@io.grpc.internal.ChannelTracer.f` @type ^`java.util.logging.Logger` @kind object;
  #L368144.  call temp:= `isLoggable`(v0, v5) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L36814a.  v1:= temp;
  #L36814c.  if v1 == 0 then goto L3681b8;
  #L368150.  v1:= new `java.util.logging.LogRecord`;
  #L368154.  v2:= new `java.lang.StringBuilder`;
  #L368158.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36815e.  v3:= "[" @kind object;
  #L368162.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368168.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36816e.  v4:= "] " @kind object;
  #L368172.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368178.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36817e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L368184.  v4:= temp @kind object;
  #L368186.  call `<init>`(v1, v5, v4) @signature `Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind direct;
  #L36818c.  call temp:= `getName`(v0) @signature `Ljava/util/logging/Logger;.getName:()Ljava/lang/String;` @kind virtual;
  #L368192.  v4:= temp @kind object;
  #L368194.  call `setLoggerName`(v1, v4) @signature `Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V` @kind virtual;
  #L36819a.  call temp:= `getName`(v0) @signature `Ljava/util/logging/Logger;.getName:()Ljava/lang/String;` @kind virtual;
  #L3681a0.  v4:= temp @kind object;
  #L3681a2.  call `setSourceClassName`(v1, v4) @signature `Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V` @kind virtual;
  #L3681a8.  v4:= "log" @kind object;
  #L3681ac.  call `setSourceMethodName`(v1, v4) @signature `Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V` @kind virtual;
  #L3681b2.  call `log`(v0, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V` @kind virtual;
  #L3681b8.  return @kind void;
}
procedure `io.grpc.f0` `b`(`io.grpc.internal.ChannelTracer` v1 @kind this) @signature `Lio/grpc/internal/ChannelTracer;.b:()Lio/grpc/f0;` @AccessFlag  {
    temp;
    v0;

  #L368044.  v0:= v1.`io.grpc.internal.ChannelTracer.b` @type ^`io.grpc.f0` @kind object;
  #L368048.  return v0 @kind object;
}
procedure `boolean` `c`(`io.grpc.internal.ChannelTracer` v2 @kind this) @signature `Lio/grpc/internal/ChannelTracer;.c:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L367fe8.  v0:= v2.`io.grpc.internal.ChannelTracer.a` @type ^`java.lang.Object` @kind object;
  #L367fec.  @monitorenter v0
  #L367fee.  v1:= v2.`io.grpc.internal.ChannelTracer.c` @type ^`java.util.Collection` @kind object;
  #L367ff2.  if v1 == 0 then goto L367ffa;
  #L367ff6.  v1:= 1I;
  #L367ff8.  goto L367ffc;
  #L367ffa.  v1:= 0I;
  #L367ffc.  @monitorexit v0
  #L367ffe.  return v1;
  #L368000.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L368002.  @monitorexit v0
  #L368004.  throw v1;
  catch `java.lang.Throwable` @[L367fee..L368004] goto L368000;
}
procedure `void` `e`(`io.grpc.internal.ChannelTracer` v2 @kind this, `io.grpc.InternalChannelz$ChannelTrace$Event` v3 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.e:(Lio/grpc/InternalChannelz$ChannelTrace$Event;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3681cc.  v0:= `@@io.grpc.internal.ChannelTracer$a.a` @type ^`int`[] @kind object;
  #L3681d0.  v1:= v3.`io.grpc.InternalChannelz$ChannelTrace$Event.b` @type ^`io.grpc.InternalChannelz$ChannelTrace$Event$Severity` @kind object;
  #L3681d4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3681da.  v1:= temp;
  #L3681dc.  v0:= v0[v1];
  #L3681e0.  v1:= 1I;
  #L3681e2.  if v0 == v1 then goto L3681f8;
  #L3681e6.  v1:= 2I;
  #L3681e8.  if v0 == v1 then goto L3681f2;
  #L3681ec.  v0:= `@@java.util.logging.Level.FINEST` @type ^`java.util.logging.Level` @kind object;
  #L3681f0.  goto L3681fc;
  #L3681f2.  v0:= `@@java.util.logging.Level.FINER` @type ^`java.util.logging.Level` @kind object;
  #L3681f6.  goto L3681fc;
  #L3681f8.  v0:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L3681fc.  call `f`(v2, v3) @signature `Lio/grpc/internal/ChannelTracer;.f:(Lio/grpc/InternalChannelz$ChannelTrace$Event;)V` @kind virtual;
  #L368202.  v1:= v2.`io.grpc.internal.ChannelTracer.b` @type ^`io.grpc.f0` @kind object;
  #L368206.  v3:= v3.`io.grpc.InternalChannelz$ChannelTrace$Event.a` @type ^`java.lang.String` @kind object;
  #L36820a.  call `d`(v1, v0, v3) @signature `Lio/grpc/internal/ChannelTracer;.d:(Lio/grpc/f0;Ljava/util/logging/Level;Ljava/lang/String;)V` @kind static;
  #L368210.  return @kind void;
}
procedure `void` `f`(`io.grpc.internal.ChannelTracer` v2 @kind this, `io.grpc.InternalChannelz$ChannelTrace$Event` v3 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.f:(Lio/grpc/InternalChannelz$ChannelTrace$Event;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L368224.  v0:= v2.`io.grpc.internal.ChannelTracer.a` @type ^`java.lang.Object` @kind object;
  #L368228.  @monitorenter v0
  #L36822a.  v1:= v2.`io.grpc.internal.ChannelTracer.c` @type ^`java.util.Collection` @kind object;
  #L36822e.  if v1 == 0 then goto L368238;
  #L368232.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L368238.  @monitorexit v0
  #L36823a.  return @kind void;
  #L36823c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36823e.  @monitorexit v0
  #L368240.  throw v3;
  catch `java.lang.Throwable` @[L36822a..L368240] goto L36823c;
}
