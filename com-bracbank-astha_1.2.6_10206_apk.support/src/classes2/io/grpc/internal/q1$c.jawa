record `io.grpc.internal.q1$c` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.Collection` `io.grpc.internal.q1$c.a` @AccessFlag FINAL_SYNTHETIC;
  `io.grpc.internal.q1$c0` `io.grpc.internal.q1$c.b` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.Future` `io.grpc.internal.q1$c.c` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.Future` `io.grpc.internal.q1$c.d` @AccessFlag FINAL_SYNTHETIC;
  `io.grpc.internal.q1` `io.grpc.internal.q1$c.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.q1$c` v0 @kind this, `io.grpc.internal.q1` v1 @kind object, `java.util.Collection` v2 @kind object, `io.grpc.internal.q1$c0` v3 @kind object, `java.util.concurrent.Future` v4 @kind object, `java.util.concurrent.Future` v5 @kind object) @signature `Lio/grpc/internal/q1$c;.<init>:(Lio/grpc/internal/q1;Ljava/util/Collection;Lio/grpc/internal/q1$c0;Ljava/util/concurrent/Future;Ljava/util/concurrent/Future;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37d08c.  v0.`io.grpc.internal.q1$c.e` @type ^`io.grpc.internal.q1` := v1 @kind object;
  #L37d090.  v0.`io.grpc.internal.q1$c.a` @type ^`java.util.Collection` := v2 @kind object;
  #L37d094.  v0.`io.grpc.internal.q1$c.b` @type ^`io.grpc.internal.q1$c0` := v3 @kind object;
  #L37d098.  v0.`io.grpc.internal.q1$c.c` @type ^`java.util.concurrent.Future` := v4 @kind object;
  #L37d09c.  v0.`io.grpc.internal.q1$c.d` @type ^`java.util.concurrent.Future` := v5 @kind object;
  #L37d0a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37d0a6.  return @kind void;
}
procedure `void` `run`(`io.grpc.internal.q1$c` v3 @kind this) @signature `Lio/grpc/internal/q1$c;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L37d0b8.  v0:= v3.`io.grpc.internal.q1$c.a` @type ^`java.util.Collection` @kind object;
  #L37d0bc.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L37d0c2.  v0:= temp @kind object;
  #L37d0c4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L37d0ca.  v1:= temp;
  #L37d0cc.  if v1 == 0 then goto L37d0f8;
  #L37d0d0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L37d0d6.  v1:= temp @kind object;
  #L37d0d8.  v1:= (`io.grpc.internal.q1$c0`) v1 @kind object;
  #L37d0dc.  v2:= v3.`io.grpc.internal.q1$c.b` @type ^`io.grpc.internal.q1$c0` @kind object;
  #L37d0e0.  if v1 == v2 then goto L37d0c4;
  #L37d0e4.  v1:= v1.`io.grpc.internal.q1$c0.a` @type ^`io.grpc.internal.o` @kind object;
  #L37d0e8.  call temp:= `p`() @signature `Lio/grpc/internal/q1;.p:()Lio/grpc/Status;` @kind static;
  #L37d0ee.  v2:= temp @kind object;
  #L37d0f0.  call `b`(v1, v2) @signature `Lio/grpc/internal/o;.b:(Lio/grpc/Status;)V` @kind interface;
  #L37d0f6.  goto L37d0c4;
  #L37d0f8.  v0:= v3.`io.grpc.internal.q1$c.c` @type ^`java.util.concurrent.Future` @kind object;
  #L37d0fc.  v1:= 0I;
  #L37d0fe.  if v0 == 0 then goto L37d108;
  #L37d102.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L37d108.  v0:= v3.`io.grpc.internal.q1$c.d` @type ^`java.util.concurrent.Future` @kind object;
  #L37d10c.  if v0 == 0 then goto L37d116;
  #L37d110.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L37d116.  v0:= v3.`io.grpc.internal.q1$c.e` @type ^`io.grpc.internal.q1` @kind object;
  #L37d11a.  call `h0`(v0) @signature `Lio/grpc/internal/q1;.h0:()V` @kind virtual;
  #L37d120.  return @kind void;
}
