record `io.grpc.internal.u1$c` @kind class @AccessFlag FINAL extends `io.grpc.internal.u1$b` @kind class {
  `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `io.grpc.internal.u1$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.internal.u1$c` v1 @kind this, `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` v2 @kind object) @signature `Lio/grpc/internal/u1$c;.<init>:(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L37fe94.  v0:= 0I;
  #L37fe96.  call `<init>`(v1, v0) @signature `Lio/grpc/internal/u1$b;.<init>:(Lio/grpc/internal/u1$a;)V` @kind direct;
  #L37fe9c.  v1.`io.grpc.internal.u1$c.a` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v2 @kind object;
  #L37fea0.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.u1$c` v0 @kind this, `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` v1 @kind object, `io.grpc.internal.u1$a` v2 @kind object) @signature `Lio/grpc/internal/u1$c;.<init>:(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;Lio/grpc/internal/u1$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L37feb4.  call `<init>`(v0, v1) @signature `Lio/grpc/internal/u1$c;.<init>:(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;)V` @kind direct;
  #L37feba.  return @kind void;
}
procedure `boolean` `a`(`io.grpc.internal.u1$c` v1 @kind this, `io.grpc.internal.u1` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/grpc/internal/u1$c;.a:(Lio/grpc/internal/u1;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37fe74.  v0:= v1.`io.grpc.internal.u1$c.a` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L37fe78.  call temp:= `compareAndSet`(v0, v2, v3, v4) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L37fe7e.  v2:= temp;
  #L37fe80.  return v2;
}
procedure `void` `b`(`io.grpc.internal.u1$c` v1 @kind this, `io.grpc.internal.u1` v2 @kind object, `int` v3 ) @signature `Lio/grpc/internal/u1$c;.b:(Lio/grpc/internal/u1;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37fecc.  v0:= v1.`io.grpc.internal.u1$c.a` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L37fed0.  call `set`(v0, v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.set:(Ljava/lang/Object;I)V` @kind virtual;
  #L37fed6.  return @kind void;
}
