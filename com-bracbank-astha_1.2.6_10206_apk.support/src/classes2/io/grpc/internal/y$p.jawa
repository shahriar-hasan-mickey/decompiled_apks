record `io.grpc.internal.y$p` @kind class @AccessFlag  extends `io.grpc.internal.ClientStreamListener` @kind interface {
  `io.grpc.internal.ClientStreamListener` `io.grpc.internal.y$p.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.internal.y$p.b` @AccessFlag PRIVATE_VOLATILE;
  `java.util.List` `io.grpc.internal.y$p.c` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/y$p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L36c330.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.y$p` v1 @kind this, `io.grpc.internal.ClientStreamListener` v2 @kind object) @signature `Lio/grpc/internal/y$p;.<init>:(Lio/grpc/internal/ClientStreamListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L36c344.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36c34a.  v0:= new `java.util.ArrayList`;
  #L36c34e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36c354.  v1.`io.grpc.internal.y$p.c` @type ^`java.util.List` := v0 @kind object;
  #L36c358.  v1.`io.grpc.internal.y$p.a` @type ^`io.grpc.internal.ClientStreamListener` := v2 @kind object;
  #L36c35c.  return @kind void;
}
procedure `io.grpc.internal.ClientStreamListener` `e`(`io.grpc.internal.y$p` v0 @kind object) @signature `Lio/grpc/internal/y$p;.e:(Lio/grpc/internal/y$p;)Lio/grpc/internal/ClientStreamListener;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36c318.  v0:= v0.`io.grpc.internal.y$p.a` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c31c.  return v0 @kind object;
}
procedure `void` `f`(`io.grpc.internal.y$p` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lio/grpc/internal/y$p;.f:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L36c394.  @monitorenter v1
  #L36c396.  v0:= v1.`io.grpc.internal.y$p.b` @type ^`boolean` @kind boolean;
  #L36c39a.  if v0 != 0 then goto L36c3ac;
  #L36c39e.  v0:= v1.`io.grpc.internal.y$p.c` @type ^`java.util.List` @kind object;
  #L36c3a2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36c3a8.  @monitorexit v1
  #L36c3aa.  return @kind void;
  #L36c3ac.  @monitorexit v1
  #L36c3ae.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L36c3b4.  return @kind void;
  #L36c3b6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36c3b8.  @monitorexit v1
  #L36c3ba.  throw v2;
  catch `java.lang.Throwable` @[L36c396..L36c3ae] goto L36c3b6;
  catch `java.lang.Throwable` @[L36c3b8..L36c3ba] goto L36c3b6;
}
procedure `void` `a`(`io.grpc.internal.y$p` v1 @kind this, `io.grpc.internal.b2$a` v2 @kind object) @signature `Lio/grpc/internal/y$p;.a:(Lio/grpc/internal/b2$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36c498.  v0:= v1.`io.grpc.internal.y$p.b` @type ^`boolean` @kind boolean;
  #L36c49c.  if v0 == 0 then goto L36c4ac;
  #L36c4a0.  v0:= v1.`io.grpc.internal.y$p.a` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c4a4.  call `a`(v0, v2) @signature `Lio/grpc/internal/b2;.a:(Lio/grpc/internal/b2$a;)V` @kind interface;
  #L36c4aa.  goto L36c4bc;
  #L36c4ac.  v0:= new `io.grpc.internal.y$p$a`;
  #L36c4b0.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/internal/y$p$a;.<init>:(Lio/grpc/internal/y$p;Lio/grpc/internal/b2$a;)V` @kind direct;
  #L36c4b6.  call `f`(v1, v0) @signature `Lio/grpc/internal/y$p;.f:(Ljava/lang/Runnable;)V` @kind direct;
  #L36c4bc.  return @kind void;
}
procedure `void` `b`(`io.grpc.internal.y$p` v1 @kind this, `io.grpc.t0` v2 @kind object) @signature `Lio/grpc/internal/y$p;.b:(Lio/grpc/t0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36c474.  v0:= new `io.grpc.internal.y$p$c`;
  #L36c478.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/internal/y$p$c;.<init>:(Lio/grpc/internal/y$p;Lio/grpc/t0;)V` @kind direct;
  #L36c47e.  call `f`(v1, v0) @signature `Lio/grpc/internal/y$p;.f:(Ljava/lang/Runnable;)V` @kind direct;
  #L36c484.  return @kind void;
}
procedure `void` `c`(`io.grpc.internal.y$p` v1 @kind this) @signature `Lio/grpc/internal/y$p;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36c4d0.  v0:= v1.`io.grpc.internal.y$p.b` @type ^`boolean` @kind boolean;
  #L36c4d4.  if v0 == 0 then goto L36c4e4;
  #L36c4d8.  v0:= v1.`io.grpc.internal.y$p.a` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L36c4dc.  call `c`(v0) @signature `Lio/grpc/internal/b2;.c:()V` @kind interface;
  #L36c4e2.  goto L36c4f4;
  #L36c4e4.  v0:= new `io.grpc.internal.y$p$b`;
  #L36c4e8.  call `<init>`(v0, v1) @signature `Lio/grpc/internal/y$p$b;.<init>:(Lio/grpc/internal/y$p;)V` @kind direct;
  #L36c4ee.  call `f`(v1, v0) @signature `Lio/grpc/internal/y$p;.f:(Ljava/lang/Runnable;)V` @kind direct;
  #L36c4f4.  return @kind void;
}
procedure `void` `d`(`io.grpc.internal.y$p` v1 @kind this, `io.grpc.Status` v2 @kind object, `io.grpc.internal.ClientStreamListener$RpcProgress` v3 @kind object, `io.grpc.t0` v4 @kind object) @signature `Lio/grpc/internal/y$p;.d:(Lio/grpc/Status;Lio/grpc/internal/ClientStreamListener$RpcProgress;Lio/grpc/t0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36c370.  v0:= new `io.grpc.internal.y$p$d`;
  #L36c374.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/grpc/internal/y$p$d;.<init>:(Lio/grpc/internal/y$p;Lio/grpc/Status;Lio/grpc/internal/ClientStreamListener$RpcProgress;Lio/grpc/t0;)V` @kind direct;
  #L36c37a.  call `f`(v1, v0) @signature `Lio/grpc/internal/y$p;.f:(Ljava/lang/Runnable;)V` @kind direct;
  #L36c380.  return @kind void;
}
procedure `void` `g`(`io.grpc.internal.y$p` v3 @kind this) @signature `Lio/grpc/internal/y$p;.g:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L36c3e0.  v0:= new `java.util.ArrayList`;
  #L36c3e4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36c3ea.  @monitorenter v3
  #L36c3ec.  v1:= v3.`io.grpc.internal.y$p.c` @type ^`java.util.List` @kind object;
  #L36c3f0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L36c3f6.  v1:= temp;
  #L36c3f8.  if v1 == 0 then goto L36c40c;
  #L36c3fc.  v0:= 0I;
  #L36c3fe.  v3.`io.grpc.internal.y$p.c` @type ^`java.util.List` := v0 @kind object;
  #L36c402.  v0:= 1I;
  #L36c404.  v3.`io.grpc.internal.y$p.b` @type ^`boolean` := v0 @kind boolean;
  #L36c408.  @monitorexit v3
  #L36c40a.  return @kind void;
  #L36c40c.  v1:= v3.`io.grpc.internal.y$p.c` @type ^`java.util.List` @kind object;
  #L36c410.  v3.`io.grpc.internal.y$p.c` @type ^`java.util.List` := v0 @kind object;
  #L36c414.  @monitorexit v3
  #L36c416.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36c41c.  v0:= temp @kind object;
  #L36c41e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36c424.  v2:= temp;
  #L36c426.  if v2 == 0 then goto L36c43e;
  #L36c42a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36c430.  v2:= temp @kind object;
  #L36c432.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L36c436.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L36c43c.  goto L36c41e;
  #L36c43e.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L36c444.  v0:= v1 @kind object;
  #L36c446.  goto L36c3ea;
  #L36c448.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36c44a.  @monitorexit v3
  #L36c44c.  throw v0;
  catch `java.lang.Throwable` @[L36c3ec..L36c416] goto L36c448;
  catch `java.lang.Throwable` @[L36c44a..L36c44c] goto L36c448;
}
