record `io.grpc.internal.w$l` @kind class @AccessFlag FINAL extends `io.grpc.f$a` @kind class {
  `io.grpc.f$a` `io.grpc.internal.w$l.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.internal.w$l.b` @AccessFlag PRIVATE_VOLATILE;
  `java.util.List` `io.grpc.internal.w$l.c` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/w$l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L36ab2c.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.w$l` v1 @kind this, `io.grpc.f$a` v2 @kind object) @signature `Lio/grpc/internal/w$l;.<init>:(Lio/grpc/f$a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L36ab40.  call `<init>`(v1) @signature `Lio/grpc/f$a;.<init>:()V` @kind direct;
  #L36ab46.  v0:= new `java.util.ArrayList`;
  #L36ab4a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36ab50.  v1.`io.grpc.internal.w$l.c` @type ^`java.util.List` := v0 @kind object;
  #L36ab54.  v1.`io.grpc.internal.w$l.a` @type ^`io.grpc.f$a` := v2 @kind object;
  #L36ab58.  return @kind void;
}
procedure `io.grpc.f$a` `a`(`io.grpc.internal.w$l` v0 @kind object) @signature `Lio/grpc/internal/w$l;.a:(Lio/grpc/internal/w$l;)Lio/grpc/f$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36ab14.  v0:= v0.`io.grpc.internal.w$l.a` @type ^`io.grpc.f$a` @kind object;
  #L36ab18.  return v0 @kind object;
}
procedure `void` `b`(`io.grpc.internal.w$l` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lio/grpc/internal/w$l;.b:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L36ab6c.  @monitorenter v1
  #L36ab6e.  v0:= v1.`io.grpc.internal.w$l.b` @type ^`boolean` @kind boolean;
  #L36ab72.  if v0 != 0 then goto L36ab84;
  #L36ab76.  v0:= v1.`io.grpc.internal.w$l.c` @type ^`java.util.List` @kind object;
  #L36ab7a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36ab80.  @monitorexit v1
  #L36ab82.  return @kind void;
  #L36ab84.  @monitorexit v1
  #L36ab86.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L36ab8c.  return @kind void;
  #L36ab8e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36ab90.  @monitorexit v1
  #L36ab92.  throw v2;
  catch `java.lang.Throwable` @[L36ab6e..L36ab86] goto L36ab8e;
  catch `java.lang.Throwable` @[L36ab90..L36ab92] goto L36ab8e;
}
procedure `void` `c`(`io.grpc.internal.w$l` v3 @kind this) @signature `Lio/grpc/internal/w$l;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L36abb8.  v0:= new `java.util.ArrayList`;
  #L36abbc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36abc2.  @monitorenter v3
  #L36abc4.  v1:= v3.`io.grpc.internal.w$l.c` @type ^`java.util.List` @kind object;
  #L36abc8.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L36abce.  v1:= temp;
  #L36abd0.  if v1 == 0 then goto L36abe4;
  #L36abd4.  v0:= 0I;
  #L36abd6.  v3.`io.grpc.internal.w$l.c` @type ^`java.util.List` := v0 @kind object;
  #L36abda.  v0:= 1I;
  #L36abdc.  v3.`io.grpc.internal.w$l.b` @type ^`boolean` := v0 @kind boolean;
  #L36abe0.  @monitorexit v3
  #L36abe2.  return @kind void;
  #L36abe4.  v1:= v3.`io.grpc.internal.w$l.c` @type ^`java.util.List` @kind object;
  #L36abe8.  v3.`io.grpc.internal.w$l.c` @type ^`java.util.List` := v0 @kind object;
  #L36abec.  @monitorexit v3
  #L36abee.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36abf4.  v0:= temp @kind object;
  #L36abf6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36abfc.  v2:= temp;
  #L36abfe.  if v2 == 0 then goto L36ac16;
  #L36ac02.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36ac08.  v2:= temp @kind object;
  #L36ac0a.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L36ac0e.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L36ac14.  goto L36abf6;
  #L36ac16.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L36ac1c.  v0:= v1 @kind object;
  #L36ac1e.  goto L36abc2;
  #L36ac20.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36ac22.  @monitorexit v3
  #L36ac24.  throw v0;
  catch `java.lang.Throwable` @[L36abc4..L36abee] goto L36ac20;
  catch `java.lang.Throwable` @[L36ac22..L36ac24] goto L36ac20;
}
procedure `void` `onClose`(`io.grpc.internal.w$l` v1 @kind this, `io.grpc.Status` v2 @kind object, `io.grpc.t0` v3 @kind object) @signature `Lio/grpc/internal/w$l;.onClose:(Lio/grpc/Status;Lio/grpc/t0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ac4c.  v0:= new `io.grpc.internal.w$l$c`;
  #L36ac50.  call `<init>`(v0, v1, v2, v3) @signature `Lio/grpc/internal/w$l$c;.<init>:(Lio/grpc/internal/w$l;Lio/grpc/Status;Lio/grpc/t0;)V` @kind direct;
  #L36ac56.  call `b`(v1, v0) @signature `Lio/grpc/internal/w$l;.b:(Ljava/lang/Runnable;)V` @kind direct;
  #L36ac5c.  return @kind void;
}
procedure `void` `onHeaders`(`io.grpc.internal.w$l` v1 @kind this, `io.grpc.t0` v2 @kind object) @signature `Lio/grpc/internal/w$l;.onHeaders:(Lio/grpc/t0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ac70.  v0:= v1.`io.grpc.internal.w$l.b` @type ^`boolean` @kind boolean;
  #L36ac74.  if v0 == 0 then goto L36ac84;
  #L36ac78.  v0:= v1.`io.grpc.internal.w$l.a` @type ^`io.grpc.f$a` @kind object;
  #L36ac7c.  call `onHeaders`(v0, v2) @signature `Lio/grpc/f$a;.onHeaders:(Lio/grpc/t0;)V` @kind virtual;
  #L36ac82.  goto L36ac94;
  #L36ac84.  v0:= new `io.grpc.internal.w$l$a`;
  #L36ac88.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/internal/w$l$a;.<init>:(Lio/grpc/internal/w$l;Lio/grpc/t0;)V` @kind direct;
  #L36ac8e.  call `b`(v1, v0) @signature `Lio/grpc/internal/w$l;.b:(Ljava/lang/Runnable;)V` @kind direct;
  #L36ac94.  return @kind void;
}
procedure `void` `onMessage`(`io.grpc.internal.w$l` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/grpc/internal/w$l;.onMessage:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aca8.  v0:= v1.`io.grpc.internal.w$l.b` @type ^`boolean` @kind boolean;
  #L36acac.  if v0 == 0 then goto L36acbc;
  #L36acb0.  v0:= v1.`io.grpc.internal.w$l.a` @type ^`io.grpc.f$a` @kind object;
  #L36acb4.  call `onMessage`(v0, v2) @signature `Lio/grpc/f$a;.onMessage:(Ljava/lang/Object;)V` @kind virtual;
  #L36acba.  goto L36accc;
  #L36acbc.  v0:= new `io.grpc.internal.w$l$b`;
  #L36acc0.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/internal/w$l$b;.<init>:(Lio/grpc/internal/w$l;Ljava/lang/Object;)V` @kind direct;
  #L36acc6.  call `b`(v1, v0) @signature `Lio/grpc/internal/w$l;.b:(Ljava/lang/Runnable;)V` @kind direct;
  #L36accc.  return @kind void;
}
procedure `void` `onReady`(`io.grpc.internal.w$l` v1 @kind this) @signature `Lio/grpc/internal/w$l;.onReady:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ace0.  v0:= v1.`io.grpc.internal.w$l.b` @type ^`boolean` @kind boolean;
  #L36ace4.  if v0 == 0 then goto L36acf4;
  #L36ace8.  v0:= v1.`io.grpc.internal.w$l.a` @type ^`io.grpc.f$a` @kind object;
  #L36acec.  call `onReady`(v0) @signature `Lio/grpc/f$a;.onReady:()V` @kind virtual;
  #L36acf2.  goto L36ad04;
  #L36acf4.  v0:= new `io.grpc.internal.w$l$d`;
  #L36acf8.  call `<init>`(v0, v1) @signature `Lio/grpc/internal/w$l$d;.<init>:(Lio/grpc/internal/w$l;)V` @kind direct;
  #L36acfe.  call `b`(v1, v0) @signature `Lio/grpc/internal/w$l;.b:(Ljava/lang/Runnable;)V` @kind direct;
  #L36ad04.  return @kind void;
}
