record `io.grpc.internal.o0$a` @kind class @AccessFlag  extends `io.grpc.i0$a` @kind interface {
}
procedure `void` `<init>`(`io.grpc.internal.o0$a` v0 @kind this) @signature `Lio/grpc/internal/o0$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L370fe4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L370fea.  return @kind void;
}
procedure `byte`[] `a`(`io.grpc.internal.o0$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/internal/o0$a;.a:(Ljava/lang/Object;)[B` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L370f20.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L370f24.  call temp:= `d`(v0, v1) @signature `Lio/grpc/internal/o0$a;.d:(Ljava/lang/Integer;)[B` @kind virtual;
  #L370f2a.  v1:= temp @kind object;
  #L370f2c.  return v1 @kind object;
}
procedure `java.lang.Object` `b`(`io.grpc.internal.o0$a` v0 @kind this, `byte`[] v1 @kind object) @signature `Lio/grpc/internal/o0$a;.b:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L370fc8.  call temp:= `c`(v0, v1) @signature `Lio/grpc/internal/o0$a;.c:([B)Ljava/lang/Integer;` @kind virtual;
  #L370fce.  v1:= temp @kind object;
  #L370fd0.  return v1 @kind object;
}
procedure `java.lang.Integer` `c`(`io.grpc.internal.o0$a` v4 @kind this, `byte`[] v5 @kind object) @signature `Lio/grpc/internal/o0$a;.c:([B)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L370f40.  v0:= length @variable v5;
  #L370f42.  v1:= 3I;
  #L370f44.  if v0 < v1 then goto L370f7c;
  #L370f48.  v0:= 0I;
  #L370f4a.  v0:= v5[v0] @kind byte;
  #L370f4e.  v0:= v0 + -48;
  #L370f52.  v0:= v0 * 100;
  #L370f56.  v1:= 1I;
  #L370f58.  v1:= v5[v1] @kind byte;
  #L370f5c.  v1:= v1 + -48;
  #L370f60.  v1:= v1 * 10;
  #L370f64.  v0:= v0 + v1 @kind int;
  #L370f66.  v1:= 2I;
  #L370f68.  v5:= v5[v1] @kind byte;
  #L370f6c.  v5:= v5 + -48;
  #L370f70.  v0:= v0 + v5 @kind int;
  #L370f72.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L370f78.  v5:= temp @kind object;
  #L370f7a.  return v5 @kind object;
  #L370f7c.  v0:= new `java.lang.NumberFormatException`;
  #L370f80.  v1:= new `java.lang.StringBuilder`;
  #L370f84.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L370f8a.  v2:= "Malformed status code " @kind object;
  #L370f8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L370f94.  v2:= new `java.lang.String`;
  #L370f98.  v3:= `@@io.grpc.i0.a` @type ^`java.nio.charset.Charset` @kind object;
  #L370f9c.  call `<init>`(v2, v5, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L370fa2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L370fa8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L370fae.  v5:= temp @kind object;
  #L370fb0.  call `<init>`(v0, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L370fb6.  throw v0;
}
procedure `byte`[] `d`(`io.grpc.internal.o0$a` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Lio/grpc/internal/o0$a;.d:(Ljava/lang/Integer;)[B` @AccessFlag PUBLIC {
    temp;

  #L370f04.  v1:= new `java.lang.UnsupportedOperationException`;
  #L370f08.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L370f0e.  throw v1;
}
