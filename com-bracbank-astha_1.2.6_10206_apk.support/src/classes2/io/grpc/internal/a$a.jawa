record `io.grpc.internal.a$a` @kind class @AccessFlag  extends `io.grpc.internal.l0` @kind interface {
  `io.grpc.t0` `io.grpc.internal.a$a.a` @AccessFlag PRIVATE;
  `boolean` `io.grpc.internal.a$a.b` @AccessFlag PRIVATE;
  `io.grpc.internal.z1` `io.grpc.internal.a$a.c` @AccessFlag PRIVATE_FINAL;
  `byte`[] `io.grpc.internal.a$a.d` @AccessFlag PRIVATE;
  `io.grpc.internal.a` `io.grpc.internal.a$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.a$a` v0 @kind this, `io.grpc.internal.a` v1 @kind object, `io.grpc.t0` v2 @kind object, `io.grpc.internal.z1` v3 @kind object) @signature `Lio/grpc/internal/a$a;.<init>:(Lio/grpc/internal/a;Lio/grpc/t0;Lio/grpc/internal/z1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L365664.  v0.`io.grpc.internal.a$a.e` @type ^`io.grpc.internal.a` := v1 @kind object;
  #L365668.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36566e.  v1:= "headers" @kind object;
  #L365672.  call temp:= `checkNotNull`(v2, v1) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L365678.  v1:= temp @kind object;
  #L36567a.  v1:= (`io.grpc.t0`) v1 @kind object;
  #L36567e.  v0.`io.grpc.internal.a$a.a` @type ^`io.grpc.t0` := v1 @kind object;
  #L365682.  v1:= "statsTraceCtx" @kind object;
  #L365686.  call temp:= `checkNotNull`(v3, v1) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36568c.  v1:= temp @kind object;
  #L36568e.  v1:= (`io.grpc.internal.z1`) v1 @kind object;
  #L365692.  v0.`io.grpc.internal.a$a.c` @type ^`io.grpc.internal.z1` := v1 @kind object;
  #L365696.  return @kind void;
}
procedure `io.grpc.internal.l0` `a`(`io.grpc.internal.a$a` v0 @kind this, `boolean` v1 ) @signature `Lio/grpc/internal/a$a;.a:(Z)Lio/grpc/internal/l0;` @AccessFlag PUBLIC {
    temp;

  #L365650.  return v0 @kind object;
}
procedure `io.grpc.internal.l0` `c`(`io.grpc.internal.a$a` v0 @kind this, `io.grpc.m` v1 @kind object) @signature `Lio/grpc/internal/a$a;.c:(Lio/grpc/m;)Lio/grpc/internal/l0;` @AccessFlag PUBLIC {
    temp;

  #L36563c.  return v0 @kind object;
}
procedure `void` `close`(`io.grpc.internal.a$a` v3 @kind this) @signature `Lio/grpc/internal/a$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3656a8.  v0:= 1I;
  #L3656aa.  v3.`io.grpc.internal.a$a.b` @type ^`boolean` := v0 @kind boolean;
  #L3656ae.  v1:= v3.`io.grpc.internal.a$a.d` @type ^`byte`[] @kind object;
  #L3656b2.  if v1 == 0 then goto L3656b8;
  #L3656b6.  goto L3656ba;
  #L3656b8.  v0:= 0I;
  #L3656ba.  v1:= "Lack of request message. GET request is only supported for unary requests" @kind object;
  #L3656be.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L3656c4.  v0:= v3.`io.grpc.internal.a$a.e` @type ^`io.grpc.internal.a` @kind object;
  #L3656c8.  call temp:= `v`(v0) @signature `Lio/grpc/internal/a;.v:()Lio/grpc/internal/a$b;` @kind virtual;
  #L3656ce.  v0:= temp @kind object;
  #L3656d0.  v1:= v3.`io.grpc.internal.a$a.a` @type ^`io.grpc.t0` @kind object;
  #L3656d4.  v2:= v3.`io.grpc.internal.a$a.d` @type ^`byte`[] @kind object;
  #L3656d8.  call `d`(v0, v1, v2) @signature `Lio/grpc/internal/a$b;.d:(Lio/grpc/t0;[B)V` @kind interface;
  #L3656de.  v0:= 0I;
  #L3656e0.  v3.`io.grpc.internal.a$a.d` @type ^`byte`[] := v0 @kind object;
  #L3656e4.  v3.`io.grpc.internal.a$a.a` @type ^`io.grpc.t0` := v0 @kind object;
  #L3656e8.  return @kind void;
}
procedure `void` `d`(`io.grpc.internal.a$a` v8 @kind this, `java.io.InputStream` v9 @kind object) @signature `Lio/grpc/internal/a$a;.d:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L365724.  v0:= v8.`io.grpc.internal.a$a.d` @type ^`byte`[] @kind object;
  #L365728.  v1:= 0I;
  #L36572a.  if v0 != 0 then goto L365732;
  #L36572e.  v0:= 1I;
  #L365730.  goto L365734;
  #L365732.  v0:= 0I;
  #L365734.  v2:= "writePayload should not be called multiple times" @kind object;
  #L365738.  call `checkState`(v0, v2) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L36573e.  call temp:= `toByteArray`(v9) @signature `Lcom/google/common/io/ByteStreams;.toByteArray:(Ljava/io/InputStream;)[B` @kind static;
  #L365744.  v9:= temp @kind object;
  #L365746.  v8.`io.grpc.internal.a$a.d` @type ^`byte`[] := v9 @kind object;
  #L36574a.  v9:= v8.`io.grpc.internal.a$a.c` @type ^`io.grpc.internal.z1` @kind object;
  #L36574e.  call `i`(v9, v1) @signature `Lio/grpc/internal/z1;.i:(I)V` @kind virtual;
  #L365754.  v2:= v8.`io.grpc.internal.a$a.c` @type ^`io.grpc.internal.z1` @kind object;
  #L365758.  v3:= 0I;
  #L36575a.  v9:= v8.`io.grpc.internal.a$a.d` @type ^`byte`[] @kind object;
  #L36575e.  v0:= length @variable v9;
  #L365760.  v4:= (`long`) v0 @kind i2l;
  #L365762.  v9:= length @variable v9;
  #L365764.  v6:= (`long`) v9 @kind i2l;
  #L365766.  call `j`(v2, v3, v4, v6) @signature `Lio/grpc/internal/z1;.j:(IJJ)V` @kind virtual;
  #L36576c.  v9:= v8.`io.grpc.internal.a$a.c` @type ^`io.grpc.internal.z1` @kind object;
  #L365770.  v0:= v8.`io.grpc.internal.a$a.d` @type ^`byte`[] @kind object;
  #L365774.  v0:= length @variable v0;
  #L365776.  v0:= (`long`) v0 @kind i2l;
  #L365778.  call `k`(v9, v0) @signature `Lio/grpc/internal/z1;.k:(J)V` @kind virtual;
  #L36577e.  v9:= v8.`io.grpc.internal.a$a.c` @type ^`io.grpc.internal.z1` @kind object;
  #L365782.  v0:= v8.`io.grpc.internal.a$a.d` @type ^`byte`[] @kind object;
  #L365786.  v0:= length @variable v0;
  #L365788.  v0:= (`long`) v0 @kind i2l;
  #L36578a.  call `l`(v9, v0) @signature `Lio/grpc/internal/z1;.l:(J)V` @kind virtual;
  #L365790.  return @kind void;
  #L365792.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L365794.  v0:= new `java.lang.RuntimeException`;
  #L365798.  call `<init>`(v0, v9) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L36579e.  throw v0;
  catch `java.io.IOException` @[L36573e..L36574a] goto L365792;
}
procedure `void` `flush`(`io.grpc.internal.a$a` v0 @kind this) @signature `Lio/grpc/internal/a$a;.flush:()V` @AccessFlag PUBLIC {
    temp;

  #L3656fc.  return @kind void;
}
procedure `void` `i`(`io.grpc.internal.a$a` v0 @kind this, `int` v1 ) @signature `Lio/grpc/internal/a$a;.i:(I)V` @AccessFlag PUBLIC {
    temp;

  #L365710.  return @kind void;
}
procedure `boolean` `isClosed`(`io.grpc.internal.a$a` v1 @kind this) @signature `Lio/grpc/internal/a$a;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L365624.  v0:= v1.`io.grpc.internal.a$a.b` @type ^`boolean` @kind boolean;
  #L365628.  return v0;
}
