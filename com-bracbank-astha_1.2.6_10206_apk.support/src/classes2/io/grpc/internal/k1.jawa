record `io.grpc.internal.k1` @kind class @AccessFlag PUBLIC_FINAL extends `io.grpc.n0$f` @kind class {
  `io.grpc.c` `io.grpc.internal.k1.a` @AccessFlag PRIVATE_FINAL;
  `io.grpc.t0` `io.grpc.internal.k1.b` @AccessFlag PRIVATE_FINAL;
  `io.grpc.MethodDescriptor` `io.grpc.internal.k1.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.internal.k1` v1 @kind this, `io.grpc.MethodDescriptor` v2 @kind object, `io.grpc.t0` v3 @kind object, `io.grpc.c` v4 @kind object) @signature `Lio/grpc/internal/k1;.<init>:(Lio/grpc/MethodDescriptor;Lio/grpc/t0;Lio/grpc/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L37c17c.  call `<init>`(v1) @signature `Lio/grpc/n0$f;.<init>:()V` @kind direct;
  #L37c182.  v0:= "method" @kind object;
  #L37c186.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37c18c.  v2:= temp @kind object;
  #L37c18e.  v2:= (`io.grpc.MethodDescriptor`) v2 @kind object;
  #L37c192.  v1.`io.grpc.internal.k1.c` @type ^`io.grpc.MethodDescriptor` := v2 @kind object;
  #L37c196.  v2:= "headers" @kind object;
  #L37c19a.  call temp:= `checkNotNull`(v3, v2) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37c1a0.  v2:= temp @kind object;
  #L37c1a2.  v2:= (`io.grpc.t0`) v2 @kind object;
  #L37c1a6.  v1.`io.grpc.internal.k1.b` @type ^`io.grpc.t0` := v2 @kind object;
  #L37c1aa.  v2:= "callOptions" @kind object;
  #L37c1ae.  call temp:= `checkNotNull`(v4, v2) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37c1b4.  v2:= temp @kind object;
  #L37c1b6.  v2:= (`io.grpc.c`) v2 @kind object;
  #L37c1ba.  v1.`io.grpc.internal.k1.a` @type ^`io.grpc.c` := v2 @kind object;
  #L37c1be.  return @kind void;
}
procedure `io.grpc.c` `a`(`io.grpc.internal.k1` v1 @kind this) @signature `Lio/grpc/internal/k1;.a:()Lio/grpc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c0c8.  v0:= v1.`io.grpc.internal.k1.a` @type ^`io.grpc.c` @kind object;
  #L37c0cc.  return v0 @kind object;
}
procedure `io.grpc.t0` `b`(`io.grpc.internal.k1` v1 @kind this) @signature `Lio/grpc/internal/k1;.b:()Lio/grpc/t0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c0e0.  v0:= v1.`io.grpc.internal.k1.b` @type ^`io.grpc.t0` @kind object;
  #L37c0e4.  return v0 @kind object;
}
procedure `io.grpc.MethodDescriptor` `c`(`io.grpc.internal.k1` v1 @kind this) @signature `Lio/grpc/internal/k1;.c:()Lio/grpc/MethodDescriptor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c0f8.  v0:= v1.`io.grpc.internal.k1.c` @type ^`io.grpc.MethodDescriptor` @kind object;
  #L37c0fc.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.grpc.internal.k1` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/grpc/internal/k1;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L37c010.  v0:= 1I;
  #L37c012.  if v4 != v5 then goto L37c018;
  #L37c016.  return v0;
  #L37c018.  v1:= 0I;
  #L37c01a.  if v5 == 0 then goto L37c076;
  #L37c01e.  v2:= constclass @type ^`io.grpc.internal.k1` @kind object;
  #L37c022.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L37c028.  v3:= temp @kind object;
  #L37c02a.  if v2 == v3 then goto L37c030;
  #L37c02e.  goto L37c076;
  #L37c030.  v5:= (`io.grpc.internal.k1`) v5 @kind object;
  #L37c034.  v2:= v4.`io.grpc.internal.k1.a` @type ^`io.grpc.c` @kind object;
  #L37c038.  v3:= v5.`io.grpc.internal.k1.a` @type ^`io.grpc.c` @kind object;
  #L37c03c.  call temp:= `equal`(v2, v3) @signature `Lcom/google/common/base/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L37c042.  v2:= temp;
  #L37c044.  if v2 == 0 then goto L37c072;
  #L37c048.  v2:= v4.`io.grpc.internal.k1.b` @type ^`io.grpc.t0` @kind object;
  #L37c04c.  v3:= v5.`io.grpc.internal.k1.b` @type ^`io.grpc.t0` @kind object;
  #L37c050.  call temp:= `equal`(v2, v3) @signature `Lcom/google/common/base/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L37c056.  v2:= temp;
  #L37c058.  if v2 == 0 then goto L37c072;
  #L37c05c.  v2:= v4.`io.grpc.internal.k1.c` @type ^`io.grpc.MethodDescriptor` @kind object;
  #L37c060.  v5:= v5.`io.grpc.internal.k1.c` @type ^`io.grpc.MethodDescriptor` @kind object;
  #L37c064.  call temp:= `equal`(v2, v5) @signature `Lcom/google/common/base/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L37c06a.  v5:= temp;
  #L37c06c.  if v5 == 0 then goto L37c072;
  #L37c070.  goto L37c074;
  #L37c072.  v0:= 0I;
  #L37c074.  return v0;
  #L37c076.  return v1;
}
procedure `int` `hashCode`(`io.grpc.internal.k1` v3 @kind this) @signature `Lio/grpc/internal/k1;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L37c088.  v0:= 3I;
  #L37c08a.  v0:= new `java.lang.Object`[v0];
  #L37c08e.  v1:= v3.`io.grpc.internal.k1.a` @type ^`io.grpc.c` @kind object;
  #L37c092.  v2:= 0I;
  #L37c094.  v0[v2]:= v1 @kind object;
  #L37c098.  v1:= v3.`io.grpc.internal.k1.b` @type ^`io.grpc.t0` @kind object;
  #L37c09c.  v2:= 1I;
  #L37c09e.  v0[v2]:= v1 @kind object;
  #L37c0a2.  v1:= v3.`io.grpc.internal.k1.c` @type ^`io.grpc.MethodDescriptor` @kind object;
  #L37c0a6.  v2:= 2I;
  #L37c0a8.  v0[v2]:= v1 @kind object;
  #L37c0ac.  call temp:= `hashCode`(v0) @signature `Lcom/google/common/base/Objects;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L37c0b2.  v0:= temp;
  #L37c0b4.  return v0;
}
procedure `java.lang.String` `toString`(`io.grpc.internal.k1` v2 @kind this) @signature `Lio/grpc/internal/k1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L37c110.  v0:= new `java.lang.StringBuilder`;
  #L37c114.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c11a.  v1:= "[method=" @kind object;
  #L37c11e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c124.  v1:= v2.`io.grpc.internal.k1.c` @type ^`io.grpc.MethodDescriptor` @kind object;
  #L37c128.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c12e.  v1:= " headers=" @kind object;
  #L37c132.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c138.  v1:= v2.`io.grpc.internal.k1.b` @type ^`io.grpc.t0` @kind object;
  #L37c13c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c142.  v1:= " callOptions=" @kind object;
  #L37c146.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c14c.  v1:= v2.`io.grpc.internal.k1.a` @type ^`io.grpc.c` @kind object;
  #L37c150.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c156.  v1:= "]" @kind object;
  #L37c15a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c160.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c166.  v0:= temp @kind object;
  #L37c168.  return v0 @kind object;
}
