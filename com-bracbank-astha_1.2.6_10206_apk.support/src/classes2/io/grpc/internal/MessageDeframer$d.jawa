record `io.grpc.internal.MessageDeframer$d` @kind class @AccessFlag FINAL extends `java.io.FilterInputStream` @kind class {
  `int` `io.grpc.internal.MessageDeframer$d.a` @AccessFlag PRIVATE_FINAL;
  `io.grpc.internal.z1` `io.grpc.internal.MessageDeframer$d.b` @AccessFlag PRIVATE_FINAL;
  `long` `io.grpc.internal.MessageDeframer$d.c` @AccessFlag PRIVATE;
  `long` `io.grpc.internal.MessageDeframer$d.d` @AccessFlag PRIVATE;
  `long` `io.grpc.internal.MessageDeframer$d.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.grpc.internal.MessageDeframer$d` v2 @kind this, `java.io.InputStream` v3 @kind object, `int` v4 , `io.grpc.internal.z1` v5 @kind object) @signature `Lio/grpc/internal/MessageDeframer$d;.<init>:(Ljava/io/InputStream;ILio/grpc/internal/z1;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L379f14.  call `<init>`(v2, v3) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L379f1a.  v0:= -1L;
  #L379f1e.  v2.`io.grpc.internal.MessageDeframer$d.e` @type ^`long` := v0 @kind wide;
  #L379f22.  v2.`io.grpc.internal.MessageDeframer$d.a` @type ^`int` := v4;
  #L379f26.  v2.`io.grpc.internal.MessageDeframer$d.b` @type ^`io.grpc.internal.z1` := v5 @kind object;
  #L379f2a.  return @kind void;
}
procedure `void` `g`(`io.grpc.internal.MessageDeframer$d` v5 @kind this) @signature `Lio/grpc/internal/MessageDeframer$d;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L379f78.  v0:= v5.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` @kind wide;
  #L379f7c.  v2:= v5.`io.grpc.internal.MessageDeframer$d.c` @type ^`long` @kind wide;
  #L379f80.  v4:= lcmp(v0, v2);
  #L379f84.  if v4 <= 0 then goto L379f9c;
  #L379f88.  v4:= v5.`io.grpc.internal.MessageDeframer$d.b` @type ^`io.grpc.internal.z1` @kind object;
  #L379f8c.  v0:= v0 - v2 @kind long;
  #L379f8e.  call `f`(v4, v0) @signature `Lio/grpc/internal/z1;.f:(J)V` @kind virtual;
  #L379f94.  v0:= v5.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` @kind wide;
  #L379f98.  v5.`io.grpc.internal.MessageDeframer$d.c` @type ^`long` := v0 @kind wide;
  #L379f9c.  return @kind void;
}
procedure `void` `h`(`io.grpc.internal.MessageDeframer$d` v5 @kind this) @signature `Lio/grpc/internal/MessageDeframer$d;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L37a034.  v0:= v5.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` @kind wide;
  #L37a038.  v2:= v5.`io.grpc.internal.MessageDeframer$d.a` @type ^`int`;
  #L37a03c.  v2:= (`long`) v2 @kind i2l;
  #L37a03e.  v4:= lcmp(v0, v2);
  #L37a042.  if v4 > 0 then goto L37a048;
  #L37a046.  return @kind void;
  #L37a048.  v0:= `@@io.grpc.Status.o` @type ^`io.grpc.Status` @kind object;
  #L37a04c.  v1:= new `java.lang.StringBuilder`;
  #L37a050.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37a056.  v2:= "Decompressed gRPC message exceeds maximum size " @kind object;
  #L37a05a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37a060.  v2:= v5.`io.grpc.internal.MessageDeframer$d.a` @type ^`int`;
  #L37a064.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L37a06a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37a070.  v1:= temp @kind object;
  #L37a072.  call temp:= `r`(v0, v1) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L37a078.  v0:= temp @kind object;
  #L37a07a.  call temp:= `d`(v0) @signature `Lio/grpc/Status;.d:()Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L37a080.  v0:= temp @kind object;
  #L37a082.  throw v0;
}
procedure `void` `mark`(`io.grpc.internal.MessageDeframer$d` v2 @kind this, `int` v3 ) @signature `Lio/grpc/internal/MessageDeframer$d;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L379f3c.  @monitorenter v2
  #L379f3e.  v0:= v2.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L379f42.  call `mark`(v0, v3) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L379f48.  v0:= v2.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` @kind wide;
  #L379f4c.  v2.`io.grpc.internal.MessageDeframer$d.e` @type ^`long` := v0 @kind wide;
  #L379f50.  @monitorexit v2
  #L379f52.  return @kind void;
  #L379f54.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L379f56.  @monitorexit v2
  #L379f58.  throw v3;
  catch `java.lang.Throwable` @[L379f3e..L379f50] goto L379f54;
}
procedure `int` `read`(`io.grpc.internal.MessageDeframer$d` v5 @kind this) @signature `Lio/grpc/internal/MessageDeframer$d;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L379e64.  v0:= v5.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L379e68.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L379e6e.  v0:= temp;
  #L379e70.  v1:= -1I;
  #L379e72.  if v0 == v1 then goto L379e84;
  #L379e76.  v1:= v5.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` @kind wide;
  #L379e7a.  v3:= 1L;
  #L379e7e.  v1:= v1 + v3 @kind long;
  #L379e80.  v5.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` := v1 @kind wide;
  #L379e84.  call `h`(v5) @signature `Lio/grpc/internal/MessageDeframer$d;.h:()V` @kind direct;
  #L379e8a.  call `g`(v5) @signature `Lio/grpc/internal/MessageDeframer$d;.g:()V` @kind direct;
  #L379e90.  return v0;
}
procedure `int` `read`(`io.grpc.internal.MessageDeframer$d` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lio/grpc/internal/MessageDeframer$d;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L379ea4.  v0:= v2.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L379ea8.  call temp:= `read`(v0, v3, v4, v5) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L379eae.  v3:= temp;
  #L379eb0.  v4:= -1I;
  #L379eb2.  if v3 == v4 then goto L379ec2;
  #L379eb6.  v4:= v2.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` @kind wide;
  #L379eba.  v0:= (`long`) v3 @kind i2l;
  #L379ebc.  v4:= v4 + v0 @kind long;
  #L379ebe.  v2.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` := v4 @kind wide;
  #L379ec2.  call `h`(v2) @signature `Lio/grpc/internal/MessageDeframer$d;.h:()V` @kind direct;
  #L379ec8.  call `g`(v2) @signature `Lio/grpc/internal/MessageDeframer$d;.g:()V` @kind direct;
  #L379ece.  return v3;
}
procedure `void` `reset`(`io.grpc.internal.MessageDeframer$d` v5 @kind this) @signature `Lio/grpc/internal/MessageDeframer$d;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L379fb0.  @monitorenter v5
  #L379fb2.  v0:= v5.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L379fb6.  call temp:= `markSupported`(v0) @signature `Ljava/io/InputStream;.markSupported:()Z` @kind virtual;
  #L379fbc.  v0:= temp;
  #L379fbe.  if v0 == 0 then goto L379ff8;
  #L379fc2.  v0:= v5.`io.grpc.internal.MessageDeframer$d.e` @type ^`long` @kind wide;
  #L379fc6.  v2:= -1L;
  #L379fca.  v4:= lcmp(v0, v2);
  #L379fce.  if v4 == 0 then goto L379fe8;
  #L379fd2.  v0:= v5.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L379fd6.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L379fdc.  v0:= v5.`io.grpc.internal.MessageDeframer$d.e` @type ^`long` @kind wide;
  #L379fe0.  v5.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` := v0 @kind wide;
  #L379fe4.  @monitorexit v5
  #L379fe6.  return @kind void;
  #L379fe8.  v0:= new `java.io.IOException`;
  #L379fec.  v1:= "Mark not set" @kind object;
  #L379ff0.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L379ff6.  throw v0;
  #L379ff8.  v0:= new `java.io.IOException`;
  #L379ffc.  v1:= "Mark not supported" @kind object;
  #L37a000.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37a006.  throw v0;
  #L37a008.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37a00a.  @monitorexit v5
  #L37a00c.  throw v0;
  catch `java.lang.Throwable` @[L379fb2..L379fe4] goto L37a008;
  catch `java.lang.Throwable` @[L379fe8..L37a008] goto L37a008;
}
procedure `long` `skip`(`io.grpc.internal.MessageDeframer$d` v2 @kind this, `long` v3 ) @signature `Lio/grpc/internal/MessageDeframer$d;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L379ee0.  v0:= v2.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L379ee4.  call temp:= `skip`(v0, v3) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L379eea.  v3:= temp @kind wide;
  #L379eec.  v0:= v2.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` @kind wide;
  #L379ef0.  v0:= v0 + v3 @kind long;
  #L379ef2.  v2.`io.grpc.internal.MessageDeframer$d.d` @type ^`long` := v0 @kind wide;
  #L379ef6.  call `h`(v2) @signature `Lio/grpc/internal/MessageDeframer$d;.h:()V` @kind direct;
  #L379efc.  call `g`(v2) @signature `Lio/grpc/internal/MessageDeframer$d;.g:()V` @kind direct;
  #L379f02.  return v3 @kind wide;
}
