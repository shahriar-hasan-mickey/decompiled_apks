record `io.grpc.internal.n1$b` @kind class @AccessFlag FINAL extends `java.io.InputStream` @kind class, `io.grpc.m0` @kind interface {
  `io.grpc.internal.m1` `io.grpc.internal.n1$b.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.grpc.internal.n1$b` v1 @kind this, `io.grpc.internal.m1` v2 @kind object) @signature `Lio/grpc/internal/n1$b;.<init>:(Lio/grpc/internal/m1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L37c724.  call `<init>`(v1) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L37c72a.  v0:= "buffer" @kind object;
  #L37c72e.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37c734.  v2:= temp @kind object;
  #L37c736.  v2:= (`io.grpc.internal.m1`) v2 @kind object;
  #L37c73a.  v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` := v2 @kind object;
  #L37c73e.  return @kind void;
}
procedure `int` `available`(`io.grpc.internal.n1$b` v1 @kind this) @signature `Lio/grpc/internal/n1$b;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c654.  v0:= v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c658.  call temp:= `d`(v0) @signature `Lio/grpc/internal/m1;.d:()I` @kind interface;
  #L37c65e.  v0:= temp;
  #L37c660.  return v0;
}
procedure `void` `close`(`io.grpc.internal.n1$b` v1 @kind this) @signature `Lio/grpc/internal/n1$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c750.  v0:= v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c754.  call `close`(v0) @signature `Lio/grpc/internal/m1;.close:()V` @kind interface;
  #L37c75a.  return @kind void;
}
procedure `void` `mark`(`io.grpc.internal.n1$b` v0 @kind this, `int` v1 ) @signature `Lio/grpc/internal/n1$b;.mark:(I)V` @AccessFlag PUBLIC {
    temp;

  #L37c76c.  v1:= v0.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c770.  call `C`(v1) @signature `Lio/grpc/internal/m1;.C:()V` @kind interface;
  #L37c776.  return @kind void;
}
procedure `boolean` `markSupported`(`io.grpc.internal.n1$b` v1 @kind this) @signature `Lio/grpc/internal/n1$b;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c634.  v0:= v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c638.  call temp:= `markSupported`(v0) @signature `Lio/grpc/internal/m1;.markSupported:()Z` @kind interface;
  #L37c63e.  v0:= temp;
  #L37c640.  return v0;
}
procedure `int` `read`(`io.grpc.internal.n1$b` v1 @kind this) @signature `Lio/grpc/internal/n1$b;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c674.  v0:= v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c678.  call temp:= `d`(v0) @signature `Lio/grpc/internal/m1;.d:()I` @kind interface;
  #L37c67e.  v0:= temp;
  #L37c680.  if v0 != 0 then goto L37c688;
  #L37c684.  v0:= -1I;
  #L37c686.  return v0;
  #L37c688.  v0:= v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c68c.  call temp:= `readUnsignedByte`(v0) @signature `Lio/grpc/internal/m1;.readUnsignedByte:()I` @kind interface;
  #L37c692.  v0:= temp;
  #L37c694.  return v0;
}
procedure `int` `read`(`io.grpc.internal.n1$b` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/grpc/internal/n1$b;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c6a8.  v0:= v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c6ac.  call temp:= `d`(v0) @signature `Lio/grpc/internal/m1;.d:()I` @kind interface;
  #L37c6b2.  v0:= temp;
  #L37c6b4.  if v0 != 0 then goto L37c6bc;
  #L37c6b8.  v2:= -1I;
  #L37c6ba.  return v2;
  #L37c6bc.  v0:= v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c6c0.  call temp:= `d`(v0) @signature `Lio/grpc/internal/m1;.d:()I` @kind interface;
  #L37c6c6.  v0:= temp;
  #L37c6c8.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L37c6ce.  v4:= temp;
  #L37c6d0.  v0:= v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c6d4.  call `x`(v0, v2, v3, v4) @signature `Lio/grpc/internal/m1;.x:([BII)V` @kind interface;
  #L37c6da.  return v4;
}
procedure `void` `reset`(`io.grpc.internal.n1$b` v1 @kind this) @signature `Lio/grpc/internal/n1$b;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c788.  v0:= v1.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c78c.  call `reset`(v0) @signature `Lio/grpc/internal/m1;.reset:()V` @kind interface;
  #L37c792.  return @kind void;
}
procedure `long` `skip`(`io.grpc.internal.n1$b` v2 @kind this, `long` v3 ) @signature `Lio/grpc/internal/n1$b;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37c6ec.  v0:= v2.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c6f0.  call temp:= `d`(v0) @signature `Lio/grpc/internal/m1;.d:()I` @kind interface;
  #L37c6f6.  v0:= temp;
  #L37c6f8.  v0:= (`long`) v0 @kind i2l;
  #L37c6fa.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L37c700.  v3:= temp @kind wide;
  #L37c702.  v4:= (`int`) v3 @kind l2i;
  #L37c704.  v3:= v2.`io.grpc.internal.n1$b.a` @type ^`io.grpc.internal.m1` @kind object;
  #L37c708.  call `skipBytes`(v3, v4) @signature `Lio/grpc/internal/m1;.skipBytes:(I)V` @kind interface;
  #L37c70e.  v3:= (`long`) v4 @kind i2l;
  #L37c710.  return v3 @kind wide;
}
