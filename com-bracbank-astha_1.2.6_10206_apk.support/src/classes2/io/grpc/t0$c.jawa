record `io.grpc.t0$c` @kind class @AccessFlag  extends `io.grpc.t0$g` @kind class {
  `io.grpc.t0$d` `io.grpc.t0$c.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.t0$c` v2 @kind this, `java.lang.String` v3 @kind object, `boolean` v4 , `io.grpc.t0$d` v5 @kind object) @signature `Lio/grpc/t0$c;.<init>:(Ljava/lang/String;ZLio/grpc/t0$d;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L361614.  v0:= 0I;
  #L361616.  call `<init>`(v2, v3, v4, v5, v0) @signature `Lio/grpc/t0$g;.<init>:(Ljava/lang/String;ZLjava/lang/Object;Lio/grpc/t0$a;)V` @kind direct;
  #L36161c.  v4:= "-bin" @kind object;
  #L361620.  call temp:= `endsWith`(v3, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L361626.  v0:= temp;
  #L361628.  v0:= v0 ^~ 1;
  #L36162c.  v1:= "ASCII header is named %s.  Only binary headers may end with %s" @kind object;
  #L361630.  call `checkArgument`(v0, v1, v3, v4) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L361636.  v3:= "marshaller" @kind object;
  #L36163a.  call temp:= `checkNotNull`(v5, v3) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L361640.  v3:= temp @kind object;
  #L361642.  v3:= (`io.grpc.t0$d`) v3 @kind object;
  #L361646.  v2.`io.grpc.t0$c.f` @type ^`io.grpc.t0$d` := v3 @kind object;
  #L36164a.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.t0$c` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `io.grpc.t0$d` v3 @kind object, `io.grpc.t0$a` v4 @kind object) @signature `Lio/grpc/t0$c;.<init>:(Ljava/lang/String;ZLio/grpc/t0$d;Lio/grpc/t0$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L36165c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/grpc/t0$c;.<init>:(Ljava/lang/String;ZLio/grpc/t0$d;)V` @kind direct;
  #L361662.  return @kind void;
}
procedure `java.lang.Object` `h`(`io.grpc.t0$c` v3 @kind this, `byte`[] v4 @kind object) @signature `Lio/grpc/t0$c;.h:([B)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3615e8.  v0:= v3.`io.grpc.t0$c.f` @type ^`io.grpc.t0$d` @kind object;
  #L3615ec.  v1:= new `java.lang.String`;
  #L3615f0.  v2:= `@@com.google.common.base.Charsets.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L3615f4.  call `<init>`(v1, v4, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L3615fa.  call temp:= `b`(v0, v1) @signature `Lio/grpc/t0$d;.b:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L361600.  v4:= temp @kind object;
  #L361602.  return v4 @kind object;
}
procedure `byte`[] `j`(`io.grpc.t0$c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/grpc/t0$c;.j:(Ljava/lang/Object;)[B` @AccessFlag  {
    temp;
    v0;

  #L3615bc.  v0:= v1.`io.grpc.t0$c.f` @type ^`io.grpc.t0$d` @kind object;
  #L3615c0.  call temp:= `a`(v0, v2) @signature `Lio/grpc/t0$d;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind interface;
  #L3615c6.  v2:= temp @kind object;
  #L3615c8.  v0:= `@@com.google.common.base.Charsets.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L3615cc.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3615d2.  v2:= temp @kind object;
  #L3615d4.  return v2 @kind object;
}
