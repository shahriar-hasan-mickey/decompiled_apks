record `io.grpc.p$b` @kind class @AccessFlag FINAL {
}
global `io.grpc.p$c` `@@io.grpc.p$b.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/p$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e180.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L35e184.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L35e18a.  call temp:= `a`(v0) @signature `Lio/grpc/p$b;.a:(Ljava/util/concurrent/atomic/AtomicReference;)Lio/grpc/p$c;` @kind static;
  #L35e190.  v1:= temp @kind object;
  #L35e192.  `@@io.grpc.p$b.a` @type ^`io.grpc.p$c` := v1 @kind object;
  #L35e196.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L35e19c.  v0:= temp @kind object;
  #L35e19e.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L35e1a2.  if v0 == 0 then goto L35e1b8;
  #L35e1a6.  v1:= `@@io.grpc.p.c` @type ^`java.util.logging.Logger` @kind object;
  #L35e1aa.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L35e1ae.  v3:= "Storage override doesn't exist. Using default" @kind object;
  #L35e1b2.  call `log`(v1, v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L35e1b8.  return @kind void;
}
procedure `io.grpc.p$c` `a`(`java.util.concurrent.atomic.AtomicReference` v3 @kind object) @signature `Lio/grpc/p$b;.a:(Ljava/util/concurrent/atomic/AtomicReference;)Lio/grpc/p$c;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35e100.  v0:= "io.grpc.override.ContextStorageOverride" @kind object;
  #L35e104.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L35e10a.  v0:= temp @kind object;
  #L35e10c.  v1:= constclass @type ^`io.grpc.p$c` @kind object;
  #L35e110.  call temp:= `asSubclass`(v0, v1) @signature `Ljava/lang/Class;.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;` @kind virtual;
  #L35e116.  v0:= temp @kind object;
  #L35e118.  v1:= 0I;
  #L35e11a.  v2:= new `java.lang.Class`[v1];
  #L35e11e.  call temp:= `getConstructor`(v0, v2) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L35e124.  v0:= temp @kind object;
  #L35e126.  v1:= new `java.lang.Object`[v1];
  #L35e12a.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L35e130.  v0:= temp @kind object;
  #L35e132.  v0:= (`io.grpc.p$c`) v0 @kind object;
  #L35e136.  return v0 @kind object;
  #L35e138.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L35e13a.  v0:= new `java.lang.RuntimeException`;
  #L35e13e.  v1:= "Storage override failed to initialize" @kind object;
  #L35e142.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L35e148.  throw v0;
  #L35e14a.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L35e14c.  call `set`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L35e152.  v3:= new `io.grpc.h1`;
  #L35e156.  call `<init>`(v3) @signature `Lio/grpc/h1;.<init>:()V` @kind direct;
  #L35e15c.  return v3 @kind object;
  catch `java.lang.ClassNotFoundException` @[L35e100..L35e136] goto L35e14a;
  catch `java.lang.Exception` @[L35e100..L35e136] goto L35e138;
}
