record `io.grpc.i0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.nio.charset.Charset` `@@io.grpc.i0.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.common.io.BaseEncoding` `@@io.grpc.i0.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/i0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L35ffc0.  v0:= "US-ASCII" @kind object;
  #L35ffc4.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L35ffca.  v0:= temp @kind object;
  #L35ffcc.  `@@io.grpc.i0.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L35ffd0.  v0:= `@@io.grpc.t0.f` @type ^`com.google.common.io.BaseEncoding` @kind object;
  #L35ffd4.  `@@io.grpc.i0.b` @type ^`com.google.common.io.BaseEncoding` := v0 @kind object;
  #L35ffd8.  return @kind void;
}
procedure `int` `a`(`io.grpc.t0` v0 @kind object) @signature `Lio/grpc/i0;.a:(Lio/grpc/t0;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L35ff48.  call temp:= `h`(v0) @signature `Lio/grpc/t0;.h:()I` @kind virtual;
  #L35ff4e.  v0:= temp;
  #L35ff50.  return v0;
}
procedure `io.grpc.t0$g` `b`(`java.lang.String` v3 @kind object, `io.grpc.i0$a` v4 @kind object) @signature `Lio/grpc/i0;.b:(Ljava/lang/String;Lio/grpc/i0$a;)Lio/grpc/t0$g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35ff80.  v0:= 0I;
  #L35ff82.  if v3 == 0 then goto L35ffa4;
  #L35ff86.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L35ff8c.  v1:= temp;
  #L35ff8e.  if v1 != 0 then goto L35ffa4;
  #L35ff92.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L35ff98.  v1:= temp;
  #L35ff9a.  v2:= 58I;
  #L35ff9e.  if v1 != v2 then goto L35ffa4;
  #L35ffa2.  v0:= 1I;
  #L35ffa4.  call temp:= `g`(v3, v0, v4) @signature `Lio/grpc/t0$g;.g:(Ljava/lang/String;ZLio/grpc/t0$j;)Lio/grpc/t0$g;` @kind static;
  #L35ffaa.  v3:= temp @kind object;
  #L35ffac.  return v3 @kind object;
}
procedure `io.grpc.t0` `c`(`byte`[][] v1 @kind object) @signature `Lio/grpc/i0;.c:([[B)Lio/grpc/t0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35ff64.  v0:= new `io.grpc.t0`;
  #L35ff68.  call `<init>`(v0, v1) @signature `Lio/grpc/t0;.<init>:([[B)V` @kind direct;
  #L35ff6e.  return v0 @kind object;
}
procedure `byte`[][] `d`(`io.grpc.t0` v0 @kind object) @signature `Lio/grpc/i0;.d:(Lio/grpc/t0;)[[B` @AccessFlag PUBLIC_STATIC {
    temp;

  #L35ff2c.  call temp:= `q`(v0) @signature `Lio/grpc/t0;.q:()[[B` @kind virtual;
  #L35ff32.  v0:= temp @kind object;
  #L35ff34.  return v0 @kind object;
}
