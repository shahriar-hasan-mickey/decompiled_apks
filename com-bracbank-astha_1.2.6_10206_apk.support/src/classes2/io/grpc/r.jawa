record `io.grpc.r` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `io.grpc.r$c` `io.grpc.r.a` @AccessFlag PRIVATE_FINAL;
  `long` `io.grpc.r.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.r.c` @AccessFlag PRIVATE_VOLATILE;
}
global `io.grpc.r$b` `@@io.grpc.r.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@io.grpc.r.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@io.grpc.r.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@io.grpc.r.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L35e86c.  v0:= new `io.grpc.r$b`;
  #L35e870.  v1:= 0I;
  #L35e872.  call `<init>`(v0, v1) @signature `Lio/grpc/r$b;.<init>:(Lio/grpc/r$a;)V` @kind direct;
  #L35e878.  `@@io.grpc.r.d` @type ^`io.grpc.r$b` := v0 @kind object;
  #L35e87c.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35e880.  v1:= 36500L;
  #L35e886.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L35e88c.  v0:= temp @kind wide;
  #L35e88e.  `@@io.grpc.r.e` @type ^`long` := v0 @kind wide;
  #L35e892.  v0:= -v0 @kind long;
  #L35e894.  `@@io.grpc.r.f` @type ^`long` := v0 @kind wide;
  #L35e898.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35e89c.  v1:= 1L;
  #L35e8a0.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L35e8a6.  v0:= temp @kind wide;
  #L35e8a8.  `@@io.grpc.r.g` @type ^`long` := v0 @kind wide;
  #L35e8ac.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.r` v4 @kind this, `io.grpc.r$c` v5 @kind object, `long` v6 , `long` v8 , `boolean` v10 ) @signature `Lio/grpc/r;.<init>:(Lio/grpc/r$c;JJZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e8e8.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35e8ee.  v4.`io.grpc.r.a` @type ^`io.grpc.r$c` := v5 @kind object;
  #L35e8f2.  v0:= `@@io.grpc.r.e` @type ^`long` @kind wide;
  #L35e8f6.  v2:= `@@io.grpc.r.f` @type ^`long` @kind wide;
  #L35e8fa.  call temp:= `max`(v2, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L35e900.  v8:= temp @kind wide;
  #L35e902.  call temp:= `min`(v0, v8) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L35e908.  v8:= temp @kind wide;
  #L35e90a.  v6:= v6 + v8 @kind long;
  #L35e90c.  v4.`io.grpc.r.b` @type ^`long` := v6 @kind wide;
  #L35e910.  if v10 == 0 then goto L35e924;
  #L35e914.  v5:= 0L;
  #L35e918.  v7:= lcmp(v8, v5);
  #L35e91c.  if v7 > 0 then goto L35e924;
  #L35e920.  v5:= 1I;
  #L35e922.  goto L35e926;
  #L35e924.  v5:= 0I;
  #L35e926.  v4.`io.grpc.r.c` @type ^`boolean` := v5 @kind boolean;
  #L35e92a.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.r` v7 @kind this, `io.grpc.r$c` v8 @kind object, `long` v9 , `boolean` v11 ) @signature `Lio/grpc/r;.<init>:(Lio/grpc/r$c;JZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L35e8c0.  call temp:= `a`(v8) @signature `Lio/grpc/r$c;.a:()J` @kind virtual;
  #L35e8c6.  v2:= temp @kind wide;
  #L35e8c8.  v0:= v7 @kind object;
  #L35e8ca.  v1:= v8 @kind object;
  #L35e8cc.  v4:= v9 @kind wide;
  #L35e8ce.  v6:= v11;
  #L35e8d0.  call `<init>`(v0, v1, v2, v4, v6) @signature `Lio/grpc/r;.<init>:(Lio/grpc/r$c;JJZ)V` @kind direct;
  #L35e8d6.  return @kind void;
}
procedure `io.grpc.r` `a`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/grpc/r;.a:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35e694.  v0:= `@@io.grpc.r.d` @type ^`io.grpc.r$b` @kind object;
  #L35e698.  call temp:= `b`(v1, v3, v0) @signature `Lio/grpc/r;.b:(JLjava/util/concurrent/TimeUnit;Lio/grpc/r$c;)Lio/grpc/r;` @kind static;
  #L35e69e.  v1:= temp @kind object;
  #L35e6a0.  return v1 @kind object;
}
procedure `io.grpc.r` `b`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.grpc.r$c` v4 @kind object) @signature `Lio/grpc/r;.b:(JLjava/util/concurrent/TimeUnit;Lio/grpc/r$c;)Lio/grpc/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35e6b4.  v0:= "units" @kind object;
  #L35e6b8.  call temp:= `c`(v3, v0) @signature `Lio/grpc/r;.c:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L35e6be.  v0:= new `io.grpc.r`;
  #L35e6c2.  call temp:= `toNanos`(v3, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L35e6c8.  v1:= temp @kind wide;
  #L35e6ca.  v3:= 1I;
  #L35e6cc.  call `<init>`(v0, v4, v1, v3) @signature `Lio/grpc/r;.<init>:(Lio/grpc/r$c;JZ)V` @kind direct;
  #L35e6d2.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/r;.c:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L35e70c.  if v0 == 0 then goto L35e712;
  #L35e710.  return v0 @kind object;
  #L35e712.  v0:= new `java.lang.NullPointerException`;
  #L35e716.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35e71c.  v1:= temp @kind object;
  #L35e71e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35e724.  throw v0;
}
procedure `void` `d`(`io.grpc.r` v3 @kind this, `io.grpc.r` v4 @kind object) @signature `Lio/grpc/r;.d:(Lio/grpc/r;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L35e93c.  v0:= v3.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e940.  v1:= v4.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e944.  if v0 != v1 then goto L35e94a;
  #L35e948.  return @kind void;
  #L35e94a.  v0:= new `java.lang.AssertionError`;
  #L35e94e.  v1:= new `java.lang.StringBuilder`;
  #L35e952.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e958.  v2:= "Tickers (" @kind object;
  #L35e95c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e962.  v2:= v3.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e966.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e96c.  v2:= " and " @kind object;
  #L35e970.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e976.  v4:= v4.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e97a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e980.  v4:= ") don't match. Custom Ticker should only be used in tests!" @kind object;
  #L35e984.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e98a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e990.  v4:= temp @kind object;
  #L35e992.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L35e998.  throw v0;
}
procedure `int` `compareTo`(`io.grpc.r` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/r;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L35e630.  v1:= (`io.grpc.r`) v1 @kind object;
  #L35e634.  call temp:= `e`(v0, v1) @signature `Lio/grpc/r;.e:(Lio/grpc/r;)I` @kind virtual;
  #L35e63a.  v1:= temp;
  #L35e63c.  return v1;
}
procedure `int` `e`(`io.grpc.r` v4 @kind this, `io.grpc.r` v5 @kind object) @signature `Lio/grpc/r;.e:(Lio/grpc/r;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e5f4.  call `d`(v4, v5) @signature `Lio/grpc/r;.d:(Lio/grpc/r;)V` @kind direct;
  #L35e5fa.  v0:= v4.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e5fe.  v2:= v5.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e602.  v0:= v0 - v2 @kind long;
  #L35e604.  v2:= 0L;
  #L35e608.  v5:= lcmp(v0, v2);
  #L35e60c.  if v5 >= 0 then goto L35e614;
  #L35e610.  v5:= -1I;
  #L35e612.  return v5;
  #L35e614.  if v5 <= 0 then goto L35e61c;
  #L35e618.  v5:= 1I;
  #L35e61a.  return v5;
  #L35e61c.  v5:= 0I;
  #L35e61e.  return v5;
}
procedure `boolean` `equals`(`io.grpc.r` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/grpc/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L35e524.  v0:= 1I;
  #L35e526.  if v8 != v7 then goto L35e52c;
  #L35e52a.  return v0;
  #L35e52c.  v1:= instanceof @variable v8 @type ^`io.grpc.r` @kind boolean;
  #L35e530.  v2:= 0I;
  #L35e532.  if v1 != 0 then goto L35e538;
  #L35e536.  return v2;
  #L35e538.  v8:= (`io.grpc.r`) v8 @kind object;
  #L35e53c.  v1:= v7.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e540.  if v1 != 0 then goto L35e54e;
  #L35e544.  v1:= v8.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e548.  if v1 == 0 then goto L35e558;
  #L35e54c.  goto L35e556;
  #L35e54e.  v3:= v8.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e552.  if v1 == v3 then goto L35e558;
  #L35e556.  return v2;
  #L35e558.  v3:= v7.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e55c.  v5:= v8.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e560.  v8:= lcmp(v3, v5);
  #L35e564.  if v8 == 0 then goto L35e56a;
  #L35e568.  return v2;
  #L35e56a.  return v0;
}
procedure `boolean` `f`(`io.grpc.r` v4 @kind this, `io.grpc.r` v5 @kind object) @signature `Lio/grpc/r;.f:(Lio/grpc/r;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e57c.  call `d`(v4, v5) @signature `Lio/grpc/r;.d:(Lio/grpc/r;)V` @kind direct;
  #L35e582.  v0:= v4.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e586.  v2:= v5.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e58a.  v0:= v0 - v2 @kind long;
  #L35e58c.  v2:= 0L;
  #L35e590.  v5:= lcmp(v0, v2);
  #L35e594.  if v5 >= 0 then goto L35e59c;
  #L35e598.  v5:= 1I;
  #L35e59a.  goto L35e59e;
  #L35e59c.  v5:= 0I;
  #L35e59e.  return v5;
}
procedure `boolean` `g`(`io.grpc.r` v6 @kind this) @signature `Lio/grpc/r;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35e5b0.  v0:= v6.`io.grpc.r.c` @type ^`boolean` @kind boolean;
  #L35e5b4.  v1:= 1I;
  #L35e5b6.  if v0 != 0 then goto L35e5e2;
  #L35e5ba.  v2:= v6.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e5be.  v0:= v6.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e5c2.  call temp:= `a`(v0) @signature `Lio/grpc/r$c;.a:()J` @kind virtual;
  #L35e5c8.  v4:= temp @kind wide;
  #L35e5ca.  v2:= v2 - v4 @kind long;
  #L35e5cc.  v4:= 0L;
  #L35e5d0.  v0:= lcmp(v2, v4);
  #L35e5d4.  if v0 > 0 then goto L35e5de;
  #L35e5d8.  v6.`io.grpc.r.c` @type ^`boolean` := v1 @kind boolean;
  #L35e5dc.  goto L35e5e2;
  #L35e5de.  v0:= 0I;
  #L35e5e0.  return v0;
  #L35e5e2.  return v1;
}
procedure `io.grpc.r` `h`(`io.grpc.r` v1 @kind this, `io.grpc.r` v2 @kind object) @signature `Lio/grpc/r;.h:(Lio/grpc/r;)Lio/grpc/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e6e4.  call `d`(v1, v2) @signature `Lio/grpc/r;.d:(Lio/grpc/r;)V` @kind direct;
  #L35e6ea.  call temp:= `f`(v1, v2) @signature `Lio/grpc/r;.f:(Lio/grpc/r;)Z` @kind virtual;
  #L35e6f0.  v0:= temp;
  #L35e6f2.  if v0 == 0 then goto L35e6f8;
  #L35e6f6.  v2:= v1 @kind object;
  #L35e6f8.  return v2 @kind object;
}
procedure `int` `hashCode`(`io.grpc.r` v3 @kind this) @signature `Lio/grpc/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35e650.  v0:= 2I;
  #L35e652.  v0:= new `java.lang.Object`[v0];
  #L35e656.  v1:= v3.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e65a.  v2:= 0I;
  #L35e65c.  v0[v2]:= v1 @kind object;
  #L35e660.  v1:= v3.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e664.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L35e66a.  v1:= temp @kind object;
  #L35e66c.  v2:= 1I;
  #L35e66e.  v0[v2]:= v1 @kind object;
  #L35e672.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L35e678.  v0:= temp @kind object;
  #L35e67a.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L35e680.  v0:= temp;
  #L35e682.  return v0;
}
procedure `long` `i`(`io.grpc.r` v7 @kind this, `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/grpc/r;.i:(Ljava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L35e81c.  v0:= v7.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e820.  call temp:= `a`(v0) @signature `Lio/grpc/r$c;.a:()J` @kind virtual;
  #L35e826.  v0:= temp @kind wide;
  #L35e828.  v2:= v7.`io.grpc.r.c` @type ^`boolean` @kind boolean;
  #L35e82c.  if v2 != 0 then goto L35e848;
  #L35e830.  v2:= v7.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e834.  v2:= v2 - v0 @kind long;
  #L35e836.  v4:= 0L;
  #L35e83a.  v6:= lcmp(v2, v4);
  #L35e83e.  if v6 > 0 then goto L35e848;
  #L35e842.  v2:= 1I;
  #L35e844.  v7.`io.grpc.r.c` @type ^`boolean` := v2 @kind boolean;
  #L35e848.  v2:= v7.`io.grpc.r.b` @type ^`long` @kind wide;
  #L35e84c.  v2:= v2 - v0 @kind long;
  #L35e84e.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35e852.  call temp:= `convert`(v8, v2, v0) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L35e858.  v0:= temp @kind wide;
  #L35e85a.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`io.grpc.r` v10 @kind this) @signature `Lio/grpc/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35e738.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35e73c.  call temp:= `i`(v10, v0) @signature `Lio/grpc/r;.i:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L35e742.  v0:= temp @kind wide;
  #L35e744.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L35e74a.  v2:= temp @kind wide;
  #L35e74c.  v4:= `@@io.grpc.r.g` @type ^`long` @kind wide;
  #L35e750.  v2:= v2 / v4 @kind long;
  #L35e752.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L35e758.  v6:= temp @kind wide;
  #L35e75a.  v6:= v6 %% v4 @kind long;
  #L35e75c.  v4:= new `java.lang.StringBuilder`;
  #L35e760.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e766.  v8:= 0L;
  #L35e76a.  v5:= lcmp(v0, v8);
  #L35e76e.  if v5 >= 0 then goto L35e77c;
  #L35e772.  v0:= 45I;
  #L35e776.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e77c.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e782.  v0:= lcmp(v6, v8);
  #L35e786.  if v0 <= 0 then goto L35e7b4;
  #L35e78a.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L35e78e.  v1:= 1I;
  #L35e790.  v1:= new `java.lang.Object`[v1];
  #L35e794.  v2:= 0I;
  #L35e796.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L35e79c.  v3:= temp @kind object;
  #L35e79e.  v1[v2]:= v3 @kind object;
  #L35e7a2.  v2:= ".%09d" @kind object;
  #L35e7a6.  call temp:= `format`(v0, v2, v1) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35e7ac.  v0:= temp @kind object;
  #L35e7ae.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e7b4.  v0:= "s from now" @kind object;
  #L35e7b8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e7be.  v0:= v10.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e7c2.  v1:= `@@io.grpc.r.d` @type ^`io.grpc.r$b` @kind object;
  #L35e7c6.  if v0 == v1 then goto L35e800;
  #L35e7ca.  v0:= new `java.lang.StringBuilder`;
  #L35e7ce.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e7d4.  v1:= " (ticker=" @kind object;
  #L35e7d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e7de.  v1:= v10.`io.grpc.r.a` @type ^`io.grpc.r$c` @kind object;
  #L35e7e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e7e8.  v1:= ")" @kind object;
  #L35e7ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e7f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e7f8.  v0:= temp @kind object;
  #L35e7fa.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e800.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e806.  v0:= temp @kind object;
  #L35e808.  return v0 @kind object;
}
