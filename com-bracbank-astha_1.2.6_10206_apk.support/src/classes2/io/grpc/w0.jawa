record `io.grpc.w0` @kind class @AccessFlag PUBLIC_FINAL {
  `io.grpc.u0$d` `io.grpc.w0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `io.grpc.w0.b` @AccessFlag PRIVATE;
  `java.util.LinkedHashSet` `io.grpc.w0.c` @AccessFlag PRIVATE_FINAL;
  `com.google.common.collect.ImmutableMap` `io.grpc.w0.d` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@io.grpc.w0.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.w0` `@@io.grpc.w0.f` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lio/grpc/w0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3632f0.  v0:= constclass @type ^`io.grpc.w0` @kind object;
  #L3632f4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3632fa.  v0:= temp @kind object;
  #L3632fc.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L363302.  v0:= temp @kind object;
  #L363304.  `@@io.grpc.w0.e` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L363308.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.w0` v2 @kind this) @signature `Lio/grpc/w0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L36331c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L363322.  v0:= new `io.grpc.w0$b`;
  #L363326.  v1:= 0I;
  #L363328.  call `<init>`(v0, v2, v1) @signature `Lio/grpc/w0$b;.<init>:(Lio/grpc/w0;Lio/grpc/w0$a;)V` @kind direct;
  #L36332e.  v2.`io.grpc.w0.a` @type ^`io.grpc.u0$d` := v0 @kind object;
  #L363332.  v0:= "unknown" @kind object;
  #L363336.  v2.`io.grpc.w0.b` @type ^`java.lang.String` := v0 @kind object;
  #L36333a.  v0:= new `java.util.LinkedHashSet`;
  #L36333e.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L363344.  v2.`io.grpc.w0.c` @type ^`java.util.LinkedHashSet` := v0 @kind object;
  #L363348.  call temp:= `of`() @signature `Lcom/google/common/collect/ImmutableMap;.of:()Lcom/google/common/collect/ImmutableMap;` @kind static;
  #L36334e.  v0:= temp @kind object;
  #L363350.  v2.`io.grpc.w0.d` @type ^`com.google.common.collect.ImmutableMap` := v0 @kind object;
  #L363354.  return @kind void;
}
procedure `java.lang.String` `a`(`io.grpc.w0` v0 @kind object) @signature `Lio/grpc/w0;.a:(Lio/grpc/w0;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L363258.  v0:= v0.`io.grpc.w0.b` @type ^`java.lang.String` @kind object;
  #L36325c.  return v0 @kind object;
}
procedure `void` `b`(`io.grpc.w0` v2 @kind this, `io.grpc.v0` v3 @kind object) @signature `Lio/grpc/w0;.b:(Lio/grpc/v0;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L363368.  @monitorenter v2
  #L36336a.  call temp:= `d`(v3) @signature `Lio/grpc/v0;.d:()Z` @kind virtual;
  #L363370.  v0:= temp;
  #L363372.  v1:= "isAvailable() returned false" @kind object;
  #L363376.  call `checkArgument`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L36337c.  v0:= v2.`io.grpc.w0.c` @type ^`java.util.LinkedHashSet` @kind object;
  #L363380.  call temp:= `add`(v0, v3) @signature `Ljava/util/LinkedHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L363386.  @monitorexit v2
  #L363388.  return @kind void;
  #L36338a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36338c.  @monitorexit v2
  #L36338e.  throw v3;
  catch `java.lang.Throwable` @[L36336a..L363386] goto L36338a;
}
procedure `io.grpc.w0` `d`() @signature `Lio/grpc/w0;.d:()Lio/grpc/w0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L363160.  v0:= constclass @type ^`io.grpc.v0` @kind object;
  #L363164.  v1:= constclass @type ^`io.grpc.w0` @kind object;
  #L363168.  @monitorenter v1
  #L36316a.  v2:= `@@io.grpc.w0.f` @type ^`io.grpc.w0` @kind object;
  #L36316e.  if v2 != 0 then goto L36322c;
  #L363172.  call temp:= `e`() @signature `Lio/grpc/w0;.e:()Ljava/util/List;` @kind static;
  #L363178.  v2:= temp @kind object;
  #L36317a.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L363180.  v3:= temp @kind object;
  #L363182.  v4:= new `io.grpc.w0$c`;
  #L363186.  v5:= 0I;
  #L363188.  call `<init>`(v4, v5) @signature `Lio/grpc/w0$c;.<init>:(Lio/grpc/w0$a;)V` @kind direct;
  #L36318e.  call temp:= `e`(v0, v2, v3, v4) @signature `Lio/grpc/e1;.e:(Ljava/lang/Class;Ljava/lang/Iterable;Ljava/lang/ClassLoader;Lio/grpc/e1$b;)Ljava/util/List;` @kind static;
  #L363194.  v0:= temp @kind object;
  #L363196.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L36319c.  v2:= temp;
  #L36319e.  if v2 == 0 then goto L3631b0;
  #L3631a2.  v2:= `@@io.grpc.w0.e` @type ^`java.util.logging.Logger` @kind object;
  #L3631a6.  v3:= "No NameResolverProviders found via ServiceLoader, including for DNS. This is probably due to a broken build. If using ProGuard, check your configuration" @kind object;
  #L3631aa.  call `warning`(v2, v3) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L3631b0.  v2:= new `io.grpc.w0`;
  #L3631b4.  call `<init>`(v2) @signature `Lio/grpc/w0;.<init>:()V` @kind direct;
  #L3631ba.  `@@io.grpc.w0.f` @type ^`io.grpc.w0` := v2 @kind object;
  #L3631be.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3631c4.  v0:= temp @kind object;
  #L3631c6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3631cc.  v2:= temp;
  #L3631ce.  if v2 == 0 then goto L363222;
  #L3631d2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3631d8.  v2:= temp @kind object;
  #L3631da.  v2:= (`io.grpc.v0`) v2 @kind object;
  #L3631de.  v3:= `@@io.grpc.w0.e` @type ^`java.util.logging.Logger` @kind object;
  #L3631e2.  v4:= new `java.lang.StringBuilder`;
  #L3631e6.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3631ec.  v5:= "Service loader found " @kind object;
  #L3631f0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3631f6.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3631fc.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L363202.  v4:= temp @kind object;
  #L363204.  call `fine`(v3, v4) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L36320a.  call temp:= `d`(v2) @signature `Lio/grpc/v0;.d:()Z` @kind virtual;
  #L363210.  v3:= temp;
  #L363212.  if v3 == 0 then goto L3631c6;
  #L363216.  v3:= `@@io.grpc.w0.f` @type ^`io.grpc.w0` @kind object;
  #L36321a.  call `b`(v3, v2) @signature `Lio/grpc/w0;.b:(Lio/grpc/v0;)V` @kind direct;
  #L363220.  goto L3631c6;
  #L363222.  v0:= `@@io.grpc.w0.f` @type ^`io.grpc.w0` @kind object;
  #L363226.  call `g`(v0) @signature `Lio/grpc/w0;.g:()V` @kind direct;
  #L36322c.  v0:= `@@io.grpc.w0.f` @type ^`io.grpc.w0` @kind object;
  #L363230.  @monitorexit v1
  #L363232.  return v0 @kind object;
  #L363234.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L363236.  @monitorexit v1
  #L363238.  throw v0;
  catch `java.lang.Throwable` @[L36316a..L363230] goto L363234;
}
procedure `java.util.List` `e`() @signature `Lio/grpc/w0;.e:()Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L363270.  v0:= new `java.util.ArrayList`;
  #L363274.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36327a.  v1:= constclass @type ^`io.grpc.internal.z` @kind object;
  #L36327e.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L363284.  goto L36329a;
  #L363286.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L363288.  v2:= `@@io.grpc.w0.e` @type ^`java.util.logging.Logger` @kind object;
  #L36328c.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L363290.  v4:= "Unable to find DNS NameResolver" @kind object;
  #L363294.  call `log`(v2, v3, v4, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L36329a.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3632a0.  v0:= temp @kind object;
  #L3632a2.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L36327a..L363284] goto L363286;
}
procedure `void` `g`(`io.grpc.w0` v8 @kind this) @signature `Lio/grpc/w0;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3633ac.  @monitorenter v8
  #L3633ae.  v0:= new `java.util.HashMap`;
  #L3633b2.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3633b8.  v1:= -2147483648I;
  #L3633bc.  v2:= "unknown" @kind object;
  #L3633c0.  v3:= v8.`io.grpc.w0.c` @type ^`java.util.LinkedHashSet` @kind object;
  #L3633c4.  call temp:= `iterator`(v3) @signature `Ljava/util/LinkedHashSet;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3633ca.  v3:= temp @kind object;
  #L3633cc.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3633d2.  v4:= temp;
  #L3633d4.  if v4 == 0 then goto L363434;
  #L3633d8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3633de.  v4:= temp @kind object;
  #L3633e0.  v4:= (`io.grpc.v0`) v4 @kind object;
  #L3633e4.  call temp:= `c`(v4) @signature `Lio/grpc/v0;.c:()Ljava/lang/String;` @kind virtual;
  #L3633ea.  v5:= temp @kind object;
  #L3633ec.  call temp:= `get`(v0, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3633f2.  v6:= temp @kind object;
  #L3633f4.  v6:= (`io.grpc.v0`) v6 @kind object;
  #L3633f8.  if v6 == 0 then goto L363410;
  #L3633fc.  call temp:= `e`(v6) @signature `Lio/grpc/v0;.e:()I` @kind virtual;
  #L363402.  v6:= temp;
  #L363404.  call temp:= `e`(v4) @signature `Lio/grpc/v0;.e:()I` @kind virtual;
  #L36340a.  v7:= temp;
  #L36340c.  if v6 >= v7 then goto L363416;
  #L363410.  call temp:= `put`(v0, v5, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L363416.  call temp:= `e`(v4) @signature `Lio/grpc/v0;.e:()I` @kind virtual;
  #L36341c.  v5:= temp;
  #L36341e.  if v1 >= v5 then goto L3633cc;
  #L363422.  call temp:= `e`(v4) @signature `Lio/grpc/v0;.e:()I` @kind virtual;
  #L363428.  v1:= temp;
  #L36342a.  call temp:= `c`(v4) @signature `Lio/grpc/v0;.c:()Ljava/lang/String;` @kind virtual;
  #L363430.  v2:= temp @kind object;
  #L363432.  goto L3633cc;
  #L363434.  call temp:= `copyOf`(v0) @signature `Lcom/google/common/collect/ImmutableMap;.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;` @kind static;
  #L36343a.  v0:= temp @kind object;
  #L36343c.  v8.`io.grpc.w0.d` @type ^`com.google.common.collect.ImmutableMap` := v0 @kind object;
  #L363440.  v8.`io.grpc.w0.b` @type ^`java.lang.String` := v2 @kind object;
  #L363444.  @monitorexit v8
  #L363446.  return @kind void;
  #L363448.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36344a.  @monitorexit v8
  #L36344c.  throw v0;
  catch `java.lang.Throwable` @[L3633ae..L363444] goto L363448;
}
procedure `io.grpc.u0$d` `c`(`io.grpc.w0` v1 @kind this) @signature `Lio/grpc/w0;.c:()Lio/grpc/u0$d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L363148.  v0:= v1.`io.grpc.w0.a` @type ^`io.grpc.u0$d` @kind object;
  #L36314c.  return v0 @kind object;
}
procedure `java.util.Map` `f`(`io.grpc.w0` v1 @kind this) @signature `Lio/grpc/w0;.f:()Ljava/util/Map;` @AccessFlag  {
    temp;
    v0;

  #L3632c4.  @monitorenter v1
  #L3632c6.  v0:= v1.`io.grpc.w0.d` @type ^`com.google.common.collect.ImmutableMap` @kind object;
  #L3632ca.  @monitorexit v1
  #L3632cc.  return v0 @kind object;
  #L3632ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3632d0.  @monitorexit v1
  #L3632d2.  throw v0;
  catch `java.lang.Throwable` @[L3632c6..L3632ca] goto L3632ce;
}
