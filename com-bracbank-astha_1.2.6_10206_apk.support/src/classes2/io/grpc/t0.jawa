record `io.grpc.t0` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object`[] `io.grpc.t0.a` @AccessFlag PRIVATE;
  `int` `io.grpc.t0.b` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@io.grpc.t0.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.t0$e` `@@io.grpc.t0.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.grpc.t0$d` `@@io.grpc.t0.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.common.io.BaseEncoding` `@@io.grpc.t0.f` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/t0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L361f14.  v0:= constclass @type ^`io.grpc.t0` @kind object;
  #L361f18.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L361f1e.  v0:= temp @kind object;
  #L361f20.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L361f26.  v0:= temp @kind object;
  #L361f28.  `@@io.grpc.t0.c` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L361f2c.  v0:= new `io.grpc.t0$a`;
  #L361f30.  call `<init>`(v0) @signature `Lio/grpc/t0$a;.<init>:()V` @kind direct;
  #L361f36.  `@@io.grpc.t0.d` @type ^`io.grpc.t0$e` := v0 @kind object;
  #L361f3a.  v0:= new `io.grpc.t0$b`;
  #L361f3e.  call `<init>`(v0) @signature `Lio/grpc/t0$b;.<init>:()V` @kind direct;
  #L361f44.  `@@io.grpc.t0.e` @type ^`io.grpc.t0$d` := v0 @kind object;
  #L361f48.  call temp:= `base64`() @signature `Lcom/google/common/io/BaseEncoding;.base64:()Lcom/google/common/io/BaseEncoding;` @kind static;
  #L361f4e.  v0:= temp @kind object;
  #L361f50.  call temp:= `omitPadding`(v0) @signature `Lcom/google/common/io/BaseEncoding;.omitPadding:()Lcom/google/common/io/BaseEncoding;` @kind virtual;
  #L361f56.  v0:= temp @kind object;
  #L361f58.  `@@io.grpc.t0.f` @type ^`com.google.common.io.BaseEncoding` := v0 @kind object;
  #L361f5c.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.t0` v0 @kind this) @signature `Lio/grpc/t0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L361f70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L361f76.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.t0` v0 @kind this, `int` v1 , `java.lang.Object`[] v2 @kind object) @signature `Lio/grpc/t0;.<init>:(I[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L361fc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L361fc6.  v0.`io.grpc.t0.b` @type ^`int` := v1;
  #L361fca.  v0.`io.grpc.t0.a` @type ^`java.lang.Object`[] := v2 @kind object;
  #L361fce.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.t0` v0 @kind this, `int` v1 , `byte`[][] v2 @kind object) @signature `Lio/grpc/t0;.<init>:(I[[B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L361fa8.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/t0;.<init>:(I[Ljava/lang/Object;)V` @kind direct;
  #L361fae.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.t0` v1 @kind this, `byte`[][] v2 @kind object) @signature `Lio/grpc/t0;.<init>:([[B)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L361f88.  v0:= length @variable v2;
  #L361f8a.  v0:= v0 / 2;
  #L361f8e.  call `<init>`(v1, v0, v2) @signature `Lio/grpc/t0;.<init>:(I[[B)V` @kind direct;
  #L361f94.  return @kind void;
}
procedure `java.util.logging.Logger` `a`() @signature `Lio/grpc/t0;.a:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L361efc.  v0:= `@@io.grpc.t0.c` @type ^`java.util.logging.Logger` @kind object;
  #L361f00.  return v0 @kind object;
}
procedure `byte`[] `b`(`java.io.InputStream` v0 @kind object) @signature `Lio/grpc/t0;.b:(Ljava/io/InputStream;)[B` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L361bbc.  call temp:= `r`(v0) @signature `Lio/grpc/t0;.r:(Ljava/io/InputStream;)[B` @kind static;
  #L361bc2.  v0:= temp @kind object;
  #L361bc4.  return v0 @kind object;
}
procedure `boolean` `c`(`io.grpc.t0` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lio/grpc/t0;.c:([B[B)Z` @AccessFlag PRIVATE {
    temp;

  #L361b80.  call temp:= `equals`(v1, v2) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L361b86.  v1:= temp;
  #L361b88.  return v1;
}
procedure `int` `d`(`io.grpc.t0` v1 @kind this) @signature `Lio/grpc/t0;.d:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L361cd8.  v0:= v1.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L361cdc.  if v0 == 0 then goto L361ce4;
  #L361ce0.  v0:= length @variable v0;
  #L361ce2.  goto L361ce6;
  #L361ce4.  v0:= 0I;
  #L361ce6.  return v0;
}
procedure `void` `f`(`io.grpc.t0` v3 @kind this, `int` v4 ) @signature `Lio/grpc/t0;.f:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L36206c.  v4:= new `java.lang.Object`[v4];
  #L362070.  call temp:= `i`(v3) @signature `Lio/grpc/t0;.i:()Z` @kind direct;
  #L362076.  v0:= temp;
  #L362078.  if v0 != 0 then goto L362090;
  #L36207c.  v0:= v3.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L362080.  call temp:= `k`(v3) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L362086.  v1:= temp;
  #L362088.  v2:= 0I;
  #L36208a.  call `arraycopy`(v0, v2, v4, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L362090.  v3.`io.grpc.t0.a` @type ^`java.lang.Object`[] := v4 @kind object;
  #L362094.  return @kind void;
}
procedure `boolean` `i`(`io.grpc.t0` v1 @kind this) @signature `Lio/grpc/t0;.i:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L361b9c.  v0:= v1.`io.grpc.t0.b` @type ^`int`;
  #L361ba0.  if v0 != 0 then goto L361ba8;
  #L361ba4.  v0:= 1I;
  #L361ba6.  goto L361baa;
  #L361ba8.  v0:= 0I;
  #L361baa.  return v0;
}
procedure `int` `k`(`io.grpc.t0` v1 @kind this) @signature `Lio/grpc/t0;.k:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L361d10.  v0:= v1.`io.grpc.t0.b` @type ^`int`;
  #L361d14.  v0:= v0 * 2;
  #L361d18.  return v0;
}
procedure `void` `l`(`io.grpc.t0` v2 @kind this) @signature `Lio/grpc/t0;.l:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3620a8.  call temp:= `k`(v2) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L3620ae.  v0:= temp;
  #L3620b0.  if v0 == 0 then goto L3620c8;
  #L3620b4.  call temp:= `k`(v2) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L3620ba.  v0:= temp;
  #L3620bc.  call temp:= `d`(v2) @signature `Lio/grpc/t0;.d:()I` @kind direct;
  #L3620c2.  v1:= temp;
  #L3620c4.  if v0 != v1 then goto L3620e6;
  #L3620c8.  call temp:= `k`(v2) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L3620ce.  v0:= temp;
  #L3620d0.  v0:= v0 * 2;
  #L3620d4.  v1:= 8I;
  #L3620d8.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3620de.  v0:= temp;
  #L3620e0.  call `f`(v2, v0) @signature `Lio/grpc/t0;.f:(I)V` @kind direct;
  #L3620e6.  return @kind void;
}
procedure `void` `n`(`io.grpc.t0` v1 @kind this, `int` v2 , `byte`[] v3 @kind object) @signature `Lio/grpc/t0;.n:(I[B)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L362188.  v0:= v1.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L36218c.  v2:= v2 * 2;
  #L362190.  v0[v2]:= v3 @kind object;
  #L362194.  return @kind void;
}
procedure `byte`[] `o`(`io.grpc.t0` v1 @kind this, `int` v2 ) @signature `Lio/grpc/t0;.o:(I)[B` @AccessFlag PRIVATE {
    temp;
    v0;

  #L361bd8.  v0:= v1.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L361bdc.  v2:= v2 * 2;
  #L361be0.  v2:= v0[v2] @kind object;
  #L361be4.  v2:= (`byte`[]) v2 @kind object;
  #L361be8.  return v2 @kind object;
}
procedure `byte`[] `r`(`java.io.InputStream` v2 @kind object) @signature `Lio/grpc/t0;.r:(Ljava/io/InputStream;)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L361bfc.  call temp:= `toByteArray`(v2) @signature `Lcom/google/common/io/ByteStreams;.toByteArray:(Ljava/io/InputStream;)[B` @kind static;
  #L361c02.  v2:= temp @kind object;
  #L361c04.  return v2 @kind object;
  #L361c06.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L361c08.  v0:= new `java.lang.RuntimeException`;
  #L361c0c.  v1:= "failure reading serialized stream" @kind object;
  #L361c10.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L361c16.  throw v0;
  catch `java.io.IOException` @[L361bfc..L361c04] goto L361c06;
}
procedure `java.lang.Object` `s`(`io.grpc.t0` v1 @kind this, `int` v2 ) @signature `Lio/grpc/t0;.s:(I)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L361d78.  v0:= v1.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L361d7c.  v2:= v2 * 2;
  #L361d80.  v2:= v2 + 1;
  #L361d84.  v2:= v0[v2] @kind object;
  #L361d88.  return v2 @kind object;
}
procedure `void` `t`(`io.grpc.t0` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/grpc/t0;.t:(ILjava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L362248.  v0:= v1.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L36224c.  v0:= instanceof @variable v0 @type ^`byte`[][] @kind boolean;
  #L362250.  if v0 == 0 then goto L362262;
  #L362254.  call temp:= `d`(v1) @signature `Lio/grpc/t0;.d:()I` @kind direct;
  #L36225a.  v0:= temp;
  #L36225c.  call `f`(v1, v0) @signature `Lio/grpc/t0;.f:(I)V` @kind direct;
  #L362262.  v0:= v1.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L362266.  v2:= v2 * 2;
  #L36226a.  v2:= v2 + 1;
  #L36226e.  v0[v2]:= v3 @kind object;
  #L362272.  return @kind void;
}
procedure `void` `u`(`io.grpc.t0` v1 @kind this, `int` v2 , `byte`[] v3 @kind object) @signature `Lio/grpc/t0;.u:(I[B)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L362224.  v0:= v1.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L362228.  v2:= v2 * 2;
  #L36222c.  v2:= v2 + 1;
  #L362230.  v0[v2]:= v3 @kind object;
  #L362234.  return @kind void;
}
procedure `byte`[] `v`(`io.grpc.t0` v1 @kind this, `int` v2 ) @signature `Lio/grpc/t0;.v:(I)[B` @AccessFlag PRIVATE {
    temp;
    v0;

  #L361c38.  call temp:= `s`(v1, v2) @signature `Lio/grpc/t0;.s:(I)Ljava/lang/Object;` @kind direct;
  #L361c3e.  v2:= temp @kind object;
  #L361c40.  v0:= instanceof @variable v2 @type ^`byte`[] @kind boolean;
  #L361c44.  if v0 == 0 then goto L361c4e;
  #L361c48.  v2:= (`byte`[]) v2 @kind object;
  #L361c4c.  return v2 @kind object;
  #L361c4e.  v2:= (`io.grpc.t0$h`) v2 @kind object;
  #L361c52.  call temp:= `c`(v2) @signature `Lio/grpc/t0$h;.c:()[B` @kind virtual;
  #L361c58.  v2:= temp @kind object;
  #L361c5a.  return v2 @kind object;
}
procedure `java.lang.Object` `w`(`io.grpc.t0` v1 @kind this, `int` v2 , `io.grpc.t0$g` v3 @kind object) @signature `Lio/grpc/t0;.w:(ILio/grpc/t0$g;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L361d9c.  call temp:= `s`(v1, v2) @signature `Lio/grpc/t0;.s:(I)Ljava/lang/Object;` @kind direct;
  #L361da2.  v2:= temp @kind object;
  #L361da4.  v0:= instanceof @variable v2 @type ^`byte`[] @kind boolean;
  #L361da8.  if v0 == 0 then goto L361dba;
  #L361dac.  v2:= (`byte`[]) v2 @kind object;
  #L361db0.  call temp:= `h`(v3, v2) @signature `Lio/grpc/t0$g;.h:([B)Ljava/lang/Object;` @kind virtual;
  #L361db6.  v2:= temp @kind object;
  #L361db8.  return v2 @kind object;
  #L361dba.  v2:= (`io.grpc.t0$h`) v2 @kind object;
  #L361dbe.  call temp:= `d`(v2, v3) @signature `Lio/grpc/t0$h;.d:(Lio/grpc/t0$g;)Ljava/lang/Object;` @kind virtual;
  #L361dc4.  v2:= temp @kind object;
  #L361dc6.  return v2 @kind object;
}
procedure `void` `e`(`io.grpc.t0` v4 @kind this, `io.grpc.t0$g` v5 @kind object) @signature `Lio/grpc/t0;.e:(Lio/grpc/t0$g;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L361fe0.  call temp:= `i`(v4) @signature `Lio/grpc/t0;.i:()Z` @kind direct;
  #L361fe6.  v0:= temp;
  #L361fe8.  if v0 == 0 then goto L361fee;
  #L361fec.  return @kind void;
  #L361fee.  v0:= 0I;
  #L361ff0.  v1:= 0I;
  #L361ff2.  v2:= v4.`io.grpc.t0.b` @type ^`int`;
  #L361ff6.  if v0 >= v2 then goto L36203e;
  #L361ffa.  call temp:= `a`(v5) @signature `Lio/grpc/t0$g;.a:()[B` @kind virtual;
  #L362000.  v2:= temp @kind object;
  #L362002.  call temp:= `o`(v4, v0) @signature `Lio/grpc/t0;.o:(I)[B` @kind direct;
  #L362008.  v3:= temp @kind object;
  #L36200a.  call temp:= `c`(v4, v2, v3) @signature `Lio/grpc/t0;.c:([B[B)Z` @kind direct;
  #L362010.  v2:= temp;
  #L362012.  if v2 == 0 then goto L362018;
  #L362016.  goto L362038;
  #L362018.  call temp:= `o`(v4, v0) @signature `Lio/grpc/t0;.o:(I)[B` @kind direct;
  #L36201e.  v2:= temp @kind object;
  #L362020.  call `n`(v4, v1, v2) @signature `Lio/grpc/t0;.n:(I[B)V` @kind direct;
  #L362026.  call temp:= `s`(v4, v0) @signature `Lio/grpc/t0;.s:(I)Ljava/lang/Object;` @kind direct;
  #L36202c.  v2:= temp @kind object;
  #L36202e.  call `t`(v4, v1, v2) @signature `Lio/grpc/t0;.t:(ILjava/lang/Object;)V` @kind direct;
  #L362034.  v1:= v1 + 1;
  #L362038.  v0:= v0 + 1;
  #L36203c.  goto L361ff2;
  #L36203e.  v5:= v4.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L362042.  v0:= v1 * 2;
  #L362046.  call temp:= `k`(v4) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L36204c.  v2:= temp;
  #L36204e.  v3:= 0I;
  #L362050.  call `fill`(v5, v0, v2, v3) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L362056.  v4.`io.grpc.t0.b` @type ^`int` := v1;
  #L36205a.  return @kind void;
}
procedure `java.lang.Object` `g`(`io.grpc.t0` v3 @kind this, `io.grpc.t0$g` v4 @kind object) @signature `Lio/grpc/t0;.g:(Lio/grpc/t0$g;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L361d2c.  v0:= v3.`io.grpc.t0.b` @type ^`int`;
  #L361d30.  v0:= v0 + -1;
  #L361d34.  if v0 < 0 then goto L361d64;
  #L361d38.  call temp:= `a`(v4) @signature `Lio/grpc/t0$g;.a:()[B` @kind virtual;
  #L361d3e.  v1:= temp @kind object;
  #L361d40.  call temp:= `o`(v3, v0) @signature `Lio/grpc/t0;.o:(I)[B` @kind direct;
  #L361d46.  v2:= temp @kind object;
  #L361d48.  call temp:= `c`(v3, v1, v2) @signature `Lio/grpc/t0;.c:([B[B)Z` @kind direct;
  #L361d4e.  v1:= temp;
  #L361d50.  if v1 == 0 then goto L361d5e;
  #L361d54.  call temp:= `w`(v3, v0, v4) @signature `Lio/grpc/t0;.w:(ILio/grpc/t0$g;)Ljava/lang/Object;` @kind direct;
  #L361d5a.  v4:= temp @kind object;
  #L361d5c.  return v4 @kind object;
  #L361d5e.  v0:= v0 + -1;
  #L361d62.  goto L361d34;
  #L361d64.  v4:= 0I;
  #L361d66.  return v4 @kind object;
}
procedure `int` `h`(`io.grpc.t0` v1 @kind this) @signature `Lio/grpc/t0;.h:()I` @AccessFlag  {
    temp;
    v0;

  #L361cf8.  v0:= v1.`io.grpc.t0.b` @type ^`int`;
  #L361cfc.  return v0;
}
procedure `java.util.Set` `j`(`io.grpc.t0` v5 @kind this) @signature `Lio/grpc/t0;.j:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L361e94.  call temp:= `i`(v5) @signature `Lio/grpc/t0;.i:()Z` @kind direct;
  #L361e9a.  v0:= temp;
  #L361e9c.  if v0 == 0 then goto L361eaa;
  #L361ea0.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L361ea6.  v0:= temp @kind object;
  #L361ea8.  return v0 @kind object;
  #L361eaa.  v0:= new `java.util.HashSet`;
  #L361eae.  v1:= v5.`io.grpc.t0.b` @type ^`int`;
  #L361eb2.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L361eb8.  v1:= 0I;
  #L361eba.  v2:= 0I;
  #L361ebc.  v3:= v5.`io.grpc.t0.b` @type ^`int`;
  #L361ec0.  if v2 >= v3 then goto L361ee2;
  #L361ec4.  v3:= new `java.lang.String`;
  #L361ec8.  call temp:= `o`(v5, v2) @signature `Lio/grpc/t0;.o:(I)[B` @kind direct;
  #L361ece.  v4:= temp @kind object;
  #L361ed0.  call `<init>`(v3, v4, v1) @signature `Ljava/lang/String;.<init>:([BI)V` @kind direct;
  #L361ed6.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L361edc.  v2:= v2 + 1;
  #L361ee0.  goto L361ebc;
  #L361ee2.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L361ee8.  v0:= temp @kind object;
  #L361eea.  return v0 @kind object;
}
procedure `void` `m`(`io.grpc.t0` v5 @kind this, `io.grpc.t0` v6 @kind object) @signature `Lio/grpc/t0;.m:(Lio/grpc/t0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3620f8.  call temp:= `i`(v6) @signature `Lio/grpc/t0;.i:()Z` @kind direct;
  #L3620fe.  v0:= temp;
  #L362100.  if v0 == 0 then goto L362106;
  #L362104.  return @kind void;
  #L362106.  call temp:= `d`(v5) @signature `Lio/grpc/t0;.d:()I` @kind direct;
  #L36210c.  v0:= temp;
  #L36210e.  call temp:= `k`(v5) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L362114.  v1:= temp;
  #L362116.  v0:= v0 - v1 @kind int;
  #L362118.  call temp:= `i`(v5) @signature `Lio/grpc/t0;.i:()Z` @kind direct;
  #L36211e.  v1:= temp;
  #L362120.  if v1 != 0 then goto L362130;
  #L362124.  call temp:= `k`(v6) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L36212a.  v1:= temp;
  #L36212c.  if v0 >= v1 then goto L362148;
  #L362130.  call temp:= `k`(v5) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L362136.  v0:= temp;
  #L362138.  call temp:= `k`(v6) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L36213e.  v1:= temp;
  #L362140.  v0:= v0 + v1 @kind int;
  #L362142.  call `f`(v5, v0) @signature `Lio/grpc/t0;.f:(I)V` @kind direct;
  #L362148.  v0:= v6.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L36214c.  v1:= 0I;
  #L36214e.  v2:= v5.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L362152.  call temp:= `k`(v5) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L362158.  v3:= temp;
  #L36215a.  call temp:= `k`(v6) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L362160.  v4:= temp;
  #L362162.  call `arraycopy`(v0, v1, v2, v3, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L362168.  v0:= v5.`io.grpc.t0.b` @type ^`int`;
  #L36216c.  v6:= v6.`io.grpc.t0.b` @type ^`int`;
  #L362170.  v0:= v0 + v6 @kind int;
  #L362172.  v5.`io.grpc.t0.b` @type ^`int` := v0;
  #L362176.  return @kind void;
}
procedure `void` `p`(`io.grpc.t0` v2 @kind this, `io.grpc.t0$g` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/grpc/t0;.p:(Lio/grpc/t0$g;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3621a8.  v0:= "key" @kind object;
  #L3621ac.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3621b2.  v0:= "value" @kind object;
  #L3621b6.  call temp:= `checkNotNull`(v4, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3621bc.  call `l`(v2) @signature `Lio/grpc/t0;.l:()V` @kind direct;
  #L3621c2.  v0:= v2.`io.grpc.t0.b` @type ^`int`;
  #L3621c6.  call temp:= `a`(v3) @signature `Lio/grpc/t0$g;.a:()[B` @kind virtual;
  #L3621cc.  v1:= temp @kind object;
  #L3621ce.  call `n`(v2, v0, v1) @signature `Lio/grpc/t0;.n:(I[B)V` @kind direct;
  #L3621d4.  call temp:= `i`(v3) @signature `Lio/grpc/t0$g;.i:()Z` @kind virtual;
  #L3621da.  v0:= temp;
  #L3621dc.  if v0 == 0 then goto L3621f4;
  #L3621e0.  v0:= v2.`io.grpc.t0.b` @type ^`int`;
  #L3621e4.  call temp:= `a`(v3, v4) @signature `Lio/grpc/t0$h;.a:(Lio/grpc/t0$g;Ljava/lang/Object;)Lio/grpc/t0$h;` @kind static;
  #L3621ea.  v3:= temp @kind object;
  #L3621ec.  call `t`(v2, v0, v3) @signature `Lio/grpc/t0;.t:(ILjava/lang/Object;)V` @kind direct;
  #L3621f2.  goto L362206;
  #L3621f4.  v0:= v2.`io.grpc.t0.b` @type ^`int`;
  #L3621f8.  call temp:= `j`(v3, v4) @signature `Lio/grpc/t0$g;.j:(Ljava/lang/Object;)[B` @kind virtual;
  #L3621fe.  v3:= temp @kind object;
  #L362200.  call `u`(v2, v0, v3) @signature `Lio/grpc/t0;.u:(I[B)V` @kind direct;
  #L362206.  v3:= v2.`io.grpc.t0.b` @type ^`int`;
  #L36220a.  v3:= v3 + 1;
  #L36220e.  v2.`io.grpc.t0.b` @type ^`int` := v3;
  #L362212.  return @kind void;
}
procedure `byte`[][] `q`(`io.grpc.t0` v4 @kind this) @signature `Lio/grpc/t0;.q:()[[B` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L361c6c.  call temp:= `k`(v4) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L361c72.  v0:= temp;
  #L361c74.  v0:= new `byte`[][v0];
  #L361c78.  v1:= v4.`io.grpc.t0.a` @type ^`java.lang.Object`[] @kind object;
  #L361c7c.  v2:= instanceof @variable v1 @type ^`byte`[][] @kind boolean;
  #L361c80.  v3:= 0I;
  #L361c82.  if v2 == 0 then goto L361c96;
  #L361c86.  call temp:= `k`(v4) @signature `Lio/grpc/t0;.k:()I` @kind direct;
  #L361c8c.  v2:= temp;
  #L361c8e.  call `arraycopy`(v1, v3, v0, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L361c94.  goto L361cc4;
  #L361c96.  v1:= v4.`io.grpc.t0.b` @type ^`int`;
  #L361c9a.  if v3 >= v1 then goto L361cc4;
  #L361c9e.  v1:= v3 * 2;
  #L361ca2.  call temp:= `o`(v4, v3) @signature `Lio/grpc/t0;.o:(I)[B` @kind direct;
  #L361ca8.  v2:= temp @kind object;
  #L361caa.  v0[v1]:= v2 @kind object;
  #L361cae.  v1:= v1 + 1;
  #L361cb2.  call temp:= `v`(v4, v3) @signature `Lio/grpc/t0;.v:(I)[B` @kind direct;
  #L361cb8.  v2:= temp @kind object;
  #L361cba.  v0[v1]:= v2 @kind object;
  #L361cbe.  v3:= v3 + 1;
  #L361cc2.  goto L361c96;
  #L361cc4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`io.grpc.t0` v5 @kind this) @signature `Lio/grpc/t0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L361dd8.  v0:= new `java.lang.StringBuilder`;
  #L361ddc.  v1:= "Metadata(" @kind object;
  #L361de0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L361de6.  v1:= 0I;
  #L361de8.  v2:= v5.`io.grpc.t0.b` @type ^`int`;
  #L361dec.  if v1 >= v2 then goto L361e6e;
  #L361df0.  if v1 == 0 then goto L361dfe;
  #L361df4.  v2:= 44I;
  #L361df8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L361dfe.  v2:= new `java.lang.String`;
  #L361e02.  call temp:= `o`(v5, v1) @signature `Lio/grpc/t0;.o:(I)[B` @kind direct;
  #L361e08.  v3:= temp @kind object;
  #L361e0a.  v4:= `@@com.google.common.base.Charsets.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L361e0e.  call `<init>`(v2, v3, v4) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L361e14.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L361e1a.  v3:= 61I;
  #L361e1e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L361e24.  v3:= "-bin" @kind object;
  #L361e28.  call temp:= `endsWith`(v2, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L361e2e.  v2:= temp;
  #L361e30.  if v2 == 0 then goto L361e50;
  #L361e34.  v2:= `@@io.grpc.t0.f` @type ^`com.google.common.io.BaseEncoding` @kind object;
  #L361e38.  call temp:= `v`(v5, v1) @signature `Lio/grpc/t0;.v:(I)[B` @kind direct;
  #L361e3e.  v3:= temp @kind object;
  #L361e40.  call temp:= `encode`(v2, v3) @signature `Lcom/google/common/io/BaseEncoding;.encode:([B)Ljava/lang/String;` @kind virtual;
  #L361e46.  v2:= temp @kind object;
  #L361e48.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L361e4e.  goto L361e68;
  #L361e50.  v2:= new `java.lang.String`;
  #L361e54.  call temp:= `v`(v5, v1) @signature `Lio/grpc/t0;.v:(I)[B` @kind direct;
  #L361e5a.  v3:= temp @kind object;
  #L361e5c.  call `<init>`(v2, v3, v4) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L361e62.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L361e68.  v1:= v1 + 1;
  #L361e6c.  goto L361de8;
  #L361e6e.  v1:= 41I;
  #L361e72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L361e78.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L361e7e.  v0:= temp @kind object;
  #L361e80.  return v0 @kind object;
}
