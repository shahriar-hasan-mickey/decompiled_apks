record `io.grpc.j$b` @kind class @AccessFlag PUBLIC_FINAL {
  `io.grpc.c` `io.grpc.j$b.a` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.j$b.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.j$b.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.j$b` v1 @kind this, `io.grpc.c` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/grpc/j$b;.<init>:(Lio/grpc/c;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L35da08.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35da0e.  v0:= "callOptions" @kind object;
  #L35da12.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L35da18.  v2:= temp @kind object;
  #L35da1a.  v2:= (`io.grpc.c`) v2 @kind object;
  #L35da1e.  v1.`io.grpc.j$b.a` @type ^`io.grpc.c` := v2 @kind object;
  #L35da22.  v1.`io.grpc.j$b.b` @type ^`int` := v3;
  #L35da26.  v1.`io.grpc.j$b.c` @type ^`boolean` := v4 @kind boolean;
  #L35da2a.  return @kind void;
}
procedure `io.grpc.j$b$a` `a`() @signature `Lio/grpc/j$b;.a:()Lio/grpc/j$b$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35d998.  v0:= new `io.grpc.j$b$a`;
  #L35d99c.  call `<init>`(v0) @signature `Lio/grpc/j$b$a;.<init>:()V` @kind direct;
  #L35d9a2.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`io.grpc.j$b` v3 @kind this) @signature `Lio/grpc/j$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35d9b4.  call temp:= `toStringHelper`(v3) @signature `Lcom/google/common/base/MoreObjects;.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;` @kind static;
  #L35d9ba.  v0:= temp @kind object;
  #L35d9bc.  v1:= v3.`io.grpc.j$b.a` @type ^`io.grpc.c` @kind object;
  #L35d9c0.  v2:= "callOptions" @kind object;
  #L35d9c4.  call temp:= `add`(v0, v2, v1) @signature `Lcom/google/common/base/MoreObjects$ToStringHelper;.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;` @kind virtual;
  #L35d9ca.  v0:= temp @kind object;
  #L35d9cc.  v1:= v3.`io.grpc.j$b.b` @type ^`int`;
  #L35d9d0.  v2:= "previousAttempts" @kind object;
  #L35d9d4.  call temp:= `add`(v0, v2, v1) @signature `Lcom/google/common/base/MoreObjects$ToStringHelper;.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;` @kind virtual;
  #L35d9da.  v0:= temp @kind object;
  #L35d9dc.  v1:= v3.`io.grpc.j$b.c` @type ^`boolean` @kind boolean;
  #L35d9e0.  v2:= "isTransparentRetry" @kind object;
  #L35d9e4.  call temp:= `add`(v0, v2, v1) @signature `Lcom/google/common/base/MoreObjects$ToStringHelper;.add:(Ljava/lang/String;Z)Lcom/google/common/base/MoreObjects$ToStringHelper;` @kind virtual;
  #L35d9ea.  v0:= temp @kind object;
  #L35d9ec.  call temp:= `toString`(v0) @signature `Lcom/google/common/base/MoreObjects$ToStringHelper;.toString:()Ljava/lang/String;` @kind virtual;
  #L35d9f2.  v0:= temp @kind object;
  #L35d9f4.  return v0 @kind object;
}
