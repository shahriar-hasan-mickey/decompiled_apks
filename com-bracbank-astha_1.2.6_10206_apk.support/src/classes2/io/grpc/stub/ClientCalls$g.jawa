record `io.grpc.stub.ClientCalls$g` @kind class @AccessFlag FINAL extends `io.grpc.stub.ClientCalls$e` @kind class {
  `io.grpc.stub.ClientCalls$d` `io.grpc.stub.ClientCalls$g.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `io.grpc.stub.ClientCalls$g.b` @AccessFlag PRIVATE;
  `boolean` `io.grpc.stub.ClientCalls$g.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.grpc.stub.ClientCalls$g` v1 @kind this, `io.grpc.stub.ClientCalls$d` v2 @kind object) @signature `Lio/grpc/stub/ClientCalls$g;.<init>:(Lio/grpc/stub/ClientCalls$d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L38dd2c.  v0:= 0I;
  #L38dd2e.  call `<init>`(v1, v0) @signature `Lio/grpc/stub/ClientCalls$e;.<init>:(Lio/grpc/stub/ClientCalls$a;)V` @kind direct;
  #L38dd34.  v0:= 0I;
  #L38dd36.  v1.`io.grpc.stub.ClientCalls$g.c` @type ^`boolean` := v0 @kind boolean;
  #L38dd3a.  v1.`io.grpc.stub.ClientCalls$g.a` @type ^`io.grpc.stub.ClientCalls$d` := v2 @kind object;
  #L38dd3e.  return @kind void;
}
procedure `void` `a`(`io.grpc.stub.ClientCalls$g` v2 @kind this) @signature `Lio/grpc/stub/ClientCalls$g;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L38de10.  v0:= v2.`io.grpc.stub.ClientCalls$g.a` @type ^`io.grpc.stub.ClientCalls$d` @kind object;
  #L38de14.  call temp:= `a`(v0) @signature `Lio/grpc/stub/ClientCalls$d;.a:(Lio/grpc/stub/ClientCalls$d;)Lio/grpc/f;` @kind static;
  #L38de1a.  v0:= temp @kind object;
  #L38de1c.  v1:= 2I;
  #L38de1e.  call `request`(v0, v1) @signature `Lio/grpc/f;.request:(I)V` @kind virtual;
  #L38de24.  return @kind void;
}
procedure `void` `onClose`(`io.grpc.stub.ClientCalls$g` v2 @kind this, `io.grpc.Status` v3 @kind object, `io.grpc.t0` v4 @kind object) @signature `Lio/grpc/stub/ClientCalls$g;.onClose:(Lio/grpc/Status;Lio/grpc/t0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38dd50.  call temp:= `p`(v3) @signature `Lio/grpc/Status;.p:()Z` @kind virtual;
  #L38dd56.  v0:= temp;
  #L38dd58.  if v0 == 0 then goto L38dd96;
  #L38dd5c.  v3:= v2.`io.grpc.stub.ClientCalls$g.c` @type ^`boolean` @kind boolean;
  #L38dd60.  if v3 != 0 then goto L38dd86;
  #L38dd64.  v3:= v2.`io.grpc.stub.ClientCalls$g.a` @type ^`io.grpc.stub.ClientCalls$d` @kind object;
  #L38dd68.  v0:= `@@io.grpc.Status.t` @type ^`io.grpc.Status` @kind object;
  #L38dd6c.  v1:= "No value received for unary call" @kind object;
  #L38dd70.  call temp:= `r`(v0, v1) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L38dd76.  v0:= temp @kind object;
  #L38dd78.  call temp:= `e`(v0, v4) @signature `Lio/grpc/Status;.e:(Lio/grpc/t0;)Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L38dd7e.  v4:= temp @kind object;
  #L38dd80.  call temp:= `setException`(v3, v4) @signature `Lio/grpc/stub/ClientCalls$d;.setException:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L38dd86.  v3:= v2.`io.grpc.stub.ClientCalls$g.a` @type ^`io.grpc.stub.ClientCalls$d` @kind object;
  #L38dd8a.  v4:= v2.`io.grpc.stub.ClientCalls$g.b` @type ^`java.lang.Object` @kind object;
  #L38dd8e.  call temp:= `set`(v3, v4) @signature `Lio/grpc/stub/ClientCalls$d;.set:(Ljava/lang/Object;)Z` @kind virtual;
  #L38dd94.  goto L38dda8;
  #L38dd96.  v0:= v2.`io.grpc.stub.ClientCalls$g.a` @type ^`io.grpc.stub.ClientCalls$d` @kind object;
  #L38dd9a.  call temp:= `e`(v3, v4) @signature `Lio/grpc/Status;.e:(Lio/grpc/t0;)Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L38dda0.  v3:= temp @kind object;
  #L38dda2.  call temp:= `setException`(v0, v3) @signature `Lio/grpc/stub/ClientCalls$d;.setException:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L38dda8.  return @kind void;
}
procedure `void` `onHeaders`(`io.grpc.stub.ClientCalls$g` v0 @kind this, `io.grpc.t0` v1 @kind object) @signature `Lio/grpc/stub/ClientCalls$g;.onHeaders:(Lio/grpc/t0;)V` @AccessFlag PUBLIC {
    temp;

  #L38ddbc.  return @kind void;
}
procedure `void` `onMessage`(`io.grpc.stub.ClientCalls$g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/grpc/stub/ClientCalls$g;.onMessage:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ddd0.  v0:= v1.`io.grpc.stub.ClientCalls$g.c` @type ^`boolean` @kind boolean;
  #L38ddd4.  if v0 != 0 then goto L38dde4;
  #L38ddd8.  v1.`io.grpc.stub.ClientCalls$g.b` @type ^`java.lang.Object` := v2 @kind object;
  #L38dddc.  v2:= 1I;
  #L38ddde.  v1.`io.grpc.stub.ClientCalls$g.c` @type ^`boolean` := v2 @kind boolean;
  #L38dde2.  return @kind void;
  #L38dde4.  v2:= `@@io.grpc.Status.t` @type ^`io.grpc.Status` @kind object;
  #L38dde8.  v0:= "More than one value received for unary call" @kind object;
  #L38ddec.  call temp:= `r`(v2, v0) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L38ddf2.  v2:= temp @kind object;
  #L38ddf4.  call temp:= `d`(v2) @signature `Lio/grpc/Status;.d:()Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L38ddfa.  v2:= temp @kind object;
  #L38ddfc.  throw v2;
}
