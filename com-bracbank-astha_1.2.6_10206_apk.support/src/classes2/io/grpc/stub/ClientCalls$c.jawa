record `io.grpc.stub.ClientCalls$c` @kind class @AccessFlag FINAL extends `io.grpc.stub.f` @kind class {
  `boolean` `io.grpc.stub.ClientCalls$c.a` @AccessFlag PRIVATE;
  `io.grpc.f` `io.grpc.stub.ClientCalls$c.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.stub.ClientCalls$c.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `io.grpc.stub.ClientCalls$c.d` @AccessFlag PRIVATE;
  `int` `io.grpc.stub.ClientCalls$c.e` @AccessFlag PRIVATE;
  `boolean` `io.grpc.stub.ClientCalls$c.f` @AccessFlag PRIVATE;
  `boolean` `io.grpc.stub.ClientCalls$c.g` @AccessFlag PRIVATE;
  `boolean` `io.grpc.stub.ClientCalls$c.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.grpc.stub.ClientCalls$c` v1 @kind this, `io.grpc.f` v2 @kind object, `boolean` v3 ) @signature `Lio/grpc/stub/ClientCalls$c;.<init>:(Lio/grpc/f;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L38d710.  call `<init>`(v1) @signature `Lio/grpc/stub/f;.<init>:()V` @kind direct;
  #L38d716.  v0:= 1I;
  #L38d718.  v1.`io.grpc.stub.ClientCalls$c.e` @type ^`int` := v0;
  #L38d71c.  v1.`io.grpc.stub.ClientCalls$c.f` @type ^`boolean` := v0 @kind boolean;
  #L38d720.  v0:= 0I;
  #L38d722.  v1.`io.grpc.stub.ClientCalls$c.g` @type ^`boolean` := v0 @kind boolean;
  #L38d726.  v1.`io.grpc.stub.ClientCalls$c.h` @type ^`boolean` := v0 @kind boolean;
  #L38d72a.  v1.`io.grpc.stub.ClientCalls$c.b` @type ^`io.grpc.f` := v2 @kind object;
  #L38d72e.  v1.`io.grpc.stub.ClientCalls$c.c` @type ^`boolean` := v3 @kind boolean;
  #L38d732.  return @kind void;
}
procedure `void` `d`(`io.grpc.stub.ClientCalls$c` v0 @kind object) @signature `Lio/grpc/stub/ClientCalls$c;.d:(Lio/grpc/stub/ClientCalls$c;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38d744.  call `i`(v0) @signature `Lio/grpc/stub/ClientCalls$c;.i:()V` @kind direct;
  #L38d74a.  return @kind void;
}
procedure `boolean` `e`(`io.grpc.stub.ClientCalls$c` v0 @kind object) @signature `Lio/grpc/stub/ClientCalls$c;.e:(Lio/grpc/stub/ClientCalls$c;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38d6b0.  v0:= v0.`io.grpc.stub.ClientCalls$c.c` @type ^`boolean` @kind boolean;
  #L38d6b4.  return v0;
}
procedure `boolean` `f`(`io.grpc.stub.ClientCalls$c` v0 @kind object) @signature `Lio/grpc/stub/ClientCalls$c;.f:(Lio/grpc/stub/ClientCalls$c;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38d6c8.  v0:= v0.`io.grpc.stub.ClientCalls$c.f` @type ^`boolean` @kind boolean;
  #L38d6cc.  return v0;
}
procedure `java.lang.Runnable` `g`(`io.grpc.stub.ClientCalls$c` v0 @kind object) @signature `Lio/grpc/stub/ClientCalls$c;.g:(Lio/grpc/stub/ClientCalls$c;)Ljava/lang/Runnable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38d6f8.  v0:= v0.`io.grpc.stub.ClientCalls$c.d` @type ^`java.lang.Runnable` @kind object;
  #L38d6fc.  return v0 @kind object;
}
procedure `int` `h`(`io.grpc.stub.ClientCalls$c` v0 @kind object) @signature `Lio/grpc/stub/ClientCalls$c;.h:(Lio/grpc/stub/ClientCalls$c;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38d6e0.  v0:= v0.`io.grpc.stub.ClientCalls$c.e` @type ^`int`;
  #L38d6e4.  return v0;
}
procedure `void` `i`(`io.grpc.stub.ClientCalls$c` v1 @kind this) @signature `Lio/grpc/stub/ClientCalls$c;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L38d75c.  v0:= 1I;
  #L38d75e.  v1.`io.grpc.stub.ClientCalls$c.a` @type ^`boolean` := v0 @kind boolean;
  #L38d762.  return @kind void;
}
procedure `void` `a`(`io.grpc.stub.ClientCalls$c` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/grpc/stub/ClientCalls$c;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38d798.  v0:= v2.`io.grpc.stub.ClientCalls$c.b` @type ^`io.grpc.f` @kind object;
  #L38d79c.  v1:= "Cancelled by client with StreamObserver.onError()" @kind object;
  #L38d7a0.  call `cancel`(v0, v1, v3) @signature `Lio/grpc/f;.cancel:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L38d7a6.  v3:= 1I;
  #L38d7a8.  v2.`io.grpc.stub.ClientCalls$c.g` @type ^`boolean` := v3 @kind boolean;
  #L38d7ac.  return @kind void;
}
procedure `void` `b`(`io.grpc.stub.ClientCalls$c` v1 @kind this) @signature `Lio/grpc/stub/ClientCalls$c;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38d774.  v0:= v1.`io.grpc.stub.ClientCalls$c.b` @type ^`io.grpc.f` @kind object;
  #L38d778.  call `halfClose`(v0) @signature `Lio/grpc/f;.halfClose:()V` @kind virtual;
  #L38d77e.  v0:= 1I;
  #L38d780.  v1.`io.grpc.stub.ClientCalls$c.h` @type ^`boolean` := v0 @kind boolean;
  #L38d784.  return @kind void;
}
procedure `void` `j`(`io.grpc.stub.ClientCalls$c` v1 @kind this, `int` v2 ) @signature `Lio/grpc/stub/ClientCalls$c;.j:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38d800.  v0:= v1.`io.grpc.stub.ClientCalls$c.c` @type ^`boolean` @kind boolean;
  #L38d804.  if v0 != 0 then goto L38d81c;
  #L38d808.  v0:= 1I;
  #L38d80a.  if v2 != v0 then goto L38d81c;
  #L38d80e.  v2:= v1.`io.grpc.stub.ClientCalls$c.b` @type ^`io.grpc.f` @kind object;
  #L38d812.  v0:= 2I;
  #L38d814.  call `request`(v2, v0) @signature `Lio/grpc/f;.request:(I)V` @kind virtual;
  #L38d81a.  goto L38d826;
  #L38d81c.  v0:= v1.`io.grpc.stub.ClientCalls$c.b` @type ^`io.grpc.f` @kind object;
  #L38d820.  call `request`(v0, v2) @signature `Lio/grpc/f;.request:(I)V` @kind virtual;
  #L38d826.  return @kind void;
}
procedure `void` `onNext`(`io.grpc.stub.ClientCalls$c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/grpc/stub/ClientCalls$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38d7c0.  v0:= v2.`io.grpc.stub.ClientCalls$c.g` @type ^`boolean` @kind boolean;
  #L38d7c4.  v0:= v0 ^~ 1;
  #L38d7c8.  v1:= "Stream was terminated by error, no further calls are allowed" @kind object;
  #L38d7cc.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L38d7d2.  v0:= v2.`io.grpc.stub.ClientCalls$c.h` @type ^`boolean` @kind boolean;
  #L38d7d6.  v0:= v0 ^~ 1;
  #L38d7da.  v1:= "Stream is already completed, no further calls are allowed" @kind object;
  #L38d7de.  call `checkState`(v0, v1) @signature `Lcom/google/common/base/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L38d7e4.  v0:= v2.`io.grpc.stub.ClientCalls$c.b` @type ^`io.grpc.f` @kind object;
  #L38d7e8.  call `sendMessage`(v0, v3) @signature `Lio/grpc/f;.sendMessage:(Ljava/lang/Object;)V` @kind virtual;
  #L38d7ee.  return @kind void;
}
