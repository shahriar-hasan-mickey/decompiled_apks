record `io.grpc.stub.ClientCalls$d` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.AbstractFuture` @kind class {
  `io.grpc.f` `io.grpc.stub.ClientCalls$d.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.stub.ClientCalls$d` v0 @kind this, `io.grpc.f` v1 @kind object) @signature `Lio/grpc/stub/ClientCalls$d;.<init>:(Lio/grpc/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L38d8bc.  call `<init>`(v0) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.<init>:()V` @kind direct;
  #L38d8c2.  v0.`io.grpc.stub.ClientCalls$d.a` @type ^`io.grpc.f` := v1 @kind object;
  #L38d8c6.  return @kind void;
}
procedure `io.grpc.f` `a`(`io.grpc.stub.ClientCalls$d` v0 @kind object) @signature `Lio/grpc/stub/ClientCalls$d;.a:(Lio/grpc/stub/ClientCalls$d;)Lio/grpc/f;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38d870.  v0:= v0.`io.grpc.stub.ClientCalls$d.a` @type ^`io.grpc.f` @kind object;
  #L38d874.  return v0 @kind object;
}
procedure `void` `interruptTask`(`io.grpc.stub.ClientCalls$d` v3 @kind this) @signature `Lio/grpc/stub/ClientCalls$d;.interruptTask:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L38d8d8.  v0:= v3.`io.grpc.stub.ClientCalls$d.a` @type ^`io.grpc.f` @kind object;
  #L38d8dc.  v1:= "GrpcFuture was cancelled" @kind object;
  #L38d8e0.  v2:= 0I;
  #L38d8e2.  call `cancel`(v0, v1, v2) @signature `Lio/grpc/f;.cancel:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L38d8e8.  return @kind void;
}
procedure `java.lang.String` `pendingToString`(`io.grpc.stub.ClientCalls$d` v3 @kind this) @signature `Lio/grpc/stub/ClientCalls$d;.pendingToString:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L38d888.  call temp:= `toStringHelper`(v3) @signature `Lcom/google/common/base/MoreObjects;.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;` @kind static;
  #L38d88e.  v0:= temp @kind object;
  #L38d890.  v1:= v3.`io.grpc.stub.ClientCalls$d.a` @type ^`io.grpc.f` @kind object;
  #L38d894.  v2:= "clientCall" @kind object;
  #L38d898.  call temp:= `add`(v0, v2, v1) @signature `Lcom/google/common/base/MoreObjects$ToStringHelper;.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;` @kind virtual;
  #L38d89e.  v0:= temp @kind object;
  #L38d8a0.  call temp:= `toString`(v0) @signature `Lcom/google/common/base/MoreObjects$ToStringHelper;.toString:()Ljava/lang/String;` @kind virtual;
  #L38d8a6.  v0:= temp @kind object;
  #L38d8a8.  return v0 @kind object;
}
procedure `boolean` `set`(`io.grpc.stub.ClientCalls$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/stub/ClientCalls$d;.set:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {
    temp;

  #L38d838.  call temp:= `set`(v0, v1) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.set:(Ljava/lang/Object;)Z` @kind super;
  #L38d83e.  v1:= temp;
  #L38d840.  return v1;
}
procedure `boolean` `setException`(`io.grpc.stub.ClientCalls$d` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/grpc/stub/ClientCalls$d;.setException:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {
    temp;

  #L38d854.  call temp:= `setException`(v0, v1) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.setException:(Ljava/lang/Throwable;)Z` @kind super;
  #L38d85a.  v1:= temp;
  #L38d85c.  return v1;
}
