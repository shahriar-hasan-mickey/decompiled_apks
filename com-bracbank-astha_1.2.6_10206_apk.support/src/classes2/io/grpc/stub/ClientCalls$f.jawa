record `io.grpc.stub.ClientCalls$f` @kind class @AccessFlag FINAL extends `io.grpc.stub.ClientCalls$e` @kind class {
  `io.grpc.stub.j` `io.grpc.stub.ClientCalls$f.a` @AccessFlag PRIVATE_FINAL;
  `io.grpc.stub.ClientCalls$c` `io.grpc.stub.ClientCalls$f.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.stub.ClientCalls$f.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.grpc.stub.ClientCalls$f` v1 @kind this, `io.grpc.stub.j` v2 @kind object, `io.grpc.stub.ClientCalls$c` v3 @kind object) @signature `Lio/grpc/stub/ClientCalls$f;.<init>:(Lio/grpc/stub/j;Lio/grpc/stub/ClientCalls$c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L38d92c.  v0:= 0I;
  #L38d92e.  call `<init>`(v1, v0) @signature `Lio/grpc/stub/ClientCalls$e;.<init>:(Lio/grpc/stub/ClientCalls$a;)V` @kind direct;
  #L38d934.  v1.`io.grpc.stub.ClientCalls$f.a` @type ^`io.grpc.stub.j` := v2 @kind object;
  #L38d938.  v1.`io.grpc.stub.ClientCalls$f.b` @type ^`io.grpc.stub.ClientCalls$c` := v3 @kind object;
  #L38d93c.  v0:= instanceof @variable v2 @type ^`io.grpc.stub.g` @kind boolean;
  #L38d940.  if v0 == 0 then goto L38d94e;
  #L38d944.  v2:= (`io.grpc.stub.g`) v2 @kind object;
  #L38d948.  call `c`(v2, v3) @signature `Lio/grpc/stub/g;.c:(Lio/grpc/stub/f;)V` @kind interface;
  #L38d94e.  call `d`(v3) @signature `Lio/grpc/stub/ClientCalls$c;.d:(Lio/grpc/stub/ClientCalls$c;)V` @kind static;
  #L38d954.  return @kind void;
}
procedure `void` `a`(`io.grpc.stub.ClientCalls$f` v2 @kind this) @signature `Lio/grpc/stub/ClientCalls$f;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L38da6c.  v0:= v2.`io.grpc.stub.ClientCalls$f.b` @type ^`io.grpc.stub.ClientCalls$c` @kind object;
  #L38da70.  call temp:= `h`(v0) @signature `Lio/grpc/stub/ClientCalls$c;.h:(Lio/grpc/stub/ClientCalls$c;)I` @kind static;
  #L38da76.  v0:= temp;
  #L38da78.  if v0 <= 0 then goto L38da8e;
  #L38da7c.  v0:= v2.`io.grpc.stub.ClientCalls$f.b` @type ^`io.grpc.stub.ClientCalls$c` @kind object;
  #L38da80.  call temp:= `h`(v0) @signature `Lio/grpc/stub/ClientCalls$c;.h:(Lio/grpc/stub/ClientCalls$c;)I` @kind static;
  #L38da86.  v1:= temp;
  #L38da88.  call `j`(v0, v1) @signature `Lio/grpc/stub/ClientCalls$c;.j:(I)V` @kind virtual;
  #L38da8e.  return @kind void;
}
procedure `void` `onClose`(`io.grpc.stub.ClientCalls$f` v1 @kind this, `io.grpc.Status` v2 @kind object, `io.grpc.t0` v3 @kind object) @signature `Lio/grpc/stub/ClientCalls$f;.onClose:(Lio/grpc/Status;Lio/grpc/t0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38d968.  call temp:= `p`(v2) @signature `Lio/grpc/Status;.p:()Z` @kind virtual;
  #L38d96e.  v0:= temp;
  #L38d970.  if v0 == 0 then goto L38d980;
  #L38d974.  v2:= v1.`io.grpc.stub.ClientCalls$f.a` @type ^`io.grpc.stub.j` @kind object;
  #L38d978.  call `b`(v2) @signature `Lio/grpc/stub/j;.b:()V` @kind interface;
  #L38d97e.  goto L38d992;
  #L38d980.  v0:= v1.`io.grpc.stub.ClientCalls$f.a` @type ^`io.grpc.stub.j` @kind object;
  #L38d984.  call temp:= `e`(v2, v3) @signature `Lio/grpc/Status;.e:(Lio/grpc/t0;)Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L38d98a.  v2:= temp @kind object;
  #L38d98c.  call `a`(v0, v2) @signature `Lio/grpc/stub/j;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L38d992.  return @kind void;
}
procedure `void` `onHeaders`(`io.grpc.stub.ClientCalls$f` v0 @kind this, `io.grpc.t0` v1 @kind object) @signature `Lio/grpc/stub/ClientCalls$f;.onHeaders:(Lio/grpc/t0;)V` @AccessFlag PUBLIC {
    temp;

  #L38d9a4.  return @kind void;
}
procedure `void` `onMessage`(`io.grpc.stub.ClientCalls$f` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/grpc/stub/ClientCalls$f;.onMessage:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38d9b8.  v0:= v2.`io.grpc.stub.ClientCalls$f.c` @type ^`boolean` @kind boolean;
  #L38d9bc.  if v0 == 0 then goto L38d9ec;
  #L38d9c0.  v0:= v2.`io.grpc.stub.ClientCalls$f.b` @type ^`io.grpc.stub.ClientCalls$c` @kind object;
  #L38d9c4.  call temp:= `e`(v0) @signature `Lio/grpc/stub/ClientCalls$c;.e:(Lio/grpc/stub/ClientCalls$c;)Z` @kind static;
  #L38d9ca.  v0:= temp;
  #L38d9cc.  if v0 == 0 then goto L38d9d2;
  #L38d9d0.  goto L38d9ec;
  #L38d9d2.  v3:= `@@io.grpc.Status.t` @type ^`io.grpc.Status` @kind object;
  #L38d9d6.  v0:= "More than one responses received for unary or client-streaming call" @kind object;
  #L38d9da.  call temp:= `r`(v3, v0) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L38d9e0.  v3:= temp @kind object;
  #L38d9e2.  call temp:= `d`(v3) @signature `Lio/grpc/Status;.d:()Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L38d9e8.  v3:= temp @kind object;
  #L38d9ea.  throw v3;
  #L38d9ec.  v0:= 1I;
  #L38d9ee.  v2.`io.grpc.stub.ClientCalls$f.c` @type ^`boolean` := v0 @kind boolean;
  #L38d9f2.  v1:= v2.`io.grpc.stub.ClientCalls$f.a` @type ^`io.grpc.stub.j` @kind object;
  #L38d9f6.  call `onNext`(v1, v3) @signature `Lio/grpc/stub/j;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L38d9fc.  v3:= v2.`io.grpc.stub.ClientCalls$f.b` @type ^`io.grpc.stub.ClientCalls$c` @kind object;
  #L38da00.  call temp:= `e`(v3) @signature `Lio/grpc/stub/ClientCalls$c;.e:(Lio/grpc/stub/ClientCalls$c;)Z` @kind static;
  #L38da06.  v3:= temp;
  #L38da08.  if v3 == 0 then goto L38da26;
  #L38da0c.  v3:= v2.`io.grpc.stub.ClientCalls$f.b` @type ^`io.grpc.stub.ClientCalls$c` @kind object;
  #L38da10.  call temp:= `f`(v3) @signature `Lio/grpc/stub/ClientCalls$c;.f:(Lio/grpc/stub/ClientCalls$c;)Z` @kind static;
  #L38da16.  v3:= temp;
  #L38da18.  if v3 == 0 then goto L38da26;
  #L38da1c.  v3:= v2.`io.grpc.stub.ClientCalls$f.b` @type ^`io.grpc.stub.ClientCalls$c` @kind object;
  #L38da20.  call `j`(v3, v0) @signature `Lio/grpc/stub/ClientCalls$c;.j:(I)V` @kind virtual;
  #L38da26.  return @kind void;
}
procedure `void` `onReady`(`io.grpc.stub.ClientCalls$f` v1 @kind this) @signature `Lio/grpc/stub/ClientCalls$f;.onReady:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38da38.  v0:= v1.`io.grpc.stub.ClientCalls$f.b` @type ^`io.grpc.stub.ClientCalls$c` @kind object;
  #L38da3c.  call temp:= `g`(v0) @signature `Lio/grpc/stub/ClientCalls$c;.g:(Lio/grpc/stub/ClientCalls$c;)Ljava/lang/Runnable;` @kind static;
  #L38da42.  v0:= temp @kind object;
  #L38da44.  if v0 == 0 then goto L38da5a;
  #L38da48.  v0:= v1.`io.grpc.stub.ClientCalls$f.b` @type ^`io.grpc.stub.ClientCalls$c` @kind object;
  #L38da4c.  call temp:= `g`(v0) @signature `Lio/grpc/stub/ClientCalls$c;.g:(Lio/grpc/stub/ClientCalls$c;)Ljava/lang/Runnable;` @kind static;
  #L38da52.  v0:= temp @kind object;
  #L38da54.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L38da5a.  return @kind void;
}
