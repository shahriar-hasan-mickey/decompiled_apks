record `io.grpc.stub.ClientCalls` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@io.grpc.stub.ClientCalls.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@io.grpc.stub.ClientCalls.b` @AccessFlag STATIC;
global `io.grpc.c$a` `@@io.grpc.stub.ClientCalls.c` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/stub/ClientCalls;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L38e18c.  v0:= constclass @type ^`io.grpc.stub.ClientCalls` @kind object;
  #L38e190.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L38e196.  v0:= temp @kind object;
  #L38e198.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L38e19e.  v0:= temp @kind object;
  #L38e1a0.  `@@io.grpc.stub.ClientCalls.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L38e1a4.  v0:= "GRPC_CLIENT_CALL_REJECT_RUNNABLE" @kind object;
  #L38e1a8.  call temp:= `getenv`(v0) @signature `Ljava/lang/System;.getenv:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L38e1ae.  v1:= temp @kind object;
  #L38e1b0.  call temp:= `isNullOrEmpty`(v1) @signature `Lcom/google/common/base/Strings;.isNullOrEmpty:(Ljava/lang/String;)Z` @kind static;
  #L38e1b6.  v1:= temp;
  #L38e1b8.  if v1 != 0 then goto L38e1d4;
  #L38e1bc.  call temp:= `getenv`(v0) @signature `Ljava/lang/System;.getenv:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L38e1c2.  v0:= temp @kind object;
  #L38e1c4.  call temp:= `parseBoolean`(v0) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L38e1ca.  v0:= temp;
  #L38e1cc.  if v0 == 0 then goto L38e1d4;
  #L38e1d0.  v0:= 1I;
  #L38e1d2.  goto L38e1d6;
  #L38e1d4.  v0:= 0I;
  #L38e1d6.  `@@io.grpc.stub.ClientCalls.b` @type ^`boolean` := v0 @kind boolean;
  #L38e1da.  v0:= "internal-stub-type" @kind object;
  #L38e1de.  call temp:= `b`(v0) @signature `Lio/grpc/c$a;.b:(Ljava/lang/String;)Lio/grpc/c$a;` @kind static;
  #L38e1e4.  v0:= temp @kind object;
  #L38e1e6.  `@@io.grpc.stub.ClientCalls.c` @type ^`io.grpc.c$a` := v0 @kind object;
  #L38e1ea.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.stub.ClientCalls` v0 @kind this) @signature `Lio/grpc/stub/ClientCalls;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L38e1fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38e202.  return @kind void;
}
procedure `io.grpc.stub.j` `a`(`io.grpc.f` v1 @kind object, `io.grpc.stub.j` v2 @kind object) @signature `Lio/grpc/stub/ClientCalls;.a:(Lio/grpc/f;Lio/grpc/stub/j;)Lio/grpc/stub/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38df04.  v0:= 1I;
  #L38df06.  call temp:= `c`(v1, v2, v0) @signature `Lio/grpc/stub/ClientCalls;.c:(Lio/grpc/f;Lio/grpc/stub/j;Z)Lio/grpc/stub/j;` @kind static;
  #L38df0c.  v1:= temp @kind object;
  #L38df0e.  return v1 @kind object;
}
procedure `void` `b`(`io.grpc.f` v1 @kind object, `java.lang.Object` v2 @kind object, `io.grpc.stub.j` v3 @kind object) @signature `Lio/grpc/stub/ClientCalls;.b:(Lio/grpc/f;Ljava/lang/Object;Lio/grpc/stub/j;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38e214.  v0:= 1I;
  #L38e216.  call `f`(v1, v2, v3, v0) @signature `Lio/grpc/stub/ClientCalls;.f:(Lio/grpc/f;Ljava/lang/Object;Lio/grpc/stub/j;Z)V` @kind static;
  #L38e21c.  return @kind void;
}
procedure `io.grpc.stub.j` `c`(`io.grpc.f` v1 @kind object, `io.grpc.stub.j` v2 @kind object, `boolean` v3 ) @signature `Lio/grpc/stub/ClientCalls;.c:(Lio/grpc/f;Lio/grpc/stub/j;Z)Lio/grpc/stub/j;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L38df20.  v0:= new `io.grpc.stub.ClientCalls$c`;
  #L38df24.  call `<init>`(v0, v1, v3) @signature `Lio/grpc/stub/ClientCalls$c;.<init>:(Lio/grpc/f;Z)V` @kind direct;
  #L38df2a.  v3:= new `io.grpc.stub.ClientCalls$f`;
  #L38df2e.  call `<init>`(v3, v2, v0) @signature `Lio/grpc/stub/ClientCalls$f;.<init>:(Lio/grpc/stub/j;Lio/grpc/stub/ClientCalls$c;)V` @kind direct;
  #L38df34.  call `l`(v1, v3) @signature `Lio/grpc/stub/ClientCalls;.l:(Lio/grpc/f;Lio/grpc/stub/ClientCalls$e;)V` @kind static;
  #L38df3a.  return v0 @kind object;
}
procedure `void` `d`(`io.grpc.f` v1 @kind object, `java.lang.Object` v2 @kind object, `io.grpc.stub.j` v3 @kind object) @signature `Lio/grpc/stub/ClientCalls;.d:(Lio/grpc/f;Ljava/lang/Object;Lio/grpc/stub/j;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38e230.  v0:= 0I;
  #L38e232.  call `f`(v1, v2, v3, v0) @signature `Lio/grpc/stub/ClientCalls;.f:(Lio/grpc/f;Ljava/lang/Object;Lio/grpc/stub/j;Z)V` @kind static;
  #L38e238.  return @kind void;
}
procedure `void` `e`(`io.grpc.f` v0 @kind object, `java.lang.Object` v1 @kind object, `io.grpc.stub.ClientCalls$e` v2 @kind object) @signature `Lio/grpc/stub/ClientCalls;.e:(Lio/grpc/f;Ljava/lang/Object;Lio/grpc/stub/ClientCalls$e;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L38e24c.  call `l`(v0, v2) @signature `Lio/grpc/stub/ClientCalls;.l:(Lio/grpc/f;Lio/grpc/stub/ClientCalls$e;)V` @kind static;
  #L38e252.  call `sendMessage`(v0, v1) @signature `Lio/grpc/f;.sendMessage:(Ljava/lang/Object;)V` @kind virtual;
  #L38e258.  call `halfClose`(v0) @signature `Lio/grpc/f;.halfClose:()V` @kind virtual;
  #L38e25e.  return @kind void;
  #L38e260.  v1:= Exception @type ^`java.lang.Error` @kind object;
  #L38e262.  call temp:= `i`(v0, v1) @signature `Lio/grpc/stub/ClientCalls;.i:(Lio/grpc/f;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L38e268.  v0:= temp @kind object;
  #L38e26a.  throw v0;
  #L38e26c.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L38e26e.  call temp:= `i`(v0, v1) @signature `Lio/grpc/stub/ClientCalls;.i:(Lio/grpc/f;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L38e274.  v0:= temp @kind object;
  #L38e276.  throw v0;
  catch `java.lang.RuntimeException` @[L38e252..L38e25e] goto L38e26c;
  catch `java.lang.Error` @[L38e252..L38e25e] goto L38e260;
}
procedure `void` `f`(`io.grpc.f` v2 @kind object, `java.lang.Object` v3 @kind object, `io.grpc.stub.j` v4 @kind object, `boolean` v5 ) @signature `Lio/grpc/stub/ClientCalls;.f:(Lio/grpc/f;Ljava/lang/Object;Lio/grpc/stub/j;Z)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L38e298.  v0:= new `io.grpc.stub.ClientCalls$f`;
  #L38e29c.  v1:= new `io.grpc.stub.ClientCalls$c`;
  #L38e2a0.  call `<init>`(v1, v2, v5) @signature `Lio/grpc/stub/ClientCalls$c;.<init>:(Lio/grpc/f;Z)V` @kind direct;
  #L38e2a6.  call `<init>`(v0, v4, v1) @signature `Lio/grpc/stub/ClientCalls$f;.<init>:(Lio/grpc/stub/j;Lio/grpc/stub/ClientCalls$c;)V` @kind direct;
  #L38e2ac.  call `e`(v2, v3, v0) @signature `Lio/grpc/stub/ClientCalls;.e:(Lio/grpc/f;Ljava/lang/Object;Lio/grpc/stub/ClientCalls$e;)V` @kind static;
  #L38e2b2.  return @kind void;
}
procedure `java.util.Iterator` `g`(`io.grpc.d` v3 @kind object, `io.grpc.MethodDescriptor` v4 @kind object, `io.grpc.c` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/grpc/stub/ClientCalls;.g:(Lio/grpc/d;Lio/grpc/MethodDescriptor;Lio/grpc/c;Ljava/lang/Object;)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L38e138.  v0:= new `io.grpc.stub.ClientCalls$ThreadlessExecutor`;
  #L38e13c.  call `<init>`(v0) @signature `Lio/grpc/stub/ClientCalls$ThreadlessExecutor;.<init>:()V` @kind direct;
  #L38e142.  v1:= `@@io.grpc.stub.ClientCalls.c` @type ^`io.grpc.c$a` @kind object;
  #L38e146.  v2:= `@@io.grpc.stub.ClientCalls$StubType.a` @type ^`io.grpc.stub.ClientCalls$StubType` @kind object;
  #L38e14a.  call temp:= `r`(v5, v1, v2) @signature `Lio/grpc/c;.r:(Lio/grpc/c$a;Ljava/lang/Object;)Lio/grpc/c;` @kind virtual;
  #L38e150.  v5:= temp @kind object;
  #L38e152.  call temp:= `o`(v5, v0) @signature `Lio/grpc/c;.o:(Ljava/util/concurrent/Executor;)Lio/grpc/c;` @kind virtual;
  #L38e158.  v5:= temp @kind object;
  #L38e15a.  call temp:= `f`(v3, v4, v5) @signature `Lio/grpc/d;.f:(Lio/grpc/MethodDescriptor;Lio/grpc/c;)Lio/grpc/f;` @kind virtual;
  #L38e160.  v3:= temp @kind object;
  #L38e162.  v4:= new `io.grpc.stub.ClientCalls$b`;
  #L38e166.  call `<init>`(v4, v3, v0) @signature `Lio/grpc/stub/ClientCalls$b;.<init>:(Lio/grpc/f;Lio/grpc/stub/ClientCalls$ThreadlessExecutor;)V` @kind direct;
  #L38e16c.  call temp:= `c`(v4) @signature `Lio/grpc/stub/ClientCalls$b;.c:()Lio/grpc/stub/ClientCalls$e;` @kind virtual;
  #L38e172.  v5:= temp @kind object;
  #L38e174.  call `e`(v3, v6, v5) @signature `Lio/grpc/stub/ClientCalls;.e:(Lio/grpc/f;Ljava/lang/Object;Lio/grpc/stub/ClientCalls$e;)V` @kind static;
  #L38e17a.  return v4 @kind object;
}
procedure `java.lang.Object` `h`(`io.grpc.d` v3 @kind object, `io.grpc.MethodDescriptor` v4 @kind object, `io.grpc.c` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/grpc/stub/ClientCalls;.h:(Lio/grpc/d;Lio/grpc/MethodDescriptor;Lio/grpc/c;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L38df4c.  v0:= new `io.grpc.stub.ClientCalls$ThreadlessExecutor`;
  #L38df50.  call `<init>`(v0) @signature `Lio/grpc/stub/ClientCalls$ThreadlessExecutor;.<init>:()V` @kind direct;
  #L38df56.  v1:= `@@io.grpc.stub.ClientCalls.c` @type ^`io.grpc.c$a` @kind object;
  #L38df5a.  v2:= `@@io.grpc.stub.ClientCalls$StubType.a` @type ^`io.grpc.stub.ClientCalls$StubType` @kind object;
  #L38df5e.  call temp:= `r`(v5, v1, v2) @signature `Lio/grpc/c;.r:(Lio/grpc/c$a;Ljava/lang/Object;)Lio/grpc/c;` @kind virtual;
  #L38df64.  v5:= temp @kind object;
  #L38df66.  call temp:= `o`(v5, v0) @signature `Lio/grpc/c;.o:(Ljava/util/concurrent/Executor;)Lio/grpc/c;` @kind virtual;
  #L38df6c.  v5:= temp @kind object;
  #L38df6e.  call temp:= `f`(v3, v4, v5) @signature `Lio/grpc/d;.f:(Lio/grpc/MethodDescriptor;Lio/grpc/c;)Lio/grpc/f;` @kind virtual;
  #L38df74.  v3:= temp @kind object;
  #L38df76.  v4:= 0I;
  #L38df78.  call temp:= `j`(v3, v6) @signature `Lio/grpc/stub/ClientCalls;.j:(Lio/grpc/f;Ljava/lang/Object;)Lcom/google/common/util/concurrent/ListenableFuture;` @kind static;
  #L38df7e.  v5:= temp @kind object;
  #L38df80.  call temp:= `isDone`(v5) @signature `Ljava/util/concurrent/Future;.isDone:()Z` @kind interface;
  #L38df86.  v6:= temp;
  #L38df88.  if v6 != 0 then goto L38dfb8;
  #L38df8c.  call `c`(v0) @signature `Lio/grpc/stub/ClientCalls$ThreadlessExecutor;.c:()V` @kind virtual;
  #L38df92.  goto L38df80;
  #L38df94.  v4:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L38df96.  v6:= 1I;
  #L38df98.  v1:= "Thread interrupted" @kind object;
  #L38df9c.  call `cancel`(v3, v1, v4) @signature `Lio/grpc/f;.cancel:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L38dfa2.  v4:= 1I;
  #L38dfa4.  goto L38df80;
  #L38dfa6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38dfa8.  v4:= 1I;
  #L38dfaa.  goto L38dff6;
  #L38dfac.  v5:= Exception @type ^`java.lang.Error` @kind object;
  #L38dfae.  v4:= 1I;
  #L38dfb0.  goto L38dfe0;
  #L38dfb2.  v5:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L38dfb4.  v4:= 1I;
  #L38dfb6.  goto L38dfec;
  #L38dfb8.  call `shutdown`(v0) @signature `Lio/grpc/stub/ClientCalls$ThreadlessExecutor;.shutdown:()V` @kind virtual;
  #L38dfbe.  call temp:= `k`(v5) @signature `Lio/grpc/stub/ClientCalls;.k:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @kind static;
  #L38dfc4.  v3:= temp @kind object;
  #L38dfc6.  if v4 == 0 then goto L38dfd8;
  #L38dfca.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L38dfd0.  v4:= temp @kind object;
  #L38dfd2.  call `interrupt`(v4) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L38dfd8.  return v3 @kind object;
  #L38dfda.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38dfdc.  goto L38dff6;
  #L38dfde.  v5:= Exception @type ^`java.lang.Error` @kind object;
  #L38dfe0.  call temp:= `i`(v3, v5) @signature `Lio/grpc/stub/ClientCalls;.i:(Lio/grpc/f;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L38dfe6.  v3:= temp @kind object;
  #L38dfe8.  throw v3;
  #L38dfea.  v5:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L38dfec.  call temp:= `i`(v3, v5) @signature `Lio/grpc/stub/ClientCalls;.i:(Lio/grpc/f;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L38dff2.  v3:= temp @kind object;
  #L38dff4.  throw v3;
  #L38dff6.  if v4 == 0 then goto L38e008;
  #L38dffa.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L38e000.  v4:= temp @kind object;
  #L38e002.  call `interrupt`(v4) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L38e008.  throw v3;
  catch `java.lang.RuntimeException` @[L38df78..L38df88] goto L38dfea;
  catch `java.lang.Error` @[L38df78..L38df88] goto L38dfde;
  catch `java.lang.Throwable` @[L38df78..L38df88] goto L38dfda;
  catch `java.lang.InterruptedException` @[L38df8c..L38df92] goto L38df94;
  catch `java.lang.RuntimeException` @[L38df8c..L38df92] goto L38dfea;
  catch `java.lang.Error` @[L38df8c..L38df92] goto L38dfde;
  catch `java.lang.Throwable` @[L38df8c..L38df92] goto L38dfda;
  catch `java.lang.RuntimeException` @[L38df98..L38dfa2] goto L38dfb2;
  catch `java.lang.Error` @[L38df98..L38dfa2] goto L38dfac;
  catch `java.lang.Throwable` @[L38df98..L38dfa2] goto L38dfa6;
  catch `java.lang.RuntimeException` @[L38dfb8..L38dfc6] goto L38dfea;
  catch `java.lang.Error` @[L38dfb8..L38dfc6] goto L38dfde;
  catch `java.lang.Throwable` @[L38dfb8..L38dfc6] goto L38dfda;
  catch `java.lang.Throwable` @[L38dfe0..L38dff6] goto L38dfda;
}
procedure `java.lang.RuntimeException` `i`(`io.grpc.f` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lio/grpc/stub/ClientCalls;.i:(Lio/grpc/f;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L38e0d4.  v0:= 0I;
  #L38e0d6.  call `cancel`(v3, v0, v4) @signature `Lio/grpc/f;.cancel:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L38e0dc.  goto L38e0f2;
  #L38e0de.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e0e0.  v0:= `@@io.grpc.stub.ClientCalls.a` @type ^`java.util.logging.Logger` @kind object;
  #L38e0e4.  v1:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L38e0e8.  v2:= "RuntimeException encountered while closing call" @kind object;
  #L38e0ec.  call `log`(v0, v1, v2, v3) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L38e0f2.  v3:= instanceof @variable v4 @type ^`java.lang.RuntimeException` @kind boolean;
  #L38e0f6.  if v3 != 0 then goto L38e114;
  #L38e0fa.  v3:= instanceof @variable v4 @type ^`java.lang.Error` @kind boolean;
  #L38e0fe.  if v3 == 0 then goto L38e108;
  #L38e102.  v4:= (`java.lang.Error`) v4 @kind object;
  #L38e106.  throw v4;
  #L38e108.  v3:= new `java.lang.AssertionError`;
  #L38e10c.  call `<init>`(v3, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38e112.  throw v3;
  #L38e114.  v4:= (`java.lang.RuntimeException`) v4 @kind object;
  #L38e118.  throw v4;
  catch `java.lang.Throwable` @[L38e0d6..L38e0dc] goto L38e0de;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `j`(`io.grpc.f` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/grpc/stub/ClientCalls;.j:(Lio/grpc/f;Ljava/lang/Object;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L38de38.  v0:= new `io.grpc.stub.ClientCalls$d`;
  #L38de3c.  call `<init>`(v0, v2) @signature `Lio/grpc/stub/ClientCalls$d;.<init>:(Lio/grpc/f;)V` @kind direct;
  #L38de42.  v1:= new `io.grpc.stub.ClientCalls$g`;
  #L38de46.  call `<init>`(v1, v0) @signature `Lio/grpc/stub/ClientCalls$g;.<init>:(Lio/grpc/stub/ClientCalls$d;)V` @kind direct;
  #L38de4c.  call `e`(v2, v3, v1) @signature `Lio/grpc/stub/ClientCalls;.e:(Lio/grpc/f;Ljava/lang/Object;Lio/grpc/stub/ClientCalls$e;)V` @kind static;
  #L38de52.  return v0 @kind object;
}
procedure `java.lang.Object` `k`(`java.util.concurrent.Future` v2 @kind object) @signature `Lio/grpc/stub/ClientCalls;.k:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L38e064.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/Future;.get:()Ljava/lang/Object;` @kind interface;
  #L38e06a.  v2:= temp @kind object;
  #L38e06c.  return v2 @kind object;
  #L38e06e.  v2:= Exception @type ^`java.util.concurrent.ExecutionException` @kind object;
  #L38e070.  call temp:= `getCause`(v2) @signature `Ljava/util/concurrent/ExecutionException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L38e076.  v2:= temp @kind object;
  #L38e078.  call temp:= `m`(v2) @signature `Lio/grpc/stub/ClientCalls;.m:(Ljava/lang/Throwable;)Lio/grpc/StatusRuntimeException;` @kind static;
  #L38e07e.  v2:= temp @kind object;
  #L38e080.  throw v2;
  #L38e082.  v2:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L38e084.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L38e08a.  v0:= temp @kind object;
  #L38e08c.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L38e092.  v0:= `@@io.grpc.Status.g` @type ^`io.grpc.Status` @kind object;
  #L38e096.  v1:= "Thread interrupted" @kind object;
  #L38e09a.  call temp:= `r`(v0, v1) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L38e0a0.  v0:= temp @kind object;
  #L38e0a2.  call temp:= `q`(v0, v2) @signature `Lio/grpc/Status;.q:(Ljava/lang/Throwable;)Lio/grpc/Status;` @kind virtual;
  #L38e0a8.  v2:= temp @kind object;
  #L38e0aa.  call temp:= `d`(v2) @signature `Lio/grpc/Status;.d:()Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L38e0b0.  v2:= temp @kind object;
  #L38e0b2.  throw v2;
  catch `java.lang.InterruptedException` @[L38e064..L38e06c] goto L38e082;
  catch `java.util.concurrent.ExecutionException` @[L38e064..L38e06c] goto L38e06e;
}
procedure `void` `l`(`io.grpc.f` v1 @kind object, `io.grpc.stub.ClientCalls$e` v2 @kind object) @signature `Lio/grpc/stub/ClientCalls;.l:(Lio/grpc/f;Lio/grpc/stub/ClientCalls$e;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L38e2c4.  v0:= new `io.grpc.t0`;
  #L38e2c8.  call `<init>`(v0) @signature `Lio/grpc/t0;.<init>:()V` @kind direct;
  #L38e2ce.  call `start`(v1, v2, v0) @signature `Lio/grpc/f;.start:(Lio/grpc/f$a;Lio/grpc/t0;)V` @kind virtual;
  #L38e2d4.  call `a`(v2) @signature `Lio/grpc/stub/ClientCalls$e;.a:()V` @kind virtual;
  #L38e2da.  return @kind void;
}
procedure `io.grpc.StatusRuntimeException` `m`(`java.lang.Throwable` v2 @kind object) @signature `Lio/grpc/stub/ClientCalls;.m:(Ljava/lang/Throwable;)Lio/grpc/StatusRuntimeException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L38de64.  v0:= "t" @kind object;
  #L38de68.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38de6e.  v0:= temp @kind object;
  #L38de70.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L38de74.  if v0 == 0 then goto L38ded2;
  #L38de78.  v1:= instanceof @variable v0 @type ^`io.grpc.StatusException` @kind boolean;
  #L38de7c.  if v1 == 0 then goto L38dea0;
  #L38de80.  v0:= (`io.grpc.StatusException`) v0 @kind object;
  #L38de84.  v2:= new `io.grpc.StatusRuntimeException`;
  #L38de88.  call temp:= `a`(v0) @signature `Lio/grpc/StatusException;.a:()Lio/grpc/Status;` @kind virtual;
  #L38de8e.  v1:= temp @kind object;
  #L38de90.  call temp:= `b`(v0) @signature `Lio/grpc/StatusException;.b:()Lio/grpc/t0;` @kind virtual;
  #L38de96.  v0:= temp @kind object;
  #L38de98.  call `<init>`(v2, v1, v0) @signature `Lio/grpc/StatusRuntimeException;.<init>:(Lio/grpc/Status;Lio/grpc/t0;)V` @kind direct;
  #L38de9e.  return v2 @kind object;
  #L38dea0.  v1:= instanceof @variable v0 @type ^`io.grpc.StatusRuntimeException` @kind boolean;
  #L38dea4.  if v1 == 0 then goto L38dec8;
  #L38dea8.  v0:= (`io.grpc.StatusRuntimeException`) v0 @kind object;
  #L38deac.  v2:= new `io.grpc.StatusRuntimeException`;
  #L38deb0.  call temp:= `a`(v0) @signature `Lio/grpc/StatusRuntimeException;.a:()Lio/grpc/Status;` @kind virtual;
  #L38deb6.  v1:= temp @kind object;
  #L38deb8.  call temp:= `b`(v0) @signature `Lio/grpc/StatusRuntimeException;.b:()Lio/grpc/t0;` @kind virtual;
  #L38debe.  v0:= temp @kind object;
  #L38dec0.  call `<init>`(v2, v1, v0) @signature `Lio/grpc/StatusRuntimeException;.<init>:(Lio/grpc/Status;Lio/grpc/t0;)V` @kind direct;
  #L38dec6.  return v2 @kind object;
  #L38dec8.  call temp:= `getCause`(v0) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L38dece.  v0:= temp @kind object;
  #L38ded0.  goto L38de74;
  #L38ded2.  v0:= `@@io.grpc.Status.h` @type ^`io.grpc.Status` @kind object;
  #L38ded6.  v1:= "unexpected exception" @kind object;
  #L38deda.  call temp:= `r`(v0, v1) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L38dee0.  v0:= temp @kind object;
  #L38dee2.  call temp:= `q`(v0, v2) @signature `Lio/grpc/Status;.q:(Ljava/lang/Throwable;)Lio/grpc/Status;` @kind virtual;
  #L38dee8.  v2:= temp @kind object;
  #L38deea.  call temp:= `d`(v2) @signature `Lio/grpc/Status;.d:()Lio/grpc/StatusRuntimeException;` @kind virtual;
  #L38def0.  v2:= temp @kind object;
  #L38def2.  return v2 @kind object;
}
