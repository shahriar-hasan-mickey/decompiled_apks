record `io.grpc.stub.ClientCalls$StubType` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.grpc.stub.ClientCalls$StubType` `@@io.grpc.stub.ClientCalls$StubType.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.stub.ClientCalls$StubType` `@@io.grpc.stub.ClientCalls$StubType.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.stub.ClientCalls$StubType` `@@io.grpc.stub.ClientCalls$StubType.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.stub.ClientCalls$StubType`[] `@@io.grpc.stub.ClientCalls$StubType.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/grpc/stub/ClientCalls$StubType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38dae8.  v0:= new `io.grpc.stub.ClientCalls$StubType`;
  #L38daec.  v1:= "BLOCKING" @kind object;
  #L38daf0.  v2:= 0I;
  #L38daf2.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/stub/ClientCalls$StubType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38daf8.  `@@io.grpc.stub.ClientCalls$StubType.a` @type ^`io.grpc.stub.ClientCalls$StubType` := v0 @kind object;
  #L38dafc.  v1:= new `io.grpc.stub.ClientCalls$StubType`;
  #L38db00.  v3:= "FUTURE" @kind object;
  #L38db04.  v4:= 1I;
  #L38db06.  call `<init>`(v1, v3, v4) @signature `Lio/grpc/stub/ClientCalls$StubType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38db0c.  `@@io.grpc.stub.ClientCalls$StubType.b` @type ^`io.grpc.stub.ClientCalls$StubType` := v1 @kind object;
  #L38db10.  v3:= new `io.grpc.stub.ClientCalls$StubType`;
  #L38db14.  v5:= "ASYNC" @kind object;
  #L38db18.  v6:= 2I;
  #L38db1a.  call `<init>`(v3, v5, v6) @signature `Lio/grpc/stub/ClientCalls$StubType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38db20.  `@@io.grpc.stub.ClientCalls$StubType.c` @type ^`io.grpc.stub.ClientCalls$StubType` := v3 @kind object;
  #L38db24.  v5:= 3I;
  #L38db26.  v5:= new `io.grpc.stub.ClientCalls$StubType`[v5];
  #L38db2a.  v5[v2]:= v0 @kind object;
  #L38db2e.  v5[v4]:= v1 @kind object;
  #L38db32.  v5[v6]:= v3 @kind object;
  #L38db36.  `@@io.grpc.stub.ClientCalls$StubType.d` @type ^`io.grpc.stub.ClientCalls$StubType`[] := v5 @kind object;
  #L38db3a.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.stub.ClientCalls$StubType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/grpc/stub/ClientCalls$StubType;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L38db4c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38db52.  return @kind void;
}
procedure `io.grpc.stub.ClientCalls$StubType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/grpc/stub/ClientCalls$StubType;.valueOf:(Ljava/lang/String;)Lio/grpc/stub/ClientCalls$StubType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38daa0.  v0:= constclass @type ^`io.grpc.stub.ClientCalls$StubType` @kind object;
  #L38daa4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L38daaa.  v1:= temp @kind object;
  #L38daac.  v1:= (`io.grpc.stub.ClientCalls$StubType`) v1 @kind object;
  #L38dab0.  return v1 @kind object;
}
procedure `io.grpc.stub.ClientCalls$StubType`[] `values`() @signature `Lio/grpc/stub/ClientCalls$StubType;.values:()[Lio/grpc/stub/ClientCalls$StubType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38dac4.  v0:= `@@io.grpc.stub.ClientCalls$StubType.d` @type ^`io.grpc.stub.ClientCalls$StubType`[] @kind object;
  #L38dac8.  call temp:= `clone`(v0) @signature `[Lio/grpc/stub/ClientCalls$StubType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L38dace.  v0:= temp @kind object;
  #L38dad0.  v0:= (`io.grpc.stub.ClientCalls$StubType`[]) v0 @kind object;
  #L38dad4.  return v0 @kind object;
}
