record `io.grpc.stub.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.grpc.stub.d` @kind class {
}
global `boolean` `@@io.grpc.stub.b.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/grpc/stub/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L38cfe4.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.stub.b` v0 @kind this, `io.grpc.d` v1 @kind object, `io.grpc.c` v2 @kind object) @signature `Lio/grpc/stub/b;.<init>:(Lio/grpc/d;Lio/grpc/c;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L38cff8.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/stub/d;.<init>:(Lio/grpc/d;Lio/grpc/c;)V` @kind direct;
  #L38cffe.  return @kind void;
}
procedure `io.grpc.stub.d` `newStub`(`io.grpc.stub.d$a` v1 @kind object, `io.grpc.d` v2 @kind object) @signature `Lio/grpc/stub/b;.newStub:(Lio/grpc/stub/d$a;Lio/grpc/d;)Lio/grpc/stub/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38cf98.  v0:= `@@io.grpc.c.k` @type ^`io.grpc.c` @kind object;
  #L38cf9c.  call temp:= `newStub`(v1, v2, v0) @signature `Lio/grpc/stub/b;.newStub:(Lio/grpc/stub/d$a;Lio/grpc/d;Lio/grpc/c;)Lio/grpc/stub/d;` @kind static;
  #L38cfa2.  v1:= temp @kind object;
  #L38cfa4.  return v1 @kind object;
}
procedure `io.grpc.stub.d` `newStub`(`io.grpc.stub.d$a` v2 @kind object, `io.grpc.d` v3 @kind object, `io.grpc.c` v4 @kind object) @signature `Lio/grpc/stub/b;.newStub:(Lio/grpc/stub/d$a;Lio/grpc/d;Lio/grpc/c;)Lio/grpc/stub/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L38cfb8.  v0:= `@@io.grpc.stub.ClientCalls.c` @type ^`io.grpc.c$a` @kind object;
  #L38cfbc.  v1:= `@@io.grpc.stub.ClientCalls$StubType.a` @type ^`io.grpc.stub.ClientCalls$StubType` @kind object;
  #L38cfc0.  call temp:= `r`(v4, v0, v1) @signature `Lio/grpc/c;.r:(Lio/grpc/c$a;Ljava/lang/Object;)Lio/grpc/c;` @kind virtual;
  #L38cfc6.  v4:= temp @kind object;
  #L38cfc8.  call temp:= `newStub`(v2, v3, v4) @signature `Lio/grpc/stub/d$a;.newStub:(Lio/grpc/d;Lio/grpc/c;)Lio/grpc/stub/d;` @kind interface;
  #L38cfce.  v2:= temp @kind object;
  #L38cfd0.  return v2 @kind object;
}
