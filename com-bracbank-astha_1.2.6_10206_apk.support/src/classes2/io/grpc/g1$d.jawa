record `io.grpc.g1$d` @kind class @AccessFlag PUBLIC_FINAL {
  `io.grpc.g1$c` `io.grpc.g1$d.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ScheduledFuture` `io.grpc.g1$d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.g1$d` v1 @kind this, `io.grpc.g1$c` v2 @kind object, `java.util.concurrent.ScheduledFuture` v3 @kind object) @signature `Lio/grpc/g1$d;.<init>:(Lio/grpc/g1$c;Ljava/util/concurrent/ScheduledFuture;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3651b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3651be.  v0:= "runnable" @kind object;
  #L3651c2.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3651c8.  v2:= temp @kind object;
  #L3651ca.  v2:= (`io.grpc.g1$c`) v2 @kind object;
  #L3651ce.  v1.`io.grpc.g1$d.a` @type ^`io.grpc.g1$c` := v2 @kind object;
  #L3651d2.  v2:= "future" @kind object;
  #L3651d6.  call temp:= `checkNotNull`(v3, v2) @signature `Lcom/google/common/base/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3651dc.  v2:= temp @kind object;
  #L3651de.  v2:= (`java.util.concurrent.ScheduledFuture`) v2 @kind object;
  #L3651e2.  v1.`io.grpc.g1$d.b` @type ^`java.util.concurrent.ScheduledFuture` := v2 @kind object;
  #L3651e6.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.g1$d` v0 @kind this, `io.grpc.g1$c` v1 @kind object, `java.util.concurrent.ScheduledFuture` v2 @kind object, `io.grpc.g1$a` v3 @kind object) @signature `Lio/grpc/g1$d;.<init>:(Lio/grpc/g1$c;Ljava/util/concurrent/ScheduledFuture;Lio/grpc/g1$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3651f8.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/g1$d;.<init>:(Lio/grpc/g1$c;Ljava/util/concurrent/ScheduledFuture;)V` @kind direct;
  #L3651fe.  return @kind void;
}
procedure `void` `a`(`io.grpc.g1$d` v2 @kind this) @signature `Lio/grpc/g1$d;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L365210.  v0:= v2.`io.grpc.g1$d.a` @type ^`io.grpc.g1$c` @kind object;
  #L365214.  v1:= 1I;
  #L365216.  v0.`io.grpc.g1$c.b` @type ^`boolean` := v1 @kind boolean;
  #L36521a.  v0:= v2.`io.grpc.g1$d.b` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L36521e.  v1:= 0I;
  #L365220.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/ScheduledFuture;.cancel:(Z)Z` @kind interface;
  #L365226.  return @kind void;
}
procedure `boolean` `b`(`io.grpc.g1$d` v2 @kind this) @signature `Lio/grpc/g1$d;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36518c.  v0:= v2.`io.grpc.g1$d.a` @type ^`io.grpc.g1$c` @kind object;
  #L365190.  v1:= v0.`io.grpc.g1$c.c` @type ^`boolean` @kind boolean;
  #L365194.  if v1 != 0 then goto L3651a4;
  #L365198.  v0:= v0.`io.grpc.g1$c.b` @type ^`boolean` @kind boolean;
  #L36519c.  if v0 != 0 then goto L3651a4;
  #L3651a0.  v0:= 1I;
  #L3651a2.  goto L3651a6;
  #L3651a4.  v0:= 0I;
  #L3651a6.  return v0;
}
