record `cordova.plugins.Diagnostic$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `cordova.plugins.Diagnostic` `cordova.plugins.Diagnostic$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`cordova.plugins.Diagnostic$b` v0 @kind this, `cordova.plugins.Diagnostic` v1 @kind object) @signature `Lcordova/plugins/Diagnostic$b;.<init>:(Lcordova/plugins/Diagnostic;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L356a54.  v0.`cordova.plugins.Diagnostic$b.a` @type ^`cordova.plugins.Diagnostic` := v1 @kind object;
  #L356a58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L356a5e.  return @kind void;
}
procedure `void` `run`(`cordova.plugins.Diagnostic$b` v4 @kind this) @signature `Lcordova/plugins/Diagnostic$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L356a70.  v0:= v4.`cordova.plugins.Diagnostic$b.a` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L356a74.  v1:= "Warm restarting main activity" @kind object;
  #L356a78.  call `G`(v0, v1) @signature `Lcordova/plugins/Diagnostic;.G:(Ljava/lang/String;)V` @kind virtual;
  #L356a7e.  v0:= `@@cordova.plugins.Diagnostic.j` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L356a82.  v0:= v0.`org.apache.cordova.CordovaPlugin.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L356a86.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroidx/appcompat/app/d;` @kind interface;
  #L356a8c.  v0:= temp @kind object;
  #L356a8e.  call `recreate`(v0) @signature `Landroid/app/Activity;.recreate:()V` @kind virtual;
  #L356a94.  goto L356acc;
  #L356a96.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L356a98.  v1:= v4.`cordova.plugins.Diagnostic$b.a` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L356a9c.  v2:= new `java.lang.StringBuilder`;
  #L356aa0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L356aa6.  v3:= "Unable to warm restart main activity: " @kind object;
  #L356aaa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L356ab0.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L356ab6.  v0:= temp @kind object;
  #L356ab8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L356abe.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L356ac4.  v0:= temp @kind object;
  #L356ac6.  call `t`(v1, v0) @signature `Lcordova/plugins/Diagnostic;.t:(Ljava/lang/String;)V` @kind virtual;
  #L356acc.  return @kind void;
  catch `java.lang.Exception` @[L356a70..L356a94] goto L356a96;
}
