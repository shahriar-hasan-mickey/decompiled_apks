record `cordova.plugins.Diagnostic_Wifi` @kind class @AccessFlag PUBLIC extends `org.apache.cordova.CordovaPlugin` @kind class {
  `cordova.plugins.Diagnostic` `cordova.plugins.Diagnostic_Wifi.a` @AccessFlag PRIVATE;
  `org.apache.cordova.CallbackContext` `cordova.plugins.Diagnostic_Wifi.b` @AccessFlag PROTECTED;
}
global `cordova.plugins.Diagnostic_Wifi` `@@cordova.plugins.Diagnostic_Wifi.c` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lcordova/plugins/Diagnostic_Wifi;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L358b68.  return @kind void;
}
procedure `void` `<init>`(`cordova.plugins.Diagnostic_Wifi` v0 @kind this) @signature `Lcordova/plugins/Diagnostic_Wifi;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L358b7c.  call `<init>`(v0) @signature `Lorg/apache/cordova/CordovaPlugin;.<init>:()V` @kind direct;
  #L358b82.  return @kind void;
}
procedure `boolean` `a`(`cordova.plugins.Diagnostic_Wifi` v2 @kind this) @signature `Lcordova/plugins/Diagnostic_Wifi;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L358b28.  v0:= v2.`org.apache.cordova.CordovaPlugin.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L358b2c.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroidx/appcompat/app/d;` @kind interface;
  #L358b32.  v0:= temp @kind object;
  #L358b34.  call temp:= `getApplicationContext`(v0) @signature `Landroid/app/Activity;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L358b3a.  v0:= temp @kind object;
  #L358b3c.  v1:= "wifi" @kind object;
  #L358b40.  call temp:= `getSystemService`(v0, v1) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L358b46.  v0:= temp @kind object;
  #L358b48.  v0:= (`android.net.wifi.WifiManager`) v0 @kind object;
  #L358b4c.  call temp:= `isWifiEnabled`(v0) @signature `Landroid/net/wifi/WifiManager;.isWifiEnabled:()Z` @kind virtual;
  #L358b52.  v0:= temp;
  #L358b54.  return v0;
}
procedure `void` `b`(`cordova.plugins.Diagnostic_Wifi` v2 @kind this, `boolean` v3 ) @signature `Lcordova/plugins/Diagnostic_Wifi;.b:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L358bbc.  v0:= v2.`org.apache.cordova.CordovaPlugin.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L358bc0.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroidx/appcompat/app/d;` @kind interface;
  #L358bc6.  v0:= temp @kind object;
  #L358bc8.  call temp:= `getApplicationContext`(v0) @signature `Landroid/app/Activity;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L358bce.  v0:= temp @kind object;
  #L358bd0.  v1:= "wifi" @kind object;
  #L358bd4.  call temp:= `getSystemService`(v0, v1) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L358bda.  v0:= temp @kind object;
  #L358bdc.  v0:= (`android.net.wifi.WifiManager`) v0 @kind object;
  #L358be0.  if v3 == 0 then goto L358bfa;
  #L358be4.  call temp:= `isWifiEnabled`(v0) @signature `Landroid/net/wifi/WifiManager;.isWifiEnabled:()Z` @kind virtual;
  #L358bea.  v1:= temp;
  #L358bec.  if v1 != 0 then goto L358bfa;
  #L358bf0.  v3:= 1I;
  #L358bf2.  call temp:= `setWifiEnabled`(v0, v3) @signature `Landroid/net/wifi/WifiManager;.setWifiEnabled:(Z)Z` @kind virtual;
  #L358bf8.  goto L358c12;
  #L358bfa.  if v3 != 0 then goto L358c12;
  #L358bfe.  call temp:= `isWifiEnabled`(v0) @signature `Landroid/net/wifi/WifiManager;.isWifiEnabled:()Z` @kind virtual;
  #L358c04.  v3:= temp;
  #L358c06.  if v3 == 0 then goto L358c12;
  #L358c0a.  v3:= 0I;
  #L358c0c.  call temp:= `setWifiEnabled`(v0, v3) @signature `Landroid/net/wifi/WifiManager;.setWifiEnabled:(Z)Z` @kind virtual;
  #L358c12.  return @kind void;
}
procedure `void` `c`(`cordova.plugins.Diagnostic_Wifi` v2 @kind this) @signature `Lcordova/plugins/Diagnostic_Wifi;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L358c24.  v0:= v2.`cordova.plugins.Diagnostic_Wifi.a` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L358c28.  v1:= "Switch to Wifi Settings" @kind object;
  #L358c2c.  call `E`(v0, v1) @signature `Lcordova/plugins/Diagnostic;.E:(Ljava/lang/String;)V` @kind virtual;
  #L358c32.  v0:= new `android.content.Intent`;
  #L358c36.  v1:= "android.settings.WIFI_SETTINGS" @kind object;
  #L358c3a.  call `<init>`(v0, v1) @signature `Landroid/content/Intent;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L358c40.  v1:= v2.`org.apache.cordova.CordovaPlugin.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L358c44.  call temp:= `getActivity`(v1) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroidx/appcompat/app/d;` @kind interface;
  #L358c4a.  v1:= temp @kind object;
  #L358c4c.  call `startActivity`(v1, v0) @signature `Landroid/app/Activity;.startActivity:(Landroid/content/Intent;)V` @kind virtual;
  #L358c52.  return @kind void;
}
procedure `boolean` `execute`(`cordova.plugins.Diagnostic_Wifi` v3 @kind this, `java.lang.String` v4 @kind object, `org.json.JSONArray` v5 @kind object, `org.apache.cordova.CallbackContext` v6 @kind object) @signature `Lcordova/plugins/Diagnostic_Wifi;.execute:(Ljava/lang/String;Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L358a58.  v0:= `@@cordova.plugins.Diagnostic.j` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L358a5c.  v3.`cordova.plugins.Diagnostic_Wifi.b` @type ^`org.apache.cordova.CallbackContext` := v6 @kind object;
  #L358a60.  v0.`cordova.plugins.Diagnostic.d` @type ^`org.apache.cordova.CallbackContext` := v6 @kind object;
  #L358a64.  v0:= 0I;
  #L358a66.  v1:= "switchToWifiSettings" @kind object;
  #L358a6a.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L358a70.  v1:= temp;
  #L358a72.  v2:= 1I;
  #L358a74.  if v1 == 0 then goto L358a86;
  #L358a78.  call `c`(v3) @signature `Lcordova/plugins/Diagnostic_Wifi;.c:()V` @kind virtual;
  #L358a7e.  call `success`(v6) @signature `Lorg/apache/cordova/CallbackContext;.success:()V` @kind virtual;
  #L358a84.  goto L358ad4;
  #L358a86.  v1:= "isWifiAvailable" @kind object;
  #L358a8a.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L358a90.  v1:= temp;
  #L358a92.  if v1 == 0 then goto L358ab0;
  #L358a96.  call temp:= `a`(v3) @signature `Lcordova/plugins/Diagnostic_Wifi;.a:()Z` @kind virtual;
  #L358a9c.  v4:= temp;
  #L358a9e.  if v4 == 0 then goto L358aa6;
  #L358aa2.  v4:= 1I;
  #L358aa4.  goto L358aa8;
  #L358aa6.  v4:= 0I;
  #L358aa8.  call `success`(v6, v4) @signature `Lorg/apache/cordova/CallbackContext;.success:(I)V` @kind virtual;
  #L358aae.  goto L358ad4;
  #L358ab0.  v1:= "setWifiState" @kind object;
  #L358ab4.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L358aba.  v4:= temp;
  #L358abc.  if v4 == 0 then goto L358ad6;
  #L358ac0.  call temp:= `getBoolean`(v5, v0) @signature `Lorg/json/JSONArray;.getBoolean:(I)Z` @kind virtual;
  #L358ac6.  v4:= temp;
  #L358ac8.  call `b`(v3, v4) @signature `Lcordova/plugins/Diagnostic_Wifi;.b:(Z)V` @kind virtual;
  #L358ace.  call `success`(v6) @signature `Lorg/apache/cordova/CallbackContext;.success:()V` @kind virtual;
  #L358ad4.  return v2;
  #L358ad6.  v4:= v3.`cordova.plugins.Diagnostic_Wifi.a` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L358ada.  v5:= "Invalid action" @kind object;
  #L358ade.  call `t`(v4, v5) @signature `Lcordova/plugins/Diagnostic;.t:(Ljava/lang/String;)V` @kind virtual;
  #L358ae4.  return v0;
  #L358ae6.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L358ae8.  v5:= v3.`cordova.plugins.Diagnostic_Wifi.a` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L358aec.  call temp:= `getMessage`(v4) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L358af2.  v4:= temp @kind object;
  #L358af4.  v6:= "Exception occurred: " @kind object;
  #L358af8.  call temp:= `concat`(v6, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L358afe.  v4:= temp @kind object;
  #L358b00.  call `t`(v5, v4) @signature `Lcordova/plugins/Diagnostic;.t:(Ljava/lang/String;)V` @kind virtual;
  #L358b06.  return v0;
  catch `java.lang.Exception` @[L358a66..L358ae4] goto L358ae6;
}
procedure `void` `initialize`(`cordova.plugins.Diagnostic_Wifi` v1 @kind this, `org.apache.cordova.CordovaInterface` v2 @kind object, `org.apache.cordova.CordovaWebView` v3 @kind object) @signature `Lcordova/plugins/Diagnostic_Wifi;.initialize:(Lorg/apache/cordova/CordovaInterface;Lorg/apache/cordova/CordovaWebView;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L358b94.  `@@cordova.plugins.Diagnostic_Wifi.c` @type ^`cordova.plugins.Diagnostic_Wifi` := v1 @kind object;
  #L358b98.  call temp:= `p`() @signature `Lcordova/plugins/Diagnostic;.p:()Lcordova/plugins/Diagnostic;` @kind static;
  #L358b9e.  v0:= temp @kind object;
  #L358ba0.  v1.`cordova.plugins.Diagnostic_Wifi.a` @type ^`cordova.plugins.Diagnostic` := v0 @kind object;
  #L358ba4.  call `initialize`(v1, v2, v3) @signature `Lorg/apache/cordova/CordovaPlugin;.initialize:(Lorg/apache/cordova/CordovaInterface;Lorg/apache/cordova/CordovaWebView;)V` @kind super;
  #L358baa.  return @kind void;
}
