record `e2.a` @kind class @AccessFlag PUBLIC_FINAL extends `e2.b` @kind interface, `i2.a` @kind interface {
  `io.reactivex.internal.util.e` `e2.a.a` @AccessFlag ;
  `boolean` `e2.a.b` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`e2.a` v0 @kind this) @signature `Le2/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L35c240.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35c246.  return @kind void;
}
procedure `boolean` `a`(`e2.a` v2 @kind this, `e2.b` v3 @kind object) @signature `Le2/a;.a:(Le2/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35c194.  v0:= "Disposable item is null" @kind object;
  #L35c198.  call temp:= `d`(v3, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L35c19e.  v0:= v2.`e2.a.b` @type ^`boolean` @kind boolean;
  #L35c1a2.  v1:= 0I;
  #L35c1a4.  if v0 == 0 then goto L35c1aa;
  #L35c1a8.  return v1;
  #L35c1aa.  @monitorenter v2
  #L35c1ac.  v0:= v2.`e2.a.b` @type ^`boolean` @kind boolean;
  #L35c1b0.  if v0 == 0 then goto L35c1b8;
  #L35c1b4.  @monitorexit v2
  #L35c1b6.  return v1;
  #L35c1b8.  v0:= v2.`e2.a.a` @type ^`io.reactivex.internal.util.e` @kind object;
  #L35c1bc.  if v0 == 0 then goto L35c1d4;
  #L35c1c0.  call temp:= `e`(v0, v3) @signature `Lio/reactivex/internal/util/e;.e:(Ljava/lang/Object;)Z` @kind virtual;
  #L35c1c6.  v3:= temp;
  #L35c1c8.  if v3 != 0 then goto L35c1ce;
  #L35c1cc.  goto L35c1d4;
  #L35c1ce.  @monitorexit v2
  #L35c1d0.  v3:= 1I;
  #L35c1d2.  return v3;
  #L35c1d4.  @monitorexit v2
  #L35c1d6.  return v1;
  #L35c1d8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35c1da.  @monitorexit v2
  #L35c1dc.  throw v3;
  catch `java.lang.Throwable` @[L35c1ac..L35c1dc] goto L35c1d8;
}
procedure `boolean` `b`(`e2.a` v1 @kind this, `e2.b` v2 @kind object) @signature `Le2/a;.b:(Le2/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35c124.  v0:= "d is null" @kind object;
  #L35c128.  call temp:= `d`(v2, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L35c12e.  v0:= v1.`e2.a.b` @type ^`boolean` @kind boolean;
  #L35c132.  if v0 != 0 then goto L35c16c;
  #L35c136.  @monitorenter v1
  #L35c138.  v0:= v1.`e2.a.b` @type ^`boolean` @kind boolean;
  #L35c13c.  if v0 != 0 then goto L35c162;
  #L35c140.  v0:= v1.`e2.a.a` @type ^`io.reactivex.internal.util.e` @kind object;
  #L35c144.  if v0 != 0 then goto L35c156;
  #L35c148.  v0:= new `io.reactivex.internal.util.e`;
  #L35c14c.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/e;.<init>:()V` @kind direct;
  #L35c152.  v1.`e2.a.a` @type ^`io.reactivex.internal.util.e` := v0 @kind object;
  #L35c156.  call temp:= `a`(v0, v2) @signature `Lio/reactivex/internal/util/e;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L35c15c.  v2:= 1I;
  #L35c15e.  @monitorexit v1
  #L35c160.  return v2;
  #L35c162.  @monitorexit v1
  #L35c164.  goto L35c16c;
  #L35c166.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35c168.  @monitorexit v1
  #L35c16a.  throw v2;
  #L35c16c.  call `e`(v2) @signature `Le2/b;.e:()V` @kind interface;
  #L35c172.  v2:= 0I;
  #L35c174.  return v2;
  catch `java.lang.Throwable` @[L35c138..L35c16a] goto L35c166;
}
procedure `boolean` `c`(`e2.a` v1 @kind this, `e2.b` v2 @kind object) @signature `Le2/a;.c:(Le2/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35c214.  call temp:= `a`(v1, v2) @signature `Le2/a;.a:(Le2/b;)Z` @kind virtual;
  #L35c21a.  v0:= temp;
  #L35c21c.  if v0 == 0 then goto L35c22a;
  #L35c220.  call `e`(v2) @signature `Le2/b;.e:()V` @kind interface;
  #L35c226.  v2:= 1I;
  #L35c228.  return v2;
  #L35c22a.  v2:= 0I;
  #L35c22c.  return v2;
}
procedure `boolean` `d`(`e2.a` v1 @kind this) @signature `Le2/a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35c1fc.  v0:= v1.`e2.a.b` @type ^`boolean` @kind boolean;
  #L35c200.  return v0;
}
procedure `void` `e`(`e2.a` v2 @kind this) @signature `Le2/a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35c258.  v0:= v2.`e2.a.b` @type ^`boolean` @kind boolean;
  #L35c25c.  if v0 == 0 then goto L35c262;
  #L35c260.  return @kind void;
  #L35c262.  @monitorenter v2
  #L35c264.  v0:= v2.`e2.a.b` @type ^`boolean` @kind boolean;
  #L35c268.  if v0 == 0 then goto L35c270;
  #L35c26c.  @monitorexit v2
  #L35c26e.  return @kind void;
  #L35c270.  v0:= 1I;
  #L35c272.  v2.`e2.a.b` @type ^`boolean` := v0 @kind boolean;
  #L35c276.  v0:= v2.`e2.a.a` @type ^`io.reactivex.internal.util.e` @kind object;
  #L35c27a.  v1:= 0I;
  #L35c27c.  v2.`e2.a.a` @type ^`io.reactivex.internal.util.e` := v1 @kind object;
  #L35c280.  @monitorexit v2
  #L35c282.  call `f`(v2, v0) @signature `Le2/a;.f:(Lio/reactivex/internal/util/e;)V` @kind virtual;
  #L35c288.  return @kind void;
  #L35c28a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35c28c.  @monitorexit v2
  #L35c28e.  throw v0;
  catch `java.lang.Throwable` @[L35c264..L35c282] goto L35c28a;
  catch `java.lang.Throwable` @[L35c28c..L35c28e] goto L35c28a;
}
procedure `void` `f`(`e2.a` v6 @kind this, `io.reactivex.internal.util.e` v7 @kind object) @signature `Le2/a;.f:(Lio/reactivex/internal/util/e;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35c2b4.  if v7 != 0 then goto L35c2ba;
  #L35c2b8.  return @kind void;
  #L35c2ba.  v0:= 0I;
  #L35c2bc.  call temp:= `b`(v7) @signature `Lio/reactivex/internal/util/e;.b:()[Ljava/lang/Object;` @kind virtual;
  #L35c2c2.  v7:= temp @kind object;
  #L35c2c4.  v1:= length @variable v7;
  #L35c2c6.  v2:= 0I;
  #L35c2c8.  v3:= 0I;
  #L35c2ca.  if v3 >= v1 then goto L35c308;
  #L35c2ce.  v4:= v7[v3] @kind object;
  #L35c2d2.  v5:= instanceof @variable v4 @type ^`e2.b` @kind boolean;
  #L35c2d6.  if v5 == 0 then goto L35c302;
  #L35c2da.  v4:= (`e2.b`) v4 @kind object;
  #L35c2de.  call `e`(v4) @signature `Le2/b;.e:()V` @kind interface;
  #L35c2e4.  goto L35c302;
  #L35c2e6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35c2e8.  call `b`(v4) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L35c2ee.  if v0 != 0 then goto L35c2fc;
  #L35c2f2.  v0:= new `java.util.ArrayList`;
  #L35c2f6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L35c2fc.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L35c302.  v3:= v3 + 1;
  #L35c306.  goto L35c2ca;
  #L35c308.  if v0 == 0 then goto L35c33c;
  #L35c30c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35c312.  v7:= temp;
  #L35c314.  v1:= 1I;
  #L35c316.  if v7 != v1 then goto L35c330;
  #L35c31a.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35c320.  v7:= temp @kind object;
  #L35c322.  v7:= (`java.lang.Throwable`) v7 @kind object;
  #L35c326.  call temp:= `d`(v7) @signature `Lio/reactivex/internal/util/ExceptionHelper;.d:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L35c32c.  v7:= temp @kind object;
  #L35c32e.  throw v7;
  #L35c330.  v7:= new `io.reactivex.exceptions.CompositeException`;
  #L35c334.  call `<init>`(v7, v0) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L35c33a.  throw v7;
  #L35c33c.  return @kind void;
  catch `java.lang.Throwable` @[L35c2da..L35c2e4] goto L35c2e6;
}
