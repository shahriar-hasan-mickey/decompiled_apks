record `z2.a` @kind class @AccessFlag  extends `z2.f` @kind class {
  `java.lang.Class` `z2.a.c` @AccessFlag PRIVATE_FINAL;
  `z2.e` `z2.a.d` @AccessFlag PRIVATE_FINAL;
  `z2.e` `z2.a.e` @AccessFlag PRIVATE_FINAL;
  `z2.e` `z2.a.f` @AccessFlag PRIVATE_FINAL;
  `z2.e` `z2.a.g` @AccessFlag PRIVATE_FINAL;
  `z2.a$c` `z2.a.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`z2.a` v1 @kind this, `java.lang.Class` v2 @kind object, `z2.e` v3 @kind object, `z2.e` v4 @kind object, `z2.e` v5 @kind object, `z2.e` v6 @kind object) @signature `Lz2/a;.<init>:(Ljava/lang/Class;Lz2/e;Lz2/e;Lz2/e;Lz2/e;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4118f4.  call `<init>`(v1) @signature `Lz2/f;.<init>:()V` @kind direct;
  #L4118fa.  call temp:= `b`() @signature `Lz2/a$c;.b:()Lz2/a$c;` @kind static;
  #L411900.  v0:= temp @kind object;
  #L411902.  v1.`z2.a.h` @type ^`z2.a$c` := v0 @kind object;
  #L411906.  v1.`z2.a.c` @type ^`java.lang.Class` := v2 @kind object;
  #L41190a.  v1.`z2.a.d` @type ^`z2.e` := v3 @kind object;
  #L41190e.  v1.`z2.a.e` @type ^`z2.e` := v4 @kind object;
  #L411912.  v1.`z2.a.f` @type ^`z2.e` := v5 @kind object;
  #L411916.  v1.`z2.a.g` @type ^`z2.e` := v6 @kind object;
  #L41191a.  return @kind void;
}
procedure `boolean` `r`(`z2.a` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lz2/a;.r:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4116bc.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L4116c0.  v1:= 0I;
  #L4116c2.  v2:= new `java.lang.Class`[v1];
  #L4116c6.  call temp:= `getMethod`(v5, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L4116cc.  v5:= temp @kind object;
  #L4116ce.  v0:= new `java.lang.Object`[v1];
  #L4116d2.  call temp:= `invoke`(v5, v6, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4116d8.  v5:= temp @kind object;
  #L4116da.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L4116de.  call temp:= `booleanValue`(v5) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4116e4.  v4:= temp;
  #L4116e6.  return v4;
  #L4116e8.  call temp:= `n`(v3, v4) @signature `Lz2/f;.n:(Ljava/lang/String;)Z` @kind super;
  #L4116ee.  v4:= temp;
  #L4116f0.  return v4;
  catch `java.lang.NoSuchMethodException` @[L4116bc..L4116e6] goto L4116e8;
}
procedure `boolean` `s`(`z2.a` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lz2/a;.s:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L411714.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L411718.  v1:= 1I;
  #L41171a.  v2:= new `java.lang.Class`[v1];
  #L41171e.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L411722.  v4:= 0I;
  #L411724.  v2[v4]:= v3 @kind object;
  #L411728.  call temp:= `getMethod`(v7, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L41172e.  v0:= temp @kind object;
  #L411730.  v1:= new `java.lang.Object`[v1];
  #L411734.  v1[v4]:= v6 @kind object;
  #L411738.  call temp:= `invoke`(v0, v8, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41173e.  v0:= temp @kind object;
  #L411740.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L411744.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L41174a.  v6:= temp;
  #L41174c.  return v6;
  #L41174e.  call temp:= `r`(v5, v6, v7, v8) @signature `Lz2/a;.r:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L411754.  v6:= temp;
  #L411756.  return v6;
  catch `java.lang.NoSuchMethodException` @[L411714..L41174c] goto L41174e;
}
procedure `z2.f` `t`() @signature `Lz2/a;.t:()Lz2/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L411ae8.  v0:= constclass @type ^`byte`[] @kind object;
  #L411aec.  v1:= 0I;
  #L411aee.  v2:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L411af2.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L411af8.  v2:= temp @kind object;
  #L411afa.  v4:= v2 @kind object;
  #L411afc.  goto L411b0c;
  #L411afe.  v2:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L411b02.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L411b08.  v2:= temp @kind object;
  #L411b0a.  goto L411afa;
  #L411b0c.  v5:= new `z2.e`;
  #L411b10.  v2:= "setUseSessionTickets" @kind object;
  #L411b14.  v3:= 1I;
  #L411b16.  v6:= new `java.lang.Class`[v3];
  #L411b1a.  v7:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L411b1e.  v8:= 0I;
  #L411b20.  v6[v8]:= v7 @kind object;
  #L411b24.  call `<init>`(v5, v1, v2, v6) @signature `Lz2/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L411b2a.  v6:= new `z2.e`;
  #L411b2e.  v2:= "setHostname" @kind object;
  #L411b32.  v7:= new `java.lang.Class`[v3];
  #L411b36.  v9:= constclass @type ^`java.lang.String` @kind object;
  #L411b3a.  v7[v8]:= v9 @kind object;
  #L411b3e.  call `<init>`(v6, v1, v2, v7) @signature `Lz2/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L411b44.  call temp:= `u`() @signature `Lz2/a;.u:()Z` @kind static;
  #L411b4a.  v2:= temp;
  #L411b4c.  if v2 == 0 then goto L411b7e;
  #L411b50.  v2:= new `z2.e`;
  #L411b54.  v7:= "getAlpnSelectedProtocol" @kind object;
  #L411b58.  v9:= new `java.lang.Class`[v8];
  #L411b5c.  call `<init>`(v2, v0, v7, v9) @signature `Lz2/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L411b62.  v7:= new `z2.e`;
  #L411b66.  v9:= "setAlpnProtocols" @kind object;
  #L411b6a.  v3:= new `java.lang.Class`[v3];
  #L411b6e.  v3[v8]:= v0 @kind object;
  #L411b72.  call `<init>`(v7, v1, v9, v3) @signature `Lz2/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L411b78.  v8:= v7 @kind object;
  #L411b7a.  v7:= v2 @kind object;
  #L411b7c.  goto L411b82;
  #L411b7e.  v7:= v1 @kind object;
  #L411b80.  v8:= v7 @kind object;
  #L411b82.  v0:= new `z2.a`;
  #L411b86.  v3:= v0 @kind object;
  #L411b88.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lz2/a;.<init>:(Ljava/lang/Class;Lz2/e;Lz2/e;Lz2/e;Lz2/e;)V` @kind direct;
  #L411b8e.  return v0 @kind object;
  #L411b90.  return v1 @kind object;
  catch `java.lang.ClassNotFoundException` @[L411aee..L411afa] goto L411afe;
  catch `java.lang.ClassNotFoundException` @[L411afe..L411b8e] goto L411b90;
}
procedure `boolean` `u`() @signature `Lz2/a;.u:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4117fc.  v0:= "GMSCore_OpenSSL" @kind object;
  #L411800.  call temp:= `getProvider`(v0) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L411806.  v0:= temp @kind object;
  #L411808.  v1:= 1I;
  #L41180a.  if v0 == 0 then goto L411810;
  #L41180e.  return v1;
  #L411810.  v0:= "android.net.Network" @kind object;
  #L411814.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L41181a.  return v1;
  #L41181c.  v0:= 0I;
  #L41181e.  return v0;
  catch `java.lang.ClassNotFoundException` @[L411810..L41181a] goto L41181c;
}
procedure `b3.c` `c`(`z2.a` v8 @kind this, `javax.net.ssl.X509TrustManager` v9 @kind object) @signature `Lz2/a;.c:(Ljavax/net/ssl/X509TrustManager;)Lb3/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4115c8.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L4115cc.  v1:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L4115d0.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L4115d6.  v1:= temp @kind object;
  #L4115d8.  v2:= 1I;
  #L4115da.  v3:= new `java.lang.Class`[v2];
  #L4115de.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L4115e2.  v5:= 0I;
  #L4115e4.  v3[v5]:= v4 @kind object;
  #L4115e8.  call temp:= `getConstructor`(v1, v3) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L4115ee.  v3:= temp @kind object;
  #L4115f0.  v4:= new `java.lang.Object`[v2];
  #L4115f4.  v4[v5]:= v9 @kind object;
  #L4115f8.  call temp:= `newInstance`(v3, v4) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4115fe.  v3:= temp @kind object;
  #L411600.  v4:= "checkServerTrusted" @kind object;
  #L411604.  v6:= 3I;
  #L411606.  v6:= new `java.lang.Class`[v6];
  #L41160a.  v7:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L41160e.  v6[v5]:= v7 @kind object;
  #L411612.  v6[v2]:= v0 @kind object;
  #L411616.  v2:= 2I;
  #L411618.  v6[v2]:= v0 @kind object;
  #L41161c.  call temp:= `getMethod`(v1, v4, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L411622.  v0:= temp @kind object;
  #L411624.  v1:= new `z2.a$a`;
  #L411628.  call `<init>`(v1, v3, v0) @signature `Lz2/a$a;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #L41162e.  return v1 @kind object;
  #L411630.  call temp:= `c`(v8, v9) @signature `Lz2/f;.c:(Ljavax/net/ssl/X509TrustManager;)Lb3/c;` @kind super;
  #L411636.  v9:= temp @kind object;
  #L411638.  return v9 @kind object;
  catch `java.lang.Exception` @[L4115cc..L41162e] goto L411630;
}
procedure `b3.e` `d`(`z2.a` v6 @kind this, `javax.net.ssl.X509TrustManager` v7 @kind object) @signature `Lz2/a;.d:(Ljavax/net/ssl/X509TrustManager;)Lb3/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41165c.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L411662.  v0:= temp @kind object;
  #L411664.  v1:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L411668.  v2:= 1I;
  #L41166a.  v3:= new `java.lang.Class`[v2];
  #L41166e.  v4:= 0I;
  #L411670.  v5:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L411674.  v3[v4]:= v5 @kind object;
  #L411678.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L41167e.  v0:= temp @kind object;
  #L411680.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L411686.  v1:= new `z2.a$b`;
  #L41168a.  call `<init>`(v1, v7, v0) @signature `Lz2/a$b;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #L411690.  return v1 @kind object;
  #L411692.  call temp:= `d`(v6, v7) @signature `Lz2/f;.d:(Ljavax/net/ssl/X509TrustManager;)Lb3/e;` @kind super;
  #L411698.  v7:= temp @kind object;
  #L41169a.  return v7 @kind object;
  catch `java.lang.NoSuchMethodException` @[L41165c..L411690] goto L411692;
}
procedure `void` `g`(`z2.a` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lz2/a;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41192c.  v0:= 0I;
  #L41192e.  v1:= 1I;
  #L411930.  if v7 == 0 then goto L41195c;
  #L411934.  v2:= v5.`z2.a.d` @type ^`z2.e` @kind object;
  #L411938.  v3:= new `java.lang.Object`[v1];
  #L41193c.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L411940.  v3[v0]:= v4 @kind object;
  #L411944.  call temp:= `e`(v2, v6, v3) @signature `Lz2/e;.e:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41194a.  v2:= v5.`z2.a.e` @type ^`z2.e` @kind object;
  #L41194e.  v3:= new `java.lang.Object`[v1];
  #L411952.  v3[v0]:= v7 @kind object;
  #L411956.  call temp:= `e`(v2, v6, v3) @signature `Lz2/e;.e:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41195c.  v7:= v5.`z2.a.g` @type ^`z2.e` @kind object;
  #L411960.  if v7 == 0 then goto L41198a;
  #L411964.  call temp:= `g`(v7, v6) @signature `Lz2/e;.g:(Ljava/lang/Object;)Z` @kind virtual;
  #L41196a.  v7:= temp;
  #L41196c.  if v7 == 0 then goto L41198a;
  #L411970.  v7:= new `java.lang.Object`[v1];
  #L411974.  call temp:= `e`(v8) @signature `Lz2/f;.e:(Ljava/util/List;)[B` @kind static;
  #L41197a.  v8:= temp @kind object;
  #L41197c.  v7[v0]:= v8 @kind object;
  #L411980.  v8:= v5.`z2.a.g` @type ^`z2.e` @kind object;
  #L411984.  call temp:= `f`(v8, v6, v7) @signature `Lz2/e;.f:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41198a.  return @kind void;
}
procedure `void` `h`(`z2.a` v1 @kind this, `java.net.Socket` v2 @kind object, `java.net.InetSocketAddress` v3 @kind object, `int` v4 ) @signature `Lz2/a;.h:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41199c.  v0:= "Exception in connect" @kind object;
  #L4119a0.  call `connect`(v2, v3, v4) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L4119a6.  return @kind void;
  #L4119a8.  v2:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L4119aa.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4119ae.  v4:= 26I;
  #L4119b2.  if v3 != v4 then goto L4119c8;
  #L4119b6.  v3:= new `java.io.IOException`;
  #L4119ba.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4119c0.  call temp:= `initCause`(v3, v2) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L4119c6.  throw v3;
  #L4119c8.  throw v2;
  #L4119ca.  v2:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L4119cc.  v3:= new `java.io.IOException`;
  #L4119d0.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4119d6.  call temp:= `initCause`(v3, v2) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L4119dc.  throw v3;
  #L4119de.  v2:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L4119e0.  call temp:= `A`(v2) @signature `Lt2/c;.A:(Ljava/lang/AssertionError;)Z` @kind static;
  #L4119e6.  v3:= temp;
  #L4119e8.  if v3 == 0 then goto L4119f8;
  #L4119ec.  v3:= new `java.io.IOException`;
  #L4119f0.  call `<init>`(v3, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4119f6.  throw v3;
  #L4119f8.  throw v2;
  catch `java.lang.AssertionError` @[L4119a0..L4119a6] goto L4119de;
  catch `java.lang.SecurityException` @[L4119a0..L4119a6] goto L4119ca;
  catch `java.lang.ClassCastException` @[L4119a0..L4119a6] goto L4119a8;
}
procedure `javax.net.ssl.SSLContext` `k`(`z2.a` v3 @kind this) @signature `Lz2/a;.k:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4118b4.  v0:= "TLS" @kind object;
  #L4118b8.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L4118be.  v0:= temp @kind object;
  #L4118c0.  return v0 @kind object;
  #L4118c2.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L4118c4.  v1:= new `java.lang.IllegalStateException`;
  #L4118c8.  v2:= "No TLS provider" @kind object;
  #L4118cc.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4118d2.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[L4118b4..L4118c0] goto L4118c2;
}
procedure `java.lang.String` `l`(`z2.a` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lz2/a;.l:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L411860.  v0:= v3.`z2.a.f` @type ^`z2.e` @kind object;
  #L411864.  v1:= 0I;
  #L411866.  if v0 != 0 then goto L41186c;
  #L41186a.  return v1 @kind object;
  #L41186c.  call temp:= `g`(v0, v4) @signature `Lz2/e;.g:(Ljava/lang/Object;)Z` @kind virtual;
  #L411872.  v0:= temp;
  #L411874.  if v0 != 0 then goto L41187a;
  #L411878.  return v1 @kind object;
  #L41187a.  v0:= v3.`z2.a.f` @type ^`z2.e` @kind object;
  #L41187e.  v2:= 0I;
  #L411880.  v2:= new `java.lang.Object`[v2];
  #L411884.  call temp:= `f`(v0, v4, v2) @signature `Lz2/e;.f:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41188a.  v4:= temp @kind object;
  #L41188c.  v4:= (`byte`[]) v4 @kind object;
  #L411890.  if v4 == 0 then goto L4118a2;
  #L411894.  v1:= new `java.lang.String`;
  #L411898.  v0:= `@@t2.c.j` @type ^`java.nio.charset.Charset` @kind object;
  #L41189c.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L4118a2.  return v1 @kind object;
}
procedure `java.lang.Object` `m`(`z2.a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lz2/a;.m:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L411840.  v0:= v1.`z2.a.h` @type ^`z2.a$c` @kind object;
  #L411844.  call temp:= `a`(v0, v2) @signature `Lz2/a$c;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L41184a.  v2:= temp @kind object;
  #L41184c.  return v2 @kind object;
}
procedure `boolean` `n`(`z2.a` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lz2/a;.n:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L411778.  v0:= "android.security.NetworkSecurityPolicy" @kind object;
  #L41177c.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L411782.  v0:= temp @kind object;
  #L411784.  v1:= "getInstance" @kind object;
  #L411788.  v2:= 0I;
  #L41178a.  v3:= new `java.lang.Class`[v2];
  #L41178e.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L411794.  v1:= temp @kind object;
  #L411796.  v3:= 0I;
  #L411798.  v2:= new `java.lang.Object`[v2];
  #L41179c.  call temp:= `invoke`(v1, v3, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4117a2.  v1:= temp @kind object;
  #L4117a4.  call temp:= `s`(v4, v5, v0, v1) @signature `Lz2/a;.s:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L4117aa.  v5:= temp;
  #L4117ac.  return v5;
  #L4117ae.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L4117b0.  goto L4117b8;
  #L4117b2.  v5:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L4117b4.  goto L4117b8;
  #L4117b6.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L4117b8.  v0:= "unable to determine cleartext support" @kind object;
  #L4117bc.  call temp:= `b`(v0, v5) @signature `Lt2/c;.b:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L4117c2.  v5:= temp @kind object;
  #L4117c4.  throw v5;
  #L4117c6.  call temp:= `n`(v4, v5) @signature `Lz2/f;.n:(Ljava/lang/String;)Z` @kind super;
  #L4117cc.  v5:= temp;
  #L4117ce.  return v5;
  catch `java.lang.ClassNotFoundException` @[L411778..L4117ac] goto L4117c6;
  catch `java.lang.NoSuchMethodException` @[L411778..L4117ac] goto L4117c6;
  catch `java.lang.IllegalAccessException` @[L411778..L4117ac] goto L4117b6;
  catch `java.lang.IllegalArgumentException` @[L411778..L4117ac] goto L4117b2;
  catch `java.lang.reflect.InvocationTargetException` @[L411778..L4117ac] goto L4117ae;
}
procedure `void` `p`(`z2.a` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lz2/a;.p:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L411a20.  v0:= 5I;
  #L411a22.  if v6 != v0 then goto L411a28;
  #L411a26.  goto L411a2a;
  #L411a28.  v0:= 3I;
  #L411a2a.  v6:= 10I;
  #L411a2e.  if v8 == 0 then goto L411a5e;
  #L411a32.  v1:= new `java.lang.StringBuilder`;
  #L411a36.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L411a3c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a42.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a48.  call temp:= `getStackTraceString`(v8) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L411a4e.  v7:= temp @kind object;
  #L411a50.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a56.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L411a5c.  v7:= temp @kind object;
  #L411a5e.  v8:= 0I;
  #L411a60.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L411a66.  v1:= temp;
  #L411a68.  if v8 >= v1 then goto L411aaa;
  #L411a6c.  call temp:= `indexOf`(v7, v6, v8) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L411a72.  v2:= temp;
  #L411a74.  v3:= -1I;
  #L411a76.  if v2 == v3 then goto L411a7c;
  #L411a7a.  goto L411a7e;
  #L411a7c.  v2:= v1;
  #L411a7e.  v3:= v8 + 4000;
  #L411a82.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L411a88.  v3:= temp;
  #L411a8a.  call temp:= `substring`(v7, v8, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L411a90.  v8:= temp @kind object;
  #L411a92.  v4:= "OkHttp" @kind object;
  #L411a96.  call temp:= `println`(v0, v4, v8) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L411a9c.  if v3 < v2 then goto L411aa6;
  #L411aa0.  v8:= v3 + 1;
  #L411aa4.  goto L411a68;
  #L411aa6.  v8:= v3;
  #L411aa8.  goto L411a7e;
  #L411aaa.  return @kind void;
}
procedure `void` `q`(`z2.a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lz2/a;.q:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L411abc.  v0:= v1.`z2.a.h` @type ^`z2.a$c` @kind object;
  #L411ac0.  call temp:= `c`(v0, v3) @signature `Lz2/a$c;.c:(Ljava/lang/Object;)Z` @kind virtual;
  #L411ac6.  v3:= temp;
  #L411ac8.  if v3 != 0 then goto L411ad6;
  #L411acc.  v3:= 5I;
  #L411ace.  v0:= 0I;
  #L411ad0.  call `p`(v1, v3, v2, v0) @signature `Lz2/a;.p:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L411ad6.  return @kind void;
}
