record `z2.a$a` @kind class @AccessFlag FINAL extends `b3.c` @kind class {
  `java.lang.Object` `z2.a$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `z2.a$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`z2.a$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lz2/a$a;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L411374.  call `<init>`(v0) @signature `Lb3/c;.<init>:()V` @kind direct;
  #L41137a.  v0.`z2.a$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L41137e.  v0.`z2.a$a.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L411382.  return @kind void;
}
procedure `java.util.List` `a`(`z2.a$a` v4 @kind this, `java.util.List` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lz2/a$a;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4112e0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4112e6.  v0:= temp;
  #L4112e8.  v0:= new `java.security.cert.X509Certificate`[v0];
  #L4112ec.  call temp:= `toArray`(v5, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L4112f2.  v5:= temp @kind object;
  #L4112f4.  v5:= (`java.security.cert.X509Certificate`[]) v5 @kind object;
  #L4112f8.  v0:= v4.`z2.a$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L4112fc.  v1:= v4.`z2.a$a.a` @type ^`java.lang.Object` @kind object;
  #L411300.  v2:= 3I;
  #L411302.  v2:= new `java.lang.Object`[v2];
  #L411306.  v3:= 0I;
  #L411308.  v2[v3]:= v5 @kind object;
  #L41130c.  v5:= 1I;
  #L41130e.  v3:= "RSA" @kind object;
  #L411312.  v2[v5]:= v3 @kind object;
  #L411316.  v5:= 2I;
  #L411318.  v2[v5]:= v6 @kind object;
  #L41131c.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L411322.  v5:= temp @kind object;
  #L411324.  v5:= (`java.util.List`) v5 @kind object;
  #L411328.  return v5 @kind object;
  #L41132a.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L41132c.  v6:= new `java.lang.AssertionError`;
  #L411330.  call `<init>`(v6, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L411336.  throw v6;
  #L411338.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L41133a.  v6:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L41133e.  call temp:= `getMessage`(v5) @signature `Ljava/lang/reflect/InvocationTargetException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L411344.  v0:= temp @kind object;
  #L411346.  call `<init>`(v6, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41134c.  call temp:= `initCause`(v6, v5) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L411352.  throw v6;
  catch `java.lang.reflect.InvocationTargetException` @[L4112e0..L411328] goto L411338;
  catch `java.lang.IllegalAccessException` @[L4112e0..L411328] goto L41132a;
}
procedure `boolean` `equals`(`z2.a$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lz2/a$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L4112b4.  v1:= instanceof @variable v1 @type ^`z2.a$a` @kind boolean;
  #L4112b8.  return v1;
}
procedure `int` `hashCode`(`z2.a$a` v1 @kind this) @signature `Lz2/a$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4112cc.  v0:= 0I;
  #L4112ce.  return v0;
}
