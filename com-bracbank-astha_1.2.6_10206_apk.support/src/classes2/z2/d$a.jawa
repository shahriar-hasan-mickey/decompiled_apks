record `z2.d$a` @kind class @AccessFlag  extends `java.lang.reflect.InvocationHandler` @kind interface {
  `java.util.List` `z2.d$a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `z2.d$a.b` @AccessFlag ;
  `java.lang.String` `z2.d$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`z2.d$a` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lz2/d$a;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L412028.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41202e.  v0.`z2.d$a.a` @type ^`java.util.List` := v1 @kind object;
  #L412032.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`z2.d$a` v5 @kind this, `java.lang.Object` v6 @kind object, `java.lang.reflect.Method` v7 @kind object, `java.lang.Object`[] v8 @kind object) @signature `Lz2/d$a;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L411ecc.  call temp:= `getName`(v7) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L411ed2.  v6:= temp @kind object;
  #L411ed4.  call temp:= `getReturnType`(v7) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L411eda.  v0:= temp @kind object;
  #L411edc.  if v8 != 0 then goto L411ee4;
  #L411ee0.  v8:= `@@t2.c.b` @type ^`java.lang.String`[] @kind object;
  #L411ee4.  v1:= "supports" @kind object;
  #L411ee8.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L411eee.  v1:= temp;
  #L411ef0.  if v1 == 0 then goto L411f02;
  #L411ef4.  v1:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L411ef8.  if v1 != v0 then goto L411f02;
  #L411efc.  v6:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L411f00.  return v6 @kind object;
  #L411f02.  v1:= "unsupported" @kind object;
  #L411f06.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L411f0c.  v1:= temp;
  #L411f0e.  v2:= 0I;
  #L411f10.  v3:= 1I;
  #L411f12.  if v1 == 0 then goto L411f24;
  #L411f16.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L411f1a.  if v1 != v0 then goto L411f24;
  #L411f1e.  v5.`z2.d$a.b` @type ^`boolean` := v3 @kind boolean;
  #L411f22.  return v2 @kind object;
  #L411f24.  v1:= "protocols" @kind object;
  #L411f28.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L411f2e.  v1:= temp;
  #L411f30.  if v1 == 0 then goto L411f40;
  #L411f34.  v1:= length @variable v8;
  #L411f36.  if v1 != 0 then goto L411f40;
  #L411f3a.  v6:= v5.`z2.d$a.a` @type ^`java.util.List` @kind object;
  #L411f3e.  return v6 @kind object;
  #L411f40.  v1:= "selectProtocol" @kind object;
  #L411f44.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L411f4a.  v1:= temp;
  #L411f4c.  v4:= 0I;
  #L411f4e.  if v1 != 0 then goto L411f62;
  #L411f52.  v1:= "select" @kind object;
  #L411f56.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L411f5c.  v1:= temp;
  #L411f5e.  if v1 == 0 then goto L411fd8;
  #L411f62.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L411f66.  if v1 != v0 then goto L411fd8;
  #L411f6a.  v0:= length @variable v8;
  #L411f6c.  if v0 != v3 then goto L411fd8;
  #L411f70.  v0:= v8[v4] @kind object;
  #L411f74.  v0:= instanceof @variable v0 @type ^`java.util.List` @kind boolean;
  #L411f78.  if v0 == 0 then goto L411fd8;
  #L411f7c.  v6:= v8[v4] @kind object;
  #L411f80.  v6:= (`java.util.List`) v6 @kind object;
  #L411f84.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L411f8a.  v7:= temp;
  #L411f8c.  v8:= 0I;
  #L411f8e.  if v8 >= v7 then goto L411fc2;
  #L411f92.  v0:= v5.`z2.d$a.a` @type ^`java.util.List` @kind object;
  #L411f96.  call temp:= `get`(v6, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L411f9c.  v1:= temp @kind object;
  #L411f9e.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L411fa4.  v0:= temp;
  #L411fa6.  if v0 == 0 then goto L411fbc;
  #L411faa.  call temp:= `get`(v6, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L411fb0.  v6:= temp @kind object;
  #L411fb2.  v6:= (`java.lang.String`) v6 @kind object;
  #L411fb6.  v5.`z2.d$a.c` @type ^`java.lang.String` := v6 @kind object;
  #L411fba.  return v6 @kind object;
  #L411fbc.  v8:= v8 + 1;
  #L411fc0.  goto L411f8e;
  #L411fc2.  v6:= v5.`z2.d$a.a` @type ^`java.util.List` @kind object;
  #L411fc6.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L411fcc.  v6:= temp @kind object;
  #L411fce.  v6:= (`java.lang.String`) v6 @kind object;
  #L411fd2.  v5.`z2.d$a.c` @type ^`java.lang.String` := v6 @kind object;
  #L411fd6.  return v6 @kind object;
  #L411fd8.  v0:= "protocolSelected" @kind object;
  #L411fdc.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L411fe2.  v0:= temp;
  #L411fe4.  if v0 != 0 then goto L411ff8;
  #L411fe8.  v0:= "selected" @kind object;
  #L411fec.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L411ff2.  v6:= temp;
  #L411ff4.  if v6 == 0 then goto L41200c;
  #L411ff8.  v6:= length @variable v8;
  #L411ffa.  if v6 != v3 then goto L41200c;
  #L411ffe.  v6:= v8[v4] @kind object;
  #L412002.  v6:= (`java.lang.String`) v6 @kind object;
  #L412006.  v5.`z2.d$a.c` @type ^`java.lang.String` := v6 @kind object;
  #L41200a.  return v2 @kind object;
  #L41200c.  call temp:= `invoke`(v7, v5, v8) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L412012.  v6:= temp @kind object;
  #L412014.  return v6 @kind object;
}
