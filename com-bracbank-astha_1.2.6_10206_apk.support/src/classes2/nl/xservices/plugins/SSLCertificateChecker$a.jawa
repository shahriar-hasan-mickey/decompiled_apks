record `nl.xservices.plugins.SSLCertificateChecker$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `org.json.JSONArray` `nl.xservices.plugins.SSLCertificateChecker$a.a` @AccessFlag FINAL_SYNTHETIC;
  `org.apache.cordova.CallbackContext` `nl.xservices.plugins.SSLCertificateChecker$a.b` @AccessFlag FINAL_SYNTHETIC;
  `nl.xservices.plugins.SSLCertificateChecker` `nl.xservices.plugins.SSLCertificateChecker$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`nl.xservices.plugins.SSLCertificateChecker$a` v0 @kind this, `nl.xservices.plugins.SSLCertificateChecker` v1 @kind object, `org.json.JSONArray` v2 @kind object, `org.apache.cordova.CallbackContext` v3 @kind object) @signature `Lnl/xservices/plugins/SSLCertificateChecker$a;.<init>:(Lnl/xservices/plugins/SSLCertificateChecker;Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a11a8.  v0.`nl.xservices.plugins.SSLCertificateChecker$a.c` @type ^`nl.xservices.plugins.SSLCertificateChecker` := v1 @kind object;
  #L3a11ac.  v0.`nl.xservices.plugins.SSLCertificateChecker$a.a` @type ^`org.json.JSONArray` := v2 @kind object;
  #L3a11b0.  v0.`nl.xservices.plugins.SSLCertificateChecker$a.b` @type ^`org.apache.cordova.CallbackContext` := v3 @kind object;
  #L3a11b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a11ba.  return @kind void;
}
procedure `void` `run`(`nl.xservices.plugins.SSLCertificateChecker$a` v5 @kind this) @signature `Lnl/xservices/plugins/SSLCertificateChecker$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a11cc.  v0:= "CONNECTION_NOT_SECURE" @kind object;
  #L3a11d0.  v1:= v5.`nl.xservices.plugins.SSLCertificateChecker$a.a` @type ^`org.json.JSONArray` @kind object;
  #L3a11d4.  v2:= 0I;
  #L3a11d6.  call temp:= `getString`(v1, v2) @signature `Lorg/json/JSONArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L3a11dc.  v1:= temp @kind object;
  #L3a11de.  v3:= v5.`nl.xservices.plugins.SSLCertificateChecker$a.a` @type ^`org.json.JSONArray` @kind object;
  #L3a11e2.  v4:= 2I;
  #L3a11e4.  call temp:= `getJSONArray`(v3, v4) @signature `Lorg/json/JSONArray;.getJSONArray:(I)Lorg/json/JSONArray;` @kind virtual;
  #L3a11ea.  v3:= temp @kind object;
  #L3a11ec.  call temp:= `a`(v1) @signature `Lnl/xservices/plugins/SSLCertificateChecker;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3a11f2.  v1:= temp @kind object;
  #L3a11f4.  call temp:= `length`(v3) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L3a11fa.  v4:= temp;
  #L3a11fc.  if v2 >= v4 then goto L3a1232;
  #L3a1200.  call temp:= `get`(v3, v2) @signature `Lorg/json/JSONArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3a1206.  v4:= temp @kind object;
  #L3a1208.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a120e.  v4:= temp @kind object;
  #L3a1210.  call temp:= `equalsIgnoreCase`(v4, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3a1216.  v4:= temp;
  #L3a1218.  if v4 == 0 then goto L3a122c;
  #L3a121c.  v1:= v5.`nl.xservices.plugins.SSLCertificateChecker$a.b` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L3a1220.  v2:= "CONNECTION_SECURE" @kind object;
  #L3a1224.  call `success`(v1, v2) @signature `Lorg/apache/cordova/CallbackContext;.success:(Ljava/lang/String;)V` @kind virtual;
  #L3a122a.  return @kind void;
  #L3a122c.  v2:= v2 + 1;
  #L3a1230.  goto L3a11f4;
  #L3a1232.  v1:= v5.`nl.xservices.plugins.SSLCertificateChecker$a.b` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L3a1236.  call `error`(v1, v0) @signature `Lorg/apache/cordova/CallbackContext;.error:(Ljava/lang/String;)V` @kind virtual;
  #L3a123c.  goto L3a1248;
  #L3a123e.  v1:= v5.`nl.xservices.plugins.SSLCertificateChecker$a.b` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L3a1242.  call `error`(v1, v0) @signature `Lorg/apache/cordova/CallbackContext;.error:(Ljava/lang/String;)V` @kind virtual;
  #L3a1248.  return @kind void;
  catch `java.lang.Exception` @[L3a11d0..L3a123c] goto L3a123e;
}
