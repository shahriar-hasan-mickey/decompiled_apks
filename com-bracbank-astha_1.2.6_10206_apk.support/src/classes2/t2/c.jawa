record `t2.c` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@t2.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@t2.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.z` `@@t2.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.x` `@@t2.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@t2.c.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@t2.c.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@t2.c.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@t2.c.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@t2.c.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@t2.c.j` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@t2.c.k` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@t2.c.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@t2.c.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@t2.c.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@t2.c.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.TimeZone` `@@t2.c.p` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@t2.c.q` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.reflect.Method` `@@t2.c.r` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@t2.c.s` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lt2/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fd47c.  v0:= 0I;
  #L3fd47e.  v1:= new `byte`[v0];
  #L3fd482.  `@@t2.c.a` @type ^`byte`[] := v1 @kind object;
  #L3fd486.  v2:= new `java.lang.String`[v0];
  #L3fd48a.  `@@t2.c.b` @type ^`java.lang.String`[] := v2 @kind object;
  #L3fd48e.  v2:= 0I;
  #L3fd490.  call temp:= `R`(v2, v1) @signature `Lokhttp3/z;.R:(Lokhttp3/t;[B)Lokhttp3/z;` @kind static;
  #L3fd496.  v3:= temp @kind object;
  #L3fd498.  `@@t2.c.c` @type ^`okhttp3.z` := v3 @kind object;
  #L3fd49c.  call temp:= `d`(v2, v1) @signature `Lokhttp3/x;.d:(Lokhttp3/t;[B)Lokhttp3/x;` @kind static;
  #L3fd4a2.  v1:= temp @kind object;
  #L3fd4a4.  `@@t2.c.d` @type ^`okhttp3.x` := v1 @kind object;
  #L3fd4a8.  v1:= "efbbbf" @kind object;
  #L3fd4ac.  call temp:= `d`(v1) @signature `Lokio/ByteString;.d:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3fd4b2.  v1:= temp @kind object;
  #L3fd4b4.  `@@t2.c.e` @type ^`okio.ByteString` := v1 @kind object;
  #L3fd4b8.  v1:= "feff" @kind object;
  #L3fd4bc.  call temp:= `d`(v1) @signature `Lokio/ByteString;.d:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3fd4c2.  v1:= temp @kind object;
  #L3fd4c4.  `@@t2.c.f` @type ^`okio.ByteString` := v1 @kind object;
  #L3fd4c8.  v1:= "fffe" @kind object;
  #L3fd4cc.  call temp:= `d`(v1) @signature `Lokio/ByteString;.d:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3fd4d2.  v1:= temp @kind object;
  #L3fd4d4.  `@@t2.c.g` @type ^`okio.ByteString` := v1 @kind object;
  #L3fd4d8.  v1:= "0000ffff" @kind object;
  #L3fd4dc.  call temp:= `d`(v1) @signature `Lokio/ByteString;.d:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3fd4e2.  v1:= temp @kind object;
  #L3fd4e4.  `@@t2.c.h` @type ^`okio.ByteString` := v1 @kind object;
  #L3fd4e8.  v1:= "ffff0000" @kind object;
  #L3fd4ec.  call temp:= `d`(v1) @signature `Lokio/ByteString;.d:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3fd4f2.  v1:= temp @kind object;
  #L3fd4f4.  `@@t2.c.i` @type ^`okio.ByteString` := v1 @kind object;
  #L3fd4f8.  v1:= "UTF-8" @kind object;
  #L3fd4fc.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3fd502.  v1:= temp @kind object;
  #L3fd504.  `@@t2.c.j` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3fd508.  v1:= "ISO-8859-1" @kind object;
  #L3fd50c.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3fd512.  v1:= temp @kind object;
  #L3fd514.  `@@t2.c.k` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3fd518.  v1:= "UTF-16BE" @kind object;
  #L3fd51c.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3fd522.  v1:= temp @kind object;
  #L3fd524.  `@@t2.c.l` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3fd528.  v1:= "UTF-16LE" @kind object;
  #L3fd52c.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3fd532.  v1:= temp @kind object;
  #L3fd534.  `@@t2.c.m` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3fd538.  v1:= "UTF-32BE" @kind object;
  #L3fd53c.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3fd542.  v1:= temp @kind object;
  #L3fd544.  `@@t2.c.n` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3fd548.  v1:= "UTF-32LE" @kind object;
  #L3fd54c.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3fd552.  v1:= temp @kind object;
  #L3fd554.  `@@t2.c.o` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3fd558.  v1:= "GMT" @kind object;
  #L3fd55c.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L3fd562.  v1:= temp @kind object;
  #L3fd564.  `@@t2.c.p` @type ^`java.util.TimeZone` := v1 @kind object;
  #L3fd568.  v1:= new `t2.c$a`;
  #L3fd56c.  call `<init>`(v1) @signature `Lt2/c$a;.<init>:()V` @kind direct;
  #L3fd572.  `@@t2.c.q` @type ^`java.util.Comparator` := v1 @kind object;
  #L3fd576.  v1:= constclass @type ^`java.lang.Throwable` @kind object;
  #L3fd57a.  v3:= "addSuppressed" @kind object;
  #L3fd57e.  v4:= 1I;
  #L3fd580.  v4:= new `java.lang.Class`[v4];
  #L3fd584.  v5:= constclass @type ^`java.lang.Throwable` @kind object;
  #L3fd588.  v4[v0]:= v5 @kind object;
  #L3fd58c.  call temp:= `getDeclaredMethod`(v1, v3, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3fd592.  v2:= temp @kind object;
  #L3fd594.  `@@t2.c.r` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L3fd598.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L3fd59c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3fd5a2.  v0:= temp @kind object;
  #L3fd5a4.  `@@t2.c.s` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3fd5a8.  return @kind void;
  catch `java.lang.Exception` @[L3fd576..L3fd594] goto L3fd594;
}
procedure `boolean` `A`(`java.lang.AssertionError` v1 @kind object) @signature `Lt2/c;.A:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fc854.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L3fc85a.  v0:= temp @kind object;
  #L3fc85c.  if v0 == 0 then goto L3fc888;
  #L3fc860.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3fc866.  v0:= temp @kind object;
  #L3fc868.  if v0 == 0 then goto L3fc888;
  #L3fc86c.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3fc872.  v1:= temp @kind object;
  #L3fc874.  v0:= "getsockname failed" @kind object;
  #L3fc878.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3fc87e.  v1:= temp;
  #L3fc880.  if v1 == 0 then goto L3fc888;
  #L3fc884.  v1:= 1I;
  #L3fc886.  goto L3fc88a;
  #L3fc888.  v1:= 0I;
  #L3fc88a.  return v1;
}
procedure `boolean` `B`(`java.util.Comparator` v7 @kind object, `java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object) @signature `Lt2/c;.B:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fc89c.  v0:= 0I;
  #L3fc89e.  if v8 == 0 then goto L3fc8e8;
  #L3fc8a2.  if v9 == 0 then goto L3fc8e8;
  #L3fc8a6.  v1:= length @variable v8;
  #L3fc8a8.  if v1 == 0 then goto L3fc8e8;
  #L3fc8ac.  v1:= length @variable v9;
  #L3fc8ae.  if v1 != 0 then goto L3fc8b4;
  #L3fc8b2.  goto L3fc8e8;
  #L3fc8b4.  v1:= length @variable v8;
  #L3fc8b6.  v2:= 0I;
  #L3fc8b8.  if v2 >= v1 then goto L3fc8e8;
  #L3fc8bc.  v3:= v8[v2] @kind object;
  #L3fc8c0.  v4:= length @variable v9;
  #L3fc8c2.  v5:= 0I;
  #L3fc8c4.  if v5 >= v4 then goto L3fc8e2;
  #L3fc8c8.  v6:= v9[v5] @kind object;
  #L3fc8cc.  call temp:= `compare`(v7, v3, v6) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L3fc8d2.  v6:= temp;
  #L3fc8d4.  if v6 != 0 then goto L3fc8dc;
  #L3fc8d8.  v7:= 1I;
  #L3fc8da.  return v7;
  #L3fc8dc.  v5:= v5 + 1;
  #L3fc8e0.  goto L3fc8c4;
  #L3fc8e2.  v2:= v2 + 1;
  #L3fc8e6.  goto L3fc8b8;
  #L3fc8e8.  return v0;
}
procedure `javax.net.ssl.X509TrustManager` `C`() @signature `Lt2/c;.C:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd36c.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L3fd372.  v0:= temp @kind object;
  #L3fd374.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L3fd37a.  v0:= temp @kind object;
  #L3fd37c.  v1:= 0I;
  #L3fd37e.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L3fd384.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L3fd38a.  v0:= temp @kind object;
  #L3fd38c.  v1:= length @variable v0;
  #L3fd38e.  v2:= 1I;
  #L3fd390.  if v1 != v2 then goto L3fd3ac;
  #L3fd394.  v1:= 0I;
  #L3fd396.  v2:= v0[v1] @kind object;
  #L3fd39a.  v2:= instanceof @variable v2 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L3fd39e.  if v2 == 0 then goto L3fd3ac;
  #L3fd3a2.  v0:= v0[v1] @kind object;
  #L3fd3a6.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L3fd3aa.  return v0 @kind object;
  #L3fd3ac.  v1:= new `java.lang.IllegalStateException`;
  #L3fd3b0.  v2:= new `java.lang.StringBuilder`;
  #L3fd3b4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fd3ba.  v3:= "Unexpected default trust managers:" @kind object;
  #L3fd3be.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fd3c4.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3fd3ca.  v0:= temp @kind object;
  #L3fd3cc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fd3d2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fd3d8.  v0:= temp @kind object;
  #L3fd3da.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fd3e0.  throw v1;
  #L3fd3e2.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L3fd3e4.  v1:= "No System TLS" @kind object;
  #L3fd3e8.  call temp:= `b`(v1, v0) @signature `Lt2/c;.b:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L3fd3ee.  v0:= temp @kind object;
  #L3fd3f0.  throw v0;
  catch `java.security.GeneralSecurityException` @[L3fd36c..L3fd3e2] goto L3fd3e2;
}
procedure `boolean` `D`(`okio.q` v11 @kind object, `int` v12 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lt2/c;.D:(Lokio/q;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3fc8fc.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3fc902.  v0:= temp @kind wide;
  #L3fc904.  call temp:= `e`(v11) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fc90a.  v2:= temp @kind object;
  #L3fc90c.  call temp:= `e`(v2) @signature `Lokio/r;.e:()Z` @kind virtual;
  #L3fc912.  v2:= temp;
  #L3fc914.  v3:= 9223372036854775807L;
  #L3fc91e.  if v2 == 0 then goto L3fc936;
  #L3fc922.  call temp:= `e`(v11) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fc928.  v2:= temp @kind object;
  #L3fc92a.  call temp:= `c`(v2) @signature `Lokio/r;.c:()J` @kind virtual;
  #L3fc930.  v5:= temp @kind wide;
  #L3fc932.  v5:= v5 - v0 @kind long;
  #L3fc934.  goto L3fc938;
  #L3fc936.  v5:= v3 @kind wide;
  #L3fc938.  call temp:= `e`(v11) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fc93e.  v2:= temp @kind object;
  #L3fc940.  v7:= (`long`) v12 @kind i2l;
  #L3fc942.  call temp:= `toNanos`(v13, v7) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L3fc948.  v12:= temp @kind wide;
  #L3fc94a.  call temp:= `min`(v5, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3fc950.  v12:= temp @kind wide;
  #L3fc952.  v12:= v12 + v0 @kind long;
  #L3fc954.  call temp:= `d`(v2, v12) @signature `Lokio/r;.d:(J)Lokio/r;` @kind virtual;
  #L3fc95a.  v12:= new `okio.c`;
  #L3fc95e.  call `<init>`(v12) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3fc964.  v7:= 8192L;
  #L3fc968.  call temp:= `I`(v11, v12, v7) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L3fc96e.  v7:= temp @kind wide;
  #L3fc970.  v9:= -1L;
  #L3fc974.  v13:= lcmp(v7, v9);
  #L3fc978.  if v13 == 0 then goto L3fc984;
  #L3fc97c.  call `s`(v12) @signature `Lokio/c;.s:()V` @kind virtual;
  #L3fc982.  goto L3fc964;
  #L3fc984.  v12:= 1I;
  #L3fc986.  v13:= lcmp(v5, v3);
  #L3fc98a.  if v13 != 0 then goto L3fc99e;
  #L3fc98e.  call temp:= `e`(v11) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fc994.  v11:= temp @kind object;
  #L3fc996.  call temp:= `a`(v11) @signature `Lokio/r;.a:()Lokio/r;` @kind virtual;
  #L3fc99c.  goto L3fc9ae;
  #L3fc99e.  call temp:= `e`(v11) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fc9a4.  v11:= temp @kind object;
  #L3fc9a6.  v0:= v0 + v5 @kind long;
  #L3fc9a8.  call temp:= `d`(v11, v0) @signature `Lokio/r;.d:(J)Lokio/r;` @kind virtual;
  #L3fc9ae.  return v12;
  #L3fc9b0.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fc9b2.  v13:= lcmp(v5, v3);
  #L3fc9b6.  if v13 != 0 then goto L3fc9ca;
  #L3fc9ba.  call temp:= `e`(v11) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fc9c0.  v11:= temp @kind object;
  #L3fc9c2.  call temp:= `a`(v11) @signature `Lokio/r;.a:()Lokio/r;` @kind virtual;
  #L3fc9c8.  goto L3fc9da;
  #L3fc9ca.  call temp:= `e`(v11) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fc9d0.  v11:= temp @kind object;
  #L3fc9d2.  v0:= v0 + v5 @kind long;
  #L3fc9d4.  call temp:= `d`(v11, v0) @signature `Lokio/r;.d:(J)Lokio/r;` @kind virtual;
  #L3fc9da.  throw v12;
  #L3fc9dc.  
  #L3fc9de.  v12:= 0I;
  #L3fc9e0.  v13:= lcmp(v5, v3);
  #L3fc9e4.  if v13 != 0 then goto L3fc9f8;
  #L3fc9e8.  call temp:= `e`(v11) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fc9ee.  v11:= temp @kind object;
  #L3fc9f0.  call temp:= `a`(v11) @signature `Lokio/r;.a:()Lokio/r;` @kind virtual;
  #L3fc9f6.  goto L3fca08;
  #L3fc9f8.  call temp:= `e`(v11) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fc9fe.  v11:= temp @kind object;
  #L3fca00.  v0:= v0 + v5 @kind long;
  #L3fca02.  call temp:= `d`(v11, v0) @signature `Lokio/r;.d:(J)Lokio/r;` @kind virtual;
  #L3fca08.  return v12;
  catch `java.io.InterruptedIOException` @[L3fc95a..L3fc982] goto L3fc9dc;
  catch `java.lang.Throwable` @[L3fc95a..L3fc982] goto L3fc9b0;
}
procedure `int` `E`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lt2/c;.E:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fcc58.  if v3 >= v4 then goto L3fcc94;
  #L3fcc5c.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fcc62.  v0:= temp;
  #L3fcc64.  v1:= 9I;
  #L3fcc68.  if v0 == v1 then goto L3fcc8e;
  #L3fcc6c.  v1:= 10I;
  #L3fcc70.  if v0 == v1 then goto L3fcc8e;
  #L3fcc74.  v1:= 12I;
  #L3fcc78.  if v0 == v1 then goto L3fcc8e;
  #L3fcc7c.  v1:= 13I;
  #L3fcc80.  if v0 == v1 then goto L3fcc8e;
  #L3fcc84.  v1:= 32I;
  #L3fcc88.  if v0 == v1 then goto L3fcc8e;
  #L3fcc8c.  return v3;
  #L3fcc8e.  v3:= v3 + 1;
  #L3fcc92.  goto L3fcc58;
  #L3fcc94.  return v4;
}
procedure `int` `F`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lt2/c;.F:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fcca8.  v4:= v4 + -1;
  #L3fccac.  if v4 < v3 then goto L3fccec;
  #L3fccb0.  call temp:= `charAt`(v2, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fccb6.  v0:= temp;
  #L3fccb8.  v1:= 9I;
  #L3fccbc.  if v0 == v1 then goto L3fcce6;
  #L3fccc0.  v1:= 10I;
  #L3fccc4.  if v0 == v1 then goto L3fcce6;
  #L3fccc8.  v1:= 12I;
  #L3fcccc.  if v0 == v1 then goto L3fcce6;
  #L3fccd0.  v1:= 13I;
  #L3fccd4.  if v0 == v1 then goto L3fcce6;
  #L3fccd8.  v1:= 32I;
  #L3fccdc.  if v0 == v1 then goto L3fcce6;
  #L3fcce0.  v4:= v4 + 1;
  #L3fcce4.  return v4;
  #L3fcce6.  v4:= v4 + -1;
  #L3fccea.  goto L3fccac;
  #L3fccec.  return v3;
}
procedure `java.util.concurrent.ThreadFactory` `G`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lt2/c;.G:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fd350.  v0:= new `t2.c$b`;
  #L3fd354.  call `<init>`(v0, v1, v2) @signature `Lt2/c$b;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L3fd35a.  return v0 @kind object;
}
procedure `okhttp3.q` `H`(`java.util.List` v4 @kind object) @signature `Lt2/c;.H:(Ljava/util/List;)Lokhttp3/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd414.  v0:= new `okhttp3.q$a`;
  #L3fd418.  call `<init>`(v0) @signature `Lokhttp3/q$a;.<init>:()V` @kind direct;
  #L3fd41e.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fd424.  v4:= temp @kind object;
  #L3fd426.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fd42c.  v1:= temp;
  #L3fd42e.  if v1 == 0 then goto L3fd462;
  #L3fd432.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fd438.  v1:= temp @kind object;
  #L3fd43a.  v1:= (`y2.a`) v1 @kind object;
  #L3fd43e.  v2:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L3fd442.  v3:= v1.`y2.a.a` @type ^`okio.ByteString` @kind object;
  #L3fd446.  call temp:= `u`(v3) @signature `Lokio/ByteString;.u:()Ljava/lang/String;` @kind virtual;
  #L3fd44c.  v3:= temp @kind object;
  #L3fd44e.  v1:= v1.`y2.a.b` @type ^`okio.ByteString` @kind object;
  #L3fd452.  call temp:= `u`(v1) @signature `Lokio/ByteString;.u:()Ljava/lang/String;` @kind virtual;
  #L3fd458.  v1:= temp @kind object;
  #L3fd45a.  call `b`(v2, v0, v3, v1) @signature `Lt2/a;.b:(Lokhttp3/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3fd460.  goto L3fd426;
  #L3fd462.  call temp:= `d`(v0) @signature `Lokhttp3/q$a;.d:()Lokhttp3/q;` @kind virtual;
  #L3fd468.  v4:= temp @kind object;
  #L3fd46a.  return v4 @kind object;
}
procedure `java.lang.String` `I`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lt2/c;.I:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3fcfd4.  call temp:= `E`(v0, v1, v2) @signature `Lt2/c;.E:(Ljava/lang/String;II)I` @kind static;
  #L3fcfda.  v1:= temp;
  #L3fcfdc.  call temp:= `F`(v0, v1, v2) @signature `Lt2/c;.F:(Ljava/lang/String;II)I` @kind static;
  #L3fcfe2.  v2:= temp;
  #L3fcfe4.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3fcfea.  v0:= temp @kind object;
  #L3fcfec.  return v0 @kind object;
}
procedure `boolean` `J`(`java.lang.String` v1 @kind object) @signature `Lt2/c;.J:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fca2c.  v0:= `@@t2.c.s` @type ^`java.util.regex.Pattern` @kind object;
  #L3fca30.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3fca36.  v1:= temp @kind object;
  #L3fca38.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L3fca3e.  v1:= temp;
  #L3fca40.  return v1;
}
procedure `void` `a`(`java.lang.Throwable` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lt2/c;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd5cc.  v0:= `@@t2.c.r` @type ^`java.lang.reflect.Method` @kind object;
  #L3fd5d0.  if v0 == 0 then goto L3fd5e6;
  #L3fd5d4.  v1:= 1I;
  #L3fd5d6.  v1:= new `java.lang.Object`[v1];
  #L3fd5da.  v2:= 0I;
  #L3fd5dc.  v1[v2]:= v4 @kind object;
  #L3fd5e0.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3fd5e6.  return @kind void;
  catch `java.lang.reflect.InvocationTargetException` @[L3fd5d6..L3fd5e6] goto L3fd5e6;
  catch `java.lang.IllegalAccessException` @[L3fd5d6..L3fd5e6] goto L3fd5e6;
}
procedure `java.lang.AssertionError` `b`(`java.lang.String` v1 @kind object, `java.lang.Exception` v2 @kind object) @signature `Lt2/c;.b:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fcd00.  v0:= new `java.lang.AssertionError`;
  #L3fcd04.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3fcd0a.  call temp:= `initCause`(v0, v2) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3fcd10.  return v0 @kind object;
  catch `java.lang.IllegalStateException` @[L3fcd0a..L3fcd10] goto L3fcd10;
}
procedure `java.nio.charset.Charset` `c`(`okio.e` v4 @kind object, `java.nio.charset.Charset` v5 @kind object) @signature `Lt2/c;.c:(Lokio/e;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd1ec.  v0:= `@@t2.c.e` @type ^`okio.ByteString` @kind object;
  #L3fd1f0.  v1:= 0L;
  #L3fd1f4.  call temp:= `v`(v4, v1, v0) @signature `Lokio/e;.v:(JLokio/ByteString;)Z` @kind interface;
  #L3fd1fa.  v3:= temp;
  #L3fd1fc.  if v3 == 0 then goto L3fd216;
  #L3fd200.  call temp:= `p`(v0) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3fd206.  v5:= temp;
  #L3fd208.  v0:= (`long`) v5 @kind i2l;
  #L3fd20a.  call `f`(v4, v0) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L3fd210.  v4:= `@@t2.c.j` @type ^`java.nio.charset.Charset` @kind object;
  #L3fd214.  return v4 @kind object;
  #L3fd216.  v0:= `@@t2.c.f` @type ^`okio.ByteString` @kind object;
  #L3fd21a.  call temp:= `v`(v4, v1, v0) @signature `Lokio/e;.v:(JLokio/ByteString;)Z` @kind interface;
  #L3fd220.  v3:= temp;
  #L3fd222.  if v3 == 0 then goto L3fd23c;
  #L3fd226.  call temp:= `p`(v0) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3fd22c.  v5:= temp;
  #L3fd22e.  v0:= (`long`) v5 @kind i2l;
  #L3fd230.  call `f`(v4, v0) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L3fd236.  v4:= `@@t2.c.l` @type ^`java.nio.charset.Charset` @kind object;
  #L3fd23a.  return v4 @kind object;
  #L3fd23c.  v0:= `@@t2.c.g` @type ^`okio.ByteString` @kind object;
  #L3fd240.  call temp:= `v`(v4, v1, v0) @signature `Lokio/e;.v:(JLokio/ByteString;)Z` @kind interface;
  #L3fd246.  v3:= temp;
  #L3fd248.  if v3 == 0 then goto L3fd262;
  #L3fd24c.  call temp:= `p`(v0) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3fd252.  v5:= temp;
  #L3fd254.  v0:= (`long`) v5 @kind i2l;
  #L3fd256.  call `f`(v4, v0) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L3fd25c.  v4:= `@@t2.c.m` @type ^`java.nio.charset.Charset` @kind object;
  #L3fd260.  return v4 @kind object;
  #L3fd262.  v0:= `@@t2.c.h` @type ^`okio.ByteString` @kind object;
  #L3fd266.  call temp:= `v`(v4, v1, v0) @signature `Lokio/e;.v:(JLokio/ByteString;)Z` @kind interface;
  #L3fd26c.  v3:= temp;
  #L3fd26e.  if v3 == 0 then goto L3fd288;
  #L3fd272.  call temp:= `p`(v0) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3fd278.  v5:= temp;
  #L3fd27a.  v0:= (`long`) v5 @kind i2l;
  #L3fd27c.  call `f`(v4, v0) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L3fd282.  v4:= `@@t2.c.n` @type ^`java.nio.charset.Charset` @kind object;
  #L3fd286.  return v4 @kind object;
  #L3fd288.  v0:= `@@t2.c.i` @type ^`okio.ByteString` @kind object;
  #L3fd28c.  call temp:= `v`(v4, v1, v0) @signature `Lokio/e;.v:(JLokio/ByteString;)Z` @kind interface;
  #L3fd292.  v1:= temp;
  #L3fd294.  if v1 == 0 then goto L3fd2ae;
  #L3fd298.  call temp:= `p`(v0) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3fd29e.  v5:= temp;
  #L3fd2a0.  v0:= (`long`) v5 @kind i2l;
  #L3fd2a2.  call `f`(v4, v0) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L3fd2a8.  v4:= `@@t2.c.o` @type ^`java.nio.charset.Charset` @kind object;
  #L3fd2ac.  return v4 @kind object;
  #L3fd2ae.  return v5 @kind object;
}
procedure `java.lang.String` `d`(`java.lang.String` v3 @kind object) @signature `Lt2/c;.d:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fcd34.  v0:= ":" @kind object;
  #L3fcd38.  call temp:= `contains`(v3, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3fcd3e.  v0:= temp;
  #L3fcd40.  v1:= 0I;
  #L3fcd42.  if v0 == 0 then goto L3fcde8;
  #L3fcd46.  v0:= "[" @kind object;
  #L3fcd4a.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3fcd50.  v0:= temp;
  #L3fcd52.  if v0 == 0 then goto L3fcd7c;
  #L3fcd56.  v0:= "]" @kind object;
  #L3fcd5a.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3fcd60.  v0:= temp;
  #L3fcd62.  if v0 == 0 then goto L3fcd7c;
  #L3fcd66.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fcd6c.  v0:= temp;
  #L3fcd6e.  v2:= 1I;
  #L3fcd70.  v0:= v0 - v2 @kind int;
  #L3fcd72.  call temp:= `m`(v3, v2, v0) @signature `Lt2/c;.m:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L3fcd78.  v0:= temp @kind object;
  #L3fcd7a.  goto L3fcd8e;
  #L3fcd7c.  v0:= 0I;
  #L3fcd7e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fcd84.  v2:= temp;
  #L3fcd86.  call temp:= `m`(v3, v0, v2) @signature `Lt2/c;.m:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L3fcd8c.  v0:= temp @kind object;
  #L3fcd8e.  if v0 != 0 then goto L3fcd94;
  #L3fcd92.  return v1 @kind object;
  #L3fcd94.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L3fcd9a.  v0:= temp @kind object;
  #L3fcd9c.  v1:= length @variable v0;
  #L3fcd9e.  v2:= 16I;
  #L3fcda2.  if v1 != v2 then goto L3fcdb0;
  #L3fcda6.  call temp:= `y`(v0) @signature `Lt2/c;.y:([B)Ljava/lang/String;` @kind static;
  #L3fcdac.  v3:= temp @kind object;
  #L3fcdae.  return v3 @kind object;
  #L3fcdb0.  v0:= new `java.lang.AssertionError`;
  #L3fcdb4.  v1:= new `java.lang.StringBuilder`;
  #L3fcdb8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fcdbe.  v2:= "Invalid IPv6 address: '" @kind object;
  #L3fcdc2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcdc8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcdce.  v3:= "'" @kind object;
  #L3fcdd2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcdd8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fcdde.  v3:= temp @kind object;
  #L3fcde0.  call `<init>`(v0, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3fcde6.  throw v0;
  #L3fcde8.  call temp:= `toASCII`(v3) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3fcdee.  v3:= temp @kind object;
  #L3fcdf0.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3fcdf4.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fcdfa.  v3:= temp @kind object;
  #L3fcdfc.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3fce02.  v0:= temp;
  #L3fce04.  if v0 == 0 then goto L3fce0a;
  #L3fce08.  return v1 @kind object;
  #L3fce0a.  call temp:= `j`(v3) @signature `Lt2/c;.j:(Ljava/lang/String;)Z` @kind static;
  #L3fce10.  v0:= temp;
  #L3fce12.  if v0 == 0 then goto L3fce18;
  #L3fce16.  return v1 @kind object;
  #L3fce18.  return v3 @kind object;
  #L3fce1a.  return v1 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3fcde8..L3fce12] goto L3fce1a;
}
procedure `int` `e`(`java.lang.String` v5 @kind object, `long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lt2/c;.e:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fca54.  v0:= 0L;
  #L3fca58.  v2:= lcmp(v6, v0);
  #L3fca5c.  if v2 < 0 then goto L3fcaee;
  #L3fca60.  v3:= "unit == null" @kind object;
  #L3fca64.  call temp:= `requireNonNull`(v8, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fca6a.  call temp:= `toMillis`(v8, v6) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3fca70.  v6:= temp @kind wide;
  #L3fca72.  v3:= 2147483647L;
  #L3fca78.  v8:= lcmp(v6, v3);
  #L3fca7c.  if v8 > 0 then goto L3fcac0;
  #L3fca80.  v8:= lcmp(v6, v0);
  #L3fca84.  if v8 != 0 then goto L3fcabc;
  #L3fca88.  if v2 > 0 then goto L3fca8e;
  #L3fca8c.  goto L3fcabc;
  #L3fca8e.  v6:= new `java.lang.IllegalArgumentException`;
  #L3fca92.  v7:= new `java.lang.StringBuilder`;
  #L3fca96.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fca9c.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcaa2.  v5:= " too small." @kind object;
  #L3fcaa6.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcaac.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fcab2.  v5:= temp @kind object;
  #L3fcab4.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fcaba.  throw v6;
  #L3fcabc.  v5:= (`int`) v6 @kind l2i;
  #L3fcabe.  return v5;
  #L3fcac0.  v6:= new `java.lang.IllegalArgumentException`;
  #L3fcac4.  v7:= new `java.lang.StringBuilder`;
  #L3fcac8.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fcace.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcad4.  v5:= " too large." @kind object;
  #L3fcad8.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcade.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fcae4.  v5:= temp @kind object;
  #L3fcae6.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fcaec.  throw v6;
  #L3fcaee.  v6:= new `java.lang.IllegalArgumentException`;
  #L3fcaf2.  v7:= new `java.lang.StringBuilder`;
  #L3fcaf6.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fcafc.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcb02.  v5:= " < 0" @kind object;
  #L3fcb06.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcb0c.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fcb12.  v5:= temp @kind object;
  #L3fcb14.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fcb1a.  throw v6;
}
procedure `void` `f`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lt2/c;.f:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fd608.  v0:= v7 ^| v9 @kind long;
  #L3fd60c.  v2:= 0L;
  #L3fd610.  v4:= lcmp(v0, v2);
  #L3fd614.  if v4 < 0 then goto L3fd62c;
  #L3fd618.  v0:= lcmp(v7, v5);
  #L3fd61c.  if v0 > 0 then goto L3fd62c;
  #L3fd620.  v5:= v5 - v7 @kind long;
  #L3fd622.  v7:= lcmp(v5, v9);
  #L3fd626.  if v7 < 0 then goto L3fd62c;
  #L3fd62a.  return @kind void;
  #L3fd62c.  v5:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L3fd630.  call `<init>`(v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L3fd636.  throw v5;
}
procedure `void` `g`(`java.io.Closeable` v0 @kind object) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3fd648.  if v0 == 0 then goto L3fd658;
  #L3fd64c.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L3fd652.  goto L3fd658;
  #L3fd654.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3fd656.  throw v0;
  #L3fd658.  return @kind void;
  catch `java.lang.RuntimeException` @[L3fd64c..L3fd652] goto L3fd654;
  catch `java.lang.Exception` @[L3fd64c..L3fd652] goto L3fd658;
}
procedure `void` `h`(`java.net.Socket` v1 @kind object) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fd67c.  if v1 == 0 then goto L3fd69e;
  #L3fd680.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L3fd686.  goto L3fd69e;
  #L3fd688.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3fd68a.  throw v1;
  #L3fd68c.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3fd68e.  call temp:= `A`(v1) @signature `Lt2/c;.A:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3fd694.  v0:= temp;
  #L3fd696.  if v0 == 0 then goto L3fd69c;
  #L3fd69a.  goto L3fd69e;
  #L3fd69c.  throw v1;
  #L3fd69e.  return @kind void;
  catch `java.lang.AssertionError` @[L3fd680..L3fd686] goto L3fd68c;
  catch `java.lang.RuntimeException` @[L3fd680..L3fd686] goto L3fd688;
  catch `java.lang.Exception` @[L3fd680..L3fd686] goto L3fd69e;
}
procedure `java.lang.String`[] `i`(`java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lt2/c;.i:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd000.  v0:= length @variable v4;
  #L3fd002.  v0:= v0 + 1;
  #L3fd006.  v1:= new `java.lang.String`[v0];
  #L3fd00a.  v2:= length @variable v4;
  #L3fd00c.  v3:= 0I;
  #L3fd00e.  call `arraycopy`(v4, v3, v1, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3fd014.  v0:= v0 + -1;
  #L3fd018.  v1[v0]:= v5 @kind object;
  #L3fd01c.  return v1 @kind object;
}
procedure `boolean` `j`(`java.lang.String` v5 @kind object) @signature `Lt2/c;.j:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fc6f0.  v0:= 0I;
  #L3fc6f2.  v1:= 0I;
  #L3fc6f4.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fc6fa.  v2:= temp;
  #L3fc6fc.  if v1 >= v2 then goto L3fc738;
  #L3fc700.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fc706.  v2:= temp;
  #L3fc708.  v3:= 31I;
  #L3fc70c.  v4:= 1I;
  #L3fc70e.  if v2 <= v3 then goto L3fc736;
  #L3fc712.  v3:= 127I;
  #L3fc716.  if v2 < v3 then goto L3fc71c;
  #L3fc71a.  goto L3fc736;
  #L3fc71c.  v3:= " #%/:?@[\\]" @kind object;
  #L3fc720.  call temp:= `indexOf`(v3, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3fc726.  v2:= temp;
  #L3fc728.  v3:= -1I;
  #L3fc72a.  if v2 == v3 then goto L3fc730;
  #L3fc72e.  return v4;
  #L3fc730.  v1:= v1 + 1;
  #L3fc734.  goto L3fc6f4;
  #L3fc736.  return v4;
  #L3fc738.  return v0;
}
procedure `int` `k`(`char` v2 ) @signature `Lt2/c;.k:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fcb2c.  v0:= 48I;
  #L3fcb30.  if v2 < v0 then goto L3fcb40;
  #L3fcb34.  v1:= 57I;
  #L3fcb38.  if v2 > v1 then goto L3fcb40;
  #L3fcb3c.  v2:= v2 - v0 @kind int;
  #L3fcb3e.  return v2;
  #L3fcb40.  v0:= 97I;
  #L3fcb44.  if v2 < v0 then goto L3fcb58;
  #L3fcb48.  v1:= 102I;
  #L3fcb4c.  if v2 > v1 then goto L3fcb58;
  #L3fcb50.  v2:= v2 - v0 @kind int;
  #L3fcb52.  v2:= v2 + 10;
  #L3fcb56.  return v2;
  #L3fcb58.  v0:= 65I;
  #L3fcb5c.  if v2 < v0 then goto L3fcb6a;
  #L3fcb60.  v1:= 70I;
  #L3fcb64.  if v2 > v1 then goto L3fcb6a;
  #L3fcb68.  goto L3fcb50;
  #L3fcb6a.  v2:= -1I;
  #L3fcb6c.  return v2;
}
procedure `boolean` `l`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lt2/c;.l:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fc74c.  v0:= v11;
  #L3fc74e.  v1:= 0I;
  #L3fc750.  if v8 >= v9 then goto L3fc7d4;
  #L3fc754.  v2:= length @variable v10;
  #L3fc756.  if v0 != v2 then goto L3fc75c;
  #L3fc75a.  return v1;
  #L3fc75c.  if v0 == v11 then goto L3fc776;
  #L3fc760.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fc766.  v2:= temp;
  #L3fc768.  v3:= 46I;
  #L3fc76c.  if v2 == v3 then goto L3fc772;
  #L3fc770.  return v1;
  #L3fc772.  v8:= v8 + 1;
  #L3fc776.  v2:= v8;
  #L3fc778.  v3:= 0I;
  #L3fc77a.  if v2 >= v9 then goto L3fc7ba;
  #L3fc77e.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fc784.  v4:= temp;
  #L3fc786.  v5:= 48I;
  #L3fc78a.  if v4 < v5 then goto L3fc7ba;
  #L3fc78e.  v6:= 57I;
  #L3fc792.  if v4 <= v6 then goto L3fc798;
  #L3fc796.  goto L3fc7ba;
  #L3fc798.  if v3 != 0 then goto L3fc7a2;
  #L3fc79c.  if v8 == v2 then goto L3fc7a2;
  #L3fc7a0.  return v1;
  #L3fc7a2.  v3:= v3 * 10;
  #L3fc7a6.  v3:= v3 + v4 @kind int;
  #L3fc7a8.  v3:= v3 - v5 @kind int;
  #L3fc7aa.  v4:= 255I;
  #L3fc7ae.  if v3 <= v4 then goto L3fc7b4;
  #L3fc7b2.  return v1;
  #L3fc7b4.  v2:= v2 + 1;
  #L3fc7b8.  goto L3fc77a;
  #L3fc7ba.  v8:= v2 - v8 @kind int;
  #L3fc7be.  if v8 != 0 then goto L3fc7c4;
  #L3fc7c2.  return v1;
  #L3fc7c4.  v8:= v0 + 1;
  #L3fc7c8.  v1:= (`byte`) v3 @kind i2b;
  #L3fc7ca.  v10[v0]:= v1 @kind byte;
  #L3fc7ce.  v0:= v8;
  #L3fc7d0.  v8:= v2;
  #L3fc7d2.  goto L3fc74e;
  #L3fc7d4.  v11:= v11 + 4;
  #L3fc7d8.  if v0 == v11 then goto L3fc7de;
  #L3fc7dc.  return v1;
  #L3fc7de.  v7:= 1I;
  #L3fc7e0.  return v7;
}
procedure `java.net.InetAddress` `m`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lt2/c;.m:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3fd0a0.  v0:= 16I;
  #L3fd0a4.  v1:= new `byte`[v0];
  #L3fd0a8.  v2:= -1I;
  #L3fd0aa.  v3:= 0I;
  #L3fd0ac.  v4:= 0I;
  #L3fd0ae.  v5:= -1I;
  #L3fd0b0.  v6:= -1I;
  #L3fd0b2.  v7:= 0I;
  #L3fd0b4.  if v12 >= v13 then goto L3fd194;
  #L3fd0b8.  if v4 != v0 then goto L3fd0be;
  #L3fd0bc.  return v7 @kind object;
  #L3fd0be.  v8:= v12 + 2;
  #L3fd0c2.  if v8 > v13 then goto L3fd0ee;
  #L3fd0c6.  v9:= "::" @kind object;
  #L3fd0ca.  v10:= 2I;
  #L3fd0cc.  call temp:= `regionMatches`(v11, v12, v9, v3, v10) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L3fd0d2.  v9:= temp;
  #L3fd0d4.  if v9 == 0 then goto L3fd0ee;
  #L3fd0d8.  if v5 == v2 then goto L3fd0de;
  #L3fd0dc.  return v7 @kind object;
  #L3fd0de.  v4:= v4 + 2;
  #L3fd0e2.  v5:= v4;
  #L3fd0e4.  if v8 != v13 then goto L3fd0ea;
  #L3fd0e8.  goto L3fd194;
  #L3fd0ea.  v6:= v8;
  #L3fd0ec.  goto L3fd136;
  #L3fd0ee.  if v4 == 0 then goto L3fd134;
  #L3fd0f2.  v8:= ":" @kind object;
  #L3fd0f6.  v9:= 1I;
  #L3fd0f8.  call temp:= `regionMatches`(v11, v12, v8, v3, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L3fd0fe.  v8:= temp;
  #L3fd100.  if v8 == 0 then goto L3fd10a;
  #L3fd104.  v12:= v12 + 1;
  #L3fd108.  goto L3fd134;
  #L3fd10a.  v8:= "." @kind object;
  #L3fd10e.  call temp:= `regionMatches`(v11, v12, v8, v3, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L3fd114.  v12:= temp;
  #L3fd116.  if v12 == 0 then goto L3fd132;
  #L3fd11a.  v12:= v4 + -2;
  #L3fd11e.  call temp:= `l`(v11, v6, v13, v1, v12) @signature `Lt2/c;.l:(Ljava/lang/String;II[BI)Z` @kind static;
  #L3fd124.  v11:= temp;
  #L3fd126.  if v11 != 0 then goto L3fd12c;
  #L3fd12a.  return v7 @kind object;
  #L3fd12c.  v4:= v4 + 2;
  #L3fd130.  goto L3fd194;
  #L3fd132.  return v7 @kind object;
  #L3fd134.  v6:= v12;
  #L3fd136.  v12:= v6;
  #L3fd138.  v8:= 0I;
  #L3fd13a.  if v12 >= v13 then goto L3fd160;
  #L3fd13e.  call temp:= `charAt`(v11, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fd144.  v9:= temp;
  #L3fd146.  call temp:= `k`(v9) @signature `Lt2/c;.k:(C)I` @kind static;
  #L3fd14c.  v9:= temp;
  #L3fd14e.  if v9 != v2 then goto L3fd154;
  #L3fd152.  goto L3fd160;
  #L3fd154.  v8:= v8 ^< 4;
  #L3fd158.  v8:= v8 + v9 @kind int;
  #L3fd15a.  v12:= v12 + 1;
  #L3fd15e.  goto L3fd13a;
  #L3fd160.  v9:= v12 - v6 @kind int;
  #L3fd164.  if v9 == 0 then goto L3fd192;
  #L3fd168.  v10:= 4I;
  #L3fd16a.  if v9 <= v10 then goto L3fd170;
  #L3fd16e.  goto L3fd192;
  #L3fd170.  v7:= v4 + 1;
  #L3fd174.  v9:= v8 ^>> 8;
  #L3fd178.  v9:= v9 ^& 255;
  #L3fd17c.  v9:= (`byte`) v9 @kind i2b;
  #L3fd17e.  v1[v4]:= v9 @kind byte;
  #L3fd182.  v4:= v7 + 1;
  #L3fd186.  v8:= v8 ^& 255;
  #L3fd18a.  v8:= (`byte`) v8 @kind i2b;
  #L3fd18c.  v1[v7]:= v8 @kind byte;
  #L3fd190.  goto L3fd0b2;
  #L3fd192.  return v7 @kind object;
  #L3fd194.  if v4 == v0 then goto L3fd1b6;
  #L3fd198.  if v5 != v2 then goto L3fd19e;
  #L3fd19c.  return v7 @kind object;
  #L3fd19e.  v11:= v4 - v5 @kind int;
  #L3fd1a2.  v12:= v11 - 16;
  #L3fd1a6.  call `arraycopy`(v1, v5, v1, v12, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3fd1ac.  v0:= v0 - v4 @kind int;
  #L3fd1ae.  v0:= v0 + v5 @kind int;
  #L3fd1b0.  call `fill`(v1, v5, v0, v3) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L3fd1b6.  call temp:= `getByAddress`(v1) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #L3fd1bc.  v11:= temp @kind object;
  #L3fd1be.  return v11 @kind object;
  #L3fd1c0.  v11:= new `java.lang.AssertionError`;
  #L3fd1c4.  call `<init>`(v11) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3fd1ca.  throw v11;
  catch `java.net.UnknownHostException` @[L3fd1b6..L3fd1be] goto L3fd1c0;
}
procedure `int` `n`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `char` v4 ) @signature `Lt2/c;.n:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fcb80.  if v2 >= v3 then goto L3fcb98;
  #L3fcb84.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fcb8a.  v0:= temp;
  #L3fcb8c.  if v0 != v4 then goto L3fcb92;
  #L3fcb90.  return v2;
  #L3fcb92.  v2:= v2 + 1;
  #L3fcb96.  goto L3fcb80;
  #L3fcb98.  return v3;
}
procedure `int` `o`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `java.lang.String` v5 @kind object) @signature `Lt2/c;.o:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fcbac.  if v3 >= v4 then goto L3fcbce;
  #L3fcbb0.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fcbb6.  v0:= temp;
  #L3fcbb8.  call temp:= `indexOf`(v5, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3fcbbe.  v0:= temp;
  #L3fcbc0.  v1:= -1I;
  #L3fcbc2.  if v0 == v1 then goto L3fcbc8;
  #L3fcbc6.  return v3;
  #L3fcbc8.  v3:= v3 + 1;
  #L3fcbcc.  goto L3fcbac;
  #L3fcbce.  return v4;
}
procedure `boolean` `p`(`okio.q` v0 @kind object, `int` v1 , `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lt2/c;.p:(Lokio/q;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3fc7f4.  call temp:= `D`(v0, v1, v2) @signature `Lt2/c;.D:(Lokio/q;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L3fc7fa.  v0:= temp;
  #L3fc7fc.  return v0;
  #L3fc7fe.  v0:= 0I;
  #L3fc800.  return v0;
  catch `java.io.IOException` @[L3fc7f4..L3fc7fc] goto L3fc7fe;
}
procedure `boolean` `q`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lt2/c;.q:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3fc824.  if v0 == v1 then goto L3fc83e;
  #L3fc828.  if v0 == 0 then goto L3fc83a;
  #L3fc82c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fc832.  v0:= temp;
  #L3fc834.  if v0 == 0 then goto L3fc83a;
  #L3fc838.  goto L3fc83e;
  #L3fc83a.  v0:= 0I;
  #L3fc83c.  goto L3fc840;
  #L3fc83e.  v0:= 1I;
  #L3fc840.  return v0;
}
procedure `java.lang.String` `r`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fce3c.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3fce40.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3fce46.  v1:= temp @kind object;
  #L3fce48.  return v1 @kind object;
}
procedure `java.lang.String` `s`(`okhttp3.r` v3 @kind object, `boolean` v4 ) @signature `Lt2/c;.s:(Lokhttp3/r;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fce5c.  call temp:= `l`(v3) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3fce62.  v0:= temp @kind object;
  #L3fce64.  v1:= ":" @kind object;
  #L3fce68.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3fce6e.  v0:= temp;
  #L3fce70.  if v0 == 0 then goto L3fceaa;
  #L3fce74.  v0:= new `java.lang.StringBuilder`;
  #L3fce78.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fce7e.  v2:= "[" @kind object;
  #L3fce82.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fce88.  call temp:= `l`(v3) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3fce8e.  v2:= temp @kind object;
  #L3fce90.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fce96.  v2:= "]" @kind object;
  #L3fce9a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcea0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fcea6.  v0:= temp @kind object;
  #L3fcea8.  goto L3fceb2;
  #L3fceaa.  call temp:= `l`(v3) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3fceb0.  v0:= temp @kind object;
  #L3fceb2.  if v4 != 0 then goto L3fced2;
  #L3fceb6.  call temp:= `x`(v3) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L3fcebc.  v4:= temp;
  #L3fcebe.  call temp:= `C`(v3) @signature `Lokhttp3/r;.C:()Ljava/lang/String;` @kind virtual;
  #L3fcec4.  v2:= temp @kind object;
  #L3fcec6.  call temp:= `d`(v2) @signature `Lokhttp3/r;.d:(Ljava/lang/String;)I` @kind static;
  #L3fcecc.  v2:= temp;
  #L3fcece.  if v4 == v2 then goto L3fcefe;
  #L3fced2.  v4:= new `java.lang.StringBuilder`;
  #L3fced6.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fcedc.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcee2.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcee8.  call temp:= `x`(v3) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L3fceee.  v3:= temp;
  #L3fcef0.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fcef6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fcefc.  v0:= temp @kind object;
  #L3fcefe.  return v0 @kind object;
}
procedure `java.util.List` `t`(`java.util.List` v1 @kind object) @signature `Lt2/c;.t:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fd2f0.  v0:= new `java.util.ArrayList`;
  #L3fd2f4.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3fd2fa.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3fd300.  v1:= temp @kind object;
  #L3fd302.  return v1 @kind object;
}
procedure `java.util.List` `u`(`java.lang.Object`[] v0 @kind object) @signature `Lt2/c;.u:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3fd2c0.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3fd2c6.  v0:= temp @kind object;
  #L3fd2c8.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L3fd2cc.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3fd2d2.  v0:= temp @kind object;
  #L3fd2d4.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3fd2da.  v0:= temp @kind object;
  #L3fd2dc.  return v0 @kind object;
}
procedure `java.util.Map` `v`(`java.util.Map` v1 @kind object) @signature `Lt2/c;.v:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fd314.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3fd31a.  v0:= temp;
  #L3fd31c.  if v0 == 0 then goto L3fd32a;
  #L3fd320.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L3fd326.  v1:= temp @kind object;
  #L3fd328.  goto L3fd33c;
  #L3fd32a.  v0:= new `java.util.LinkedHashMap`;
  #L3fd32e.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L3fd334.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3fd33a.  v1:= temp @kind object;
  #L3fd33c.  return v1 @kind object;
}
procedure `int` `w`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lt2/c;.w:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fcbe0.  v0:= length @variable v4;
  #L3fcbe2.  v1:= 0I;
  #L3fcbe4.  if v1 >= v0 then goto L3fcc00;
  #L3fcbe8.  v2:= v4[v1] @kind object;
  #L3fcbec.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L3fcbf2.  v2:= temp;
  #L3fcbf4.  if v2 != 0 then goto L3fcbfa;
  #L3fcbf8.  return v1;
  #L3fcbfa.  v1:= v1 + 1;
  #L3fcbfe.  goto L3fcbe4;
  #L3fcc00.  v3:= -1I;
  #L3fcc02.  return v3;
}
procedure `int` `x`(`java.lang.String` v4 @kind object) @signature `Lt2/c;.x:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fcc14.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fcc1a.  v0:= temp;
  #L3fcc1c.  v1:= 0I;
  #L3fcc1e.  if v1 >= v0 then goto L3fcc44;
  #L3fcc22.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fcc28.  v2:= temp;
  #L3fcc2a.  v3:= 31I;
  #L3fcc2e.  if v2 <= v3 then goto L3fcc42;
  #L3fcc32.  v3:= 127I;
  #L3fcc36.  if v2 < v3 then goto L3fcc3c;
  #L3fcc3a.  goto L3fcc42;
  #L3fcc3c.  v1:= v1 + 1;
  #L3fcc40.  goto L3fcc1e;
  #L3fcc42.  return v1;
  #L3fcc44.  v4:= -1I;
  #L3fcc46.  return v4;
}
procedure `java.lang.String` `y`(`byte`[] v8 @kind object) @signature `Lt2/c;.y:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fcf10.  v0:= 0I;
  #L3fcf12.  v1:= -1I;
  #L3fcf14.  v2:= 0I;
  #L3fcf16.  v3:= 0I;
  #L3fcf18.  v4:= length @variable v8;
  #L3fcf1a.  v5:= 16I;
  #L3fcf1e.  if v2 >= v4 then goto L3fcf5a;
  #L3fcf22.  v4:= v2;
  #L3fcf24.  if v4 >= v5 then goto L3fcf42;
  #L3fcf28.  v6:= v8[v4] @kind byte;
  #L3fcf2c.  if v6 != 0 then goto L3fcf42;
  #L3fcf30.  v6:= v4 + 1;
  #L3fcf34.  v6:= v8[v6] @kind byte;
  #L3fcf38.  if v6 != 0 then goto L3fcf42;
  #L3fcf3c.  v4:= v4 + 2;
  #L3fcf40.  goto L3fcf24;
  #L3fcf42.  v5:= v4 - v2 @kind int;
  #L3fcf46.  if v5 <= v3 then goto L3fcf54;
  #L3fcf4a.  v6:= 4I;
  #L3fcf4c.  if v5 < v6 then goto L3fcf54;
  #L3fcf50.  v1:= v2;
  #L3fcf52.  v3:= v5;
  #L3fcf54.  v2:= v4 + 2;
  #L3fcf58.  goto L3fcf18;
  #L3fcf5a.  v2:= new `okio.c`;
  #L3fcf5e.  call `<init>`(v2) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3fcf64.  v4:= length @variable v8;
  #L3fcf66.  if v0 >= v4 then goto L3fcfb8;
  #L3fcf6a.  v4:= 58I;
  #L3fcf6e.  if v0 != v1 then goto L3fcf86;
  #L3fcf72.  call temp:= `o0`(v2, v4) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3fcf78.  v0:= v0 + v3 @kind int;
  #L3fcf7a.  if v0 != v5 then goto L3fcf64;
  #L3fcf7e.  call temp:= `o0`(v2, v4) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3fcf84.  goto L3fcf64;
  #L3fcf86.  if v0 <= 0 then goto L3fcf90;
  #L3fcf8a.  call temp:= `o0`(v2, v4) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3fcf90.  v4:= v8[v0] @kind byte;
  #L3fcf94.  v4:= v4 ^& 255;
  #L3fcf98.  v4:= v4 ^< 8;
  #L3fcf9c.  v6:= v0 + 1;
  #L3fcfa0.  v6:= v8[v6] @kind byte;
  #L3fcfa4.  v6:= v6 ^& 255;
  #L3fcfa8.  v4:= v4 ^| v6 @kind int;
  #L3fcfaa.  v6:= (`long`) v4 @kind i2l;
  #L3fcfac.  call temp:= `p0`(v2, v6) @signature `Lokio/c;.p0:(J)Lokio/c;` @kind virtual;
  #L3fcfb2.  v0:= v0 + 2;
  #L3fcfb6.  goto L3fcf64;
  #L3fcfb8.  call temp:= `d0`(v2) @signature `Lokio/c;.d0:()Ljava/lang/String;` @kind virtual;
  #L3fcfbe.  v8:= temp @kind object;
  #L3fcfc0.  return v8 @kind object;
}
procedure `java.lang.String`[] `z`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object, `java.lang.String`[] v10 @kind object) @signature `Lt2/c;.z:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fd030.  v0:= new `java.util.ArrayList`;
  #L3fd034.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3fd03a.  v1:= length @variable v9;
  #L3fd03c.  v2:= 0I;
  #L3fd03e.  v3:= 0I;
  #L3fd040.  if v3 >= v1 then goto L3fd074;
  #L3fd044.  v4:= v9[v3] @kind object;
  #L3fd048.  v5:= length @variable v10;
  #L3fd04a.  v6:= 0I;
  #L3fd04c.  if v6 >= v5 then goto L3fd06e;
  #L3fd050.  v7:= v10[v6] @kind object;
  #L3fd054.  call temp:= `compare`(v8, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L3fd05a.  v7:= temp;
  #L3fd05c.  if v7 != 0 then goto L3fd068;
  #L3fd060.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3fd066.  goto L3fd06e;
  #L3fd068.  v6:= v6 + 1;
  #L3fd06c.  goto L3fd04c;
  #L3fd06e.  v3:= v3 + 1;
  #L3fd072.  goto L3fd040;
  #L3fd074.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3fd07a.  v8:= temp;
  #L3fd07c.  v8:= new `java.lang.String`[v8];
  #L3fd080.  call temp:= `toArray`(v0, v8) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3fd086.  v8:= temp @kind object;
  #L3fd088.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L3fd08c.  return v8 @kind object;
}
