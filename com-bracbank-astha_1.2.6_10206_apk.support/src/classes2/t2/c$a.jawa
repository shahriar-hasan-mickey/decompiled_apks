record `t2.c$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`t2.c$a` v0 @kind this) @signature `Lt2/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fc68c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fc692.  return @kind void;
}
procedure `int` `a`(`t2.c$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lt2/c$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;

  #L3fc670.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/String;.compareTo:(Ljava/lang/String;)I` @kind virtual;
  #L3fc676.  v1:= temp;
  #L3fc678.  return v1;
}
procedure `int` `compare`(`t2.c$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lt2/c$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3fc64c.  v1:= (`java.lang.String`) v1 @kind object;
  #L3fc650.  v2:= (`java.lang.String`) v2 @kind object;
  #L3fc654.  call temp:= `a`(v0, v1, v2) @signature `Lt2/c$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L3fc65a.  v1:= temp;
  #L3fc65c.  return v1;
}
