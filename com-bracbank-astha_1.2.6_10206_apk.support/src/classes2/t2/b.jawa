record `t2.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `t2.b.a` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`t2.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lt2/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fc5c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fc5c6.  call temp:= `r`(v1, v2) @signature `Lt2/c;.r:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3fc5cc.  v1:= temp @kind object;
  #L3fc5ce.  v0.`t2.b.a` @type ^`java.lang.String` := v1 @kind object;
  #L3fc5d2.  return @kind void;
}
procedure `void` `k`() @signature `Lt2/b;.k:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `run`(`t2.b` v3 @kind this) @signature `Lt2/b;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fc5e4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3fc5ea.  v0:= temp @kind object;
  #L3fc5ec.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L3fc5f2.  v0:= temp @kind object;
  #L3fc5f4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3fc5fa.  v1:= temp @kind object;
  #L3fc5fc.  v2:= v3.`t2.b.a` @type ^`java.lang.String` @kind object;
  #L3fc600.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L3fc606.  call `k`(v3) @signature `Lt2/b;.k:()V` @kind virtual;
  #L3fc60c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3fc612.  v1:= temp @kind object;
  #L3fc614.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L3fc61a.  return @kind void;
  #L3fc61c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fc61e.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3fc624.  v2:= temp @kind object;
  #L3fc626.  call `setName`(v2, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L3fc62c.  throw v1;
  catch `java.lang.Throwable` @[L3fc606..L3fc60c] goto L3fc61c;
}
