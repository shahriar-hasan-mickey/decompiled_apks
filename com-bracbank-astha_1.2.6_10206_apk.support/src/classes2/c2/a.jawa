record `c2.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `h2.e` `@@c2.a.a` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `h2.e` `@@c2.a.b` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `java.lang.Object` `a`(`h2.e` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lc2/a;.a:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L13d668.  call temp:= `apply`(v0, v1) @signature `Lh2/e;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13d66e.  v0:= temp @kind object;
  #L13d670.  return v0 @kind object;
  #L13d672.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13d674.  call temp:= `a`(v0) @signature `Lf2/a;.a:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L13d67a.  v0:= temp @kind object;
  #L13d67c.  throw v0;
  catch `java.lang.Throwable` @[L13d668..L13d670] goto L13d672;
}
procedure `b2.q` `b`(`h2.e` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object) @signature `Lc2/a;.b:(Lh2/e;Ljava/util/concurrent/Callable;)Lb2/q;` @AccessFlag STATIC {
    temp;

  #L13d588.  call temp:= `a`(v0, v1) @signature `Lc2/a;.a:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L13d58e.  v0:= temp @kind object;
  #L13d590.  v0:= (`b2.q`) v0 @kind object;
  #L13d594.  v1:= "Scheduler Callable returned null" @kind object;
  #L13d598.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13d59e.  return v0 @kind object;
}
procedure `b2.q` `c`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lc2/a;.c:(Ljava/util/concurrent/Callable;)Lb2/q;` @AccessFlag STATIC {
    temp;
    v0;

  #L13d5b0.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L13d5b6.  v1:= temp @kind object;
  #L13d5b8.  v1:= (`b2.q`) v1 @kind object;
  #L13d5bc.  if v1 == 0 then goto L13d5c2;
  #L13d5c0.  return v1 @kind object;
  #L13d5c2.  v1:= new `java.lang.NullPointerException`;
  #L13d5c6.  v0:= "Scheduler Callable returned null" @kind object;
  #L13d5ca.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13d5d0.  throw v1;
  #L13d5d2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13d5d4.  call temp:= `a`(v1) @signature `Lf2/a;.a:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L13d5da.  v1:= temp @kind object;
  #L13d5dc.  throw v1;
  catch `java.lang.Throwable` @[L13d5b0..L13d5d2] goto L13d5d2;
}
procedure `b2.q` `d`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lc2/a;.d:(Ljava/util/concurrent/Callable;)Lb2/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13d5fc.  v0:= "scheduler == null" @kind object;
  #L13d600.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13d606.  v0:= `@@c2.a.a` @type ^`h2.e` @kind object;
  #L13d60a.  if v0 != 0 then goto L13d618;
  #L13d60e.  call temp:= `c`(v1) @signature `Lc2/a;.c:(Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L13d614.  v1:= temp @kind object;
  #L13d616.  return v1 @kind object;
  #L13d618.  call temp:= `b`(v0, v1) @signature `Lc2/a;.b:(Lh2/e;Ljava/util/concurrent/Callable;)Lb2/q;` @kind static;
  #L13d61e.  v1:= temp @kind object;
  #L13d620.  return v1 @kind object;
}
procedure `b2.q` `e`(`b2.q` v1 @kind object) @signature `Lc2/a;.e:(Lb2/q;)Lb2/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13d634.  v0:= "scheduler == null" @kind object;
  #L13d638.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13d63e.  v0:= `@@c2.a.b` @type ^`h2.e` @kind object;
  #L13d642.  if v0 != 0 then goto L13d648;
  #L13d646.  return v1 @kind object;
  #L13d648.  call temp:= `a`(v0, v1) @signature `Lc2/a;.a:(Lh2/e;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L13d64e.  v1:= temp @kind object;
  #L13d650.  v1:= (`b2.q`) v1 @kind object;
  #L13d654.  return v1 @kind object;
}
