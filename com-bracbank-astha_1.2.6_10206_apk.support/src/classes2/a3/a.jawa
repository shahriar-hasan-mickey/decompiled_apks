record `a3.a` @kind class @AccessFlag PUBLIC extends `java.net.ProxySelector` @kind class {
}
procedure `void` `<init>`(`a3.a` v0 @kind this) @signature `La3/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L13b498.  call `<init>`(v0) @signature `Ljava/net/ProxySelector;.<init>:()V` @kind direct;
  #L13b49e.  return @kind void;
}
procedure `void` `connectFailed`(`a3.a` v0 @kind this, `java.net.URI` v1 @kind object, `java.net.SocketAddress` v2 @kind object, `java.io.IOException` v3 @kind object) @signature `La3/a;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;

  #L13b4b0.  return @kind void;
}
procedure `java.util.List` `select`(`a3.a` v1 @kind this, `java.net.URI` v2 @kind object) @signature `La3/a;.select:(Ljava/net/URI;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b464.  if v2 == 0 then goto L13b476;
  #L13b468.  v2:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L13b46c.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L13b472.  v2:= temp @kind object;
  #L13b474.  return v2 @kind object;
  #L13b476.  v2:= new `java.lang.IllegalArgumentException`;
  #L13b47a.  v0:= "uri must not be null" @kind object;
  #L13b47e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b484.  throw v2;
}
