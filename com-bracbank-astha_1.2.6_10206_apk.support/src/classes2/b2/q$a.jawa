record `b2.q$a` @kind class @AccessFlag FINAL extends `e2.b` @kind interface, `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `b2.q$a.a` @AccessFlag FINAL;
  `b2.q$b` `b2.q$a.b` @AccessFlag FINAL;
  `java.lang.Thread` `b2.q$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`b2.q$a` v0 @kind this, `java.lang.Runnable` v1 @kind object, `b2.q$b` v2 @kind object) @signature `Lb2/q$a;.<init>:(Ljava/lang/Runnable;Lb2/q$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13ca84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13ca8a.  v0.`b2.q$a.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L13ca8e.  v0.`b2.q$a.b` @type ^`b2.q$b` := v2 @kind object;
  #L13ca92.  return @kind void;
}
procedure `boolean` `d`(`b2.q$a` v1 @kind this) @signature `Lb2/q$a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13ca64.  v0:= v1.`b2.q$a.b` @type ^`b2.q$b` @kind object;
  #L13ca68.  call temp:= `d`(v0) @signature `Le2/b;.d:()Z` @kind interface;
  #L13ca6e.  v0:= temp;
  #L13ca70.  return v0;
}
procedure `void` `e`(`b2.q$a` v2 @kind this) @signature `Lb2/q$a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13caa4.  v0:= v2.`b2.q$a.c` @type ^`java.lang.Thread` @kind object;
  #L13caa8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L13caae.  v1:= temp @kind object;
  #L13cab0.  if v0 != v1 then goto L13cacc;
  #L13cab4.  v0:= v2.`b2.q$a.b` @type ^`b2.q$b` @kind object;
  #L13cab8.  v1:= instanceof @variable v0 @type ^`io.reactivex.internal.schedulers.d` @kind boolean;
  #L13cabc.  if v1 == 0 then goto L13cacc;
  #L13cac0.  v0:= (`io.reactivex.internal.schedulers.d`) v0 @kind object;
  #L13cac4.  call `h`(v0) @signature `Lio/reactivex/internal/schedulers/d;.h:()V` @kind virtual;
  #L13caca.  goto L13cad6;
  #L13cacc.  v0:= v2.`b2.q$a.b` @type ^`b2.q$b` @kind object;
  #L13cad0.  call `e`(v0) @signature `Le2/b;.e:()V` @kind interface;
  #L13cad6.  return @kind void;
}
procedure `void` `run`(`b2.q$a` v2 @kind this) @signature `Lb2/q$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13cae8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L13caee.  v0:= temp @kind object;
  #L13caf0.  v2.`b2.q$a.c` @type ^`java.lang.Thread` := v0 @kind object;
  #L13caf4.  v0:= 0I;
  #L13caf6.  v1:= v2.`b2.q$a.a` @type ^`java.lang.Runnable` @kind object;
  #L13cafa.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L13cb00.  call `e`(v2) @signature `Lb2/q$a;.e:()V` @kind virtual;
  #L13cb06.  v2.`b2.q$a.c` @type ^`java.lang.Thread` := v0 @kind object;
  #L13cb0a.  return @kind void;
  #L13cb0c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13cb0e.  call `e`(v2) @signature `Lb2/q$a;.e:()V` @kind virtual;
  #L13cb14.  v2.`b2.q$a.c` @type ^`java.lang.Thread` := v0 @kind object;
  #L13cb18.  throw v1;
  catch `java.lang.Throwable` @[L13caf6..L13cb00] goto L13cb0c;
}
