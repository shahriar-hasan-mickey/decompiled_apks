record `b2.r` @kind class @AccessFlag PUBLIC_ABSTRACT extends `b2.t` @kind interface {
}
procedure `void` `<init>`(`b2.r` v0 @kind this) @signature `Lb2/r;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L13cda0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13cda6.  return @kind void;
}
procedure `b2.r` `h`(`java.lang.Object` v1 @kind object) @signature `Lb2/r;.h:(Ljava/lang/Object;)Lb2/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13cd14.  v0:= "value is null" @kind object;
  #L13cd18.  call temp:= `d`(v1, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13cd1e.  v0:= new `io.reactivex.internal.operators.single.c`;
  #L13cd22.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/c;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L13cd28.  call temp:= `n`(v0) @signature `Ll2/a;.n:(Lb2/r;)Lb2/r;` @kind static;
  #L13cd2e.  v1:= temp @kind object;
  #L13cd30.  return v1 @kind object;
}
procedure `void` `c`(`b2.r` v2 @kind this, `b2.s` v3 @kind object) @signature `Lb2/r;.c:(Lb2/s;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13cdb8.  v0:= "subscriber is null" @kind object;
  #L13cdbc.  call temp:= `d`(v3, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13cdc2.  call temp:= `w`(v2, v3) @signature `Ll2/a;.w:(Lb2/r;Lb2/s;)Lb2/s;` @kind static;
  #L13cdc8.  v3:= temp @kind object;
  #L13cdca.  v0:= "subscriber returned by the RxJavaPlugins hook is null" @kind object;
  #L13cdce.  call temp:= `d`(v3, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13cdd4.  call `k`(v2, v3) @signature `Lb2/r;.k:(Lb2/s;)V` @kind virtual;
  #L13cdda.  return @kind void;
  #L13cddc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13cdde.  call `b`(v3) @signature `Lf2/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L13cde4.  v0:= new `java.lang.NullPointerException`;
  #L13cde8.  v1:= "subscribeActual failed" @kind object;
  #L13cdec.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13cdf2.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L13cdf8.  throw v0;
  #L13cdfa.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L13cdfc.  throw v3;
  catch `java.lang.NullPointerException` @[L13cdd4..L13cdda] goto L13cdfa;
  catch `java.lang.Throwable` @[L13cdd4..L13cdda] goto L13cddc;
}
procedure `b2.r` `e`(`b2.r` v1 @kind this, `h2.d` v2 @kind object) @signature `Lb2/r;.e:(Lh2/d;)Lb2/r;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13ccb4.  v0:= "onError is null" @kind object;
  #L13ccb8.  call temp:= `d`(v2, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13ccbe.  v0:= new `io.reactivex.internal.operators.single.a`;
  #L13ccc2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/a;.<init>:(Lb2/t;Lh2/d;)V` @kind direct;
  #L13ccc8.  call temp:= `n`(v0) @signature `Ll2/a;.n:(Lb2/r;)Lb2/r;` @kind static;
  #L13ccce.  v2:= temp @kind object;
  #L13ccd0.  return v2 @kind object;
}
procedure `b2.r` `f`(`b2.r` v1 @kind this, `h2.d` v2 @kind object) @signature `Lb2/r;.f:(Lh2/d;)Lb2/r;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13cce4.  v0:= "onSuccess is null" @kind object;
  #L13cce8.  call temp:= `d`(v2, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13ccee.  v0:= new `io.reactivex.internal.operators.single.b`;
  #L13ccf2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/b;.<init>:(Lb2/t;Lh2/d;)V` @kind direct;
  #L13ccf8.  call temp:= `n`(v0) @signature `Ll2/a;.n:(Lb2/r;)Lb2/r;` @kind static;
  #L13ccfe.  v2:= temp @kind object;
  #L13cd00.  return v2 @kind object;
}
procedure `b2.i` `g`(`b2.r` v1 @kind this, `h2.g` v2 @kind object) @signature `Lb2/r;.g:(Lh2/g;)Lb2/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13cc84.  v0:= "predicate is null" @kind object;
  #L13cc88.  call temp:= `d`(v2, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13cc8e.  v0:= new `io.reactivex.internal.operators.maybe.d`;
  #L13cc92.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/d;.<init>:(Lb2/t;Lh2/g;)V` @kind direct;
  #L13cc98.  call temp:= `l`(v0) @signature `Ll2/a;.l:(Lb2/i;)Lb2/i;` @kind static;
  #L13cc9e.  v2:= temp @kind object;
  #L13cca0.  return v2 @kind object;
}
procedure `b2.r` `i`(`b2.r` v1 @kind this, `b2.r` v2 @kind object) @signature `Lb2/r;.i:(Lb2/r;)Lb2/r;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13cd44.  v0:= "resumeSingleInCaseOfError is null" @kind object;
  #L13cd48.  call temp:= `d`(v2, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13cd4e.  call temp:= `e`(v2) @signature `Lj2/a;.e:(Ljava/lang/Object;)Lh2/e;` @kind static;
  #L13cd54.  v2:= temp @kind object;
  #L13cd56.  call temp:= `j`(v1, v2) @signature `Lb2/r;.j:(Lh2/e;)Lb2/r;` @kind virtual;
  #L13cd5c.  v2:= temp @kind object;
  #L13cd5e.  return v2 @kind object;
}
procedure `b2.r` `j`(`b2.r` v1 @kind this, `h2.e` v2 @kind object) @signature `Lb2/r;.j:(Lh2/e;)Lb2/r;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13cd70.  v0:= "resumeFunctionInCaseOfError is null" @kind object;
  #L13cd74.  call temp:= `d`(v2, v0) @signature `Lj2/b;.d:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13cd7a.  v0:= new `io.reactivex.internal.operators.single.SingleResumeNext`;
  #L13cd7e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext;.<init>:(Lb2/t;Lh2/e;)V` @kind direct;
  #L13cd84.  call temp:= `n`(v0) @signature `Ll2/a;.n:(Lb2/r;)Lb2/r;` @kind static;
  #L13cd8a.  v2:= temp @kind object;
  #L13cd8c.  return v2 @kind object;
}
procedure `void` `k`(`b2.s` v0 @kind object) @signature `Lb2/r;.k:(Lb2/s;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `b2.e` `l`(`b2.r` v1 @kind this) @signature `Lb2/r;.l:()Lb2/e;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13cc48.  v0:= instanceof @variable v1 @type ^`k2.b` @kind boolean;
  #L13cc4c.  if v0 == 0 then goto L13cc60;
  #L13cc50.  v0:= v1 @kind object;
  #L13cc52.  v0:= (`k2.b`) v0 @kind object;
  #L13cc56.  call temp:= `d`(v0) @signature `Lk2/b;.d:()Lb2/e;` @kind interface;
  #L13cc5c.  v0:= temp @kind object;
  #L13cc5e.  return v0 @kind object;
  #L13cc60.  v0:= new `io.reactivex.internal.operators.single.SingleToFlowable`;
  #L13cc64.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleToFlowable;.<init>:(Lb2/t;)V` @kind direct;
  #L13cc6a.  call temp:= `k`(v0) @signature `Ll2/a;.k:(Lb2/e;)Lb2/e;` @kind static;
  #L13cc70.  v0:= temp @kind object;
  #L13cc72.  return v0 @kind object;
}
