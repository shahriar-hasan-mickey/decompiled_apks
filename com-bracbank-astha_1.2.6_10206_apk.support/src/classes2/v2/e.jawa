record `v2.e` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.a` `v2.e.a` @AccessFlag PRIVATE_FINAL;
  `v2.d` `v2.e.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.d` `v2.e.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.o` `v2.e.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `v2.e.e` @AccessFlag PRIVATE;
  `int` `v2.e.f` @AccessFlag PRIVATE;
  `java.util.List` `v2.e.g` @AccessFlag PRIVATE;
  `java.util.List` `v2.e.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v2.e` v1 @kind this, `okhttp3.a` v2 @kind object, `v2.d` v3 @kind object, `okhttp3.d` v4 @kind object, `okhttp3.o` v5 @kind object) @signature `Lv2/e;.<init>:(Lokhttp3/a;Lv2/d;Lokhttp3/d;Lokhttp3/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L400230.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L400236.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L40023c.  v0:= temp @kind object;
  #L40023e.  v1.`v2.e.e` @type ^`java.util.List` := v0 @kind object;
  #L400242.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L400248.  v0:= temp @kind object;
  #L40024a.  v1.`v2.e.g` @type ^`java.util.List` := v0 @kind object;
  #L40024e.  v0:= new `java.util.ArrayList`;
  #L400252.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L400258.  v1.`v2.e.h` @type ^`java.util.List` := v0 @kind object;
  #L40025c.  v1.`v2.e.a` @type ^`okhttp3.a` := v2 @kind object;
  #L400260.  v1.`v2.e.b` @type ^`v2.d` := v3 @kind object;
  #L400264.  v1.`v2.e.c` @type ^`okhttp3.d` := v4 @kind object;
  #L400268.  v1.`v2.e.d` @type ^`okhttp3.o` := v5 @kind object;
  #L40026c.  call temp:= `l`(v2) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L400272.  v3:= temp @kind object;
  #L400274.  call temp:= `g`(v2) @signature `Lokhttp3/a;.g:()Ljava/net/Proxy;` @kind virtual;
  #L40027a.  v2:= temp @kind object;
  #L40027c.  call `h`(v1, v3, v2) @signature `Lv2/e;.h:(Lokhttp3/r;Ljava/net/Proxy;)V` @kind direct;
  #L400282.  return @kind void;
}
procedure `java.lang.String` `b`(`java.net.InetSocketAddress` v1 @kind object) @signature `Lv2/e;.b:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L400090.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L400096.  v0:= temp @kind object;
  #L400098.  if v0 != 0 then goto L4000a6;
  #L40009c.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L4000a2.  v1:= temp @kind object;
  #L4000a4.  return v1 @kind object;
  #L4000a6.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L4000ac.  v1:= temp @kind object;
  #L4000ae.  return v1 @kind object;
}
procedure `boolean` `d`(`v2.e` v2 @kind this) @signature `Lv2/e;.d:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L400064.  v0:= v2.`v2.e.f` @type ^`int`;
  #L400068.  v1:= v2.`v2.e.e` @type ^`java.util.List` @kind object;
  #L40006c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L400072.  v1:= temp;
  #L400074.  if v0 >= v1 then goto L40007c;
  #L400078.  v0:= 1I;
  #L40007a.  goto L40007e;
  #L40007c.  v0:= 0I;
  #L40007e.  return v0;
}
procedure `java.net.Proxy` `f`(`v2.e` v3 @kind this) @signature `Lv2/e;.f:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4000c0.  call temp:= `d`(v3) @signature `Lv2/e;.d:()Z` @kind direct;
  #L4000c6.  v0:= temp;
  #L4000c8.  if v0 == 0 then goto L4000f0;
  #L4000cc.  v0:= v3.`v2.e.e` @type ^`java.util.List` @kind object;
  #L4000d0.  v1:= v3.`v2.e.f` @type ^`int`;
  #L4000d4.  v2:= v1 + 1;
  #L4000d8.  v3.`v2.e.f` @type ^`int` := v2;
  #L4000dc.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4000e2.  v0:= temp @kind object;
  #L4000e4.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L4000e8.  call `g`(v3, v0) @signature `Lv2/e;.g:(Ljava/net/Proxy;)V` @kind direct;
  #L4000ee.  return v0 @kind object;
  #L4000f0.  v0:= new `java.net.SocketException`;
  #L4000f4.  v1:= new `java.lang.StringBuilder`;
  #L4000f8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4000fe.  v2:= "No route to " @kind object;
  #L400102.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L400108.  v2:= v3.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L40010c.  call temp:= `l`(v2) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L400112.  v2:= temp @kind object;
  #L400114.  call temp:= `l`(v2) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L40011a.  v2:= temp @kind object;
  #L40011c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L400122.  v2:= "; exhausted proxy configurations: " @kind object;
  #L400126.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40012c.  v2:= v3.`v2.e.e` @type ^`java.util.List` @kind object;
  #L400130.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L400136.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40013c.  v1:= temp @kind object;
  #L40013e.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L400144.  throw v0;
}
procedure `void` `g`(`v2.e` v6 @kind this, `java.net.Proxy` v7 @kind object) @signature `Lv2/e;.g:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L400310.  v0:= new `java.util.ArrayList`;
  #L400314.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40031a.  v6.`v2.e.g` @type ^`java.util.List` := v0 @kind object;
  #L40031e.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L400324.  v0:= temp @kind object;
  #L400326.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L40032a.  if v0 == v1 then goto L40039c;
  #L40032e.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L400334.  v0:= temp @kind object;
  #L400336.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L40033a.  if v0 != v1 then goto L400340;
  #L40033e.  goto L40039c;
  #L400340.  call temp:= `address`(v7) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L400346.  v0:= temp @kind object;
  #L400348.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L40034c.  if v1 == 0 then goto L400366;
  #L400350.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L400354.  call temp:= `b`(v0) @signature `Lv2/e;.b:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L40035a.  v1:= temp @kind object;
  #L40035c.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L400362.  v0:= temp;
  #L400364.  goto L4003c4;
  #L400366.  v7:= new `java.lang.IllegalArgumentException`;
  #L40036a.  v1:= new `java.lang.StringBuilder`;
  #L40036e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L400374.  v2:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L400378.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40037e.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L400384.  v0:= temp @kind object;
  #L400386.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40038c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L400392.  v0:= temp @kind object;
  #L400394.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40039a.  throw v7;
  #L40039c.  v0:= v6.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L4003a0.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L4003a6.  v0:= temp @kind object;
  #L4003a8.  call temp:= `l`(v0) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L4003ae.  v1:= temp @kind object;
  #L4003b0.  v0:= v6.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L4003b4.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L4003ba.  v0:= temp @kind object;
  #L4003bc.  call temp:= `x`(v0) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L4003c2.  v0:= temp;
  #L4003c4.  v2:= 1I;
  #L4003c6.  if v0 < v2 then goto L4004aa;
  #L4003ca.  v2:= 65535I;
  #L4003d0.  if v0 > v2 then goto L4004aa;
  #L4003d4.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L4003da.  v7:= temp @kind object;
  #L4003dc.  v2:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L4003e0.  if v7 != v2 then goto L4003f8;
  #L4003e4.  v7:= v6.`v2.e.g` @type ^`java.util.List` @kind object;
  #L4003e8.  call temp:= `createUnresolved`(v1, v0) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L4003ee.  v0:= temp @kind object;
  #L4003f0.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4003f6.  goto L400468;
  #L4003f8.  v7:= v6.`v2.e.d` @type ^`okhttp3.o` @kind object;
  #L4003fc.  v2:= v6.`v2.e.c` @type ^`okhttp3.d` @kind object;
  #L400400.  call `j`(v7, v2, v1) @signature `Lokhttp3/o;.j:(Lokhttp3/d;Ljava/lang/String;)V` @kind virtual;
  #L400406.  v7:= v6.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L40040a.  call temp:= `c`(v7) @signature `Lokhttp3/a;.c:()Lokhttp3/n;` @kind virtual;
  #L400410.  v7:= temp @kind object;
  #L400412.  call temp:= `a`(v7, v1) @signature `Lokhttp3/n;.a:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L400418.  v7:= temp @kind object;
  #L40041a.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L400420.  v2:= temp;
  #L400422.  if v2 != 0 then goto L40046a;
  #L400426.  v2:= v6.`v2.e.d` @type ^`okhttp3.o` @kind object;
  #L40042a.  v3:= v6.`v2.e.c` @type ^`okhttp3.d` @kind object;
  #L40042e.  call `i`(v2, v3, v1, v7) @signature `Lokhttp3/o;.i:(Lokhttp3/d;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L400434.  v1:= 0I;
  #L400436.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40043c.  v2:= temp;
  #L40043e.  if v1 >= v2 then goto L400468;
  #L400442.  call temp:= `get`(v7, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400448.  v3:= temp @kind object;
  #L40044a.  v3:= (`java.net.InetAddress`) v3 @kind object;
  #L40044e.  v4:= v6.`v2.e.g` @type ^`java.util.List` @kind object;
  #L400452.  v5:= new `java.net.InetSocketAddress`;
  #L400456.  call `<init>`(v5, v3, v0) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L40045c.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L400462.  v1:= v1 + 1;
  #L400466.  goto L40043e;
  #L400468.  return @kind void;
  #L40046a.  v7:= new `java.net.UnknownHostException`;
  #L40046e.  v0:= new `java.lang.StringBuilder`;
  #L400472.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L400478.  v2:= v6.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L40047c.  call temp:= `c`(v2) @signature `Lokhttp3/a;.c:()Lokhttp3/n;` @kind virtual;
  #L400482.  v2:= temp @kind object;
  #L400484.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40048a.  v2:= " returned no addresses for " @kind object;
  #L40048e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L400494.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40049a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4004a0.  v0:= temp @kind object;
  #L4004a2.  call `<init>`(v7, v0) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4004a8.  throw v7;
  #L4004aa.  v7:= new `java.net.SocketException`;
  #L4004ae.  v2:= new `java.lang.StringBuilder`;
  #L4004b2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4004b8.  v3:= "No route to " @kind object;
  #L4004bc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4004c2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4004c8.  v1:= ":" @kind object;
  #L4004cc.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4004d2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4004d8.  v0:= "; port is out of range" @kind object;
  #L4004dc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4004e2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4004e8.  v0:= temp @kind object;
  #L4004ea.  call `<init>`(v7, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4004f0.  throw v7;
}
procedure `void` `h`(`v2.e` v1 @kind this, `okhttp3.r` v2 @kind object, `java.net.Proxy` v3 @kind object) @signature `Lv2/e;.h:(Lokhttp3/r;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L400504.  v0:= 0I;
  #L400506.  if v3 == 0 then goto L400518;
  #L40050a.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L400510.  v2:= temp @kind object;
  #L400512.  v1.`v2.e.e` @type ^`java.util.List` := v2 @kind object;
  #L400516.  goto L400568;
  #L400518.  v3:= v1.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L40051c.  call temp:= `i`(v3) @signature `Lokhttp3/a;.i:()Ljava/net/ProxySelector;` @kind virtual;
  #L400522.  v3:= temp @kind object;
  #L400524.  call temp:= `D`(v2) @signature `Lokhttp3/r;.D:()Ljava/net/URI;` @kind virtual;
  #L40052a.  v2:= temp @kind object;
  #L40052c.  call temp:= `select`(v3, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L400532.  v2:= temp @kind object;
  #L400534.  if v2 == 0 then goto L40054e;
  #L400538.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L40053e.  v3:= temp;
  #L400540.  if v3 != 0 then goto L40054e;
  #L400544.  call temp:= `t`(v2) @signature `Lt2/c;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L40054a.  v2:= temp @kind object;
  #L40054c.  goto L400564;
  #L40054e.  v2:= 1I;
  #L400550.  v2:= new `java.net.Proxy`[v2];
  #L400554.  v3:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L400558.  v2[v0]:= v3 @kind object;
  #L40055c.  call temp:= `u`(v2) @signature `Lt2/c;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L400562.  v2:= temp @kind object;
  #L400564.  v1.`v2.e.e` @type ^`java.util.List` := v2 @kind object;
  #L400568.  v1.`v2.e.f` @type ^`int` := v0;
  #L40056c.  return @kind void;
}
procedure `void` `a`(`v2.e` v3 @kind this, `okhttp3.a0` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lv2/e;.a:(Lokhttp3/a0;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L400294.  call temp:= `b`(v4) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L40029a.  v0:= temp @kind object;
  #L40029c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L4002a2.  v0:= temp @kind object;
  #L4002a4.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L4002a8.  if v0 == v1 then goto L4002f2;
  #L4002ac.  v0:= v3.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L4002b0.  call temp:= `i`(v0) @signature `Lokhttp3/a;.i:()Ljava/net/ProxySelector;` @kind virtual;
  #L4002b6.  v0:= temp @kind object;
  #L4002b8.  if v0 == 0 then goto L4002f2;
  #L4002bc.  v0:= v3.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L4002c0.  call temp:= `i`(v0) @signature `Lokhttp3/a;.i:()Ljava/net/ProxySelector;` @kind virtual;
  #L4002c6.  v0:= temp @kind object;
  #L4002c8.  v1:= v3.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L4002cc.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L4002d2.  v1:= temp @kind object;
  #L4002d4.  call temp:= `D`(v1) @signature `Lokhttp3/r;.D:()Ljava/net/URI;` @kind virtual;
  #L4002da.  v1:= temp @kind object;
  #L4002dc.  call temp:= `b`(v4) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L4002e2.  v2:= temp @kind object;
  #L4002e4.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L4002ea.  v2:= temp @kind object;
  #L4002ec.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L4002f2.  v5:= v3.`v2.e.b` @type ^`v2.d` @kind object;
  #L4002f6.  call `b`(v5, v4) @signature `Lv2/d;.b:(Lokhttp3/a0;)V` @kind virtual;
  #L4002fc.  return @kind void;
}
procedure `boolean` `c`(`v2.e` v1 @kind this) @signature `Lv2/e;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40002c.  call temp:= `d`(v1) @signature `Lv2/e;.d:()Z` @kind direct;
  #L400032.  v0:= temp;
  #L400034.  if v0 != 0 then goto L40004e;
  #L400038.  v0:= v1.`v2.e.h` @type ^`java.util.List` @kind object;
  #L40003c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L400042.  v0:= temp;
  #L400044.  if v0 != 0 then goto L40004a;
  #L400048.  goto L40004e;
  #L40004a.  v0:= 0I;
  #L40004c.  goto L400050;
  #L40004e.  v0:= 1I;
  #L400050.  return v0;
}
procedure `v2.e$a` `e`(`v2.e` v7 @kind this) @signature `Lv2/e;.e:()Lv2/e$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L400158.  call temp:= `c`(v7) @signature `Lv2/e;.c:()Z` @kind virtual;
  #L40015e.  v0:= temp;
  #L400160.  if v0 == 0 then goto L400212;
  #L400164.  v0:= new `java.util.ArrayList`;
  #L400168.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40016e.  call temp:= `d`(v7) @signature `Lv2/e;.d:()Z` @kind direct;
  #L400174.  v1:= temp;
  #L400176.  if v1 == 0 then goto L4001e6;
  #L40017a.  call temp:= `f`(v7) @signature `Lv2/e;.f:()Ljava/net/Proxy;` @kind direct;
  #L400180.  v1:= temp @kind object;
  #L400182.  v2:= 0I;
  #L400184.  v3:= v7.`v2.e.g` @type ^`java.util.List` @kind object;
  #L400188.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40018e.  v3:= temp;
  #L400190.  if v2 >= v3 then goto L4001da;
  #L400194.  v4:= new `okhttp3.a0`;
  #L400198.  v5:= v7.`v2.e.a` @type ^`okhttp3.a` @kind object;
  #L40019c.  v6:= v7.`v2.e.g` @type ^`java.util.List` @kind object;
  #L4001a0.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4001a6.  v6:= temp @kind object;
  #L4001a8.  v6:= (`java.net.InetSocketAddress`) v6 @kind object;
  #L4001ac.  call `<init>`(v4, v5, v1, v6) @signature `Lokhttp3/a0;.<init>:(Lokhttp3/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L4001b2.  v5:= v7.`v2.e.b` @type ^`v2.d` @kind object;
  #L4001b6.  call temp:= `c`(v5, v4) @signature `Lv2/d;.c:(Lokhttp3/a0;)Z` @kind virtual;
  #L4001bc.  v5:= temp;
  #L4001be.  if v5 == 0 then goto L4001ce;
  #L4001c2.  v5:= v7.`v2.e.h` @type ^`java.util.List` @kind object;
  #L4001c6.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4001cc.  goto L4001d4;
  #L4001ce.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4001d4.  v2:= v2 + 1;
  #L4001d8.  goto L400190;
  #L4001da.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4001e0.  v1:= temp;
  #L4001e2.  if v1 != 0 then goto L40016e;
  #L4001e6.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4001ec.  v1:= temp;
  #L4001ee.  if v1 == 0 then goto L400206;
  #L4001f2.  v1:= v7.`v2.e.h` @type ^`java.util.List` @kind object;
  #L4001f6.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4001fc.  v1:= v7.`v2.e.h` @type ^`java.util.List` @kind object;
  #L400200.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L400206.  v1:= new `v2.e$a`;
  #L40020a.  call `<init>`(v1, v0) @signature `Lv2/e$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L400210.  return v1 @kind object;
  #L400212.  v0:= new `java.util.NoSuchElementException`;
  #L400216.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L40021c.  throw v0;
}
