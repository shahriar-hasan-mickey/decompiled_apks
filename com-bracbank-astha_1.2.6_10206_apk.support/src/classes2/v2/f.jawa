record `v2.f` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.a` `v2.f.a` @AccessFlag PUBLIC_FINAL;
  `v2.e$a` `v2.f.b` @AccessFlag PRIVATE;
  `okhttp3.a0` `v2.f.c` @AccessFlag PRIVATE;
  `okhttp3.i` `v2.f.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.d` `v2.f.e` @AccessFlag PUBLIC_FINAL;
  `okhttp3.o` `v2.f.f` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `v2.f.g` @AccessFlag PRIVATE_FINAL;
  `v2.e` `v2.f.h` @AccessFlag PRIVATE_FINAL;
  `int` `v2.f.i` @AccessFlag PRIVATE;
  `v2.c` `v2.f.j` @AccessFlag PRIVATE;
  `boolean` `v2.f.k` @AccessFlag PRIVATE;
  `boolean` `v2.f.l` @AccessFlag PRIVATE;
  `boolean` `v2.f.m` @AccessFlag PRIVATE;
  `w2.c` `v2.f.n` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lv2/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L400ad8.  return @kind void;
}
procedure `void` `<init>`(`v2.f` v1 @kind this, `okhttp3.i` v2 @kind object, `okhttp3.a` v3 @kind object, `okhttp3.d` v4 @kind object, `okhttp3.o` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lv2/f;.<init>:(Lokhttp3/i;Lokhttp3/a;Lokhttp3/d;Lokhttp3/o;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L400aec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L400af2.  v1.`v2.f.d` @type ^`okhttp3.i` := v2 @kind object;
  #L400af6.  v1.`v2.f.a` @type ^`okhttp3.a` := v3 @kind object;
  #L400afa.  v1.`v2.f.e` @type ^`okhttp3.d` := v4 @kind object;
  #L400afe.  v1.`v2.f.f` @type ^`okhttp3.o` := v5 @kind object;
  #L400b02.  v2:= new `v2.e`;
  #L400b06.  call temp:= `p`(v1) @signature `Lv2/f;.p:()Lv2/d;` @kind direct;
  #L400b0c.  v0:= temp @kind object;
  #L400b0e.  call `<init>`(v2, v3, v0, v4, v5) @signature `Lv2/e;.<init>:(Lokhttp3/a;Lv2/d;Lokhttp3/d;Lokhttp3/o;)V` @kind direct;
  #L400b14.  v1.`v2.f.h` @type ^`v2.e` := v2 @kind object;
  #L400b18.  v1.`v2.f.g` @type ^`java.lang.Object` := v6 @kind object;
  #L400b1c.  return @kind void;
}
procedure `java.net.Socket` `e`(`v2.f` v1 @kind this, `boolean` v2 , `boolean` v3 , `boolean` v4 ) @signature `Lv2/f;.e:(ZZZ)Ljava/net/Socket;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L400618.  v0:= 0I;
  #L40061a.  if v4 == 0 then goto L400622;
  #L40061e.  v1.`v2.f.n` @type ^`w2.c` := v0 @kind object;
  #L400622.  v4:= 1I;
  #L400624.  if v3 == 0 then goto L40062c;
  #L400628.  v1.`v2.f.l` @type ^`boolean` := v4 @kind boolean;
  #L40062c.  v3:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L400630.  if v3 == 0 then goto L4006ac;
  #L400634.  if v2 == 0 then goto L40063c;
  #L400638.  v3.`v2.c.k` @type ^`boolean` := v4 @kind boolean;
  #L40063c.  v2:= v1.`v2.f.n` @type ^`w2.c` @kind object;
  #L400640.  if v2 != 0 then goto L4006ac;
  #L400644.  v2:= v1.`v2.f.l` @type ^`boolean` @kind boolean;
  #L400648.  if v2 != 0 then goto L400654;
  #L40064c.  v2:= v3.`v2.c.k` @type ^`boolean` @kind boolean;
  #L400650.  if v2 == 0 then goto L4006ac;
  #L400654.  call `l`(v1, v3) @signature `Lv2/f;.l:(Lv2/c;)V` @kind direct;
  #L40065a.  v2:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L40065e.  v2:= v2.`v2.c.n` @type ^`java.util.List` @kind object;
  #L400662.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L400668.  v2:= temp;
  #L40066a.  if v2 == 0 then goto L4006a4;
  #L40066e.  v2:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L400672.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L400678.  v3:= temp @kind wide;
  #L40067a.  v2.`v2.c.o` @type ^`long` := v3 @kind wide;
  #L40067e.  v2:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L400682.  v3:= v1.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400686.  v4:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L40068a.  call temp:= `e`(v2, v3, v4) @signature `Lt2/a;.e:(Lokhttp3/i;Lv2/c;)Z` @kind virtual;
  #L400690.  v2:= temp;
  #L400692.  if v2 == 0 then goto L4006a4;
  #L400696.  v2:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L40069a.  call temp:= `q`(v2) @signature `Lv2/c;.q:()Ljava/net/Socket;` @kind virtual;
  #L4006a0.  v2:= temp @kind object;
  #L4006a2.  goto L4006a6;
  #L4006a4.  v2:= v0 @kind object;
  #L4006a6.  v1.`v2.f.j` @type ^`v2.c` := v0 @kind object;
  #L4006aa.  v0:= v2 @kind object;
  #L4006ac.  return v0 @kind object;
}
procedure `v2.c` `f`(`v2.f` v18 @kind this, `int` v19 , `int` v20 , `int` v21 , `int` v22 , `boolean` v23 ) @signature `Lv2/f;.f:(IIIIZ)Lv2/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L4007a0.  v1:= v18 @kind object;
  #L4007a4.  v2:= v1.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L4007a8.  @monitorenter v2
  #L4007aa.  v0:= v1.`v2.f.l` @type ^`boolean` @kind boolean;
  #L4007ae.  if v0 != 0 then goto L4009f6;
  #L4007b2.  v0:= v1.`v2.f.n` @type ^`w2.c` @kind object;
  #L4007b6.  if v0 != 0 then goto L4009e6;
  #L4007ba.  v0:= v1.`v2.f.m` @type ^`boolean` @kind boolean;
  #L4007be.  if v0 != 0 then goto L4009d6;
  #L4007c2.  v0:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L4007c6.  call temp:= `n`(v18) @signature `Lv2/f;.n:()Ljava/net/Socket;` @kind direct;
  #L4007cc.  v3:= temp @kind object;
  #L4007ce.  v4:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L4007d2.  v5:= 0I;
  #L4007d4.  if v4 == 0 then goto L4007dc;
  #L4007d8.  v0:= v5 @kind object;
  #L4007da.  goto L4007de;
  #L4007dc.  v4:= v5 @kind object;
  #L4007de.  v6:= v1.`v2.f.k` @type ^`boolean` @kind boolean;
  #L4007e2.  if v6 != 0 then goto L4007e8;
  #L4007e6.  v0:= v5 @kind object;
  #L4007e8.  v6:= 1I;
  #L4007ea.  v7:= 0I;
  #L4007ec.  if v4 != 0 then goto L400818;
  #L4007f0.  v8:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L4007f4.  v9:= v1.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L4007f8.  v10:= v1.`v2.f.a` @type ^`okhttp3.a` @kind object;
  #L4007fc.  call temp:= `h`(v8, v9, v10, v1, v5) @signature `Lt2/a;.h:(Lokhttp3/i;Lokhttp3/a;Lv2/f;Lokhttp3/a0;)Lv2/c;` @kind virtual;
  #L400802.  v8:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L400806.  if v8 == 0 then goto L400812;
  #L40080a.  v4:= v8 @kind object;
  #L40080c.  v9:= 1I;
  #L40080e.  v8:= v5 @kind object;
  #L400810.  goto L40081c;
  #L400812.  v8:= v1.`v2.f.c` @type ^`okhttp3.a0` @kind object;
  #L400816.  goto L40081a;
  #L400818.  v8:= v5 @kind object;
  #L40081a.  v9:= 0I;
  #L40081c.  @monitorexit v2
  #L40081e.  call `h`(v3) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L400824.  if v0 == 0 then goto L400836;
  #L400828.  v2:= v1.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L40082c.  v3:= v1.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400830.  call `h`(v2, v3, v0) @signature `Lokhttp3/o;.h:(Lokhttp3/d;Lokhttp3/h;)V` @kind virtual;
  #L400836.  if v9 == 0 then goto L400848;
  #L40083a.  v0:= v1.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L40083e.  v2:= v1.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400842.  call `g`(v0, v2, v4) @signature `Lokhttp3/o;.g:(Lokhttp3/d;Lokhttp3/h;)V` @kind virtual;
  #L400848.  if v4 == 0 then goto L40084e;
  #L40084c.  return v4 @kind object;
  #L40084e.  if v8 != 0 then goto L40087a;
  #L400852.  v0:= v1.`v2.f.b` @type ^`v2.e$a` @kind object;
  #L400856.  if v0 == 0 then goto L400866;
  #L40085a.  call temp:= `b`(v0) @signature `Lv2/e$a;.b:()Z` @kind virtual;
  #L400860.  v0:= temp;
  #L400862.  if v0 != 0 then goto L40087a;
  #L400866.  v0:= v1.`v2.f.h` @type ^`v2.e` @kind object;
  #L40086a.  call temp:= `e`(v0) @signature `Lv2/e;.e:()Lv2/e$a;` @kind virtual;
  #L400870.  v0:= temp @kind object;
  #L400872.  v1.`v2.f.b` @type ^`v2.e$a` := v0 @kind object;
  #L400876.  v0:= 1I;
  #L400878.  goto L40087c;
  #L40087a.  v0:= 0I;
  #L40087c.  v3:= v1.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400880.  @monitorenter v3
  #L400882.  v2:= v1.`v2.f.m` @type ^`boolean` @kind boolean;
  #L400886.  if v2 != 0 then goto L4009c0;
  #L40088a.  if v0 == 0 then goto L4008de;
  #L40088e.  v0:= v1.`v2.f.b` @type ^`v2.e$a` @kind object;
  #L400892.  call temp:= `a`(v0) @signature `Lv2/e$a;.a:()Ljava/util/List;` @kind virtual;
  #L400898.  v0:= temp @kind object;
  #L40089a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4008a0.  v2:= temp;
  #L4008a2.  v10:= 0I;
  #L4008a4.  if v10 >= v2 then goto L4008de;
  #L4008a8.  call temp:= `get`(v0, v10) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4008ae.  v11:= temp @kind object;
  #L4008b0.  v11:= (`okhttp3.a0`) v11 @kind object;
  #L4008b4.  v12:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L4008b8.  v13:= v1.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L4008bc.  v14:= v1.`v2.f.a` @type ^`okhttp3.a` @kind object;
  #L4008c0.  call temp:= `h`(v12, v13, v14, v1, v11) @signature `Lt2/a;.h:(Lokhttp3/i;Lokhttp3/a;Lv2/f;Lokhttp3/a0;)Lv2/c;` @kind virtual;
  #L4008c6.  v12:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L4008ca.  if v12 == 0 then goto L4008d8;
  #L4008ce.  v1.`v2.f.c` @type ^`okhttp3.a0` := v11 @kind object;
  #L4008d2.  v4:= v12 @kind object;
  #L4008d4.  v9:= 1I;
  #L4008d6.  goto L4008de;
  #L4008d8.  v10:= v10 + 1;
  #L4008dc.  goto L4008a4;
  #L4008de.  if v9 != 0 then goto L40090e;
  #L4008e2.  if v8 != 0 then goto L4008f2;
  #L4008e6.  v0:= v1.`v2.f.b` @type ^`v2.e$a` @kind object;
  #L4008ea.  call temp:= `c`(v0) @signature `Lv2/e$a;.c:()Lokhttp3/a0;` @kind virtual;
  #L4008f0.  v8:= temp @kind object;
  #L4008f2.  v1.`v2.f.c` @type ^`okhttp3.a0` := v8 @kind object;
  #L4008f6.  v1.`v2.f.i` @type ^`int` := v7;
  #L4008fa.  v4:= new `v2.c`;
  #L4008fe.  v0:= v1.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400902.  call `<init>`(v4, v0, v8) @signature `Lv2/c;.<init>:(Lokhttp3/i;Lokhttp3/a0;)V` @kind direct;
  #L400908.  call `a`(v1, v4, v7) @signature `Lv2/f;.a:(Lv2/c;Z)V` @kind virtual;
  #L40090e.  @monitorexit v3
  #L400910.  if v9 == 0 then goto L400924;
  #L400914.  v0:= v1.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L400918.  v2:= v1.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L40091c.  call `g`(v0, v2, v4) @signature `Lokhttp3/o;.g:(Lokhttp3/d;Lokhttp3/h;)V` @kind virtual;
  #L400922.  return v4 @kind object;
  #L400924.  v0:= v1.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400928.  v2:= v1.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L40092c.  v10:= v4 @kind object;
  #L40092e.  v11:= v19;
  #L400932.  v12:= v20;
  #L400936.  v13:= v21;
  #L40093a.  v14:= v22;
  #L40093e.  v15:= v23;
  #L400942.  v16:= v0 @kind object;
  #L400946.  v17:= v2 @kind object;
  #L40094a.  call `d`(v10, v11, v12, v13, v14, v15, v16, v17) @signature `Lv2/c;.d:(IIIIZLokhttp3/d;Lokhttp3/o;)V` @kind virtual;
  #L400950.  call temp:= `p`(v18) @signature `Lv2/f;.p:()Lv2/d;` @kind direct;
  #L400956.  v0:= temp @kind object;
  #L400958.  call temp:= `p`(v4) @signature `Lv2/c;.p:()Lokhttp3/a0;` @kind virtual;
  #L40095e.  v2:= temp @kind object;
  #L400960.  call `a`(v0, v2) @signature `Lv2/d;.a:(Lokhttp3/a0;)V` @kind virtual;
  #L400966.  v2:= v1.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L40096a.  @monitorenter v2
  #L40096c.  v1.`v2.f.k` @type ^`boolean` := v6 @kind boolean;
  #L400970.  v0:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L400974.  v3:= v1.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400978.  call `i`(v0, v3, v4) @signature `Lt2/a;.i:(Lokhttp3/i;Lv2/c;)V` @kind virtual;
  #L40097e.  call temp:= `n`(v4) @signature `Lv2/c;.n:()Z` @kind virtual;
  #L400984.  v0:= temp;
  #L400986.  if v0 == 0 then goto L4009a2;
  #L40098a.  v0:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L40098e.  v3:= v1.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400992.  v4:= v1.`v2.f.a` @type ^`okhttp3.a` @kind object;
  #L400996.  call temp:= `f`(v0, v3, v4, v1) @signature `Lt2/a;.f:(Lokhttp3/i;Lokhttp3/a;Lv2/f;)Ljava/net/Socket;` @kind virtual;
  #L40099c.  v5:= temp @kind object;
  #L40099e.  v4:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L4009a2.  @monitorexit v2
  #L4009a4.  call `h`(v5) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L4009aa.  v0:= v1.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L4009ae.  v2:= v1.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L4009b2.  call `g`(v0, v2, v4) @signature `Lokhttp3/o;.g:(Lokhttp3/d;Lokhttp3/h;)V` @kind virtual;
  #L4009b8.  return v4 @kind object;
  #L4009ba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4009bc.  @monitorexit v2
  #L4009be.  throw v0;
  #L4009c0.  v0:= new `java.io.IOException`;
  #L4009c4.  v2:= "Canceled" @kind object;
  #L4009c8.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4009ce.  throw v0;
  #L4009d0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4009d2.  @monitorexit v3
  #L4009d4.  throw v0;
  #L4009d6.  v0:= new `java.io.IOException`;
  #L4009da.  v3:= "Canceled" @kind object;
  #L4009de.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4009e4.  throw v0;
  #L4009e6.  v0:= new `java.lang.IllegalStateException`;
  #L4009ea.  v3:= "codec != null" @kind object;
  #L4009ee.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4009f4.  throw v0;
  #L4009f6.  v0:= new `java.lang.IllegalStateException`;
  #L4009fa.  v3:= "released" @kind object;
  #L4009fe.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L400a04.  throw v0;
  #L400a06.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400a08.  @monitorexit v2
  #L400a0a.  throw v0;
  catch `java.lang.Throwable` @[L4007aa..L40081e] goto L400a06;
  catch `java.lang.Throwable` @[L400882..L400910] goto L4009d0;
  catch `java.lang.Throwable` @[L40096c..L4009a4] goto L4009ba;
  catch `java.lang.Throwable` @[L4009bc..L4009be] goto L4009ba;
  catch `java.lang.Throwable` @[L4009c0..L4009d4] goto L4009d0;
  catch `java.lang.Throwable` @[L4009d6..L400a0a] goto L400a06;
}
procedure `v2.c` `g`(`v2.f` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `boolean` v8 , `boolean` v9 ) @signature `Lv2/f;.g:(IIIIZZ)Lv2/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L400a58.  call temp:= `f`(v3, v4, v5, v6, v7, v8) @signature `Lv2/f;.f:(IIIIZ)Lv2/c;` @kind direct;
  #L400a5e.  v0:= temp @kind object;
  #L400a60.  v1:= v3.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400a64.  @monitorenter v1
  #L400a66.  v2:= v0.`v2.c.l` @type ^`int`;
  #L400a6a.  if v2 != 0 then goto L400a72;
  #L400a6e.  @monitorexit v1
  #L400a70.  return v0 @kind object;
  #L400a72.  @monitorexit v1
  #L400a74.  call temp:= `m`(v0, v9) @signature `Lv2/c;.m:(Z)Z` @kind virtual;
  #L400a7a.  v1:= temp;
  #L400a7c.  if v1 != 0 then goto L400a88;
  #L400a80.  call `j`(v3) @signature `Lv2/f;.j:()V` @kind virtual;
  #L400a86.  goto L400a58;
  #L400a88.  return v0 @kind object;
  #L400a8a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400a8c.  @monitorexit v1
  #L400a8e.  throw v4;
  catch `java.lang.Throwable` @[L400a66..L400a74] goto L400a8a;
  catch `java.lang.Throwable` @[L400a8c..L400a8e] goto L400a8a;
}
procedure `void` `l`(`v2.f` v3 @kind this, `v2.c` v4 @kind object) @signature `Lv2/f;.l:(Lv2/c;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L400cbc.  v0:= v4.`v2.c.n` @type ^`java.util.List` @kind object;
  #L400cc0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L400cc6.  v0:= temp;
  #L400cc8.  v1:= 0I;
  #L400cca.  if v1 >= v0 then goto L400cfc;
  #L400cce.  v2:= v4.`v2.c.n` @type ^`java.util.List` @kind object;
  #L400cd2.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400cd8.  v2:= temp @kind object;
  #L400cda.  v2:= (`java.lang.ref.Reference`) v2 @kind object;
  #L400cde.  call temp:= `get`(v2) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L400ce4.  v2:= temp @kind object;
  #L400ce6.  if v2 != v3 then goto L400cf6;
  #L400cea.  v4:= v4.`v2.c.n` @type ^`java.util.List` @kind object;
  #L400cee.  call temp:= `remove`(v4, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L400cf4.  return @kind void;
  #L400cf6.  v1:= v1 + 1;
  #L400cfa.  goto L400cca;
  #L400cfc.  v4:= new `java.lang.IllegalStateException`;
  #L400d00.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L400d06.  throw v4;
}
procedure `java.net.Socket` `n`(`v2.f` v2 @kind this) @signature `Lv2/f;.n:()Ljava/net/Socket;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L400728.  v0:= v2.`v2.f.j` @type ^`v2.c` @kind object;
  #L40072c.  if v0 == 0 then goto L400746;
  #L400730.  v0:= v0.`v2.c.k` @type ^`boolean` @kind boolean;
  #L400734.  if v0 == 0 then goto L400746;
  #L400738.  v0:= 1I;
  #L40073a.  v1:= 0I;
  #L40073c.  call temp:= `e`(v2, v1, v1, v0) @signature `Lv2/f;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L400742.  v0:= temp @kind object;
  #L400744.  return v0 @kind object;
  #L400746.  v0:= 0I;
  #L400748.  return v0 @kind object;
}
procedure `v2.d` `p`(`v2.f` v2 @kind this) @signature `Lv2/f;.p:()Lv2/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L400ab4.  v0:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L400ab8.  v1:= v2.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400abc.  call temp:= `j`(v0, v1) @signature `Lt2/a;.j:(Lokhttp3/i;)Lv2/d;` @kind virtual;
  #L400ac2.  v0:= temp @kind object;
  #L400ac4.  return v0 @kind object;
}
procedure `void` `a`(`v2.f` v1 @kind this, `v2.c` v2 @kind object, `boolean` v3 ) @signature `Lv2/f;.a:(Lv2/c;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400b30.  v0:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L400b34.  if v0 != 0 then goto L400b5a;
  #L400b38.  v1.`v2.f.j` @type ^`v2.c` := v2 @kind object;
  #L400b3c.  v1.`v2.f.k` @type ^`boolean` := v3 @kind boolean;
  #L400b40.  v2:= v2.`v2.c.n` @type ^`java.util.List` @kind object;
  #L400b44.  v3:= new `v2.f$a`;
  #L400b48.  v0:= v1.`v2.f.g` @type ^`java.lang.Object` @kind object;
  #L400b4c.  call `<init>`(v3, v1, v0) @signature `Lv2/f$a;.<init>:(Lv2/f;Ljava/lang/Object;)V` @kind direct;
  #L400b52.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L400b58.  return @kind void;
  #L400b5a.  v2:= new `java.lang.IllegalStateException`;
  #L400b5e.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L400b64.  throw v2;
}
procedure `void` `b`(`v2.f` v3 @kind this) @signature `Lv2/f;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L400b78.  v0:= v3.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400b7c.  @monitorenter v0
  #L400b7e.  v1:= 1I;
  #L400b80.  v3.`v2.f.m` @type ^`boolean` := v1 @kind boolean;
  #L400b84.  v1:= v3.`v2.f.n` @type ^`w2.c` @kind object;
  #L400b88.  v2:= v3.`v2.f.j` @type ^`v2.c` @kind object;
  #L400b8c.  @monitorexit v0
  #L400b8e.  if v1 == 0 then goto L400b9a;
  #L400b92.  call `cancel`(v1) @signature `Lw2/c;.cancel:()V` @kind interface;
  #L400b98.  goto L400ba4;
  #L400b9a.  if v2 == 0 then goto L400ba4;
  #L400b9e.  call `c`(v2) @signature `Lv2/c;.c:()V` @kind virtual;
  #L400ba4.  return @kind void;
  #L400ba6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400ba8.  @monitorexit v0
  #L400baa.  throw v1;
  catch `java.lang.Throwable` @[L400b80..L400b8e] goto L400ba6;
  catch `java.lang.Throwable` @[L400ba8..L400baa] goto L400ba6;
}
procedure `w2.c` `c`(`v2.f` v2 @kind this) @signature `Lv2/f;.c:()Lw2/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L400f2c.  v0:= v2.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400f30.  @monitorenter v0
  #L400f32.  v1:= v2.`v2.f.n` @type ^`w2.c` @kind object;
  #L400f36.  @monitorexit v0
  #L400f38.  return v1 @kind object;
  #L400f3a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400f3c.  @monitorexit v0
  #L400f3e.  throw v1;
  catch `java.lang.Throwable` @[L400f32..L400f3e] goto L400f3a;
}
procedure `v2.c` `d`(`v2.f` v1 @kind this) @signature `Lv2/f;.d:()Lv2/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400774.  @monitorenter v1
  #L400776.  v0:= v1.`v2.f.j` @type ^`v2.c` @kind object;
  #L40077a.  @monitorexit v1
  #L40077c.  return v0 @kind object;
  #L40077e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400780.  @monitorexit v1
  #L400782.  throw v0;
  catch `java.lang.Throwable` @[L400776..L40077a] goto L40077e;
}
procedure `boolean` `h`(`v2.f` v1 @kind this) @signature `Lv2/f;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40059c.  v0:= v1.`v2.f.c` @type ^`okhttp3.a0` @kind object;
  #L4005a0.  if v0 != 0 then goto L4005ce;
  #L4005a4.  v0:= v1.`v2.f.b` @type ^`v2.e$a` @kind object;
  #L4005a8.  if v0 == 0 then goto L4005b8;
  #L4005ac.  call temp:= `b`(v0) @signature `Lv2/e$a;.b:()Z` @kind virtual;
  #L4005b2.  v0:= temp;
  #L4005b4.  if v0 != 0 then goto L4005ce;
  #L4005b8.  v0:= v1.`v2.f.h` @type ^`v2.e` @kind object;
  #L4005bc.  call temp:= `c`(v0) @signature `Lv2/e;.c:()Z` @kind virtual;
  #L4005c2.  v0:= temp;
  #L4005c4.  if v0 == 0 then goto L4005ca;
  #L4005c8.  goto L4005ce;
  #L4005ca.  v0:= 0I;
  #L4005cc.  goto L4005d0;
  #L4005ce.  v0:= 1I;
  #L4005d0.  return v0;
}
procedure `w2.c` `i`(`v2.f` v7 @kind this, `okhttp3.u` v8 @kind object, `okhttp3.s$a` v9 @kind object, `boolean` v10 ) @signature `Lv2/f;.i:(Lokhttp3/u;Lokhttp3/s$a;Z)Lw2/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L400f5c.  call temp:= `d`(v9) @signature `Lokhttp3/s$a;.d:()I` @kind interface;
  #L400f62.  v1:= temp;
  #L400f64.  call temp:= `a`(v9) @signature `Lokhttp3/s$a;.a:()I` @kind interface;
  #L400f6a.  v2:= temp;
  #L400f6c.  call temp:= `b`(v9) @signature `Lokhttp3/s$a;.b:()I` @kind interface;
  #L400f72.  v3:= temp;
  #L400f74.  call temp:= `v`(v8) @signature `Lokhttp3/u;.v:()I` @kind virtual;
  #L400f7a.  v4:= temp;
  #L400f7c.  call temp:= `B`(v8) @signature `Lokhttp3/u;.B:()Z` @kind virtual;
  #L400f82.  v5:= temp;
  #L400f84.  v0:= v7 @kind object;
  #L400f86.  v6:= v10;
  #L400f88.  call temp:= `g`(v0, v1, v2, v3, v4, v5, v6) @signature `Lv2/f;.g:(IIIIZZ)Lv2/c;` @kind direct;
  #L400f8e.  v10:= temp @kind object;
  #L400f90.  call temp:= `o`(v10, v8, v9, v7) @signature `Lv2/c;.o:(Lokhttp3/u;Lokhttp3/s$a;Lv2/f;)Lw2/c;` @kind virtual;
  #L400f96.  v8:= temp @kind object;
  #L400f98.  v9:= v7.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400f9c.  @monitorenter v9
  #L400f9e.  v7.`v2.f.n` @type ^`w2.c` := v8 @kind object;
  #L400fa2.  @monitorexit v9
  #L400fa4.  return v8 @kind object;
  #L400fa6.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400fa8.  @monitorexit v9
  #L400faa.  throw v8;
  #L400fac.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L400fae.  v9:= new `okhttp3.internal.connection.RouteException`;
  #L400fb2.  call `<init>`(v9, v8) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L400fb8.  throw v9;
  catch `java.io.IOException` @[L400f88..L400f9e] goto L400fac;
  catch `java.lang.Throwable` @[L400f9e..L400faa] goto L400fa6;
  catch `java.io.IOException` @[L400faa..L400fac] goto L400fac;
}
procedure `void` `j`(`v2.f` v4 @kind this) @signature `Lv2/f;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L400bd0.  v0:= v4.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400bd4.  @monitorenter v0
  #L400bd6.  v1:= v4.`v2.f.j` @type ^`v2.c` @kind object;
  #L400bda.  v2:= 1I;
  #L400bdc.  v3:= 0I;
  #L400bde.  call temp:= `e`(v4, v2, v3, v3) @signature `Lv2/f;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L400be4.  v2:= temp @kind object;
  #L400be6.  v3:= v4.`v2.f.j` @type ^`v2.c` @kind object;
  #L400bea.  if v3 == 0 then goto L400bf0;
  #L400bee.  v1:= 0I;
  #L400bf0.  @monitorexit v0
  #L400bf2.  call `h`(v2) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L400bf8.  if v1 == 0 then goto L400c0a;
  #L400bfc.  v0:= v4.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L400c00.  v2:= v4.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400c04.  call `h`(v0, v2, v1) @signature `Lokhttp3/o;.h:(Lokhttp3/d;Lokhttp3/h;)V` @kind virtual;
  #L400c0a.  return @kind void;
  #L400c0c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400c0e.  @monitorexit v0
  #L400c10.  throw v1;
  catch `java.lang.Throwable` @[L400bd6..L400bf2] goto L400c0c;
  catch `java.lang.Throwable` @[L400c0e..L400c10] goto L400c0c;
}
procedure `void` `k`(`v2.f` v5 @kind this) @signature `Lv2/f;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L400c38.  v0:= v5.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400c3c.  @monitorenter v0
  #L400c3e.  v1:= v5.`v2.f.j` @type ^`v2.c` @kind object;
  #L400c42.  v2:= 1I;
  #L400c44.  v3:= 0I;
  #L400c46.  call temp:= `e`(v5, v3, v2, v3) @signature `Lv2/f;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L400c4c.  v2:= temp @kind object;
  #L400c4e.  v3:= v5.`v2.f.j` @type ^`v2.c` @kind object;
  #L400c52.  v4:= 0I;
  #L400c54.  if v3 == 0 then goto L400c5a;
  #L400c58.  v1:= v4 @kind object;
  #L400c5a.  @monitorexit v0
  #L400c5c.  call `h`(v2) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L400c62.  if v1 == 0 then goto L400c90;
  #L400c66.  v0:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L400c6a.  v2:= v5.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400c6e.  call temp:= `k`(v0, v2, v4) @signature `Lt2/a;.k:(Lokhttp3/d;Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L400c74.  v0:= v5.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L400c78.  v2:= v5.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400c7c.  call `h`(v0, v2, v1) @signature `Lokhttp3/o;.h:(Lokhttp3/d;Lokhttp3/h;)V` @kind virtual;
  #L400c82.  v0:= v5.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L400c86.  v1:= v5.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400c8a.  call `a`(v0, v1) @signature `Lokhttp3/o;.a:(Lokhttp3/d;)V` @kind virtual;
  #L400c90.  return @kind void;
  #L400c92.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400c94.  @monitorexit v0
  #L400c96.  throw v1;
  catch `java.lang.Throwable` @[L400c3e..L400c5c] goto L400c92;
  catch `java.lang.Throwable` @[L400c94..L400c96] goto L400c92;
}
procedure `java.net.Socket` `m`(`v2.f` v3 @kind this, `v2.c` v4 @kind object) @signature `Lv2/f;.m:(Lv2/c;)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4006c0.  v0:= v3.`v2.f.n` @type ^`w2.c` @kind object;
  #L4006c4.  if v0 != 0 then goto L40070c;
  #L4006c8.  v0:= v3.`v2.f.j` @type ^`v2.c` @kind object;
  #L4006cc.  v0:= v0.`v2.c.n` @type ^`java.util.List` @kind object;
  #L4006d0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4006d6.  v0:= temp;
  #L4006d8.  v1:= 1I;
  #L4006da.  if v0 != v1 then goto L40070c;
  #L4006de.  v0:= v3.`v2.f.j` @type ^`v2.c` @kind object;
  #L4006e2.  v0:= v0.`v2.c.n` @type ^`java.util.List` @kind object;
  #L4006e6.  v2:= 0I;
  #L4006e8.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4006ee.  v0:= temp @kind object;
  #L4006f0.  v0:= (`java.lang.ref.Reference`) v0 @kind object;
  #L4006f4.  call temp:= `e`(v3, v1, v2, v2) @signature `Lv2/f;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L4006fa.  v1:= temp @kind object;
  #L4006fc.  v3.`v2.f.j` @type ^`v2.c` := v4 @kind object;
  #L400700.  v4:= v4.`v2.c.n` @type ^`java.util.List` @kind object;
  #L400704.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40070a.  return v1 @kind object;
  #L40070c.  v4:= new `java.lang.IllegalStateException`;
  #L400710.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L400716.  throw v4;
}
procedure `okhttp3.a0` `o`(`v2.f` v1 @kind this) @signature `Lv2/f;.o:()Lokhttp3/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40075c.  v0:= v1.`v2.f.c` @type ^`okhttp3.a0` @kind object;
  #L400760.  return v0 @kind object;
}
procedure `void` `q`(`v2.f` v6 @kind this, `java.io.IOException` v7 @kind object) @signature `Lv2/f;.q:(Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L400d18.  v0:= v6.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400d1c.  @monitorenter v0
  #L400d1e.  v1:= instanceof @variable v7 @type ^`okhttp3.internal.http2.StreamResetException` @kind boolean;
  #L400d22.  v2:= 0I;
  #L400d24.  v3:= 0I;
  #L400d26.  v4:= 1I;
  #L400d28.  if v1 == 0 then goto L400d5e;
  #L400d2c.  v7:= (`okhttp3.internal.http2.StreamResetException`) v7 @kind object;
  #L400d30.  v7:= v7.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L400d34.  v1:= `@@okhttp3.internal.http2.ErrorCode.e` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L400d38.  if v7 != v1 then goto L400d50;
  #L400d3c.  v7:= v6.`v2.f.i` @type ^`int`;
  #L400d40.  v7:= v7 + v4 @kind int;
  #L400d42.  v6.`v2.f.i` @type ^`int` := v7;
  #L400d46.  if v7 <= v4 then goto L400da4;
  #L400d4a.  v6.`v2.f.c` @type ^`okhttp3.a0` := v3 @kind object;
  #L400d4e.  goto L400da0;
  #L400d50.  v1:= `@@okhttp3.internal.http2.ErrorCode.f` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L400d54.  if v7 == v1 then goto L400da4;
  #L400d58.  v6.`v2.f.c` @type ^`okhttp3.a0` := v3 @kind object;
  #L400d5c.  goto L400da0;
  #L400d5e.  v1:= v6.`v2.f.j` @type ^`v2.c` @kind object;
  #L400d62.  if v1 == 0 then goto L400da4;
  #L400d66.  call temp:= `n`(v1) @signature `Lv2/c;.n:()Z` @kind virtual;
  #L400d6c.  v1:= temp;
  #L400d6e.  if v1 == 0 then goto L400d7a;
  #L400d72.  v1:= instanceof @variable v7 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L400d76.  if v1 == 0 then goto L400da4;
  #L400d7a.  v1:= v6.`v2.f.j` @type ^`v2.c` @kind object;
  #L400d7e.  v1:= v1.`v2.c.l` @type ^`int`;
  #L400d82.  if v1 != 0 then goto L400da0;
  #L400d86.  v1:= v6.`v2.f.c` @type ^`okhttp3.a0` @kind object;
  #L400d8a.  if v1 == 0 then goto L400d9c;
  #L400d8e.  if v7 == 0 then goto L400d9c;
  #L400d92.  v5:= v6.`v2.f.h` @type ^`v2.e` @kind object;
  #L400d96.  call `a`(v5, v1, v7) @signature `Lv2/e;.a:(Lokhttp3/a0;Ljava/io/IOException;)V` @kind virtual;
  #L400d9c.  v6.`v2.f.c` @type ^`okhttp3.a0` := v3 @kind object;
  #L400da0.  v7:= 1I;
  #L400da2.  goto L400da6;
  #L400da4.  v7:= 0I;
  #L400da6.  v1:= v6.`v2.f.j` @type ^`v2.c` @kind object;
  #L400daa.  call temp:= `e`(v6, v7, v2, v4) @signature `Lv2/f;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L400db0.  v7:= temp @kind object;
  #L400db2.  v2:= v6.`v2.f.j` @type ^`v2.c` @kind object;
  #L400db6.  if v2 != 0 then goto L400dc6;
  #L400dba.  v2:= v6.`v2.f.k` @type ^`boolean` @kind boolean;
  #L400dbe.  if v2 != 0 then goto L400dc4;
  #L400dc2.  goto L400dc6;
  #L400dc4.  v3:= v1 @kind object;
  #L400dc6.  @monitorexit v0
  #L400dc8.  call `h`(v7) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L400dce.  if v3 == 0 then goto L400de0;
  #L400dd2.  v7:= v6.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L400dd6.  v0:= v6.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400dda.  call `h`(v7, v0, v3) @signature `Lokhttp3/o;.h:(Lokhttp3/d;Lokhttp3/h;)V` @kind virtual;
  #L400de0.  return @kind void;
  #L400de2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400de4.  @monitorexit v0
  #L400de6.  throw v7;
  catch `java.lang.Throwable` @[L400d1e..L400dc8] goto L400de2;
  catch `java.lang.Throwable` @[L400de4..L400de6] goto L400de2;
}
procedure `void` `r`(`v2.f` v2 @kind this, `boolean` v3 , `w2.c` v4 @kind object, `long` v5 , `java.io.IOException` v7 @kind object) @signature `Lv2/f;.r:(ZLw2/c;JLjava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L400e0c.  v0:= v2.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L400e10.  v1:= v2.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400e14.  call `p`(v0, v1, v5) @signature `Lokhttp3/o;.p:(Lokhttp3/d;J)V` @kind virtual;
  #L400e1a.  v5:= v2.`v2.f.d` @type ^`okhttp3.i` @kind object;
  #L400e1e.  @monitorenter v5
  #L400e20.  if v4 == 0 then goto L400ebe;
  #L400e24.  v6:= v2.`v2.f.n` @type ^`w2.c` @kind object;
  #L400e28.  if v4 != v6 then goto L400ebe;
  #L400e2c.  v4:= 1I;
  #L400e2e.  if v3 != 0 then goto L400e40;
  #L400e32.  v6:= v2.`v2.f.j` @type ^`v2.c` @kind object;
  #L400e36.  v0:= v6.`v2.c.l` @type ^`int`;
  #L400e3a.  v0:= v0 + v4 @kind int;
  #L400e3c.  v6.`v2.c.l` @type ^`int` := v0;
  #L400e40.  v6:= v2.`v2.f.j` @type ^`v2.c` @kind object;
  #L400e44.  v0:= 0I;
  #L400e46.  call temp:= `e`(v2, v3, v0, v4) @signature `Lv2/f;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L400e4c.  v3:= temp @kind object;
  #L400e4e.  v4:= v2.`v2.f.j` @type ^`v2.c` @kind object;
  #L400e52.  v0:= 0I;
  #L400e54.  if v4 == 0 then goto L400e5a;
  #L400e58.  v6:= v0 @kind object;
  #L400e5a.  v4:= v2.`v2.f.l` @type ^`boolean` @kind boolean;
  #L400e5e.  @monitorexit v5
  #L400e60.  call `h`(v3) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L400e66.  if v6 == 0 then goto L400e78;
  #L400e6a.  v3:= v2.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L400e6e.  v5:= v2.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400e72.  call `h`(v3, v5, v6) @signature `Lokhttp3/o;.h:(Lokhttp3/d;Lokhttp3/h;)V` @kind virtual;
  #L400e78.  if v7 == 0 then goto L400e9c;
  #L400e7c.  v3:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L400e80.  v4:= v2.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400e84.  call temp:= `k`(v3, v4, v7) @signature `Lt2/a;.k:(Lokhttp3/d;Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L400e8a.  v3:= temp @kind object;
  #L400e8c.  v4:= v2.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L400e90.  v5:= v2.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400e94.  call `b`(v4, v5, v3) @signature `Lokhttp3/o;.b:(Lokhttp3/d;Ljava/io/IOException;)V` @kind virtual;
  #L400e9a.  goto L400ebc;
  #L400e9c.  if v4 == 0 then goto L400ebc;
  #L400ea0.  v3:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L400ea4.  v4:= v2.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400ea8.  call temp:= `k`(v3, v4, v0) @signature `Lt2/a;.k:(Lokhttp3/d;Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L400eae.  v3:= v2.`v2.f.f` @type ^`okhttp3.o` @kind object;
  #L400eb2.  v4:= v2.`v2.f.e` @type ^`okhttp3.d` @kind object;
  #L400eb6.  call `a`(v3, v4) @signature `Lokhttp3/o;.a:(Lokhttp3/d;)V` @kind virtual;
  #L400ebc.  return @kind void;
  #L400ebe.  v3:= new `java.lang.IllegalStateException`;
  #L400ec2.  v6:= new `java.lang.StringBuilder`;
  #L400ec6.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L400ecc.  v7:= "expected " @kind object;
  #L400ed0.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L400ed6.  v7:= v2.`v2.f.n` @type ^`w2.c` @kind object;
  #L400eda.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L400ee0.  v7:= " but was " @kind object;
  #L400ee4.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L400eea.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L400ef0.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L400ef6.  v4:= temp @kind object;
  #L400ef8.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L400efe.  throw v3;
  #L400f00.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400f02.  @monitorexit v5
  #L400f04.  throw v3;
  catch `java.lang.Throwable` @[L400e24..L400e60] goto L400f00;
  catch `java.lang.Throwable` @[L400ebe..L400f04] goto L400f00;
}
procedure `java.lang.String` `toString`(`v2.f` v1 @kind this) @signature `Lv2/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4005e4.  call temp:= `d`(v1) @signature `Lv2/f;.d:()Lv2/c;` @kind virtual;
  #L4005ea.  v0:= temp @kind object;
  #L4005ec.  if v0 == 0 then goto L4005fa;
  #L4005f0.  call temp:= `toString`(v0) @signature `Lv2/c;.toString:()Ljava/lang/String;` @kind virtual;
  #L4005f6.  v0:= temp @kind object;
  #L4005f8.  goto L400606;
  #L4005fa.  v0:= v1.`v2.f.a` @type ^`okhttp3.a` @kind object;
  #L4005fe.  call temp:= `toString`(v0) @signature `Lokhttp3/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L400604.  v0:= temp @kind object;
  #L400606.  return v0 @kind object;
}
