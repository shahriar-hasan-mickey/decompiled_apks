record `v2.c` @kind class @AccessFlag PUBLIC_FINAL extends `y2.e$h` @kind class, `okhttp3.h` @kind interface {
  `okhttp3.i` `v2.c.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.a0` `v2.c.c` @AccessFlag PRIVATE_FINAL;
  `java.net.Socket` `v2.c.d` @AccessFlag PRIVATE;
  `java.net.Socket` `v2.c.e` @AccessFlag PRIVATE;
  `okhttp3.p` `v2.c.f` @AccessFlag PRIVATE;
  `okhttp3.Protocol` `v2.c.g` @AccessFlag PRIVATE;
  `y2.e` `v2.c.h` @AccessFlag PRIVATE;
  `okio.e` `v2.c.i` @AccessFlag PRIVATE;
  `okio.d` `v2.c.j` @AccessFlag PRIVATE;
  `boolean` `v2.c.k` @AccessFlag PUBLIC;
  `int` `v2.c.l` @AccessFlag PUBLIC;
  `int` `v2.c.m` @AccessFlag PUBLIC;
  `java.util.List` `v2.c.n` @AccessFlag PUBLIC_FINAL;
  `long` `v2.c.o` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`v2.c` v2 @kind this, `okhttp3.i` v3 @kind object, `okhttp3.a0` v4 @kind object) @signature `Lv2/c;.<init>:(Lokhttp3/i;Lokhttp3/a0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ff504.  call `<init>`(v2) @signature `Ly2/e$h;.<init>:()V` @kind direct;
  #L3ff50a.  v0:= 1I;
  #L3ff50c.  v2.`v2.c.m` @type ^`int` := v0;
  #L3ff510.  v0:= new `java.util.ArrayList`;
  #L3ff514.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3ff51a.  v2.`v2.c.n` @type ^`java.util.List` := v0 @kind object;
  #L3ff51e.  v0:= 9223372036854775807L;
  #L3ff528.  v2.`v2.c.o` @type ^`long` := v0 @kind wide;
  #L3ff52c.  v2.`v2.c.b` @type ^`okhttp3.i` := v3 @kind object;
  #L3ff530.  v2.`v2.c.c` @type ^`okhttp3.a0` := v4 @kind object;
  #L3ff534.  return @kind void;
}
procedure `void` `e`(`v2.c` v4 @kind this, `int` v5 , `int` v6 , `okhttp3.d` v7 @kind object, `okhttp3.o` v8 @kind object) @signature `Lv2/c;.e:(IILokhttp3/d;Lokhttp3/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff858.  v0:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff85c.  call temp:= `b`(v0) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3ff862.  v0:= temp @kind object;
  #L3ff864.  v1:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff868.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff86e.  v1:= temp @kind object;
  #L3ff870.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3ff876.  v2:= temp @kind object;
  #L3ff878.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L3ff87c.  if v2 == v3 then goto L3ff89e;
  #L3ff880.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3ff886.  v2:= temp @kind object;
  #L3ff888.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L3ff88c.  if v2 != v3 then goto L3ff892;
  #L3ff890.  goto L3ff89e;
  #L3ff892.  v1:= new `java.net.Socket`;
  #L3ff896.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L3ff89c.  goto L3ff8ae;
  #L3ff89e.  call temp:= `j`(v1) @signature `Lokhttp3/a;.j:()Ljavax/net/SocketFactory;` @kind virtual;
  #L3ff8a4.  v1:= temp @kind object;
  #L3ff8a6.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L3ff8ac.  v1:= temp @kind object;
  #L3ff8ae.  v4.`v2.c.d` @type ^`java.net.Socket` := v1 @kind object;
  #L3ff8b2.  v1:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff8b6.  call temp:= `d`(v1) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3ff8bc.  v1:= temp @kind object;
  #L3ff8be.  call `f`(v8, v7, v1, v0) @signature `Lokhttp3/o;.f:(Lokhttp3/d;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L3ff8c4.  v7:= v4.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ff8c8.  call `setSoTimeout`(v7, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3ff8ce.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3ff8d4.  v6:= temp @kind object;
  #L3ff8d6.  v7:= v4.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ff8da.  v8:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff8de.  call temp:= `d`(v8) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3ff8e4.  v8:= temp @kind object;
  #L3ff8e6.  call `h`(v6, v7, v8, v5) @signature `Lz2/f;.h:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L3ff8ec.  v5:= v4.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ff8f0.  call temp:= `h`(v5) @signature `Lokio/k;.h:(Ljava/net/Socket;)Lokio/q;` @kind static;
  #L3ff8f6.  v5:= temp @kind object;
  #L3ff8f8.  call temp:= `b`(v5) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L3ff8fe.  v5:= temp @kind object;
  #L3ff900.  v4.`v2.c.i` @type ^`okio.e` := v5 @kind object;
  #L3ff904.  v5:= v4.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ff908.  call temp:= `e`(v5) @signature `Lokio/k;.e:(Ljava/net/Socket;)Lokio/p;` @kind static;
  #L3ff90e.  v5:= temp @kind object;
  #L3ff910.  call temp:= `a`(v5) @signature `Lokio/k;.a:(Lokio/p;)Lokio/d;` @kind static;
  #L3ff916.  v5:= temp @kind object;
  #L3ff918.  v4.`v2.c.j` @type ^`okio.d` := v5 @kind object;
  #L3ff91c.  goto L3ff938;
  #L3ff91e.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L3ff920.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3ff926.  v6:= temp @kind object;
  #L3ff928.  v7:= "throw with null exception" @kind object;
  #L3ff92c.  call temp:= `equals`(v7, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ff932.  v6:= temp;
  #L3ff934.  if v6 != 0 then goto L3ff93a;
  #L3ff938.  return @kind void;
  #L3ff93a.  v6:= new `java.io.IOException`;
  #L3ff93e.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3ff944.  throw v6;
  #L3ff946.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L3ff948.  v6:= new `java.net.ConnectException`;
  #L3ff94c.  v7:= new `java.lang.StringBuilder`;
  #L3ff950.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ff956.  v8:= "Failed to connect to " @kind object;
  #L3ff95a.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff960.  v8:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff964.  call temp:= `d`(v8) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3ff96a.  v8:= temp @kind object;
  #L3ff96c.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff972.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ff978.  v7:= temp @kind object;
  #L3ff97a.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff980.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3ff986.  throw v6;
  catch `java.net.ConnectException` @[L3ff8ce..L3ff8ec] goto L3ff946;
  catch `java.lang.NullPointerException` @[L3ff8ec..L3ff91c] goto L3ff91e;
}
procedure `void` `f`(`v2.c` v7 @kind this, `v2.b` v8 @kind object) @signature `Lv2/c;.f:(Lv2/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ff9b4.  v0:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff9b8.  call temp:= `a`(v0) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff9be.  v0:= temp @kind object;
  #L3ff9c0.  call temp:= `k`(v0) @signature `Lokhttp3/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3ff9c6.  v1:= temp @kind object;
  #L3ff9c8.  v2:= 0I;
  #L3ff9ca.  v3:= v7.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ff9ce.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ff9d4.  v4:= temp @kind object;
  #L3ff9d6.  call temp:= `l`(v4) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ff9dc.  v4:= temp @kind object;
  #L3ff9de.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ff9e4.  v5:= temp @kind object;
  #L3ff9e6.  call temp:= `x`(v5) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L3ff9ec.  v5:= temp;
  #L3ff9ee.  v6:= 1I;
  #L3ff9f0.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L3ff9f6.  v1:= temp @kind object;
  #L3ff9f8.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L3ff9fc.  call temp:= `a`(v8, v1) @signature `Lv2/b;.a:(Ljavax/net/ssl/SSLSocket;)Lokhttp3/j;` @kind virtual;
  #L3ffa02.  v8:= temp @kind object;
  #L3ffa04.  call temp:= `f`(v8) @signature `Lokhttp3/j;.f:()Z` @kind virtual;
  #L3ffa0a.  v3:= temp;
  #L3ffa0c.  if v3 == 0 then goto L3ffa36;
  #L3ffa10.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3ffa16.  v3:= temp @kind object;
  #L3ffa18.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ffa1e.  v4:= temp @kind object;
  #L3ffa20.  call temp:= `l`(v4) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ffa26.  v4:= temp @kind object;
  #L3ffa28.  call temp:= `f`(v0) @signature `Lokhttp3/a;.f:()Ljava/util/List;` @kind virtual;
  #L3ffa2e.  v5:= temp @kind object;
  #L3ffa30.  call `g`(v3, v1, v4, v5) @signature `Lz2/f;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L3ffa36.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L3ffa3c.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L3ffa42.  v3:= temp @kind object;
  #L3ffa44.  call temp:= `b`(v3) @signature `Lokhttp3/p;.b:(Ljavax/net/ssl/SSLSession;)Lokhttp3/p;` @kind static;
  #L3ffa4a.  v4:= temp @kind object;
  #L3ffa4c.  call temp:= `e`(v0) @signature `Lokhttp3/a;.e:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L3ffa52.  v5:= temp @kind object;
  #L3ffa54.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ffa5a.  v6:= temp @kind object;
  #L3ffa5c.  call temp:= `l`(v6) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ffa62.  v6:= temp @kind object;
  #L3ffa64.  call temp:= `verify`(v5, v6, v3) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L3ffa6a.  v3:= temp;
  #L3ffa6c.  if v3 == 0 then goto L3ffb0c;
  #L3ffa70.  call temp:= `a`(v0) @signature `Lokhttp3/a;.a:()Lokhttp3/f;` @kind virtual;
  #L3ffa76.  v3:= temp @kind object;
  #L3ffa78.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ffa7e.  v0:= temp @kind object;
  #L3ffa80.  call temp:= `l`(v0) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ffa86.  v0:= temp @kind object;
  #L3ffa88.  call temp:= `c`(v4) @signature `Lokhttp3/p;.c:()Ljava/util/List;` @kind virtual;
  #L3ffa8e.  v5:= temp @kind object;
  #L3ffa90.  call `a`(v3, v0, v5) @signature `Lokhttp3/f;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L3ffa96.  call temp:= `f`(v8) @signature `Lokhttp3/j;.f:()Z` @kind virtual;
  #L3ffa9c.  v8:= temp;
  #L3ffa9e.  if v8 == 0 then goto L3ffab2;
  #L3ffaa2.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3ffaa8.  v8:= temp @kind object;
  #L3ffaaa.  call temp:= `l`(v8, v1) @signature `Lz2/f;.l:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L3ffab0.  v2:= temp @kind object;
  #L3ffab2.  v7.`v2.c.e` @type ^`java.net.Socket` := v1 @kind object;
  #L3ffab6.  call temp:= `h`(v1) @signature `Lokio/k;.h:(Ljava/net/Socket;)Lokio/q;` @kind static;
  #L3ffabc.  v8:= temp @kind object;
  #L3ffabe.  call temp:= `b`(v8) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L3ffac4.  v8:= temp @kind object;
  #L3ffac6.  v7.`v2.c.i` @type ^`okio.e` := v8 @kind object;
  #L3ffaca.  v8:= v7.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3fface.  call temp:= `e`(v8) @signature `Lokio/k;.e:(Ljava/net/Socket;)Lokio/p;` @kind static;
  #L3ffad4.  v8:= temp @kind object;
  #L3ffad6.  call temp:= `a`(v8) @signature `Lokio/k;.a:(Lokio/p;)Lokio/d;` @kind static;
  #L3ffadc.  v8:= temp @kind object;
  #L3ffade.  v7.`v2.c.j` @type ^`okio.d` := v8 @kind object;
  #L3ffae2.  v7.`v2.c.f` @type ^`okhttp3.p` := v4 @kind object;
  #L3ffae6.  if v2 == 0 then goto L3ffaf4;
  #L3ffaea.  call temp:= `a`(v2) @signature `Lokhttp3/Protocol;.a:(Ljava/lang/String;)Lokhttp3/Protocol;` @kind static;
  #L3ffaf0.  v8:= temp @kind object;
  #L3ffaf2.  goto L3ffaf8;
  #L3ffaf4.  v8:= `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol` @kind object;
  #L3ffaf8.  v7.`v2.c.g` @type ^`okhttp3.Protocol` := v8 @kind object;
  #L3ffafc.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3ffb02.  v8:= temp @kind object;
  #L3ffb04.  call `a`(v8, v1) @signature `Lz2/f;.a:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L3ffb0a.  return @kind void;
  #L3ffb0c.  call temp:= `c`(v4) @signature `Lokhttp3/p;.c:()Ljava/util/List;` @kind virtual;
  #L3ffb12.  v8:= temp @kind object;
  #L3ffb14.  v2:= 0I;
  #L3ffb16.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ffb1c.  v8:= temp @kind object;
  #L3ffb1e.  v8:= (`java.security.cert.X509Certificate`) v8 @kind object;
  #L3ffb22.  v2:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L3ffb26.  v3:= new `java.lang.StringBuilder`;
  #L3ffb2a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ffb30.  v4:= "Hostname " @kind object;
  #L3ffb34.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ffb3a.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ffb40.  v0:= temp @kind object;
  #L3ffb42.  call temp:= `l`(v0) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ffb48.  v0:= temp @kind object;
  #L3ffb4a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ffb50.  v0:= " not verified:\n    certificate: " @kind object;
  #L3ffb54.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ffb5a.  call temp:= `c`(v8) @signature `Lokhttp3/f;.c:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L3ffb60.  v0:= temp @kind object;
  #L3ffb62.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ffb68.  v0:= "\n    DN: " @kind object;
  #L3ffb6c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ffb72.  call temp:= `getSubjectDN`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L3ffb78.  v0:= temp @kind object;
  #L3ffb7a.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L3ffb80.  v0:= temp @kind object;
  #L3ffb82.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ffb88.  v0:= "\n    subjectAltNames: " @kind object;
  #L3ffb8c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ffb92.  call temp:= `a`(v8) @signature `Lb3/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L3ffb98.  v8:= temp @kind object;
  #L3ffb9a.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ffba0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ffba6.  v8:= temp @kind object;
  #L3ffba8.  call `<init>`(v2, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ffbae.  throw v2;
  #L3ffbb0.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ffbb2.  v2:= v1 @kind object;
  #L3ffbb4.  goto L3ffbdc;
  #L3ffbb6.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3ffbb8.  v2:= v1 @kind object;
  #L3ffbba.  goto L3ffbc2;
  #L3ffbbc.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ffbbe.  goto L3ffbdc;
  #L3ffbc0.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3ffbc2.  call temp:= `A`(v8) @signature `Lt2/c;.A:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3ffbc8.  v0:= temp;
  #L3ffbca.  if v0 == 0 then goto L3ffbda;
  #L3ffbce.  v0:= new `java.io.IOException`;
  #L3ffbd2.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3ffbd8.  throw v0;
  #L3ffbda.  throw v8;
  #L3ffbdc.  if v2 == 0 then goto L3ffbee;
  #L3ffbe0.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3ffbe6.  v0:= temp @kind object;
  #L3ffbe8.  call `a`(v0, v2) @signature `Lz2/f;.a:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L3ffbee.  call `h`(v2) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L3ffbf4.  throw v8;
  catch `java.lang.AssertionError` @[L3ff9ca..L3ff9fc] goto L3ffbc0;
  catch `java.lang.Throwable` @[L3ff9ca..L3ff9fc] goto L3ffbbc;
  catch `java.lang.AssertionError` @[L3ff9fc..L3ffafc] goto L3ffbb6;
  catch `java.lang.Throwable` @[L3ff9fc..L3ffafc] goto L3ffbb0;
  catch `java.lang.AssertionError` @[L3ffb0c..L3ffbb0] goto L3ffbb6;
  catch `java.lang.Throwable` @[L3ffb0c..L3ffbb0] goto L3ffbb0;
  catch `java.lang.Throwable` @[L3ffbc2..L3ffbdc] goto L3ffbbc;
}
procedure `void` `g`(`v2.c` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `okhttp3.d` v10 @kind object, `okhttp3.o` v11 @kind object) @signature `Lv2/c;.g:(IIILokhttp3/d;Lokhttp3/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ffc3c.  call temp:= `i`(v6) @signature `Lv2/c;.i:()Lokhttp3/w;` @kind direct;
  #L3ffc42.  v0:= temp @kind object;
  #L3ffc44.  call temp:= `h`(v0) @signature `Lokhttp3/w;.h:()Lokhttp3/r;` @kind virtual;
  #L3ffc4a.  v1:= temp @kind object;
  #L3ffc4c.  v2:= 0I;
  #L3ffc4e.  v3:= 21I;
  #L3ffc52.  if v2 >= v3 then goto L3ffca6;
  #L3ffc56.  call `e`(v6, v7, v8, v10, v11) @signature `Lv2/c;.e:(IILokhttp3/d;Lokhttp3/o;)V` @kind direct;
  #L3ffc5c.  call temp:= `h`(v6, v8, v9, v0, v1) @signature `Lv2/c;.h:(IILokhttp3/w;Lokhttp3/r;)Lokhttp3/w;` @kind direct;
  #L3ffc62.  v0:= temp @kind object;
  #L3ffc64.  if v0 != 0 then goto L3ffc6a;
  #L3ffc68.  goto L3ffca6;
  #L3ffc6a.  v3:= v6.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ffc6e.  call `h`(v3) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L3ffc74.  v3:= 0I;
  #L3ffc76.  v6.`v2.c.d` @type ^`java.net.Socket` := v3 @kind object;
  #L3ffc7a.  v6.`v2.c.j` @type ^`okio.d` := v3 @kind object;
  #L3ffc7e.  v6.`v2.c.i` @type ^`okio.e` := v3 @kind object;
  #L3ffc82.  v4:= v6.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ffc86.  call temp:= `d`(v4) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3ffc8c.  v4:= temp @kind object;
  #L3ffc8e.  v5:= v6.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ffc92.  call temp:= `b`(v5) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3ffc98.  v5:= temp @kind object;
  #L3ffc9a.  call `d`(v11, v10, v4, v5, v3) @signature `Lokhttp3/o;.d:(Lokhttp3/d;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L3ffca0.  v2:= v2 + 1;
  #L3ffca4.  goto L3ffc4e;
  #L3ffca6.  return @kind void;
}
procedure `okhttp3.w` `h`(`v2.c` v8 @kind this, `int` v9 , `int` v10 , `okhttp3.w` v11 @kind object, `okhttp3.r` v12 @kind object) @signature `Lv2/c;.h:(IILokhttp3/w;Lokhttp3/r;)Lokhttp3/w;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ff1f0.  v0:= new `java.lang.StringBuilder`;
  #L3ff1f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ff1fa.  v1:= "CONNECT " @kind object;
  #L3ff1fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff204.  v1:= 1I;
  #L3ff206.  call temp:= `s`(v12, v1) @signature `Lt2/c;.s:(Lokhttp3/r;Z)Ljava/lang/String;` @kind static;
  #L3ff20c.  v12:= temp @kind object;
  #L3ff20e.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff214.  v12:= " HTTP/1.1" @kind object;
  #L3ff218.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff21e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ff224.  v12:= temp @kind object;
  #L3ff226.  v0:= new `x2.a`;
  #L3ff22a.  v1:= v8.`v2.c.i` @type ^`okio.e` @kind object;
  #L3ff22e.  v2:= v8.`v2.c.j` @type ^`okio.d` @kind object;
  #L3ff232.  v3:= 0I;
  #L3ff234.  call `<init>`(v0, v3, v3, v1, v2) @signature `Lx2/a;.<init>:(Lokhttp3/u;Lv2/f;Lokio/e;Lokio/d;)V` @kind direct;
  #L3ff23a.  v1:= v8.`v2.c.i` @type ^`okio.e` @kind object;
  #L3ff23e.  call temp:= `e`(v1) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3ff244.  v1:= temp @kind object;
  #L3ff246.  v4:= (`long`) v9 @kind i2l;
  #L3ff248.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3ff24c.  call temp:= `g`(v1, v4, v2) @signature `Lokio/r;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/r;` @kind virtual;
  #L3ff252.  v1:= v8.`v2.c.j` @type ^`okio.d` @kind object;
  #L3ff256.  call temp:= `e`(v1) @signature `Lokio/p;.e:()Lokio/r;` @kind interface;
  #L3ff25c.  v1:= temp @kind object;
  #L3ff25e.  v4:= (`long`) v10 @kind i2l;
  #L3ff260.  call temp:= `g`(v1, v4, v2) @signature `Lokio/r;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/r;` @kind virtual;
  #L3ff266.  call temp:= `d`(v11) @signature `Lokhttp3/w;.d:()Lokhttp3/q;` @kind virtual;
  #L3ff26c.  v1:= temp @kind object;
  #L3ff26e.  call `o`(v0, v1, v12) @signature `Lx2/a;.o:(Lokhttp3/q;Ljava/lang/String;)V` @kind virtual;
  #L3ff274.  call `a`(v0) @signature `Lx2/a;.a:()V` @kind virtual;
  #L3ff27a.  v1:= 0I;
  #L3ff27c.  call temp:= `d`(v0, v1) @signature `Lx2/a;.d:(Z)Lokhttp3/y$a;` @kind virtual;
  #L3ff282.  v1:= temp @kind object;
  #L3ff284.  call temp:= `p`(v1, v11) @signature `Lokhttp3/y$a;.p:(Lokhttp3/w;)Lokhttp3/y$a;` @kind virtual;
  #L3ff28a.  v11:= temp @kind object;
  #L3ff28c.  call temp:= `c`(v11) @signature `Lokhttp3/y$a;.c:()Lokhttp3/y;` @kind virtual;
  #L3ff292.  v11:= temp @kind object;
  #L3ff294.  call temp:= `b`(v11) @signature `Lw2/e;.b:(Lokhttp3/y;)J` @kind static;
  #L3ff29a.  v4:= temp @kind wide;
  #L3ff29c.  v6:= -1L;
  #L3ff2a0.  v1:= lcmp(v4, v6);
  #L3ff2a4.  if v1 != 0 then goto L3ff2ac;
  #L3ff2a8.  v4:= 0L;
  #L3ff2ac.  call temp:= `k`(v0, v4) @signature `Lx2/a;.k:(J)Lokio/q;` @kind virtual;
  #L3ff2b2.  v0:= temp @kind object;
  #L3ff2b4.  v1:= 2147483647I;
  #L3ff2ba.  call temp:= `D`(v0, v1, v2) @signature `Lt2/c;.D:(Lokio/q;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L3ff2c0.  call `close`(v0) @signature `Lokio/q;.close:()V` @kind interface;
  #L3ff2c6.  call temp:= `s`(v11) @signature `Lokhttp3/y;.s:()I` @kind virtual;
  #L3ff2cc.  v0:= temp;
  #L3ff2ce.  v1:= 200I;
  #L3ff2d2.  if v0 == v1 then goto L3ff36a;
  #L3ff2d6.  v1:= 407I;
  #L3ff2da.  if v0 != v1 then goto L3ff334;
  #L3ff2de.  v0:= v8.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff2e2.  call temp:= `a`(v0) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff2e8.  v0:= temp @kind object;
  #L3ff2ea.  call temp:= `h`(v0) @signature `Lokhttp3/a;.h:()Lokhttp3/b;` @kind virtual;
  #L3ff2f0.  v0:= temp @kind object;
  #L3ff2f2.  v1:= v8.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff2f6.  call temp:= `a`(v0, v1, v11) @signature `Lokhttp3/b;.a:(Lokhttp3/a0;Lokhttp3/y;)Lokhttp3/w;` @kind interface;
  #L3ff2fc.  v0:= temp @kind object;
  #L3ff2fe.  if v0 == 0 then goto L3ff324;
  #L3ff302.  v1:= "Connection" @kind object;
  #L3ff306.  call temp:= `R`(v11, v1) @signature `Lokhttp3/y;.R:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3ff30c.  v11:= temp @kind object;
  #L3ff30e.  v1:= "close" @kind object;
  #L3ff312.  call temp:= `equalsIgnoreCase`(v1, v11) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3ff318.  v11:= temp;
  #L3ff31a.  if v11 == 0 then goto L3ff320;
  #L3ff31e.  return v0 @kind object;
  #L3ff320.  v11:= v0 @kind object;
  #L3ff322.  goto L3ff226;
  #L3ff324.  v9:= new `java.io.IOException`;
  #L3ff328.  v10:= "Failed to authenticate with proxy" @kind object;
  #L3ff32c.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff332.  throw v9;
  #L3ff334.  v9:= new `java.io.IOException`;
  #L3ff338.  v10:= new `java.lang.StringBuilder`;
  #L3ff33c.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ff342.  v12:= "Unexpected response code for CONNECT: " @kind object;
  #L3ff346.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff34c.  call temp:= `s`(v11) @signature `Lokhttp3/y;.s:()I` @kind virtual;
  #L3ff352.  v11:= temp;
  #L3ff354.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff35a.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ff360.  v10:= temp @kind object;
  #L3ff362.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff368.  throw v9;
  #L3ff36a.  v9:= v8.`v2.c.i` @type ^`okio.e` @kind object;
  #L3ff36e.  call temp:= `c`(v9) @signature `Lokio/e;.c:()Lokio/c;` @kind interface;
  #L3ff374.  v9:= temp @kind object;
  #L3ff376.  call temp:= `n`(v9) @signature `Lokio/c;.n:()Z` @kind virtual;
  #L3ff37c.  v9:= temp;
  #L3ff37e.  if v9 == 0 then goto L3ff39c;
  #L3ff382.  v9:= v8.`v2.c.j` @type ^`okio.d` @kind object;
  #L3ff386.  call temp:= `c`(v9) @signature `Lokio/d;.c:()Lokio/c;` @kind interface;
  #L3ff38c.  v9:= temp @kind object;
  #L3ff38e.  call temp:= `n`(v9) @signature `Lokio/c;.n:()Z` @kind virtual;
  #L3ff394.  v9:= temp;
  #L3ff396.  if v9 == 0 then goto L3ff39c;
  #L3ff39a.  return v3 @kind object;
  #L3ff39c.  v9:= new `java.io.IOException`;
  #L3ff3a0.  v10:= "TLS tunnel buffered too many bytes!" @kind object;
  #L3ff3a4.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff3aa.  throw v9;
}
procedure `okhttp3.w` `i`(`v2.c` v4 @kind this) @signature `Lv2/c;.i:()Lokhttp3/w;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff3bc.  v0:= new `okhttp3.w$a`;
  #L3ff3c0.  call `<init>`(v0) @signature `Lokhttp3/w$a;.<init>:()V` @kind direct;
  #L3ff3c6.  v1:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff3ca.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff3d0.  v1:= temp @kind object;
  #L3ff3d2.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ff3d8.  v1:= temp @kind object;
  #L3ff3da.  call temp:= `h`(v0, v1) @signature `Lokhttp3/w$a;.h:(Lokhttp3/r;)Lokhttp3/w$a;` @kind virtual;
  #L3ff3e0.  v0:= temp @kind object;
  #L3ff3e2.  v1:= "CONNECT" @kind object;
  #L3ff3e6.  v2:= 0I;
  #L3ff3e8.  call temp:= `d`(v0, v1, v2) @signature `Lokhttp3/w$a;.d:(Ljava/lang/String;Lokhttp3/x;)Lokhttp3/w$a;` @kind virtual;
  #L3ff3ee.  v0:= temp @kind object;
  #L3ff3f0.  v1:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff3f4.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff3fa.  v1:= temp @kind object;
  #L3ff3fc.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ff402.  v1:= temp @kind object;
  #L3ff404.  v2:= 1I;
  #L3ff406.  call temp:= `s`(v1, v2) @signature `Lt2/c;.s:(Lokhttp3/r;Z)Ljava/lang/String;` @kind static;
  #L3ff40c.  v1:= temp @kind object;
  #L3ff40e.  v2:= "Host" @kind object;
  #L3ff412.  call temp:= `b`(v0, v2, v1) @signature `Lokhttp3/w$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L3ff418.  v0:= temp @kind object;
  #L3ff41a.  v1:= "Proxy-Connection" @kind object;
  #L3ff41e.  v2:= "Keep-Alive" @kind object;
  #L3ff422.  call temp:= `b`(v0, v1, v2) @signature `Lokhttp3/w$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L3ff428.  v0:= temp @kind object;
  #L3ff42a.  call temp:= `a`() @signature `Lt2/d;.a:()Ljava/lang/String;` @kind static;
  #L3ff430.  v1:= temp @kind object;
  #L3ff432.  v2:= "User-Agent" @kind object;
  #L3ff436.  call temp:= `b`(v0, v2, v1) @signature `Lokhttp3/w$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L3ff43c.  v0:= temp @kind object;
  #L3ff43e.  call temp:= `a`(v0) @signature `Lokhttp3/w$a;.a:()Lokhttp3/w;` @kind virtual;
  #L3ff444.  v0:= temp @kind object;
  #L3ff446.  v1:= new `okhttp3.y$a`;
  #L3ff44a.  call `<init>`(v1) @signature `Lokhttp3/y$a;.<init>:()V` @kind direct;
  #L3ff450.  call temp:= `p`(v1, v0) @signature `Lokhttp3/y$a;.p:(Lokhttp3/w;)Lokhttp3/y$a;` @kind virtual;
  #L3ff456.  v1:= temp @kind object;
  #L3ff458.  v2:= `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol` @kind object;
  #L3ff45c.  call temp:= `n`(v1, v2) @signature `Lokhttp3/y$a;.n:(Lokhttp3/Protocol;)Lokhttp3/y$a;` @kind virtual;
  #L3ff462.  v1:= temp @kind object;
  #L3ff464.  v2:= 407I;
  #L3ff468.  call temp:= `g`(v1, v2) @signature `Lokhttp3/y$a;.g:(I)Lokhttp3/y$a;` @kind virtual;
  #L3ff46e.  v1:= temp @kind object;
  #L3ff470.  v2:= "Preemptive Authenticate" @kind object;
  #L3ff474.  call temp:= `k`(v1, v2) @signature `Lokhttp3/y$a;.k:(Ljava/lang/String;)Lokhttp3/y$a;` @kind virtual;
  #L3ff47a.  v1:= temp @kind object;
  #L3ff47c.  v2:= `@@t2.c.c` @type ^`okhttp3.z` @kind object;
  #L3ff480.  call temp:= `b`(v1, v2) @signature `Lokhttp3/y$a;.b:(Lokhttp3/z;)Lokhttp3/y$a;` @kind virtual;
  #L3ff486.  v1:= temp @kind object;
  #L3ff488.  v2:= -1L;
  #L3ff48c.  call temp:= `q`(v1, v2) @signature `Lokhttp3/y$a;.q:(J)Lokhttp3/y$a;` @kind virtual;
  #L3ff492.  v1:= temp @kind object;
  #L3ff494.  call temp:= `o`(v1, v2) @signature `Lokhttp3/y$a;.o:(J)Lokhttp3/y$a;` @kind virtual;
  #L3ff49a.  v1:= temp @kind object;
  #L3ff49c.  v2:= "Proxy-Authenticate" @kind object;
  #L3ff4a0.  v3:= "OkHttp-Preemptive" @kind object;
  #L3ff4a4.  call temp:= `i`(v1, v2, v3) @signature `Lokhttp3/y$a;.i:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/y$a;` @kind virtual;
  #L3ff4aa.  v1:= temp @kind object;
  #L3ff4ac.  call temp:= `c`(v1) @signature `Lokhttp3/y$a;.c:()Lokhttp3/y;` @kind virtual;
  #L3ff4b2.  v1:= temp @kind object;
  #L3ff4b4.  v2:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff4b8.  call temp:= `a`(v2) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff4be.  v2:= temp @kind object;
  #L3ff4c0.  call temp:= `h`(v2) @signature `Lokhttp3/a;.h:()Lokhttp3/b;` @kind virtual;
  #L3ff4c6.  v2:= temp @kind object;
  #L3ff4c8.  v3:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff4cc.  call temp:= `a`(v2, v3, v1) @signature `Lokhttp3/b;.a:(Lokhttp3/a0;Lokhttp3/y;)Lokhttp3/w;` @kind interface;
  #L3ff4d2.  v1:= temp @kind object;
  #L3ff4d4.  if v1 == 0 then goto L3ff4da;
  #L3ff4d8.  v0:= v1 @kind object;
  #L3ff4da.  return v0 @kind object;
}
procedure `void` `j`(`v2.c` v1 @kind this, `v2.b` v2 @kind object, `int` v3 , `okhttp3.d` v4 @kind object, `okhttp3.o` v5 @kind object) @signature `Lv2/c;.j:(Lv2/b;ILokhttp3/d;Lokhttp3/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ffcb8.  v0:= v1.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ffcbc.  call temp:= `a`(v0) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ffcc2.  v0:= temp @kind object;
  #L3ffcc4.  call temp:= `k`(v0) @signature `Lokhttp3/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3ffcca.  v0:= temp @kind object;
  #L3ffccc.  if v0 != 0 then goto L3ffd1a;
  #L3ffcd0.  v2:= v1.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ffcd4.  call temp:= `a`(v2) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ffcda.  v2:= temp @kind object;
  #L3ffcdc.  call temp:= `f`(v2) @signature `Lokhttp3/a;.f:()Ljava/util/List;` @kind virtual;
  #L3ffce2.  v2:= temp @kind object;
  #L3ffce4.  v4:= `@@okhttp3.Protocol.e` @type ^`okhttp3.Protocol` @kind object;
  #L3ffce8.  call temp:= `contains`(v2, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3ffcee.  v2:= temp;
  #L3ffcf0.  if v2 == 0 then goto L3ffd08;
  #L3ffcf4.  v2:= v1.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ffcf8.  v1.`v2.c.e` @type ^`java.net.Socket` := v2 @kind object;
  #L3ffcfc.  v1.`v2.c.g` @type ^`okhttp3.Protocol` := v4 @kind object;
  #L3ffd00.  call `r`(v1, v3) @signature `Lv2/c;.r:(I)V` @kind direct;
  #L3ffd06.  return @kind void;
  #L3ffd08.  v2:= v1.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ffd0c.  v1.`v2.c.e` @type ^`java.net.Socket` := v2 @kind object;
  #L3ffd10.  v2:= `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol` @kind object;
  #L3ffd14.  v1.`v2.c.g` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L3ffd18.  return @kind void;
  #L3ffd1a.  call `u`(v5, v4) @signature `Lokhttp3/o;.u:(Lokhttp3/d;)V` @kind virtual;
  #L3ffd20.  call `f`(v1, v2) @signature `Lv2/c;.f:(Lv2/b;)V` @kind direct;
  #L3ffd26.  v2:= v1.`v2.c.f` @type ^`okhttp3.p` @kind object;
  #L3ffd2a.  call `t`(v5, v4, v2) @signature `Lokhttp3/o;.t:(Lokhttp3/d;Lokhttp3/p;)V` @kind virtual;
  #L3ffd30.  v2:= v1.`v2.c.g` @type ^`okhttp3.Protocol` @kind object;
  #L3ffd34.  v4:= `@@okhttp3.Protocol.d` @type ^`okhttp3.Protocol` @kind object;
  #L3ffd38.  if v2 != v4 then goto L3ffd42;
  #L3ffd3c.  call `r`(v1, v3) @signature `Lv2/c;.r:(I)V` @kind direct;
  #L3ffd42.  return @kind void;
}
procedure `void` `r`(`v2.c` v5 @kind this, `int` v6 ) @signature `Lv2/c;.r:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ffda8.  v0:= v5.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3ffdac.  v1:= 0I;
  #L3ffdae.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3ffdb4.  v0:= new `y2.e$g`;
  #L3ffdb8.  v1:= 1I;
  #L3ffdba.  call `<init>`(v0, v1) @signature `Ly2/e$g;.<init>:(Z)V` @kind direct;
  #L3ffdc0.  v1:= v5.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3ffdc4.  v2:= v5.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ffdc8.  call temp:= `a`(v2) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ffdce.  v2:= temp @kind object;
  #L3ffdd0.  call temp:= `l`(v2) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ffdd6.  v2:= temp @kind object;
  #L3ffdd8.  call temp:= `l`(v2) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ffdde.  v2:= temp @kind object;
  #L3ffde0.  v3:= v5.`v2.c.i` @type ^`okio.e` @kind object;
  #L3ffde4.  v4:= v5.`v2.c.j` @type ^`okio.d` @kind object;
  #L3ffde8.  call temp:= `d`(v0, v1, v2, v3, v4) @signature `Ly2/e$g;.d:(Ljava/net/Socket;Ljava/lang/String;Lokio/e;Lokio/d;)Ly2/e$g;` @kind virtual;
  #L3ffdee.  v0:= temp @kind object;
  #L3ffdf0.  call temp:= `b`(v0, v5) @signature `Ly2/e$g;.b:(Ly2/e$h;)Ly2/e$g;` @kind virtual;
  #L3ffdf6.  v0:= temp @kind object;
  #L3ffdf8.  call temp:= `c`(v0, v6) @signature `Ly2/e$g;.c:(I)Ly2/e$g;` @kind virtual;
  #L3ffdfe.  v6:= temp @kind object;
  #L3ffe00.  call temp:= `a`(v6) @signature `Ly2/e$g;.a:()Ly2/e;` @kind virtual;
  #L3ffe06.  v6:= temp @kind object;
  #L3ffe08.  v5.`v2.c.h` @type ^`y2.e` := v6 @kind object;
  #L3ffe0c.  call `h0`(v6) @signature `Ly2/e;.h0:()V` @kind virtual;
  #L3ffe12.  return @kind void;
}
procedure `void` `a`(`v2.c` v1 @kind this, `y2.e` v2 @kind object) @signature `Lv2/c;.a:(Ly2/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffd54.  v0:= v1.`v2.c.b` @type ^`okhttp3.i` @kind object;
  #L3ffd58.  @monitorenter v0
  #L3ffd5a.  call temp:= `W`(v2) @signature `Ly2/e;.W:()I` @kind virtual;
  #L3ffd60.  v2:= temp;
  #L3ffd62.  v1.`v2.c.m` @type ^`int` := v2;
  #L3ffd66.  @monitorexit v0
  #L3ffd68.  return @kind void;
  #L3ffd6a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ffd6c.  @monitorexit v0
  #L3ffd6e.  throw v2;
  catch `java.lang.Throwable` @[L3ffd5a..L3ffd6e] goto L3ffd6a;
}
procedure `void` `b`(`v2.c` v1 @kind this, `y2.g` v2 @kind object) @signature `Lv2/c;.b:(Ly2/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffd8c.  v0:= `@@okhttp3.internal.http2.ErrorCode.e` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L3ffd90.  call `f`(v2, v0) @signature `Ly2/g;.f:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L3ffd96.  return @kind void;
}
procedure `void` `c`(`v2.c` v1 @kind this) @signature `Lv2/c;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ff548.  v0:= v1.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ff54c.  call `h`(v0) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L3ff552.  return @kind void;
}
procedure `void` `d`(`v2.c` v16 @kind this, `int` v17 , `int` v18 , `int` v19 , `int` v20 , `boolean` v21 , `okhttp3.d` v22 @kind object, `okhttp3.o` v23 @kind object) @signature `Lv2/c;.d:(IIIIZLokhttp3/d;Lokhttp3/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3ff564.  v7:= v16 @kind object;
  #L3ff568.  v8:= v22 @kind object;
  #L3ff56c.  v9:= v23 @kind object;
  #L3ff570.  v0:= v7.`v2.c.g` @type ^`okhttp3.Protocol` @kind object;
  #L3ff574.  if v0 != 0 then goto L3ff804;
  #L3ff578.  v0:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff57c.  call temp:= `a`(v0) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff582.  v0:= temp @kind object;
  #L3ff584.  call temp:= `b`(v0) @signature `Lokhttp3/a;.b:()Ljava/util/List;` @kind virtual;
  #L3ff58a.  v0:= temp @kind object;
  #L3ff58c.  v10:= new `v2.b`;
  #L3ff590.  call `<init>`(v10, v0) @signature `Lv2/b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3ff596.  v1:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff59a.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff5a0.  v1:= temp @kind object;
  #L3ff5a2.  call temp:= `k`(v1) @signature `Lokhttp3/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3ff5a8.  v1:= temp @kind object;
  #L3ff5aa.  if v1 != 0 then goto L3ff64c;
  #L3ff5ae.  v1:= `@@okhttp3.j.j` @type ^`okhttp3.j` @kind object;
  #L3ff5b2.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3ff5b8.  v0:= temp;
  #L3ff5ba.  if v0 == 0 then goto L3ff632;
  #L3ff5be.  v0:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff5c2.  call temp:= `a`(v0) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff5c8.  v0:= temp @kind object;
  #L3ff5ca.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ff5d0.  v0:= temp @kind object;
  #L3ff5d2.  call temp:= `l`(v0) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ff5d8.  v0:= temp @kind object;
  #L3ff5da.  call temp:= `j`() @signature `Lz2/f;.j:()Lz2/f;` @kind static;
  #L3ff5e0.  v1:= temp @kind object;
  #L3ff5e2.  call temp:= `n`(v1, v0) @signature `Lz2/f;.n:(Ljava/lang/String;)Z` @kind virtual;
  #L3ff5e8.  v1:= temp;
  #L3ff5ea.  if v1 == 0 then goto L3ff5f0;
  #L3ff5ee.  goto L3ff670;
  #L3ff5f0.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L3ff5f4.  v2:= new `java.net.UnknownServiceException`;
  #L3ff5f8.  v3:= new `java.lang.StringBuilder`;
  #L3ff5fc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ff602.  v4:= "CLEARTEXT communication to " @kind object;
  #L3ff606.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff60c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff612.  v0:= " not permitted by network security policy" @kind object;
  #L3ff616.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff61c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ff622.  v0:= temp @kind object;
  #L3ff624.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff62a.  call `<init>`(v1, v2) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L3ff630.  throw v1;
  #L3ff632.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L3ff636.  v1:= new `java.net.UnknownServiceException`;
  #L3ff63a.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L3ff63e.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff644.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L3ff64a.  throw v0;
  #L3ff64c.  v0:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff650.  call temp:= `a`(v0) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff656.  v0:= temp @kind object;
  #L3ff658.  call temp:= `f`(v0) @signature `Lokhttp3/a;.f:()Ljava/util/List;` @kind virtual;
  #L3ff65e.  v0:= temp @kind object;
  #L3ff660.  v1:= `@@okhttp3.Protocol.e` @type ^`okhttp3.Protocol` @kind object;
  #L3ff664.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3ff66a.  v0:= temp;
  #L3ff66c.  if v0 != 0 then goto L3ff7ea;
  #L3ff670.  v11:= 0I;
  #L3ff672.  v12:= v11 @kind object;
  #L3ff674.  v0:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff678.  call temp:= `c`(v0) @signature `Lokhttp3/a0;.c:()Z` @kind virtual;
  #L3ff67e.  v0:= temp;
  #L3ff680.  if v0 == 0 then goto L3ff6b6;
  #L3ff684.  v1:= v16 @kind object;
  #L3ff688.  v2:= v17;
  #L3ff68c.  v3:= v18;
  #L3ff690.  v4:= v19;
  #L3ff694.  v5:= v22 @kind object;
  #L3ff698.  v6:= v23 @kind object;
  #L3ff69c.  call `g`(v1, v2, v3, v4, v5, v6) @signature `Lv2/c;.g:(IIILokhttp3/d;Lokhttp3/o;)V` @kind direct;
  #L3ff6a2.  v0:= v7.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ff6a6.  if v0 != 0 then goto L3ff6ac;
  #L3ff6aa.  goto L3ff6f0;
  #L3ff6ac.  v13:= v17;
  #L3ff6b0.  v14:= v18;
  #L3ff6b4.  goto L3ff6c4;
  #L3ff6b6.  v13:= v17;
  #L3ff6ba.  v14:= v18;
  #L3ff6be.  call `e`(v7, v13, v14, v8, v9) @signature `Lv2/c;.e:(IILokhttp3/d;Lokhttp3/o;)V` @kind direct;
  #L3ff6c4.  v15:= v20;
  #L3ff6c8.  call `j`(v7, v10, v15, v8, v9) @signature `Lv2/c;.j:(Lv2/b;ILokhttp3/d;Lokhttp3/o;)V` @kind direct;
  #L3ff6ce.  v0:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff6d2.  call temp:= `d`(v0) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3ff6d8.  v0:= temp @kind object;
  #L3ff6da.  v1:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff6de.  call temp:= `b`(v1) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3ff6e4.  v1:= temp @kind object;
  #L3ff6e6.  v2:= v7.`v2.c.g` @type ^`okhttp3.Protocol` @kind object;
  #L3ff6ea.  call `d`(v9, v8, v0, v1, v2) @signature `Lokhttp3/o;.d:(Lokhttp3/d;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L3ff6f0.  v0:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff6f4.  call temp:= `c`(v0) @signature `Lokhttp3/a0;.c:()Z` @kind virtual;
  #L3ff6fa.  v0:= temp;
  #L3ff6fc.  if v0 == 0 then goto L3ff724;
  #L3ff700.  v0:= v7.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ff704.  if v0 == 0 then goto L3ff70a;
  #L3ff708.  goto L3ff724;
  #L3ff70a.  v0:= new `java.net.ProtocolException`;
  #L3ff70e.  v1:= "Too many tunnel connections attempted: 21" @kind object;
  #L3ff712.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff718.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L3ff71c.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L3ff722.  throw v1;
  #L3ff724.  v0:= v7.`v2.c.h` @type ^`y2.e` @kind object;
  #L3ff728.  if v0 == 0 then goto L3ff74c;
  #L3ff72c.  v1:= v7.`v2.c.b` @type ^`okhttp3.i` @kind object;
  #L3ff730.  @monitorenter v1
  #L3ff732.  v0:= v7.`v2.c.h` @type ^`y2.e` @kind object;
  #L3ff736.  call temp:= `W`(v0) @signature `Ly2/e;.W:()I` @kind virtual;
  #L3ff73c.  v0:= temp;
  #L3ff73e.  v7.`v2.c.m` @type ^`int` := v0;
  #L3ff742.  @monitorexit v1
  #L3ff744.  goto L3ff74c;
  #L3ff746.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ff748.  @monitorexit v1
  #L3ff74a.  throw v0;
  #L3ff74c.  return @kind void;
  #L3ff74e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3ff750.  goto L3ff764;
  #L3ff752.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3ff754.  goto L3ff760;
  #L3ff756.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3ff758.  v13:= v17;
  #L3ff75c.  v14:= v18;
  #L3ff760.  v15:= v20;
  #L3ff764.  v1:= v7.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3ff768.  call `h`(v1) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L3ff76e.  v1:= v7.`v2.c.d` @type ^`java.net.Socket` @kind object;
  #L3ff772.  call `h`(v1) @signature `Lt2/c;.h:(Ljava/net/Socket;)V` @kind static;
  #L3ff778.  v7.`v2.c.e` @type ^`java.net.Socket` := v11 @kind object;
  #L3ff77c.  v7.`v2.c.d` @type ^`java.net.Socket` := v11 @kind object;
  #L3ff780.  v7.`v2.c.i` @type ^`okio.e` := v11 @kind object;
  #L3ff784.  v7.`v2.c.j` @type ^`okio.d` := v11 @kind object;
  #L3ff788.  v7.`v2.c.f` @type ^`okhttp3.p` := v11 @kind object;
  #L3ff78c.  v7.`v2.c.g` @type ^`okhttp3.Protocol` := v11 @kind object;
  #L3ff790.  v7.`v2.c.h` @type ^`y2.e` := v11 @kind object;
  #L3ff794.  v1:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff798.  call temp:= `d`(v1) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3ff79e.  v3:= temp @kind object;
  #L3ff7a0.  v1:= v7.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff7a4.  call temp:= `b`(v1) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3ff7aa.  v4:= temp @kind object;
  #L3ff7ac.  v5:= 0I;
  #L3ff7ae.  v1:= v23 @kind object;
  #L3ff7b2.  v2:= v22 @kind object;
  #L3ff7b6.  v6:= v0 @kind object;
  #L3ff7b8.  call `e`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/o;.e:(Lokhttp3/d;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;Ljava/io/IOException;)V` @kind virtual;
  #L3ff7be.  if v12 != 0 then goto L3ff7ce;
  #L3ff7c2.  v12:= new `okhttp3.internal.connection.RouteException`;
  #L3ff7c6.  call `<init>`(v12, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L3ff7cc.  goto L3ff7d4;
  #L3ff7ce.  call `a`(v12, v0) @signature `Lokhttp3/internal/connection/RouteException;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L3ff7d4.  if v21 == 0 then goto L3ff7e8;
  #L3ff7d8.  call temp:= `b`(v10, v0) @signature `Lv2/b;.b:(Ljava/io/IOException;)Z` @kind virtual;
  #L3ff7de.  v0:= temp;
  #L3ff7e0.  if v0 == 0 then goto L3ff7e8;
  #L3ff7e4.  goto L3ff674;
  #L3ff7e8.  throw v12;
  #L3ff7ea.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L3ff7ee.  v1:= new `java.net.UnknownServiceException`;
  #L3ff7f2.  v2:= "H2_PRIOR_KNOWLEDGE cannot be used with HTTPS" @kind object;
  #L3ff7f6.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff7fc.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L3ff802.  throw v0;
  #L3ff804.  v0:= new `java.lang.IllegalStateException`;
  #L3ff808.  v1:= "already connected" @kind object;
  #L3ff80c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff812.  throw v0;
  catch `java.io.IOException` @[L3ff674..L3ff6a6] goto L3ff756;
  catch `java.io.IOException` @[L3ff6be..L3ff6c4] goto L3ff752;
  catch `java.io.IOException` @[L3ff6c8..L3ff6f0] goto L3ff74e;
  catch `java.lang.Throwable` @[L3ff732..L3ff74a] goto L3ff746;
}
procedure `okhttp3.p` `k`(`v2.c` v1 @kind this) @signature `Lv2/c;.k:()Lokhttp3/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ff1d8.  v0:= v1.`v2.c.f` @type ^`okhttp3.p` @kind object;
  #L3ff1dc.  return v0 @kind object;
}
procedure `boolean` `l`(`v2.c` v4 @kind this, `okhttp3.a` v5 @kind object, `okhttp3.a0` v6 @kind object) @signature `Lv2/c;.l:(Lokhttp3/a;Lokhttp3/a0;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fedbc.  v0:= v4.`v2.c.n` @type ^`java.util.List` @kind object;
  #L3fedc0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3fedc6.  v0:= temp;
  #L3fedc8.  v1:= v4.`v2.c.m` @type ^`int`;
  #L3fedcc.  v2:= 0I;
  #L3fedce.  if v0 >= v1 then goto L3fef06;
  #L3fedd2.  v0:= v4.`v2.c.k` @type ^`boolean` @kind boolean;
  #L3fedd6.  if v0 == 0 then goto L3fedde;
  #L3fedda.  goto L3fef06;
  #L3fedde.  v0:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L3fede2.  v1:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3fede6.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3fedec.  v1:= temp @kind object;
  #L3fedee.  call temp:= `g`(v0, v1, v5) @signature `Lt2/a;.g:(Lokhttp3/a;Lokhttp3/a;)Z` @kind virtual;
  #L3fedf4.  v0:= temp;
  #L3fedf6.  if v0 != 0 then goto L3fedfc;
  #L3fedfa.  return v2;
  #L3fedfc.  call temp:= `l`(v5) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3fee02.  v0:= temp @kind object;
  #L3fee04.  call temp:= `l`(v0) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3fee0a.  v0:= temp @kind object;
  #L3fee0c.  call temp:= `p`(v4) @signature `Lv2/c;.p:()Lokhttp3/a0;` @kind virtual;
  #L3fee12.  v1:= temp @kind object;
  #L3fee14.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3fee1a.  v1:= temp @kind object;
  #L3fee1c.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3fee22.  v1:= temp @kind object;
  #L3fee24.  call temp:= `l`(v1) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3fee2a.  v1:= temp @kind object;
  #L3fee2c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fee32.  v0:= temp;
  #L3fee34.  v1:= 1I;
  #L3fee36.  if v0 == 0 then goto L3fee3c;
  #L3fee3a.  return v1;
  #L3fee3c.  v0:= v4.`v2.c.h` @type ^`y2.e` @kind object;
  #L3fee40.  if v0 != 0 then goto L3fee46;
  #L3fee44.  return v2;
  #L3fee46.  if v6 != 0 then goto L3fee4c;
  #L3fee4a.  return v2;
  #L3fee4c.  call temp:= `b`(v6) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3fee52.  v0:= temp @kind object;
  #L3fee54.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3fee5a.  v0:= temp @kind object;
  #L3fee5c.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L3fee60.  if v0 == v3 then goto L3fee66;
  #L3fee64.  return v2;
  #L3fee66.  v0:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3fee6a.  call temp:= `b`(v0) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3fee70.  v0:= temp @kind object;
  #L3fee72.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3fee78.  v0:= temp @kind object;
  #L3fee7a.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L3fee7e.  if v0 == v3 then goto L3fee84;
  #L3fee82.  return v2;
  #L3fee84.  v0:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3fee88.  call temp:= `d`(v0) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3fee8e.  v0:= temp @kind object;
  #L3fee90.  call temp:= `d`(v6) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3fee96.  v3:= temp @kind object;
  #L3fee98.  call temp:= `equals`(v0, v3) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fee9e.  v0:= temp;
  #L3feea0.  if v0 != 0 then goto L3feea6;
  #L3feea4.  return v2;
  #L3feea6.  call temp:= `a`(v6) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3feeac.  v6:= temp @kind object;
  #L3feeae.  call temp:= `e`(v6) @signature `Lokhttp3/a;.e:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L3feeb4.  v6:= temp @kind object;
  #L3feeb6.  v0:= `@@b3.d.a` @type ^`b3.d` @kind object;
  #L3feeba.  if v6 == v0 then goto L3feec0;
  #L3feebe.  return v2;
  #L3feec0.  call temp:= `l`(v5) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3feec6.  v6:= temp @kind object;
  #L3feec8.  call temp:= `s`(v4, v6) @signature `Lv2/c;.s:(Lokhttp3/r;)Z` @kind virtual;
  #L3feece.  v6:= temp;
  #L3feed0.  if v6 != 0 then goto L3feed6;
  #L3feed4.  return v2;
  #L3feed6.  call temp:= `a`(v5) @signature `Lokhttp3/a;.a:()Lokhttp3/f;` @kind virtual;
  #L3feedc.  v6:= temp @kind object;
  #L3feede.  call temp:= `l`(v5) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3feee4.  v5:= temp @kind object;
  #L3feee6.  call temp:= `l`(v5) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3feeec.  v5:= temp @kind object;
  #L3feeee.  call temp:= `k`(v4) @signature `Lv2/c;.k:()Lokhttp3/p;` @kind virtual;
  #L3feef4.  v0:= temp @kind object;
  #L3feef6.  call temp:= `c`(v0) @signature `Lokhttp3/p;.c:()Ljava/util/List;` @kind virtual;
  #L3feefc.  v0:= temp @kind object;
  #L3feefe.  call `a`(v6, v5, v0) @signature `Lokhttp3/f;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L3fef04.  return v1;
  #L3fef06.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L3feed6..L3fef04] goto L3fef06;
}
procedure `boolean` `m`(`v2.c` v4 @kind this, `boolean` v5 ) @signature `Lv2/c;.m:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fef28.  v0:= v4.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3fef2c.  call temp:= `isClosed`(v0) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L3fef32.  v0:= temp;
  #L3fef34.  v1:= 0I;
  #L3fef36.  if v0 != 0 then goto L3fefc6;
  #L3fef3a.  v0:= v4.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3fef3e.  call temp:= `isInputShutdown`(v0) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L3fef44.  v0:= temp;
  #L3fef46.  if v0 != 0 then goto L3fefc6;
  #L3fef4a.  v0:= v4.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3fef4e.  call temp:= `isOutputShutdown`(v0) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L3fef54.  v0:= temp;
  #L3fef56.  if v0 == 0 then goto L3fef5c;
  #L3fef5a.  goto L3fefc6;
  #L3fef5c.  v0:= v4.`v2.c.h` @type ^`y2.e` @kind object;
  #L3fef60.  v2:= 1I;
  #L3fef62.  if v0 == 0 then goto L3fef72;
  #L3fef66.  call temp:= `V`(v0) @signature `Ly2/e;.V:()Z` @kind virtual;
  #L3fef6c.  v5:= temp;
  #L3fef6e.  v5:= v5 ^~ v2 @kind int;
  #L3fef70.  return v5;
  #L3fef72.  if v5 == 0 then goto L3fefc4;
  #L3fef76.  v5:= v4.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3fef7a.  call temp:= `getSoTimeout`(v5) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L3fef80.  v5:= temp;
  #L3fef82.  v0:= v4.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3fef86.  call `setSoTimeout`(v0, v2) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3fef8c.  v0:= v4.`v2.c.i` @type ^`okio.e` @kind object;
  #L3fef90.  call temp:= `n`(v0) @signature `Lokio/e;.n:()Z` @kind interface;
  #L3fef96.  v0:= temp;
  #L3fef98.  if v0 == 0 then goto L3fefa8;
  #L3fef9c.  v0:= v4.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3fefa0.  call `setSoTimeout`(v0, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3fefa6.  return v1;
  #L3fefa8.  v0:= v4.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3fefac.  call `setSoTimeout`(v0, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3fefb2.  return v2;
  #L3fefb4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fefb6.  v3:= v4.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3fefba.  call `setSoTimeout`(v3, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3fefc0.  throw v0;
  #L3fefc2.  return v1;
  #L3fefc4.  return v2;
  #L3fefc6.  return v1;
  catch `java.net.SocketTimeoutException` @[L3fef76..L3fef82] goto L3fefc4;
  catch `java.io.IOException` @[L3fef76..L3fef82] goto L3fefc2;
  catch `java.lang.Throwable` @[L3fef82..L3fef98] goto L3fefb4;
  catch `java.net.SocketTimeoutException` @[L3fef9c..L3fefc2] goto L3fefc4;
  catch `java.io.IOException` @[L3fef9c..L3fefc2] goto L3fefc2;
}
procedure `boolean` `n`(`v2.c` v1 @kind this) @signature `Lv2/c;.n:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3feffc.  v0:= v1.`v2.c.h` @type ^`y2.e` @kind object;
  #L3ff000.  if v0 == 0 then goto L3ff008;
  #L3ff004.  v0:= 1I;
  #L3ff006.  goto L3ff00a;
  #L3ff008.  v0:= 0I;
  #L3ff00a.  return v0;
}
procedure `w2.c` `o`(`v2.c` v4 @kind this, `okhttp3.u` v5 @kind object, `okhttp3.s$a` v6 @kind object, `v2.f` v7 @kind object) @signature `Lv2/c;.o:(Lokhttp3/u;Lokhttp3/s$a;Lv2/f;)Lw2/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ffe24.  v0:= v4.`v2.c.h` @type ^`y2.e` @kind object;
  #L3ffe28.  if v0 == 0 then goto L3ffe3c;
  #L3ffe2c.  v0:= new `y2.d`;
  #L3ffe30.  v1:= v4.`v2.c.h` @type ^`y2.e` @kind object;
  #L3ffe34.  call `<init>`(v0, v5, v6, v7, v1) @signature `Ly2/d;.<init>:(Lokhttp3/u;Lokhttp3/s$a;Lv2/f;Ly2/e;)V` @kind direct;
  #L3ffe3a.  return v0 @kind object;
  #L3ffe3c.  v0:= v4.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3ffe40.  call temp:= `a`(v6) @signature `Lokhttp3/s$a;.a:()I` @kind interface;
  #L3ffe46.  v1:= temp;
  #L3ffe48.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3ffe4e.  v0:= v4.`v2.c.i` @type ^`okio.e` @kind object;
  #L3ffe52.  call temp:= `e`(v0) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3ffe58.  v0:= temp @kind object;
  #L3ffe5a.  call temp:= `a`(v6) @signature `Lokhttp3/s$a;.a:()I` @kind interface;
  #L3ffe60.  v1:= temp;
  #L3ffe62.  v1:= (`long`) v1 @kind i2l;
  #L3ffe64.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3ffe68.  call temp:= `g`(v0, v1, v3) @signature `Lokio/r;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/r;` @kind virtual;
  #L3ffe6e.  v0:= v4.`v2.c.j` @type ^`okio.d` @kind object;
  #L3ffe72.  call temp:= `e`(v0) @signature `Lokio/p;.e:()Lokio/r;` @kind interface;
  #L3ffe78.  v0:= temp @kind object;
  #L3ffe7a.  call temp:= `b`(v6) @signature `Lokhttp3/s$a;.b:()I` @kind interface;
  #L3ffe80.  v6:= temp;
  #L3ffe82.  v1:= (`long`) v6 @kind i2l;
  #L3ffe84.  call temp:= `g`(v0, v1, v3) @signature `Lokio/r;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/r;` @kind virtual;
  #L3ffe8a.  v6:= new `x2.a`;
  #L3ffe8e.  v0:= v4.`v2.c.i` @type ^`okio.e` @kind object;
  #L3ffe92.  v1:= v4.`v2.c.j` @type ^`okio.d` @kind object;
  #L3ffe96.  call `<init>`(v6, v5, v7, v0, v1) @signature `Lx2/a;.<init>:(Lokhttp3/u;Lv2/f;Lokio/e;Lokio/d;)V` @kind direct;
  #L3ffe9c.  return v6 @kind object;
}
procedure `okhttp3.a0` `p`(`v2.c` v1 @kind this) @signature `Lv2/c;.p:()Lokhttp3/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ff4ec.  v0:= v1.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff4f0.  return v0 @kind object;
}
procedure `java.net.Socket` `q`(`v2.c` v1 @kind this) @signature `Lv2/c;.q:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ff1c0.  v0:= v1.`v2.c.e` @type ^`java.net.Socket` @kind object;
  #L3ff1c4.  return v0 @kind object;
}
procedure `boolean` `s`(`v2.c` v4 @kind this, `okhttp3.r` v5 @kind object) @signature `Lv2/c;.s:(Lokhttp3/r;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff01c.  call temp:= `x`(v5) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L3ff022.  v0:= temp;
  #L3ff024.  v1:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff028.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff02e.  v1:= temp @kind object;
  #L3ff030.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ff036.  v1:= temp @kind object;
  #L3ff038.  call temp:= `x`(v1) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L3ff03e.  v1:= temp;
  #L3ff040.  v2:= 0I;
  #L3ff042.  if v0 == v1 then goto L3ff048;
  #L3ff046.  return v2;
  #L3ff048.  call temp:= `l`(v5) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ff04e.  v0:= temp @kind object;
  #L3ff050.  v1:= v4.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff054.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff05a.  v1:= temp @kind object;
  #L3ff05c.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ff062.  v1:= temp @kind object;
  #L3ff064.  call temp:= `l`(v1) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ff06a.  v1:= temp @kind object;
  #L3ff06c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ff072.  v0:= temp;
  #L3ff074.  v1:= 1I;
  #L3ff076.  if v0 != 0 then goto L3ff0b6;
  #L3ff07a.  v0:= v4.`v2.c.f` @type ^`okhttp3.p` @kind object;
  #L3ff07e.  if v0 == 0 then goto L3ff0b4;
  #L3ff082.  v0:= `@@b3.d.a` @type ^`b3.d` @kind object;
  #L3ff086.  call temp:= `l`(v5) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ff08c.  v5:= temp @kind object;
  #L3ff08e.  v3:= v4.`v2.c.f` @type ^`okhttp3.p` @kind object;
  #L3ff092.  call temp:= `c`(v3) @signature `Lokhttp3/p;.c:()Ljava/util/List;` @kind virtual;
  #L3ff098.  v3:= temp @kind object;
  #L3ff09a.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ff0a0.  v3:= temp @kind object;
  #L3ff0a2.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L3ff0a6.  call temp:= `c`(v0, v5, v3) @signature `Lb3/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L3ff0ac.  v5:= temp;
  #L3ff0ae.  if v5 == 0 then goto L3ff0b4;
  #L3ff0b2.  v2:= 1I;
  #L3ff0b4.  return v2;
  #L3ff0b6.  return v1;
}
procedure `java.lang.String` `toString`(`v2.c` v2 @kind this) @signature `Lv2/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ff0c8.  v0:= new `java.lang.StringBuilder`;
  #L3ff0cc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ff0d2.  v1:= "Connection{" @kind object;
  #L3ff0d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff0dc.  v1:= v2.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff0e0.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff0e6.  v1:= temp @kind object;
  #L3ff0e8.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ff0ee.  v1:= temp @kind object;
  #L3ff0f0.  call temp:= `l`(v1) @signature `Lokhttp3/r;.l:()Ljava/lang/String;` @kind virtual;
  #L3ff0f6.  v1:= temp @kind object;
  #L3ff0f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff0fe.  v1:= ":" @kind object;
  #L3ff102.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff108.  v1:= v2.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff10c.  call temp:= `a`(v1) @signature `Lokhttp3/a0;.a:()Lokhttp3/a;` @kind virtual;
  #L3ff112.  v1:= temp @kind object;
  #L3ff114.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/r;` @kind virtual;
  #L3ff11a.  v1:= temp @kind object;
  #L3ff11c.  call temp:= `x`(v1) @signature `Lokhttp3/r;.x:()I` @kind virtual;
  #L3ff122.  v1:= temp;
  #L3ff124.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff12a.  v1:= ", proxy=" @kind object;
  #L3ff12e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff134.  v1:= v2.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff138.  call temp:= `b`(v1) @signature `Lokhttp3/a0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3ff13e.  v1:= temp @kind object;
  #L3ff140.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff146.  v1:= " hostAddress=" @kind object;
  #L3ff14a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff150.  v1:= v2.`v2.c.c` @type ^`okhttp3.a0` @kind object;
  #L3ff154.  call temp:= `d`(v1) @signature `Lokhttp3/a0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3ff15a.  v1:= temp @kind object;
  #L3ff15c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff162.  v1:= " cipherSuite=" @kind object;
  #L3ff166.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff16c.  v1:= v2.`v2.c.f` @type ^`okhttp3.p` @kind object;
  #L3ff170.  if v1 == 0 then goto L3ff17e;
  #L3ff174.  call temp:= `a`(v1) @signature `Lokhttp3/p;.a:()Lokhttp3/g;` @kind virtual;
  #L3ff17a.  v1:= temp @kind object;
  #L3ff17c.  goto L3ff182;
  #L3ff17e.  v1:= "none" @kind object;
  #L3ff182.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff188.  v1:= " protocol=" @kind object;
  #L3ff18c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff192.  v1:= v2.`v2.c.g` @type ^`okhttp3.Protocol` @kind object;
  #L3ff196.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff19c.  v1:= 125I;
  #L3ff1a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff1a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ff1ac.  v0:= temp @kind object;
  #L3ff1ae.  return v0 @kind object;
}
