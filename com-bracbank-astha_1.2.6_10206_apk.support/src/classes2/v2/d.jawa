record `v2.d` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `v2.d.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v2.d` v1 @kind this) @signature `Lv2/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ffee4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ffeea.  v0:= new `java.util.LinkedHashSet`;
  #L3ffeee.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L3ffef4.  v1.`v2.d.a` @type ^`java.util.Set` := v0 @kind object;
  #L3ffef8.  return @kind void;
}
procedure `void` `a`(`v2.d` v1 @kind this, `okhttp3.a0` v2 @kind object) @signature `Lv2/d;.a:(Lokhttp3/a0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fff0c.  @monitorenter v1
  #L3fff0e.  v0:= v1.`v2.d.a` @type ^`java.util.Set` @kind object;
  #L3fff12.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3fff18.  @monitorexit v1
  #L3fff1a.  return @kind void;
  #L3fff1c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fff1e.  @monitorexit v1
  #L3fff20.  throw v2;
  catch `java.lang.Throwable` @[L3fff0e..L3fff18] goto L3fff1c;
}
procedure `void` `b`(`v2.d` v1 @kind this, `okhttp3.a0` v2 @kind object) @signature `Lv2/d;.b:(Lokhttp3/a0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fff40.  @monitorenter v1
  #L3fff42.  v0:= v1.`v2.d.a` @type ^`java.util.Set` @kind object;
  #L3fff46.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3fff4c.  @monitorexit v1
  #L3fff4e.  return @kind void;
  #L3fff50.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fff52.  @monitorexit v1
  #L3fff54.  throw v2;
  catch `java.lang.Throwable` @[L3fff42..L3fff4c] goto L3fff50;
}
procedure `boolean` `c`(`v2.d` v1 @kind this, `okhttp3.a0` v2 @kind object) @signature `Lv2/d;.c:(Lokhttp3/a0;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffeb0.  @monitorenter v1
  #L3ffeb2.  v0:= v1.`v2.d.a` @type ^`java.util.Set` @kind object;
  #L3ffeb6.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3ffebc.  v2:= temp;
  #L3ffebe.  @monitorexit v1
  #L3ffec0.  return v2;
  #L3ffec2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ffec4.  @monitorexit v1
  #L3ffec6.  throw v2;
  catch `java.lang.Throwable` @[L3ffeb2..L3ffebe] goto L3ffec2;
}
