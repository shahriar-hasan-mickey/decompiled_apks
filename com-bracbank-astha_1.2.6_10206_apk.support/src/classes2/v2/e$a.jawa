record `v2.e$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `v2.e$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `v2.e$a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`v2.e$a` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lv2/e$a;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L400008.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40000e.  v0:= 0I;
  #L400010.  v1.`v2.e$a.b` @type ^`int` := v0;
  #L400014.  v1.`v2.e$a.a` @type ^`java.util.List` := v2 @kind object;
  #L400018.  return @kind void;
}
procedure `java.util.List` `a`(`v2.e$a` v2 @kind this) @signature `Lv2/e$a;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fffa0.  v0:= new `java.util.ArrayList`;
  #L3fffa4.  v1:= v2.`v2.e$a.a` @type ^`java.util.List` @kind object;
  #L3fffa8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3fffae.  return v0 @kind object;
}
procedure `boolean` `b`(`v2.e$a` v2 @kind this) @signature `Lv2/e$a;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fff74.  v0:= v2.`v2.e$a.b` @type ^`int`;
  #L3fff78.  v1:= v2.`v2.e$a.a` @type ^`java.util.List` @kind object;
  #L3fff7c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3fff82.  v1:= temp;
  #L3fff84.  if v0 >= v1 then goto L3fff8c;
  #L3fff88.  v0:= 1I;
  #L3fff8a.  goto L3fff8e;
  #L3fff8c.  v0:= 0I;
  #L3fff8e.  return v0;
}
procedure `okhttp3.a0` `c`(`v2.e$a` v3 @kind this) @signature `Lv2/e$a;.c:()Lokhttp3/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fffc0.  call temp:= `b`(v3) @signature `Lv2/e$a;.b:()Z` @kind virtual;
  #L3fffc6.  v0:= temp;
  #L3fffc8.  if v0 == 0 then goto L3fffea;
  #L3fffcc.  v0:= v3.`v2.e$a.a` @type ^`java.util.List` @kind object;
  #L3fffd0.  v1:= v3.`v2.e$a.b` @type ^`int`;
  #L3fffd4.  v2:= v1 + 1;
  #L3fffd8.  v3.`v2.e$a.b` @type ^`int` := v2;
  #L3fffdc.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3fffe2.  v0:= temp @kind object;
  #L3fffe4.  v0:= (`okhttp3.a0`) v0 @kind object;
  #L3fffe8.  return v0 @kind object;
  #L3fffea.  v0:= new `java.util.NoSuchElementException`;
  #L3fffee.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3ffff4.  throw v0;
}
