record `v2.a` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.s` @kind interface {
  `okhttp3.u` `v2.a.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`v2.a` v0 @kind this, `okhttp3.u` v1 @kind object) @signature `Lv2/a;.<init>:(Lokhttp3/u;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3febe0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3febe6.  v0.`v2.a.a` @type ^`okhttp3.u` := v1 @kind object;
  #L3febea.  return @kind void;
}
procedure `okhttp3.y` `a`(`v2.a` v5 @kind this, `okhttp3.s$a` v6 @kind object) @signature `Lv2/a;.a:(Lokhttp3/s$a;)Lokhttp3/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3feb84.  v0:= v6 @kind object;
  #L3feb86.  v0:= (`w2.g`) v0 @kind object;
  #L3feb8a.  call temp:= `g`(v0) @signature `Lw2/g;.g:()Lokhttp3/w;` @kind virtual;
  #L3feb90.  v1:= temp @kind object;
  #L3feb92.  call temp:= `k`(v0) @signature `Lw2/g;.k:()Lv2/f;` @kind virtual;
  #L3feb98.  v2:= temp @kind object;
  #L3feb9a.  call temp:= `f`(v1) @signature `Lokhttp3/w;.f:()Ljava/lang/String;` @kind virtual;
  #L3feba0.  v3:= temp @kind object;
  #L3feba2.  v4:= "GET" @kind object;
  #L3feba6.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3febac.  v3:= temp;
  #L3febae.  v3:= v3 ^~ 1;
  #L3febb2.  v4:= v5.`v2.a.a` @type ^`okhttp3.u` @kind object;
  #L3febb6.  call temp:= `i`(v2, v4, v6, v3) @signature `Lv2/f;.i:(Lokhttp3/u;Lokhttp3/s$a;Z)Lw2/c;` @kind virtual;
  #L3febbc.  v6:= temp @kind object;
  #L3febbe.  call temp:= `d`(v2) @signature `Lv2/f;.d:()Lv2/c;` @kind virtual;
  #L3febc4.  v3:= temp @kind object;
  #L3febc6.  call temp:= `j`(v0, v1, v2, v6, v3) @signature `Lw2/g;.j:(Lokhttp3/w;Lv2/f;Lw2/c;Lv2/c;)Lokhttp3/y;` @kind virtual;
  #L3febcc.  v6:= temp @kind object;
  #L3febce.  return v6 @kind object;
}
