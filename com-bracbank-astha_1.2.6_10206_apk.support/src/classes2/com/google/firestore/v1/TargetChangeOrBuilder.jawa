record `com.google.firestore.v1.TargetChangeOrBuilder` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `com.google.protobuf.MessageLiteOrBuilder` @kind interface {
}
procedure `com.google.rpc.Status` `getCause`() @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.getCause:()Lcom/google/rpc/Status;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.protobuf.Timestamp` `getReadTime`() @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.getReadTime:()Lcom/google/protobuf/Timestamp;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.protobuf.ByteString` `getResumeToken`() @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.getResumeToken:()Lcom/google/protobuf/ByteString;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firestore.v1.TargetChange$TargetChangeType` `getTargetChangeType`() @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.getTargetChangeType:()Lcom/google/firestore/v1/TargetChange$TargetChangeType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTargetChangeTypeValue`() @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.getTargetChangeTypeValue:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTargetIds`(`int` v0 ) @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.getTargetIds:(I)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTargetIdsCount`() @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.getTargetIdsCount:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getTargetIdsList`() @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.getTargetIdsList:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasCause`() @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.hasCause:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasReadTime`() @signature `Lcom/google/firestore/v1/TargetChangeOrBuilder;.hasReadTime:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
