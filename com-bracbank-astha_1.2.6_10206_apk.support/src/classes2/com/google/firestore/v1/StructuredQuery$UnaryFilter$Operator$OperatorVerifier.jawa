record `com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator$OperatorVerifier` @kind class @AccessFlag FINAL extends `com.google.protobuf.Internal$EnumVerifier` @kind interface {
}
global `com.google.protobuf.Internal$EnumVerifier` `@@com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator$OperatorVerifier.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firestore/v1/StructuredQuery$UnaryFilter$Operator$OperatorVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L262c9c.  v0:= new `com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator$OperatorVerifier`;
  #L262ca0.  call `<init>`(v0) @signature `Lcom/google/firestore/v1/StructuredQuery$UnaryFilter$Operator$OperatorVerifier;.<init>:()V` @kind direct;
  #L262ca6.  `@@com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator$OperatorVerifier.INSTANCE` @type ^`com.google.protobuf.Internal$EnumVerifier` := v0 @kind object;
  #L262caa.  return @kind void;
}
procedure `void` `<init>`(`com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator$OperatorVerifier` v0 @kind this) @signature `Lcom/google/firestore/v1/StructuredQuery$UnaryFilter$Operator$OperatorVerifier;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L262cbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L262cc2.  return @kind void;
}
procedure `boolean` `isInRange`(`com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator$OperatorVerifier` v0 @kind this, `int` v1 ) @signature `Lcom/google/firestore/v1/StructuredQuery$UnaryFilter$Operator$OperatorVerifier;.isInRange:(I)Z` @AccessFlag PUBLIC {
    temp;

  #L262c78.  call temp:= `forNumber`(v1) @signature `Lcom/google/firestore/v1/StructuredQuery$UnaryFilter$Operator;.forNumber:(I)Lcom/google/firestore/v1/StructuredQuery$UnaryFilter$Operator;` @kind static;
  #L262c7e.  v1:= temp @kind object;
  #L262c80.  if v1 == 0 then goto L262c88;
  #L262c84.  v1:= 1I;
  #L262c86.  goto L262c8a;
  #L262c88.  v1:= 0I;
  #L262c8a.  return v1;
}
