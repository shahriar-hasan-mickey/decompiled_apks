record `com.google.firestore.bundle.BundledQuery$LimitType$LimitTypeVerifier` @kind class @AccessFlag FINAL extends `com.google.protobuf.Internal$EnumVerifier` @kind interface {
}
global `com.google.protobuf.Internal$EnumVerifier` `@@com.google.firestore.bundle.BundledQuery$LimitType$LimitTypeVerifier.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firestore/bundle/BundledQuery$LimitType$LimitTypeVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23fa10.  v0:= new `com.google.firestore.bundle.BundledQuery$LimitType$LimitTypeVerifier`;
  #L23fa14.  call `<init>`(v0) @signature `Lcom/google/firestore/bundle/BundledQuery$LimitType$LimitTypeVerifier;.<init>:()V` @kind direct;
  #L23fa1a.  `@@com.google.firestore.bundle.BundledQuery$LimitType$LimitTypeVerifier.INSTANCE` @type ^`com.google.protobuf.Internal$EnumVerifier` := v0 @kind object;
  #L23fa1e.  return @kind void;
}
procedure `void` `<init>`(`com.google.firestore.bundle.BundledQuery$LimitType$LimitTypeVerifier` v0 @kind this) @signature `Lcom/google/firestore/bundle/BundledQuery$LimitType$LimitTypeVerifier;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23fa30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23fa36.  return @kind void;
}
procedure `boolean` `isInRange`(`com.google.firestore.bundle.BundledQuery$LimitType$LimitTypeVerifier` v0 @kind this, `int` v1 ) @signature `Lcom/google/firestore/bundle/BundledQuery$LimitType$LimitTypeVerifier;.isInRange:(I)Z` @AccessFlag PUBLIC {
    temp;

  #L23f9ec.  call temp:= `forNumber`(v1) @signature `Lcom/google/firestore/bundle/BundledQuery$LimitType;.forNumber:(I)Lcom/google/firestore/bundle/BundledQuery$LimitType;` @kind static;
  #L23f9f2.  v1:= temp @kind object;
  #L23f9f4.  if v1 == 0 then goto L23f9fc;
  #L23f9f8.  v1:= 1I;
  #L23f9fa.  goto L23f9fe;
  #L23f9fc.  v1:= 0I;
  #L23f9fe.  return v1;
}
