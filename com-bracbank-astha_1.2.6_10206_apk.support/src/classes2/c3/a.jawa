record `c3.a` @kind class @AccessFlag PUBLIC {
}
global `java.lang.Object`[] `@@c3.a.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Class`[] `@@c3.a.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@c3.a.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `long`[] `@@c3.a.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Long`[] `@@c3.a.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `int`[] `@@c3.a.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Integer`[] `@@c3.a.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `short`[] `@@c3.a.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Short`[] `@@c3.a.i` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@c3.a.j` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Byte`[] `@@c3.a.k` @AccessFlag PUBLIC_STATIC_FINAL;
global `double`[] `@@c3.a.l` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Double`[] `@@c3.a.m` @AccessFlag PUBLIC_STATIC_FINAL;
global `float`[] `@@c3.a.n` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Float`[] `@@c3.a.o` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean`[] `@@c3.a.p` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Boolean`[] `@@c3.a.q` @AccessFlag PUBLIC_STATIC_FINAL;
global `char`[] `@@c3.a.r` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Character`[] `@@c3.a.s` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc3/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L13d6e4.  v0:= 0I;
  #L13d6e6.  v1:= new `java.lang.Object`[v0];
  #L13d6ea.  `@@c3.a.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L13d6ee.  v1:= new `java.lang.Class`[v0];
  #L13d6f2.  `@@c3.a.b` @type ^`java.lang.Class`[] := v1 @kind object;
  #L13d6f6.  v1:= new `java.lang.String`[v0];
  #L13d6fa.  `@@c3.a.c` @type ^`java.lang.String`[] := v1 @kind object;
  #L13d6fe.  v1:= new `long`[v0];
  #L13d702.  `@@c3.a.d` @type ^`long`[] := v1 @kind object;
  #L13d706.  v1:= new `java.lang.Long`[v0];
  #L13d70a.  `@@c3.a.e` @type ^`java.lang.Long`[] := v1 @kind object;
  #L13d70e.  v1:= new `int`[v0];
  #L13d712.  `@@c3.a.f` @type ^`int`[] := v1 @kind object;
  #L13d716.  v1:= new `java.lang.Integer`[v0];
  #L13d71a.  `@@c3.a.g` @type ^`java.lang.Integer`[] := v1 @kind object;
  #L13d71e.  v1:= new `short`[v0];
  #L13d722.  `@@c3.a.h` @type ^`short`[] := v1 @kind object;
  #L13d726.  v1:= new `java.lang.Short`[v0];
  #L13d72a.  `@@c3.a.i` @type ^`java.lang.Short`[] := v1 @kind object;
  #L13d72e.  v1:= new `byte`[v0];
  #L13d732.  `@@c3.a.j` @type ^`byte`[] := v1 @kind object;
  #L13d736.  v1:= new `java.lang.Byte`[v0];
  #L13d73a.  `@@c3.a.k` @type ^`java.lang.Byte`[] := v1 @kind object;
  #L13d73e.  v1:= new `double`[v0];
  #L13d742.  `@@c3.a.l` @type ^`double`[] := v1 @kind object;
  #L13d746.  v1:= new `java.lang.Double`[v0];
  #L13d74a.  `@@c3.a.m` @type ^`java.lang.Double`[] := v1 @kind object;
  #L13d74e.  v1:= new `float`[v0];
  #L13d752.  `@@c3.a.n` @type ^`float`[] := v1 @kind object;
  #L13d756.  v1:= new `java.lang.Float`[v0];
  #L13d75a.  `@@c3.a.o` @type ^`java.lang.Float`[] := v1 @kind object;
  #L13d75e.  v1:= new `boolean`[v0];
  #L13d762.  `@@c3.a.p` @type ^`boolean`[] := v1 @kind object;
  #L13d766.  v1:= new `java.lang.Boolean`[v0];
  #L13d76a.  `@@c3.a.q` @type ^`java.lang.Boolean`[] := v1 @kind object;
  #L13d76e.  v1:= new `char`[v0];
  #L13d772.  `@@c3.a.r` @type ^`char`[] := v1 @kind object;
  #L13d776.  v0:= new `java.lang.Character`[v0];
  #L13d77a.  `@@c3.a.s` @type ^`java.lang.Character`[] := v0 @kind object;
  #L13d77e.  return @kind void;
}
procedure `boolean` `a`(`char`[] v0 @kind object) @signature `Lc3/a;.a:([C)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L13d69c.  if v0 == 0 then goto L13d6ac;
  #L13d6a0.  v0:= length @variable v0;
  #L13d6a2.  if v0 != 0 then goto L13d6a8;
  #L13d6a6.  goto L13d6ac;
  #L13d6a8.  v0:= 0I;
  #L13d6aa.  goto L13d6ae;
  #L13d6ac.  v0:= 1I;
  #L13d6ae.  return v0;
}
procedure `boolean` `b`(`java.lang.Object`[] v0 @kind object) @signature `Lc3/a;.b:([Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L13d6c0.  if v0 == 0 then goto L13d6d0;
  #L13d6c4.  v0:= length @variable v0;
  #L13d6c6.  if v0 != 0 then goto L13d6cc;
  #L13d6ca.  goto L13d6d0;
  #L13d6cc.  v0:= 0I;
  #L13d6ce.  goto L13d6d2;
  #L13d6d0.  v0:= 1I;
  #L13d6d2.  return v0;
}
procedure `void` `c`(`byte`[] v2 @kind object) @signature `Lc3/a;.c:([B)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L13d790.  if v2 != 0 then goto L13d796;
  #L13d794.  return @kind void;
  #L13d796.  v0:= 0I;
  #L13d798.  v1:= length @variable v2;
  #L13d79a.  call `d`(v2, v0, v1) @signature `Lc3/a;.d:([BII)V` @kind static;
  #L13d7a0.  return @kind void;
}
procedure `void` `d`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lc3/a;.d:([BII)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L13d7b4.  if v2 != 0 then goto L13d7ba;
  #L13d7b8.  return @kind void;
  #L13d7ba.  if v3 >= 0 then goto L13d7c0;
  #L13d7be.  v3:= 0I;
  #L13d7c0.  v0:= length @variable v2;
  #L13d7c2.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L13d7c8.  v4:= temp;
  #L13d7ca.  v4:= v4 + -1;
  #L13d7ce.  if v4 <= v3 then goto L13d7ec;
  #L13d7d2.  v0:= v2[v4] @kind byte;
  #L13d7d6.  v1:= v2[v3] @kind byte;
  #L13d7da.  v2[v4]:= v1 @kind byte;
  #L13d7de.  v2[v3]:= v0 @kind byte;
  #L13d7e2.  v4:= v4 + -1;
  #L13d7e6.  v3:= v3 + 1;
  #L13d7ea.  goto L13d7ce;
  #L13d7ec.  return @kind void;
}
procedure `void` `e`(`java.lang.Object`[] v2 @kind object) @signature `Lc3/a;.e:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L13d800.  if v2 != 0 then goto L13d806;
  #L13d804.  return @kind void;
  #L13d806.  v0:= 0I;
  #L13d808.  v1:= length @variable v2;
  #L13d80a.  call `f`(v2, v0, v1) @signature `Lc3/a;.f:([Ljava/lang/Object;II)V` @kind static;
  #L13d810.  return @kind void;
}
procedure `void` `f`(`java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lc3/a;.f:([Ljava/lang/Object;II)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L13d824.  if v2 != 0 then goto L13d82a;
  #L13d828.  return @kind void;
  #L13d82a.  if v3 >= 0 then goto L13d830;
  #L13d82e.  v3:= 0I;
  #L13d830.  v0:= length @variable v2;
  #L13d832.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L13d838.  v4:= temp;
  #L13d83a.  v4:= v4 + -1;
  #L13d83e.  if v4 <= v3 then goto L13d85c;
  #L13d842.  v0:= v2[v4] @kind object;
  #L13d846.  v1:= v2[v3] @kind object;
  #L13d84a.  v2[v4]:= v1 @kind object;
  #L13d84e.  v2[v3]:= v0 @kind object;
  #L13d852.  v4:= v4 + -1;
  #L13d856.  v3:= v3 + 1;
  #L13d85a.  goto L13d83e;
  #L13d85c.  return @kind void;
}
