record `a2.c` @kind class @AccessFlag PUBLIC_FINAL {
}
global `a2.a` `@@a2.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La2/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L13b224.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L13b228.  v1:= 0I;
  #L13b22a.  v2:= "io.perfmark.impl.SecretPerfMarkImpl$PerfMarkImpl" @kind object;
  #L13b22e.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L13b234.  v2:= temp @kind object;
  #L13b236.  v3:= v1 @kind object;
  #L13b238.  goto L13b240;
  #L13b23a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13b23c.  v3:= v2 @kind object;
  #L13b23e.  v2:= v1 @kind object;
  #L13b240.  v4:= 0I;
  #L13b242.  v5:= 1I;
  #L13b244.  if v2 == 0 then goto L13b286;
  #L13b248.  v6:= constclass @type ^`a2.a` @kind object;
  #L13b24c.  call temp:= `asSubclass`(v2, v6) @signature `Ljava/lang/Class;.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;` @kind virtual;
  #L13b252.  v2:= temp @kind object;
  #L13b254.  v6:= new `java.lang.Class`[v5];
  #L13b258.  v7:= constclass @type ^`a2.d` @kind object;
  #L13b25c.  v6[v4]:= v7 @kind object;
  #L13b260.  call temp:= `getConstructor`(v2, v6) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L13b266.  v2:= temp @kind object;
  #L13b268.  v6:= new `java.lang.Object`[v5];
  #L13b26c.  v7:= `@@a2.a.a` @type ^`a2.d` @kind object;
  #L13b270.  v6[v4]:= v7 @kind object;
  #L13b274.  call temp:= `newInstance`(v2, v6) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13b27a.  v2:= temp @kind object;
  #L13b27c.  v2:= (`a2.a`) v2 @kind object;
  #L13b280.  goto L13b288;
  #L13b282.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13b284.  v3:= v2 @kind object;
  #L13b286.  v2:= v1 @kind object;
  #L13b288.  if v2 == 0 then goto L13b292;
  #L13b28c.  `@@a2.c.a` @type ^`a2.a` := v2 @kind object;
  #L13b290.  goto L13b2a4;
  #L13b292.  v2:= new `a2.a`;
  #L13b296.  v6:= `@@a2.a.a` @type ^`a2.d` @kind object;
  #L13b29a.  call `<init>`(v2, v6) @signature `La2/a;.<init>:(La2/d;)V` @kind direct;
  #L13b2a0.  `@@a2.c.a` @type ^`a2.a` := v2 @kind object;
  #L13b2a4.  if v3 == 0 then goto L13b352;
  #L13b2a8.  v2:= "io.perfmark.PerfMark.debug" @kind object;
  #L13b2ac.  call temp:= `getBoolean`(v2) @signature `Ljava/lang/Boolean;.getBoolean:(Ljava/lang/String;)Z` @kind static;
  #L13b2b2.  v2:= temp;
  #L13b2b4.  if v2 == 0 then goto L13b352;
  #L13b2b8.  v2:= "java.util.logging.Logger" @kind object;
  #L13b2bc.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L13b2c2.  v2:= temp @kind object;
  #L13b2c4.  v6:= "getLogger" @kind object;
  #L13b2c8.  v7:= new `java.lang.Class`[v5];
  #L13b2cc.  v7[v4]:= v0 @kind object;
  #L13b2d0.  call temp:= `getMethod`(v2, v6, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L13b2d6.  v6:= temp @kind object;
  #L13b2d8.  v7:= new `java.lang.Object`[v5];
  #L13b2dc.  v8:= constclass @type ^`a2.c` @kind object;
  #L13b2e0.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L13b2e6.  v8:= temp @kind object;
  #L13b2e8.  v7[v4]:= v8 @kind object;
  #L13b2ec.  call temp:= `invoke`(v6, v1, v7) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13b2f2.  v6:= temp @kind object;
  #L13b2f4.  v7:= "java.util.logging.Level" @kind object;
  #L13b2f8.  call temp:= `forName`(v7) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L13b2fe.  v7:= temp @kind object;
  #L13b300.  v8:= "FINE" @kind object;
  #L13b304.  call temp:= `getField`(v7, v8) @signature `Ljava/lang/Class;.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L13b30a.  v8:= temp @kind object;
  #L13b30c.  call temp:= `get`(v8, v1) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13b312.  v1:= temp @kind object;
  #L13b314.  v8:= "log" @kind object;
  #L13b318.  v9:= 3I;
  #L13b31a.  v10:= new `java.lang.Class`[v9];
  #L13b31e.  v10[v4]:= v7 @kind object;
  #L13b322.  v10[v5]:= v0 @kind object;
  #L13b326.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L13b32a.  v7:= 2I;
  #L13b32c.  v10[v7]:= v0 @kind object;
  #L13b330.  call temp:= `getMethod`(v2, v8, v10) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L13b336.  v0:= temp @kind object;
  #L13b338.  v2:= new `java.lang.Object`[v9];
  #L13b33c.  v2[v4]:= v1 @kind object;
  #L13b340.  v1:= "Error during PerfMark.<clinit>" @kind object;
  #L13b344.  v2[v5]:= v1 @kind object;
  #L13b348.  v2[v7]:= v3 @kind object;
  #L13b34c.  call temp:= `invoke`(v0, v6, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13b352.  return @kind void;
  catch `java.lang.Throwable` @[L13b22a..L13b236] goto L13b23a;
  catch `java.lang.Throwable` @[L13b248..L13b280] goto L13b282;
  catch `java.lang.Throwable` @[L13b2a8..L13b352] goto L13b352;
}
procedure `void` `<init>`(`a2.c` v0 @kind this) @signature `La2/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L13b384.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13b38a.  return @kind void;
}
procedure `a2.d` `a`(`java.lang.String` v3 @kind object) @signature `La2/c;.a:(Ljava/lang/String;)La2/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L13b1e0.  v0:= `@@a2.c.a` @type ^`a2.a` @kind object;
  #L13b1e4.  v1:= -9223372036854775808L;
  #L13b1e8.  call temp:= `a`(v0, v3, v1) @signature `La2/a;.a:(Ljava/lang/String;J)La2/d;` @kind virtual;
  #L13b1ee.  v3:= temp @kind object;
  #L13b1f0.  return v3 @kind object;
}
procedure `a2.d` `b`(`java.lang.String` v1 @kind object, `long` v2 ) @signature `La2/c;.b:(Ljava/lang/String;J)La2/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13b204.  v0:= `@@a2.c.a` @type ^`a2.a` @kind object;
  #L13b208.  call temp:= `a`(v0, v1, v2) @signature `La2/a;.a:(Ljava/lang/String;J)La2/d;` @kind virtual;
  #L13b20e.  v1:= temp @kind object;
  #L13b210.  return v1 @kind object;
}
procedure `void` `c`(`java.lang.String` v1 @kind object, `a2.d` v2 @kind object) @signature `La2/c;.c:(Ljava/lang/String;La2/d;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13b39c.  v0:= `@@a2.c.a` @type ^`a2.a` @kind object;
  #L13b3a0.  call `b`(v0, v1, v2) @signature `La2/a;.b:(Ljava/lang/String;La2/d;)V` @kind virtual;
  #L13b3a6.  return @kind void;
}
procedure `void` `d`(`a2.b` v1 @kind object) @signature `La2/c;.d:(La2/b;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13b3b8.  v0:= `@@a2.c.a` @type ^`a2.a` @kind object;
  #L13b3bc.  call `c`(v0, v1) @signature `La2/a;.c:(La2/b;)V` @kind virtual;
  #L13b3c2.  return @kind void;
}
procedure `a2.b` `e`() @signature `La2/c;.e:()La2/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13b1c0.  v0:= `@@a2.c.a` @type ^`a2.a` @kind object;
  #L13b1c4.  call temp:= `d`(v0) @signature `La2/a;.d:()La2/b;` @kind virtual;
  #L13b1ca.  v0:= temp @kind object;
  #L13b1cc.  return v0 @kind object;
}
procedure `void` `f`(`java.lang.String` v1 @kind object) @signature `La2/c;.f:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13b3d4.  v0:= `@@a2.c.a` @type ^`a2.a` @kind object;
  #L13b3d8.  call `e`(v0, v1) @signature `La2/a;.e:(Ljava/lang/String;)V` @kind virtual;
  #L13b3de.  return @kind void;
}
procedure `void` `g`(`java.lang.String` v1 @kind object, `a2.d` v2 @kind object) @signature `La2/c;.g:(Ljava/lang/String;La2/d;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13b3f0.  v0:= `@@a2.c.a` @type ^`a2.a` @kind object;
  #L13b3f4.  call `f`(v0, v1, v2) @signature `La2/a;.f:(Ljava/lang/String;La2/d;)V` @kind virtual;
  #L13b3fa.  return @kind void;
}
procedure `void` `h`(`java.lang.String` v1 @kind object) @signature `La2/c;.h:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13b40c.  v0:= `@@a2.c.a` @type ^`a2.a` @kind object;
  #L13b410.  call `g`(v0, v1) @signature `La2/a;.g:(Ljava/lang/String;)V` @kind virtual;
  #L13b416.  return @kind void;
}
procedure `void` `i`(`java.lang.String` v1 @kind object, `a2.d` v2 @kind object) @signature `La2/c;.i:(Ljava/lang/String;La2/d;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13b428.  v0:= `@@a2.c.a` @type ^`a2.a` @kind object;
  #L13b42c.  call `h`(v0, v1, v2) @signature `La2/a;.h:(Ljava/lang/String;La2/d;)V` @kind virtual;
  #L13b432.  return @kind void;
}
