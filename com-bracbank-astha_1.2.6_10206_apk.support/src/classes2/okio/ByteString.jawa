record `okio.ByteString` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface, `java.lang.Comparable` @kind interface {
  `int` `okio.ByteString.a` @AccessFlag TRANSIENT;
  `java.lang.String` `okio.ByteString.b` @AccessFlag TRANSIENT;
  `byte`[] `okio.ByteString.data` @AccessFlag FINAL;
}
global `char`[] `@@okio.ByteString.c` @AccessFlag STATIC_FINAL;
global `okio.ByteString` `@@okio.ByteString.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okio.ByteString.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/ByteString;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3af4b4.  v0:= 16I;
  #L3af4b8.  v0:= new `char`[v0];
  #L3af4bc.  goto L3af4dc;
  #L3af4c2.  `@@okio.ByteString.c` @type ^`char`[] := v0 @kind object;
  #L3af4c6.  v0:= 0I;
  #L3af4c8.  v0:= new `byte`[v0];
  #L3af4cc.  call temp:= `j`(v0) @signature `Lokio/ByteString;.j:([B)Lokio/ByteString;` @kind static;
  #L3af4d2.  v0:= temp @kind object;
  #L3af4d4.  `@@okio.ByteString.d` @type ^`okio.ByteString` := v0 @kind object;
  #L3af4d8.  return @kind void;
  #L3af4da.  
  #L3af4dc.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 97I, 98I, 99I, 100I, 101I, 102I) @kind object;
  #L3af503.  goto L3af4c2;
}
procedure `void` `<init>`(`okio.ByteString` v0 @kind this, `byte`[] v1 @kind object) @signature `Lokio/ByteString;.<init>:([B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3af514.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3af51a.  v0.`okio.ByteString.data` @type ^`byte`[] := v1 @kind object;
  #L3af51e.  return @kind void;
}
procedure `int` `b`(`java.lang.String` v5 @kind object, `int` v6 ) @signature `Lokio/ByteString;.b:(Ljava/lang/String;I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3aed38.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3aed3e.  v0:= temp;
  #L3aed40.  v1:= 0I;
  #L3aed42.  v2:= 0I;
  #L3aed44.  if v1 >= v0 then goto L3aed90;
  #L3aed48.  if v2 != v6 then goto L3aed4e;
  #L3aed4c.  return v1;
  #L3aed4e.  call temp:= `codePointAt`(v5, v1) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L3aed54.  v3:= temp;
  #L3aed56.  call temp:= `isISOControl`(v3) @signature `Ljava/lang/Character;.isISOControl:(I)Z` @kind static;
  #L3aed5c.  v4:= temp;
  #L3aed5e.  if v4 == 0 then goto L3aed72;
  #L3aed62.  v4:= 10I;
  #L3aed66.  if v3 == v4 then goto L3aed72;
  #L3aed6a.  v4:= 13I;
  #L3aed6e.  if v3 != v4 then goto L3aed7c;
  #L3aed72.  v4:= 65533I;
  #L3aed78.  if v3 != v4 then goto L3aed80;
  #L3aed7c.  v5:= -1I;
  #L3aed7e.  return v5;
  #L3aed80.  v2:= v2 + 1;
  #L3aed84.  call temp:= `charCount`(v3) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L3aed8a.  v3:= temp;
  #L3aed8c.  v1:= v1 + v3 @kind int;
  #L3aed8e.  goto L3aed44;
  #L3aed90.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3aed96.  v5:= temp;
  #L3aed98.  return v5;
}
procedure `okio.ByteString` `d`(`java.lang.String` v5 @kind object) @signature `Lokio/ByteString;.d:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3af134.  if v5 == 0 then goto L3af1d0;
  #L3af138.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3af13e.  v0:= temp;
  #L3af140.  v0:= v0 %% 2;
  #L3af144.  if v0 != 0 then goto L3af1a2;
  #L3af148.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3af14e.  v0:= temp;
  #L3af150.  v0:= v0 / 2;
  #L3af154.  v1:= new `byte`[v0];
  #L3af158.  v2:= 0I;
  #L3af15a.  if v2 >= v0 then goto L3af198;
  #L3af15e.  v3:= v2 * 2;
  #L3af162.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3af168.  v4:= temp;
  #L3af16a.  call temp:= `e`(v4) @signature `Lokio/ByteString;.e:(C)I` @kind static;
  #L3af170.  v4:= temp;
  #L3af172.  v4:= v4 ^< 4;
  #L3af176.  v3:= v3 + 1;
  #L3af17a.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3af180.  v3:= temp;
  #L3af182.  call temp:= `e`(v3) @signature `Lokio/ByteString;.e:(C)I` @kind static;
  #L3af188.  v3:= temp;
  #L3af18a.  v4:= v4 + v3 @kind int;
  #L3af18c.  v3:= (`byte`) v4 @kind i2b;
  #L3af18e.  v1[v2]:= v3 @kind byte;
  #L3af192.  v2:= v2 + 1;
  #L3af196.  goto L3af15a;
  #L3af198.  call temp:= `j`(v1) @signature `Lokio/ByteString;.j:([B)Lokio/ByteString;` @kind static;
  #L3af19e.  v5:= temp @kind object;
  #L3af1a0.  return v5 @kind object;
  #L3af1a2.  v0:= new `java.lang.IllegalArgumentException`;
  #L3af1a6.  v1:= new `java.lang.StringBuilder`;
  #L3af1aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3af1b0.  v2:= "Unexpected hex string: " @kind object;
  #L3af1b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af1ba.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af1c0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af1c6.  v5:= temp @kind object;
  #L3af1c8.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af1ce.  throw v0;
  #L3af1d0.  v5:= new `java.lang.IllegalArgumentException`;
  #L3af1d4.  v0:= "hex == null" @kind object;
  #L3af1d8.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af1de.  throw v5;
}
procedure `int` `e`(`char` v3 ) @signature `Lokio/ByteString;.e:(C)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3aee3c.  v0:= 48I;
  #L3aee40.  if v3 < v0 then goto L3aee50;
  #L3aee44.  v1:= 57I;
  #L3aee48.  if v3 > v1 then goto L3aee50;
  #L3aee4c.  v3:= v3 - v0 @kind int;
  #L3aee4e.  return v3;
  #L3aee50.  v0:= 97I;
  #L3aee54.  if v3 < v0 then goto L3aee68;
  #L3aee58.  v1:= 102I;
  #L3aee5c.  if v3 > v1 then goto L3aee68;
  #L3aee60.  v3:= v3 - v0 @kind int;
  #L3aee62.  v3:= v3 + 10;
  #L3aee66.  return v3;
  #L3aee68.  v0:= 65I;
  #L3aee6c.  if v3 < v0 then goto L3aee7a;
  #L3aee70.  v1:= 70I;
  #L3aee74.  if v3 > v1 then goto L3aee7a;
  #L3aee78.  goto L3aee60;
  #L3aee7a.  v0:= new `java.lang.IllegalArgumentException`;
  #L3aee7e.  v1:= new `java.lang.StringBuilder`;
  #L3aee82.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aee88.  v2:= "Unexpected hex digit: " @kind object;
  #L3aee8c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aee92.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aee98.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aee9e.  v3:= temp @kind object;
  #L3aeea0.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aeea6.  throw v0;
}
procedure `okio.ByteString` `f`(`okio.ByteString` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokio/ByteString;.f:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3af1f0.  call temp:= `getInstance`(v2) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L3af1f6.  v2:= temp @kind object;
  #L3af1f8.  v0:= v1.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af1fc.  call temp:= `digest`(v2, v0) @signature `Ljava/security/MessageDigest;.digest:([B)[B` @kind virtual;
  #L3af202.  v2:= temp @kind object;
  #L3af204.  call temp:= `j`(v2) @signature `Lokio/ByteString;.j:([B)Lokio/ByteString;` @kind static;
  #L3af20a.  v2:= temp @kind object;
  #L3af20c.  return v2 @kind object;
  #L3af20e.  v2:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3af210.  v0:= new `java.lang.AssertionError`;
  #L3af214.  call `<init>`(v0, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3af21a.  throw v0;
  catch `java.security.NoSuchAlgorithmException` @[L3af1f0..L3af20c] goto L3af20e;
}
procedure `okio.ByteString` `g`(`java.lang.String` v2 @kind object) @signature `Lokio/ByteString;.g:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3af23c.  if v2 == 0 then goto L3af25c;
  #L3af240.  v0:= new `okio.ByteString`;
  #L3af244.  v1:= `@@okio.s.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3af248.  call temp:= `getBytes`(v2, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3af24e.  v1:= temp @kind object;
  #L3af250.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L3af256.  v0.`okio.ByteString.b` @type ^`java.lang.String` := v2 @kind object;
  #L3af25a.  return v0 @kind object;
  #L3af25c.  v2:= new `java.lang.IllegalArgumentException`;
  #L3af260.  v0:= "s == null" @kind object;
  #L3af264.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af26a.  throw v2;
}
procedure `okio.ByteString` `j`(`byte`[] v1 @kind object) @signature `Lokio/ByteString;.j:([B)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3af27c.  if v1 == 0 then goto L3af298;
  #L3af280.  v0:= new `okio.ByteString`;
  #L3af284.  call temp:= `clone`(v1) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L3af28a.  v1:= temp @kind object;
  #L3af28c.  v1:= (`byte`[]) v1 @kind object;
  #L3af290.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L3af296.  return v0 @kind object;
  #L3af298.  v1:= new `java.lang.IllegalArgumentException`;
  #L3af29c.  v0:= "data == null" @kind object;
  #L3af2a0.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af2a6.  throw v1;
}
procedure `okio.ByteString` `m`(`java.io.InputStream` v4 @kind object, `int` v5 ) @signature `Lokio/ByteString;.m:(Ljava/io/InputStream;I)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3af2b8.  if v4 == 0 then goto L3af326;
  #L3af2bc.  if v5 < 0 then goto L3af2f8;
  #L3af2c0.  v0:= new `byte`[v5];
  #L3af2c4.  v1:= 0I;
  #L3af2c6.  if v1 >= v5 then goto L3af2ec;
  #L3af2ca.  v2:= v5 - v1 @kind int;
  #L3af2ce.  call temp:= `read`(v4, v0, v1, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3af2d4.  v2:= temp;
  #L3af2d6.  v3:= -1I;
  #L3af2d8.  if v2 == v3 then goto L3af2e0;
  #L3af2dc.  v1:= v1 + v2 @kind int;
  #L3af2de.  goto L3af2c6;
  #L3af2e0.  v4:= new `java.io.EOFException`;
  #L3af2e4.  call `<init>`(v4) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3af2ea.  throw v4;
  #L3af2ec.  v4:= new `okio.ByteString`;
  #L3af2f0.  call `<init>`(v4, v0) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L3af2f6.  return v4 @kind object;
  #L3af2f8.  v4:= new `java.lang.IllegalArgumentException`;
  #L3af2fc.  v0:= new `java.lang.StringBuilder`;
  #L3af300.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3af306.  v1:= "byteCount < 0: " @kind object;
  #L3af30a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af310.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af316.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af31c.  v5:= temp @kind object;
  #L3af31e.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af324.  throw v4;
  #L3af326.  v4:= new `java.lang.IllegalArgumentException`;
  #L3af32a.  v5:= "in == null" @kind object;
  #L3af32e.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af334.  throw v4;
}
procedure `void` `readObject`(`okio.ByteString` v2 @kind this, `java.io.ObjectInputStream` v3 @kind object) @signature `Lokio/ByteString;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3af530.  call temp:= `readInt`(v3) @signature `Ljava/io/ObjectInputStream;.readInt:()I` @kind virtual;
  #L3af536.  v0:= temp;
  #L3af538.  call temp:= `m`(v3, v0) @signature `Lokio/ByteString;.m:(Ljava/io/InputStream;I)Lokio/ByteString;` @kind static;
  #L3af53e.  v3:= temp @kind object;
  #L3af540.  v0:= constclass @type ^`okio.ByteString` @kind object;
  #L3af544.  v1:= "data" @kind object;
  #L3af548.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L3af54e.  v0:= temp @kind object;
  #L3af550.  v1:= 1I;
  #L3af552.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L3af558.  v3:= v3.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af55c.  call `set`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L3af562.  return @kind void;
  #L3af564.  v3:= new `java.lang.AssertionError`;
  #L3af568.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3af56e.  throw v3;
  #L3af570.  v3:= new `java.lang.AssertionError`;
  #L3af574.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3af57a.  throw v3;
  catch `java.lang.NoSuchFieldException` @[L3af540..L3af562] goto L3af570;
  catch `java.lang.IllegalAccessException` @[L3af540..L3af562] goto L3af564;
}
procedure `void` `writeObject`(`okio.ByteString` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lokio/ByteString;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3af5bc.  v0:= v1.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af5c0.  v0:= length @variable v0;
  #L3af5c2.  call `writeInt`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeInt:(I)V` @kind virtual;
  #L3af5c8.  v0:= v1.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af5cc.  call `write`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.write:([B)V` @kind virtual;
  #L3af5d2.  return @kind void;
}
procedure `java.lang.String` `a`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aeefc.  v0:= v1.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aef00.  call temp:= `a`(v0) @signature `Lokio/b;.a:([B)Ljava/lang/String;` @kind static;
  #L3aef06.  v0:= temp @kind object;
  #L3aef08.  return v0 @kind object;
}
procedure `int` `c`(`okio.ByteString` v9 @kind this, `okio.ByteString` v10 @kind object) @signature `Lokio/ByteString;.c:(Lokio/ByteString;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3aedcc.  call temp:= `p`(v9) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3aedd2.  v0:= temp;
  #L3aedd4.  call temp:= `p`(v10) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3aedda.  v1:= temp;
  #L3aeddc.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3aede2.  v2:= temp;
  #L3aede4.  v3:= 0I;
  #L3aede6.  v4:= 0I;
  #L3aede8.  v5:= -1I;
  #L3aedea.  v6:= 1I;
  #L3aedec.  if v4 >= v2 then goto L3aee1c;
  #L3aedf0.  call temp:= `h`(v9, v4) @signature `Lokio/ByteString;.h:(I)B` @kind virtual;
  #L3aedf6.  v7:= temp;
  #L3aedf8.  v7:= v7 ^& 255;
  #L3aedfc.  call temp:= `h`(v10, v4) @signature `Lokio/ByteString;.h:(I)B` @kind virtual;
  #L3aee02.  v8:= temp;
  #L3aee04.  v8:= v8 ^& 255;
  #L3aee08.  if v7 != v8 then goto L3aee12;
  #L3aee0c.  v4:= v4 + 1;
  #L3aee10.  goto L3aede8;
  #L3aee12.  if v7 >= v8 then goto L3aee18;
  #L3aee16.  goto L3aee1a;
  #L3aee18.  v5:= 1I;
  #L3aee1a.  return v5;
  #L3aee1c.  if v0 != v1 then goto L3aee22;
  #L3aee20.  return v3;
  #L3aee22.  if v0 >= v1 then goto L3aee28;
  #L3aee26.  goto L3aee2a;
  #L3aee28.  v5:= 1I;
  #L3aee2a.  return v5;
}
procedure `int` `compareTo`(`okio.ByteString` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lokio/ByteString;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3aedac.  v1:= (`okio.ByteString`) v1 @kind object;
  #L3aedb0.  call temp:= `c`(v0, v1) @signature `Lokio/ByteString;.c:(Lokio/ByteString;)I` @kind virtual;
  #L3aedb6.  v1:= temp;
  #L3aedb8.  return v1;
}
procedure `boolean` `equals`(`okio.ByteString` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3aec28.  v0:= 1I;
  #L3aec2a.  if v6 != v5 then goto L3aec30;
  #L3aec2e.  return v0;
  #L3aec30.  v1:= instanceof @variable v6 @type ^`okio.ByteString` @kind boolean;
  #L3aec34.  v2:= 0I;
  #L3aec36.  if v1 == 0 then goto L3aec60;
  #L3aec3a.  v6:= (`okio.ByteString`) v6 @kind object;
  #L3aec3e.  call temp:= `p`(v6) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3aec44.  v1:= temp;
  #L3aec46.  v3:= v5.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aec4a.  v4:= length @variable v3;
  #L3aec4c.  if v1 != v4 then goto L3aec60;
  #L3aec50.  v1:= length @variable v3;
  #L3aec52.  call temp:= `l`(v6, v2, v3, v2, v1) @signature `Lokio/ByteString;.l:(I[BII)Z` @kind virtual;
  #L3aec58.  v6:= temp;
  #L3aec5a.  if v6 == 0 then goto L3aec60;
  #L3aec5e.  goto L3aec62;
  #L3aec60.  v0:= 0I;
  #L3aec62.  return v0;
}
procedure `byte` `h`(`okio.ByteString` v1 @kind this, `int` v2 ) @signature `Lokio/ByteString;.h:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aecf8.  v0:= v1.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aecfc.  v2:= v0[v2] @kind byte;
  #L3aed00.  return v2;
}
procedure `int` `hashCode`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aeeb8.  v0:= v1.`okio.ByteString.a` @type ^`int`;
  #L3aeebc.  if v0 == 0 then goto L3aeec2;
  #L3aeec0.  goto L3aeed2;
  #L3aeec2.  v0:= v1.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aeec6.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L3aeecc.  v0:= temp;
  #L3aeece.  v1.`okio.ByteString.a` @type ^`int` := v0;
  #L3aeed2.  return v0;
}
procedure `java.lang.String` `i`(`okio.ByteString` v9 @kind this) @signature `Lokio/ByteString;.i:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3aef1c.  v0:= v9.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aef20.  v1:= length @variable v0;
  #L3aef22.  v1:= v1 * 2;
  #L3aef26.  v1:= new `char`[v1];
  #L3aef2a.  v2:= length @variable v0;
  #L3aef2c.  v3:= 0I;
  #L3aef2e.  v4:= 0I;
  #L3aef30.  if v3 >= v2 then goto L3aef66;
  #L3aef34.  v5:= v0[v3] @kind byte;
  #L3aef38.  v6:= v4 + 1;
  #L3aef3c.  v7:= `@@okio.ByteString.c` @type ^`char`[] @kind object;
  #L3aef40.  v8:= v5 ^> 4;
  #L3aef44.  v8:= v8 ^& 15;
  #L3aef48.  v8:= v7[v8] @kind char;
  #L3aef4c.  v1[v4]:= v8 @kind char;
  #L3aef50.  v4:= v6 + 1;
  #L3aef54.  v5:= v5 ^& 15;
  #L3aef58.  v5:= v7[v5] @kind char;
  #L3aef5c.  v1[v6]:= v5 @kind char;
  #L3aef60.  v3:= v3 + 1;
  #L3aef64.  goto L3aef30;
  #L3aef66.  v0:= new `java.lang.String`;
  #L3aef6a.  call `<init>`(v0, v1) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L3aef70.  return v0 @kind object;
}
procedure `boolean` `k`(`okio.ByteString` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/ByteString;.k:(ILokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aecb4.  v0:= v1.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aecb8.  call temp:= `l`(v3, v4, v0, v2, v5) @signature `Lokio/ByteString;.l:(I[BII)Z` @kind virtual;
  #L3aecbe.  v2:= temp;
  #L3aecc0.  return v2;
}
procedure `boolean` `l`(`okio.ByteString` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lokio/ByteString;.l:(I[BII)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aec74.  if v3 < 0 then goto L3aeca0;
  #L3aec78.  v0:= v2.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aec7c.  v1:= length @variable v0;
  #L3aec7e.  v1:= v1 - v6 @kind int;
  #L3aec80.  if v3 > v1 then goto L3aeca0;
  #L3aec84.  if v5 < 0 then goto L3aeca0;
  #L3aec88.  v1:= length @variable v4;
  #L3aec8a.  v1:= v1 - v6 @kind int;
  #L3aec8c.  if v5 > v1 then goto L3aeca0;
  #L3aec90.  call temp:= `a`(v0, v3, v4, v5, v6) @signature `Lokio/s;.a:([BI[BII)Z` @kind static;
  #L3aec96.  v3:= temp;
  #L3aec98.  if v3 == 0 then goto L3aeca0;
  #L3aec9c.  v3:= 1I;
  #L3aec9e.  goto L3aeca2;
  #L3aeca0.  v3:= 0I;
  #L3aeca2.  return v3;
}
procedure `okio.ByteString` `n`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.n:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af348.  v0:= "SHA-1" @kind object;
  #L3af34c.  call temp:= `f`(v1, v0) @signature `Lokio/ByteString;.f:(Ljava/lang/String;)Lokio/ByteString;` @kind direct;
  #L3af352.  v0:= temp @kind object;
  #L3af354.  return v0 @kind object;
}
procedure `okio.ByteString` `o`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.o:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af368.  v0:= "SHA-256" @kind object;
  #L3af36c.  call temp:= `f`(v1, v0) @signature `Lokio/ByteString;.f:(Ljava/lang/String;)Lokio/ByteString;` @kind direct;
  #L3af372.  v0:= temp @kind object;
  #L3af374.  return v0 @kind object;
}
procedure `int` `p`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aeee4.  v0:= v1.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aeee8.  v0:= length @variable v0;
  #L3aeeea.  return v0;
}
procedure `boolean` `q`(`okio.ByteString` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/ByteString;.q:(Lokio/ByteString;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3aecd4.  call temp:= `p`(v3) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3aecda.  v0:= temp;
  #L3aecdc.  v1:= 0I;
  #L3aecde.  call temp:= `k`(v2, v1, v3, v1, v0) @signature `Lokio/ByteString;.k:(ILokio/ByteString;II)Z` @kind virtual;
  #L3aece4.  v3:= temp;
  #L3aece6.  return v3;
}
procedure `okio.ByteString` `r`(`okio.ByteString` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lokio/ByteString;.r:(II)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3af388.  if v4 < 0 then goto L3af410;
  #L3af38c.  v0:= v3.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af390.  v1:= length @variable v0;
  #L3af392.  if v5 > v1 then goto L3af3d2;
  #L3af396.  v1:= v5 - v4 @kind int;
  #L3af39a.  if v1 < 0 then goto L3af3c2;
  #L3af39e.  if v4 != 0 then goto L3af3aa;
  #L3af3a2.  v2:= length @variable v0;
  #L3af3a4.  if v5 != v2 then goto L3af3aa;
  #L3af3a8.  return v3 @kind object;
  #L3af3aa.  v5:= new `byte`[v1];
  #L3af3ae.  v2:= 0I;
  #L3af3b0.  call `arraycopy`(v0, v4, v5, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3af3b6.  v4:= new `okio.ByteString`;
  #L3af3ba.  call `<init>`(v4, v5) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L3af3c0.  return v4 @kind object;
  #L3af3c2.  v4:= new `java.lang.IllegalArgumentException`;
  #L3af3c6.  v5:= "endIndex < beginIndex" @kind object;
  #L3af3ca.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af3d0.  throw v4;
  #L3af3d2.  v4:= new `java.lang.IllegalArgumentException`;
  #L3af3d6.  v5:= new `java.lang.StringBuilder`;
  #L3af3da.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3af3e0.  v0:= "endIndex > length(" @kind object;
  #L3af3e4.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af3ea.  v0:= v3.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af3ee.  v0:= length @variable v0;
  #L3af3f0.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af3f6.  v0:= ")" @kind object;
  #L3af3fa.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af400.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af406.  v5:= temp @kind object;
  #L3af408.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af40e.  throw v4;
  #L3af410.  v4:= new `java.lang.IllegalArgumentException`;
  #L3af414.  v5:= "beginIndex < 0" @kind object;
  #L3af418.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af41e.  throw v4;
}
procedure `okio.ByteString` `s`(`okio.ByteString` v6 @kind this) @signature `Lokio/ByteString;.s:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3af430.  v0:= 0I;
  #L3af432.  v1:= v6.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af436.  v2:= length @variable v1;
  #L3af438.  if v0 >= v2 then goto L3af4a2;
  #L3af43c.  v2:= v1[v0] @kind byte;
  #L3af440.  v3:= 65I;
  #L3af444.  if v2 < v3 then goto L3af49c;
  #L3af448.  v4:= 90I;
  #L3af44c.  if v2 <= v4 then goto L3af452;
  #L3af450.  goto L3af49c;
  #L3af452.  call temp:= `clone`(v1) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L3af458.  v1:= temp @kind object;
  #L3af45a.  v1:= (`byte`[]) v1 @kind object;
  #L3af45e.  v5:= v0 + 1;
  #L3af462.  v2:= v2 + 32;
  #L3af466.  v2:= (`byte`) v2 @kind i2b;
  #L3af468.  v1[v0]:= v2 @kind byte;
  #L3af46c.  v0:= length @variable v1;
  #L3af46e.  if v5 >= v0 then goto L3af490;
  #L3af472.  v0:= v1[v5] @kind byte;
  #L3af476.  if v0 < v3 then goto L3af48a;
  #L3af47a.  if v0 <= v4 then goto L3af480;
  #L3af47e.  goto L3af48a;
  #L3af480.  v0:= v0 + 32;
  #L3af484.  v0:= (`byte`) v0 @kind i2b;
  #L3af486.  v1[v5]:= v0 @kind byte;
  #L3af48a.  v5:= v5 + 1;
  #L3af48e.  goto L3af46c;
  #L3af490.  v0:= new `okio.ByteString`;
  #L3af494.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L3af49a.  return v0 @kind object;
  #L3af49c.  v0:= v0 + 1;
  #L3af4a0.  goto L3af432;
  #L3af4a2.  return v6 @kind object;
}
procedure `byte`[] `t`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.t:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aed14.  v0:= v1.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aed18.  call temp:= `clone`(v0) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L3aed1e.  v0:= temp @kind object;
  #L3aed20.  v0:= (`byte`[]) v0 @kind object;
  #L3aed24.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.ByteString` v8 @kind this) @signature `Lokio/ByteString;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3aef84.  v0:= v8.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aef88.  v0:= length @variable v0;
  #L3aef8a.  if v0 != 0 then goto L3aef94;
  #L3aef8e.  v0:= "[size=0]" @kind object;
  #L3aef92.  return v0 @kind object;
  #L3aef94.  call temp:= `u`(v8) @signature `Lokio/ByteString;.u:()Ljava/lang/String;` @kind virtual;
  #L3aef9a.  v0:= temp @kind object;
  #L3aef9c.  v1:= 64I;
  #L3aefa0.  call temp:= `b`(v0, v1) @signature `Lokio/ByteString;.b:(Ljava/lang/String;I)I` @kind static;
  #L3aefa6.  v2:= temp;
  #L3aefa8.  v3:= -1I;
  #L3aefaa.  v4:= "…]" @kind object;
  #L3aefae.  v5:= "[size=" @kind object;
  #L3aefb2.  v6:= "]" @kind object;
  #L3aefb6.  v7:= 0I;
  #L3aefb8.  if v2 != v3 then goto L3af044;
  #L3aefbc.  v0:= v8.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3aefc0.  v0:= length @variable v0;
  #L3aefc2.  if v0 > v1 then goto L3aeff8;
  #L3aefc6.  v0:= new `java.lang.StringBuilder`;
  #L3aefca.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aefd0.  v1:= "[hex=" @kind object;
  #L3aefd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aefda.  call temp:= `i`(v8) @signature `Lokio/ByteString;.i:()Ljava/lang/String;` @kind virtual;
  #L3aefe0.  v1:= temp @kind object;
  #L3aefe2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aefe8.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aefee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aeff4.  v0:= temp @kind object;
  #L3aeff6.  goto L3af042;
  #L3aeff8.  v0:= new `java.lang.StringBuilder`;
  #L3aeffc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3af002.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af008.  v2:= v8.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af00c.  v2:= length @variable v2;
  #L3af00e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af014.  v2:= " hex=" @kind object;
  #L3af018.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af01e.  call temp:= `r`(v8, v7, v1) @signature `Lokio/ByteString;.r:(II)Lokio/ByteString;` @kind virtual;
  #L3af024.  v1:= temp @kind object;
  #L3af026.  call temp:= `i`(v1) @signature `Lokio/ByteString;.i:()Ljava/lang/String;` @kind virtual;
  #L3af02c.  v1:= temp @kind object;
  #L3af02e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af034.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af03a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af040.  v0:= temp @kind object;
  #L3af042.  return v0 @kind object;
  #L3af044.  call temp:= `substring`(v0, v7, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3af04a.  v1:= temp @kind object;
  #L3af04c.  v3:= "\\" @kind object;
  #L3af050.  v7:= "\\\\" @kind object;
  #L3af054.  call temp:= `replace`(v1, v3, v7) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3af05a.  v1:= temp @kind object;
  #L3af05c.  v3:= "\n" @kind object;
  #L3af060.  v7:= "\\n" @kind object;
  #L3af064.  call temp:= `replace`(v1, v3, v7) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3af06a.  v1:= temp @kind object;
  #L3af06c.  v3:= "\r" @kind object;
  #L3af070.  v7:= "\\r" @kind object;
  #L3af074.  call temp:= `replace`(v1, v3, v7) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3af07a.  v1:= temp @kind object;
  #L3af07c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3af082.  v0:= temp;
  #L3af084.  if v2 >= v0 then goto L3af0c4;
  #L3af088.  v0:= new `java.lang.StringBuilder`;
  #L3af08c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3af092.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af098.  v2:= v8.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af09c.  v2:= length @variable v2;
  #L3af09e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af0a4.  v2:= " text=" @kind object;
  #L3af0a8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af0ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af0b4.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af0ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af0c0.  v0:= temp @kind object;
  #L3af0c2.  goto L3af0ec;
  #L3af0c4.  v0:= new `java.lang.StringBuilder`;
  #L3af0c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3af0ce.  v2:= "[text=" @kind object;
  #L3af0d2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af0d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af0de.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af0e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af0ea.  v0:= temp @kind object;
  #L3af0ec.  return v0 @kind object;
}
procedure `java.lang.String` `u`(`okio.ByteString` v3 @kind this) @signature `Lokio/ByteString;.u:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3af100.  v0:= v3.`okio.ByteString.b` @type ^`java.lang.String` @kind object;
  #L3af104.  if v0 == 0 then goto L3af10a;
  #L3af108.  goto L3af120;
  #L3af10a.  v0:= new `java.lang.String`;
  #L3af10e.  v1:= v3.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af112.  v2:= `@@okio.s.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3af116.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L3af11c.  v3.`okio.ByteString.b` @type ^`java.lang.String` := v0 @kind object;
  #L3af120.  return v0 @kind object;
}
procedure `void` `v`(`okio.ByteString` v3 @kind this, `okio.c` v4 @kind object) @signature `Lokio/ByteString;.v:(Lokio/c;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3af59c.  v0:= v3.`okio.ByteString.data` @type ^`byte`[] @kind object;
  #L3af5a0.  v1:= length @variable v0;
  #L3af5a2.  v2:= 0I;
  #L3af5a4.  call temp:= `m0`(v4, v0, v2, v1) @signature `Lokio/c;.m0:([BII)Lokio/c;` @kind virtual;
  #L3af5aa.  return @kind void;
}
