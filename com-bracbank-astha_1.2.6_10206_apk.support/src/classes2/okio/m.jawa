record `okio.m` @kind class @AccessFlag FINAL extends `okio.e` @kind interface {
  `okio.c` `okio.m.a` @AccessFlag PUBLIC_FINAL;
  `okio.q` `okio.m.b` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.m.c` @AccessFlag ;
}
procedure `void` `<init>`(`okio.m` v1 @kind this, `okio.q` v2 @kind object) @signature `Lokio/m;.<init>:(Lokio/q;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3b12e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b12ee.  v0:= new `okio.c`;
  #L3b12f2.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3b12f8.  v1.`okio.m.a` @type ^`okio.c` := v0 @kind object;
  #L3b12fc.  v0:= "source == null" @kind object;
  #L3b1300.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3b1306.  v1.`okio.m.b` @type ^`okio.q` := v2 @kind object;
  #L3b130a.  return @kind void;
}
procedure `java.lang.String` `D`(`okio.m` v2 @kind this) @signature `Lokio/m;.D:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0db8.  v0:= 9223372036854775807L;
  #L3b0dc2.  call temp:= `r`(v2, v0) @signature `Lokio/m;.r:(J)Ljava/lang/String;` @kind virtual;
  #L3b0dc8.  v0:= temp @kind object;
  #L3b0dca.  return v0 @kind object;
}
procedure `int` `E`(`okio.m` v2 @kind this) @signature `Lokio/m;.E:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0d50.  v0:= 4L;
  #L3b0d54.  call `N`(v2, v0) @signature `Lokio/m;.N:(J)V` @kind virtual;
  #L3b0d5a.  v0:= v2.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0d5e.  call temp:= `E`(v0) @signature `Lokio/c;.E:()I` @kind virtual;
  #L3b0d64.  v0:= temp;
  #L3b0d66.  return v0;
}
procedure `byte`[] `F`(`okio.m` v1 @kind this, `long` v2 ) @signature `Lokio/m;.F:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0cb0.  call `N`(v1, v2) @signature `Lokio/m;.N:(J)V` @kind virtual;
  #L3b0cb6.  v0:= v1.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0cba.  call temp:= `F`(v0, v2) @signature `Lokio/c;.F:(J)[B` @kind virtual;
  #L3b0cc0.  v2:= temp @kind object;
  #L3b0cc2.  return v2 @kind object;
}
procedure `short` `G`(`okio.m` v2 @kind this) @signature `Lokio/m;.G:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b12c0.  v0:= 2L;
  #L3b12c4.  call `N`(v2, v0) @signature `Lokio/m;.N:(J)V` @kind virtual;
  #L3b12ca.  v0:= v2.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b12ce.  call temp:= `G`(v0) @signature `Lokio/c;.G:()S` @kind virtual;
  #L3b12d4.  v0:= temp;
  #L3b12d6.  return v0;
}
procedure `long` `I`(`okio.m` v6 @kind this, `okio.c` v7 @kind object, `long` v8 ) @signature `Lokio/m;.I:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b10ac.  if v7 == 0 then goto L3b114e;
  #L3b10b0.  v0:= 0L;
  #L3b10b4.  v2:= lcmp(v8, v0);
  #L3b10b8.  if v2 < 0 then goto L3b1120;
  #L3b10bc.  v2:= v6.`okio.m.c` @type ^`boolean` @kind boolean;
  #L3b10c0.  if v2 != 0 then goto L3b1110;
  #L3b10c4.  v2:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b10c8.  v3:= v2.`okio.c.b` @type ^`long` @kind wide;
  #L3b10cc.  v5:= lcmp(v3, v0);
  #L3b10d0.  if v5 != 0 then goto L3b10f2;
  #L3b10d4.  v0:= v6.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b10d8.  v3:= 8192L;
  #L3b10dc.  call temp:= `I`(v0, v2, v3) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L3b10e2.  v0:= temp @kind wide;
  #L3b10e4.  v2:= -1L;
  #L3b10e8.  v4:= lcmp(v0, v2);
  #L3b10ec.  if v4 != 0 then goto L3b10f2;
  #L3b10f0.  return v2 @kind wide;
  #L3b10f2.  v0:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b10f6.  v0:= v0.`okio.c.b` @type ^`long` @kind wide;
  #L3b10fa.  call temp:= `min`(v8, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3b1100.  v8:= temp @kind wide;
  #L3b1102.  v0:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1106.  call temp:= `I`(v0, v7, v8) @signature `Lokio/c;.I:(Lokio/c;J)J` @kind virtual;
  #L3b110c.  v7:= temp @kind wide;
  #L3b110e.  return v7 @kind wide;
  #L3b1110.  v7:= new `java.lang.IllegalStateException`;
  #L3b1114.  v8:= "closed" @kind object;
  #L3b1118.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b111e.  throw v7;
  #L3b1120.  v7:= new `java.lang.IllegalArgumentException`;
  #L3b1124.  v0:= new `java.lang.StringBuilder`;
  #L3b1128.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b112e.  v1:= "byteCount < 0: " @kind object;
  #L3b1132.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b1138.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b113e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b1144.  v8:= temp @kind object;
  #L3b1146.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b114c.  throw v7;
  #L3b114e.  v7:= new `java.lang.IllegalArgumentException`;
  #L3b1152.  v8:= "sink == null" @kind object;
  #L3b1156.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b115c.  throw v7;
}
procedure `void` `N`(`okio.m` v0 @kind this, `long` v1 ) @signature `Lokio/m;.N:(J)V` @AccessFlag PUBLIC {
    temp;

  #L3b13c4.  call temp:= `s`(v0, v1) @signature `Lokio/m;.s:(J)Z` @kind virtual;
  #L3b13ca.  v1:= temp;
  #L3b13cc.  if v1 == 0 then goto L3b13d2;
  #L3b13d0.  return @kind void;
  #L3b13d2.  v1:= new `java.io.EOFException`;
  #L3b13d6.  call `<init>`(v1) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3b13dc.  throw v1;
}
procedure `long` `P`(`okio.m` v6 @kind this, `byte` v7 ) @signature `Lokio/m;.P:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b0fac.  v2:= 0L;
  #L3b0fb0.  v4:= 9223372036854775807L;
  #L3b0fba.  v0:= v6 @kind object;
  #L3b0fbc.  v1:= v7;
  #L3b0fbe.  call temp:= `g`(v0, v1, v2, v4) @signature `Lokio/m;.g:(BJJ)J` @kind virtual;
  #L3b0fc4.  v0:= temp @kind wide;
  #L3b0fc6.  return v0 @kind wide;
}
procedure `long` `Q`(`okio.m` v6 @kind this) @signature `Lokio/m;.Q:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b1170.  v0:= 1L;
  #L3b1174.  call `N`(v6, v0) @signature `Lokio/m;.N:(J)V` @kind virtual;
  #L3b117a.  v0:= 0I;
  #L3b117c.  v1:= 0I;
  #L3b117e.  v2:= v1 + 1;
  #L3b1182.  v3:= (`long`) v2 @kind i2l;
  #L3b1184.  call temp:= `s`(v6, v3) @signature `Lokio/m;.s:(J)Z` @kind virtual;
  #L3b118a.  v3:= temp;
  #L3b118c.  if v3 == 0 then goto L3b1204;
  #L3b1190.  v3:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1194.  v4:= (`long`) v1 @kind i2l;
  #L3b1196.  call temp:= `V`(v3, v4) @signature `Lokio/c;.V:(J)B` @kind virtual;
  #L3b119c.  v3:= temp;
  #L3b119e.  v4:= 48I;
  #L3b11a2.  if v3 < v4 then goto L3b11ae;
  #L3b11a6.  v4:= 57I;
  #L3b11aa.  if v3 <= v4 then goto L3b11d0;
  #L3b11ae.  v4:= 97I;
  #L3b11b2.  if v3 < v4 then goto L3b11be;
  #L3b11b6.  v4:= 102I;
  #L3b11ba.  if v3 <= v4 then goto L3b11d0;
  #L3b11be.  v4:= 65I;
  #L3b11c2.  if v3 < v4 then goto L3b11d4;
  #L3b11c6.  v4:= 70I;
  #L3b11ca.  if v3 <= v4 then goto L3b11d0;
  #L3b11ce.  goto L3b11d4;
  #L3b11d0.  v1:= v2;
  #L3b11d2.  goto L3b117e;
  #L3b11d4.  if v1 == 0 then goto L3b11da;
  #L3b11d8.  goto L3b1204;
  #L3b11da.  v1:= new `java.lang.NumberFormatException`;
  #L3b11de.  v2:= 1I;
  #L3b11e0.  v2:= new `java.lang.Object`[v2];
  #L3b11e4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3b11ea.  v3:= temp @kind object;
  #L3b11ec.  v2[v0]:= v3 @kind object;
  #L3b11f0.  v0:= "Expected leading [0-9a-fA-F] character but was %#x" @kind object;
  #L3b11f4.  call temp:= `format`(v0, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3b11fa.  v0:= temp @kind object;
  #L3b11fc.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b1202.  throw v1;
  #L3b1204.  v0:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1208.  call temp:= `Q`(v0) @signature `Lokio/c;.Q:()J` @kind virtual;
  #L3b120e.  v0:= temp @kind wide;
  #L3b1210.  return v0 @kind wide;
}
procedure `okio.c` `c`(`okio.m` v1 @kind this) @signature `Lokio/m;.c:()Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b1224.  v0:= v1.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1228.  return v0 @kind object;
}
procedure `void` `close`(`okio.m` v1 @kind this) @signature `Lokio/m;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b131c.  v0:= v1.`okio.m.c` @type ^`boolean` @kind boolean;
  #L3b1320.  if v0 == 0 then goto L3b1326;
  #L3b1324.  return @kind void;
  #L3b1326.  v0:= 1I;
  #L3b1328.  v1.`okio.m.c` @type ^`boolean` := v0 @kind boolean;
  #L3b132c.  v0:= v1.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b1330.  call `close`(v0) @signature `Lokio/q;.close:()V` @kind interface;
  #L3b1336.  v0:= v1.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b133a.  call `s`(v0) @signature `Lokio/c;.s:()V` @kind virtual;
  #L3b1340.  return @kind void;
}
procedure `okio.r` `e`(`okio.m` v1 @kind this) @signature `Lokio/m;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b1278.  v0:= v1.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b127c.  call temp:= `e`(v0) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3b1282.  v0:= temp @kind object;
  #L3b1284.  return v0 @kind object;
}
procedure `void` `f`(`okio.m` v6 @kind this, `long` v7 ) @signature `Lokio/m;.f:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b13f0.  v0:= v6.`okio.m.c` @type ^`boolean` @kind boolean;
  #L3b13f4.  if v0 != 0 then goto L3b1462;
  #L3b13f8.  v0:= 0L;
  #L3b13fc.  v2:= lcmp(v7, v0);
  #L3b1400.  if v2 <= 0 then goto L3b1460;
  #L3b1404.  v2:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1408.  v3:= v2.`okio.c.b` @type ^`long` @kind wide;
  #L3b140c.  v5:= lcmp(v3, v0);
  #L3b1410.  if v5 != 0 then goto L3b143e;
  #L3b1414.  v0:= v6.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b1418.  v3:= 8192L;
  #L3b141c.  call temp:= `I`(v0, v2, v3) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L3b1422.  v0:= temp @kind wide;
  #L3b1424.  v2:= -1L;
  #L3b1428.  v4:= lcmp(v0, v2);
  #L3b142c.  if v4 == 0 then goto L3b1432;
  #L3b1430.  goto L3b143e;
  #L3b1432.  v7:= new `java.io.EOFException`;
  #L3b1436.  call `<init>`(v7) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3b143c.  throw v7;
  #L3b143e.  v0:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1442.  call temp:= `g0`(v0) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L3b1448.  v0:= temp @kind wide;
  #L3b144a.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3b1450.  v0:= temp @kind wide;
  #L3b1452.  v2:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1456.  call `f`(v2, v0) @signature `Lokio/c;.f:(J)V` @kind virtual;
  #L3b145c.  v7:= v7 - v0 @kind long;
  #L3b145e.  goto L3b13f8;
  #L3b1460.  return @kind void;
  #L3b1462.  v7:= new `java.lang.IllegalStateException`;
  #L3b1466.  v8:= "closed" @kind object;
  #L3b146a.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b1470.  throw v7;
}
procedure `long` `g`(`okio.m` v9 @kind this, `byte` v10 , `long` v11 , `long` v13 ) @signature `Lokio/m;.g:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3b0fd8.  v0:= v9.`okio.m.c` @type ^`boolean` @kind boolean;
  #L3b0fdc.  if v0 != 0 then goto L3b108c;
  #L3b0fe0.  v0:= 0L;
  #L3b0fe4.  v2:= lcmp(v11, v0);
  #L3b0fe8.  if v2 < 0 then goto L3b1052;
  #L3b0fec.  v0:= lcmp(v13, v11);
  #L3b0ff0.  if v0 < 0 then goto L3b1052;
  #L3b0ff4.  v7:= -1L;
  #L3b0ff8.  v0:= lcmp(v11, v13);
  #L3b0ffc.  if v0 >= 0 then goto L3b1050;
  #L3b1000.  v1:= v9.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1004.  v2:= v10;
  #L3b1006.  v3:= v11 @kind wide;
  #L3b1008.  v5:= v13 @kind wide;
  #L3b100a.  call temp:= `W`(v1, v2, v3, v5) @signature `Lokio/c;.W:(BJJ)J` @kind virtual;
  #L3b1010.  v0:= temp @kind wide;
  #L3b1012.  v2:= lcmp(v0, v7);
  #L3b1016.  if v2 == 0 then goto L3b101c;
  #L3b101a.  return v0 @kind wide;
  #L3b101c.  v0:= v9.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1020.  v1:= v0.`okio.c.b` @type ^`long` @kind wide;
  #L3b1024.  v3:= lcmp(v1, v13);
  #L3b1028.  if v3 >= 0 then goto L3b1050;
  #L3b102c.  v3:= v9.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b1030.  v4:= 8192L;
  #L3b1034.  call temp:= `I`(v3, v0, v4) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L3b103a.  v3:= temp @kind wide;
  #L3b103c.  v0:= lcmp(v3, v7);
  #L3b1040.  if v0 != 0 then goto L3b1046;
  #L3b1044.  goto L3b1050;
  #L3b1046.  call temp:= `max`(v11, v1) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3b104c.  v11:= temp @kind wide;
  #L3b104e.  goto L3b0ff4;
  #L3b1050.  return v7 @kind wide;
  #L3b1052.  v10:= new `java.lang.IllegalArgumentException`;
  #L3b1056.  v0:= 2I;
  #L3b1058.  v0:= new `java.lang.Object`[v0];
  #L3b105c.  v1:= 0I;
  #L3b105e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3b1064.  v11:= temp @kind object;
  #L3b1066.  v0[v1]:= v11 @kind object;
  #L3b106a.  v11:= 1I;
  #L3b106c.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3b1072.  v12:= temp @kind object;
  #L3b1074.  v0[v11]:= v12 @kind object;
  #L3b1078.  v11:= "fromIndex=%s toIndex=%s" @kind object;
  #L3b107c.  call temp:= `format`(v11, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3b1082.  v11:= temp @kind object;
  #L3b1084.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b108a.  throw v10;
  #L3b108c.  v10:= new `java.lang.IllegalStateException`;
  #L3b1090.  v11:= "closed" @kind object;
  #L3b1094.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b109a.  throw v10;
}
procedure `boolean` `h`(`okio.m` v7 @kind this, `long` v8 , `okio.ByteString` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/m;.h:(JLokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b0b58.  v0:= v7.`okio.m.c` @type ^`boolean` @kind boolean;
  #L3b0b5c.  if v0 != 0 then goto L3b0bce;
  #L3b0b60.  v0:= 0L;
  #L3b0b64.  v2:= 0I;
  #L3b0b66.  v3:= lcmp(v8, v0);
  #L3b0b6a.  if v3 < 0 then goto L3b0bcc;
  #L3b0b6e.  if v11 < 0 then goto L3b0bcc;
  #L3b0b72.  if v12 < 0 then goto L3b0bcc;
  #L3b0b76.  call temp:= `p`(v10) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3b0b7c.  v0:= temp;
  #L3b0b7e.  v0:= v0 - v11 @kind int;
  #L3b0b80.  if v0 >= v12 then goto L3b0b86;
  #L3b0b84.  goto L3b0bcc;
  #L3b0b86.  v0:= 0I;
  #L3b0b88.  if v0 >= v12 then goto L3b0bc8;
  #L3b0b8c.  v3:= (`long`) v0 @kind i2l;
  #L3b0b8e.  v3:= v3 + v8 @kind long;
  #L3b0b90.  v5:= 1L;
  #L3b0b94.  v5:= v5 + v3 @kind long;
  #L3b0b96.  call temp:= `s`(v7, v5) @signature `Lokio/m;.s:(J)Z` @kind virtual;
  #L3b0b9c.  v1:= temp;
  #L3b0b9e.  if v1 != 0 then goto L3b0ba4;
  #L3b0ba2.  return v2;
  #L3b0ba4.  v1:= v7.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0ba8.  call temp:= `V`(v1, v3) @signature `Lokio/c;.V:(J)B` @kind virtual;
  #L3b0bae.  v1:= temp;
  #L3b0bb0.  v3:= v11 + v0 @kind int;
  #L3b0bb4.  call temp:= `h`(v10, v3) @signature `Lokio/ByteString;.h:(I)B` @kind virtual;
  #L3b0bba.  v3:= temp;
  #L3b0bbc.  if v1 == v3 then goto L3b0bc2;
  #L3b0bc0.  return v2;
  #L3b0bc2.  v0:= v0 + 1;
  #L3b0bc6.  goto L3b0b88;
  #L3b0bc8.  v8:= 1I;
  #L3b0bca.  return v8;
  #L3b0bcc.  return v2;
  #L3b0bce.  v8:= new `java.lang.IllegalStateException`;
  #L3b0bd2.  v9:= "closed" @kind object;
  #L3b0bd6.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0bdc.  throw v8;
}
procedure `boolean` `isOpen`(`okio.m` v1 @kind this) @signature `Lokio/m;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0b10.  v0:= v1.`okio.m.c` @type ^`boolean` @kind boolean;
  #L3b0b14.  v0:= v0 ^~ 1;
  #L3b0b18.  return v0;
}
procedure `okio.ByteString` `k`(`okio.m` v1 @kind this, `long` v2 ) @signature `Lokio/m;.k:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b1254.  call `N`(v1, v2) @signature `Lokio/m;.N:(J)V` @kind virtual;
  #L3b125a.  v0:= v1.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b125e.  call temp:= `k`(v0, v2) @signature `Lokio/c;.k:(J)Lokio/ByteString;` @kind virtual;
  #L3b1264.  v2:= temp @kind object;
  #L3b1266.  return v2 @kind object;
}
procedure `okio.c` `m`(`okio.m` v1 @kind this) @signature `Lokio/m;.m:()Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b123c.  v0:= v1.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1240.  return v0 @kind object;
}
procedure `boolean` `n`(`okio.m` v5 @kind this) @signature `Lokio/m;.n:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b0ab0.  v0:= v5.`okio.m.c` @type ^`boolean` @kind boolean;
  #L3b0ab4.  if v0 != 0 then goto L3b0af0;
  #L3b0ab8.  v0:= v5.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0abc.  call temp:= `n`(v0) @signature `Lokio/c;.n:()Z` @kind virtual;
  #L3b0ac2.  v0:= temp;
  #L3b0ac4.  if v0 == 0 then goto L3b0aec;
  #L3b0ac8.  v0:= v5.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b0acc.  v1:= v5.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0ad0.  v2:= 8192L;
  #L3b0ad4.  call temp:= `I`(v0, v1, v2) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L3b0ada.  v0:= temp @kind wide;
  #L3b0adc.  v2:= -1L;
  #L3b0ae0.  v4:= lcmp(v0, v2);
  #L3b0ae4.  if v4 != 0 then goto L3b0aec;
  #L3b0ae8.  v0:= 1I;
  #L3b0aea.  goto L3b0aee;
  #L3b0aec.  v0:= 0I;
  #L3b0aee.  return v0;
  #L3b0af0.  v0:= new `java.lang.IllegalStateException`;
  #L3b0af4.  v1:= "closed" @kind object;
  #L3b0af8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0afe.  throw v0;
}
procedure `java.lang.String` `r`(`okio.m` v12 @kind this, `long` v13 ) @signature `Lokio/m;.r:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3b0ddc.  v0:= 0L;
  #L3b0de0.  v2:= lcmp(v13, v0);
  #L3b0de4.  if v2 < 0 then goto L3b0f2a;
  #L3b0de8.  v0:= 1L;
  #L3b0dec.  v2:= 9223372036854775807L;
  #L3b0df6.  v4:= lcmp(v13, v2);
  #L3b0dfa.  if v4 != 0 then goto L3b0e02;
  #L3b0dfe.  v4:= v2 @kind wide;
  #L3b0e00.  goto L3b0e06;
  #L3b0e02.  v4:= v13 + v0 @kind long;
  #L3b0e06.  v7:= 10I;
  #L3b0e0a.  v8:= 0L;
  #L3b0e0e.  v6:= v12 @kind object;
  #L3b0e10.  v10:= v4 @kind wide;
  #L3b0e12.  call temp:= `g`(v6, v7, v8, v10) @signature `Lokio/m;.g:(BJJ)J` @kind virtual;
  #L3b0e18.  v6:= temp @kind wide;
  #L3b0e1a.  v8:= -1L;
  #L3b0e1e.  v10:= lcmp(v6, v8);
  #L3b0e22.  if v10 == 0 then goto L3b0e34;
  #L3b0e26.  v13:= v12.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0e2a.  call temp:= `f0`(v13, v6) @signature `Lokio/c;.f0:(J)Ljava/lang/String;` @kind virtual;
  #L3b0e30.  v13:= temp @kind object;
  #L3b0e32.  return v13 @kind object;
  #L3b0e34.  v6:= lcmp(v4, v2);
  #L3b0e38.  if v6 >= 0 then goto L3b0e90;
  #L3b0e3c.  call temp:= `s`(v12, v4) @signature `Lokio/m;.s:(J)Z` @kind virtual;
  #L3b0e42.  v2:= temp;
  #L3b0e44.  if v2 == 0 then goto L3b0e90;
  #L3b0e48.  v2:= v12.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0e4c.  v6:= v4 - v0 @kind long;
  #L3b0e50.  call temp:= `V`(v2, v6) @signature `Lokio/c;.V:(J)B` @kind virtual;
  #L3b0e56.  v2:= temp;
  #L3b0e58.  v3:= 13I;
  #L3b0e5c.  if v2 != v3 then goto L3b0e90;
  #L3b0e60.  v0:= v0 + v4 @kind long;
  #L3b0e62.  call temp:= `s`(v12, v0) @signature `Lokio/m;.s:(J)Z` @kind virtual;
  #L3b0e68.  v0:= temp;
  #L3b0e6a.  if v0 == 0 then goto L3b0e90;
  #L3b0e6e.  v0:= v12.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0e72.  call temp:= `V`(v0, v4) @signature `Lokio/c;.V:(J)B` @kind virtual;
  #L3b0e78.  v0:= temp;
  #L3b0e7a.  v1:= 10I;
  #L3b0e7e.  if v0 != v1 then goto L3b0e90;
  #L3b0e82.  v13:= v12.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0e86.  call temp:= `f0`(v13, v4) @signature `Lokio/c;.f0:(J)Ljava/lang/String;` @kind virtual;
  #L3b0e8c.  v13:= temp @kind object;
  #L3b0e8e.  return v13 @kind object;
  #L3b0e90.  v6:= new `okio.c`;
  #L3b0e94.  call `<init>`(v6) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3b0e9a.  v0:= v12.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0e9e.  v2:= 0L;
  #L3b0ea2.  v4:= 32L;
  #L3b0ea6.  call temp:= `g0`(v0) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L3b0eac.  v7:= temp @kind wide;
  #L3b0eae.  call temp:= `min`(v4, v7) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3b0eb4.  v4:= temp @kind wide;
  #L3b0eb6.  v1:= v6 @kind object;
  #L3b0eb8.  call temp:= `T`(v0, v1, v2, v4) @signature `Lokio/c;.T:(Lokio/c;JJ)Lokio/c;` @kind virtual;
  #L3b0ebe.  v0:= new `java.io.EOFException`;
  #L3b0ec2.  v1:= new `java.lang.StringBuilder`;
  #L3b0ec6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b0ecc.  v2:= "\\n not found: limit=" @kind object;
  #L3b0ed0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0ed6.  v2:= v12.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0eda.  call temp:= `g0`(v2) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L3b0ee0.  v2:= temp @kind wide;
  #L3b0ee2.  call temp:= `min`(v2, v13) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3b0ee8.  v13:= temp @kind wide;
  #L3b0eea.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0ef0.  v13:= " content=" @kind object;
  #L3b0ef4.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0efa.  call temp:= `b0`(v6) @signature `Lokio/c;.b0:()Lokio/ByteString;` @kind virtual;
  #L3b0f00.  v13:= temp @kind object;
  #L3b0f02.  call temp:= `i`(v13) @signature `Lokio/ByteString;.i:()Ljava/lang/String;` @kind virtual;
  #L3b0f08.  v13:= temp @kind object;
  #L3b0f0a.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0f10.  v13:= 8230I;
  #L3b0f14.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0f1a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0f20.  v13:= temp @kind object;
  #L3b0f22.  call `<init>`(v0, v13) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0f28.  throw v0;
  #L3b0f2a.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b0f2e.  v1:= new `java.lang.StringBuilder`;
  #L3b0f32.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b0f38.  v2:= "limit < 0: " @kind object;
  #L3b0f3c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0f42.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0f48.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0f4e.  v13:= temp @kind object;
  #L3b0f50.  call `<init>`(v0, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0f56.  throw v0;
}
procedure `int` `read`(`okio.m` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object) @signature `Lokio/m;.read:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b0cd4.  v0:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0cd8.  v1:= v0.`okio.c.b` @type ^`long` @kind wide;
  #L3b0cdc.  v3:= 0L;
  #L3b0ce0.  v5:= lcmp(v1, v3);
  #L3b0ce4.  if v5 != 0 then goto L3b0d08;
  #L3b0ce8.  v1:= v6.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b0cec.  v2:= 8192L;
  #L3b0cf0.  call temp:= `I`(v1, v0, v2) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L3b0cf6.  v0:= temp @kind wide;
  #L3b0cf8.  v2:= -1L;
  #L3b0cfc.  v4:= lcmp(v0, v2);
  #L3b0d00.  if v4 != 0 then goto L3b0d08;
  #L3b0d04.  v7:= -1I;
  #L3b0d06.  return v7;
  #L3b0d08.  v0:= v6.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0d0c.  call temp:= `read`(v0, v7) @signature `Lokio/c;.read:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L3b0d12.  v7:= temp;
  #L3b0d14.  return v7;
}
procedure `byte` `readByte`(`okio.m` v2 @kind this) @signature `Lokio/m;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0c88.  v0:= 1L;
  #L3b0c8c.  call `N`(v2, v0) @signature `Lokio/m;.N:(J)V` @kind virtual;
  #L3b0c92.  v0:= v2.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0c96.  call temp:= `readByte`(v0) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3b0c9c.  v0:= temp;
  #L3b0c9e.  return v0;
}
procedure `void` `readFully`(`okio.m` v8 @kind this, `byte`[] v9 @kind object) @signature `Lokio/m;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3b1354.  v0:= length @variable v9;
  #L3b1356.  v0:= (`long`) v0 @kind i2l;
  #L3b1358.  call `N`(v8, v0) @signature `Lokio/m;.N:(J)V` @kind virtual;
  #L3b135e.  v0:= v8.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1362.  call `readFully`(v0, v9) @signature `Lokio/c;.readFully:([B)V` @kind virtual;
  #L3b1368.  return @kind void;
  #L3b136a.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L3b136c.  v1:= 0I;
  #L3b136e.  v2:= v8.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b1372.  v3:= v2.`okio.c.b` @type ^`long` @kind wide;
  #L3b1376.  v5:= 0L;
  #L3b137a.  v7:= lcmp(v3, v5);
  #L3b137e.  if v7 <= 0 then goto L3b13a2;
  #L3b1382.  v4:= (`int`) v3 @kind l2i;
  #L3b1384.  call temp:= `Z`(v2, v9, v1, v4) @signature `Lokio/c;.Z:([BII)I` @kind virtual;
  #L3b138a.  v2:= temp;
  #L3b138c.  v3:= -1I;
  #L3b138e.  if v2 == v3 then goto L3b1396;
  #L3b1392.  v1:= v1 + v2 @kind int;
  #L3b1394.  goto L3b136e;
  #L3b1396.  v9:= new `java.lang.AssertionError`;
  #L3b139a.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3b13a0.  throw v9;
  #L3b13a2.  throw v0;
  catch `java.io.EOFException` @[L3b1354..L3b135e] goto L3b136a;
}
procedure `int` `readInt`(`okio.m` v2 @kind this) @signature `Lokio/m;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0d28.  v0:= 4L;
  #L3b0d2c.  call `N`(v2, v0) @signature `Lokio/m;.N:(J)V` @kind virtual;
  #L3b0d32.  v0:= v2.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0d36.  call temp:= `readInt`(v0) @signature `Lokio/c;.readInt:()I` @kind virtual;
  #L3b0d3c.  v0:= temp;
  #L3b0d3e.  return v0;
}
procedure `short` `readShort`(`okio.m` v2 @kind this) @signature `Lokio/m;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b1298.  v0:= 2L;
  #L3b129c.  call `N`(v2, v0) @signature `Lokio/m;.N:(J)V` @kind virtual;
  #L3b12a2.  v0:= v2.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b12a6.  call temp:= `readShort`(v0) @signature `Lokio/c;.readShort:()S` @kind virtual;
  #L3b12ac.  v0:= temp;
  #L3b12ae.  return v0;
}
procedure `boolean` `s`(`okio.m` v5 @kind this, `long` v6 ) @signature `Lokio/m;.s:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b0bf0.  v0:= 0L;
  #L3b0bf4.  v2:= lcmp(v6, v0);
  #L3b0bf8.  if v2 < 0 then goto L3b0c48;
  #L3b0bfc.  v0:= v5.`okio.m.c` @type ^`boolean` @kind boolean;
  #L3b0c00.  if v0 != 0 then goto L3b0c38;
  #L3b0c04.  v0:= v5.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0c08.  v1:= v0.`okio.c.b` @type ^`long` @kind wide;
  #L3b0c0c.  v3:= lcmp(v1, v6);
  #L3b0c10.  if v3 >= 0 then goto L3b0c34;
  #L3b0c14.  v1:= v5.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b0c18.  v2:= 8192L;
  #L3b0c1c.  call temp:= `I`(v1, v0, v2) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L3b0c22.  v0:= temp @kind wide;
  #L3b0c24.  v2:= -1L;
  #L3b0c28.  v4:= lcmp(v0, v2);
  #L3b0c2c.  if v4 != 0 then goto L3b0c04;
  #L3b0c30.  v6:= 0I;
  #L3b0c32.  return v6;
  #L3b0c34.  v6:= 1I;
  #L3b0c36.  return v6;
  #L3b0c38.  v6:= new `java.lang.IllegalStateException`;
  #L3b0c3c.  v7:= "closed" @kind object;
  #L3b0c40.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0c46.  throw v6;
  #L3b0c48.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b0c4c.  v1:= new `java.lang.StringBuilder`;
  #L3b0c50.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b0c56.  v2:= "byteCount < 0: " @kind object;
  #L3b0c5a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0c60.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0c66.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0c6c.  v6:= temp @kind object;
  #L3b0c6e.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0c74.  throw v0;
}
procedure `java.lang.String` `toString`(`okio.m` v2 @kind this) @signature `Lokio/m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0f68.  v0:= new `java.lang.StringBuilder`;
  #L3b0f6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b0f72.  v1:= "buffer(" @kind object;
  #L3b0f76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0f7c.  v1:= v2.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b0f80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0f86.  v1:= ")" @kind object;
  #L3b0f8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0f90.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0f96.  v0:= temp @kind object;
  #L3b0f98.  return v0 @kind object;
}
procedure `boolean` `v`(`okio.m` v6 @kind this, `long` v7 , `okio.ByteString` v9 @kind object) @signature `Lokio/m;.v:(JLokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b0b2c.  call temp:= `p`(v9) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3b0b32.  v5:= temp;
  #L3b0b34.  v4:= 0I;
  #L3b0b36.  v0:= v6 @kind object;
  #L3b0b38.  v1:= v7 @kind wide;
  #L3b0b3a.  v3:= v9 @kind object;
  #L3b0b3c.  call temp:= `h`(v0, v1, v3, v4, v5) @signature `Lokio/m;.h:(JLokio/ByteString;II)Z` @kind virtual;
  #L3b0b42.  v7:= temp;
  #L3b0b44.  return v7;
}
procedure `java.lang.String` `w`(`okio.m` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/m;.w:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0d78.  if v3 == 0 then goto L3b0d98;
  #L3b0d7c.  v0:= v2.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0d80.  v1:= v2.`okio.m.b` @type ^`okio.q` @kind object;
  #L3b0d84.  call temp:= `n0`(v0, v1) @signature `Lokio/c;.n0:(Lokio/q;)J` @kind virtual;
  #L3b0d8a.  v0:= v2.`okio.m.a` @type ^`okio.c` @kind object;
  #L3b0d8e.  call temp:= `w`(v0, v3) @signature `Lokio/c;.w:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L3b0d94.  v3:= temp @kind object;
  #L3b0d96.  return v3 @kind object;
  #L3b0d98.  v3:= new `java.lang.IllegalArgumentException`;
  #L3b0d9c.  v0:= "charset == null" @kind object;
  #L3b0da0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0da6.  throw v3;
}
