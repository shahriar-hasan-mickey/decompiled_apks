record `okio.l` @kind class @AccessFlag FINAL extends `okio.d` @kind interface {
  `okio.c` `okio.l.a` @AccessFlag PUBLIC_FINAL;
  `okio.p` `okio.l.b` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.l.c` @AccessFlag ;
}
procedure `void` `<init>`(`okio.l` v1 @kind this, `okio.p` v2 @kind object) @signature `Lokio/l;.<init>:(Lokio/p;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3b0970.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0976.  v0:= new `okio.c`;
  #L3b097a.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3b0980.  v1.`okio.l.a` @type ^`okio.c` := v0 @kind object;
  #L3b0984.  v0:= "sink == null" @kind object;
  #L3b0988.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3b098e.  v1.`okio.l.b` @type ^`okio.p` := v2 @kind object;
  #L3b0992.  return @kind void;
}
procedure `void` `A`(`okio.l` v1 @kind this, `okio.c` v2 @kind object, `long` v3 ) @signature `Lokio/l;.A:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0a74.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b0a78.  if v0 != 0 then goto L3b0a8e;
  #L3b0a7c.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b0a80.  call `A`(v0, v2, v3) @signature `Lokio/c;.A:(Lokio/c;J)V` @kind virtual;
  #L3b0a86.  call temp:= `q`(v1) @signature `Lokio/l;.q:()Lokio/d;` @kind virtual;
  #L3b0a8c.  return @kind void;
  #L3b0a8e.  v2:= new `java.lang.IllegalStateException`;
  #L3b0a92.  v3:= "closed" @kind object;
  #L3b0a96.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0a9c.  throw v2;
}
procedure `okio.d` `B`(`okio.l` v1 @kind this, `long` v2 ) @signature `Lokio/l;.B:(J)Lokio/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0860.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b0864.  if v0 != 0 then goto L3b087c;
  #L3b0868.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b086c.  call temp:= `p0`(v0, v2) @signature `Lokio/c;.p0:(J)Lokio/c;` @kind virtual;
  #L3b0872.  call temp:= `q`(v1) @signature `Lokio/l;.q:()Lokio/d;` @kind virtual;
  #L3b0878.  v2:= temp @kind object;
  #L3b087a.  return v2 @kind object;
  #L3b087c.  v2:= new `java.lang.IllegalStateException`;
  #L3b0880.  v3:= "closed" @kind object;
  #L3b0884.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b088a.  throw v2;
}
procedure `okio.c` `c`(`okio.l` v1 @kind this) @signature `Lokio/l;.c:()Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0744.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b0748.  return v0 @kind object;
}
procedure `void` `close`(`okio.l` v7 @kind this) @signature `Lokio/l;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b09a4.  v0:= v7.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b09a8.  if v0 == 0 then goto L3b09ae;
  #L3b09ac.  return @kind void;
  #L3b09ae.  v0:= 0I;
  #L3b09b0.  v1:= v7.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b09b4.  v2:= v1.`okio.c.b` @type ^`long` @kind wide;
  #L3b09b8.  v4:= 0L;
  #L3b09bc.  v6:= lcmp(v2, v4);
  #L3b09c0.  if v6 <= 0 then goto L3b09d2;
  #L3b09c4.  v4:= v7.`okio.l.b` @type ^`okio.p` @kind object;
  #L3b09c8.  call `A`(v4, v1, v2) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L3b09ce.  goto L3b09d2;
  #L3b09d0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b09d2.  v1:= v7.`okio.l.b` @type ^`okio.p` @kind object;
  #L3b09d6.  call `close`(v1) @signature `Lokio/p;.close:()V` @kind interface;
  #L3b09dc.  goto L3b09e6;
  #L3b09de.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b09e0.  if v0 != 0 then goto L3b09e6;
  #L3b09e4.  v0:= v1 @kind object;
  #L3b09e6.  v1:= 1I;
  #L3b09e8.  v7.`okio.l.c` @type ^`boolean` := v1 @kind boolean;
  #L3b09ec.  if v0 == 0 then goto L3b09f6;
  #L3b09f0.  call `e`(v0) @signature `Lokio/s;.e:(Ljava/lang/Throwable;)V` @kind static;
  #L3b09f6.  return @kind void;
  catch `java.lang.Throwable` @[L3b09b0..L3b09ce] goto L3b09d0;
  catch `java.lang.Throwable` @[L3b09d2..L3b09dc] goto L3b09de;
}
procedure `okio.r` `e`(`okio.l` v1 @kind this) @signature `Lokio/l;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0950.  v0:= v1.`okio.l.b` @type ^`okio.p` @kind object;
  #L3b0954.  call temp:= `e`(v0) @signature `Lokio/p;.e:()Lokio/r;` @kind interface;
  #L3b095a.  v0:= temp @kind object;
  #L3b095c.  return v0 @kind object;
}
procedure `void` `flush`(`okio.l` v6 @kind this) @signature `Lokio/l;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b0a20.  v0:= v6.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b0a24.  if v0 != 0 then goto L3b0a52;
  #L3b0a28.  v0:= v6.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b0a2c.  v1:= v0.`okio.c.b` @type ^`long` @kind wide;
  #L3b0a30.  v3:= 0L;
  #L3b0a34.  v5:= lcmp(v1, v3);
  #L3b0a38.  if v5 <= 0 then goto L3b0a46;
  #L3b0a3c.  v3:= v6.`okio.l.b` @type ^`okio.p` @kind object;
  #L3b0a40.  call `A`(v3, v0, v1) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L3b0a46.  v0:= v6.`okio.l.b` @type ^`okio.p` @kind object;
  #L3b0a4a.  call `flush`(v0) @signature `Lokio/p;.flush:()V` @kind interface;
  #L3b0a50.  return @kind void;
  #L3b0a52.  v0:= new `java.lang.IllegalStateException`;
  #L3b0a56.  v1:= "closed" @kind object;
  #L3b0a5a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0a60.  throw v0;
}
procedure `boolean` `isOpen`(`okio.l` v1 @kind this) @signature `Lokio/l;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b06a8.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b06ac.  v0:= v0 ^~ 1;
  #L3b06b0.  return v0;
}
procedure `okio.d` `q`(`okio.l` v5 @kind this) @signature `Lokio/l;.q:()Lokio/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b075c.  v0:= v5.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b0760.  if v0 != 0 then goto L3b078c;
  #L3b0764.  v0:= v5.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b0768.  call temp:= `R`(v0) @signature `Lokio/c;.R:()J` @kind virtual;
  #L3b076e.  v0:= temp @kind wide;
  #L3b0770.  v2:= 0L;
  #L3b0774.  v4:= lcmp(v0, v2);
  #L3b0778.  if v4 <= 0 then goto L3b078a;
  #L3b077c.  v2:= v5.`okio.l.b` @type ^`okio.p` @kind object;
  #L3b0780.  v3:= v5.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b0784.  call `A`(v2, v3, v0) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L3b078a.  return v5 @kind object;
  #L3b078c.  v0:= new `java.lang.IllegalStateException`;
  #L3b0790.  v1:= "closed" @kind object;
  #L3b0794.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b079a.  throw v0;
}
procedure `java.lang.String` `toString`(`okio.l` v2 @kind this) @signature `Lokio/l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0700.  v0:= new `java.lang.StringBuilder`;
  #L3b0704.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b070a.  v1:= "buffer(" @kind object;
  #L3b070e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0714.  v1:= v2.`okio.l.b` @type ^`okio.p` @kind object;
  #L3b0718.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b071e.  v1:= ")" @kind object;
  #L3b0722.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0728.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b072e.  v0:= temp @kind object;
  #L3b0730.  return v0 @kind object;
}
procedure `okio.d` `u`(`okio.l` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokio/l;.u:(Ljava/lang/String;)Lokio/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0914.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b0918.  if v0 != 0 then goto L3b0930;
  #L3b091c.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b0920.  call temp:= `u0`(v0, v2) @signature `Lokio/c;.u0:(Ljava/lang/String;)Lokio/c;` @kind virtual;
  #L3b0926.  call temp:= `q`(v1) @signature `Lokio/l;.q:()Lokio/d;` @kind virtual;
  #L3b092c.  v2:= temp @kind object;
  #L3b092e.  return v2 @kind object;
  #L3b0930.  v2:= new `java.lang.IllegalStateException`;
  #L3b0934.  v0:= "closed" @kind object;
  #L3b0938.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b093e.  throw v2;
}
procedure `int` `write`(`okio.l` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lokio/l;.write:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b06c4.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b06c8.  if v0 != 0 then goto L3b06e0;
  #L3b06cc.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b06d0.  call temp:= `write`(v0, v2) @signature `Lokio/c;.write:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L3b06d6.  v2:= temp;
  #L3b06d8.  call temp:= `q`(v1) @signature `Lokio/l;.q:()Lokio/d;` @kind virtual;
  #L3b06de.  return v2;
  #L3b06e0.  v2:= new `java.lang.IllegalStateException`;
  #L3b06e4.  v0:= "closed" @kind object;
  #L3b06e8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b06ee.  throw v2;
}
procedure `okio.d` `write`(`okio.l` v1 @kind this, `byte`[] v2 @kind object) @signature `Lokio/l;.write:([B)Lokio/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b07ac.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b07b0.  if v0 != 0 then goto L3b07c8;
  #L3b07b4.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b07b8.  call temp:= `l0`(v0, v2) @signature `Lokio/c;.l0:([B)Lokio/c;` @kind virtual;
  #L3b07be.  call temp:= `q`(v1) @signature `Lokio/l;.q:()Lokio/d;` @kind virtual;
  #L3b07c4.  v2:= temp @kind object;
  #L3b07c6.  return v2 @kind object;
  #L3b07c8.  v2:= new `java.lang.IllegalStateException`;
  #L3b07cc.  v0:= "closed" @kind object;
  #L3b07d0.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b07d6.  throw v2;
}
procedure `okio.d` `write`(`okio.l` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/l;.write:([BII)Lokio/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b07e8.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b07ec.  if v0 != 0 then goto L3b0804;
  #L3b07f0.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b07f4.  call temp:= `m0`(v0, v2, v3, v4) @signature `Lokio/c;.m0:([BII)Lokio/c;` @kind virtual;
  #L3b07fa.  call temp:= `q`(v1) @signature `Lokio/l;.q:()Lokio/d;` @kind virtual;
  #L3b0800.  v2:= temp @kind object;
  #L3b0802.  return v2 @kind object;
  #L3b0804.  v2:= new `java.lang.IllegalStateException`;
  #L3b0808.  v3:= "closed" @kind object;
  #L3b080c.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0812.  throw v2;
}
procedure `okio.d` `writeByte`(`okio.l` v1 @kind this, `int` v2 ) @signature `Lokio/l;.writeByte:(I)Lokio/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0824.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b0828.  if v0 != 0 then goto L3b0840;
  #L3b082c.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b0830.  call temp:= `o0`(v0, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3b0836.  call temp:= `q`(v1) @signature `Lokio/l;.q:()Lokio/d;` @kind virtual;
  #L3b083c.  v2:= temp @kind object;
  #L3b083e.  return v2 @kind object;
  #L3b0840.  v2:= new `java.lang.IllegalStateException`;
  #L3b0844.  v0:= "closed" @kind object;
  #L3b0848.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b084e.  throw v2;
}
procedure `okio.d` `writeInt`(`okio.l` v1 @kind this, `int` v2 ) @signature `Lokio/l;.writeInt:(I)Lokio/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b089c.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b08a0.  if v0 != 0 then goto L3b08b8;
  #L3b08a4.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b08a8.  call temp:= `q0`(v0, v2) @signature `Lokio/c;.q0:(I)Lokio/c;` @kind virtual;
  #L3b08ae.  call temp:= `q`(v1) @signature `Lokio/l;.q:()Lokio/d;` @kind virtual;
  #L3b08b4.  v2:= temp @kind object;
  #L3b08b6.  return v2 @kind object;
  #L3b08b8.  v2:= new `java.lang.IllegalStateException`;
  #L3b08bc.  v0:= "closed" @kind object;
  #L3b08c0.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b08c6.  throw v2;
}
procedure `okio.d` `writeShort`(`okio.l` v1 @kind this, `int` v2 ) @signature `Lokio/l;.writeShort:(I)Lokio/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b08d8.  v0:= v1.`okio.l.c` @type ^`boolean` @kind boolean;
  #L3b08dc.  if v0 != 0 then goto L3b08f4;
  #L3b08e0.  v0:= v1.`okio.l.a` @type ^`okio.c` @kind object;
  #L3b08e4.  call temp:= `r0`(v0, v2) @signature `Lokio/c;.r0:(I)Lokio/c;` @kind virtual;
  #L3b08ea.  call temp:= `q`(v1) @signature `Lokio/l;.q:()Lokio/d;` @kind virtual;
  #L3b08f0.  v2:= temp @kind object;
  #L3b08f2.  return v2 @kind object;
  #L3b08f4.  v2:= new `java.lang.IllegalStateException`;
  #L3b08f8.  v0:= "closed" @kind object;
  #L3b08fc.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0902.  throw v2;
}
