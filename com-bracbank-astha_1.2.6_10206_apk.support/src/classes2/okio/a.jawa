record `okio.a` @kind class @AccessFlag PUBLIC extends `okio.r` @kind class {
  `boolean` `okio.a.e` @AccessFlag PRIVATE;
  `okio.a` `okio.a.f` @AccessFlag PRIVATE;
  `long` `okio.a.g` @AccessFlag PRIVATE;
}
global `long` `@@okio.a.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@okio.a.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.a` `@@okio.a.j` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lokio/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3ac934.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3ac938.  v1:= 60L;
  #L3ac93c.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3ac942.  v0:= temp @kind wide;
  #L3ac944.  `@@okio.a.h` @type ^`long` := v0 @kind wide;
  #L3ac948.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3ac94c.  call temp:= `toNanos`(v2, v0) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L3ac952.  v0:= temp @kind wide;
  #L3ac954.  `@@okio.a.i` @type ^`long` := v0 @kind wide;
  #L3ac958.  return @kind void;
}
procedure `void` `<init>`(`okio.a` v0 @kind this) @signature `Lokio/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ac96c.  call `<init>`(v0) @signature `Lokio/r;.<init>:()V` @kind direct;
  #L3ac972.  return @kind void;
}
procedure `okio.a` `i`() @signature `Lokio/a;.i:()Lokio/a;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ac858.  v0:= constclass @type ^`okio.a` @kind object;
  #L3ac85c.  v1:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3ac860.  v1:= v1.`okio.a.f` @type ^`okio.a` @kind object;
  #L3ac864.  v2:= 0I;
  #L3ac866.  if v1 != 0 then goto L3ac8a4;
  #L3ac86a.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3ac870.  v3:= temp @kind wide;
  #L3ac872.  v5:= `@@okio.a.h` @type ^`long` @kind wide;
  #L3ac876.  call `wait`(v0, v5) @signature `Ljava/lang/Object;.wait:(J)V` @kind virtual;
  #L3ac87c.  v0:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3ac880.  v0:= v0.`okio.a.f` @type ^`okio.a` @kind object;
  #L3ac884.  if v0 != 0 then goto L3ac8a2;
  #L3ac888.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3ac88e.  v0:= temp @kind wide;
  #L3ac890.  v0:= v0 - v3 @kind long;
  #L3ac892.  v3:= `@@okio.a.i` @type ^`long` @kind wide;
  #L3ac896.  v5:= lcmp(v0, v3);
  #L3ac89a.  if v5 < 0 then goto L3ac8a2;
  #L3ac89e.  v2:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3ac8a2.  return v2 @kind object;
  #L3ac8a4.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3ac8aa.  v3:= temp @kind wide;
  #L3ac8ac.  call temp:= `p`(v1, v3) @signature `Lokio/a;.p:(J)J` @kind direct;
  #L3ac8b2.  v3:= temp @kind wide;
  #L3ac8b4.  v5:= 0L;
  #L3ac8b8.  v7:= lcmp(v3, v5);
  #L3ac8bc.  if v7 <= 0 then goto L3ac8da;
  #L3ac8c0.  v5:= 1000000L;
  #L3ac8c6.  v7:= v3 / v5 @kind long;
  #L3ac8ca.  v5:= v5 * v7 @kind long;
  #L3ac8ce.  v3:= v3 - v5 @kind long;
  #L3ac8d0.  v1:= (`int`) v3 @kind l2i;
  #L3ac8d2.  call `wait`(v0, v7, v1) @signature `Ljava/lang/Object;.wait:(JI)V` @kind virtual;
  #L3ac8d8.  return v2 @kind object;
  #L3ac8da.  v0:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3ac8de.  v3:= v1.`okio.a.f` @type ^`okio.a` @kind object;
  #L3ac8e2.  v0.`okio.a.f` @type ^`okio.a` := v3 @kind object;
  #L3ac8e6.  v1.`okio.a.f` @type ^`okio.a` := v2 @kind object;
  #L3ac8ea.  return v1 @kind object;
}
procedure `boolean` `j`(`okio.a` v3 @kind object) @signature `Lokio/a;.j:(Lokio/a;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ac768.  v0:= constclass @type ^`okio.a` @kind object;
  #L3ac76c.  @monitorenter v0
  #L3ac76e.  v1:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3ac772.  if v1 == 0 then goto L3ac796;
  #L3ac776.  v2:= v1.`okio.a.f` @type ^`okio.a` @kind object;
  #L3ac77a.  if v2 != v3 then goto L3ac792;
  #L3ac77e.  v2:= v3.`okio.a.f` @type ^`okio.a` @kind object;
  #L3ac782.  v1.`okio.a.f` @type ^`okio.a` := v2 @kind object;
  #L3ac786.  v1:= 0I;
  #L3ac788.  v3.`okio.a.f` @type ^`okio.a` := v1 @kind object;
  #L3ac78c.  v3:= 0I;
  #L3ac78e.  @monitorexit v0
  #L3ac790.  return v3;
  #L3ac792.  v1:= v2 @kind object;
  #L3ac794.  goto L3ac772;
  #L3ac796.  v3:= 1I;
  #L3ac798.  @monitorexit v0
  #L3ac79a.  return v3;
  #L3ac79c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac79e.  @monitorexit v0
  #L3ac7a0.  throw v3;
  catch `java.lang.Throwable` @[L3ac76e..L3ac78c] goto L3ac79c;
}
procedure `long` `p`(`okio.a` v2 @kind this, `long` v3 ) @signature `Lokio/a;.p:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ac840.  v0:= v2.`okio.a.g` @type ^`long` @kind wide;
  #L3ac844.  v0:= v0 - v3 @kind long;
  #L3ac846.  return v0 @kind wide;
}
procedure `void` `q`(`okio.a` v6 @kind object, `long` v7 , `boolean` v9 ) @signature `Lokio/a;.q:(Lokio/a;JZ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3aca0c.  v0:= constclass @type ^`okio.a` @kind object;
  #L3aca10.  @monitorenter v0
  #L3aca12.  v1:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3aca16.  if v1 != 0 then goto L3aca38;
  #L3aca1a.  v1:= new `okio.a`;
  #L3aca1e.  call `<init>`(v1) @signature `Lokio/a;.<init>:()V` @kind direct;
  #L3aca24.  `@@okio.a.j` @type ^`okio.a` := v1 @kind object;
  #L3aca28.  v1:= new `okio.a$c`;
  #L3aca2c.  call `<init>`(v1) @signature `Lokio/a$c;.<init>:()V` @kind direct;
  #L3aca32.  call `start`(v1) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L3aca38.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3aca3e.  v1:= temp @kind wide;
  #L3aca40.  v3:= 0L;
  #L3aca44.  v5:= lcmp(v7, v3);
  #L3aca48.  if v5 == 0 then goto L3aca6a;
  #L3aca4c.  if v9 == 0 then goto L3aca6a;
  #L3aca50.  call temp:= `c`(v6) @signature `Lokio/r;.c:()J` @kind virtual;
  #L3aca56.  v3:= temp @kind wide;
  #L3aca58.  v3:= v3 - v1 @kind long;
  #L3aca5a.  call temp:= `min`(v7, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3aca60.  v7:= temp @kind wide;
  #L3aca62.  v7:= v7 + v1 @kind long;
  #L3aca64.  v6.`okio.a.g` @type ^`long` := v7 @kind wide;
  #L3aca68.  goto L3aca86;
  #L3aca6a.  if v5 == 0 then goto L3aca76;
  #L3aca6e.  v7:= v7 + v1 @kind long;
  #L3aca70.  v6.`okio.a.g` @type ^`long` := v7 @kind wide;
  #L3aca74.  goto L3aca86;
  #L3aca76.  if v9 == 0 then goto L3acad0;
  #L3aca7a.  call temp:= `c`(v6) @signature `Lokio/r;.c:()J` @kind virtual;
  #L3aca80.  v7:= temp @kind wide;
  #L3aca82.  v6.`okio.a.g` @type ^`long` := v7 @kind wide;
  #L3aca86.  call temp:= `p`(v6, v1) @signature `Lokio/a;.p:(J)J` @kind direct;
  #L3aca8c.  v7:= temp @kind wide;
  #L3aca8e.  v9:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3aca92.  v3:= v9.`okio.a.f` @type ^`okio.a` @kind object;
  #L3aca96.  if v3 == 0 then goto L3acab2;
  #L3aca9a.  call temp:= `p`(v3, v1) @signature `Lokio/a;.p:(J)J` @kind direct;
  #L3acaa0.  v3:= temp @kind wide;
  #L3acaa2.  v5:= lcmp(v7, v3);
  #L3acaa6.  if v5 >= 0 then goto L3acaac;
  #L3acaaa.  goto L3acab2;
  #L3acaac.  v9:= v9.`okio.a.f` @type ^`okio.a` @kind object;
  #L3acab0.  goto L3aca92;
  #L3acab2.  v7:= v9.`okio.a.f` @type ^`okio.a` @kind object;
  #L3acab6.  v6.`okio.a.f` @type ^`okio.a` := v7 @kind object;
  #L3acaba.  v9.`okio.a.f` @type ^`okio.a` := v6 @kind object;
  #L3acabe.  v6:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3acac2.  if v9 != v6 then goto L3acacc;
  #L3acac6.  call `notify`(v0) @signature `Ljava/lang/Object;.notify:()V` @kind virtual;
  #L3acacc.  @monitorexit v0
  #L3acace.  return @kind void;
  #L3acad0.  v6:= new `java.lang.AssertionError`;
  #L3acad4.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3acada.  throw v6;
  #L3acadc.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3acade.  @monitorexit v0
  #L3acae0.  throw v6;
  catch `java.lang.Throwable` @[L3aca12..L3acacc] goto L3acadc;
  catch `java.lang.Throwable` @[L3acad0..L3acadc] goto L3acadc;
}
procedure `void` `k`(`okio.a` v6 @kind this) @signature `Lokio/a;.k:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ac984.  v0:= v6.`okio.a.e` @type ^`boolean` @kind boolean;
  #L3ac988.  if v0 != 0 then goto L3ac9bc;
  #L3ac98c.  call temp:= `h`(v6) @signature `Lokio/r;.h:()J` @kind virtual;
  #L3ac992.  v0:= temp @kind wide;
  #L3ac994.  call temp:= `e`(v6) @signature `Lokio/r;.e:()Z` @kind virtual;
  #L3ac99a.  v2:= temp;
  #L3ac99c.  v3:= 0L;
  #L3ac9a0.  v5:= lcmp(v0, v3);
  #L3ac9a4.  if v5 != 0 then goto L3ac9ae;
  #L3ac9a8.  if v2 != 0 then goto L3ac9ae;
  #L3ac9ac.  return @kind void;
  #L3ac9ae.  v3:= 1I;
  #L3ac9b0.  v6.`okio.a.e` @type ^`boolean` := v3 @kind boolean;
  #L3ac9b4.  call `q`(v6, v0, v2) @signature `Lokio/a;.q:(Lokio/a;JZ)V` @kind static;
  #L3ac9ba.  return @kind void;
  #L3ac9bc.  v0:= new `java.lang.IllegalStateException`;
  #L3ac9c0.  v1:= "Unbalanced enter/exit" @kind object;
  #L3ac9c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac9ca.  throw v0;
}
procedure `java.io.IOException` `l`(`okio.a` v1 @kind this, `java.io.IOException` v2 @kind object) @signature `Lokio/a;.l:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag FINAL {
    temp;
    v0;

  #L3ac7ec.  call temp:= `n`(v1) @signature `Lokio/a;.n:()Z` @kind virtual;
  #L3ac7f2.  v0:= temp;
  #L3ac7f4.  if v0 != 0 then goto L3ac7fa;
  #L3ac7f8.  return v2 @kind object;
  #L3ac7fa.  call temp:= `o`(v1, v2) @signature `Lokio/a;.o:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3ac800.  v2:= temp @kind object;
  #L3ac802.  return v2 @kind object;
}
procedure `void` `m`(`okio.a` v1 @kind this, `boolean` v2 ) @signature `Lokio/a;.m:(Z)V` @AccessFlag FINAL {
    temp;
    v0;

  #L3ac9dc.  call temp:= `n`(v1) @signature `Lokio/a;.n:()Z` @kind virtual;
  #L3ac9e2.  v0:= temp;
  #L3ac9e4.  if v0 == 0 then goto L3ac9fa;
  #L3ac9e8.  if v2 != 0 then goto L3ac9ee;
  #L3ac9ec.  goto L3ac9fa;
  #L3ac9ee.  v2:= 0I;
  #L3ac9f0.  call temp:= `o`(v1, v2) @signature `Lokio/a;.o:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3ac9f6.  v2:= temp @kind object;
  #L3ac9f8.  throw v2;
  #L3ac9fa.  return @kind void;
}
procedure `boolean` `n`(`okio.a` v2 @kind this) @signature `Lokio/a;.n:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ac7c0.  v0:= v2.`okio.a.e` @type ^`boolean` @kind boolean;
  #L3ac7c4.  v1:= 0I;
  #L3ac7c6.  if v0 != 0 then goto L3ac7cc;
  #L3ac7ca.  return v1;
  #L3ac7cc.  v2.`okio.a.e` @type ^`boolean` := v1 @kind boolean;
  #L3ac7d0.  call temp:= `j`(v2) @signature `Lokio/a;.j:(Lokio/a;)Z` @kind static;
  #L3ac7d6.  v0:= temp;
  #L3ac7d8.  return v0;
}
procedure `java.io.IOException` `o`(`okio.a` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokio/a;.o:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3ac814.  v0:= new `java.io.InterruptedIOException`;
  #L3ac818.  v1:= "timeout" @kind object;
  #L3ac81c.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac822.  if v3 == 0 then goto L3ac82c;
  #L3ac826.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3ac82c.  return v0 @kind object;
}
procedure `okio.p` `r`(`okio.a` v1 @kind this, `okio.p` v2 @kind object) @signature `Lokio/a;.r:(Lokio/p;)Lokio/p;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ac8fc.  v0:= new `okio.a$a`;
  #L3ac900.  call `<init>`(v0, v1, v2) @signature `Lokio/a$a;.<init>:(Lokio/a;Lokio/p;)V` @kind direct;
  #L3ac906.  return v0 @kind object;
}
procedure `okio.q` `s`(`okio.a` v1 @kind this, `okio.q` v2 @kind object) @signature `Lokio/a;.s:(Lokio/q;)Lokio/q;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ac918.  v0:= new `okio.a$b`;
  #L3ac91c.  call `<init>`(v0, v1, v2) @signature `Lokio/a$b;.<init>:(Lokio/a;Lokio/q;)V` @kind direct;
  #L3ac922.  return v0 @kind object;
}
procedure `void` `t`(`okio.a` v0 @kind this) @signature `Lokio/a;.t:()V` @AccessFlag PROTECTED {
    temp;

  #L3acb08.  return @kind void;
}
