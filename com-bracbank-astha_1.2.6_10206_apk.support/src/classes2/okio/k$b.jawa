record `okio.k$b` @kind class @AccessFlag FINAL extends `okio.q` @kind interface {
  `okio.r` `okio.k$b.a` @AccessFlag FINAL_SYNTHETIC;
  `java.io.InputStream` `okio.k$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.k$b` v0 @kind this, `okio.r` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lokio/k$b;.<init>:(Lokio/r;Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b0328.  v0.`okio.k$b.a` @type ^`okio.r` := v1 @kind object;
  #L3b032c.  v0.`okio.k$b.b` @type ^`java.io.InputStream` := v2 @kind object;
  #L3b0330.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0336.  return @kind void;
}
procedure `long` `I`(`okio.k$b` v3 @kind this, `okio.c` v4 @kind object, `long` v5 ) @signature `Lokio/k$b;.I:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b0214.  v0:= 0L;
  #L3b0218.  v2:= lcmp(v5, v0);
  #L3b021c.  if v2 < 0 then goto L3b02c0;
  #L3b0220.  if v2 != 0 then goto L3b0226;
  #L3b0224.  return v0 @kind wide;
  #L3b0226.  v0:= v3.`okio.k$b.a` @type ^`okio.r` @kind object;
  #L3b022a.  call `f`(v0) @signature `Lokio/r;.f:()V` @kind virtual;
  #L3b0230.  v0:= 1I;
  #L3b0232.  call temp:= `j0`(v4, v0) @signature `Lokio/c;.j0:(I)Lokio/n;` @kind virtual;
  #L3b0238.  v0:= temp @kind object;
  #L3b023a.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3b023e.  v1:= v1 - 8192;
  #L3b0242.  v1:= (`long`) v1 @kind i2l;
  #L3b0244.  call temp:= `min`(v5, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3b024a.  v5:= temp @kind wide;
  #L3b024c.  v6:= (`int`) v5 @kind l2i;
  #L3b024e.  v5:= v3.`okio.k$b.b` @type ^`java.io.InputStream` @kind object;
  #L3b0252.  v1:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3b0256.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3b025a.  call temp:= `read`(v5, v1, v2, v6) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3b0260.  v5:= temp;
  #L3b0262.  v6:= -1I;
  #L3b0264.  if v5 != v6 then goto L3b028c;
  #L3b0268.  v5:= v0.`okio.n.b` @type ^`int`;
  #L3b026c.  v6:= v0.`okio.n.c` @type ^`int`;
  #L3b0270.  if v5 != v6 then goto L3b0286;
  #L3b0274.  call temp:= `b`(v0) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3b027a.  v5:= temp @kind object;
  #L3b027c.  v4.`okio.c.a` @type ^`okio.n` := v5 @kind object;
  #L3b0280.  call `a`(v0) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3b0286.  v4:= -1L;
  #L3b028a.  return v4 @kind wide;
  #L3b028c.  v6:= v0.`okio.n.c` @type ^`int`;
  #L3b0290.  v6:= v6 + v5 @kind int;
  #L3b0292.  v0.`okio.n.c` @type ^`int` := v6;
  #L3b0296.  v0:= v4.`okio.c.b` @type ^`long` @kind wide;
  #L3b029a.  v5:= (`long`) v5 @kind i2l;
  #L3b029c.  v0:= v0 + v5 @kind long;
  #L3b029e.  v4.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3b02a2.  return v5 @kind wide;
  #L3b02a4.  v4:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3b02a6.  call temp:= `c`(v4) @signature `Lokio/k;.c:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3b02ac.  v5:= temp;
  #L3b02ae.  if v5 == 0 then goto L3b02be;
  #L3b02b2.  v5:= new `java.io.IOException`;
  #L3b02b6.  call `<init>`(v5, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3b02bc.  throw v5;
  #L3b02be.  throw v4;
  #L3b02c0.  v4:= new `java.lang.IllegalArgumentException`;
  #L3b02c4.  v0:= new `java.lang.StringBuilder`;
  #L3b02c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b02ce.  v1:= "byteCount < 0: " @kind object;
  #L3b02d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b02d8.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b02de.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b02e4.  v5:= temp @kind object;
  #L3b02e6.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b02ec.  throw v4;
  catch `java.lang.AssertionError` @[L3b0226..L3b02a2] goto L3b02a4;
}
procedure `void` `close`(`okio.k$b` v1 @kind this) @signature `Lokio/k$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0348.  v0:= v1.`okio.k$b.b` @type ^`java.io.InputStream` @kind object;
  #L3b034c.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3b0352.  return @kind void;
}
procedure `okio.r` `e`(`okio.k$b` v1 @kind this) @signature `Lokio/k$b;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0310.  v0:= v1.`okio.k$b.a` @type ^`okio.r` @kind object;
  #L3b0314.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.k$b` v2 @kind this) @signature `Lokio/k$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b01d0.  v0:= new `java.lang.StringBuilder`;
  #L3b01d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b01da.  v1:= "source(" @kind object;
  #L3b01de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b01e4.  v1:= v2.`okio.k$b.b` @type ^`java.io.InputStream` @kind object;
  #L3b01e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b01ee.  v1:= ")" @kind object;
  #L3b01f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b01f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b01fe.  v0:= temp @kind object;
  #L3b0200.  return v0 @kind object;
}
