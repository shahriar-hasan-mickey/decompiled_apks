record `okio.g` @kind class @AccessFlag PUBLIC_ABSTRACT extends `okio.q` @kind interface {
  `okio.q` `okio.g.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.g` v1 @kind this, `okio.q` v2 @kind object) @signature `Lokio/g;.<init>:(Lokio/q;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3af780.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3af786.  if v2 == 0 then goto L3af790;
  #L3af78a.  v1.`okio.g.a` @type ^`okio.q` := v2 @kind object;
  #L3af78e.  return @kind void;
  #L3af790.  v2:= new `java.lang.IllegalArgumentException`;
  #L3af794.  v0:= "delegate == null" @kind object;
  #L3af798.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af79e.  throw v2;
}
procedure `void` `close`(`okio.g` v1 @kind this) @signature `Lokio/g;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af7b0.  v0:= v1.`okio.g.a` @type ^`okio.q` @kind object;
  #L3af7b4.  call `close`(v0) @signature `Lokio/q;.close:()V` @kind interface;
  #L3af7ba.  return @kind void;
}
procedure `okio.r` `e`(`okio.g` v1 @kind this) @signature `Lokio/g;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af760.  v0:= v1.`okio.g.a` @type ^`okio.q` @kind object;
  #L3af764.  call temp:= `e`(v0) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3af76a.  v0:= temp @kind object;
  #L3af76c.  return v0 @kind object;
}
procedure `okio.q` `g`(`okio.g` v1 @kind this) @signature `Lokio/g;.g:()Lokio/q;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3af748.  v0:= v1.`okio.g.a` @type ^`okio.q` @kind object;
  #L3af74c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.g` v2 @kind this) @signature `Lokio/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3af6e8.  v0:= new `java.lang.StringBuilder`;
  #L3af6ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3af6f2.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3af6f8.  v1:= temp @kind object;
  #L3af6fa.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3af700.  v1:= temp @kind object;
  #L3af702.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af708.  v1:= "(" @kind object;
  #L3af70c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af712.  v1:= v2.`okio.g.a` @type ^`okio.q` @kind object;
  #L3af716.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af71c.  v1:= temp @kind object;
  #L3af71e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af724.  v1:= ")" @kind object;
  #L3af728.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af72e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af734.  v0:= temp @kind object;
  #L3af736.  return v0 @kind object;
}
