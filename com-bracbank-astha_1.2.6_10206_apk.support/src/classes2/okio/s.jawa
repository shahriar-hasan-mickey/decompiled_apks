record `okio.s` @kind class @AccessFlag FINAL {
}
global `java.nio.charset.Charset` `@@okio.s.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/s;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b20a4.  v0:= "UTF-8" @kind object;
  #L3b20a8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3b20ae.  v0:= temp @kind object;
  #L3b20b0.  `@@okio.s.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L3b20b4.  return @kind void;
}
procedure `boolean` `a`(`byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lokio/s;.a:([BI[BII)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b1ff8.  v0:= 0I;
  #L3b1ffa.  v1:= 0I;
  #L3b1ffc.  if v1 >= v8 then goto L3b201c;
  #L3b2000.  v2:= v1 + v5 @kind int;
  #L3b2004.  v2:= v4[v2] @kind byte;
  #L3b2008.  v3:= v1 + v7 @kind int;
  #L3b200c.  v3:= v6[v3] @kind byte;
  #L3b2010.  if v2 == v3 then goto L3b2016;
  #L3b2014.  return v0;
  #L3b2016.  v1:= v1 + 1;
  #L3b201a.  goto L3b1ffc;
  #L3b201c.  v4:= 1I;
  #L3b201e.  return v4;
}
procedure `void` `b`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokio/s;.b:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b20c8.  v0:= v7 ^| v9 @kind long;
  #L3b20cc.  v2:= 0L;
  #L3b20d0.  v4:= lcmp(v0, v2);
  #L3b20d4.  if v4 < 0 then goto L3b20ee;
  #L3b20d8.  v0:= lcmp(v7, v5);
  #L3b20dc.  if v0 > 0 then goto L3b20ee;
  #L3b20e0.  v0:= v5 - v7 @kind long;
  #L3b20e4.  v2:= lcmp(v0, v9);
  #L3b20e8.  if v2 < 0 then goto L3b20ee;
  #L3b20ec.  return @kind void;
  #L3b20ee.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L3b20f2.  v1:= 3I;
  #L3b20f4.  v1:= new `java.lang.Object`[v1];
  #L3b20f8.  v2:= 0I;
  #L3b20fa.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3b2100.  v5:= temp @kind object;
  #L3b2102.  v1[v2]:= v5 @kind object;
  #L3b2106.  v5:= 1I;
  #L3b2108.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3b210e.  v6:= temp @kind object;
  #L3b2110.  v1[v5]:= v6 @kind object;
  #L3b2114.  v5:= 2I;
  #L3b2116.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3b211c.  v6:= temp @kind object;
  #L3b211e.  v1[v5]:= v6 @kind object;
  #L3b2122.  v5:= "size=%s offset=%s byteCount=%s" @kind object;
  #L3b2126.  call temp:= `format`(v5, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3b212c.  v5:= temp @kind object;
  #L3b212e.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2134.  throw v0;
}
procedure `int` `c`(`int` v2 ) @signature `Lokio/s;.c:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b2030.  v0:= -16777216I;
  #L3b2034.  v0:= v0 ^& v2 @kind int;
  #L3b2036.  v0:= v0 ^>> 24;
  #L3b203a.  v1:= 16711680I;
  #L3b203e.  v1:= v1 ^& v2 @kind int;
  #L3b2040.  v1:= v1 ^>> 8;
  #L3b2044.  v0:= v0 ^| v1 @kind int;
  #L3b2046.  v1:= 65280I;
  #L3b204c.  v1:= v1 ^& v2 @kind int;
  #L3b204e.  v1:= v1 ^< 8;
  #L3b2052.  v0:= v0 ^| v1 @kind int;
  #L3b2054.  v2:= v2 ^& 255;
  #L3b2058.  v2:= v2 ^< 24;
  #L3b205c.  v2:= v2 ^| v0 @kind int;
  #L3b205e.  return v2;
}
procedure `short` `d`(`short` v1 ) @signature `Lokio/s;.d:(S)S` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b2070.  v0:= 65535I;
  #L3b2076.  v1:= v1 ^& v0 @kind int;
  #L3b2078.  v0:= 65280I;
  #L3b207e.  v0:= v0 ^& v1 @kind int;
  #L3b2080.  v0:= v0 ^>> 8;
  #L3b2084.  v1:= v1 ^& 255;
  #L3b2088.  v1:= v1 ^< 8;
  #L3b208c.  v1:= v1 ^| v0 @kind int;
  #L3b208e.  v1:= (`short`) v1 @kind i2s;
  #L3b2090.  return v1;
}
procedure `void` `e`(`java.lang.Throwable` v0 @kind object) @signature `Lokio/s;.e:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3b2148.  call `f`(v0) @signature `Lokio/s;.f:(Ljava/lang/Throwable;)V` @kind static;
  #L3b214e.  return @kind void;
}
procedure `void` `f`(`java.lang.Throwable` v0 @kind object) @signature `Lokio/s;.f:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3b2160.  throw v0;
}
