record `okio.n` @kind class @AccessFlag FINAL {
  `byte`[] `okio.n.a` @AccessFlag FINAL;
  `int` `okio.n.b` @AccessFlag ;
  `int` `okio.n.c` @AccessFlag ;
  `boolean` `okio.n.d` @AccessFlag ;
  `boolean` `okio.n.e` @AccessFlag ;
  `okio.n` `okio.n.f` @AccessFlag ;
  `okio.n` `okio.n.g` @AccessFlag ;
}
procedure `void` `<init>`(`okio.n` v1 @kind this) @signature `Lokio/n;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3b1c68.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b1c6e.  v0:= 8192I;
  #L3b1c72.  v0:= new `byte`[v0];
  #L3b1c76.  v1.`okio.n.a` @type ^`byte`[] := v0 @kind object;
  #L3b1c7a.  v0:= 1I;
  #L3b1c7c.  v1.`okio.n.e` @type ^`boolean` := v0 @kind boolean;
  #L3b1c80.  v0:= 0I;
  #L3b1c82.  v1.`okio.n.d` @type ^`boolean` := v0 @kind boolean;
  #L3b1c86.  return @kind void;
}
procedure `void` `<init>`(`okio.n` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `boolean` v5 ) @signature `Lokio/n;.<init>:([BIIZZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b1c98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b1c9e.  v0.`okio.n.a` @type ^`byte`[] := v1 @kind object;
  #L3b1ca2.  v0.`okio.n.b` @type ^`int` := v2;
  #L3b1ca6.  v0.`okio.n.c` @type ^`int` := v3;
  #L3b1caa.  v0.`okio.n.d` @type ^`boolean` := v4 @kind boolean;
  #L3b1cae.  v0.`okio.n.e` @type ^`boolean` := v5 @kind boolean;
  #L3b1cb2.  return @kind void;
}
procedure `void` `a`(`okio.n` v4 @kind this) @signature `Lokio/n;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b1cc4.  v0:= v4.`okio.n.g` @type ^`okio.n` @kind object;
  #L3b1cc8.  if v0 == v4 then goto L3b1d14;
  #L3b1ccc.  v1:= v0.`okio.n.e` @type ^`boolean` @kind boolean;
  #L3b1cd0.  if v1 != 0 then goto L3b1cd6;
  #L3b1cd4.  return @kind void;
  #L3b1cd6.  v1:= v4.`okio.n.c` @type ^`int`;
  #L3b1cda.  v2:= v4.`okio.n.b` @type ^`int`;
  #L3b1cde.  v1:= v1 - v2 @kind int;
  #L3b1ce0.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3b1ce4.  v2:= v2 - 8192;
  #L3b1ce8.  v3:= v0.`okio.n.d` @type ^`boolean` @kind boolean;
  #L3b1cec.  if v3 == 0 then goto L3b1cf4;
  #L3b1cf0.  v3:= 0I;
  #L3b1cf2.  goto L3b1cf8;
  #L3b1cf4.  v3:= v0.`okio.n.b` @type ^`int`;
  #L3b1cf8.  v2:= v2 + v3 @kind int;
  #L3b1cfa.  if v1 <= v2 then goto L3b1d00;
  #L3b1cfe.  return @kind void;
  #L3b1d00.  call `f`(v4, v0, v1) @signature `Lokio/n;.f:(Lokio/n;I)V` @kind virtual;
  #L3b1d06.  call temp:= `b`(v4) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3b1d0c.  call `a`(v4) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3b1d12.  return @kind void;
  #L3b1d14.  v0:= new `java.lang.IllegalStateException`;
  #L3b1d18.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3b1d1e.  throw v0;
}
procedure `okio.n` `b`(`okio.n` v4 @kind this) @signature `Lokio/n;.b:()Lokio/n;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b1b50.  v0:= v4.`okio.n.f` @type ^`okio.n` @kind object;
  #L3b1b54.  v1:= 0I;
  #L3b1b56.  if v0 == v4 then goto L3b1b5e;
  #L3b1b5a.  v2:= v0 @kind object;
  #L3b1b5c.  goto L3b1b60;
  #L3b1b5e.  v2:= v1 @kind object;
  #L3b1b60.  v3:= v4.`okio.n.g` @type ^`okio.n` @kind object;
  #L3b1b64.  v3.`okio.n.f` @type ^`okio.n` := v0 @kind object;
  #L3b1b68.  v0:= v4.`okio.n.f` @type ^`okio.n` @kind object;
  #L3b1b6c.  v0.`okio.n.g` @type ^`okio.n` := v3 @kind object;
  #L3b1b70.  v4.`okio.n.f` @type ^`okio.n` := v1 @kind object;
  #L3b1b74.  v4.`okio.n.g` @type ^`okio.n` := v1 @kind object;
  #L3b1b78.  return v2 @kind object;
}
procedure `okio.n` `c`(`okio.n` v1 @kind this, `okio.n` v2 @kind object) @signature `Lokio/n;.c:(Lokio/n;)Lokio/n;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b1b8c.  v2.`okio.n.g` @type ^`okio.n` := v1 @kind object;
  #L3b1b90.  v0:= v1.`okio.n.f` @type ^`okio.n` @kind object;
  #L3b1b94.  v2.`okio.n.f` @type ^`okio.n` := v0 @kind object;
  #L3b1b98.  v0:= v1.`okio.n.f` @type ^`okio.n` @kind object;
  #L3b1b9c.  v0.`okio.n.g` @type ^`okio.n` := v2 @kind object;
  #L3b1ba0.  v1.`okio.n.f` @type ^`okio.n` := v2 @kind object;
  #L3b1ba4.  return v2 @kind object;
}
procedure `okio.n` `d`(`okio.n` v7 @kind this) @signature `Lokio/n;.d:()Lokio/n;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b1bb8.  v0:= 1I;
  #L3b1bba.  v7.`okio.n.d` @type ^`boolean` := v0 @kind boolean;
  #L3b1bbe.  v0:= new `okio.n`;
  #L3b1bc2.  v2:= v7.`okio.n.a` @type ^`byte`[] @kind object;
  #L3b1bc6.  v3:= v7.`okio.n.b` @type ^`int`;
  #L3b1bca.  v4:= v7.`okio.n.c` @type ^`int`;
  #L3b1bce.  v5:= 1I;
  #L3b1bd0.  v6:= 0I;
  #L3b1bd2.  v1:= v0 @kind object;
  #L3b1bd4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokio/n;.<init>:([BIIZZ)V` @kind direct;
  #L3b1bda.  return v0 @kind object;
}
procedure `okio.n` `e`(`okio.n` v5 @kind this, `int` v6 ) @signature `Lokio/n;.e:(I)Lokio/n;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b1bec.  if v6 <= 0 then goto L3b1c4c;
  #L3b1bf0.  v0:= v5.`okio.n.c` @type ^`int`;
  #L3b1bf4.  v1:= v5.`okio.n.b` @type ^`int`;
  #L3b1bf8.  v0:= v0 - v1 @kind int;
  #L3b1bfa.  if v6 > v0 then goto L3b1c4c;
  #L3b1bfe.  v0:= 1024I;
  #L3b1c02.  if v6 < v0 then goto L3b1c10;
  #L3b1c06.  call temp:= `d`(v5) @signature `Lokio/n;.d:()Lokio/n;` @kind virtual;
  #L3b1c0c.  v0:= temp @kind object;
  #L3b1c0e.  goto L3b1c2c;
  #L3b1c10.  call temp:= `b`() @signature `Lokio/o;.b:()Lokio/n;` @kind static;
  #L3b1c16.  v0:= temp @kind object;
  #L3b1c18.  v1:= v5.`okio.n.a` @type ^`byte`[] @kind object;
  #L3b1c1c.  v2:= v5.`okio.n.b` @type ^`int`;
  #L3b1c20.  v3:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3b1c24.  v4:= 0I;
  #L3b1c26.  call `arraycopy`(v1, v2, v3, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b1c2c.  v1:= v0.`okio.n.b` @type ^`int`;
  #L3b1c30.  v1:= v1 + v6 @kind int;
  #L3b1c32.  v0.`okio.n.c` @type ^`int` := v1;
  #L3b1c36.  v1:= v5.`okio.n.b` @type ^`int`;
  #L3b1c3a.  v1:= v1 + v6 @kind int;
  #L3b1c3c.  v5.`okio.n.b` @type ^`int` := v1;
  #L3b1c40.  v6:= v5.`okio.n.g` @type ^`okio.n` @kind object;
  #L3b1c44.  call temp:= `c`(v6, v0) @signature `Lokio/n;.c:(Lokio/n;)Lokio/n;` @kind virtual;
  #L3b1c4a.  return v0 @kind object;
  #L3b1c4c.  v6:= new `java.lang.IllegalArgumentException`;
  #L3b1c50.  call `<init>`(v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3b1c56.  throw v6;
}
procedure `void` `f`(`okio.n` v4 @kind this, `okio.n` v5 @kind object, `int` v6 ) @signature `Lokio/n;.f:(Lokio/n;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b1d30.  v0:= v5.`okio.n.e` @type ^`boolean` @kind boolean;
  #L3b1d34.  if v0 == 0 then goto L3b1dc4;
  #L3b1d38.  v0:= v5.`okio.n.c` @type ^`int`;
  #L3b1d3c.  v1:= v0 + v6 @kind int;
  #L3b1d40.  v2:= 8192I;
  #L3b1d44.  if v1 <= v2 then goto L3b1d98;
  #L3b1d48.  v1:= v5.`okio.n.d` @type ^`boolean` @kind boolean;
  #L3b1d4c.  if v1 != 0 then goto L3b1d8c;
  #L3b1d50.  v1:= v0 + v6 @kind int;
  #L3b1d54.  v3:= v5.`okio.n.b` @type ^`int`;
  #L3b1d58.  v1:= v1 - v3 @kind int;
  #L3b1d5a.  if v1 > v2 then goto L3b1d80;
  #L3b1d5e.  v1:= v5.`okio.n.a` @type ^`byte`[] @kind object;
  #L3b1d62.  v0:= v0 - v3 @kind int;
  #L3b1d64.  v2:= 0I;
  #L3b1d66.  call `arraycopy`(v1, v3, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b1d6c.  v0:= v5.`okio.n.c` @type ^`int`;
  #L3b1d70.  v1:= v5.`okio.n.b` @type ^`int`;
  #L3b1d74.  v0:= v0 - v1 @kind int;
  #L3b1d76.  v5.`okio.n.c` @type ^`int` := v0;
  #L3b1d7a.  v5.`okio.n.b` @type ^`int` := v2;
  #L3b1d7e.  goto L3b1d98;
  #L3b1d80.  v5:= new `java.lang.IllegalArgumentException`;
  #L3b1d84.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3b1d8a.  throw v5;
  #L3b1d8c.  v5:= new `java.lang.IllegalArgumentException`;
  #L3b1d90.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3b1d96.  throw v5;
  #L3b1d98.  v0:= v4.`okio.n.a` @type ^`byte`[] @kind object;
  #L3b1d9c.  v1:= v4.`okio.n.b` @type ^`int`;
  #L3b1da0.  v2:= v5.`okio.n.a` @type ^`byte`[] @kind object;
  #L3b1da4.  v3:= v5.`okio.n.c` @type ^`int`;
  #L3b1da8.  call `arraycopy`(v0, v1, v2, v3, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b1dae.  v0:= v5.`okio.n.c` @type ^`int`;
  #L3b1db2.  v0:= v0 + v6 @kind int;
  #L3b1db4.  v5.`okio.n.c` @type ^`int` := v0;
  #L3b1db8.  v5:= v4.`okio.n.b` @type ^`int`;
  #L3b1dbc.  v5:= v5 + v6 @kind int;
  #L3b1dbe.  v4.`okio.n.b` @type ^`int` := v5;
  #L3b1dc2.  return @kind void;
  #L3b1dc4.  v5:= new `java.lang.IllegalArgumentException`;
  #L3b1dc8.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3b1dce.  throw v5;
}
