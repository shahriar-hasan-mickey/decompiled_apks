record `okio.c$a` @kind class @AccessFlag  extends `java.io.OutputStream` @kind class {
  `okio.c` `okio.c$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.c$a` v0 @kind this, `okio.c` v1 @kind object) @signature `Lokio/c$a;.<init>:(Lokio/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3acdc8.  v0.`okio.c$a.a` @type ^`okio.c` := v1 @kind object;
  #L3acdcc.  call `<init>`(v0) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L3acdd2.  return @kind void;
}
procedure `void` `close`(`okio.c$a` v0 @kind this) @signature `Lokio/c$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L3acde4.  return @kind void;
}
procedure `void` `flush`(`okio.c$a` v0 @kind this) @signature `Lokio/c$a;.flush:()V` @AccessFlag PUBLIC {
    temp;

  #L3acdf8.  return @kind void;
}
procedure `java.lang.String` `toString`(`okio.c$a` v2 @kind this) @signature `Lokio/c$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3acd90.  v0:= new `java.lang.StringBuilder`;
  #L3acd94.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3acd9a.  v1:= v2.`okio.c$a.a` @type ^`okio.c` @kind object;
  #L3acd9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3acda4.  v1:= ".outputStream()" @kind object;
  #L3acda8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3acdae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3acdb4.  v0:= temp @kind object;
  #L3acdb6.  return v0 @kind object;
}
procedure `void` `write`(`okio.c$a` v1 @kind this, `int` v2 ) @signature `Lokio/c$a;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ace28.  v0:= v1.`okio.c$a.a` @type ^`okio.c` @kind object;
  #L3ace2c.  v2:= (`byte`) v2 @kind i2b;
  #L3ace2e.  call temp:= `o0`(v0, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ace34.  return @kind void;
}
procedure `void` `write`(`okio.c$a` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/c$a;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ace0c.  v0:= v1.`okio.c$a.a` @type ^`okio.c` @kind object;
  #L3ace10.  call temp:= `m0`(v0, v2, v3, v4) @signature `Lokio/c;.m0:([BII)Lokio/c;` @kind virtual;
  #L3ace16.  return @kind void;
}
