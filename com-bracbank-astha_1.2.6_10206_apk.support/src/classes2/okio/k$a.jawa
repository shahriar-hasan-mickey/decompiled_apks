record `okio.k$a` @kind class @AccessFlag FINAL extends `okio.p` @kind interface {
  `okio.r` `okio.k$a.a` @AccessFlag FINAL_SYNTHETIC;
  `java.io.OutputStream` `okio.k$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.k$a` v0 @kind this, `okio.r` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lokio/k$a;.<init>:(Lokio/r;Ljava/io/OutputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b00e0.  v0.`okio.k$a.a` @type ^`okio.r` := v1 @kind object;
  #L3b00e4.  v0.`okio.k$a.b` @type ^`java.io.OutputStream` := v2 @kind object;
  #L3b00e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b00ee.  return @kind void;
}
procedure `void` `A`(`okio.k$a` v6 @kind this, `okio.c` v7 @kind object, `long` v8 ) @signature `Lokio/k$a;.A:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b0138.  v0:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3b013c.  v2:= 0L;
  #L3b0140.  v4:= v8 @kind wide;
  #L3b0142.  call `b`(v0, v2, v4) @signature `Lokio/s;.b:(JJJ)V` @kind static;
  #L3b0148.  v0:= 0L;
  #L3b014c.  v2:= lcmp(v8, v0);
  #L3b0150.  if v2 <= 0 then goto L3b01be;
  #L3b0154.  v0:= v6.`okio.k$a.a` @type ^`okio.r` @kind object;
  #L3b0158.  call `f`(v0) @signature `Lokio/r;.f:()V` @kind virtual;
  #L3b015e.  v0:= v7.`okio.c.a` @type ^`okio.n` @kind object;
  #L3b0162.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3b0166.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3b016a.  v1:= v1 - v2 @kind int;
  #L3b016c.  v1:= (`long`) v1 @kind i2l;
  #L3b016e.  call temp:= `min`(v8, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3b0174.  v1:= temp @kind wide;
  #L3b0176.  v2:= (`int`) v1 @kind l2i;
  #L3b0178.  v1:= v6.`okio.k$a.b` @type ^`java.io.OutputStream` @kind object;
  #L3b017c.  v3:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3b0180.  v4:= v0.`okio.n.b` @type ^`int`;
  #L3b0184.  call `write`(v1, v3, v4, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L3b018a.  v1:= v0.`okio.n.b` @type ^`int`;
  #L3b018e.  v1:= v1 + v2 @kind int;
  #L3b0190.  v0.`okio.n.b` @type ^`int` := v1;
  #L3b0194.  v2:= (`long`) v2 @kind i2l;
  #L3b0196.  v8:= v8 - v2 @kind long;
  #L3b0198.  v4:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3b019c.  v4:= v4 - v2 @kind long;
  #L3b019e.  v7.`okio.c.b` @type ^`long` := v4 @kind wide;
  #L3b01a2.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3b01a6.  if v1 != v2 then goto L3b0148;
  #L3b01aa.  call temp:= `b`(v0) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3b01b0.  v1:= temp @kind object;
  #L3b01b2.  v7.`okio.c.a` @type ^`okio.n` := v1 @kind object;
  #L3b01b6.  call `a`(v0) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3b01bc.  goto L3b0148;
  #L3b01be.  return @kind void;
}
procedure `void` `close`(`okio.k$a` v1 @kind this) @signature `Lokio/k$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0100.  v0:= v1.`okio.k$a.b` @type ^`java.io.OutputStream` @kind object;
  #L3b0104.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3b010a.  return @kind void;
}
procedure `okio.r` `e`(`okio.k$a` v1 @kind this) @signature `Lokio/k$a;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b00c8.  v0:= v1.`okio.k$a.a` @type ^`okio.r` @kind object;
  #L3b00cc.  return v0 @kind object;
}
procedure `void` `flush`(`okio.k$a` v1 @kind this) @signature `Lokio/k$a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b011c.  v0:= v1.`okio.k$a.b` @type ^`java.io.OutputStream` @kind object;
  #L3b0120.  call `flush`(v0) @signature `Ljava/io/OutputStream;.flush:()V` @kind virtual;
  #L3b0126.  return @kind void;
}
procedure `java.lang.String` `toString`(`okio.k$a` v2 @kind this) @signature `Lokio/k$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0084.  v0:= new `java.lang.StringBuilder`;
  #L3b0088.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b008e.  v1:= "sink(" @kind object;
  #L3b0092.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0098.  v1:= v2.`okio.k$a.b` @type ^`java.io.OutputStream` @kind object;
  #L3b009c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b00a2.  v1:= ")" @kind object;
  #L3b00a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b00ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b00b2.  v0:= temp @kind object;
  #L3b00b4.  return v0 @kind object;
}
