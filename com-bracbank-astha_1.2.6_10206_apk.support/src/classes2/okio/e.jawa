record `okio.e` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `okio.q` @kind interface, `java.nio.channels.ReadableByteChannel` @kind interface {
}
procedure `java.lang.String` `D`() @signature `Lokio/e;.D:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `E`() @signature `Lokio/e;.E:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `F`(`long` v0 ) @signature `Lokio/e;.F:(J)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `G`() @signature `Lokio/e;.G:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `N`(`long` v0 ) @signature `Lokio/e;.N:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `P`(`byte` v0 ) @signature `Lokio/e;.P:(B)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `Q`() @signature `Lokio/e;.Q:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.c` `c`() @signature `Lokio/e;.c:()Lokio/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `f`(`long` v0 ) @signature `Lokio/e;.f:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.ByteString` `k`(`long` v0 ) @signature `Lokio/e;.k:(J)Lokio/ByteString;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.c` `m`() @signature `Lokio/e;.m:()Lokio/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `n`() @signature `Lokio/e;.n:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `r`(`long` v0 ) @signature `Lokio/e;.r:(J)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `readByte`() @signature `Lokio/e;.readByte:()B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `readFully`(`byte`[] v0 @kind object) @signature `Lokio/e;.readFully:([B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readInt`() @signature `Lokio/e;.readInt:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `readShort`() @signature `Lokio/e;.readShort:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `v`(`long` v0 , `okio.ByteString` v2 @kind object) @signature `Lokio/e;.v:(JLokio/ByteString;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `w`(`java.nio.charset.Charset` v0 @kind object) @signature `Lokio/e;.w:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
