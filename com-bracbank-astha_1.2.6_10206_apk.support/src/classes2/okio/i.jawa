record `okio.i` @kind class @AccessFlag PUBLIC_FINAL extends `okio.q` @kind interface {
  `int` `okio.i.a` @AccessFlag PRIVATE;
  `okio.e` `okio.i.b` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `okio.i.c` @AccessFlag PRIVATE_FINAL;
  `okio.j` `okio.i.d` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.CRC32` `okio.i.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.i` v2 @kind this, `okio.q` v3 @kind object) @signature `Lokio/i;.<init>:(Lokio/q;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3afa10.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3afa16.  v0:= 0I;
  #L3afa18.  v2.`okio.i.a` @type ^`int` := v0;
  #L3afa1c.  v0:= new `java.util.zip.CRC32`;
  #L3afa20.  call `<init>`(v0) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L3afa26.  v2.`okio.i.e` @type ^`java.util.zip.CRC32` := v0 @kind object;
  #L3afa2a.  if v3 == 0 then goto L3afa5a;
  #L3afa2e.  v0:= new `java.util.zip.Inflater`;
  #L3afa32.  v1:= 1I;
  #L3afa34.  call `<init>`(v0, v1) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L3afa3a.  v2.`okio.i.c` @type ^`java.util.zip.Inflater` := v0 @kind object;
  #L3afa3e.  call temp:= `b`(v3) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L3afa44.  v3:= temp @kind object;
  #L3afa46.  v2.`okio.i.b` @type ^`okio.e` := v3 @kind object;
  #L3afa4a.  v1:= new `okio.j`;
  #L3afa4e.  call `<init>`(v1, v3, v0) @signature `Lokio/j;.<init>:(Lokio/e;Ljava/util/zip/Inflater;)V` @kind direct;
  #L3afa54.  v2.`okio.i.d` @type ^`okio.j` := v1 @kind object;
  #L3afa58.  return @kind void;
  #L3afa5a.  v3:= new `java.lang.IllegalArgumentException`;
  #L3afa5e.  v0:= "source == null" @kind object;
  #L3afa62.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3afa68.  throw v3;
}
procedure `void` `K`(`okio.i` v5 @kind this, `okio.c` v6 @kind object, `long` v7 , `long` v9 ) @signature `Lokio/i;.K:(Lokio/c;JJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3afd5c.  v6:= v6.`okio.c.a` @type ^`okio.n` @kind object;
  #L3afd60.  v0:= v6.`okio.n.c` @type ^`int`;
  #L3afd64.  v1:= v6.`okio.n.b` @type ^`int`;
  #L3afd68.  v2:= v0 - v1 @kind int;
  #L3afd6c.  v2:= (`long`) v2 @kind i2l;
  #L3afd6e.  v4:= lcmp(v7, v2);
  #L3afd72.  if v4 < 0 then goto L3afd82;
  #L3afd76.  v0:= v0 - v1 @kind int;
  #L3afd78.  v0:= (`long`) v0 @kind i2l;
  #L3afd7a.  v7:= v7 - v0 @kind long;
  #L3afd7c.  v6:= v6.`okio.n.f` @type ^`okio.n` @kind object;
  #L3afd80.  goto L3afd60;
  #L3afd82.  v0:= 0L;
  #L3afd86.  v2:= lcmp(v9, v0);
  #L3afd8a.  if v2 <= 0 then goto L3afdc4;
  #L3afd8e.  v2:= v6.`okio.n.b` @type ^`int`;
  #L3afd92.  v2:= (`long`) v2 @kind i2l;
  #L3afd94.  v2:= v2 + v7 @kind long;
  #L3afd96.  v7:= (`int`) v2 @kind l2i;
  #L3afd98.  v8:= v6.`okio.n.c` @type ^`int`;
  #L3afd9c.  v8:= v8 - v7 @kind int;
  #L3afd9e.  v2:= (`long`) v8 @kind i2l;
  #L3afda0.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3afda6.  v2:= temp @kind wide;
  #L3afda8.  v8:= (`int`) v2 @kind l2i;
  #L3afdaa.  v2:= v5.`okio.i.e` @type ^`java.util.zip.CRC32` @kind object;
  #L3afdae.  v3:= v6.`okio.n.a` @type ^`byte`[] @kind object;
  #L3afdb2.  call `update`(v2, v3, v7, v8) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L3afdb8.  v7:= (`long`) v8 @kind i2l;
  #L3afdba.  v9:= v9 - v7 @kind long;
  #L3afdbc.  v6:= v6.`okio.n.f` @type ^`okio.n` @kind object;
  #L3afdc0.  v7:= v0 @kind wide;
  #L3afdc2.  goto L3afd86;
  #L3afdc4.  return @kind void;
}
procedure `void` `g`(`okio.i` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lokio/i;.g:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3afa7c.  if v6 != v5 then goto L3afa82;
  #L3afa80.  return @kind void;
  #L3afa82.  v0:= new `java.io.IOException`;
  #L3afa86.  v1:= 3I;
  #L3afa88.  v1:= new `java.lang.Object`[v1];
  #L3afa8c.  v2:= 0I;
  #L3afa8e.  v1[v2]:= v4 @kind object;
  #L3afa92.  v4:= 1I;
  #L3afa94.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3afa9a.  v6:= temp @kind object;
  #L3afa9c.  v1[v4]:= v6 @kind object;
  #L3afaa0.  v4:= 2I;
  #L3afaa2.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3afaa8.  v5:= temp @kind object;
  #L3afaaa.  v1[v4]:= v5 @kind object;
  #L3afaae.  v4:= "%s: actual 0x%08x != expected 0x%08x" @kind object;
  #L3afab2.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3afab8.  v4:= temp @kind object;
  #L3afaba.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3afac0.  throw v0;
}
procedure `void` `h`(`okio.i` v17 @kind this) @signature `Lokio/i;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3afaf0.  v6:= v17 @kind object;
  #L3afaf4.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afaf8.  v1:= 10L;
  #L3afafc.  call `N`(v0, v1) @signature `Lokio/e;.N:(J)V` @kind interface;
  #L3afb02.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afb06.  call temp:= `c`(v0) @signature `Lokio/e;.c:()Lokio/c;` @kind interface;
  #L3afb0c.  v0:= temp @kind object;
  #L3afb0e.  v1:= 3L;
  #L3afb12.  call temp:= `V`(v0, v1) @signature `Lokio/c;.V:(J)B` @kind virtual;
  #L3afb18.  v7:= temp;
  #L3afb1a.  v0:= v7 ^> 1;
  #L3afb1e.  v8:= 1I;
  #L3afb20.  v0:= v0 ^& v8 @kind int;
  #L3afb22.  v9:= 0I;
  #L3afb24.  if v0 != v8 then goto L3afb2c;
  #L3afb28.  v10:= 1I;
  #L3afb2a.  goto L3afb2e;
  #L3afb2c.  v10:= 0I;
  #L3afb2e.  if v10 == 0 then goto L3afb50;
  #L3afb32.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afb36.  call temp:= `c`(v0) @signature `Lokio/e;.c:()Lokio/c;` @kind interface;
  #L3afb3c.  v1:= temp @kind object;
  #L3afb3e.  v2:= 0L;
  #L3afb42.  v4:= 10L;
  #L3afb46.  v0:= v17 @kind object;
  #L3afb4a.  call `K`(v0, v1, v2, v4) @signature `Lokio/i;.K:(Lokio/c;JJ)V` @kind direct;
  #L3afb50.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afb54.  call temp:= `readShort`(v0) @signature `Lokio/e;.readShort:()S` @kind interface;
  #L3afb5a.  v0:= temp;
  #L3afb5c.  v1:= 8075I;
  #L3afb60.  v2:= "ID1ID2" @kind object;
  #L3afb64.  call `g`(v6, v2, v1, v0) @signature `Lokio/i;.g:(Ljava/lang/String;II)V` @kind direct;
  #L3afb6a.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afb6e.  v1:= 8L;
  #L3afb72.  call `f`(v0, v1) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L3afb78.  v0:= v7 ^> 2;
  #L3afb7c.  v0:= v0 ^& v8 @kind int;
  #L3afb7e.  if v0 != v8 then goto L3afbfc;
  #L3afb82.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afb86.  v1:= 2L;
  #L3afb8a.  call `N`(v0, v1) @signature `Lokio/e;.N:(J)V` @kind interface;
  #L3afb90.  if v10 == 0 then goto L3afbb2;
  #L3afb94.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afb98.  call temp:= `c`(v0) @signature `Lokio/e;.c:()Lokio/c;` @kind interface;
  #L3afb9e.  v1:= temp @kind object;
  #L3afba0.  v2:= 0L;
  #L3afba4.  v4:= 2L;
  #L3afba8.  v0:= v17 @kind object;
  #L3afbac.  call `K`(v0, v1, v2, v4) @signature `Lokio/i;.K:(Lokio/c;JJ)V` @kind direct;
  #L3afbb2.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afbb6.  call temp:= `c`(v0) @signature `Lokio/e;.c:()Lokio/c;` @kind interface;
  #L3afbbc.  v0:= temp @kind object;
  #L3afbbe.  call temp:= `G`(v0) @signature `Lokio/c;.G:()S` @kind virtual;
  #L3afbc4.  v0:= temp;
  #L3afbc6.  v1:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afbca.  v11:= (`long`) v0 @kind i2l;
  #L3afbcc.  call `N`(v1, v11) @signature `Lokio/e;.N:(J)V` @kind interface;
  #L3afbd2.  if v10 == 0 then goto L3afbf2;
  #L3afbd6.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afbda.  call temp:= `c`(v0) @signature `Lokio/e;.c:()Lokio/c;` @kind interface;
  #L3afbe0.  v1:= temp @kind object;
  #L3afbe2.  v2:= 0L;
  #L3afbe6.  v0:= v17 @kind object;
  #L3afbea.  v4:= v11 @kind wide;
  #L3afbec.  call `K`(v0, v1, v2, v4) @signature `Lokio/i;.K:(Lokio/c;JJ)V` @kind direct;
  #L3afbf2.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afbf6.  call `f`(v0, v11) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L3afbfc.  v0:= v7 ^> 3;
  #L3afc00.  v0:= v0 ^& v8 @kind int;
  #L3afc02.  v11:= -1L;
  #L3afc06.  v13:= 1L;
  #L3afc0a.  if v0 != v8 then goto L3afc60;
  #L3afc0e.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afc12.  call temp:= `P`(v0, v9) @signature `Lokio/e;.P:(B)J` @kind interface;
  #L3afc18.  v15:= temp @kind wide;
  #L3afc1a.  v0:= lcmp(v15, v11);
  #L3afc1e.  if v0 == 0 then goto L3afc54;
  #L3afc22.  if v10 == 0 then goto L3afc44;
  #L3afc26.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afc2a.  call temp:= `c`(v0) @signature `Lokio/e;.c:()Lokio/c;` @kind interface;
  #L3afc30.  v1:= temp @kind object;
  #L3afc32.  v2:= 0L;
  #L3afc36.  v4:= v15 + v13 @kind long;
  #L3afc3a.  v0:= v17 @kind object;
  #L3afc3e.  call `K`(v0, v1, v2, v4) @signature `Lokio/i;.K:(Lokio/c;JJ)V` @kind direct;
  #L3afc44.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afc48.  v1:= v15 + v13 @kind long;
  #L3afc4c.  call `f`(v0, v1) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L3afc52.  goto L3afc60;
  #L3afc54.  v0:= new `java.io.EOFException`;
  #L3afc58.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3afc5e.  throw v0;
  #L3afc60.  v0:= v7 ^> 4;
  #L3afc64.  v0:= v0 ^& v8 @kind int;
  #L3afc66.  if v0 != v8 then goto L3afcba;
  #L3afc6a.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afc6e.  call temp:= `P`(v0, v9) @signature `Lokio/e;.P:(B)J` @kind interface;
  #L3afc74.  v7:= temp @kind wide;
  #L3afc76.  v0:= lcmp(v7, v11);
  #L3afc7a.  if v0 == 0 then goto L3afcae;
  #L3afc7e.  if v10 == 0 then goto L3afca0;
  #L3afc82.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afc86.  call temp:= `c`(v0) @signature `Lokio/e;.c:()Lokio/c;` @kind interface;
  #L3afc8c.  v1:= temp @kind object;
  #L3afc8e.  v2:= 0L;
  #L3afc92.  v4:= v7 + v13 @kind long;
  #L3afc96.  v0:= v17 @kind object;
  #L3afc9a.  call `K`(v0, v1, v2, v4) @signature `Lokio/i;.K:(Lokio/c;JJ)V` @kind direct;
  #L3afca0.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afca4.  v7:= v7 + v13 @kind long;
  #L3afca6.  call `f`(v0, v7) @signature `Lokio/e;.f:(J)V` @kind interface;
  #L3afcac.  goto L3afcba;
  #L3afcae.  v0:= new `java.io.EOFException`;
  #L3afcb2.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3afcb8.  throw v0;
  #L3afcba.  if v10 == 0 then goto L3afcee;
  #L3afcbe.  v0:= v6.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afcc2.  call temp:= `G`(v0) @signature `Lokio/e;.G:()S` @kind interface;
  #L3afcc8.  v0:= temp;
  #L3afcca.  v1:= v6.`okio.i.e` @type ^`java.util.zip.CRC32` @kind object;
  #L3afcce.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L3afcd4.  v1:= temp @kind wide;
  #L3afcd6.  v2:= (`int`) v1 @kind l2i;
  #L3afcd8.  v1:= (`short`) v2 @kind i2s;
  #L3afcda.  v2:= "FHCRC" @kind object;
  #L3afcde.  call `g`(v6, v2, v0, v1) @signature `Lokio/i;.g:(Ljava/lang/String;II)V` @kind direct;
  #L3afce4.  v0:= v6.`okio.i.e` @type ^`java.util.zip.CRC32` @kind object;
  #L3afce8.  call `reset`(v0) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L3afcee.  return @kind void;
}
procedure `void` `s`(`okio.i` v3 @kind this) @signature `Lokio/i;.s:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3afd00.  v0:= v3.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afd04.  call temp:= `E`(v0) @signature `Lokio/e;.E:()I` @kind interface;
  #L3afd0a.  v0:= temp;
  #L3afd0c.  v1:= v3.`okio.i.e` @type ^`java.util.zip.CRC32` @kind object;
  #L3afd10.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L3afd16.  v1:= temp @kind wide;
  #L3afd18.  v2:= (`int`) v1 @kind l2i;
  #L3afd1a.  v1:= "CRC" @kind object;
  #L3afd1e.  call `g`(v3, v1, v0, v2) @signature `Lokio/i;.g:(Ljava/lang/String;II)V` @kind direct;
  #L3afd24.  v0:= v3.`okio.i.b` @type ^`okio.e` @kind object;
  #L3afd28.  call temp:= `E`(v0) @signature `Lokio/e;.E:()I` @kind interface;
  #L3afd2e.  v0:= temp;
  #L3afd30.  v1:= v3.`okio.i.c` @type ^`java.util.zip.Inflater` @kind object;
  #L3afd34.  call temp:= `getBytesWritten`(v1) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L3afd3a.  v1:= temp @kind wide;
  #L3afd3c.  v2:= (`int`) v1 @kind l2i;
  #L3afd3e.  v1:= "ISIZE" @kind object;
  #L3afd42.  call `g`(v3, v1, v0, v2) @signature `Lokio/i;.g:(Ljava/lang/String;II)V` @kind direct;
  #L3afd48.  return @kind void;
}
procedure `long` `I`(`okio.i` v11 @kind this, `okio.c` v12 @kind object, `long` v13 ) @signature `Lokio/i;.I:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3af91c.  v0:= 0L;
  #L3af920.  v2:= lcmp(v13, v0);
  #L3af924.  if v2 < 0 then goto L3af9b2;
  #L3af928.  if v2 != 0 then goto L3af92e;
  #L3af92c.  return v0 @kind wide;
  #L3af92e.  v0:= v11.`okio.i.a` @type ^`int`;
  #L3af932.  v1:= 1I;
  #L3af934.  if v0 != 0 then goto L3af942;
  #L3af938.  call `h`(v11) @signature `Lokio/i;.h:()V` @kind direct;
  #L3af93e.  v11.`okio.i.a` @type ^`int` := v1;
  #L3af942.  v0:= v11.`okio.i.a` @type ^`int`;
  #L3af946.  v2:= -1L;
  #L3af94a.  v4:= 2I;
  #L3af94c.  if v0 != v1 then goto L3af97a;
  #L3af950.  v7:= v12.`okio.c.b` @type ^`long` @kind wide;
  #L3af954.  v0:= v11.`okio.i.d` @type ^`okio.j` @kind object;
  #L3af958.  call temp:= `I`(v0, v12, v13) @signature `Lokio/j;.I:(Lokio/c;J)J` @kind virtual;
  #L3af95e.  v13:= temp @kind wide;
  #L3af960.  v0:= lcmp(v13, v2);
  #L3af964.  if v0 == 0 then goto L3af976;
  #L3af968.  v5:= v11 @kind object;
  #L3af96a.  v6:= v12 @kind object;
  #L3af96c.  v9:= v13 @kind wide;
  #L3af96e.  call `K`(v5, v6, v7, v9) @signature `Lokio/i;.K:(Lokio/c;JJ)V` @kind direct;
  #L3af974.  return v13 @kind wide;
  #L3af976.  v11.`okio.i.a` @type ^`int` := v4;
  #L3af97a.  v12:= v11.`okio.i.a` @type ^`int`;
  #L3af97e.  if v12 != v4 then goto L3af9b0;
  #L3af982.  call `s`(v11) @signature `Lokio/i;.s:()V` @kind direct;
  #L3af988.  v12:= 3I;
  #L3af98a.  v11.`okio.i.a` @type ^`int` := v12;
  #L3af98e.  v12:= v11.`okio.i.b` @type ^`okio.e` @kind object;
  #L3af992.  call temp:= `n`(v12) @signature `Lokio/e;.n:()Z` @kind interface;
  #L3af998.  v12:= temp;
  #L3af99a.  if v12 == 0 then goto L3af9a0;
  #L3af99e.  goto L3af9b0;
  #L3af9a0.  v12:= new `java.io.IOException`;
  #L3af9a4.  v13:= "gzip finished without exhausting source" @kind object;
  #L3af9a8.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af9ae.  throw v12;
  #L3af9b0.  return v2 @kind wide;
  #L3af9b2.  v12:= new `java.lang.IllegalArgumentException`;
  #L3af9b6.  v0:= new `java.lang.StringBuilder`;
  #L3af9ba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3af9c0.  v1:= "byteCount < 0: " @kind object;
  #L3af9c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af9ca.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af9d0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af9d6.  v13:= temp @kind object;
  #L3af9d8.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af9de.  throw v12;
}
procedure `void` `close`(`okio.i` v1 @kind this) @signature `Lokio/i;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3afad4.  v0:= v1.`okio.i.d` @type ^`okio.j` @kind object;
  #L3afad8.  call `close`(v0) @signature `Lokio/j;.close:()V` @kind virtual;
  #L3afade.  return @kind void;
}
procedure `okio.r` `e`(`okio.i` v1 @kind this) @signature `Lokio/i;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af9f0.  v0:= v1.`okio.i.b` @type ^`okio.e` @kind object;
  #L3af9f4.  call temp:= `e`(v0) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3af9fa.  v0:= temp @kind object;
  #L3af9fc.  return v0 @kind object;
}
