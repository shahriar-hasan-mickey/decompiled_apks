record `okio.k` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@okio.k.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b0664.  v0:= constclass @type ^`okio.k` @kind object;
  #L3b0668.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b066e.  v0:= temp @kind object;
  #L3b0670.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3b0676.  v0:= temp @kind object;
  #L3b0678.  `@@okio.k.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3b067c.  return @kind void;
}
procedure `void` `<init>`(`okio.k` v0 @kind this) @signature `Lokio/k;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3b0690.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0696.  return @kind void;
}
procedure `okio.d` `a`(`okio.p` v1 @kind object) @signature `Lokio/k;.a:(Lokio/p;)Lokio/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b04b8.  v0:= new `okio.l`;
  #L3b04bc.  call `<init>`(v0, v1) @signature `Lokio/l;.<init>:(Lokio/p;)V` @kind direct;
  #L3b04c2.  return v0 @kind object;
}
procedure `okio.e` `b`(`okio.q` v1 @kind object) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b04d4.  v0:= new `okio.m`;
  #L3b04d8.  call `<init>`(v0, v1) @signature `Lokio/m;.<init>:(Lokio/q;)V` @kind direct;
  #L3b04de.  return v0 @kind object;
}
procedure `boolean` `c`(`java.lang.AssertionError` v1 @kind object) @signature `Lokio/k;.c:(Ljava/lang/AssertionError;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L3b0454.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L3b045a.  v0:= temp @kind object;
  #L3b045c.  if v0 == 0 then goto L3b0488;
  #L3b0460.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b0466.  v0:= temp @kind object;
  #L3b0468.  if v0 == 0 then goto L3b0488;
  #L3b046c.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b0472.  v1:= temp @kind object;
  #L3b0474.  v0:= "getsockname failed" @kind object;
  #L3b0478.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3b047e.  v1:= temp;
  #L3b0480.  if v1 == 0 then goto L3b0488;
  #L3b0484.  v1:= 1I;
  #L3b0486.  goto L3b048a;
  #L3b0488.  v1:= 0I;
  #L3b048a.  return v1;
}
procedure `okio.p` `d`(`java.io.OutputStream` v1 @kind object, `okio.r` v2 @kind object) @signature `Lokio/k;.d:(Ljava/io/OutputStream;Lokio/r;)Lokio/p;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3b04f0.  if v1 == 0 then goto L3b0514;
  #L3b04f4.  if v2 == 0 then goto L3b0504;
  #L3b04f8.  v0:= new `okio.k$a`;
  #L3b04fc.  call `<init>`(v0, v2, v1) @signature `Lokio/k$a;.<init>:(Lokio/r;Ljava/io/OutputStream;)V` @kind direct;
  #L3b0502.  return v0 @kind object;
  #L3b0504.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b0508.  v2:= "timeout == null" @kind object;
  #L3b050c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0512.  throw v1;
  #L3b0514.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b0518.  v2:= "out == null" @kind object;
  #L3b051c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0522.  throw v1;
}
procedure `okio.p` `e`(`java.net.Socket` v1 @kind object) @signature `Lokio/k;.e:(Ljava/net/Socket;)Lokio/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b0534.  if v1 == 0 then goto L3b0576;
  #L3b0538.  call temp:= `getOutputStream`(v1) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L3b053e.  v0:= temp @kind object;
  #L3b0540.  if v0 == 0 then goto L3b0566;
  #L3b0544.  call temp:= `i`(v1) @signature `Lokio/k;.i:(Ljava/net/Socket;)Lokio/a;` @kind static;
  #L3b054a.  v0:= temp @kind object;
  #L3b054c.  call temp:= `getOutputStream`(v1) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L3b0552.  v1:= temp @kind object;
  #L3b0554.  call temp:= `d`(v1, v0) @signature `Lokio/k;.d:(Ljava/io/OutputStream;Lokio/r;)Lokio/p;` @kind static;
  #L3b055a.  v1:= temp @kind object;
  #L3b055c.  call temp:= `r`(v0, v1) @signature `Lokio/a;.r:(Lokio/p;)Lokio/p;` @kind virtual;
  #L3b0562.  v1:= temp @kind object;
  #L3b0564.  return v1 @kind object;
  #L3b0566.  v1:= new `java.io.IOException`;
  #L3b056a.  v0:= "socket's output stream == null" @kind object;
  #L3b056e.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0574.  throw v1;
  #L3b0576.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b057a.  v0:= "socket == null" @kind object;
  #L3b057e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0584.  throw v1;
}
procedure `okio.q` `f`(`java.io.InputStream` v1 @kind object) @signature `Lokio/k;.f:(Ljava/io/InputStream;)Lokio/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b0598.  v0:= new `okio.r`;
  #L3b059c.  call `<init>`(v0) @signature `Lokio/r;.<init>:()V` @kind direct;
  #L3b05a2.  call temp:= `g`(v1, v0) @signature `Lokio/k;.g:(Ljava/io/InputStream;Lokio/r;)Lokio/q;` @kind static;
  #L3b05a8.  v1:= temp @kind object;
  #L3b05aa.  return v1 @kind object;
}
procedure `okio.q` `g`(`java.io.InputStream` v1 @kind object, `okio.r` v2 @kind object) @signature `Lokio/k;.g:(Ljava/io/InputStream;Lokio/r;)Lokio/q;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3b05bc.  if v1 == 0 then goto L3b05e0;
  #L3b05c0.  if v2 == 0 then goto L3b05d0;
  #L3b05c4.  v0:= new `okio.k$b`;
  #L3b05c8.  call `<init>`(v0, v2, v1) @signature `Lokio/k$b;.<init>:(Lokio/r;Ljava/io/InputStream;)V` @kind direct;
  #L3b05ce.  return v0 @kind object;
  #L3b05d0.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b05d4.  v2:= "timeout == null" @kind object;
  #L3b05d8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b05de.  throw v1;
  #L3b05e0.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b05e4.  v2:= "in == null" @kind object;
  #L3b05e8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b05ee.  throw v1;
}
procedure `okio.q` `h`(`java.net.Socket` v1 @kind object) @signature `Lokio/k;.h:(Ljava/net/Socket;)Lokio/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b0600.  if v1 == 0 then goto L3b0642;
  #L3b0604.  call temp:= `getInputStream`(v1) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L3b060a.  v0:= temp @kind object;
  #L3b060c.  if v0 == 0 then goto L3b0632;
  #L3b0610.  call temp:= `i`(v1) @signature `Lokio/k;.i:(Ljava/net/Socket;)Lokio/a;` @kind static;
  #L3b0616.  v0:= temp @kind object;
  #L3b0618.  call temp:= `getInputStream`(v1) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L3b061e.  v1:= temp @kind object;
  #L3b0620.  call temp:= `g`(v1, v0) @signature `Lokio/k;.g:(Ljava/io/InputStream;Lokio/r;)Lokio/q;` @kind static;
  #L3b0626.  v1:= temp @kind object;
  #L3b0628.  call temp:= `s`(v0, v1) @signature `Lokio/a;.s:(Lokio/q;)Lokio/q;` @kind virtual;
  #L3b062e.  v1:= temp @kind object;
  #L3b0630.  return v1 @kind object;
  #L3b0632.  v1:= new `java.io.IOException`;
  #L3b0636.  v0:= "socket's input stream == null" @kind object;
  #L3b063a.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0640.  throw v1;
  #L3b0642.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b0646.  v0:= "socket == null" @kind object;
  #L3b064a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0650.  throw v1;
}
procedure `okio.a` `i`(`java.net.Socket` v1 @kind object) @signature `Lokio/k;.i:(Ljava/net/Socket;)Lokio/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3b049c.  v0:= new `okio.k$c`;
  #L3b04a0.  call `<init>`(v0, v1) @signature `Lokio/k$c;.<init>:(Ljava/net/Socket;)V` @kind direct;
  #L3b04a6.  return v0 @kind object;
}
