record `okio.c` @kind class @AccessFlag PUBLIC_FINAL extends `okio.e` @kind interface, `okio.d` @kind interface, `java.lang.Cloneable` @kind interface, `java.nio.channels.ByteChannel` @kind interface {
  `okio.n` `okio.c.a` @AccessFlag ;
  `long` `okio.c.b` @AccessFlag ;
}
global `byte`[] `@@okio.c.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ae94c.  v0:= 16I;
  #L3ae950.  v0:= new `byte`[v0];
  #L3ae954.  goto L3ae960;
  #L3ae95a.  `@@okio.c.c` @type ^`byte`[] := v0 @kind object;
  #L3ae95e.  return @kind void;
  #L3ae960.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 97I, 98I, 99I, 100I, 101I, 102I) @kind object;
  #L3ae977.  goto L3ae95a;
}
procedure `void` `<init>`(`okio.c` v0 @kind this) @signature `Lokio/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ae988.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ae98e.  return @kind void;
}
procedure `void` `A`(`okio.c` v7 @kind this, `okio.c` v8 @kind object, `long` v9 ) @signature `Lokio/c;.A:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3aeaec.  if v8 == 0 then goto L3aec06;
  #L3aeaf0.  if v8 == v7 then goto L3aebf6;
  #L3aeaf4.  v0:= v8.`okio.c.b` @type ^`long` @kind wide;
  #L3aeaf8.  v2:= 0L;
  #L3aeafc.  v4:= v9 @kind wide;
  #L3aeafe.  call `b`(v0, v2, v4) @signature `Lokio/s;.b:(JJJ)V` @kind static;
  #L3aeb04.  v0:= 0L;
  #L3aeb08.  v2:= lcmp(v9, v0);
  #L3aeb0c.  if v2 <= 0 then goto L3aebf4;
  #L3aeb10.  v0:= v8.`okio.c.a` @type ^`okio.n` @kind object;
  #L3aeb14.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3aeb18.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3aeb1c.  v1:= v1 - v2 @kind int;
  #L3aeb1e.  v1:= (`long`) v1 @kind i2l;
  #L3aeb20.  v3:= lcmp(v9, v1);
  #L3aeb24.  if v3 >= 0 then goto L3aeb98;
  #L3aeb28.  v1:= v7.`okio.c.a` @type ^`okio.n` @kind object;
  #L3aeb2c.  if v1 == 0 then goto L3aeb36;
  #L3aeb30.  v1:= v1.`okio.n.g` @type ^`okio.n` @kind object;
  #L3aeb34.  goto L3aeb38;
  #L3aeb36.  v1:= 0I;
  #L3aeb38.  if v1 == 0 then goto L3aeb8a;
  #L3aeb3c.  v2:= v1.`okio.n.e` @type ^`boolean` @kind boolean;
  #L3aeb40.  if v2 == 0 then goto L3aeb8a;
  #L3aeb44.  v2:= v1.`okio.n.c` @type ^`int`;
  #L3aeb48.  v2:= (`long`) v2 @kind i2l;
  #L3aeb4a.  v2:= v2 + v9 @kind long;
  #L3aeb4c.  v4:= v1.`okio.n.d` @type ^`boolean` @kind boolean;
  #L3aeb50.  if v4 == 0 then goto L3aeb58;
  #L3aeb54.  v4:= 0I;
  #L3aeb56.  goto L3aeb5c;
  #L3aeb58.  v4:= v1.`okio.n.b` @type ^`int`;
  #L3aeb5c.  v4:= (`long`) v4 @kind i2l;
  #L3aeb5e.  v2:= v2 - v4 @kind long;
  #L3aeb60.  v4:= 8192L;
  #L3aeb64.  v6:= lcmp(v2, v4);
  #L3aeb68.  if v6 > 0 then goto L3aeb8a;
  #L3aeb6c.  v2:= (`int`) v9 @kind l2i;
  #L3aeb6e.  call `f`(v0, v1, v2) @signature `Lokio/n;.f:(Lokio/n;I)V` @kind virtual;
  #L3aeb74.  v0:= v8.`okio.c.b` @type ^`long` @kind wide;
  #L3aeb78.  v0:= v0 - v9 @kind long;
  #L3aeb7a.  v8.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3aeb7e.  v0:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3aeb82.  v0:= v0 + v9 @kind long;
  #L3aeb84.  v7.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3aeb88.  return @kind void;
  #L3aeb8a.  v1:= (`int`) v9 @kind l2i;
  #L3aeb8c.  call temp:= `e`(v0, v1) @signature `Lokio/n;.e:(I)Lokio/n;` @kind virtual;
  #L3aeb92.  v0:= temp @kind object;
  #L3aeb94.  v8.`okio.c.a` @type ^`okio.n` := v0 @kind object;
  #L3aeb98.  v0:= v8.`okio.c.a` @type ^`okio.n` @kind object;
  #L3aeb9c.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3aeba0.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3aeba4.  v1:= v1 - v2 @kind int;
  #L3aeba6.  v1:= (`long`) v1 @kind i2l;
  #L3aeba8.  call temp:= `b`(v0) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3aebae.  v3:= temp @kind object;
  #L3aebb0.  v8.`okio.c.a` @type ^`okio.n` := v3 @kind object;
  #L3aebb4.  v3:= v7.`okio.c.a` @type ^`okio.n` @kind object;
  #L3aebb8.  if v3 != 0 then goto L3aebca;
  #L3aebbc.  v7.`okio.c.a` @type ^`okio.n` := v0 @kind object;
  #L3aebc0.  v0.`okio.n.g` @type ^`okio.n` := v0 @kind object;
  #L3aebc4.  v0.`okio.n.f` @type ^`okio.n` := v0 @kind object;
  #L3aebc8.  goto L3aebdc;
  #L3aebca.  v3:= v3.`okio.n.g` @type ^`okio.n` @kind object;
  #L3aebce.  call temp:= `c`(v3, v0) @signature `Lokio/n;.c:(Lokio/n;)Lokio/n;` @kind virtual;
  #L3aebd4.  v0:= temp @kind object;
  #L3aebd6.  call `a`(v0) @signature `Lokio/n;.a:()V` @kind virtual;
  #L3aebdc.  v3:= v8.`okio.c.b` @type ^`long` @kind wide;
  #L3aebe0.  v3:= v3 - v1 @kind long;
  #L3aebe2.  v8.`okio.c.b` @type ^`long` := v3 @kind wide;
  #L3aebe6.  v3:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3aebea.  v3:= v3 + v1 @kind long;
  #L3aebec.  v7.`okio.c.b` @type ^`long` := v3 @kind wide;
  #L3aebf0.  v9:= v9 - v1 @kind long;
  #L3aebf2.  goto L3aeb04;
  #L3aebf4.  return @kind void;
  #L3aebf6.  v8:= new `java.lang.IllegalArgumentException`;
  #L3aebfa.  v9:= "source == this" @kind object;
  #L3aebfe.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aec04.  throw v8;
  #L3aec06.  v8:= new `java.lang.IllegalArgumentException`;
  #L3aec0a.  v9:= "source == null" @kind object;
  #L3aec0e.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aec14.  throw v8;
}
procedure `okio.d` `B`(`okio.c` v0 @kind this, `long` v1 ) @signature `Lokio/c;.B:(J)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ae68c.  call temp:= `p0`(v0, v1) @signature `Lokio/c;.p0:(J)Lokio/c;` @kind virtual;
  #L3ae692.  v1:= temp @kind object;
  #L3ae694.  return v1 @kind object;
}
procedure `java.lang.String` `D`(`okio.c` v2 @kind this) @signature `Lokio/c;.D:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ad6b8.  v0:= 9223372036854775807L;
  #L3ad6c2.  call temp:= `r`(v2, v0) @signature `Lokio/c;.r:(J)Ljava/lang/String;` @kind virtual;
  #L3ad6c8.  v0:= temp @kind object;
  #L3ad6ca.  return v0 @kind object;
}
procedure `int` `E`(`okio.c` v1 @kind this) @signature `Lokio/c;.E:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ad3fc.  call temp:= `readInt`(v1) @signature `Lokio/c;.readInt:()I` @kind virtual;
  #L3ad402.  v0:= temp;
  #L3ad404.  call temp:= `c`(v0) @signature `Lokio/s;.c:(I)I` @kind static;
  #L3ad40a.  v0:= temp;
  #L3ad40c.  return v0;
}
procedure `byte`[] `F`(`okio.c` v6 @kind this, `long` v7 ) @signature `Lokio/c;.F:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ad138.  v0:= v6.`okio.c.b` @type ^`long` @kind wide;
  #L3ad13c.  v2:= 0L;
  #L3ad140.  v4:= v7 @kind wide;
  #L3ad142.  call `b`(v0, v2, v4) @signature `Lokio/s;.b:(JJJ)V` @kind static;
  #L3ad148.  v0:= 2147483647L;
  #L3ad14e.  v2:= lcmp(v7, v0);
  #L3ad152.  if v2 > 0 then goto L3ad164;
  #L3ad156.  v8:= (`int`) v7 @kind l2i;
  #L3ad158.  v7:= new `byte`[v8];
  #L3ad15c.  call `readFully`(v6, v7) @signature `Lokio/c;.readFully:([B)V` @kind virtual;
  #L3ad162.  return v7 @kind object;
  #L3ad164.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ad168.  v1:= new `java.lang.StringBuilder`;
  #L3ad16c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ad172.  v2:= "byteCount > Integer.MAX_VALUE: " @kind object;
  #L3ad176.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad17c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad182.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ad188.  v7:= temp @kind object;
  #L3ad18a.  call `<init>`(v0, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ad190.  throw v0;
}
procedure `short` `G`(`okio.c` v1 @kind this) @signature `Lokio/c;.G:()S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ae928.  call temp:= `readShort`(v1) @signature `Lokio/c;.readShort:()S` @kind virtual;
  #L3ae92e.  v0:= temp;
  #L3ae930.  call temp:= `d`(v0) @signature `Lokio/s;.d:(S)S` @kind static;
  #L3ae936.  v0:= temp;
  #L3ae938.  return v0;
}
procedure `long` `I`(`okio.c` v5 @kind this, `okio.c` v6 @kind object, `long` v7 ) @signature `Lokio/c;.I:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ada38.  if v6 == 0 then goto L3ada9a;
  #L3ada3c.  v0:= 0L;
  #L3ada40.  v2:= lcmp(v7, v0);
  #L3ada44.  if v2 < 0 then goto L3ada6c;
  #L3ada48.  v2:= v5.`okio.c.b` @type ^`long` @kind wide;
  #L3ada4c.  v4:= lcmp(v2, v0);
  #L3ada50.  if v4 != 0 then goto L3ada5a;
  #L3ada54.  v6:= -1L;
  #L3ada58.  return v6 @kind wide;
  #L3ada5a.  v0:= lcmp(v7, v2);
  #L3ada5e.  if v0 <= 0 then goto L3ada64;
  #L3ada62.  v7:= v2 @kind wide;
  #L3ada64.  call `A`(v6, v5, v7) @signature `Lokio/c;.A:(Lokio/c;J)V` @kind virtual;
  #L3ada6a.  return v7 @kind wide;
  #L3ada6c.  v6:= new `java.lang.IllegalArgumentException`;
  #L3ada70.  v0:= new `java.lang.StringBuilder`;
  #L3ada74.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ada7a.  v1:= "byteCount < 0: " @kind object;
  #L3ada7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ada84.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ada8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ada90.  v7:= temp @kind object;
  #L3ada92.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ada98.  throw v6;
  #L3ada9a.  v6:= new `java.lang.IllegalArgumentException`;
  #L3ada9e.  v7:= "sink == null" @kind object;
  #L3adaa2.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3adaa8.  throw v6;
}
procedure `okio.c` `K`(`okio.c` v6 @kind this) @signature `Lokio/c;.K:()Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3adca8.  v0:= new `okio.c`;
  #L3adcac.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3adcb2.  v1:= v6.`okio.c.b` @type ^`long` @kind wide;
  #L3adcb6.  v3:= 0L;
  #L3adcba.  v5:= lcmp(v1, v3);
  #L3adcbe.  if v5 != 0 then goto L3adcc4;
  #L3adcc2.  return v0 @kind object;
  #L3adcc4.  v1:= v6.`okio.c.a` @type ^`okio.n` @kind object;
  #L3adcc8.  call temp:= `d`(v1) @signature `Lokio/n;.d:()Lokio/n;` @kind virtual;
  #L3adcce.  v1:= temp @kind object;
  #L3adcd0.  v0.`okio.c.a` @type ^`okio.n` := v1 @kind object;
  #L3adcd4.  v1.`okio.n.g` @type ^`okio.n` := v1 @kind object;
  #L3adcd8.  v1.`okio.n.f` @type ^`okio.n` := v1 @kind object;
  #L3adcdc.  v1:= v6.`okio.c.a` @type ^`okio.n` @kind object;
  #L3adce0.  v1:= v1.`okio.n.f` @type ^`okio.n` @kind object;
  #L3adce4.  v2:= v6.`okio.c.a` @type ^`okio.n` @kind object;
  #L3adce8.  if v1 == v2 then goto L3add04;
  #L3adcec.  v2:= v0.`okio.c.a` @type ^`okio.n` @kind object;
  #L3adcf0.  v2:= v2.`okio.n.g` @type ^`okio.n` @kind object;
  #L3adcf4.  call temp:= `d`(v1) @signature `Lokio/n;.d:()Lokio/n;` @kind virtual;
  #L3adcfa.  v3:= temp @kind object;
  #L3adcfc.  call temp:= `c`(v2, v3) @signature `Lokio/n;.c:(Lokio/n;)Lokio/n;` @kind virtual;
  #L3add02.  goto L3adce0;
  #L3add04.  v1:= v6.`okio.c.b` @type ^`long` @kind wide;
  #L3add08.  v0.`okio.c.b` @type ^`long` := v1 @kind wide;
  #L3add0c.  return v0 @kind object;
}
procedure `void` `N`(`okio.c` v3 @kind this, `long` v4 ) @signature `Lokio/c;.N:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aea40.  v0:= v3.`okio.c.b` @type ^`long` @kind wide;
  #L3aea44.  v2:= lcmp(v0, v4);
  #L3aea48.  if v2 < 0 then goto L3aea4e;
  #L3aea4c.  return @kind void;
  #L3aea4e.  v4:= new `java.io.EOFException`;
  #L3aea52.  call `<init>`(v4) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3aea58.  throw v4;
}
procedure `long` `P`(`okio.c` v6 @kind this, `byte` v7 ) @signature `Lokio/c;.P:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ad8b0.  v2:= 0L;
  #L3ad8b4.  v4:= 9223372036854775807L;
  #L3ad8be.  v0:= v6 @kind object;
  #L3ad8c0.  v1:= v7;
  #L3ad8c2.  call temp:= `W`(v0, v1, v2, v4) @signature `Lokio/c;.W:(BJJ)J` @kind virtual;
  #L3ad8c8.  v0:= temp @kind wide;
  #L3ad8ca.  return v0 @kind wide;
}
procedure `long` `Q`(`okio.c` v15 @kind this) @signature `Lokio/c;.Q:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L3adabc.  v0:= v15.`okio.c.b` @type ^`long` @kind wide;
  #L3adac0.  v2:= 0L;
  #L3adac4.  v4:= lcmp(v0, v2);
  #L3adac8.  if v4 == 0 then goto L3adc14;
  #L3adacc.  v0:= 0I;
  #L3adace.  v4:= v2 @kind wide;
  #L3adad0.  v1:= 0I;
  #L3adad2.  v6:= v15.`okio.c.a` @type ^`okio.n` @kind object;
  #L3adad6.  v7:= v6.`okio.n.a` @type ^`byte`[] @kind object;
  #L3adada.  v8:= v6.`okio.n.b` @type ^`int`;
  #L3adade.  v9:= v6.`okio.n.c` @type ^`int`;
  #L3adae2.  if v8 >= v9 then goto L3adbde;
  #L3adae6.  v10:= v7[v8] @kind byte;
  #L3adaea.  v11:= 48I;
  #L3adaee.  if v10 < v11 then goto L3adb00;
  #L3adaf2.  v11:= 57I;
  #L3adaf6.  if v10 > v11 then goto L3adb00;
  #L3adafa.  v11:= v10 + -48;
  #L3adafe.  goto L3adb30;
  #L3adb00.  v11:= 97I;
  #L3adb04.  if v10 < v11 then goto L3adb1a;
  #L3adb08.  v11:= 102I;
  #L3adb0c.  if v10 > v11 then goto L3adb1a;
  #L3adb10.  v11:= v10 + -97;
  #L3adb14.  v11:= v11 + 10;
  #L3adb18.  goto L3adb30;
  #L3adb1a.  v11:= 65I;
  #L3adb1e.  if v10 < v11 then goto L3adba0;
  #L3adb22.  v11:= 70I;
  #L3adb26.  if v10 > v11 then goto L3adba0;
  #L3adb2a.  v11:= v10 + -65;
  #L3adb2e.  goto L3adb14;
  #L3adb30.  v12:= -3.105036184601418E231D;
  #L3adb34.  v12:= v12 ^& v4 @kind long;
  #L3adb36.  v14:= lcmp(v12, v2);
  #L3adb3a.  if v14 != 0 then goto L3adb50;
  #L3adb3e.  v10:= 4I;
  #L3adb40.  v4:= v4 ^< v10 @kind long;
  #L3adb42.  v10:= (`long`) v11 @kind i2l;
  #L3adb44.  v4:= v4 ^| v10 @kind long;
  #L3adb46.  v8:= v8 + 1;
  #L3adb4a.  v0:= v0 + 1;
  #L3adb4e.  goto L3adae2;
  #L3adb50.  v0:= new `okio.c`;
  #L3adb54.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3adb5a.  call temp:= `p0`(v0, v4) @signature `Lokio/c;.p0:(J)Lokio/c;` @kind virtual;
  #L3adb60.  v0:= temp @kind object;
  #L3adb62.  call temp:= `o0`(v0, v10) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3adb68.  v0:= temp @kind object;
  #L3adb6a.  v1:= new `java.lang.NumberFormatException`;
  #L3adb6e.  v2:= new `java.lang.StringBuilder`;
  #L3adb72.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3adb78.  v3:= "Number too large: " @kind object;
  #L3adb7c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3adb82.  call temp:= `d0`(v0) @signature `Lokio/c;.d0:()Ljava/lang/String;` @kind virtual;
  #L3adb88.  v0:= temp @kind object;
  #L3adb8a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3adb90.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3adb96.  v0:= temp @kind object;
  #L3adb98.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3adb9e.  throw v1;
  #L3adba0.  if v0 == 0 then goto L3adba8;
  #L3adba4.  v1:= 1I;
  #L3adba6.  goto L3adbde;
  #L3adba8.  v0:= new `java.lang.NumberFormatException`;
  #L3adbac.  v1:= new `java.lang.StringBuilder`;
  #L3adbb0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3adbb6.  v2:= "Expected leading [0-9a-fA-F] character but was 0x" @kind object;
  #L3adbba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3adbc0.  call temp:= `toHexString`(v10) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L3adbc6.  v2:= temp @kind object;
  #L3adbc8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3adbce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3adbd4.  v1:= temp @kind object;
  #L3adbd6.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3adbdc.  throw v0;
  #L3adbde.  if v8 != v9 then goto L3adbf6;
  #L3adbe2.  call temp:= `b`(v6) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3adbe8.  v7:= temp @kind object;
  #L3adbea.  v15.`okio.c.a` @type ^`okio.n` := v7 @kind object;
  #L3adbee.  call `a`(v6) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3adbf4.  goto L3adbfa;
  #L3adbf6.  v6.`okio.n.b` @type ^`int` := v8;
  #L3adbfa.  if v1 != 0 then goto L3adc06;
  #L3adbfe.  v6:= v15.`okio.c.a` @type ^`okio.n` @kind object;
  #L3adc02.  if v6 != 0 then goto L3adad2;
  #L3adc06.  v1:= v15.`okio.c.b` @type ^`long` @kind wide;
  #L3adc0a.  v6:= (`long`) v0 @kind i2l;
  #L3adc0c.  v1:= v1 - v6 @kind long;
  #L3adc0e.  v15.`okio.c.b` @type ^`long` := v1 @kind wide;
  #L3adc12.  return v4 @kind wide;
  #L3adc14.  v0:= new `java.lang.IllegalStateException`;
  #L3adc18.  v1:= "size == 0" @kind object;
  #L3adc1c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3adc22.  throw v0;
}
procedure `long` `R`(`okio.c` v5 @kind this) @signature `Lokio/c;.R:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ad864.  v0:= v5.`okio.c.b` @type ^`long` @kind wide;
  #L3ad868.  v2:= 0L;
  #L3ad86c.  v4:= lcmp(v0, v2);
  #L3ad870.  if v4 != 0 then goto L3ad876;
  #L3ad874.  return v2 @kind wide;
  #L3ad876.  v2:= v5.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad87a.  v2:= v2.`okio.n.g` @type ^`okio.n` @kind object;
  #L3ad87e.  v3:= v2.`okio.n.c` @type ^`int`;
  #L3ad882.  v4:= 8192I;
  #L3ad886.  if v3 >= v4 then goto L3ad89c;
  #L3ad88a.  v4:= v2.`okio.n.e` @type ^`boolean` @kind boolean;
  #L3ad88e.  if v4 == 0 then goto L3ad89c;
  #L3ad892.  v2:= v2.`okio.n.b` @type ^`int`;
  #L3ad896.  v3:= v3 - v2 @kind int;
  #L3ad898.  v2:= (`long`) v3 @kind i2l;
  #L3ad89a.  v0:= v0 - v2 @kind long;
  #L3ad89c.  return v0 @kind wide;
}
procedure `okio.c` `T`(`okio.c` v8 @kind this, `okio.c` v9 @kind object, `long` v10 , `long` v12 ) @signature `Lokio/c;.T:(Lokio/c;JJ)Lokio/c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3add20.  if v9 == 0 then goto L3addda;
  #L3add24.  v0:= v8.`okio.c.b` @type ^`long` @kind wide;
  #L3add28.  v2:= v10 @kind wide;
  #L3add2a.  v4:= v12 @kind wide;
  #L3add2c.  call `b`(v0, v2, v4) @signature `Lokio/s;.b:(JJJ)V` @kind static;
  #L3add32.  v0:= 0L;
  #L3add36.  v2:= lcmp(v12, v0);
  #L3add3a.  if v2 != 0 then goto L3add40;
  #L3add3e.  return v8 @kind object;
  #L3add40.  v2:= v9.`okio.c.b` @type ^`long` @kind wide;
  #L3add44.  v2:= v2 + v12 @kind long;
  #L3add46.  v9.`okio.c.b` @type ^`long` := v2 @kind wide;
  #L3add4a.  v2:= v8.`okio.c.a` @type ^`okio.n` @kind object;
  #L3add4e.  v3:= v2.`okio.n.c` @type ^`int`;
  #L3add52.  v4:= v2.`okio.n.b` @type ^`int`;
  #L3add56.  v5:= v3 - v4 @kind int;
  #L3add5a.  v5:= (`long`) v5 @kind i2l;
  #L3add5c.  v7:= lcmp(v10, v5);
  #L3add60.  if v7 < 0 then goto L3add70;
  #L3add64.  v3:= v3 - v4 @kind int;
  #L3add66.  v3:= (`long`) v3 @kind i2l;
  #L3add68.  v10:= v10 - v3 @kind long;
  #L3add6a.  v2:= v2.`okio.n.f` @type ^`okio.n` @kind object;
  #L3add6e.  goto L3add4e;
  #L3add70.  v3:= lcmp(v12, v0);
  #L3add74.  if v3 <= 0 then goto L3addd8;
  #L3add78.  call temp:= `d`(v2) @signature `Lokio/n;.d:()Lokio/n;` @kind virtual;
  #L3add7e.  v3:= temp @kind object;
  #L3add80.  v4:= v3.`okio.n.b` @type ^`int`;
  #L3add84.  v4:= (`long`) v4 @kind i2l;
  #L3add86.  v4:= v4 + v10 @kind long;
  #L3add88.  v10:= (`int`) v4 @kind l2i;
  #L3add8a.  v3.`okio.n.b` @type ^`int` := v10;
  #L3add8e.  v11:= (`int`) v12 @kind l2i;
  #L3add90.  v10:= v10 + v11 @kind int;
  #L3add92.  v11:= v3.`okio.n.c` @type ^`int`;
  #L3add96.  call temp:= `min`(v10, v11) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3add9c.  v10:= temp;
  #L3add9e.  v3.`okio.n.c` @type ^`int` := v10;
  #L3adda2.  v10:= v9.`okio.c.a` @type ^`okio.n` @kind object;
  #L3adda6.  if v10 != 0 then goto L3addb8;
  #L3addaa.  v3.`okio.n.g` @type ^`okio.n` := v3 @kind object;
  #L3addae.  v3.`okio.n.f` @type ^`okio.n` := v3 @kind object;
  #L3addb2.  v9.`okio.c.a` @type ^`okio.n` := v3 @kind object;
  #L3addb6.  goto L3addc2;
  #L3addb8.  v10:= v10.`okio.n.g` @type ^`okio.n` @kind object;
  #L3addbc.  call temp:= `c`(v10, v3) @signature `Lokio/n;.c:(Lokio/n;)Lokio/n;` @kind virtual;
  #L3addc2.  v10:= v3.`okio.n.c` @type ^`int`;
  #L3addc6.  v11:= v3.`okio.n.b` @type ^`int`;
  #L3addca.  v10:= v10 - v11 @kind int;
  #L3addcc.  v10:= (`long`) v10 @kind i2l;
  #L3addce.  v12:= v12 - v10 @kind long;
  #L3addd0.  v2:= v2.`okio.n.f` @type ^`okio.n` @kind object;
  #L3addd4.  v10:= v0 @kind wide;
  #L3addd6.  goto L3add70;
  #L3addd8.  return v8 @kind object;
  #L3addda.  v9:= new `java.lang.IllegalArgumentException`;
  #L3addde.  v10:= "out == null" @kind object;
  #L3adde2.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3adde8.  throw v9;
}
procedure `okio.c` `U`(`okio.c` v0 @kind this) @signature `Lokio/c;.U:()Lokio/c;` @AccessFlag PUBLIC {
    temp;

  #L3addfc.  return v0 @kind object;
}
procedure `byte` `V`(`okio.c` v6 @kind this, `long` v7 ) @signature `Lokio/c;.V:(J)B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3acffc.  v0:= v6.`okio.c.b` @type ^`long` @kind wide;
  #L3ad000.  v4:= 1L;
  #L3ad004.  v2:= v7 @kind wide;
  #L3ad006.  call `b`(v0, v2, v4) @signature `Lokio/s;.b:(JJJ)V` @kind static;
  #L3ad00c.  v0:= v6.`okio.c.b` @type ^`long` @kind wide;
  #L3ad010.  v2:= v0 - v7 @kind long;
  #L3ad014.  v4:= lcmp(v2, v7);
  #L3ad018.  if v4 <= 0 then goto L3ad04a;
  #L3ad01c.  v0:= v6.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad020.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3ad024.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3ad028.  v1:= v1 - v2 @kind int;
  #L3ad02a.  v3:= (`long`) v1 @kind i2l;
  #L3ad02c.  v1:= lcmp(v7, v3);
  #L3ad030.  if v1 >= 0 then goto L3ad042;
  #L3ad034.  v0:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad038.  v8:= (`int`) v7 @kind l2i;
  #L3ad03a.  v2:= v2 + v8 @kind int;
  #L3ad03c.  v7:= v0[v2] @kind byte;
  #L3ad040.  return v7;
  #L3ad042.  v7:= v7 - v3 @kind long;
  #L3ad044.  v0:= v0.`okio.n.f` @type ^`okio.n` @kind object;
  #L3ad048.  goto L3ad020;
  #L3ad04a.  v7:= v7 - v0 @kind long;
  #L3ad04c.  v0:= v6.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad050.  v0:= v0.`okio.n.g` @type ^`okio.n` @kind object;
  #L3ad054.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3ad058.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3ad05c.  v1:= v1 - v2 @kind int;
  #L3ad05e.  v3:= (`long`) v1 @kind i2l;
  #L3ad060.  v7:= v7 + v3 @kind long;
  #L3ad062.  v3:= 0L;
  #L3ad066.  v1:= lcmp(v7, v3);
  #L3ad06a.  if v1 < 0 then goto L3ad050;
  #L3ad06e.  v0:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad072.  v8:= (`int`) v7 @kind l2i;
  #L3ad074.  v2:= v2 + v8 @kind int;
  #L3ad076.  v7:= v0[v2] @kind byte;
  #L3ad07a.  return v7;
}
procedure `long` `W`(`okio.c` v15 @kind this, `byte` v16 , `long` v17 , `long` v19 ) @signature `Lokio/c;.W:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L3ad8dc.  v0:= v15 @kind object;
  #L3ad8de.  v1:= 0L;
  #L3ad8e2.  v3:= lcmp(v17, v1);
  #L3ad8e6.  if v3 < 0 then goto L3ad9da;
  #L3ad8ea.  v3:= lcmp(v19, v17);
  #L3ad8ee.  if v3 < 0 then goto L3ad9da;
  #L3ad8f2.  v3:= v0.`okio.c.b` @type ^`long` @kind wide;
  #L3ad8f6.  v5:= lcmp(v19, v3);
  #L3ad8fa.  if v5 <= 0 then goto L3ad902;
  #L3ad8fe.  v5:= v3 @kind wide;
  #L3ad900.  goto L3ad906;
  #L3ad902.  v5:= v19 @kind wide;
  #L3ad906.  v7:= -1L;
  #L3ad90a.  v9:= lcmp(v17, v5);
  #L3ad90e.  if v9 != 0 then goto L3ad914;
  #L3ad912.  return v7 @kind wide;
  #L3ad914.  v9:= v0.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad918.  if v9 != 0 then goto L3ad91e;
  #L3ad91c.  return v7 @kind wide;
  #L3ad91e.  v10:= v3 - v17 @kind long;
  #L3ad922.  v12:= lcmp(v10, v17);
  #L3ad926.  if v12 >= 0 then goto L3ad946;
  #L3ad92a.  v1:= lcmp(v3, v17);
  #L3ad92e.  if v1 <= 0 then goto L3ad966;
  #L3ad932.  v9:= v9.`okio.n.g` @type ^`okio.n` @kind object;
  #L3ad936.  v1:= v9.`okio.n.c` @type ^`int`;
  #L3ad93a.  v2:= v9.`okio.n.b` @type ^`int`;
  #L3ad93e.  v1:= v1 - v2 @kind int;
  #L3ad940.  v1:= (`long`) v1 @kind i2l;
  #L3ad942.  v3:= v3 - v1 @kind long;
  #L3ad944.  goto L3ad92a;
  #L3ad946.  v3:= v9.`okio.n.c` @type ^`int`;
  #L3ad94a.  v4:= v9.`okio.n.b` @type ^`int`;
  #L3ad94e.  v3:= v3 - v4 @kind int;
  #L3ad950.  v3:= (`long`) v3 @kind i2l;
  #L3ad952.  v3:= v3 + v1 @kind long;
  #L3ad954.  v10:= lcmp(v3, v17);
  #L3ad958.  if v10 >= 0 then goto L3ad964;
  #L3ad95c.  v9:= v9.`okio.n.f` @type ^`okio.n` @kind object;
  #L3ad960.  v1:= v3 @kind wide;
  #L3ad962.  goto L3ad946;
  #L3ad964.  v3:= v1 @kind wide;
  #L3ad966.  v1:= v17 @kind wide;
  #L3ad96a.  v10:= lcmp(v3, v5);
  #L3ad96e.  if v10 >= 0 then goto L3ad9d8;
  #L3ad972.  v10:= v9.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad976.  v11:= v9.`okio.n.c` @type ^`int`;
  #L3ad97a.  v11:= (`long`) v11 @kind i2l;
  #L3ad97c.  v13:= v9.`okio.n.b` @type ^`int`;
  #L3ad980.  v13:= (`long`) v13 @kind i2l;
  #L3ad982.  v13:= v13 + v5 @kind long;
  #L3ad984.  v13:= v13 - v3 @kind long;
  #L3ad986.  call temp:= `min`(v11, v13) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3ad98c.  v11:= temp @kind wide;
  #L3ad98e.  v12:= (`int`) v11 @kind l2i;
  #L3ad990.  v11:= v9.`okio.n.b` @type ^`int`;
  #L3ad994.  v13:= (`long`) v11 @kind i2l;
  #L3ad996.  v13:= v13 + v1 @kind long;
  #L3ad998.  v13:= v13 - v3 @kind long;
  #L3ad99a.  v1:= (`int`) v13 @kind l2i;
  #L3ad99c.  if v1 >= v12 then goto L3ad9be;
  #L3ad9a0.  v2:= v10[v1] @kind byte;
  #L3ad9a4.  v11:= v16;
  #L3ad9a8.  if v2 != v11 then goto L3ad9b8;
  #L3ad9ac.  v2:= v9.`okio.n.b` @type ^`int`;
  #L3ad9b0.  v1:= v1 - v2 @kind int;
  #L3ad9b2.  v1:= (`long`) v1 @kind i2l;
  #L3ad9b4.  v1:= v1 + v3 @kind long;
  #L3ad9b6.  return v1 @kind wide;
  #L3ad9b8.  v1:= v1 + 1;
  #L3ad9bc.  goto L3ad99c;
  #L3ad9be.  v11:= v16;
  #L3ad9c2.  v1:= v9.`okio.n.c` @type ^`int`;
  #L3ad9c6.  v2:= v9.`okio.n.b` @type ^`int`;
  #L3ad9ca.  v1:= v1 - v2 @kind int;
  #L3ad9cc.  v1:= (`long`) v1 @kind i2l;
  #L3ad9ce.  v3:= v3 + v1 @kind long;
  #L3ad9d0.  v9:= v9.`okio.n.f` @type ^`okio.n` @kind object;
  #L3ad9d4.  v1:= v3 @kind wide;
  #L3ad9d6.  goto L3ad96a;
  #L3ad9d8.  return v7 @kind wide;
  #L3ad9da.  v1:= new `java.lang.IllegalArgumentException`;
  #L3ad9de.  v2:= 3I;
  #L3ad9e0.  v2:= new `java.lang.Object`[v2];
  #L3ad9e4.  v3:= 0I;
  #L3ad9e6.  v4:= v0.`okio.c.b` @type ^`long` @kind wide;
  #L3ad9ea.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3ad9f0.  v4:= temp @kind object;
  #L3ad9f2.  v2[v3]:= v4 @kind object;
  #L3ad9f6.  call temp:= `valueOf`(v17) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3ad9fc.  v3:= temp @kind object;
  #L3ad9fe.  v4:= 1I;
  #L3ada00.  v2[v4]:= v3 @kind object;
  #L3ada04.  v3:= 2I;
  #L3ada06.  call temp:= `valueOf`(v19) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3ada0c.  v4:= temp @kind object;
  #L3ada0e.  v2[v3]:= v4 @kind object;
  #L3ada12.  v3:= "size=%s fromIndex=%s toIndex=%s" @kind object;
  #L3ada16.  call temp:= `format`(v3, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3ada1c.  v2:= temp @kind object;
  #L3ada1e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ada24.  throw v1;
}
procedure `java.io.OutputStream` `X`(`okio.c` v1 @kind this) @signature `Lokio/c;.X:()Ljava/io/OutputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ad498.  v0:= new `okio.c$a`;
  #L3ad49c.  call `<init>`(v0, v1) @signature `Lokio/c$a;.<init>:(Lokio/c;)V` @kind direct;
  #L3ad4a2.  return v0 @kind object;
}
procedure `boolean` `Y`(`okio.c` v6 @kind this, `long` v7 , `okio.ByteString` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lokio/c;.Y:(JLokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3acf84.  v0:= 0I;
  #L3acf86.  v1:= 0L;
  #L3acf8a.  v3:= lcmp(v7, v1);
  #L3acf8e.  if v3 < 0 then goto L3acfe8;
  #L3acf92.  if v10 < 0 then goto L3acfe8;
  #L3acf96.  if v11 < 0 then goto L3acfe8;
  #L3acf9a.  v1:= v6.`okio.c.b` @type ^`long` @kind wide;
  #L3acf9e.  v1:= v1 - v7 @kind long;
  #L3acfa0.  v3:= (`long`) v11 @kind i2l;
  #L3acfa2.  v5:= lcmp(v1, v3);
  #L3acfa6.  if v5 < 0 then goto L3acfe8;
  #L3acfaa.  call temp:= `p`(v9) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3acfb0.  v1:= temp;
  #L3acfb2.  v1:= v1 - v10 @kind int;
  #L3acfb4.  if v1 >= v11 then goto L3acfba;
  #L3acfb8.  goto L3acfe8;
  #L3acfba.  v1:= 0I;
  #L3acfbc.  if v1 >= v11 then goto L3acfe4;
  #L3acfc0.  v2:= (`long`) v1 @kind i2l;
  #L3acfc2.  v2:= v2 + v7 @kind long;
  #L3acfc4.  call temp:= `V`(v6, v2) @signature `Lokio/c;.V:(J)B` @kind virtual;
  #L3acfca.  v2:= temp;
  #L3acfcc.  v3:= v10 + v1 @kind int;
  #L3acfd0.  call temp:= `h`(v9, v3) @signature `Lokio/ByteString;.h:(I)B` @kind virtual;
  #L3acfd6.  v3:= temp;
  #L3acfd8.  if v2 == v3 then goto L3acfde;
  #L3acfdc.  return v0;
  #L3acfde.  v1:= v1 + 1;
  #L3acfe2.  goto L3acfbc;
  #L3acfe4.  v7:= 1I;
  #L3acfe6.  return v7;
  #L3acfe8.  return v0;
}
procedure `int` `Z`(`okio.c` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/c;.Z:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ad1f0.  v0:= length @variable v8;
  #L3ad1f2.  v1:= (`long`) v0 @kind i2l;
  #L3ad1f4.  v3:= (`long`) v9 @kind i2l;
  #L3ad1f6.  v5:= (`long`) v10 @kind i2l;
  #L3ad1f8.  call `b`(v1, v3, v5) @signature `Lokio/s;.b:(JJJ)V` @kind static;
  #L3ad1fe.  v0:= v7.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad202.  if v0 != 0 then goto L3ad20a;
  #L3ad206.  v8:= -1I;
  #L3ad208.  return v8;
  #L3ad20a.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3ad20e.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3ad212.  v1:= v1 - v2 @kind int;
  #L3ad214.  call temp:= `min`(v10, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ad21a.  v10:= temp;
  #L3ad21c.  v1:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad220.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3ad224.  call `arraycopy`(v1, v2, v8, v9, v10) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ad22a.  v8:= v0.`okio.n.b` @type ^`int`;
  #L3ad22e.  v8:= v8 + v10 @kind int;
  #L3ad230.  v0.`okio.n.b` @type ^`int` := v8;
  #L3ad234.  v1:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3ad238.  v3:= (`long`) v10 @kind i2l;
  #L3ad23a.  v1:= v1 - v3 @kind long;
  #L3ad23c.  v7.`okio.c.b` @type ^`long` := v1 @kind wide;
  #L3ad240.  v9:= v0.`okio.n.c` @type ^`int`;
  #L3ad244.  if v8 != v9 then goto L3ad25a;
  #L3ad248.  call temp:= `b`(v0) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3ad24e.  v8:= temp @kind object;
  #L3ad250.  v7.`okio.c.a` @type ^`okio.n` := v8 @kind object;
  #L3ad254.  call `a`(v0) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3ad25a.  return v10;
}
procedure `byte`[] `a0`(`okio.c` v2 @kind this) @signature `Lokio/c;.a0:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ad0fc.  v0:= v2.`okio.c.b` @type ^`long` @kind wide;
  #L3ad100.  call temp:= `F`(v2, v0) @signature `Lokio/c;.F:(J)[B` @kind virtual;
  #L3ad106.  v0:= temp @kind object;
  #L3ad108.  return v0 @kind object;
  #L3ad10a.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L3ad10c.  v1:= new `java.lang.AssertionError`;
  #L3ad110.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ad116.  throw v1;
  catch `java.io.EOFException` @[L3ad0fc..L3ad108] goto L3ad10a;
}
procedure `okio.ByteString` `b0`(`okio.c` v2 @kind this) @signature `Lokio/c;.b0:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ae6fc.  v0:= new `okio.ByteString`;
  #L3ae700.  call temp:= `a0`(v2) @signature `Lokio/c;.a0:()[B` @kind virtual;
  #L3ae706.  v1:= temp @kind object;
  #L3ae708.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L3ae70e.  return v0 @kind object;
}
procedure `okio.c` `c`(`okio.c` v0 @kind this) @signature `Lokio/c;.c:()Lokio/c;` @AccessFlag PUBLIC {
    temp;

  #L3adc94.  return v0 @kind object;
}
procedure `java.lang.String` `c0`(`okio.c` v7 @kind this, `long` v8 , `java.nio.charset.Charset` v10 @kind object) @signature `Lokio/c;.c0:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ad50c.  v0:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3ad510.  v2:= 0L;
  #L3ad514.  v4:= v8 @kind wide;
  #L3ad516.  call `b`(v0, v2, v4) @signature `Lokio/s;.b:(JJJ)V` @kind static;
  #L3ad51c.  if v10 == 0 then goto L3ad5e0;
  #L3ad520.  v0:= 2147483647L;
  #L3ad526.  v2:= lcmp(v8, v0);
  #L3ad52a.  if v2 > 0 then goto L3ad5b2;
  #L3ad52e.  v0:= 0L;
  #L3ad532.  v2:= lcmp(v8, v0);
  #L3ad536.  if v2 != 0 then goto L3ad540;
  #L3ad53a.  v8:= "" @kind object;
  #L3ad53e.  return v8 @kind object;
  #L3ad540.  v0:= v7.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad544.  v1:= v0.`okio.n.b` @type ^`int`;
  #L3ad548.  v2:= (`long`) v1 @kind i2l;
  #L3ad54a.  v2:= v2 + v8 @kind long;
  #L3ad54c.  v4:= v0.`okio.n.c` @type ^`int`;
  #L3ad550.  v4:= (`long`) v4 @kind i2l;
  #L3ad552.  v6:= lcmp(v2, v4);
  #L3ad556.  if v6 <= 0 then goto L3ad56e;
  #L3ad55a.  v0:= new `java.lang.String`;
  #L3ad55e.  call temp:= `F`(v7, v8) @signature `Lokio/c;.F:(J)[B` @kind virtual;
  #L3ad564.  v8:= temp @kind object;
  #L3ad566.  call `<init>`(v0, v8, v10) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L3ad56c.  return v0 @kind object;
  #L3ad56e.  v2:= new `java.lang.String`;
  #L3ad572.  v3:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad576.  v4:= (`int`) v8 @kind l2i;
  #L3ad578.  call `<init>`(v2, v3, v1, v4, v10) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L3ad57e.  v10:= v0.`okio.n.b` @type ^`int`;
  #L3ad582.  v3:= (`long`) v10 @kind i2l;
  #L3ad584.  v3:= v3 + v8 @kind long;
  #L3ad586.  v10:= (`int`) v3 @kind l2i;
  #L3ad588.  v0.`okio.n.b` @type ^`int` := v10;
  #L3ad58c.  v3:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3ad590.  v3:= v3 - v8 @kind long;
  #L3ad592.  v7.`okio.c.b` @type ^`long` := v3 @kind wide;
  #L3ad596.  v8:= v0.`okio.n.c` @type ^`int`;
  #L3ad59a.  if v10 != v8 then goto L3ad5b0;
  #L3ad59e.  call temp:= `b`(v0) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3ad5a4.  v8:= temp @kind object;
  #L3ad5a6.  v7.`okio.c.a` @type ^`okio.n` := v8 @kind object;
  #L3ad5aa.  call `a`(v0) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3ad5b0.  return v2 @kind object;
  #L3ad5b2.  v10:= new `java.lang.IllegalArgumentException`;
  #L3ad5b6.  v0:= new `java.lang.StringBuilder`;
  #L3ad5ba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ad5c0.  v1:= "byteCount > Integer.MAX_VALUE: " @kind object;
  #L3ad5c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad5ca.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad5d0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ad5d6.  v8:= temp @kind object;
  #L3ad5d8.  call `<init>`(v10, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ad5de.  throw v10;
  #L3ad5e0.  v8:= new `java.lang.IllegalArgumentException`;
  #L3ad5e4.  v9:= "charset == null" @kind object;
  #L3ad5e8.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ad5ee.  throw v8;
}
procedure `java.lang.Object` `clone`(`okio.c` v1 @kind this) @signature `Lokio/c;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3ad4b4.  call temp:= `K`(v1) @signature `Lokio/c;.K:()Lokio/c;` @kind virtual;
  #L3ad4ba.  v0:= temp @kind object;
  #L3ad4bc.  return v0 @kind object;
}
procedure `void` `close`(`okio.c` v0 @kind this) @signature `Lokio/c;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L3ae9dc.  return @kind void;
}
procedure `java.lang.String` `d0`(`okio.c` v3 @kind this) @signature `Lokio/c;.d0:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ad600.  v0:= v3.`okio.c.b` @type ^`long` @kind wide;
  #L3ad604.  v2:= `@@okio.s.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3ad608.  call temp:= `c0`(v3, v0, v2) @signature `Lokio/c;.c0:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L3ad60e.  v0:= temp @kind object;
  #L3ad610.  return v0 @kind object;
  #L3ad612.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L3ad614.  v1:= new `java.lang.AssertionError`;
  #L3ad618.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ad61e.  throw v1;
  catch `java.io.EOFException` @[L3ad600..L3ad610] goto L3ad612;
}
procedure `okio.r` `e`(`okio.c` v1 @kind this) @signature `Lokio/c;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ae83c.  v0:= `@@okio.r.d` @type ^`okio.r` @kind object;
  #L3ae840.  return v0 @kind object;
}
procedure `java.lang.String` `e0`(`okio.c` v1 @kind this, `long` v2 ) @signature `Lokio/c;.e0:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ad640.  v0:= `@@okio.s.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3ad644.  call temp:= `c0`(v1, v2, v0) @signature `Lokio/c;.c0:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L3ad64a.  v2:= temp @kind object;
  #L3ad64c.  return v2 @kind object;
}
procedure `boolean` `equals`(`okio.c` v13 @kind this, `java.lang.Object` v14 @kind object) @signature `Lokio/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3ace48.  v0:= 1I;
  #L3ace4a.  if v13 != v14 then goto L3ace50;
  #L3ace4e.  return v0;
  #L3ace50.  v1:= instanceof @variable v14 @type ^`okio.c` @kind boolean;
  #L3ace54.  v2:= 0I;
  #L3ace56.  if v1 != 0 then goto L3ace5c;
  #L3ace5a.  return v2;
  #L3ace5c.  v14:= (`okio.c`) v14 @kind object;
  #L3ace60.  v3:= v13.`okio.c.b` @type ^`long` @kind wide;
  #L3ace64.  v5:= v14.`okio.c.b` @type ^`long` @kind wide;
  #L3ace68.  v1:= lcmp(v3, v5);
  #L3ace6c.  if v1 == 0 then goto L3ace72;
  #L3ace70.  return v2;
  #L3ace72.  v5:= 0L;
  #L3ace76.  v1:= lcmp(v3, v5);
  #L3ace7a.  if v1 != 0 then goto L3ace80;
  #L3ace7e.  return v0;
  #L3ace80.  v1:= v13.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ace84.  v14:= v14.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ace88.  v3:= v1.`okio.n.b` @type ^`int`;
  #L3ace8c.  v4:= v14.`okio.n.b` @type ^`int`;
  #L3ace90.  v7:= v13.`okio.c.b` @type ^`long` @kind wide;
  #L3ace94.  v9:= lcmp(v5, v7);
  #L3ace98.  if v9 >= 0 then goto L3acf0a;
  #L3ace9c.  v7:= v1.`okio.n.c` @type ^`int`;
  #L3acea0.  v7:= v7 - v3 @kind int;
  #L3acea2.  v8:= v14.`okio.n.c` @type ^`int`;
  #L3acea6.  v8:= v8 - v4 @kind int;
  #L3acea8.  call temp:= `min`(v7, v8) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3aceae.  v7:= temp;
  #L3aceb0.  v7:= (`long`) v7 @kind i2l;
  #L3aceb2.  v9:= 0I;
  #L3aceb4.  v10:= (`long`) v9 @kind i2l;
  #L3aceb6.  v12:= lcmp(v10, v7);
  #L3aceba.  if v12 >= 0 then goto L3acee6;
  #L3acebe.  v10:= v1.`okio.n.a` @type ^`byte`[] @kind object;
  #L3acec2.  v11:= v3 + 1;
  #L3acec6.  v3:= v10[v3] @kind byte;
  #L3aceca.  v10:= v14.`okio.n.a` @type ^`byte`[] @kind object;
  #L3acece.  v12:= v4 + 1;
  #L3aced2.  v4:= v10[v4] @kind byte;
  #L3aced6.  if v3 == v4 then goto L3acedc;
  #L3aceda.  return v2;
  #L3acedc.  v9:= v9 + 1;
  #L3acee0.  v3:= v11;
  #L3acee2.  v4:= v12;
  #L3acee4.  goto L3aceb4;
  #L3acee6.  v9:= v1.`okio.n.c` @type ^`int`;
  #L3aceea.  if v3 != v9 then goto L3acef6;
  #L3aceee.  v1:= v1.`okio.n.f` @type ^`okio.n` @kind object;
  #L3acef2.  v3:= v1.`okio.n.b` @type ^`int`;
  #L3acef6.  v9:= v14.`okio.n.c` @type ^`int`;
  #L3acefa.  if v4 != v9 then goto L3acf06;
  #L3acefe.  v14:= v14.`okio.n.f` @type ^`okio.n` @kind object;
  #L3acf02.  v4:= v14.`okio.n.b` @type ^`int`;
  #L3acf06.  v5:= v5 + v7 @kind long;
  #L3acf08.  goto L3ace90;
  #L3acf0a.  return v0;
}
procedure `void` `f`(`okio.c` v6 @kind this, `long` v7 ) @signature `Lokio/c;.f:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3aea6c.  v0:= 0L;
  #L3aea70.  v2:= lcmp(v7, v0);
  #L3aea74.  if v2 <= 0 then goto L3aeada;
  #L3aea78.  v0:= v6.`okio.c.a` @type ^`okio.n` @kind object;
  #L3aea7c.  if v0 == 0 then goto L3aeace;
  #L3aea80.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3aea84.  v0:= v0.`okio.n.b` @type ^`int`;
  #L3aea88.  v1:= v1 - v0 @kind int;
  #L3aea8a.  v0:= (`long`) v1 @kind i2l;
  #L3aea8c.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3aea92.  v0:= temp @kind wide;
  #L3aea94.  v1:= (`int`) v0 @kind l2i;
  #L3aea96.  v2:= v6.`okio.c.b` @type ^`long` @kind wide;
  #L3aea9a.  v4:= (`long`) v1 @kind i2l;
  #L3aea9c.  v2:= v2 - v4 @kind long;
  #L3aea9e.  v6.`okio.c.b` @type ^`long` := v2 @kind wide;
  #L3aeaa2.  v7:= v7 - v4 @kind long;
  #L3aeaa4.  v0:= v6.`okio.c.a` @type ^`okio.n` @kind object;
  #L3aeaa8.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3aeaac.  v2:= v2 + v1 @kind int;
  #L3aeaae.  v0.`okio.n.b` @type ^`int` := v2;
  #L3aeab2.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3aeab6.  if v2 != v1 then goto L3aea6c;
  #L3aeaba.  call temp:= `b`(v0) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3aeac0.  v1:= temp @kind object;
  #L3aeac2.  v6.`okio.c.a` @type ^`okio.n` := v1 @kind object;
  #L3aeac6.  call `a`(v0) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3aeacc.  goto L3aea6c;
  #L3aeace.  v7:= new `java.io.EOFException`;
  #L3aead2.  call `<init>`(v7) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3aead8.  throw v7;
  #L3aeada.  return @kind void;
}
procedure `java.lang.String` `f0`(`okio.c` v6 @kind this, `long` v7 ) @signature `Lokio/c;.f0:(J)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ad660.  v0:= 1L;
  #L3ad664.  v2:= 0L;
  #L3ad668.  v4:= lcmp(v7, v2);
  #L3ad66c.  if v4 <= 0 then goto L3ad698;
  #L3ad670.  v2:= v7 - v0 @kind long;
  #L3ad674.  call temp:= `V`(v6, v2) @signature `Lokio/c;.V:(J)B` @kind virtual;
  #L3ad67a.  v4:= temp;
  #L3ad67c.  v5:= 13I;
  #L3ad680.  if v4 != v5 then goto L3ad698;
  #L3ad684.  call temp:= `e0`(v6, v2) @signature `Lokio/c;.e0:(J)Ljava/lang/String;` @kind virtual;
  #L3ad68a.  v7:= temp @kind object;
  #L3ad68c.  v0:= 2L;
  #L3ad690.  call `f`(v6, v0) @signature `Lokio/c;.f:(J)V` @kind virtual;
  #L3ad696.  return v7 @kind object;
  #L3ad698.  call temp:= `e0`(v6, v7) @signature `Lokio/c;.e0:(J)Ljava/lang/String;` @kind virtual;
  #L3ad69e.  v7:= temp @kind object;
  #L3ad6a0.  call `f`(v6, v0) @signature `Lokio/c;.f:(J)V` @kind virtual;
  #L3ad6a6.  return v7 @kind object;
}
procedure `void` `flush`(`okio.c` v0 @kind this) @signature `Lokio/c;.flush:()V` @AccessFlag PUBLIC {
    temp;

  #L3ae9f0.  return @kind void;
}
procedure `long` `g0`(`okio.c` v2 @kind this) @signature `Lokio/c;.g0:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3adc34.  v0:= v2.`okio.c.b` @type ^`long` @kind wide;
  #L3adc38.  return v0 @kind wide;
}
procedure `okio.ByteString` `h0`(`okio.c` v5 @kind this) @signature `Lokio/c;.h0:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ae744.  v0:= v5.`okio.c.b` @type ^`long` @kind wide;
  #L3ae748.  v2:= 2147483647L;
  #L3ae74e.  v4:= lcmp(v0, v2);
  #L3ae752.  if v4 > 0 then goto L3ae762;
  #L3ae756.  v1:= (`int`) v0 @kind l2i;
  #L3ae758.  call temp:= `i0`(v5, v1) @signature `Lokio/c;.i0:(I)Lokio/ByteString;` @kind virtual;
  #L3ae75e.  v0:= temp @kind object;
  #L3ae760.  return v0 @kind object;
  #L3ae762.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ae766.  v1:= new `java.lang.StringBuilder`;
  #L3ae76a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ae770.  v2:= "size > Integer.MAX_VALUE: " @kind object;
  #L3ae774.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae77a.  v2:= v5.`okio.c.b` @type ^`long` @kind wide;
  #L3ae77e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae784.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ae78a.  v1:= temp @kind object;
  #L3ae78c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae792.  throw v0;
}
procedure `int` `hashCode`(`okio.c` v5 @kind this) @signature `Lokio/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ad1a4.  v0:= v5.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad1a8.  if v0 != 0 then goto L3ad1b0;
  #L3ad1ac.  v0:= 0I;
  #L3ad1ae.  return v0;
  #L3ad1b0.  v1:= 1I;
  #L3ad1b2.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3ad1b6.  v3:= v0.`okio.n.c` @type ^`int`;
  #L3ad1ba.  if v2 >= v3 then goto L3ad1d2;
  #L3ad1be.  v1:= v1 * 31;
  #L3ad1c2.  v4:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad1c6.  v4:= v4[v2] @kind byte;
  #L3ad1ca.  v1:= v1 + v4 @kind int;
  #L3ad1cc.  v2:= v2 + 1;
  #L3ad1d0.  goto L3ad1ba;
  #L3ad1d2.  v0:= v0.`okio.n.f` @type ^`okio.n` @kind object;
  #L3ad1d6.  v2:= v5.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad1da.  if v0 != v2 then goto L3ad1b2;
  #L3ad1de.  return v1;
}
procedure `okio.ByteString` `i0`(`okio.c` v1 @kind this, `int` v2 ) @signature `Lokio/c;.i0:(I)Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ae7a4.  if v2 != 0 then goto L3ae7ae;
  #L3ae7a8.  v2:= `@@okio.ByteString.d` @type ^`okio.ByteString` @kind object;
  #L3ae7ac.  return v2 @kind object;
  #L3ae7ae.  v0:= new `okio.SegmentedByteString`;
  #L3ae7b2.  call `<init>`(v0, v1, v2) @signature `Lokio/SegmentedByteString;.<init>:(Lokio/c;I)V` @kind direct;
  #L3ae7b8.  return v0 @kind object;
}
procedure `boolean` `isOpen`(`okio.c` v1 @kind this) @signature `Lokio/c;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3acf44.  v0:= 1I;
  #L3acf46.  return v0;
}
procedure `okio.n` `j0`(`okio.c` v3 @kind this, `int` v4 ) @signature `Lokio/c;.j0:(I)Lokio/n;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3ae7cc.  v0:= 1I;
  #L3ae7ce.  if v4 < v0 then goto L3ae820;
  #L3ae7d2.  v0:= 8192I;
  #L3ae7d6.  if v4 > v0 then goto L3ae820;
  #L3ae7da.  v1:= v3.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ae7de.  if v1 != 0 then goto L3ae7f8;
  #L3ae7e2.  call temp:= `b`() @signature `Lokio/o;.b:()Lokio/n;` @kind static;
  #L3ae7e8.  v4:= temp @kind object;
  #L3ae7ea.  v3.`okio.c.a` @type ^`okio.n` := v4 @kind object;
  #L3ae7ee.  v4.`okio.n.g` @type ^`okio.n` := v4 @kind object;
  #L3ae7f2.  v4.`okio.n.f` @type ^`okio.n` := v4 @kind object;
  #L3ae7f6.  return v4 @kind object;
  #L3ae7f8.  v1:= v1.`okio.n.g` @type ^`okio.n` @kind object;
  #L3ae7fc.  v2:= v1.`okio.n.c` @type ^`int`;
  #L3ae800.  v2:= v2 + v4 @kind int;
  #L3ae802.  if v2 > v0 then goto L3ae80e;
  #L3ae806.  v4:= v1.`okio.n.e` @type ^`boolean` @kind boolean;
  #L3ae80a.  if v4 != 0 then goto L3ae81e;
  #L3ae80e.  call temp:= `b`() @signature `Lokio/o;.b:()Lokio/n;` @kind static;
  #L3ae814.  v4:= temp @kind object;
  #L3ae816.  call temp:= `c`(v1, v4) @signature `Lokio/n;.c:(Lokio/n;)Lokio/n;` @kind virtual;
  #L3ae81c.  v1:= temp @kind object;
  #L3ae81e.  return v1 @kind object;
  #L3ae820.  v4:= new `java.lang.IllegalArgumentException`;
  #L3ae824.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3ae82a.  throw v4;
}
procedure `okio.ByteString` `k`(`okio.c` v1 @kind this, `long` v2 ) @signature `Lokio/c;.k:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ae720.  v0:= new `okio.ByteString`;
  #L3ae724.  call temp:= `F`(v1, v2) @signature `Lokio/c;.F:(J)[B` @kind virtual;
  #L3ae72a.  v2:= temp @kind object;
  #L3ae72c.  call `<init>`(v0, v2) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L3ae732.  return v0 @kind object;
}
procedure `okio.c` `k0`(`okio.c` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokio/c;.k0:(Lokio/ByteString;)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aded8.  if v2 == 0 then goto L3adee4;
  #L3adedc.  call `v`(v2, v1) @signature `Lokio/ByteString;.v:(Lokio/c;)V` @kind virtual;
  #L3adee2.  return v1 @kind object;
  #L3adee4.  v2:= new `java.lang.IllegalArgumentException`;
  #L3adee8.  v0:= "byteString == null" @kind object;
  #L3adeec.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3adef2.  throw v2;
}
procedure `okio.c` `l0`(`okio.c` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/c;.l0:([B)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ade24.  if v3 == 0 then goto L3ade36;
  #L3ade28.  v0:= 0I;
  #L3ade2a.  v1:= length @variable v3;
  #L3ade2c.  call temp:= `m0`(v2, v3, v0, v1) @signature `Lokio/c;.m0:([BII)Lokio/c;` @kind virtual;
  #L3ade32.  v3:= temp @kind object;
  #L3ade34.  return v3 @kind object;
  #L3ade36.  v3:= new `java.lang.IllegalArgumentException`;
  #L3ade3a.  v0:= "source == null" @kind object;
  #L3ade3e.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ade44.  throw v3;
}
procedure `okio.c` `m`(`okio.c` v0 @kind this) @signature `Lokio/c;.m:()Lokio/c;` @AccessFlag PUBLIC {
    temp;

  #L3ade10.  return v0 @kind object;
}
procedure `okio.c` `m0`(`okio.c` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/c;.m0:([BII)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ade58.  if v10 == 0 then goto L3adeb8;
  #L3ade5c.  v0:= length @variable v10;
  #L3ade5e.  v1:= (`long`) v0 @kind i2l;
  #L3ade60.  v3:= (`long`) v11 @kind i2l;
  #L3ade62.  v7:= (`long`) v12 @kind i2l;
  #L3ade64.  v5:= v7 @kind wide;
  #L3ade66.  call `b`(v1, v3, v5) @signature `Lokio/s;.b:(JJJ)V` @kind static;
  #L3ade6c.  v12:= v12 + v11 @kind int;
  #L3ade6e.  if v11 >= v12 then goto L3adeac;
  #L3ade72.  v0:= 1I;
  #L3ade74.  call temp:= `j0`(v9, v0) @signature `Lokio/c;.j0:(I)Lokio/n;` @kind virtual;
  #L3ade7a.  v0:= temp @kind object;
  #L3ade7c.  v1:= v12 - v11 @kind int;
  #L3ade80.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3ade84.  v2:= v2 - 8192;
  #L3ade88.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ade8e.  v1:= temp;
  #L3ade90.  v2:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ade94.  v3:= v0.`okio.n.c` @type ^`int`;
  #L3ade98.  call `arraycopy`(v10, v11, v2, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ade9e.  v11:= v11 + v1 @kind int;
  #L3adea0.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3adea4.  v2:= v2 + v1 @kind int;
  #L3adea6.  v0.`okio.n.c` @type ^`int` := v2;
  #L3adeaa.  goto L3ade6e;
  #L3adeac.  v10:= v9.`okio.c.b` @type ^`long` @kind wide;
  #L3adeb0.  v10:= v10 + v7 @kind long;
  #L3adeb2.  v9.`okio.c.b` @type ^`long` := v10 @kind wide;
  #L3adeb6.  return v9 @kind object;
  #L3adeb8.  v10:= new `java.lang.IllegalArgumentException`;
  #L3adebc.  v11:= "source == null" @kind object;
  #L3adec0.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3adec6.  throw v10;
}
procedure `boolean` `n`(`okio.c` v5 @kind this) @signature `Lokio/c;.n:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3acf1c.  v0:= v5.`okio.c.b` @type ^`long` @kind wide;
  #L3acf20.  v2:= 0L;
  #L3acf24.  v4:= lcmp(v0, v2);
  #L3acf28.  if v4 != 0 then goto L3acf30;
  #L3acf2c.  v0:= 1I;
  #L3acf2e.  goto L3acf32;
  #L3acf30.  v0:= 0I;
  #L3acf32.  return v0;
}
procedure `long` `n0`(`okio.c` v7 @kind this, `okio.q` v8 @kind object) @signature `Lokio/c;.n0:(Lokio/q;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3adc4c.  if v8 == 0 then goto L3adc72;
  #L3adc50.  v0:= 0L;
  #L3adc54.  v2:= 8192L;
  #L3adc58.  call temp:= `I`(v8, v7, v2) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L3adc5e.  v2:= temp @kind wide;
  #L3adc60.  v4:= -1L;
  #L3adc64.  v6:= lcmp(v2, v4);
  #L3adc68.  if v6 == 0 then goto L3adc70;
  #L3adc6c.  v0:= v0 + v2 @kind long;
  #L3adc6e.  goto L3adc54;
  #L3adc70.  return v0 @kind wide;
  #L3adc72.  v8:= new `java.lang.IllegalArgumentException`;
  #L3adc76.  v0:= "source == null" @kind object;
  #L3adc7a.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3adc80.  throw v8;
}
procedure `okio.c` `o0`(`okio.c` v4 @kind this, `int` v5 ) @signature `Lokio/c;.o0:(I)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3adf04.  v0:= 1I;
  #L3adf06.  call temp:= `j0`(v4, v0) @signature `Lokio/c;.j0:(I)Lokio/n;` @kind virtual;
  #L3adf0c.  v0:= temp @kind object;
  #L3adf0e.  v1:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3adf12.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3adf16.  v3:= v2 + 1;
  #L3adf1a.  v0.`okio.n.c` @type ^`int` := v3;
  #L3adf1e.  v5:= (`byte`) v5 @kind i2b;
  #L3adf20.  v1[v2]:= v5 @kind byte;
  #L3adf24.  v0:= v4.`okio.c.b` @type ^`long` @kind wide;
  #L3adf28.  v2:= 1L;
  #L3adf2c.  v0:= v0 + v2 @kind long;
  #L3adf2e.  v4.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3adf32.  return v4 @kind object;
}
procedure `okio.c` `p0`(`okio.c` v9 @kind this, `long` v10 ) @signature `Lokio/c;.p0:(J)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3adf44.  v0:= 0L;
  #L3adf48.  v2:= lcmp(v10, v0);
  #L3adf4c.  if v2 != 0 then goto L3adf5e;
  #L3adf50.  v10:= 48I;
  #L3adf54.  call temp:= `o0`(v9, v10) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3adf5a.  v10:= temp @kind object;
  #L3adf5c.  return v10 @kind object;
  #L3adf5e.  call temp:= `highestOneBit`(v10) @signature `Ljava/lang/Long;.highestOneBit:(J)J` @kind static;
  #L3adf64.  v0:= temp @kind wide;
  #L3adf66.  call temp:= `numberOfTrailingZeros`(v0) @signature `Ljava/lang/Long;.numberOfTrailingZeros:(J)I` @kind static;
  #L3adf6c.  v0:= temp;
  #L3adf6e.  v1:= 4I;
  #L3adf70.  v0:= v0 / v1 @kind int;
  #L3adf72.  v0:= v0 + 1;
  #L3adf76.  call temp:= `j0`(v9, v0) @signature `Lokio/c;.j0:(I)Lokio/n;` @kind virtual;
  #L3adf7c.  v2:= temp @kind object;
  #L3adf7e.  v3:= v2.`okio.n.a` @type ^`byte`[] @kind object;
  #L3adf82.  v4:= v2.`okio.n.c` @type ^`int`;
  #L3adf86.  v5:= v4 + v0 @kind int;
  #L3adf8a.  v5:= v5 + -1;
  #L3adf8e.  if v5 < v4 then goto L3adfae;
  #L3adf92.  v6:= `@@okio.c.c` @type ^`byte`[] @kind object;
  #L3adf96.  v7:= 15L;
  #L3adf9a.  v7:= v7 ^& v10 @kind long;
  #L3adf9c.  v8:= (`int`) v7 @kind l2i;
  #L3adf9e.  v6:= v6[v8] @kind byte;
  #L3adfa2.  v3[v5]:= v6 @kind byte;
  #L3adfa6.  v10:= v10 ^>> v1 @kind long;
  #L3adfa8.  v5:= v5 + -1;
  #L3adfac.  goto L3adf8e;
  #L3adfae.  v10:= v2.`okio.n.c` @type ^`int`;
  #L3adfb2.  v10:= v10 + v0 @kind int;
  #L3adfb4.  v2.`okio.n.c` @type ^`int` := v10;
  #L3adfb8.  v10:= v9.`okio.c.b` @type ^`long` @kind wide;
  #L3adfbc.  v0:= (`long`) v0 @kind i2l;
  #L3adfbe.  v10:= v10 + v0 @kind long;
  #L3adfc0.  v9.`okio.c.b` @type ^`long` := v10 @kind wide;
  #L3adfc4.  return v9 @kind object;
}
procedure `okio.d` `q`(`okio.c` v1 @kind this) @signature `Lokio/c;.q:()Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3ae61c.  call temp:= `U`(v1) @signature `Lokio/c;.U:()Lokio/c;` @kind virtual;
  #L3ae622.  v0:= temp @kind object;
  #L3ae624.  return v0 @kind object;
}
procedure `okio.c` `q0`(`okio.c` v5 @kind this, `int` v6 ) @signature `Lokio/c;.q0:(I)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3adfd8.  v0:= 4I;
  #L3adfda.  call temp:= `j0`(v5, v0) @signature `Lokio/c;.j0:(I)Lokio/n;` @kind virtual;
  #L3adfe0.  v0:= temp @kind object;
  #L3adfe2.  v1:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3adfe6.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3adfea.  v3:= v2 + 1;
  #L3adfee.  v4:= v6 ^>> 24;
  #L3adff2.  v4:= v4 ^& 255;
  #L3adff6.  v4:= (`byte`) v4 @kind i2b;
  #L3adff8.  v1[v2]:= v4 @kind byte;
  #L3adffc.  v2:= v3 + 1;
  #L3ae000.  v4:= v6 ^>> 16;
  #L3ae004.  v4:= v4 ^& 255;
  #L3ae008.  v4:= (`byte`) v4 @kind i2b;
  #L3ae00a.  v1[v3]:= v4 @kind byte;
  #L3ae00e.  v3:= v2 + 1;
  #L3ae012.  v4:= v6 ^>> 8;
  #L3ae016.  v4:= v4 ^& 255;
  #L3ae01a.  v4:= (`byte`) v4 @kind i2b;
  #L3ae01c.  v1[v2]:= v4 @kind byte;
  #L3ae020.  v2:= v3 + 1;
  #L3ae024.  v6:= v6 ^& 255;
  #L3ae028.  v6:= (`byte`) v6 @kind i2b;
  #L3ae02a.  v1[v3]:= v6 @kind byte;
  #L3ae02e.  v0.`okio.n.c` @type ^`int` := v2;
  #L3ae032.  v0:= v5.`okio.c.b` @type ^`long` @kind wide;
  #L3ae036.  v2:= 4L;
  #L3ae03a.  v0:= v0 + v2 @kind long;
  #L3ae03c.  v5.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3ae040.  return v5 @kind object;
}
procedure `java.lang.String` `r`(`okio.c` v10 @kind this, `long` v11 ) @signature `Lokio/c;.r:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3ad6dc.  v0:= 0L;
  #L3ad6e0.  v2:= lcmp(v11, v0);
  #L3ad6e4.  if v2 < 0 then goto L3ad800;
  #L3ad6e8.  v0:= 1L;
  #L3ad6ec.  v2:= 9223372036854775807L;
  #L3ad6f6.  v4:= lcmp(v11, v2);
  #L3ad6fa.  if v4 != 0 then goto L3ad700;
  #L3ad6fe.  goto L3ad704;
  #L3ad700.  v2:= v11 + v0 @kind long;
  #L3ad704.  v5:= 10I;
  #L3ad708.  v6:= 0L;
  #L3ad70c.  v4:= v10 @kind object;
  #L3ad70e.  v8:= v2 @kind wide;
  #L3ad710.  call temp:= `W`(v4, v5, v6, v8) @signature `Lokio/c;.W:(BJJ)J` @kind virtual;
  #L3ad716.  v4:= temp @kind wide;
  #L3ad718.  v6:= -1L;
  #L3ad71c.  v8:= lcmp(v4, v6);
  #L3ad720.  if v8 == 0 then goto L3ad72e;
  #L3ad724.  call temp:= `f0`(v10, v4) @signature `Lokio/c;.f0:(J)Ljava/lang/String;` @kind virtual;
  #L3ad72a.  v11:= temp @kind object;
  #L3ad72c.  return v11 @kind object;
  #L3ad72e.  call temp:= `g0`(v10) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L3ad734.  v4:= temp @kind wide;
  #L3ad736.  v6:= lcmp(v2, v4);
  #L3ad73a.  if v6 >= 0 then goto L3ad76c;
  #L3ad73e.  v0:= v2 - v0 @kind long;
  #L3ad742.  call temp:= `V`(v10, v0) @signature `Lokio/c;.V:(J)B` @kind virtual;
  #L3ad748.  v0:= temp;
  #L3ad74a.  v1:= 13I;
  #L3ad74e.  if v0 != v1 then goto L3ad76c;
  #L3ad752.  call temp:= `V`(v10, v2) @signature `Lokio/c;.V:(J)B` @kind virtual;
  #L3ad758.  v0:= temp;
  #L3ad75a.  v1:= 10I;
  #L3ad75e.  if v0 != v1 then goto L3ad76c;
  #L3ad762.  call temp:= `f0`(v10, v2) @signature `Lokio/c;.f0:(J)Ljava/lang/String;` @kind virtual;
  #L3ad768.  v11:= temp @kind object;
  #L3ad76a.  return v11 @kind object;
  #L3ad76c.  v6:= new `okio.c`;
  #L3ad770.  call `<init>`(v6) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3ad776.  v2:= 0L;
  #L3ad77a.  v0:= 32L;
  #L3ad77e.  call temp:= `g0`(v10) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L3ad784.  v4:= temp @kind wide;
  #L3ad786.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3ad78c.  v4:= temp @kind wide;
  #L3ad78e.  v0:= v10 @kind object;
  #L3ad790.  v1:= v6 @kind object;
  #L3ad792.  call temp:= `T`(v0, v1, v2, v4) @signature `Lokio/c;.T:(Lokio/c;JJ)Lokio/c;` @kind virtual;
  #L3ad798.  v0:= new `java.io.EOFException`;
  #L3ad79c.  v1:= new `java.lang.StringBuilder`;
  #L3ad7a0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ad7a6.  v2:= "\\n not found: limit=" @kind object;
  #L3ad7aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad7b0.  call temp:= `g0`(v10) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L3ad7b6.  v2:= temp @kind wide;
  #L3ad7b8.  call temp:= `min`(v2, v11) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3ad7be.  v11:= temp @kind wide;
  #L3ad7c0.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad7c6.  v11:= " content=" @kind object;
  #L3ad7ca.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad7d0.  call temp:= `b0`(v6) @signature `Lokio/c;.b0:()Lokio/ByteString;` @kind virtual;
  #L3ad7d6.  v11:= temp @kind object;
  #L3ad7d8.  call temp:= `i`(v11) @signature `Lokio/ByteString;.i:()Ljava/lang/String;` @kind virtual;
  #L3ad7de.  v11:= temp @kind object;
  #L3ad7e0.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad7e6.  v11:= 8230I;
  #L3ad7ea.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad7f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ad7f6.  v11:= temp @kind object;
  #L3ad7f8.  call `<init>`(v0, v11) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ad7fe.  throw v0;
  #L3ad800.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ad804.  v1:= new `java.lang.StringBuilder`;
  #L3ad808.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ad80e.  v2:= "limit < 0: " @kind object;
  #L3ad812.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad818.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad81e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ad824.  v11:= temp @kind object;
  #L3ad826.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ad82c.  throw v0;
}
procedure `okio.c` `r0`(`okio.c` v5 @kind this, `int` v6 ) @signature `Lokio/c;.r0:(I)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ae054.  v0:= 2I;
  #L3ae056.  call temp:= `j0`(v5, v0) @signature `Lokio/c;.j0:(I)Lokio/n;` @kind virtual;
  #L3ae05c.  v0:= temp @kind object;
  #L3ae05e.  v1:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ae062.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3ae066.  v3:= v2 + 1;
  #L3ae06a.  v4:= v6 ^>> 8;
  #L3ae06e.  v4:= v4 ^& 255;
  #L3ae072.  v4:= (`byte`) v4 @kind i2b;
  #L3ae074.  v1[v2]:= v4 @kind byte;
  #L3ae078.  v2:= v3 + 1;
  #L3ae07c.  v6:= v6 ^& 255;
  #L3ae080.  v6:= (`byte`) v6 @kind i2b;
  #L3ae082.  v1[v3]:= v6 @kind byte;
  #L3ae086.  v0.`okio.n.c` @type ^`int` := v2;
  #L3ae08a.  v0:= v5.`okio.c.b` @type ^`long` @kind wide;
  #L3ae08e.  v2:= 2L;
  #L3ae092.  v0:= v0 + v2 @kind long;
  #L3ae094.  v5.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3ae098.  return v5 @kind object;
}
procedure `int` `read`(`okio.c` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object) @signature `Lokio/c;.read:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ad26c.  v0:= v6.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad270.  if v0 != 0 then goto L3ad278;
  #L3ad274.  v7:= -1I;
  #L3ad276.  return v7;
  #L3ad278.  call temp:= `remaining`(v7) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3ad27e.  v1:= temp;
  #L3ad280.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3ad284.  v3:= v0.`okio.n.b` @type ^`int`;
  #L3ad288.  v2:= v2 - v3 @kind int;
  #L3ad28a.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ad290.  v1:= temp;
  #L3ad292.  v2:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad296.  v3:= v0.`okio.n.b` @type ^`int`;
  #L3ad29a.  call temp:= `put`(v7, v2, v3, v1) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3ad2a0.  v7:= v0.`okio.n.b` @type ^`int`;
  #L3ad2a4.  v7:= v7 + v1 @kind int;
  #L3ad2a6.  v0.`okio.n.b` @type ^`int` := v7;
  #L3ad2aa.  v2:= v6.`okio.c.b` @type ^`long` @kind wide;
  #L3ad2ae.  v4:= (`long`) v1 @kind i2l;
  #L3ad2b0.  v2:= v2 - v4 @kind long;
  #L3ad2b2.  v6.`okio.c.b` @type ^`long` := v2 @kind wide;
  #L3ad2b6.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3ad2ba.  if v7 != v2 then goto L3ad2d0;
  #L3ad2be.  call temp:= `b`(v0) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3ad2c4.  v7:= temp @kind object;
  #L3ad2c6.  v6.`okio.c.a` @type ^`okio.n` := v7 @kind object;
  #L3ad2ca.  call `a`(v0) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3ad2d0.  return v1;
}
procedure `byte` `readByte`(`okio.c` v9 @kind this) @signature `Lokio/c;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ad08c.  v0:= v9.`okio.c.b` @type ^`long` @kind wide;
  #L3ad090.  v2:= 0L;
  #L3ad094.  v4:= lcmp(v0, v2);
  #L3ad098.  if v4 == 0 then goto L3ad0dc;
  #L3ad09c.  v2:= v9.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad0a0.  v3:= v2.`okio.n.b` @type ^`int`;
  #L3ad0a4.  v4:= v2.`okio.n.c` @type ^`int`;
  #L3ad0a8.  v5:= v2.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad0ac.  v6:= v3 + 1;
  #L3ad0b0.  v3:= v5[v3] @kind byte;
  #L3ad0b4.  v7:= 1L;
  #L3ad0b8.  v0:= v0 - v7 @kind long;
  #L3ad0ba.  v9.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3ad0be.  if v6 != v4 then goto L3ad0d6;
  #L3ad0c2.  call temp:= `b`(v2) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3ad0c8.  v0:= temp @kind object;
  #L3ad0ca.  v9.`okio.c.a` @type ^`okio.n` := v0 @kind object;
  #L3ad0ce.  call `a`(v2) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3ad0d4.  goto L3ad0da;
  #L3ad0d6.  v2.`okio.n.b` @type ^`int` := v6;
  #L3ad0da.  return v3;
  #L3ad0dc.  v0:= new `java.lang.IllegalStateException`;
  #L3ad0e0.  v1:= "size == 0" @kind object;
  #L3ad0e4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ad0ea.  throw v0;
}
procedure `void` `readFully`(`okio.c` v3 @kind this, `byte`[] v4 @kind object) @signature `Lokio/c;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aea04.  v0:= 0I;
  #L3aea06.  v1:= length @variable v4;
  #L3aea08.  if v0 >= v1 then goto L3aea2e;
  #L3aea0c.  v1:= length @variable v4;
  #L3aea0e.  v1:= v1 - v0 @kind int;
  #L3aea10.  call temp:= `Z`(v3, v4, v0, v1) @signature `Lokio/c;.Z:([BII)I` @kind virtual;
  #L3aea16.  v1:= temp;
  #L3aea18.  v2:= -1I;
  #L3aea1a.  if v1 == v2 then goto L3aea22;
  #L3aea1e.  v0:= v0 + v1 @kind int;
  #L3aea20.  goto L3aea06;
  #L3aea22.  v4:= new `java.io.EOFException`;
  #L3aea26.  call `<init>`(v4) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3aea2c.  throw v4;
  #L3aea2e.  return @kind void;
}
procedure `int` `readInt`(`okio.c` v10 @kind this) @signature `Lokio/c;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3ad2e4.  v0:= v10.`okio.c.b` @type ^`long` @kind wide;
  #L3ad2e8.  v2:= 4L;
  #L3ad2ec.  v4:= lcmp(v0, v2);
  #L3ad2f0.  if v4 < 0 then goto L3ad3b8;
  #L3ad2f4.  v4:= v10.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ad2f8.  v5:= v4.`okio.n.b` @type ^`int`;
  #L3ad2fc.  v6:= v4.`okio.n.c` @type ^`int`;
  #L3ad300.  v7:= v6 - v5 @kind int;
  #L3ad304.  v8:= 4I;
  #L3ad306.  if v7 >= v8 then goto L3ad34e;
  #L3ad30a.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3ad310.  v0:= temp;
  #L3ad312.  v0:= v0 ^& 255;
  #L3ad316.  v0:= v0 ^< 24;
  #L3ad31a.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3ad320.  v1:= temp;
  #L3ad322.  v1:= v1 ^& 255;
  #L3ad326.  v1:= v1 ^< 16;
  #L3ad32a.  v0:= v0 ^| v1 @kind int;
  #L3ad32c.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3ad332.  v1:= temp;
  #L3ad334.  v1:= v1 ^& 255;
  #L3ad338.  v1:= v1 ^< 8;
  #L3ad33c.  v0:= v0 ^| v1 @kind int;
  #L3ad33e.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3ad344.  v1:= temp;
  #L3ad346.  v1:= v1 ^& 255;
  #L3ad34a.  v0:= v0 ^| v1 @kind int;
  #L3ad34c.  return v0;
  #L3ad34e.  v7:= v4.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad352.  v8:= v5 + 1;
  #L3ad356.  v5:= v7[v5] @kind byte;
  #L3ad35a.  v5:= v5 ^& 255;
  #L3ad35e.  v5:= v5 ^< 24;
  #L3ad362.  v9:= v8 + 1;
  #L3ad366.  v8:= v7[v8] @kind byte;
  #L3ad36a.  v8:= v8 ^& 255;
  #L3ad36e.  v8:= v8 ^< 16;
  #L3ad372.  v5:= v5 ^| v8 @kind int;
  #L3ad374.  v8:= v9 + 1;
  #L3ad378.  v9:= v7[v9] @kind byte;
  #L3ad37c.  v9:= v9 ^& 255;
  #L3ad380.  v9:= v9 ^< 8;
  #L3ad384.  v5:= v5 ^| v9 @kind int;
  #L3ad386.  v9:= v8 + 1;
  #L3ad38a.  v7:= v7[v8] @kind byte;
  #L3ad38e.  v7:= v7 ^& 255;
  #L3ad392.  v5:= v5 ^| v7 @kind int;
  #L3ad394.  v0:= v0 - v2 @kind long;
  #L3ad396.  v10.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3ad39a.  if v9 != v6 then goto L3ad3b2;
  #L3ad39e.  call temp:= `b`(v4) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3ad3a4.  v0:= temp @kind object;
  #L3ad3a6.  v10.`okio.c.a` @type ^`okio.n` := v0 @kind object;
  #L3ad3aa.  call `a`(v4) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3ad3b0.  goto L3ad3b6;
  #L3ad3b2.  v4.`okio.n.b` @type ^`int` := v9;
  #L3ad3b6.  return v5;
  #L3ad3b8.  v0:= new `java.lang.IllegalStateException`;
  #L3ad3bc.  v1:= new `java.lang.StringBuilder`;
  #L3ad3c0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ad3c6.  v2:= "size < 4: " @kind object;
  #L3ad3ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad3d0.  v2:= v10.`okio.c.b` @type ^`long` @kind wide;
  #L3ad3d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ad3da.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ad3e0.  v1:= temp @kind object;
  #L3ad3e2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ad3e8.  throw v0;
}
procedure `short` `readShort`(`okio.c` v10 @kind this) @signature `Lokio/c;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3ae854.  v0:= v10.`okio.c.b` @type ^`long` @kind wide;
  #L3ae858.  v2:= 2L;
  #L3ae85c.  v4:= lcmp(v0, v2);
  #L3ae860.  if v4 < 0 then goto L3ae8e4;
  #L3ae864.  v4:= v10.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ae868.  v5:= v4.`okio.n.b` @type ^`int`;
  #L3ae86c.  v6:= v4.`okio.n.c` @type ^`int`;
  #L3ae870.  v7:= v6 - v5 @kind int;
  #L3ae874.  v8:= 2I;
  #L3ae876.  if v7 >= v8 then goto L3ae89c;
  #L3ae87a.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3ae880.  v0:= temp;
  #L3ae882.  v0:= v0 ^& 255;
  #L3ae886.  v0:= v0 ^< 8;
  #L3ae88a.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3ae890.  v1:= temp;
  #L3ae892.  v1:= v1 ^& 255;
  #L3ae896.  v0:= v0 ^| v1 @kind int;
  #L3ae898.  v0:= (`short`) v0 @kind i2s;
  #L3ae89a.  return v0;
  #L3ae89c.  v7:= v4.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ae8a0.  v8:= v5 + 1;
  #L3ae8a4.  v5:= v7[v5] @kind byte;
  #L3ae8a8.  v5:= v5 ^& 255;
  #L3ae8ac.  v5:= v5 ^< 8;
  #L3ae8b0.  v9:= v8 + 1;
  #L3ae8b4.  v7:= v7[v8] @kind byte;
  #L3ae8b8.  v7:= v7 ^& 255;
  #L3ae8bc.  v5:= v5 ^| v7 @kind int;
  #L3ae8be.  v0:= v0 - v2 @kind long;
  #L3ae8c0.  v10.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3ae8c4.  if v9 != v6 then goto L3ae8dc;
  #L3ae8c8.  call temp:= `b`(v4) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3ae8ce.  v0:= temp @kind object;
  #L3ae8d0.  v10.`okio.c.a` @type ^`okio.n` := v0 @kind object;
  #L3ae8d4.  call `a`(v4) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3ae8da.  goto L3ae8e0;
  #L3ae8dc.  v4.`okio.n.b` @type ^`int` := v9;
  #L3ae8e0.  v0:= (`short`) v5 @kind i2s;
  #L3ae8e2.  return v0;
  #L3ae8e4.  v0:= new `java.lang.IllegalStateException`;
  #L3ae8e8.  v1:= new `java.lang.StringBuilder`;
  #L3ae8ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ae8f2.  v2:= "size < 2: " @kind object;
  #L3ae8f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae8fc.  v2:= v10.`okio.c.b` @type ^`long` @kind wide;
  #L3ae900.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae906.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ae90c.  v1:= temp @kind object;
  #L3ae90e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae914.  throw v0;
}
procedure `void` `s`(`okio.c` v2 @kind this) @signature `Lokio/c;.s:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ae9a0.  v0:= v2.`okio.c.b` @type ^`long` @kind wide;
  #L3ae9a4.  call `f`(v2, v0) @signature `Lokio/c;.f:(J)V` @kind virtual;
  #L3ae9aa.  return @kind void;
  #L3ae9ac.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L3ae9ae.  v1:= new `java.lang.AssertionError`;
  #L3ae9b2.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ae9b8.  throw v1;
  catch `java.io.EOFException` @[L3ae9a0..L3ae9aa] goto L3ae9ac;
}
procedure `okio.c` `s0`(`okio.c` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `java.nio.charset.Charset` v5 @kind object) @signature `Lokio/c;.s0:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ae0ac.  if v2 == 0 then goto L3ae1c2;
  #L3ae0b0.  if v3 < 0 then goto L3ae194;
  #L3ae0b4.  if v4 < v3 then goto L3ae156;
  #L3ae0b8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ae0be.  v0:= temp;
  #L3ae0c0.  if v4 > v0 then goto L3ae110;
  #L3ae0c4.  if v5 == 0 then goto L3ae100;
  #L3ae0c8.  v0:= `@@okio.s.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3ae0cc.  call temp:= `equals`(v5, v0) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ae0d2.  v0:= temp;
  #L3ae0d4.  if v0 == 0 then goto L3ae0e2;
  #L3ae0d8.  call temp:= `v0`(v1, v2, v3, v4) @signature `Lokio/c;.v0:(Ljava/lang/String;II)Lokio/c;` @kind virtual;
  #L3ae0de.  v2:= temp @kind object;
  #L3ae0e0.  return v2 @kind object;
  #L3ae0e2.  call temp:= `substring`(v2, v3, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3ae0e8.  v2:= temp @kind object;
  #L3ae0ea.  call temp:= `getBytes`(v2, v5) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3ae0f0.  v2:= temp @kind object;
  #L3ae0f2.  v3:= 0I;
  #L3ae0f4.  v4:= length @variable v2;
  #L3ae0f6.  call temp:= `m0`(v1, v2, v3, v4) @signature `Lokio/c;.m0:([BII)Lokio/c;` @kind virtual;
  #L3ae0fc.  v2:= temp @kind object;
  #L3ae0fe.  return v2 @kind object;
  #L3ae100.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ae104.  v3:= "charset == null" @kind object;
  #L3ae108.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae10e.  throw v2;
  #L3ae110.  v3:= new `java.lang.IllegalArgumentException`;
  #L3ae114.  v5:= new `java.lang.StringBuilder`;
  #L3ae118.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ae11e.  v0:= "endIndex > string.length: " @kind object;
  #L3ae122.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae128.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae12e.  v4:= " > " @kind object;
  #L3ae132.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae138.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ae13e.  v2:= temp;
  #L3ae140.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae146.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ae14c.  v2:= temp @kind object;
  #L3ae14e.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae154.  throw v3;
  #L3ae156.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ae15a.  v5:= new `java.lang.StringBuilder`;
  #L3ae15e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ae164.  v0:= "endIndex < beginIndex: " @kind object;
  #L3ae168.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae16e.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae174.  v4:= " < " @kind object;
  #L3ae178.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae17e.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae184.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ae18a.  v3:= temp @kind object;
  #L3ae18c.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae192.  throw v2;
  #L3ae194.  v2:= new `java.lang.IllegalAccessError`;
  #L3ae198.  v4:= new `java.lang.StringBuilder`;
  #L3ae19c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ae1a2.  v5:= "beginIndex < 0: " @kind object;
  #L3ae1a6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae1ac.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae1b2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ae1b8.  v3:= temp @kind object;
  #L3ae1ba.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalAccessError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae1c0.  throw v2;
  #L3ae1c2.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ae1c6.  v3:= "string == null" @kind object;
  #L3ae1ca.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae1d0.  throw v2;
}
procedure `okio.c` `t0`(`okio.c` v7 @kind this, `java.io.OutputStream` v8 @kind object, `long` v9 ) @signature `Lokio/c;.t0:(Ljava/io/OutputStream;J)Lokio/c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ae1e4.  if v8 == 0 then goto L3ae264;
  #L3ae1e8.  v0:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3ae1ec.  v2:= 0L;
  #L3ae1f0.  v4:= v9 @kind wide;
  #L3ae1f2.  call `b`(v0, v2, v4) @signature `Lokio/s;.b:(JJJ)V` @kind static;
  #L3ae1f8.  v0:= v7.`okio.c.a` @type ^`okio.n` @kind object;
  #L3ae1fc.  v1:= 0L;
  #L3ae200.  v3:= lcmp(v9, v1);
  #L3ae204.  if v3 <= 0 then goto L3ae262;
  #L3ae208.  v1:= v0.`okio.n.c` @type ^`int`;
  #L3ae20c.  v2:= v0.`okio.n.b` @type ^`int`;
  #L3ae210.  v1:= v1 - v2 @kind int;
  #L3ae212.  v1:= (`long`) v1 @kind i2l;
  #L3ae214.  call temp:= `min`(v9, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3ae21a.  v1:= temp @kind wide;
  #L3ae21c.  v2:= (`int`) v1 @kind l2i;
  #L3ae21e.  v1:= v0.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ae222.  v3:= v0.`okio.n.b` @type ^`int`;
  #L3ae226.  call `write`(v8, v1, v3, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L3ae22c.  v1:= v0.`okio.n.b` @type ^`int`;
  #L3ae230.  v1:= v1 + v2 @kind int;
  #L3ae232.  v0.`okio.n.b` @type ^`int` := v1;
  #L3ae236.  v3:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3ae23a.  v5:= (`long`) v2 @kind i2l;
  #L3ae23c.  v3:= v3 - v5 @kind long;
  #L3ae23e.  v7.`okio.c.b` @type ^`long` := v3 @kind wide;
  #L3ae242.  v9:= v9 - v5 @kind long;
  #L3ae244.  v2:= v0.`okio.n.c` @type ^`int`;
  #L3ae248.  if v1 != v2 then goto L3ae1fc;
  #L3ae24c.  call temp:= `b`(v0) @signature `Lokio/n;.b:()Lokio/n;` @kind virtual;
  #L3ae252.  v1:= temp @kind object;
  #L3ae254.  v7.`okio.c.a` @type ^`okio.n` := v1 @kind object;
  #L3ae258.  call `a`(v0) @signature `Lokio/o;.a:(Lokio/n;)V` @kind static;
  #L3ae25e.  v0:= v1 @kind object;
  #L3ae260.  goto L3ae1fc;
  #L3ae262.  return v7 @kind object;
  #L3ae264.  v8:= new `java.lang.IllegalArgumentException`;
  #L3ae268.  v9:= "out == null" @kind object;
  #L3ae26c.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae272.  throw v8;
}
procedure `java.lang.String` `toString`(`okio.c` v1 @kind this) @signature `Lokio/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ad840.  call temp:= `h0`(v1) @signature `Lokio/c;.h0:()Lokio/ByteString;` @kind virtual;
  #L3ad846.  v0:= temp @kind object;
  #L3ad848.  call temp:= `toString`(v0) @signature `Lokio/ByteString;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ad84e.  v0:= temp @kind object;
  #L3ad850.  return v0 @kind object;
}
procedure `okio.d` `u`(`okio.c` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokio/c;.u:(Ljava/lang/String;)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ae6e0.  call temp:= `u0`(v0, v1) @signature `Lokio/c;.u0:(Ljava/lang/String;)Lokio/c;` @kind virtual;
  #L3ae6e6.  v1:= temp @kind object;
  #L3ae6e8.  return v1 @kind object;
}
procedure `okio.c` `u0`(`okio.c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokio/c;.u0:(Ljava/lang/String;)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ae284.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ae28a.  v0:= temp;
  #L3ae28c.  v1:= 0I;
  #L3ae28e.  call temp:= `v0`(v2, v3, v1, v0) @signature `Lokio/c;.v0:(Ljava/lang/String;II)Lokio/c;` @kind virtual;
  #L3ae294.  v3:= temp @kind object;
  #L3ae296.  return v3 @kind object;
}
procedure `boolean` `v`(`okio.c` v6 @kind this, `long` v7 , `okio.ByteString` v9 @kind object) @signature `Lokio/c;.v:(JLokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3acf58.  call temp:= `p`(v9) @signature `Lokio/ByteString;.p:()I` @kind virtual;
  #L3acf5e.  v5:= temp;
  #L3acf60.  v4:= 0I;
  #L3acf62.  v0:= v6 @kind object;
  #L3acf64.  v1:= v7 @kind wide;
  #L3acf66.  v3:= v9 @kind object;
  #L3acf68.  call temp:= `Y`(v0, v1, v3, v4, v5) @signature `Lokio/c;.Y:(JLokio/ByteString;II)Z` @kind virtual;
  #L3acf6e.  v7:= temp;
  #L3acf70.  return v7;
}
procedure `okio.c` `v0`(`okio.c` v7 @kind this, `java.lang.String` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/c;.v0:(Ljava/lang/String;II)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ae2a8.  if v8 == 0 then goto L3ae4f2;
  #L3ae2ac.  if v9 < 0 then goto L3ae4c4;
  #L3ae2b0.  if v10 < v9 then goto L3ae486;
  #L3ae2b4.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ae2ba.  v0:= temp;
  #L3ae2bc.  if v10 > v0 then goto L3ae440;
  #L3ae2c0.  if v9 >= v10 then goto L3ae43e;
  #L3ae2c4.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ae2ca.  v0:= temp;
  #L3ae2cc.  v1:= 128I;
  #L3ae2d0.  if v0 >= v1 then goto L3ae340;
  #L3ae2d4.  v2:= 1I;
  #L3ae2d6.  call temp:= `j0`(v7, v2) @signature `Lokio/c;.j0:(I)Lokio/n;` @kind virtual;
  #L3ae2dc.  v2:= temp @kind object;
  #L3ae2de.  v3:= v2.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ae2e2.  v4:= v2.`okio.n.c` @type ^`int`;
  #L3ae2e6.  v4:= v4 - v9 @kind int;
  #L3ae2e8.  v5:= v4 - 8192;
  #L3ae2ec.  call temp:= `min`(v10, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ae2f2.  v5:= temp;
  #L3ae2f4.  v6:= v9 + 1;
  #L3ae2f8.  v9:= v9 + v4 @kind int;
  #L3ae2fa.  v0:= (`byte`) v0 @kind i2b;
  #L3ae2fc.  v3[v9]:= v0 @kind byte;
  #L3ae300.  if v6 >= v5 then goto L3ae322;
  #L3ae304.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ae30a.  v9:= temp;
  #L3ae30c.  if v9 < v1 then goto L3ae312;
  #L3ae310.  goto L3ae322;
  #L3ae312.  v0:= v6 + 1;
  #L3ae316.  v6:= v6 + v4 @kind int;
  #L3ae318.  v9:= (`byte`) v9 @kind i2b;
  #L3ae31a.  v3[v6]:= v9 @kind byte;
  #L3ae31e.  v6:= v0;
  #L3ae320.  goto L3ae300;
  #L3ae322.  v4:= v4 + v6 @kind int;
  #L3ae324.  v9:= v2.`okio.n.c` @type ^`int`;
  #L3ae328.  v4:= v4 - v9 @kind int;
  #L3ae32a.  v9:= v9 + v4 @kind int;
  #L3ae32c.  v2.`okio.n.c` @type ^`int` := v9;
  #L3ae330.  v0:= v7.`okio.c.b` @type ^`long` @kind wide;
  #L3ae334.  v2:= (`long`) v4 @kind i2l;
  #L3ae336.  v0:= v0 + v2 @kind long;
  #L3ae338.  v7.`okio.c.b` @type ^`long` := v0 @kind wide;
  #L3ae33c.  v9:= v6;
  #L3ae33e.  goto L3ae2c0;
  #L3ae340.  v2:= 2048I;
  #L3ae344.  if v0 >= v2 then goto L3ae368;
  #L3ae348.  v2:= v0 ^> 6;
  #L3ae34c.  v2:= v2 ^| 192;
  #L3ae350.  call temp:= `o0`(v7, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae356.  v0:= v0 ^& 63;
  #L3ae35a.  v0:= v0 ^| v1 @kind int;
  #L3ae35c.  call temp:= `o0`(v7, v0) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae362.  v9:= v9 + 1;
  #L3ae366.  goto L3ae2c0;
  #L3ae368.  v2:= 55296I;
  #L3ae36e.  v3:= 63I;
  #L3ae372.  if v0 < v2 then goto L3ae414;
  #L3ae376.  v2:= 57343I;
  #L3ae37c.  if v0 <= v2 then goto L3ae382;
  #L3ae380.  goto L3ae414;
  #L3ae382.  v4:= v9 + 1;
  #L3ae386.  if v4 >= v10 then goto L3ae394;
  #L3ae38a.  call temp:= `charAt`(v8, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ae390.  v5:= temp;
  #L3ae392.  goto L3ae396;
  #L3ae394.  v5:= 0I;
  #L3ae396.  v6:= 56319I;
  #L3ae39c.  if v0 > v6 then goto L3ae408;
  #L3ae3a0.  v6:= 56320I;
  #L3ae3a6.  if v5 < v6 then goto L3ae408;
  #L3ae3aa.  if v5 <= v2 then goto L3ae3b0;
  #L3ae3ae.  goto L3ae408;
  #L3ae3b0.  v2:= 65536I;
  #L3ae3b4.  v4:= -55297I;
  #L3ae3ba.  v0:= v0 ^& v4 @kind int;
  #L3ae3bc.  v0:= v0 ^< 10;
  #L3ae3c0.  v4:= -56321I;
  #L3ae3c6.  v4:= v4 ^& v5 @kind int;
  #L3ae3c8.  v0:= v0 ^| v4 @kind int;
  #L3ae3ca.  v0:= v0 + v2 @kind int;
  #L3ae3cc.  v2:= v0 ^> 18;
  #L3ae3d0.  v2:= v2 ^| 240;
  #L3ae3d4.  call temp:= `o0`(v7, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae3da.  v2:= v0 ^> 12;
  #L3ae3de.  v2:= v2 ^& v3 @kind int;
  #L3ae3e0.  v2:= v2 ^| v1 @kind int;
  #L3ae3e2.  call temp:= `o0`(v7, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae3e8.  v2:= v0 ^> 6;
  #L3ae3ec.  v2:= v2 ^& v3 @kind int;
  #L3ae3ee.  v2:= v2 ^| v1 @kind int;
  #L3ae3f0.  call temp:= `o0`(v7, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae3f6.  v0:= v0 ^& v3 @kind int;
  #L3ae3f8.  v0:= v0 ^| v1 @kind int;
  #L3ae3fa.  call temp:= `o0`(v7, v0) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae400.  v9:= v9 + 2;
  #L3ae404.  goto L3ae2c0;
  #L3ae408.  call temp:= `o0`(v7, v3) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae40e.  v9:= v4;
  #L3ae410.  goto L3ae2c0;
  #L3ae414.  v2:= v0 ^> 12;
  #L3ae418.  v2:= v2 ^| 224;
  #L3ae41c.  call temp:= `o0`(v7, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae422.  v2:= v0 ^> 6;
  #L3ae426.  v2:= v2 ^& v3 @kind int;
  #L3ae428.  v2:= v2 ^| v1 @kind int;
  #L3ae42a.  call temp:= `o0`(v7, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae430.  v0:= v0 ^& 63;
  #L3ae434.  v0:= v0 ^| v1 @kind int;
  #L3ae436.  call temp:= `o0`(v7, v0) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae43c.  goto L3ae362;
  #L3ae43e.  return v7 @kind object;
  #L3ae440.  v9:= new `java.lang.IllegalArgumentException`;
  #L3ae444.  v0:= new `java.lang.StringBuilder`;
  #L3ae448.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ae44e.  v1:= "endIndex > string.length: " @kind object;
  #L3ae452.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae458.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae45e.  v10:= " > " @kind object;
  #L3ae462.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae468.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ae46e.  v8:= temp;
  #L3ae470.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae476.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ae47c.  v8:= temp @kind object;
  #L3ae47e.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae484.  throw v9;
  #L3ae486.  v8:= new `java.lang.IllegalArgumentException`;
  #L3ae48a.  v0:= new `java.lang.StringBuilder`;
  #L3ae48e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ae494.  v1:= "endIndex < beginIndex: " @kind object;
  #L3ae498.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae49e.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae4a4.  v10:= " < " @kind object;
  #L3ae4a8.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae4ae.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae4b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ae4ba.  v9:= temp @kind object;
  #L3ae4bc.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae4c2.  throw v8;
  #L3ae4c4.  v8:= new `java.lang.IllegalArgumentException`;
  #L3ae4c8.  v10:= new `java.lang.StringBuilder`;
  #L3ae4cc.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ae4d2.  v0:= "beginIndex < 0: " @kind object;
  #L3ae4d6.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae4dc.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae4e2.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ae4e8.  v9:= temp @kind object;
  #L3ae4ea.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae4f0.  throw v8;
  #L3ae4f2.  v8:= new `java.lang.IllegalArgumentException`;
  #L3ae4f6.  v9:= "string == null" @kind object;
  #L3ae4fa.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae500.  throw v8;
}
procedure `java.lang.String` `w`(`okio.c` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/c;.w:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ad4d0.  v0:= v2.`okio.c.b` @type ^`long` @kind wide;
  #L3ad4d4.  call temp:= `c0`(v2, v0, v3) @signature `Lokio/c;.c0:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L3ad4da.  v3:= temp @kind object;
  #L3ad4dc.  return v3 @kind object;
  #L3ad4de.  v3:= Exception @type ^`java.io.EOFException` @kind object;
  #L3ad4e0.  v0:= new `java.lang.AssertionError`;
  #L3ad4e4.  call `<init>`(v0, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ad4ea.  throw v0;
  catch `java.io.EOFException` @[L3ad4d0..L3ad4dc] goto L3ad4de;
}
procedure `okio.c` `w0`(`okio.c` v3 @kind this, `int` v4 ) @signature `Lokio/c;.w0:(I)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ae514.  v0:= 128I;
  #L3ae518.  if v4 >= v0 then goto L3ae524;
  #L3ae51c.  call temp:= `o0`(v3, v4) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae522.  goto L3ae5d4;
  #L3ae524.  v1:= 2048I;
  #L3ae528.  v2:= 63I;
  #L3ae52c.  if v4 >= v1 then goto L3ae54a;
  #L3ae530.  v1:= v4 ^> 6;
  #L3ae534.  v1:= v1 ^| 192;
  #L3ae538.  call temp:= `o0`(v3, v1) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae53e.  v4:= v4 ^& v2 @kind int;
  #L3ae540.  v4:= v4 ^| v0 @kind int;
  #L3ae542.  call temp:= `o0`(v3, v4) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae548.  goto L3ae5d4;
  #L3ae54a.  v1:= 65536I;
  #L3ae54e.  if v4 >= v1 then goto L3ae596;
  #L3ae552.  v1:= 55296I;
  #L3ae558.  if v4 < v1 then goto L3ae56e;
  #L3ae55c.  v1:= 57343I;
  #L3ae562.  if v4 > v1 then goto L3ae56e;
  #L3ae566.  call temp:= `o0`(v3, v2) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae56c.  goto L3ae5d4;
  #L3ae56e.  v1:= v4 ^> 12;
  #L3ae572.  v1:= v1 ^| 224;
  #L3ae576.  call temp:= `o0`(v3, v1) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae57c.  v1:= v4 ^> 6;
  #L3ae580.  v1:= v1 ^& v2 @kind int;
  #L3ae582.  v1:= v1 ^| v0 @kind int;
  #L3ae584.  call temp:= `o0`(v3, v1) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae58a.  v4:= v4 ^& v2 @kind int;
  #L3ae58c.  v4:= v4 ^| v0 @kind int;
  #L3ae58e.  call temp:= `o0`(v3, v4) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae594.  goto L3ae5d4;
  #L3ae596.  v1:= 1114111I;
  #L3ae59c.  if v4 > v1 then goto L3ae5d6;
  #L3ae5a0.  v1:= v4 ^> 18;
  #L3ae5a4.  v1:= v1 ^| 240;
  #L3ae5a8.  call temp:= `o0`(v3, v1) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae5ae.  v1:= v4 ^> 12;
  #L3ae5b2.  v1:= v1 ^& v2 @kind int;
  #L3ae5b4.  v1:= v1 ^| v0 @kind int;
  #L3ae5b6.  call temp:= `o0`(v3, v1) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae5bc.  v1:= v4 ^> 6;
  #L3ae5c0.  v1:= v1 ^& v2 @kind int;
  #L3ae5c2.  v1:= v1 ^| v0 @kind int;
  #L3ae5c4.  call temp:= `o0`(v3, v1) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae5ca.  v4:= v4 ^& v2 @kind int;
  #L3ae5cc.  v4:= v4 ^| v0 @kind int;
  #L3ae5ce.  call temp:= `o0`(v3, v4) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae5d4.  return v3 @kind object;
  #L3ae5d6.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ae5da.  v1:= new `java.lang.StringBuilder`;
  #L3ae5de.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ae5e4.  v2:= "Unexpected code point: " @kind object;
  #L3ae5e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae5ee.  call temp:= `toHexString`(v4) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L3ae5f4.  v4:= temp @kind object;
  #L3ae5f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ae5fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ae602.  v4:= temp @kind object;
  #L3ae604.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ae60a.  throw v0;
}
procedure `int` `write`(`okio.c` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object) @signature `Lokio/c;.write:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ad420.  if v7 == 0 then goto L3ad476;
  #L3ad424.  call temp:= `remaining`(v7) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3ad42a.  v0:= temp;
  #L3ad42c.  v1:= v0;
  #L3ad42e.  if v1 <= 0 then goto L3ad468;
  #L3ad432.  v2:= 1I;
  #L3ad434.  call temp:= `j0`(v6, v2) @signature `Lokio/c;.j0:(I)Lokio/n;` @kind virtual;
  #L3ad43a.  v2:= temp @kind object;
  #L3ad43c.  v3:= v2.`okio.n.c` @type ^`int`;
  #L3ad440.  v3:= v3 - 8192;
  #L3ad444.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ad44a.  v3:= temp;
  #L3ad44c.  v4:= v2.`okio.n.a` @type ^`byte`[] @kind object;
  #L3ad450.  v5:= v2.`okio.n.c` @type ^`int`;
  #L3ad454.  call temp:= `get`(v7, v4, v5, v3) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3ad45a.  v1:= v1 - v3 @kind int;
  #L3ad45c.  v4:= v2.`okio.n.c` @type ^`int`;
  #L3ad460.  v4:= v4 + v3 @kind int;
  #L3ad462.  v2.`okio.n.c` @type ^`int` := v4;
  #L3ad466.  goto L3ad42e;
  #L3ad468.  v1:= v6.`okio.c.b` @type ^`long` @kind wide;
  #L3ad46c.  v3:= (`long`) v0 @kind i2l;
  #L3ad46e.  v1:= v1 + v3 @kind long;
  #L3ad470.  v6.`okio.c.b` @type ^`long` := v1 @kind wide;
  #L3ad474.  return v0;
  #L3ad476.  v7:= new `java.lang.IllegalArgumentException`;
  #L3ad47a.  v0:= "source == null" @kind object;
  #L3ad47e.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ad484.  throw v7;
}
procedure `okio.d` `write`(`okio.c` v0 @kind this, `byte`[] v1 @kind object) @signature `Lokio/c;.write:([B)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ae638.  call temp:= `l0`(v0, v1) @signature `Lokio/c;.l0:([B)Lokio/c;` @kind virtual;
  #L3ae63e.  v1:= temp @kind object;
  #L3ae640.  return v1 @kind object;
}
procedure `okio.d` `write`(`okio.c` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokio/c;.write:([BII)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ae654.  call temp:= `m0`(v0, v1, v2, v3) @signature `Lokio/c;.m0:([BII)Lokio/c;` @kind virtual;
  #L3ae65a.  v1:= temp @kind object;
  #L3ae65c.  return v1 @kind object;
}
procedure `okio.d` `writeByte`(`okio.c` v0 @kind this, `int` v1 ) @signature `Lokio/c;.writeByte:(I)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ae670.  call temp:= `o0`(v0, v1) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L3ae676.  v1:= temp @kind object;
  #L3ae678.  return v1 @kind object;
}
procedure `okio.d` `writeInt`(`okio.c` v0 @kind this, `int` v1 ) @signature `Lokio/c;.writeInt:(I)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ae6a8.  call temp:= `q0`(v0, v1) @signature `Lokio/c;.q0:(I)Lokio/c;` @kind virtual;
  #L3ae6ae.  v1:= temp @kind object;
  #L3ae6b0.  return v1 @kind object;
}
procedure `okio.d` `writeShort`(`okio.c` v0 @kind this, `int` v1 ) @signature `Lokio/c;.writeShort:(I)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ae6c4.  call temp:= `r0`(v0, v1) @signature `Lokio/c;.r0:(I)Lokio/c;` @kind virtual;
  #L3ae6ca.  v1:= temp @kind object;
  #L3ae6cc.  return v1 @kind object;
}
