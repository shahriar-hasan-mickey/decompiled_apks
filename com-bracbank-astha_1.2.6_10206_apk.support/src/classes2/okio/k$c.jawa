record `okio.k$c` @kind class @AccessFlag FINAL extends `okio.a` @kind class {
  `java.net.Socket` `okio.k$c.k` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.k$c` v0 @kind this, `java.net.Socket` v1 @kind object) @signature `Lokio/k$c;.<init>:(Ljava/net/Socket;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b0390.  v0.`okio.k$c.k` @type ^`java.net.Socket` := v1 @kind object;
  #L3b0394.  call `<init>`(v0) @signature `Lokio/a;.<init>:()V` @kind direct;
  #L3b039a.  return @kind void;
}
procedure `java.io.IOException` `o`(`okio.k$c` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokio/k$c;.o:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3b0364.  v0:= new `java.net.SocketTimeoutException`;
  #L3b0368.  v1:= "timeout" @kind object;
  #L3b036c.  call `<init>`(v0, v1) @signature `Ljava/net/SocketTimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0372.  if v3 == 0 then goto L3b037c;
  #L3b0376.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3b037c.  return v0 @kind object;
}
procedure `void` `t`(`okio.k$c` v5 @kind this) @signature `Lokio/k$c;.t:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b03ac.  v0:= "Failed to close timed out socket " @kind object;
  #L3b03b0.  v1:= v5.`okio.k$c.k` @type ^`java.net.Socket` @kind object;
  #L3b03b4.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L3b03ba.  goto L3b0430;
  #L3b03bc.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3b03be.  call temp:= `c`(v1) @signature `Lokio/k;.c:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3b03c4.  v2:= temp;
  #L3b03c6.  if v2 == 0 then goto L3b03fc;
  #L3b03ca.  v2:= `@@okio.k.a` @type ^`java.util.logging.Logger` @kind object;
  #L3b03ce.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L3b03d2.  v4:= new `java.lang.StringBuilder`;
  #L3b03d6.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b03dc.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b03e2.  v0:= v5.`okio.k$c.k` @type ^`java.net.Socket` @kind object;
  #L3b03e6.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b03ec.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b03f2.  v0:= temp @kind object;
  #L3b03f4.  call `log`(v2, v3, v0, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3b03fa.  goto L3b0430;
  #L3b03fc.  throw v1;
  #L3b03fe.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L3b0400.  v2:= `@@okio.k.a` @type ^`java.util.logging.Logger` @kind object;
  #L3b0404.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L3b0408.  v4:= new `java.lang.StringBuilder`;
  #L3b040c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b0412.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0418.  v0:= v5.`okio.k$c.k` @type ^`java.net.Socket` @kind object;
  #L3b041c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0422.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0428.  v0:= temp @kind object;
  #L3b042a.  call `log`(v2, v3, v0, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3b0430.  return @kind void;
  catch `java.lang.Exception` @[L3b03b0..L3b03ba] goto L3b03fe;
  catch `java.lang.AssertionError` @[L3b03b0..L3b03ba] goto L3b03bc;
}
