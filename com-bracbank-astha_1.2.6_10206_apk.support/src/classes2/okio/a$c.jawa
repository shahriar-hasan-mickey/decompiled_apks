record `okio.a$c` @kind class @AccessFlag FINAL extends `java.lang.Thread` @kind class {
}
procedure `void` `<init>`(`okio.a$c` v1 @kind this) @signature `Lokio/a$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ac6cc.  v0:= "Okio Watchdog" @kind object;
  #L3ac6d0.  call `<init>`(v1, v0) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac6d6.  v0:= 1I;
  #L3ac6d8.  call `setDaemon`(v1, v0) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L3ac6de.  return @kind void;
}
procedure `void` `run`(`okio.a$c` v3 @kind this) @signature `Lokio/a$c;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ac6f0.  v0:= constclass @type ^`okio.a` @kind object;
  #L3ac6f4.  @monitorenter v0
  #L3ac6f6.  call temp:= `i`() @signature `Lokio/a;.i:()Lokio/a;` @kind static;
  #L3ac6fc.  v1:= temp @kind object;
  #L3ac6fe.  if v1 != 0 then goto L3ac706;
  #L3ac702.  @monitorexit v0
  #L3ac704.  goto L3ac6f0;
  #L3ac706.  v2:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3ac70a.  if v1 != v2 then goto L3ac718;
  #L3ac70e.  v1:= 0I;
  #L3ac710.  `@@okio.a.j` @type ^`okio.a` := v1 @kind object;
  #L3ac714.  @monitorexit v0
  #L3ac716.  return @kind void;
  #L3ac718.  @monitorexit v0
  #L3ac71a.  call `t`(v1) @signature `Lokio/a;.t:()V` @kind virtual;
  #L3ac720.  goto L3ac6f0;
  #L3ac722.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac724.  @monitorexit v0
  #L3ac726.  throw v1;
  catch `java.lang.InterruptedException` @[L3ac6f0..L3ac6f6] goto L3ac6f0;
  catch `java.lang.Throwable` @[L3ac6f6..L3ac71a] goto L3ac722;
  catch `java.lang.InterruptedException` @[L3ac71a..L3ac720] goto L3ac6f0;
  catch `java.lang.Throwable` @[L3ac724..L3ac726] goto L3ac722;
  catch `java.lang.InterruptedException` @[L3ac726..L3ac728] goto L3ac6f0;
}
