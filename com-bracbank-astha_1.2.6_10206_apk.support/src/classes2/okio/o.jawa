record `okio.o` @kind class @AccessFlag FINAL {
}
global `okio.n` `@@okio.o.a` @AccessFlag STATIC;
global `long` `@@okio.o.b` @AccessFlag STATIC;
procedure `void` `<init>`(`okio.o` v0 @kind this) @signature `Lokio/o;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3b14ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b14f2.  return @kind void;
}
procedure `void` `a`(`okio.n` v10 @kind object) @signature `Lokio/o;.a:(Lokio/n;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3b1504.  v0:= v10.`okio.n.f` @type ^`okio.n` @kind object;
  #L3b1508.  if v0 != 0 then goto L3b1568;
  #L3b150c.  v0:= v10.`okio.n.g` @type ^`okio.n` @kind object;
  #L3b1510.  if v0 != 0 then goto L3b1568;
  #L3b1514.  v0:= v10.`okio.n.d` @type ^`boolean` @kind boolean;
  #L3b1518.  if v0 == 0 then goto L3b151e;
  #L3b151c.  return @kind void;
  #L3b151e.  v0:= constclass @type ^`okio.o` @kind object;
  #L3b1522.  @monitorenter v0
  #L3b1524.  v1:= `@@okio.o.b` @type ^`long` @kind wide;
  #L3b1528.  v3:= 8192L;
  #L3b152c.  v5:= v1 + v3 @kind long;
  #L3b1530.  v7:= 65536L;
  #L3b1536.  v9:= lcmp(v5, v7);
  #L3b153a.  if v9 <= 0 then goto L3b1542;
  #L3b153e.  @monitorexit v0
  #L3b1540.  return @kind void;
  #L3b1542.  v1:= v1 + v3 @kind long;
  #L3b1544.  `@@okio.o.b` @type ^`long` := v1 @kind wide;
  #L3b1548.  v1:= `@@okio.o.a` @type ^`okio.n` @kind object;
  #L3b154c.  v10.`okio.n.f` @type ^`okio.n` := v1 @kind object;
  #L3b1550.  v1:= 0I;
  #L3b1552.  v10.`okio.n.c` @type ^`int` := v1;
  #L3b1556.  v10.`okio.n.b` @type ^`int` := v1;
  #L3b155a.  `@@okio.o.a` @type ^`okio.n` := v10 @kind object;
  #L3b155e.  @monitorexit v0
  #L3b1560.  return @kind void;
  #L3b1562.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b1564.  @monitorexit v0
  #L3b1566.  throw v10;
  #L3b1568.  v10:= new `java.lang.IllegalArgumentException`;
  #L3b156c.  call `<init>`(v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3b1572.  throw v10;
  catch `java.lang.Throwable` @[L3b1524..L3b1566] goto L3b1562;
}
procedure `okio.n` `b`() @signature `Lokio/o;.b:()Lokio/n;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b1484.  v0:= constclass @type ^`okio.o` @kind object;
  #L3b1488.  @monitorenter v0
  #L3b148a.  v1:= `@@okio.o.a` @type ^`okio.n` @kind object;
  #L3b148e.  if v1 == 0 then goto L3b14b2;
  #L3b1492.  v2:= v1.`okio.n.f` @type ^`okio.n` @kind object;
  #L3b1496.  `@@okio.o.a` @type ^`okio.n` := v2 @kind object;
  #L3b149a.  v2:= 0I;
  #L3b149c.  v1.`okio.n.f` @type ^`okio.n` := v2 @kind object;
  #L3b14a0.  v2:= `@@okio.o.b` @type ^`long` @kind wide;
  #L3b14a4.  v4:= 8192L;
  #L3b14a8.  v2:= v2 - v4 @kind long;
  #L3b14aa.  `@@okio.o.b` @type ^`long` := v2 @kind wide;
  #L3b14ae.  @monitorexit v0
  #L3b14b0.  return v1 @kind object;
  #L3b14b2.  @monitorexit v0
  #L3b14b4.  v0:= new `okio.n`;
  #L3b14b8.  call `<init>`(v0) @signature `Lokio/n;.<init>:()V` @kind direct;
  #L3b14be.  return v0 @kind object;
  #L3b14c0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b14c2.  @monitorexit v0
  #L3b14c4.  throw v1;
  catch `java.lang.Throwable` @[L3b148a..L3b14b4] goto L3b14c0;
  catch `java.lang.Throwable` @[L3b14c2..L3b14c4] goto L3b14c0;
}
