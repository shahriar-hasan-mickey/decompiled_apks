record `okio.f` @kind class @AccessFlag PUBLIC_ABSTRACT extends `okio.p` @kind interface {
  `okio.p` `okio.f.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.f` v1 @kind this, `okio.p` v2 @kind object) @signature `Lokio/f;.<init>:(Lokio/p;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3af664.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3af66a.  if v2 == 0 then goto L3af674;
  #L3af66e.  v1.`okio.f.a` @type ^`okio.p` := v2 @kind object;
  #L3af672.  return @kind void;
  #L3af674.  v2:= new `java.lang.IllegalArgumentException`;
  #L3af678.  v0:= "delegate == null" @kind object;
  #L3af67c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3af682.  throw v2;
}
procedure `void` `A`(`okio.f` v1 @kind this, `okio.c` v2 @kind object, `long` v3 ) @signature `Lokio/f;.A:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af6cc.  v0:= v1.`okio.f.a` @type ^`okio.p` @kind object;
  #L3af6d0.  call `A`(v0, v2, v3) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L3af6d6.  return @kind void;
}
procedure `void` `close`(`okio.f` v1 @kind this) @signature `Lokio/f;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af694.  v0:= v1.`okio.f.a` @type ^`okio.p` @kind object;
  #L3af698.  call `close`(v0) @signature `Lokio/p;.close:()V` @kind interface;
  #L3af69e.  return @kind void;
}
procedure `okio.r` `e`(`okio.f` v1 @kind this) @signature `Lokio/f;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af644.  v0:= v1.`okio.f.a` @type ^`okio.p` @kind object;
  #L3af648.  call temp:= `e`(v0) @signature `Lokio/p;.e:()Lokio/r;` @kind interface;
  #L3af64e.  v0:= temp @kind object;
  #L3af650.  return v0 @kind object;
}
procedure `void` `flush`(`okio.f` v1 @kind this) @signature `Lokio/f;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af6b0.  v0:= v1.`okio.f.a` @type ^`okio.p` @kind object;
  #L3af6b4.  call `flush`(v0) @signature `Lokio/p;.flush:()V` @kind interface;
  #L3af6ba.  return @kind void;
}
procedure `java.lang.String` `toString`(`okio.f` v2 @kind this) @signature `Lokio/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3af5e4.  v0:= new `java.lang.StringBuilder`;
  #L3af5e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3af5ee.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3af5f4.  v1:= temp @kind object;
  #L3af5f6.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3af5fc.  v1:= temp @kind object;
  #L3af5fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af604.  v1:= "(" @kind object;
  #L3af608.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af60e.  v1:= v2.`okio.f.a` @type ^`okio.p` @kind object;
  #L3af612.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af618.  v1:= temp @kind object;
  #L3af61a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af620.  v1:= ")" @kind object;
  #L3af624.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3af62a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3af630.  v0:= temp @kind object;
  #L3af632.  return v0 @kind object;
}
