record `u2.a$a` @kind class @AccessFlag  extends `okio.q` @kind interface {
  `boolean` `u2.a$a.a` @AccessFlag ;
  `okio.e` `u2.a$a.b` @AccessFlag FINAL_SYNTHETIC;
  `u2.b` `u2.a$a.c` @AccessFlag FINAL_SYNTHETIC;
  `okio.d` `u2.a$a.d` @AccessFlag FINAL_SYNTHETIC;
  `u2.a` `u2.a$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`u2.a$a` v0 @kind this, `u2.a` v1 @kind object, `okio.e` v2 @kind object, `u2.b` v3 @kind object, `okio.d` v4 @kind object) @signature `Lu2/a$a;.<init>:(Lu2/a;Lokio/e;Lu2/b;Lokio/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fdd38.  v0.`u2.a$a.e` @type ^`u2.a` := v1 @kind object;
  #L3fdd3c.  v0.`u2.a$a.b` @type ^`okio.e` := v2 @kind object;
  #L3fdd40.  v0.`u2.a$a.c` @type ^`u2.b` := v3 @kind object;
  #L3fdd44.  v0.`u2.a$a.d` @type ^`okio.d` := v4 @kind object;
  #L3fdd48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fdd4e.  return @kind void;
}
procedure `long` `I`(`u2.a$a` v8 @kind this, `okio.c` v9 @kind object, `long` v10 ) @signature `Lu2/a$a;.I:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fdc7c.  v0:= 1I;
  #L3fdc7e.  v1:= v8.`u2.a$a.b` @type ^`okio.e` @kind object;
  #L3fdc82.  call temp:= `I`(v1, v9, v10) @signature `Lokio/q;.I:(Lokio/c;J)J` @kind interface;
  #L3fdc88.  v10:= temp @kind wide;
  #L3fdc8a.  v1:= -1L;
  #L3fdc8e.  v3:= lcmp(v10, v1);
  #L3fdc92.  if v3 != 0 then goto L3fdcae;
  #L3fdc96.  v9:= v8.`u2.a$a.a` @type ^`boolean` @kind boolean;
  #L3fdc9a.  if v9 != 0 then goto L3fdcac;
  #L3fdc9e.  v8.`u2.a$a.a` @type ^`boolean` := v0 @kind boolean;
  #L3fdca2.  v9:= v8.`u2.a$a.d` @type ^`okio.d` @kind object;
  #L3fdca6.  call `close`(v9) @signature `Lokio/p;.close:()V` @kind interface;
  #L3fdcac.  return v1 @kind wide;
  #L3fdcae.  v0:= v8.`u2.a$a.d` @type ^`okio.d` @kind object;
  #L3fdcb2.  call temp:= `c`(v0) @signature `Lokio/d;.c:()Lokio/c;` @kind interface;
  #L3fdcb8.  v3:= temp @kind object;
  #L3fdcba.  call temp:= `g0`(v9) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L3fdcc0.  v0:= temp @kind wide;
  #L3fdcc2.  v4:= v0 - v10 @kind long;
  #L3fdcc6.  v2:= v9 @kind object;
  #L3fdcc8.  v6:= v10 @kind wide;
  #L3fdcca.  call temp:= `T`(v2, v3, v4, v6) @signature `Lokio/c;.T:(Lokio/c;JJ)Lokio/c;` @kind virtual;
  #L3fdcd0.  v9:= v8.`u2.a$a.d` @type ^`okio.d` @kind object;
  #L3fdcd4.  call temp:= `q`(v9) @signature `Lokio/d;.q:()Lokio/d;` @kind interface;
  #L3fdcda.  return v10 @kind wide;
  #L3fdcdc.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L3fdcde.  v10:= v8.`u2.a$a.a` @type ^`boolean` @kind boolean;
  #L3fdce2.  if v10 != 0 then goto L3fdcf4;
  #L3fdce6.  v8.`u2.a$a.a` @type ^`boolean` := v0 @kind boolean;
  #L3fdcea.  v10:= v8.`u2.a$a.c` @type ^`u2.b` @kind object;
  #L3fdcee.  call `a`(v10) @signature `Lu2/b;.a:()V` @kind interface;
  #L3fdcf4.  throw v9;
  catch `java.io.IOException` @[L3fdc7e..L3fdc8a] goto L3fdcdc;
}
procedure `void` `close`(`u2.a$a` v2 @kind this) @signature `Lu2/a$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdd60.  v0:= v2.`u2.a$a.a` @type ^`boolean` @kind boolean;
  #L3fdd64.  if v0 != 0 then goto L3fdd8c;
  #L3fdd68.  v0:= 100I;
  #L3fdd6c.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3fdd70.  call temp:= `p`(v2, v0, v1) @signature `Lt2/c;.p:(Lokio/q;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L3fdd76.  v0:= temp;
  #L3fdd78.  if v0 != 0 then goto L3fdd8c;
  #L3fdd7c.  v0:= 1I;
  #L3fdd7e.  v2.`u2.a$a.a` @type ^`boolean` := v0 @kind boolean;
  #L3fdd82.  v0:= v2.`u2.a$a.c` @type ^`u2.b` @kind object;
  #L3fdd86.  call `a`(v0) @signature `Lu2/b;.a:()V` @kind interface;
  #L3fdd8c.  v0:= v2.`u2.a$a.b` @type ^`okio.e` @kind object;
  #L3fdd90.  call `close`(v0) @signature `Lokio/q;.close:()V` @kind interface;
  #L3fdd96.  return @kind void;
}
procedure `okio.r` `e`(`u2.a$a` v1 @kind this) @signature `Lu2/a$a;.e:()Lokio/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fdd18.  v0:= v1.`u2.a$a.b` @type ^`okio.e` @kind object;
  #L3fdd1c.  call temp:= `e`(v0) @signature `Lokio/q;.e:()Lokio/r;` @kind interface;
  #L3fdd22.  v0:= temp @kind object;
  #L3fdd24.  return v0 @kind object;
}
