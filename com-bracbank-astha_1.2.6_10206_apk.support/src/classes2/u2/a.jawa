record `u2.a` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.s` @kind interface {
  `u2.d` `u2.a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`u2.a` v0 @kind this, `u2.d` v1 @kind object) @signature `Lu2/a;.<init>:(Lu2/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fe2dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fe2e2.  v0.`u2.a.a` @type ^`u2.d` := v1 @kind object;
  #L3fe2e6.  return @kind void;
}
procedure `okhttp3.y` `b`(`u2.a` v4 @kind this, `u2.b` v5 @kind object, `okhttp3.y` v6 @kind object) @signature `Lu2/a;.b:(Lu2/b;Lokhttp3/y;)Lokhttp3/y;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fdf6c.  if v5 != 0 then goto L3fdf72;
  #L3fdf70.  return v6 @kind object;
  #L3fdf72.  call temp:= `b`(v5) @signature `Lu2/b;.b:()Lokio/p;` @kind interface;
  #L3fdf78.  v0:= temp @kind object;
  #L3fdf7a.  if v0 != 0 then goto L3fdf80;
  #L3fdf7e.  return v6 @kind object;
  #L3fdf80.  call temp:= `g`(v6) @signature `Lokhttp3/y;.g:()Lokhttp3/z;` @kind virtual;
  #L3fdf86.  v1:= temp @kind object;
  #L3fdf88.  call temp:= `T`(v1) @signature `Lokhttp3/z;.T:()Lokio/e;` @kind virtual;
  #L3fdf8e.  v1:= temp @kind object;
  #L3fdf90.  call temp:= `a`(v0) @signature `Lokio/k;.a:(Lokio/p;)Lokio/d;` @kind static;
  #L3fdf96.  v0:= temp @kind object;
  #L3fdf98.  v2:= new `u2.a$a`;
  #L3fdf9c.  call `<init>`(v2, v4, v1, v5, v0) @signature `Lu2/a$a;.<init>:(Lu2/a;Lokio/e;Lu2/b;Lokio/d;)V` @kind direct;
  #L3fdfa2.  v5:= "Content-Type" @kind object;
  #L3fdfa6.  call temp:= `R`(v6, v5) @signature `Lokhttp3/y;.R:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3fdfac.  v5:= temp @kind object;
  #L3fdfae.  call temp:= `g`(v6) @signature `Lokhttp3/y;.g:()Lokhttp3/z;` @kind virtual;
  #L3fdfb4.  v0:= temp @kind object;
  #L3fdfb6.  call temp:= `h`(v0) @signature `Lokhttp3/z;.h:()J` @kind virtual;
  #L3fdfbc.  v0:= temp @kind wide;
  #L3fdfbe.  call temp:= `V`(v6) @signature `Lokhttp3/y;.V:()Lokhttp3/y$a;` @kind virtual;
  #L3fdfc4.  v6:= temp @kind object;
  #L3fdfc6.  v3:= new `w2.h`;
  #L3fdfca.  call temp:= `b`(v2) @signature `Lokio/k;.b:(Lokio/q;)Lokio/e;` @kind static;
  #L3fdfd0.  v2:= temp @kind object;
  #L3fdfd2.  call `<init>`(v3, v5, v0, v2) @signature `Lw2/h;.<init>:(Ljava/lang/String;JLokio/e;)V` @kind direct;
  #L3fdfd8.  call temp:= `b`(v6, v3) @signature `Lokhttp3/y$a;.b:(Lokhttp3/z;)Lokhttp3/y$a;` @kind virtual;
  #L3fdfde.  v5:= temp @kind object;
  #L3fdfe0.  call temp:= `c`(v5) @signature `Lokhttp3/y$a;.c:()Lokhttp3/y;` @kind virtual;
  #L3fdfe6.  v5:= temp @kind object;
  #L3fdfe8.  return v5 @kind object;
}
procedure `okhttp3.q` `c`(`okhttp3.q` v7 @kind object, `okhttp3.q` v8 @kind object) @signature `Lu2/a;.c:(Lokhttp3/q;Lokhttp3/q;)Lokhttp3/q;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fde8c.  v0:= new `okhttp3.q$a`;
  #L3fde90.  call `<init>`(v0) @signature `Lokhttp3/q$a;.<init>:()V` @kind direct;
  #L3fde96.  call temp:= `g`(v7) @signature `Lokhttp3/q;.g:()I` @kind virtual;
  #L3fde9c.  v1:= temp;
  #L3fde9e.  v2:= 0I;
  #L3fdea0.  v3:= 0I;
  #L3fdea2.  if v3 >= v1 then goto L3fdf0c;
  #L3fdea6.  call temp:= `e`(v7, v3) @signature `Lokhttp3/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L3fdeac.  v4:= temp @kind object;
  #L3fdeae.  call temp:= `h`(v7, v3) @signature `Lokhttp3/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L3fdeb4.  v5:= temp @kind object;
  #L3fdeb6.  v6:= "Warning" @kind object;
  #L3fdeba.  call temp:= `equalsIgnoreCase`(v6, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fdec0.  v6:= temp;
  #L3fdec2.  if v6 == 0 then goto L3fded8;
  #L3fdec6.  v6:= "1" @kind object;
  #L3fdeca.  call temp:= `startsWith`(v5, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3fded0.  v6:= temp;
  #L3fded2.  if v6 == 0 then goto L3fded8;
  #L3fded6.  goto L3fdf06;
  #L3fded8.  call temp:= `d`(v4) @signature `Lu2/a;.d:(Ljava/lang/String;)Z` @kind static;
  #L3fdede.  v6:= temp;
  #L3fdee0.  if v6 != 0 then goto L3fdefc;
  #L3fdee4.  call temp:= `e`(v4) @signature `Lu2/a;.e:(Ljava/lang/String;)Z` @kind static;
  #L3fdeea.  v6:= temp;
  #L3fdeec.  if v6 == 0 then goto L3fdefc;
  #L3fdef0.  call temp:= `c`(v8, v4) @signature `Lokhttp3/q;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3fdef6.  v6:= temp @kind object;
  #L3fdef8.  if v6 != 0 then goto L3fdf06;
  #L3fdefc.  v6:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L3fdf00.  call `b`(v6, v0, v4, v5) @signature `Lt2/a;.b:(Lokhttp3/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3fdf06.  v3:= v3 + 1;
  #L3fdf0a.  goto L3fdea2;
  #L3fdf0c.  call temp:= `g`(v8) @signature `Lokhttp3/q;.g:()I` @kind virtual;
  #L3fdf12.  v7:= temp;
  #L3fdf14.  if v2 >= v7 then goto L3fdf50;
  #L3fdf18.  call temp:= `e`(v8, v2) @signature `Lokhttp3/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L3fdf1e.  v1:= temp @kind object;
  #L3fdf20.  call temp:= `d`(v1) @signature `Lu2/a;.d:(Ljava/lang/String;)Z` @kind static;
  #L3fdf26.  v3:= temp;
  #L3fdf28.  if v3 != 0 then goto L3fdf4a;
  #L3fdf2c.  call temp:= `e`(v1) @signature `Lu2/a;.e:(Ljava/lang/String;)Z` @kind static;
  #L3fdf32.  v3:= temp;
  #L3fdf34.  if v3 == 0 then goto L3fdf4a;
  #L3fdf38.  v3:= `@@t2.a.a` @type ^`t2.a` @kind object;
  #L3fdf3c.  call temp:= `h`(v8, v2) @signature `Lokhttp3/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L3fdf42.  v4:= temp @kind object;
  #L3fdf44.  call `b`(v3, v0, v1, v4) @signature `Lt2/a;.b:(Lokhttp3/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3fdf4a.  v2:= v2 + 1;
  #L3fdf4e.  goto L3fdf14;
  #L3fdf50.  call temp:= `d`(v0) @signature `Lokhttp3/q$a;.d:()Lokhttp3/q;` @kind virtual;
  #L3fdf56.  v7:= temp @kind object;
  #L3fdf58.  return v7 @kind object;
}
procedure `boolean` `d`(`java.lang.String` v1 @kind object) @signature `Lu2/a;.d:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L3fdda8.  v0:= "Content-Length" @kind object;
  #L3fddac.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fddb2.  v0:= temp;
  #L3fddb4.  if v0 != 0 then goto L3fddde;
  #L3fddb8.  v0:= "Content-Encoding" @kind object;
  #L3fddbc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fddc2.  v0:= temp;
  #L3fddc4.  if v0 != 0 then goto L3fddde;
  #L3fddc8.  v0:= "Content-Type" @kind object;
  #L3fddcc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fddd2.  v1:= temp;
  #L3fddd4.  if v1 == 0 then goto L3fddda;
  #L3fddd8.  goto L3fddde;
  #L3fddda.  v1:= 0I;
  #L3fdddc.  goto L3fdde0;
  #L3fddde.  v1:= 1I;
  #L3fdde0.  return v1;
}
procedure `boolean` `e`(`java.lang.String` v1 @kind object) @signature `Lu2/a;.e:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L3fddf4.  v0:= "Connection" @kind object;
  #L3fddf8.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fddfe.  v0:= temp;
  #L3fde00.  if v0 != 0 then goto L3fde78;
  #L3fde04.  v0:= "Keep-Alive" @kind object;
  #L3fde08.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fde0e.  v0:= temp;
  #L3fde10.  if v0 != 0 then goto L3fde78;
  #L3fde14.  v0:= "Proxy-Authenticate" @kind object;
  #L3fde18.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fde1e.  v0:= temp;
  #L3fde20.  if v0 != 0 then goto L3fde78;
  #L3fde24.  v0:= "Proxy-Authorization" @kind object;
  #L3fde28.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fde2e.  v0:= temp;
  #L3fde30.  if v0 != 0 then goto L3fde78;
  #L3fde34.  v0:= "TE" @kind object;
  #L3fde38.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fde3e.  v0:= temp;
  #L3fde40.  if v0 != 0 then goto L3fde78;
  #L3fde44.  v0:= "Trailers" @kind object;
  #L3fde48.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fde4e.  v0:= temp;
  #L3fde50.  if v0 != 0 then goto L3fde78;
  #L3fde54.  v0:= "Transfer-Encoding" @kind object;
  #L3fde58.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fde5e.  v0:= temp;
  #L3fde60.  if v0 != 0 then goto L3fde78;
  #L3fde64.  v0:= "Upgrade" @kind object;
  #L3fde68.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3fde6e.  v1:= temp;
  #L3fde70.  if v1 != 0 then goto L3fde78;
  #L3fde74.  v1:= 1I;
  #L3fde76.  goto L3fde7a;
  #L3fde78.  v1:= 0I;
  #L3fde7a.  return v1;
}
procedure `okhttp3.y` `f`(`okhttp3.y` v1 @kind object) @signature `Lu2/a;.f:(Lokhttp3/y;)Lokhttp3/y;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fe2a0.  if v1 == 0 then goto L3fe2ca;
  #L3fe2a4.  call temp:= `g`(v1) @signature `Lokhttp3/y;.g:()Lokhttp3/z;` @kind virtual;
  #L3fe2aa.  v0:= temp @kind object;
  #L3fe2ac.  if v0 == 0 then goto L3fe2ca;
  #L3fe2b0.  call temp:= `V`(v1) @signature `Lokhttp3/y;.V:()Lokhttp3/y$a;` @kind virtual;
  #L3fe2b6.  v1:= temp @kind object;
  #L3fe2b8.  v0:= 0I;
  #L3fe2ba.  call temp:= `b`(v1, v0) @signature `Lokhttp3/y$a;.b:(Lokhttp3/z;)Lokhttp3/y$a;` @kind virtual;
  #L3fe2c0.  v1:= temp @kind object;
  #L3fe2c2.  call temp:= `c`(v1) @signature `Lokhttp3/y$a;.c:()Lokhttp3/y;` @kind virtual;
  #L3fe2c8.  v1:= temp @kind object;
  #L3fe2ca.  return v1 @kind object;
}
procedure `okhttp3.y` `a`(`u2.a` v5 @kind this, `okhttp3.s$a` v6 @kind object) @signature `Lu2/a;.a:(Lokhttp3/s$a;)Lokhttp3/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fdffc.  v0:= v5.`u2.a.a` @type ^`u2.d` @kind object;
  #L3fe000.  if v0 == 0 then goto L3fe016;
  #L3fe004.  call temp:= `g`(v6) @signature `Lokhttp3/s$a;.g:()Lokhttp3/w;` @kind interface;
  #L3fe00a.  v1:= temp @kind object;
  #L3fe00c.  call temp:= `e`(v0, v1) @signature `Lu2/d;.e:(Lokhttp3/w;)Lokhttp3/y;` @kind interface;
  #L3fe012.  v0:= temp @kind object;
  #L3fe014.  goto L3fe018;
  #L3fe016.  v0:= 0I;
  #L3fe018.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3fe01e.  v1:= temp @kind wide;
  #L3fe020.  v3:= new `u2.c$a`;
  #L3fe024.  call temp:= `g`(v6) @signature `Lokhttp3/s$a;.g:()Lokhttp3/w;` @kind interface;
  #L3fe02a.  v4:= temp @kind object;
  #L3fe02c.  call `<init>`(v3, v1, v4, v0) @signature `Lu2/c$a;.<init>:(JLokhttp3/w;Lokhttp3/y;)V` @kind direct;
  #L3fe032.  call temp:= `c`(v3) @signature `Lu2/c$a;.c:()Lu2/c;` @kind virtual;
  #L3fe038.  v1:= temp @kind object;
  #L3fe03a.  v2:= v1.`u2.c.a` @type ^`okhttp3.w` @kind object;
  #L3fe03e.  v3:= v1.`u2.c.b` @type ^`okhttp3.y` @kind object;
  #L3fe042.  v4:= v5.`u2.a.a` @type ^`u2.d` @kind object;
  #L3fe046.  if v4 == 0 then goto L3fe050;
  #L3fe04a.  call `d`(v4, v1) @signature `Lu2/d;.d:(Lu2/c;)V` @kind interface;
  #L3fe050.  if v0 == 0 then goto L3fe066;
  #L3fe054.  if v3 != 0 then goto L3fe066;
  #L3fe058.  call temp:= `g`(v0) @signature `Lokhttp3/y;.g:()Lokhttp3/z;` @kind virtual;
  #L3fe05e.  v1:= temp @kind object;
  #L3fe060.  call `g`(v1) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @kind static;
  #L3fe066.  if v2 != 0 then goto L3fe0de;
  #L3fe06a.  if v3 != 0 then goto L3fe0de;
  #L3fe06e.  v0:= new `okhttp3.y$a`;
  #L3fe072.  call `<init>`(v0) @signature `Lokhttp3/y$a;.<init>:()V` @kind direct;
  #L3fe078.  call temp:= `g`(v6) @signature `Lokhttp3/s$a;.g:()Lokhttp3/w;` @kind interface;
  #L3fe07e.  v6:= temp @kind object;
  #L3fe080.  call temp:= `p`(v0, v6) @signature `Lokhttp3/y$a;.p:(Lokhttp3/w;)Lokhttp3/y$a;` @kind virtual;
  #L3fe086.  v6:= temp @kind object;
  #L3fe088.  v0:= `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol` @kind object;
  #L3fe08c.  call temp:= `n`(v6, v0) @signature `Lokhttp3/y$a;.n:(Lokhttp3/Protocol;)Lokhttp3/y$a;` @kind virtual;
  #L3fe092.  v6:= temp @kind object;
  #L3fe094.  v0:= 504I;
  #L3fe098.  call temp:= `g`(v6, v0) @signature `Lokhttp3/y$a;.g:(I)Lokhttp3/y$a;` @kind virtual;
  #L3fe09e.  v6:= temp @kind object;
  #L3fe0a0.  v0:= "Unsatisfiable Request (only-if-cached)" @kind object;
  #L3fe0a4.  call temp:= `k`(v6, v0) @signature `Lokhttp3/y$a;.k:(Ljava/lang/String;)Lokhttp3/y$a;` @kind virtual;
  #L3fe0aa.  v6:= temp @kind object;
  #L3fe0ac.  v0:= `@@t2.c.c` @type ^`okhttp3.z` @kind object;
  #L3fe0b0.  call temp:= `b`(v6, v0) @signature `Lokhttp3/y$a;.b:(Lokhttp3/z;)Lokhttp3/y$a;` @kind virtual;
  #L3fe0b6.  v6:= temp @kind object;
  #L3fe0b8.  v0:= -1L;
  #L3fe0bc.  call temp:= `q`(v6, v0) @signature `Lokhttp3/y$a;.q:(J)Lokhttp3/y$a;` @kind virtual;
  #L3fe0c2.  v6:= temp @kind object;
  #L3fe0c4.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3fe0ca.  v0:= temp @kind wide;
  #L3fe0cc.  call temp:= `o`(v6, v0) @signature `Lokhttp3/y$a;.o:(J)Lokhttp3/y$a;` @kind virtual;
  #L3fe0d2.  v6:= temp @kind object;
  #L3fe0d4.  call temp:= `c`(v6) @signature `Lokhttp3/y$a;.c:()Lokhttp3/y;` @kind virtual;
  #L3fe0da.  v6:= temp @kind object;
  #L3fe0dc.  return v6 @kind object;
  #L3fe0de.  if v2 != 0 then goto L3fe104;
  #L3fe0e2.  call temp:= `V`(v3) @signature `Lokhttp3/y;.V:()Lokhttp3/y$a;` @kind virtual;
  #L3fe0e8.  v6:= temp @kind object;
  #L3fe0ea.  call temp:= `f`(v3) @signature `Lu2/a;.f:(Lokhttp3/y;)Lokhttp3/y;` @kind static;
  #L3fe0f0.  v0:= temp @kind object;
  #L3fe0f2.  call temp:= `d`(v6, v0) @signature `Lokhttp3/y$a;.d:(Lokhttp3/y;)Lokhttp3/y$a;` @kind virtual;
  #L3fe0f8.  v6:= temp @kind object;
  #L3fe0fa.  call temp:= `c`(v6) @signature `Lokhttp3/y$a;.c:()Lokhttp3/y;` @kind virtual;
  #L3fe100.  v6:= temp @kind object;
  #L3fe102.  return v6 @kind object;
  #L3fe104.  call temp:= `c`(v6, v2) @signature `Lokhttp3/s$a;.c:(Lokhttp3/w;)Lokhttp3/y;` @kind interface;
  #L3fe10a.  v6:= temp @kind object;
  #L3fe10c.  if v6 != 0 then goto L3fe122;
  #L3fe110.  if v0 == 0 then goto L3fe122;
  #L3fe114.  call temp:= `g`(v0) @signature `Lokhttp3/y;.g:()Lokhttp3/z;` @kind virtual;
  #L3fe11a.  v0:= temp @kind object;
  #L3fe11c.  call `g`(v0) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @kind static;
  #L3fe122.  if v3 == 0 then goto L3fe1d8;
  #L3fe126.  call temp:= `s`(v6) @signature `Lokhttp3/y;.s:()I` @kind virtual;
  #L3fe12c.  v0:= temp;
  #L3fe12e.  v1:= 304I;
  #L3fe132.  if v0 != v1 then goto L3fe1ca;
  #L3fe136.  call temp:= `V`(v3) @signature `Lokhttp3/y;.V:()Lokhttp3/y$a;` @kind virtual;
  #L3fe13c.  v0:= temp @kind object;
  #L3fe13e.  call temp:= `U`(v3) @signature `Lokhttp3/y;.U:()Lokhttp3/q;` @kind virtual;
  #L3fe144.  v1:= temp @kind object;
  #L3fe146.  call temp:= `U`(v6) @signature `Lokhttp3/y;.U:()Lokhttp3/q;` @kind virtual;
  #L3fe14c.  v2:= temp @kind object;
  #L3fe14e.  call temp:= `c`(v1, v2) @signature `Lu2/a;.c:(Lokhttp3/q;Lokhttp3/q;)Lokhttp3/q;` @kind static;
  #L3fe154.  v1:= temp @kind object;
  #L3fe156.  call temp:= `j`(v0, v1) @signature `Lokhttp3/y$a;.j:(Lokhttp3/q;)Lokhttp3/y$a;` @kind virtual;
  #L3fe15c.  v0:= temp @kind object;
  #L3fe15e.  call temp:= `Z`(v6) @signature `Lokhttp3/y;.Z:()J` @kind virtual;
  #L3fe164.  v1:= temp @kind wide;
  #L3fe166.  call temp:= `q`(v0, v1) @signature `Lokhttp3/y$a;.q:(J)Lokhttp3/y$a;` @kind virtual;
  #L3fe16c.  v0:= temp @kind object;
  #L3fe16e.  call temp:= `X`(v6) @signature `Lokhttp3/y;.X:()J` @kind virtual;
  #L3fe174.  v1:= temp @kind wide;
  #L3fe176.  call temp:= `o`(v0, v1) @signature `Lokhttp3/y$a;.o:(J)Lokhttp3/y$a;` @kind virtual;
  #L3fe17c.  v0:= temp @kind object;
  #L3fe17e.  call temp:= `f`(v3) @signature `Lu2/a;.f:(Lokhttp3/y;)Lokhttp3/y;` @kind static;
  #L3fe184.  v1:= temp @kind object;
  #L3fe186.  call temp:= `d`(v0, v1) @signature `Lokhttp3/y$a;.d:(Lokhttp3/y;)Lokhttp3/y$a;` @kind virtual;
  #L3fe18c.  v0:= temp @kind object;
  #L3fe18e.  call temp:= `f`(v6) @signature `Lu2/a;.f:(Lokhttp3/y;)Lokhttp3/y;` @kind static;
  #L3fe194.  v1:= temp @kind object;
  #L3fe196.  call temp:= `l`(v0, v1) @signature `Lokhttp3/y$a;.l:(Lokhttp3/y;)Lokhttp3/y$a;` @kind virtual;
  #L3fe19c.  v0:= temp @kind object;
  #L3fe19e.  call temp:= `c`(v0) @signature `Lokhttp3/y$a;.c:()Lokhttp3/y;` @kind virtual;
  #L3fe1a4.  v0:= temp @kind object;
  #L3fe1a6.  call temp:= `g`(v6) @signature `Lokhttp3/y;.g:()Lokhttp3/z;` @kind virtual;
  #L3fe1ac.  v6:= temp @kind object;
  #L3fe1ae.  call `close`(v6) @signature `Lokhttp3/z;.close:()V` @kind virtual;
  #L3fe1b4.  v6:= v5.`u2.a.a` @type ^`u2.d` @kind object;
  #L3fe1b8.  call `a`(v6) @signature `Lu2/d;.a:()V` @kind interface;
  #L3fe1be.  v6:= v5.`u2.a.a` @type ^`u2.d` @kind object;
  #L3fe1c2.  call `f`(v6, v3, v0) @signature `Lu2/d;.f:(Lokhttp3/y;Lokhttp3/y;)V` @kind interface;
  #L3fe1c8.  return v0 @kind object;
  #L3fe1ca.  call temp:= `g`(v3) @signature `Lokhttp3/y;.g:()Lokhttp3/z;` @kind virtual;
  #L3fe1d0.  v0:= temp @kind object;
  #L3fe1d2.  call `g`(v0) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @kind static;
  #L3fe1d8.  call temp:= `V`(v6) @signature `Lokhttp3/y;.V:()Lokhttp3/y$a;` @kind virtual;
  #L3fe1de.  v0:= temp @kind object;
  #L3fe1e0.  call temp:= `f`(v3) @signature `Lu2/a;.f:(Lokhttp3/y;)Lokhttp3/y;` @kind static;
  #L3fe1e6.  v1:= temp @kind object;
  #L3fe1e8.  call temp:= `d`(v0, v1) @signature `Lokhttp3/y$a;.d:(Lokhttp3/y;)Lokhttp3/y$a;` @kind virtual;
  #L3fe1ee.  v0:= temp @kind object;
  #L3fe1f0.  call temp:= `f`(v6) @signature `Lu2/a;.f:(Lokhttp3/y;)Lokhttp3/y;` @kind static;
  #L3fe1f6.  v6:= temp @kind object;
  #L3fe1f8.  call temp:= `l`(v0, v6) @signature `Lokhttp3/y$a;.l:(Lokhttp3/y;)Lokhttp3/y$a;` @kind virtual;
  #L3fe1fe.  v6:= temp @kind object;
  #L3fe200.  call temp:= `c`(v6) @signature `Lokhttp3/y$a;.c:()Lokhttp3/y;` @kind virtual;
  #L3fe206.  v6:= temp @kind object;
  #L3fe208.  v0:= v5.`u2.a.a` @type ^`u2.d` @kind object;
  #L3fe20c.  if v0 == 0 then goto L3fe25c;
  #L3fe210.  call temp:= `c`(v6) @signature `Lw2/e;.c:(Lokhttp3/y;)Z` @kind static;
  #L3fe216.  v0:= temp;
  #L3fe218.  if v0 == 0 then goto L3fe23e;
  #L3fe21c.  call temp:= `a`(v6, v2) @signature `Lu2/c;.a:(Lokhttp3/y;Lokhttp3/w;)Z` @kind static;
  #L3fe222.  v0:= temp;
  #L3fe224.  if v0 == 0 then goto L3fe23e;
  #L3fe228.  v0:= v5.`u2.a.a` @type ^`u2.d` @kind object;
  #L3fe22c.  call temp:= `c`(v0, v6) @signature `Lu2/d;.c:(Lokhttp3/y;)Lu2/b;` @kind interface;
  #L3fe232.  v0:= temp @kind object;
  #L3fe234.  call temp:= `b`(v5, v0, v6) @signature `Lu2/a;.b:(Lu2/b;Lokhttp3/y;)Lokhttp3/y;` @kind direct;
  #L3fe23a.  v6:= temp @kind object;
  #L3fe23c.  return v6 @kind object;
  #L3fe23e.  call temp:= `f`(v2) @signature `Lokhttp3/w;.f:()Ljava/lang/String;` @kind virtual;
  #L3fe244.  v0:= temp @kind object;
  #L3fe246.  call temp:= `a`(v0) @signature `Lw2/f;.a:(Ljava/lang/String;)Z` @kind static;
  #L3fe24c.  v0:= temp;
  #L3fe24e.  if v0 == 0 then goto L3fe25c;
  #L3fe252.  v0:= v5.`u2.a.a` @type ^`u2.d` @kind object;
  #L3fe256.  call `b`(v0, v2) @signature `Lu2/d;.b:(Lokhttp3/w;)V` @kind interface;
  #L3fe25c.  return v6 @kind object;
  #L3fe25e.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe260.  if v0 == 0 then goto L3fe272;
  #L3fe264.  call temp:= `g`(v0) @signature `Lokhttp3/y;.g:()Lokhttp3/z;` @kind virtual;
  #L3fe26a.  v0:= temp @kind object;
  #L3fe26c.  call `g`(v0) @signature `Lt2/c;.g:(Ljava/io/Closeable;)V` @kind static;
  #L3fe272.  throw v6;
  catch `java.lang.Throwable` @[L3fe104..L3fe10c] goto L3fe25e;
  catch `java.io.IOException` @[L3fe252..L3fe25c] goto L3fe25c;
}
