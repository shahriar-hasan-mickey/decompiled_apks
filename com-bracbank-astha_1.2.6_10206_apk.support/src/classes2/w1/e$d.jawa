record `w1.e$d` @kind class @AccessFlag FINAL extends `w1.b` @kind interface {
  `okio.d` `w1.e$d.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `w1.e$d.b` @AccessFlag PRIVATE_FINAL;
  `okio.c` `w1.e$d.c` @AccessFlag PRIVATE_FINAL;
  `w1.d$b` `w1.e$d.d` @AccessFlag PRIVATE_FINAL;
  `int` `w1.e$d.e` @AccessFlag PRIVATE;
  `boolean` `w1.e$d.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`w1.e$d` v0 @kind this, `okio.d` v1 @kind object, `boolean` v2 ) @signature `Lw1/e$d;.<init>:(Lokio/d;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L403118.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40311e.  v0.`w1.e$d.a` @type ^`okio.d` := v1 @kind object;
  #L403122.  v0.`w1.e$d.b` @type ^`boolean` := v2 @kind boolean;
  #L403126.  v1:= new `okio.c`;
  #L40312a.  call `<init>`(v1) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L403130.  v0.`w1.e$d.c` @type ^`okio.c` := v1 @kind object;
  #L403134.  v2:= new `w1.d$b`;
  #L403138.  call `<init>`(v2, v1) @signature `Lw1/d$b;.<init>:(Lokio/c;)V` @kind direct;
  #L40313e.  v0.`w1.e$d.d` @type ^`w1.d$b` := v2 @kind object;
  #L403142.  v1:= 16384I;
  #L403146.  v0.`w1.e$d.e` @type ^`int` := v1;
  #L40314a.  return @kind void;
}
procedure `void` `K`(`w1.e$d` v7 @kind this, `int` v8 , `long` v9 ) @signature `Lw1/e$d;.K:(IJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L403878.  v0:= 0L;
  #L40387c.  v2:= lcmp(v9, v0);
  #L403880.  if v2 <= 0 then goto L4038c0;
  #L403884.  v2:= v7.`w1.e$d.e` @type ^`int`;
  #L403888.  v2:= (`long`) v2 @kind i2l;
  #L40388a.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L403890.  v2:= temp @kind wide;
  #L403892.  v3:= (`int`) v2 @kind l2i;
  #L403894.  v4:= (`long`) v3 @kind i2l;
  #L403896.  v9:= v9 - v4 @kind long;
  #L403898.  v2:= 9I;
  #L40389c.  v6:= lcmp(v9, v0);
  #L4038a0.  if v6 != 0 then goto L4038a8;
  #L4038a4.  v0:= 4I;
  #L4038a6.  goto L4038aa;
  #L4038a8.  v0:= 0I;
  #L4038aa.  call `h`(v7, v8, v3, v2, v0) @signature `Lw1/e$d;.h:(IIBB)V` @kind virtual;
  #L4038b0.  v0:= v7.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4038b4.  v1:= v7.`w1.e$d.c` @type ^`okio.c` @kind object;
  #L4038b8.  call `A`(v0, v1, v4) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L4038be.  goto L403878;
  #L4038c0.  return @kind void;
}
procedure `int` `L`(`w1.e$d` v1 @kind this) @signature `Lw1/e$d;.L:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403100.  v0:= v1.`w1.e$d.e` @type ^`int`;
  #L403104.  return v0;
}
procedure `void` `M`(`w1.e$d` v0 @kind this, `boolean` v1 , `boolean` v2 , `int` v3 , `int` v4 , `java.util.List` v5 @kind object) @signature `Lw1/e$d;.M:(ZZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L403770.  @monitorenter v0
  #L403772.  if v2 != 0 then goto L40379c;
  #L403776.  v2:= v0.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L40377a.  if v2 != 0 then goto L403788;
  #L40377e.  call `s`(v0, v1, v3, v5) @signature `Lw1/e$d;.s:(ZILjava/util/List;)V` @kind virtual;
  #L403784.  @monitorexit v0
  #L403786.  return @kind void;
  #L403788.  v1:= new `java.io.IOException`;
  #L40378c.  v2:= "closed" @kind object;
  #L403790.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403796.  throw v1;
  #L403798.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40379a.  goto L4037a8;
  #L40379c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L4037a0.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L4037a6.  throw v1;
  #L4037a8.  @monitorexit v0
  #L4037aa.  throw v1;
  catch `java.lang.Throwable` @[L403776..L403784] goto L403798;
  catch `java.lang.Throwable` @[L403788..L4037a8] goto L403798;
}
procedure `void` `S`(`w1.e$d` v3 @kind this, `int` v4 , `io.grpc.okhttp.internal.framed.ErrorCode` v5 @kind object, `byte`[] v6 @kind object) @signature `Lw1/e$d;.S:(ILio/grpc/okhttp/internal/framed/ErrorCode;[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L403484.  @monitorenter v3
  #L403486.  v0:= v3.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L40348a.  if v0 != 0 then goto L4034f0;
  #L40348e.  v0:= v5.`io.grpc.okhttp.internal.framed.ErrorCode.httpCode` @type ^`int`;
  #L403492.  v1:= -1I;
  #L403494.  v2:= 0I;
  #L403496.  if v0 == v1 then goto L4034de;
  #L40349a.  v0:= length @variable v6;
  #L40349c.  v0:= v0 + 8;
  #L4034a0.  v1:= 7I;
  #L4034a2.  call `h`(v3, v2, v0, v1, v2) @signature `Lw1/e$d;.h:(IIBB)V` @kind virtual;
  #L4034a8.  v0:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4034ac.  call temp:= `writeInt`(v0, v4) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L4034b2.  v4:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4034b6.  v5:= v5.`io.grpc.okhttp.internal.framed.ErrorCode.httpCode` @type ^`int`;
  #L4034ba.  call temp:= `writeInt`(v4, v5) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L4034c0.  v4:= length @variable v6;
  #L4034c2.  if v4 <= 0 then goto L4034d0;
  #L4034c6.  v4:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4034ca.  call temp:= `write`(v4, v6) @signature `Lokio/d;.write:([B)Lokio/d;` @kind interface;
  #L4034d0.  v4:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4034d4.  call `flush`(v4) @signature `Lokio/d;.flush:()V` @kind interface;
  #L4034da.  @monitorexit v3
  #L4034dc.  return @kind void;
  #L4034de.  v4:= "errorCode.httpCode == -1" @kind object;
  #L4034e2.  v5:= new `java.lang.Object`[v2];
  #L4034e6.  call temp:= `h`(v4, v5) @signature `Lw1/e;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L4034ec.  v4:= temp @kind object;
  #L4034ee.  throw v4;
  #L4034f0.  v4:= new `java.io.IOException`;
  #L4034f4.  v5:= "closed" @kind object;
  #L4034f8.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4034fe.  throw v4;
  #L403500.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L403502.  @monitorexit v3
  #L403504.  throw v4;
  catch `java.lang.Throwable` @[L403486..L4034da] goto L403500;
  catch `java.lang.Throwable` @[L4034de..L403500] goto L403500;
}
procedure `void` `a`(`w1.e$d` v4 @kind this, `int` v5 , `long` v6 ) @signature `Lw1/e$d;.a:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4037d0.  @monitorenter v4
  #L4037d2.  v0:= v4.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L4037d6.  if v0 != 0 then goto L40383c;
  #L4037da.  v0:= 0L;
  #L4037de.  v2:= 0I;
  #L4037e0.  v3:= lcmp(v6, v0);
  #L4037e4.  if v3 == 0 then goto L40381c;
  #L4037e8.  v0:= 2147483647L;
  #L4037ee.  v3:= lcmp(v6, v0);
  #L4037f2.  if v3 > 0 then goto L40381c;
  #L4037f6.  v0:= 4I;
  #L4037f8.  v1:= 8I;
  #L4037fc.  call `h`(v4, v5, v0, v1, v2) @signature `Lw1/e$d;.h:(IIBB)V` @kind virtual;
  #L403802.  v5:= v4.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L403806.  v7:= (`int`) v6 @kind l2i;
  #L403808.  call temp:= `writeInt`(v5, v7) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L40380e.  v5:= v4.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L403812.  call `flush`(v5) @signature `Lokio/d;.flush:()V` @kind interface;
  #L403818.  @monitorexit v4
  #L40381a.  return @kind void;
  #L40381c.  v5:= "windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s" @kind object;
  #L403820.  v0:= 1I;
  #L403822.  v0:= new `java.lang.Object`[v0];
  #L403826.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L40382c.  v6:= temp @kind object;
  #L40382e.  v0[v2]:= v6 @kind object;
  #L403832.  call temp:= `h`(v5, v0) @signature `Lw1/e;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L403838.  v5:= temp @kind object;
  #L40383a.  throw v5;
  #L40383c.  v5:= new `java.io.IOException`;
  #L403840.  v6:= "closed" @kind object;
  #L403844.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40384a.  throw v5;
  #L40384c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40384e.  @monitorexit v4
  #L403850.  throw v5;
  catch `java.lang.Throwable` @[L4037d2..L403818] goto L40384c;
  catch `java.lang.Throwable` @[L40381c..L40384c] goto L40384c;
}
procedure `void` `b`(`w1.e$d` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lw1/e$d;.b:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4035b8.  @monitorenter v3
  #L4035ba.  v0:= v3.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L4035be.  if v0 != 0 then goto L4035fc;
  #L4035c2.  v0:= 8I;
  #L4035c6.  v1:= 6I;
  #L4035c8.  v2:= 0I;
  #L4035ca.  if v4 == 0 then goto L4035d2;
  #L4035ce.  v4:= 1I;
  #L4035d0.  goto L4035d4;
  #L4035d2.  v4:= 0I;
  #L4035d4.  call `h`(v3, v2, v0, v1, v4) @signature `Lw1/e$d;.h:(IIBB)V` @kind virtual;
  #L4035da.  v4:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4035de.  call temp:= `writeInt`(v4, v5) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L4035e4.  v4:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4035e8.  call temp:= `writeInt`(v4, v6) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L4035ee.  v4:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4035f2.  call `flush`(v4) @signature `Lokio/d;.flush:()V` @kind interface;
  #L4035f8.  @monitorexit v3
  #L4035fa.  return @kind void;
  #L4035fc.  v4:= new `java.io.IOException`;
  #L403600.  v5:= "closed" @kind object;
  #L403604.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40360a.  throw v4;
  #L40360c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40360e.  @monitorexit v3
  #L403610.  throw v4;
  catch `java.lang.Throwable` @[L4035ba..L4035f8] goto L40360c;
  catch `java.lang.Throwable` @[L4035fc..L40360c] goto L40360c;
}
procedure `void` `close`(`w1.e$d` v1 @kind this) @signature `Lw1/e$d;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4031cc.  @monitorenter v1
  #L4031ce.  v0:= 1I;
  #L4031d0.  v1.`w1.e$d.f` @type ^`boolean` := v0 @kind boolean;
  #L4031d4.  v0:= v1.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4031d8.  call `close`(v0) @signature `Lokio/p;.close:()V` @kind interface;
  #L4031de.  @monitorexit v1
  #L4031e0.  return @kind void;
  #L4031e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4031e4.  @monitorexit v1
  #L4031e6.  throw v0;
  catch `java.lang.Throwable` @[L4031d0..L4031de] goto L4031e2;
}
procedure `void` `flush`(`w1.e$d` v2 @kind this) @signature `Lw1/e$d;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L403358.  @monitorenter v2
  #L40335a.  v0:= v2.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L40335e.  if v0 != 0 then goto L403370;
  #L403362.  v0:= v2.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L403366.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40336c.  @monitorexit v2
  #L40336e.  return @kind void;
  #L403370.  v0:= new `java.io.IOException`;
  #L403374.  v1:= "closed" @kind object;
  #L403378.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40337e.  throw v0;
  #L403380.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L403382.  @monitorexit v2
  #L403384.  throw v0;
  catch `java.lang.Throwable` @[L40335a..L40336c] goto L403380;
  catch `java.lang.Throwable` @[L403370..L403380] goto L403380;
}
procedure `void` `g`(`w1.e$d` v2 @kind this, `int` v3 , `byte` v4 , `okio.c` v5 @kind object, `int` v6 ) @signature `Lw1/e$d;.g:(IBLokio/c;I)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L40332c.  v0:= 0I;
  #L40332e.  call `h`(v2, v3, v6, v0, v4) @signature `Lw1/e$d;.h:(IIBB)V` @kind virtual;
  #L403334.  if v6 <= 0 then goto L403344;
  #L403338.  v3:= v2.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L40333c.  v0:= (`long`) v6 @kind i2l;
  #L40333e.  call `A`(v3, v5, v0) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L403344.  return @kind void;
}
procedure `void` `h`(`w1.e$d` v3 @kind this, `int` v4 , `int` v5 , `byte` v6 , `byte` v7 ) @signature `Lw1/e$d;.h:(IIBB)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4033ac.  call temp:= `d`() @signature `Lw1/e;.d:()Ljava/util/logging/Logger;` @kind static;
  #L4033b2.  v0:= temp @kind object;
  #L4033b4.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L4033b8.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L4033be.  v0:= temp;
  #L4033c0.  v1:= 0I;
  #L4033c2.  if v0 == 0 then goto L4033dc;
  #L4033c6.  call temp:= `d`() @signature `Lw1/e;.d:()Ljava/util/logging/Logger;` @kind static;
  #L4033cc.  v0:= temp @kind object;
  #L4033ce.  call temp:= `b`(v1, v4, v5, v6, v7) @signature `Lw1/e$b;.b:(ZIIBB)Ljava/lang/String;` @kind static;
  #L4033d4.  v2:= temp @kind object;
  #L4033d6.  call `fine`(v0, v2) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L4033dc.  v0:= v3.`w1.e$d.e` @type ^`int`;
  #L4033e0.  v2:= 1I;
  #L4033e2.  if v5 > v0 then goto L403448;
  #L4033e6.  v0:= -2147483648I;
  #L4033ea.  v0:= v0 ^& v4 @kind int;
  #L4033ec.  if v0 != 0 then goto L40342a;
  #L4033f0.  v0:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4033f4.  call `i`(v0, v5) @signature `Lw1/e;.i:(Lokio/d;I)V` @kind static;
  #L4033fa.  v5:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L4033fe.  v6:= v6 ^& 255;
  #L403402.  call temp:= `writeByte`(v5, v6) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L403408.  v5:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L40340c.  v6:= v7 ^& 255;
  #L403410.  call temp:= `writeByte`(v5, v6) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L403416.  v5:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L40341a.  v6:= 2147483647I;
  #L403420.  v4:= v4 ^& v6 @kind int;
  #L403422.  call temp:= `writeInt`(v5, v4) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L403428.  return @kind void;
  #L40342a.  v5:= new `java.lang.Object`[v2];
  #L40342e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L403434.  v4:= temp @kind object;
  #L403436.  v5[v1]:= v4 @kind object;
  #L40343a.  v4:= "reserved bit set: %s" @kind object;
  #L40343e.  call temp:= `h`(v4, v5) @signature `Lw1/e;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L403444.  v4:= temp @kind object;
  #L403446.  throw v4;
  #L403448.  v4:= 2I;
  #L40344a.  v4:= new `java.lang.Object`[v4];
  #L40344e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L403454.  v6:= temp @kind object;
  #L403456.  v4[v1]:= v6 @kind object;
  #L40345a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L403460.  v5:= temp @kind object;
  #L403462.  v4[v2]:= v5 @kind object;
  #L403466.  v5:= "FRAME_SIZE_ERROR length > %d: %d" @kind object;
  #L40346a.  call temp:= `h`(v5, v4) @signature `Lw1/e;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L403470.  v4:= temp @kind object;
  #L403472.  throw v4;
}
procedure `void` `i`(`w1.e$d` v3 @kind this, `int` v4 , `io.grpc.okhttp.internal.framed.ErrorCode` v5 @kind object) @signature `Lw1/e$d;.i:(ILio/grpc/okhttp/internal/framed/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L403638.  @monitorenter v3
  #L40363a.  v0:= v3.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L40363e.  if v0 != 0 then goto L403680;
  #L403642.  v0:= v5.`io.grpc.okhttp.internal.framed.ErrorCode.httpCode` @type ^`int`;
  #L403646.  v1:= -1I;
  #L403648.  if v0 == v1 then goto L403674;
  #L40364c.  v0:= 4I;
  #L40364e.  v1:= 3I;
  #L403650.  v2:= 0I;
  #L403652.  call `h`(v3, v4, v0, v1, v2) @signature `Lw1/e$d;.h:(IIBB)V` @kind virtual;
  #L403658.  v4:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L40365c.  v5:= v5.`io.grpc.okhttp.internal.framed.ErrorCode.httpCode` @type ^`int`;
  #L403660.  call temp:= `writeInt`(v4, v5) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L403666.  v4:= v3.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L40366a.  call `flush`(v4) @signature `Lokio/d;.flush:()V` @kind interface;
  #L403670.  @monitorexit v3
  #L403672.  return @kind void;
  #L403674.  v4:= new `java.lang.IllegalArgumentException`;
  #L403678.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40367e.  throw v4;
  #L403680.  v4:= new `java.io.IOException`;
  #L403684.  v5:= "closed" @kind object;
  #L403688.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40368e.  throw v4;
  #L403690.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L403692.  @monitorexit v3
  #L403694.  throw v4;
  catch `java.lang.Throwable` @[L40363a..L403670] goto L403690;
  catch `java.lang.Throwable` @[L403674..L403690] goto L403690;
}
procedure `void` `j`(`w1.e$d` v4 @kind this, `w1.g` v5 @kind object) @signature `Lw1/e$d;.j:(Lw1/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4036bc.  @monitorenter v4
  #L4036be.  v0:= v4.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L4036c2.  if v0 != 0 then goto L403736;
  #L4036c6.  call temp:= `f`(v5) @signature `Lw1/g;.f:()I` @kind virtual;
  #L4036cc.  v0:= temp;
  #L4036ce.  v0:= v0 * 6;
  #L4036d2.  v1:= 0I;
  #L4036d4.  v2:= 4I;
  #L4036d6.  call `h`(v4, v1, v0, v2, v1) @signature `Lw1/e$d;.h:(IIBB)V` @kind virtual;
  #L4036dc.  v0:= 10I;
  #L4036e0.  if v1 >= v0 then goto L403728;
  #L4036e4.  call temp:= `d`(v5, v1) @signature `Lw1/g;.d:(I)Z` @kind virtual;
  #L4036ea.  v0:= temp;
  #L4036ec.  if v0 != 0 then goto L4036f2;
  #L4036f0.  goto L403722;
  #L4036f2.  if v1 != v2 then goto L4036fa;
  #L4036f6.  v0:= 3I;
  #L4036f8.  goto L403706;
  #L4036fa.  v0:= 7I;
  #L4036fc.  if v1 != v0 then goto L403704;
  #L403700.  v0:= 4I;
  #L403702.  goto L403706;
  #L403704.  v0:= v1;
  #L403706.  v3:= v4.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L40370a.  call temp:= `writeShort`(v3, v0) @signature `Lokio/d;.writeShort:(I)Lokio/d;` @kind interface;
  #L403710.  v0:= v4.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L403714.  call temp:= `a`(v5, v1) @signature `Lw1/g;.a:(I)I` @kind virtual;
  #L40371a.  v3:= temp;
  #L40371c.  call temp:= `writeInt`(v0, v3) @signature `Lokio/d;.writeInt:(I)Lokio/d;` @kind interface;
  #L403722.  v1:= v1 + 1;
  #L403726.  goto L4036dc;
  #L403728.  v5:= v4.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L40372c.  call `flush`(v5) @signature `Lokio/d;.flush:()V` @kind interface;
  #L403732.  @monitorexit v4
  #L403734.  return @kind void;
  #L403736.  v5:= new `java.io.IOException`;
  #L40373a.  v0:= "closed" @kind object;
  #L40373e.  call `<init>`(v5, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403744.  throw v5;
  #L403746.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L403748.  @monitorexit v4
  #L40374a.  throw v5;
  catch `java.lang.Throwable` @[L4036be..L403732] goto L403746;
  catch `java.lang.Throwable` @[L403736..L403746] goto L403746;
}
procedure `void` `o`(`w1.e$d` v5 @kind this) @signature `Lw1/e$d;.o:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L403204.  @monitorenter v5
  #L403206.  v0:= v5.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L40320a.  if v0 != 0 then goto L403290;
  #L40320e.  v0:= v5.`w1.e$d.b` @type ^`boolean` @kind boolean;
  #L403212.  if v0 != 0 then goto L40321a;
  #L403216.  @monitorexit v5
  #L403218.  return @kind void;
  #L40321a.  call temp:= `d`() @signature `Lw1/e;.d:()Ljava/util/logging/Logger;` @kind static;
  #L403220.  v0:= temp @kind object;
  #L403222.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L403226.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L40322c.  v0:= temp;
  #L40322e.  if v0 == 0 then goto L403268;
  #L403232.  call temp:= `d`() @signature `Lw1/e;.d:()Ljava/util/logging/Logger;` @kind static;
  #L403238.  v0:= temp @kind object;
  #L40323a.  v1:= ">> CONNECTION %s" @kind object;
  #L40323e.  v2:= 1I;
  #L403240.  v2:= new `java.lang.Object`[v2];
  #L403244.  v3:= 0I;
  #L403246.  call temp:= `c`() @signature `Lw1/e;.c:()Lokio/ByteString;` @kind static;
  #L40324c.  v4:= temp @kind object;
  #L40324e.  call temp:= `i`(v4) @signature `Lokio/ByteString;.i:()Ljava/lang/String;` @kind virtual;
  #L403254.  v4:= temp @kind object;
  #L403256.  v2[v3]:= v4 @kind object;
  #L40325a.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L403260.  v1:= temp @kind object;
  #L403262.  call `fine`(v0, v1) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L403268.  v0:= v5.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L40326c.  call temp:= `c`() @signature `Lw1/e;.c:()Lokio/ByteString;` @kind static;
  #L403272.  v1:= temp @kind object;
  #L403274.  call temp:= `t`(v1) @signature `Lokio/ByteString;.t:()[B` @kind virtual;
  #L40327a.  v1:= temp @kind object;
  #L40327c.  call temp:= `write`(v0, v1) @signature `Lokio/d;.write:([B)Lokio/d;` @kind interface;
  #L403282.  v0:= v5.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L403286.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40328c.  @monitorexit v5
  #L40328e.  return @kind void;
  #L403290.  v0:= new `java.io.IOException`;
  #L403294.  v1:= "closed" @kind object;
  #L403298.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40329e.  throw v0;
  #L4032a0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4032a2.  @monitorexit v5
  #L4032a4.  throw v0;
  catch `java.lang.Throwable` @[L403206..L403212] goto L4032a0;
  catch `java.lang.Throwable` @[L40321a..L40328c] goto L4032a0;
  catch `java.lang.Throwable` @[L403290..L4032a0] goto L4032a0;
}
procedure `void` `p`(`w1.e$d` v1 @kind this, `boolean` v2 , `int` v3 , `okio.c` v4 @kind object, `int` v5 ) @signature `Lw1/e$d;.p:(ZILokio/c;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4032d4.  @monitorenter v1
  #L4032d6.  v0:= v1.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L4032da.  if v0 != 0 then goto L4032f2;
  #L4032de.  v0:= 0I;
  #L4032e0.  if v2 == 0 then goto L4032e8;
  #L4032e4.  v2:= 1I;
  #L4032e6.  v0:= (`byte`) v2 @kind i2b;
  #L4032e8.  call `g`(v1, v3, v0, v4, v5) @signature `Lw1/e$d;.g:(IBLokio/c;I)V` @kind virtual;
  #L4032ee.  @monitorexit v1
  #L4032f0.  return @kind void;
  #L4032f2.  v2:= new `java.io.IOException`;
  #L4032f6.  v3:= "closed" @kind object;
  #L4032fa.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403300.  throw v2;
  #L403302.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L403304.  @monitorexit v1
  #L403306.  throw v2;
  catch `java.lang.Throwable` @[L4032d6..L4032ee] goto L403302;
  catch `java.lang.Throwable` @[L4032f2..L403302] goto L403302;
}
procedure `void` `s`(`w1.e$d` v6 @kind this, `boolean` v7 , `int` v8 , `java.util.List` v9 @kind object) @signature `Lw1/e$d;.s:(ZILjava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40352c.  v0:= v6.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L403530.  if v0 != 0 then goto L403598;
  #L403534.  v0:= v6.`w1.e$d.d` @type ^`w1.d$b` @kind object;
  #L403538.  call `e`(v0, v9) @signature `Lw1/d$b;.e:(Ljava/util/List;)V` @kind virtual;
  #L40353e.  v9:= v6.`w1.e$d.c` @type ^`okio.c` @kind object;
  #L403542.  call temp:= `g0`(v9) @signature `Lokio/c;.g0:()J` @kind virtual;
  #L403548.  v0:= temp @kind wide;
  #L40354a.  v9:= v6.`w1.e$d.e` @type ^`int`;
  #L40354e.  v2:= (`long`) v9 @kind i2l;
  #L403550.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L403556.  v2:= temp @kind wide;
  #L403558.  v9:= (`int`) v2 @kind l2i;
  #L40355a.  v2:= (`long`) v9 @kind i2l;
  #L40355c.  v4:= lcmp(v0, v2);
  #L403560.  if v4 != 0 then goto L403568;
  #L403564.  v5:= 4I;
  #L403566.  goto L40356a;
  #L403568.  v5:= 0I;
  #L40356a.  if v7 == 0 then goto L403574;
  #L40356e.  v7:= v5 ^| 1;
  #L403572.  v5:= (`byte`) v7 @kind i2b;
  #L403574.  v7:= 1I;
  #L403576.  call `h`(v6, v8, v9, v7, v5) @signature `Lw1/e$d;.h:(IIBB)V` @kind virtual;
  #L40357c.  v7:= v6.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L403580.  v9:= v6.`w1.e$d.c` @type ^`okio.c` @kind object;
  #L403584.  call `A`(v7, v9, v2) @signature `Lokio/p;.A:(Lokio/c;J)V` @kind interface;
  #L40358a.  if v4 <= 0 then goto L403596;
  #L40358e.  v0:= v0 - v2 @kind long;
  #L403590.  call `K`(v6, v8, v0) @signature `Lw1/e$d;.K:(IJ)V` @kind direct;
  #L403596.  return @kind void;
  #L403598.  v7:= new `java.io.IOException`;
  #L40359c.  v8:= "closed" @kind object;
  #L4035a0.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4035a6.  throw v7;
}
procedure `void` `y`(`w1.e$d` v2 @kind this, `w1.g` v3 @kind object) @signature `Lw1/e$d;.y:(Lw1/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40315c.  @monitorenter v2
  #L40315e.  v0:= v2.`w1.e$d.f` @type ^`boolean` @kind boolean;
  #L403162.  if v0 != 0 then goto L403190;
  #L403166.  v0:= v2.`w1.e$d.e` @type ^`int`;
  #L40316a.  call temp:= `c`(v3, v0) @signature `Lw1/g;.c:(I)I` @kind virtual;
  #L403170.  v3:= temp;
  #L403172.  v2.`w1.e$d.e` @type ^`int` := v3;
  #L403176.  v3:= 4I;
  #L403178.  v0:= 1I;
  #L40317a.  v1:= 0I;
  #L40317c.  call `h`(v2, v1, v1, v3, v0) @signature `Lw1/e$d;.h:(IIBB)V` @kind virtual;
  #L403182.  v3:= v2.`w1.e$d.a` @type ^`okio.d` @kind object;
  #L403186.  call `flush`(v3) @signature `Lokio/d;.flush:()V` @kind interface;
  #L40318c.  @monitorexit v2
  #L40318e.  return @kind void;
  #L403190.  v3:= new `java.io.IOException`;
  #L403194.  v0:= "closed" @kind object;
  #L403198.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40319e.  throw v3;
  #L4031a0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4031a2.  @monitorexit v2
  #L4031a4.  throw v3;
  catch `java.lang.Throwable` @[L40315e..L40318c] goto L4031a0;
  catch `java.lang.Throwable` @[L403190..L4031a0] goto L4031a0;
}
