record `w1.f` @kind class @AccessFlag  {
  `w1.f$a` `w1.f.a` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@w1.f.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@w1.f.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `w1.f` `@@w1.f.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lw1/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L403d20.  v0:= 256I;
  #L403d24.  v1:= new `int`[v0];
  #L403d28.  goto L403d50;
  #L403d2e.  `@@w1.f.b` @type ^`int`[] := v1 @kind object;
  #L403d32.  v0:= new `byte`[v0];
  #L403d36.  goto L404158;
  #L403d3c.  `@@w1.f.c` @type ^`byte`[] := v0 @kind object;
  #L403d40.  v0:= new `w1.f`;
  #L403d44.  call `<init>`(v0) @signature `Lw1/f;.<init>:()V` @kind direct;
  #L403d4a.  `@@w1.f.d` @type ^`w1.f` := v0 @kind object;
  #L403d4e.  return @kind void;
  #L403d50.  v1:= (8184I, 8388568I, 268435426I, 268435427I, 268435428I, 268435429I, 268435430I, 268435431I, 268435432I, 16777194I, 1073741820I, 268435433I, 268435434I, 1073741821I, 268435435I, 268435436I, 268435437I, 268435438I, 268435439I, 268435440I, 268435441I, 268435442I, 1073741822I, 268435443I, 268435444I, 268435445I, 268435446I, 268435447I, 268435448I, 268435449I, 268435450I, 268435451I, 20I, 1016I, 1017I, 4090I, 8185I, 21I, 248I, 2042I, 1018I, 1019I, 249I, 2043I, 250I, 22I, 23I, 24I, 0I, 1I, 2I, 25I, 26I, 27I, 28I, 29I, 30I, 31I, 92I, 251I, 32764I, 32I, 4091I, 1020I, 8186I, 33I, 93I, 94I, 95I, 96I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 252I, 115I, 253I, 8187I, 524272I, 8188I, 16380I, 34I, 32765I, 3I, 35I, 4I, 36I, 5I, 37I, 38I, 39I, 6I, 116I, 117I, 40I, 41I, 42I, 7I, 43I, 118I, 44I, 8I, 9I, 45I, 119I, 120I, 121I, 122I, 123I, 32766I, 2044I, 16381I, 8189I, 268435452I, 1048550I, 4194258I, 1048551I, 1048552I, 4194259I, 4194260I, 4194261I, 8388569I, 4194262I, 8388570I, 8388571I, 8388572I, 8388573I, 8388574I, 16777195I, 8388575I, 16777196I, 16777197I, 4194263I, 8388576I, 16777198I, 8388577I, 8388578I, 8388579I, 8388580I, 2097116I, 4194264I, 8388581I, 4194265I, 8388582I, 8388583I, 16777199I, 4194266I, 2097117I, 1048553I, 4194267I, 4194268I, 8388584I, 8388585I, 2097118I, 8388586I, 4194269I, 4194270I, 16777200I, 2097119I, 4194271I, 8388587I, 8388588I, 2097120I, 2097121I, 4194272I, 2097122I, 8388589I, 4194273I, 8388590I, 8388591I, 1048554I, 4194274I, 4194275I, 4194276I, 8388592I, 4194277I, 4194278I, 8388593I, 67108832I, 67108833I, 1048555I, 524273I, 4194279I, 8388594I, 4194280I, 33554412I, 67108834I, 67108835I, 67108836I, 134217694I, 134217695I, 67108837I, 16777201I, 33554413I, 524274I, 2097123I, 67108838I, 134217696I, 134217697I, 67108839I, 134217698I, 16777202I, 2097124I, 2097125I, 67108840I, 67108841I, 268435453I, 134217699I, 134217700I, 134217701I, 1048556I, 16777203I, 1048557I, 2097126I, 4194281I, 2097127I, 2097128I, 8388595I, 4194282I, 4194283I, 33554414I, 33554415I, 16777204I, 16777205I, 67108842I, 8388596I, 67108843I, 134217702I, 67108844I, 67108845I, 134217703I, 134217704I, 134217705I, 134217706I, 134217707I, 268435454I, 134217708I, 134217709I, 134217710I, 134217711I, 134217712I, 67108846I) @kind object;
  #L404157.  goto L403d2e;
  #L404158.  v0:= (13I, 23I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 24I, 30I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 6I, 10I, 10I, 12I, 13I, 6I, 8I, 11I, 10I, 10I, 8I, 11I, 8I, 6I, 6I, 6I, 5I, 5I, 5I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 7I, 8I, 15I, 6I, 12I, 10I, 13I, 6I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 8I, 7I, 8I, 13I, 19I, 13I, 14I, 6I, 15I, 5I, 6I, 5I, 6I, 5I, 6I, 6I, 6I, 5I, 7I, 7I, 6I, 6I, 6I, 5I, 6I, 7I, 6I, 5I, 5I, 6I, 7I, 7I, 7I, 7I, 7I, 15I, 11I, 14I, 13I, 28I, 20I, 22I, 20I, 20I, 22I, 22I, 22I, 23I, 22I, 23I, 23I, 23I, 23I, 23I, 24I, 23I, 24I, 24I, 22I, 23I, 24I, 23I, 23I, 23I, 23I, 21I, 22I, 23I, 22I, 23I, 23I, 24I, 22I, 21I, 20I, 22I, 22I, 23I, 23I, 21I, 23I, 22I, 22I, 24I, 21I, 22I, 23I, 23I, 21I, 21I, 22I, 21I, 23I, 22I, 23I, 23I, 20I, 22I, 22I, 22I, 23I, 22I, 22I, 23I, 26I, 26I, 20I, 19I, 22I, 23I, 22I, 25I, 26I, 26I, 26I, 27I, 27I, 26I, 24I, 25I, 19I, 21I, 26I, 27I, 27I, 26I, 27I, 24I, 21I, 21I, 26I, 26I, 28I, 27I, 27I, 27I, 20I, 24I, 20I, 21I, 22I, 21I, 21I, 23I, 22I, 22I, 25I, 25I, 24I, 24I, 26I, 23I, 26I, 27I, 26I, 26I, 27I, 27I, 27I, 27I, 27I, 28I, 27I, 27I, 27I, 27I, 27I, 26I) @kind object;
  #L40425f.  goto L403d3c;
}
procedure `void` `<init>`(`w1.f` v1 @kind this) @signature `Lw1/f;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L404270.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L404276.  v0:= new `w1.f$a`;
  #L40427a.  call `<init>`(v0) @signature `Lw1/f$a;.<init>:()V` @kind direct;
  #L404280.  v1.`w1.f.a` @type ^`w1.f$a` := v0 @kind object;
  #L404284.  call `b`(v1) @signature `Lw1/f;.b:()V` @kind direct;
  #L40428a.  return @kind void;
}
procedure `void` `a`(`w1.f` v4 @kind this, `int` v5 , `int` v6 , `byte` v7 ) @signature `Lw1/f;.a:(IIB)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40429c.  v0:= new `w1.f$a`;
  #L4042a0.  call `<init>`(v0, v5, v7) @signature `Lw1/f$a;.<init>:(II)V` @kind direct;
  #L4042a6.  v5:= v4.`w1.f.a` @type ^`w1.f$a` @kind object;
  #L4042aa.  v1:= 8I;
  #L4042ae.  if v7 <= v1 then goto L404310;
  #L4042b2.  v7:= v7 + -8;
  #L4042b6.  v7:= (`byte`) v7 @kind i2b;
  #L4042b8.  v1:= v6 ^>> v7 @kind int;
  #L4042bc.  v1:= v1 ^& 255;
  #L4042c0.  call temp:= `a`(v5) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @kind static;
  #L4042c6.  v2:= temp @kind object;
  #L4042c8.  if v2 == 0 then goto L404300;
  #L4042cc.  call temp:= `a`(v5) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @kind static;
  #L4042d2.  v2:= temp @kind object;
  #L4042d4.  v2:= v2[v1] @kind object;
  #L4042d8.  if v2 != 0 then goto L4042f2;
  #L4042dc.  call temp:= `a`(v5) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @kind static;
  #L4042e2.  v2:= temp @kind object;
  #L4042e4.  v3:= new `w1.f$a`;
  #L4042e8.  call `<init>`(v3) @signature `Lw1/f$a;.<init>:()V` @kind direct;
  #L4042ee.  v2[v1]:= v3 @kind object;
  #L4042f2.  call temp:= `a`(v5) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @kind static;
  #L4042f8.  v5:= temp @kind object;
  #L4042fa.  v5:= v5[v1] @kind object;
  #L4042fe.  goto L4042aa;
  #L404300.  v5:= new `java.lang.IllegalStateException`;
  #L404304.  v6:= "invalid dictionary: prefix not unique" @kind object;
  #L404308.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40430e.  throw v5;
  #L404310.  v1:= v1 - v7 @kind int;
  #L404312.  v6:= v6 ^< v1 @kind int;
  #L404314.  v6:= v6 ^& 255;
  #L404318.  v7:= 1I;
  #L40431a.  v7:= v7 ^< v1 @kind int;
  #L40431c.  v1:= v6;
  #L40431e.  v2:= v6 + v7 @kind int;
  #L404322.  if v1 >= v2 then goto L404338;
  #L404326.  call temp:= `a`(v5) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @kind static;
  #L40432c.  v2:= temp @kind object;
  #L40432e.  v2[v1]:= v0 @kind object;
  #L404332.  v1:= v1 + 1;
  #L404336.  goto L40431e;
  #L404338.  return @kind void;
}
procedure `void` `b`(`w1.f` v3 @kind this) @signature `Lw1/f;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L40434c.  v0:= 0I;
  #L40434e.  v1:= `@@w1.f.c` @type ^`byte`[] @kind object;
  #L404352.  v2:= length @variable v1;
  #L404354.  if v0 >= v2 then goto L404370;
  #L404358.  v2:= `@@w1.f.b` @type ^`int`[] @kind object;
  #L40435c.  v2:= v2[v0];
  #L404360.  v1:= v1[v0] @kind byte;
  #L404364.  call `a`(v3, v0, v2, v1) @signature `Lw1/f;.a:(IIB)V` @kind direct;
  #L40436a.  v0:= v0 + 1;
  #L40436e.  goto L40434e;
  #L404370.  return @kind void;
}
procedure `w1.f` `f`() @signature `Lw1/f;.f:()Lw1/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L404404.  v0:= `@@w1.f.d` @type ^`w1.f` @kind object;
  #L404408.  return v0 @kind object;
}
procedure `byte`[] `c`(`w1.f` v6 @kind this, `byte`[] v7 @kind object) @signature `Lw1/f;.c:([B)[B` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L403bec.  v0:= new `java.io.ByteArrayOutputStream`;
  #L403bf0.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L403bf6.  v1:= v6.`w1.f.a` @type ^`w1.f$a` @kind object;
  #L403bfa.  v2:= 0I;
  #L403bfc.  v3:= 0I;
  #L403bfe.  v4:= 0I;
  #L403c00.  v5:= length @variable v7;
  #L403c02.  if v2 >= v5 then goto L403c6e;
  #L403c06.  v5:= v7[v2] @kind byte;
  #L403c0a.  v5:= v5 ^& 255;
  #L403c0e.  v3:= v3 ^< 8;
  #L403c12.  v3:= v3 ^| v5 @kind int;
  #L403c14.  v4:= v4 + 8;
  #L403c18.  v5:= 8I;
  #L403c1c.  if v4 < v5 then goto L403c68;
  #L403c20.  v5:= v4 + -8;
  #L403c24.  v5:= v3 ^>> v5 @kind int;
  #L403c28.  v5:= v5 ^& 255;
  #L403c2c.  call temp:= `a`(v1) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @kind static;
  #L403c32.  v1:= temp @kind object;
  #L403c34.  v1:= v1[v5] @kind object;
  #L403c38.  call temp:= `a`(v1) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @kind static;
  #L403c3e.  v5:= temp @kind object;
  #L403c40.  if v5 != 0 then goto L403c62;
  #L403c44.  call temp:= `b`(v1) @signature `Lw1/f$a;.b:(Lw1/f$a;)I` @kind static;
  #L403c4a.  v5:= temp;
  #L403c4c.  call `write`(v0, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L403c52.  call temp:= `c`(v1) @signature `Lw1/f$a;.c:(Lw1/f$a;)I` @kind static;
  #L403c58.  v1:= temp;
  #L403c5a.  v4:= v4 - v1 @kind int;
  #L403c5c.  v1:= v6.`w1.f.a` @type ^`w1.f$a` @kind object;
  #L403c60.  goto L403c18;
  #L403c62.  v4:= v4 + -8;
  #L403c66.  goto L403c18;
  #L403c68.  v2:= v2 + 1;
  #L403c6c.  goto L403c00;
  #L403c6e.  if v4 <= 0 then goto L403cc2;
  #L403c72.  v7:= v4 - 8;
  #L403c76.  v7:= v3 ^< v7 @kind int;
  #L403c7a.  v7:= v7 ^& 255;
  #L403c7e.  call temp:= `a`(v1) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @kind static;
  #L403c84.  v1:= temp @kind object;
  #L403c86.  v7:= v1[v7] @kind object;
  #L403c8a.  call temp:= `a`(v7) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @kind static;
  #L403c90.  v1:= temp @kind object;
  #L403c92.  if v1 != 0 then goto L403cc2;
  #L403c96.  call temp:= `c`(v7) @signature `Lw1/f$a;.c:(Lw1/f$a;)I` @kind static;
  #L403c9c.  v1:= temp;
  #L403c9e.  if v1 <= v4 then goto L403ca4;
  #L403ca2.  goto L403cc2;
  #L403ca4.  call temp:= `b`(v7) @signature `Lw1/f$a;.b:(Lw1/f$a;)I` @kind static;
  #L403caa.  v1:= temp;
  #L403cac.  call `write`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L403cb2.  call temp:= `c`(v7) @signature `Lw1/f$a;.c:(Lw1/f$a;)I` @kind static;
  #L403cb8.  v7:= temp;
  #L403cba.  v4:= v4 - v7 @kind int;
  #L403cbc.  v1:= v6.`w1.f.a` @type ^`w1.f$a` @kind object;
  #L403cc0.  goto L403c6e;
  #L403cc2.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L403cc8.  v7:= temp @kind object;
  #L403cca.  return v7 @kind object;
}
procedure `void` `d`(`w1.f` v7 @kind this, `byte`[] v8 @kind object, `java.io.OutputStream` v9 @kind object) @signature `Lw1/f;.d:([BLjava/io/OutputStream;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L404384.  v0:= 0I;
  #L404386.  v1:= 0L;
  #L40438a.  v2:= v1 @kind wide;
  #L40438c.  v1:= 0I;
  #L40438e.  v4:= length @variable v8;
  #L404390.  v5:= 255I;
  #L404394.  if v0 >= v4 then goto L4043d6;
  #L404398.  v4:= v8[v0] @kind byte;
  #L40439c.  v4:= v4 ^& v5 @kind int;
  #L40439e.  v5:= `@@w1.f.b` @type ^`int`[] @kind object;
  #L4043a2.  v5:= v5[v4];
  #L4043a6.  v6:= `@@w1.f.c` @type ^`byte`[] @kind object;
  #L4043aa.  v4:= v6[v4] @kind byte;
  #L4043ae.  v2:= v2 ^< v4 @kind long;
  #L4043b0.  v5:= (`long`) v5 @kind i2l;
  #L4043b2.  v2:= v2 ^| v5 @kind long;
  #L4043b4.  v1:= v1 + v4 @kind int;
  #L4043b6.  v4:= 8I;
  #L4043ba.  if v1 < v4 then goto L4043d0;
  #L4043be.  v1:= v1 + -8;
  #L4043c2.  v4:= v2 ^> v1 @kind long;
  #L4043c6.  v5:= (`int`) v4 @kind l2i;
  #L4043c8.  call `write`(v9, v5) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L4043ce.  goto L4043b6;
  #L4043d0.  v0:= v0 + 1;
  #L4043d4.  goto L40438e;
  #L4043d6.  if v1 <= 0 then goto L4043f0;
  #L4043da.  v8:= v1 - 8;
  #L4043de.  v2:= v2 ^< v8 @kind long;
  #L4043e0.  v8:= v5 ^>> v1 @kind int;
  #L4043e4.  v0:= (`long`) v8 @kind i2l;
  #L4043e6.  v0:= v0 ^| v2 @kind long;
  #L4043e8.  v8:= (`int`) v0 @kind l2i;
  #L4043ea.  call `write`(v9, v8) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L4043f0.  return @kind void;
}
procedure `int` `e`(`w1.f` v5 @kind this, `byte`[] v6 @kind object) @signature `Lw1/f;.e:([B)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L403cdc.  v0:= 0L;
  #L403ce0.  v2:= 0I;
  #L403ce2.  v3:= length @variable v6;
  #L403ce4.  if v2 >= v3 then goto L403d02;
  #L403ce8.  v3:= v6[v2] @kind byte;
  #L403cec.  v3:= v3 ^& 255;
  #L403cf0.  v4:= `@@w1.f.c` @type ^`byte`[] @kind object;
  #L403cf4.  v3:= v4[v3] @kind byte;
  #L403cf8.  v3:= (`long`) v3 @kind i2l;
  #L403cfa.  v0:= v0 + v3 @kind long;
  #L403cfc.  v2:= v2 + 1;
  #L403d00.  goto L403ce2;
  #L403d02.  v2:= 7L;
  #L403d06.  v0:= v0 + v2 @kind long;
  #L403d08.  v6:= 3I;
  #L403d0a.  v0:= v0 ^> v6 @kind long;
  #L403d0c.  v6:= (`int`) v0 @kind l2i;
  #L403d0e.  return v6;
}
