record `w1.g` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `w1.g.a` @AccessFlag PRIVATE;
  `int` `w1.g.b` @AccessFlag PRIVATE;
  `int` `w1.g.c` @AccessFlag PRIVATE;
  `int`[] `w1.g.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`w1.g` v1 @kind this) @signature `Lw1/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4044d4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4044da.  v0:= 10I;
  #L4044de.  v0:= new `int`[v0];
  #L4044e2.  v1.`w1.g.d` @type ^`int`[] := v0 @kind object;
  #L4044e6.  return @kind void;
}
procedure `int` `a`(`w1.g` v1 @kind this, `int` v2 ) @signature `Lw1/g;.a:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404444.  v0:= v1.`w1.g.d` @type ^`int`[] @kind object;
  #L404448.  v2:= v0[v2];
  #L40444c.  return v2;
}
procedure `int` `b`(`w1.g` v2 @kind this) @signature `Lw1/g;.b:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L404460.  v0:= v2.`w1.g.a` @type ^`int`;
  #L404464.  v0:= v0 ^& 2;
  #L404468.  if v0 == 0 then goto L404478;
  #L40446c.  v0:= v2.`w1.g.d` @type ^`int`[] @kind object;
  #L404470.  v1:= 1I;
  #L404472.  v0:= v0[v1];
  #L404476.  goto L40447a;
  #L404478.  v0:= -1I;
  #L40447a.  return v0;
}
procedure `int` `c`(`w1.g` v1 @kind this, `int` v2 ) @signature `Lw1/g;.c:(I)I` @AccessFlag  {
    temp;
    v0;

  #L40448c.  v0:= v1.`w1.g.a` @type ^`int`;
  #L404490.  v0:= v0 ^& 32;
  #L404494.  if v0 == 0 then goto L4044a2;
  #L404498.  v2:= v1.`w1.g.d` @type ^`int`[] @kind object;
  #L40449c.  v0:= 5I;
  #L40449e.  v2:= v2[v0];
  #L4044a2.  return v2;
}
procedure `boolean` `d`(`w1.g` v2 @kind this, `int` v3 ) @signature `Lw1/g;.d:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40441c.  v0:= 1I;
  #L40441e.  v3:= v0 ^< v3 @kind int;
  #L404422.  v1:= v2.`w1.g.a` @type ^`int`;
  #L404426.  v3:= v3 ^& v1 @kind int;
  #L404428.  if v3 == 0 then goto L40442e;
  #L40442c.  goto L404430;
  #L40442e.  v0:= 0I;
  #L404430.  return v0;
}
procedure `w1.g` `e`(`w1.g` v4 @kind this, `int` v5 , `int` v6 , `int` v7 ) @signature `Lw1/g;.e:(III)Lw1/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4044f8.  v0:= v4.`w1.g.d` @type ^`int`[] @kind object;
  #L4044fc.  v1:= length @variable v0;
  #L4044fe.  if v5 < v1 then goto L404504;
  #L404502.  return v4 @kind object;
  #L404504.  v1:= 1I;
  #L404506.  v1:= v1 ^< v5 @kind int;
  #L404508.  v2:= v4.`w1.g.a` @type ^`int`;
  #L40450c.  v2:= v2 ^| v1 @kind int;
  #L40450e.  v4.`w1.g.a` @type ^`int` := v2;
  #L404512.  v2:= v6 ^& 1;
  #L404516.  if v2 == 0 then goto L404526;
  #L40451a.  v2:= v4.`w1.g.b` @type ^`int`;
  #L40451e.  v2:= v2 ^| v1 @kind int;
  #L404520.  v4.`w1.g.b` @type ^`int` := v2;
  #L404524.  goto L404532;
  #L404526.  v2:= v4.`w1.g.b` @type ^`int`;
  #L40452a.  v3:= ~v1 @kind int;
  #L40452c.  v2:= v2 ^& v3 @kind int;
  #L40452e.  v4.`w1.g.b` @type ^`int` := v2;
  #L404532.  v6:= v6 ^& 2;
  #L404536.  if v6 == 0 then goto L404546;
  #L40453a.  v6:= v4.`w1.g.c` @type ^`int`;
  #L40453e.  v6:= v6 ^| v1 @kind int;
  #L404540.  v4.`w1.g.c` @type ^`int` := v6;
  #L404544.  goto L404552;
  #L404546.  v6:= v4.`w1.g.c` @type ^`int`;
  #L40454a.  v1:= ~v1 @kind int;
  #L40454c.  v6:= v6 ^& v1 @kind int;
  #L40454e.  v4.`w1.g.c` @type ^`int` := v6;
  #L404552.  v0[v5]:= v7;
  #L404556.  return v4 @kind object;
}
procedure `int` `f`(`w1.g` v1 @kind this) @signature `Lw1/g;.f:()I` @AccessFlag  {
    temp;
    v0;

  #L4044b4.  v0:= v1.`w1.g.a` @type ^`int`;
  #L4044b8.  call temp:= `bitCount`(v0) @signature `Ljava/lang/Integer;.bitCount:(I)I` @kind static;
  #L4044be.  v0:= temp;
  #L4044c0.  return v0;
}
