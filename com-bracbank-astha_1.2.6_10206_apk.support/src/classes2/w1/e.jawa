record `w1.e` @kind class @AccessFlag PUBLIC_FINAL extends `w1.h` @kind interface {
}
global `java.util.logging.Logger` `@@w1.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@w1.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lw1/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L403a60.  v0:= constclass @type ^`w1.e$b` @kind object;
  #L403a64.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L403a6a.  v0:= temp @kind object;
  #L403a6c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L403a72.  v0:= temp @kind object;
  #L403a74.  `@@w1.e.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L403a78.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L403a7c.  call temp:= `g`(v0) @signature `Lokio/ByteString;.g:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L403a82.  v0:= temp @kind object;
  #L403a84.  `@@w1.e.b` @type ^`okio.ByteString` := v0 @kind object;
  #L403a88.  return @kind void;
}
procedure `void` `<init>`(`w1.e` v0 @kind this) @signature `Lw1/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L403a9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L403aa2.  return @kind void;
}
procedure `okio.ByteString` `c`() @signature `Lw1/e;.c:()Lokio/ByteString;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L403a48.  v0:= `@@w1.e.b` @type ^`okio.ByteString` @kind object;
  #L403a4c.  return v0 @kind object;
}
procedure `java.util.logging.Logger` `d`() @signature `Lw1/e;.d:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L403a30.  v0:= `@@w1.e.a` @type ^`java.util.logging.Logger` @kind object;
  #L403a34.  return v0 @kind object;
}
procedure `java.io.IOException` `e`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lw1/e;.e:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4039a8.  call temp:= `k`(v0, v1) @signature `Lw1/e;.k:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L4039ae.  v0:= temp @kind object;
  #L4039b0.  return v0 @kind object;
}
procedure `int` `f`(`okio.e` v0 @kind object) @signature `Lw1/e;.f:(Lokio/e;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4038d4.  call temp:= `m`(v0) @signature `Lw1/e;.m:(Lokio/e;)I` @kind static;
  #L4038da.  v0:= temp;
  #L4038dc.  return v0;
}
procedure `int` `g`(`int` v0 , `byte` v1 , `short` v2 ) @signature `Lw1/e;.g:(IBS)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4038f0.  call temp:= `l`(v0, v1, v2) @signature `Lw1/e;.l:(IBS)I` @kind static;
  #L4038f6.  v0:= temp;
  #L4038f8.  return v0;
}
procedure `java.lang.IllegalArgumentException` `h`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lw1/e;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4039ec.  call temp:= `j`(v0, v1) @signature `Lw1/e;.j:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L4039f2.  v0:= temp @kind object;
  #L4039f4.  return v0 @kind object;
}
procedure `void` `i`(`okio.d` v0 @kind object, `int` v1 ) @signature `Lw1/e;.i:(Lokio/d;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403ab4.  call `n`(v0, v1) @signature `Lw1/e;.n:(Lokio/d;I)V` @kind static;
  #L403aba.  return @kind void;
}
procedure `java.lang.IllegalArgumentException` `j`(`java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lw1/e;.j:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L403a08.  v0:= new `java.lang.IllegalArgumentException`;
  #L403a0c.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L403a10.  call temp:= `format`(v1, v2, v3) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L403a16.  v2:= temp @kind object;
  #L403a18.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403a1e.  throw v0;
}
procedure `java.io.IOException` `k`(`java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lw1/e;.k:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4039c4.  v0:= new `java.io.IOException`;
  #L4039c8.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L4039cc.  call temp:= `format`(v1, v2, v3) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4039d2.  v2:= temp @kind object;
  #L4039d4.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4039da.  throw v0;
}
procedure `int` `l`(`int` v1 , `byte` v2 , `short` v3 ) @signature `Lw1/e;.l:(IBS)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L40390c.  v2:= v2 ^& 8;
  #L403910.  if v2 == 0 then goto L403918;
  #L403914.  v1:= v1 + -1;
  #L403918.  if v3 > v1 then goto L403922;
  #L40391c.  v1:= v1 - v3 @kind int;
  #L40391e.  v1:= (`short`) v1 @kind i2s;
  #L403920.  return v1;
  #L403922.  v2:= 2I;
  #L403924.  v2:= new `java.lang.Object`[v2];
  #L403928.  v0:= 0I;
  #L40392a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L403930.  v3:= temp @kind object;
  #L403932.  v2[v0]:= v3 @kind object;
  #L403936.  v3:= 1I;
  #L403938.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40393e.  v1:= temp @kind object;
  #L403940.  v2[v3]:= v1 @kind object;
  #L403944.  v1:= "PROTOCOL_ERROR padding %s > remaining length %s" @kind object;
  #L403948.  call temp:= `k`(v1, v2) @signature `Lw1/e;.k:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L40394e.  v1:= temp @kind object;
  #L403950.  throw v1;
}
procedure `int` `m`(`okio.e` v2 @kind object) @signature `Lw1/e;.m:(Lokio/e;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L403964.  call temp:= `readByte`(v2) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L40396a.  v0:= temp;
  #L40396c.  v0:= v0 ^& 255;
  #L403970.  v0:= v0 ^< 16;
  #L403974.  call temp:= `readByte`(v2) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L40397a.  v1:= temp;
  #L40397c.  v1:= v1 ^& 255;
  #L403980.  v1:= v1 ^< 8;
  #L403984.  v0:= v0 ^| v1 @kind int;
  #L403986.  call temp:= `readByte`(v2) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L40398c.  v2:= temp;
  #L40398e.  v2:= v2 ^& 255;
  #L403992.  v2:= v2 ^| v0 @kind int;
  #L403994.  return v2;
}
procedure `void` `n`(`okio.d` v1 @kind object, `int` v2 ) @signature `Lw1/e;.n:(Lokio/d;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L403acc.  v0:= v2 ^>> 16;
  #L403ad0.  v0:= v0 ^& 255;
  #L403ad4.  call temp:= `writeByte`(v1, v0) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L403ada.  v0:= v2 ^>> 8;
  #L403ade.  v0:= v0 ^& 255;
  #L403ae2.  call temp:= `writeByte`(v1, v0) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L403ae8.  v2:= v2 ^& 255;
  #L403aec.  call temp:= `writeByte`(v1, v2) @signature `Lokio/d;.writeByte:(I)Lokio/d;` @kind interface;
  #L403af2.  return @kind void;
}
procedure `w1.a` `a`(`w1.e` v2 @kind this, `okio.e` v3 @kind object, `boolean` v4 ) @signature `Lw1/e;.a:(Lokio/e;Z)Lw1/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L403b04.  v0:= new `w1.e$c`;
  #L403b08.  v1:= 4096I;
  #L403b0c.  call `<init>`(v0, v3, v1, v4) @signature `Lw1/e$c;.<init>:(Lokio/e;IZ)V` @kind direct;
  #L403b12.  return v0 @kind object;
}
procedure `w1.b` `b`(`w1.e` v1 @kind this, `okio.d` v2 @kind object, `boolean` v3 ) @signature `Lw1/e;.b:(Lokio/d;Z)Lw1/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403b24.  v0:= new `w1.e$d`;
  #L403b28.  call `<init>`(v0, v2, v3) @signature `Lw1/e$d;.<init>:(Lokio/d;Z)V` @kind direct;
  #L403b2e.  return v0 @kind object;
}
