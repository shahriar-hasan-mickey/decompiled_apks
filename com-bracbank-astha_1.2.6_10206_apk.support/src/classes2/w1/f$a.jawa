record `w1.f$a` @kind class @AccessFlag FINAL {
  `w1.f$a`[] `w1.f$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `w1.f$a.b` @AccessFlag PRIVATE_FINAL;
  `int` `w1.f$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`w1.f$a` v1 @kind this) @signature `Lw1/f$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L403b70.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L403b76.  v0:= 256I;
  #L403b7a.  v0:= new `w1.f$a`[v0];
  #L403b7e.  v1.`w1.f$a.a` @type ^`w1.f$a`[] := v0 @kind object;
  #L403b82.  v0:= 0I;
  #L403b84.  v1.`w1.f$a.b` @type ^`int` := v0;
  #L403b88.  v1.`w1.f$a.c` @type ^`int` := v0;
  #L403b8c.  return @kind void;
}
procedure `void` `<init>`(`w1.f$a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lw1/f$a;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L403ba0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L403ba6.  v0:= 0I;
  #L403ba8.  v1.`w1.f$a.a` @type ^`w1.f$a`[] := v0 @kind object;
  #L403bac.  v1.`w1.f$a.b` @type ^`int` := v2;
  #L403bb0.  v2:= v3 ^& 7;
  #L403bb4.  if v2 != 0 then goto L403bbc;
  #L403bb8.  v2:= 8I;
  #L403bbc.  v1.`w1.f$a.c` @type ^`int` := v2;
  #L403bc0.  return @kind void;
}
procedure `w1.f$a`[] `a`(`w1.f$a` v0 @kind object) @signature `Lw1/f$a;.a:(Lw1/f$a;)[Lw1/f$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403bd4.  v0:= v0.`w1.f$a.a` @type ^`w1.f$a`[] @kind object;
  #L403bd8.  return v0 @kind object;
}
procedure `int` `b`(`w1.f$a` v0 @kind object) @signature `Lw1/f$a;.b:(Lw1/f$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403b40.  v0:= v0.`w1.f$a.b` @type ^`int`;
  #L403b44.  return v0;
}
procedure `int` `c`(`w1.f$a` v0 @kind object) @signature `Lw1/f$a;.c:(Lw1/f$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403b58.  v0:= v0.`w1.f$a.c` @type ^`int`;
  #L403b5c.  return v0;
}
