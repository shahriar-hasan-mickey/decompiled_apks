record `x1.a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `x1.a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `x1.a.b` @AccessFlag PRIVATE_FINAL;
  `int` `x1.a.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `x1.a.d` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@x1.a.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx1/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L406874.  v0:= 16I;
  #L406878.  v0:= new `char`[v0];
  #L40687c.  goto L406888;
  #L406882.  `@@x1.a.e` @type ^`char`[] := v0 @kind object;
  #L406886.  return @kind void;
  #L406888.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L4068af.  goto L406882;
}
procedure `void` `<init>`(`x1.a` v1 @kind this, `x1.a$b` v2 @kind object) @signature `Lx1/a;.<init>:(Lx1/a$b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L4068c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4068c6.  v0:= v2.`x1.a$b.a` @type ^`java.lang.String` @kind object;
  #L4068ca.  v1.`x1.a.a` @type ^`java.lang.String` := v0 @kind object;
  #L4068ce.  v0:= v2.`x1.a$b.b` @type ^`java.lang.String` @kind object;
  #L4068d2.  v1.`x1.a.b` @type ^`java.lang.String` := v0 @kind object;
  #L4068d6.  call temp:= `g`(v2) @signature `Lx1/a$b;.g:()I` @kind virtual;
  #L4068dc.  v0:= temp;
  #L4068de.  v1.`x1.a.c` @type ^`int` := v0;
  #L4068e2.  call temp:= `toString`(v2) @signature `Lx1/a$b;.toString:()Ljava/lang/String;` @kind virtual;
  #L4068e8.  v2:= temp @kind object;
  #L4068ea.  v1.`x1.a.d` @type ^`java.lang.String` := v2 @kind object;
  #L4068ee.  return @kind void;
}
procedure `void` `<init>`(`x1.a` v0 @kind this, `x1.a$b` v1 @kind object, `x1.a$a` v2 @kind object) @signature `Lx1/a;.<init>:(Lx1/a$b;Lx1/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L406900.  call `<init>`(v0, v1) @signature `Lx1/a;.<init>:(Lx1/a$b;)V` @kind direct;
  #L406906.  return @kind void;
}
procedure `int` `a`(`char` v2 ) @signature `Lx1/a;.a:(C)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L406714.  v0:= 48I;
  #L406718.  if v2 < v0 then goto L406728;
  #L40671c.  v1:= 57I;
  #L406720.  if v2 > v1 then goto L406728;
  #L406724.  v2:= v2 - v0 @kind int;
  #L406726.  return v2;
  #L406728.  v0:= 97I;
  #L40672c.  if v2 < v0 then goto L406740;
  #L406730.  v1:= 102I;
  #L406734.  if v2 > v1 then goto L406740;
  #L406738.  v2:= v2 - v0 @kind int;
  #L40673a.  v2:= v2 + 10;
  #L40673e.  return v2;
  #L406740.  v0:= 65I;
  #L406744.  if v2 < v0 then goto L406752;
  #L406748.  v1:= 70I;
  #L40674c.  if v2 > v1 then goto L406752;
  #L406750.  goto L406738;
  #L406752.  v2:= -1I;
  #L406754.  return v2;
}
procedure `int` `b`(`java.lang.String` v1 @kind object) @signature `Lx1/a;.b:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L406768.  v0:= "http" @kind object;
  #L40676c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L406772.  v0:= temp;
  #L406774.  if v0 == 0 then goto L40677e;
  #L406778.  v1:= 80I;
  #L40677c.  return v1;
  #L40677e.  v0:= "https" @kind object;
  #L406782.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L406788.  v1:= temp;
  #L40678a.  if v1 == 0 then goto L406794;
  #L40678e.  v1:= 443I;
  #L406792.  return v1;
  #L406794.  v1:= -1I;
  #L406796.  return v1;
}
procedure `java.lang.String` `d`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lx1/a;.d:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4067f8.  v0:= v4;
  #L4067fa.  if v0 >= v5 then goto L406842;
  #L4067fe.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L406804.  v1:= temp;
  #L406806.  v2:= 37I;
  #L40680a.  if v1 == v2 then goto L406822;
  #L40680e.  v2:= 43I;
  #L406812.  if v1 != v2 then goto L40681c;
  #L406816.  if v6 == 0 then goto L40681c;
  #L40681a.  goto L406822;
  #L40681c.  v0:= v0 + 1;
  #L406820.  goto L4067fa;
  #L406822.  v1:= new `okio.c`;
  #L406826.  call `<init>`(v1) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L40682c.  call temp:= `v0`(v1, v3, v4, v0) @signature `Lokio/c;.v0:(Ljava/lang/String;II)Lokio/c;` @kind virtual;
  #L406832.  call `e`(v1, v3, v0, v5, v6) @signature `Lx1/a;.e:(Lokio/c;Ljava/lang/String;IIZ)V` @kind static;
  #L406838.  call temp:= `d0`(v1) @signature `Lokio/c;.d0:()Ljava/lang/String;` @kind virtual;
  #L40683e.  v3:= temp @kind object;
  #L406840.  return v3 @kind object;
  #L406842.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L406848.  v3:= temp @kind object;
  #L40684a.  return v3 @kind object;
}
procedure `void` `e`(`okio.c` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lx1/a;.e:(Lokio/c;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L406918.  if v7 >= v8 then goto L40699c;
  #L40691c.  call temp:= `codePointAt`(v6, v7) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L406922.  v0:= temp;
  #L406924.  v1:= 37I;
  #L406928.  if v0 != v1 then goto L406972;
  #L40692c.  v1:= v7 + 2;
  #L406930.  if v1 >= v8 then goto L406972;
  #L406934.  v2:= v7 + 1;
  #L406938.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L40693e.  v2:= temp;
  #L406940.  call temp:= `a`(v2) @signature `Lx1/a;.a:(C)I` @kind static;
  #L406946.  v2:= temp;
  #L406948.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L40694e.  v3:= temp;
  #L406950.  call temp:= `a`(v3) @signature `Lx1/a;.a:(C)I` @kind static;
  #L406956.  v3:= temp;
  #L406958.  v4:= -1I;
  #L40695a.  if v2 == v4 then goto L40698a;
  #L40695e.  if v3 == v4 then goto L40698a;
  #L406962.  v7:= v2 ^< 4;
  #L406966.  v7:= v7 + v3 @kind int;
  #L406968.  call temp:= `o0`(v5, v7) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L40696e.  v7:= v1;
  #L406970.  goto L406990;
  #L406972.  v1:= 43I;
  #L406976.  if v0 != v1 then goto L40698a;
  #L40697a.  if v9 == 0 then goto L40698a;
  #L40697e.  v1:= 32I;
  #L406982.  call temp:= `o0`(v5, v1) @signature `Lokio/c;.o0:(I)Lokio/c;` @kind virtual;
  #L406988.  goto L406990;
  #L40698a.  call temp:= `w0`(v5, v0) @signature `Lokio/c;.w0:(I)Lokio/c;` @kind virtual;
  #L406990.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L406996.  v0:= temp;
  #L406998.  v7:= v7 + v0 @kind int;
  #L40699a.  goto L406918;
  #L40699c.  return @kind void;
}
procedure `java.lang.String` `c`(`x1.a` v1 @kind this) @signature `Lx1/a;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4067e0.  v0:= v1.`x1.a.b` @type ^`java.lang.String` @kind object;
  #L4067e4.  return v0 @kind object;
}
procedure `boolean` `equals`(`x1.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lx1/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4066dc.  v0:= instanceof @variable v2 @type ^`x1.a` @kind boolean;
  #L4066e0.  if v0 == 0 then goto L406700;
  #L4066e4.  v2:= (`x1.a`) v2 @kind object;
  #L4066e8.  v2:= v2.`x1.a.d` @type ^`java.lang.String` @kind object;
  #L4066ec.  v0:= v1.`x1.a.d` @type ^`java.lang.String` @kind object;
  #L4066f0.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4066f6.  v2:= temp;
  #L4066f8.  if v2 == 0 then goto L406700;
  #L4066fc.  v2:= 1I;
  #L4066fe.  goto L406702;
  #L406700.  v2:= 0I;
  #L406702.  return v2;
}
procedure `int` `f`(`x1.a` v1 @kind this) @signature `Lx1/a;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4067c8.  v0:= v1.`x1.a.c` @type ^`int`;
  #L4067cc.  return v0;
}
procedure `int` `hashCode`(`x1.a` v1 @kind this) @signature `Lx1/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4067a8.  v0:= v1.`x1.a.d` @type ^`java.lang.String` @kind object;
  #L4067ac.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4067b2.  v0:= temp;
  #L4067b4.  return v0;
}
procedure `java.lang.String` `toString`(`x1.a` v1 @kind this) @signature `Lx1/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40685c.  v0:= v1.`x1.a.d` @type ^`java.lang.String` @kind object;
  #L406860.  return v0 @kind object;
}
