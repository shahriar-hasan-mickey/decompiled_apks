record `hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.MaybeObserver` @kind interface, `rx.Subscription` @kind interface {
  `rx.CompletableSubscriber` `hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer.actual` @AccessFlag FINAL;
}
global `long` `@@hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer` v0 @kind this, `rx.CompletableSubscriber` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToCompletableV1$MaybeV2Observer;.<init>:(Lrx/CompletableSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cec98.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3cec9e.  v0.`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer.actual` @type ^`rx.CompletableSubscriber` := v1 @kind object;
  #L3ceca2.  return @kind void;
}
procedure `boolean` `isUnsubscribed`(`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer` v1 @kind this) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToCompletableV1$MaybeV2Observer;.isUnsubscribed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cec70.  call temp:= `get`(v1) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToCompletableV1$MaybeV2Observer;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cec76.  v0:= temp @kind object;
  #L3cec78.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3cec7c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3cec82.  v0:= temp;
  #L3cec84.  return v0;
}
procedure `void` `onComplete`(`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer` v1 @kind this) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToCompletableV1$MaybeV2Observer;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cecb4.  v0:= v1.`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L3cecb8.  call `onCompleted`(v0) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L3cecbe.  return @kind void;
}
procedure `void` `onError`(`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToCompletableV1$MaybeV2Observer;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cecd0.  v0:= v1.`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L3cecd4.  call `onError`(v0, v2) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3cecda.  return @kind void;
}
procedure `void` `onSubscribe`(`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToCompletableV1$MaybeV2Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L3cecec.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3cecf2.  return @kind void;
}
procedure `void` `onSuccess`(`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToCompletableV1$MaybeV2Observer;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3ced04.  v1:= v0.`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L3ced08.  call `onCompleted`(v1) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L3ced0e.  return @kind void;
}
procedure `void` `unsubscribe`(`hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1$MaybeV2Observer` v0 @kind this) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToCompletableV1$MaybeV2Observer;.unsubscribe:()V` @AccessFlag PUBLIC {
    temp;

  #L3ced20.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3ced26.  return @kind void;
}
