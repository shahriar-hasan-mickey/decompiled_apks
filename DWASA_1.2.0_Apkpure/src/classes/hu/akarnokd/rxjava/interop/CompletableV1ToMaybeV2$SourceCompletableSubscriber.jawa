record `hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber` @kind class @AccessFlag FINAL extends `rx.CompletableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber.observer` @AccessFlag FINAL;
  `rx.Subscription` `hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber.s` @AccessFlag ;
}
procedure `void` `<init>`(`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/CompletableV1ToMaybeV2$SourceCompletableSubscriber;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ce928.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ce92e.  v0.`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber.observer` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L3ce932.  return @kind void;
}
procedure `void` `dispose`(`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber` v1 @kind this) @signature `Lhu/akarnokd/rxjava/interop/CompletableV1ToMaybeV2$SourceCompletableSubscriber;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce944.  v0:= v1.`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber.s` @type ^`rx.Subscription` @kind object;
  #L3ce948.  call `unsubscribe`(v0) @signature `Lrx/Subscription;.unsubscribe:()V` @kind interface;
  #L3ce94e.  return @kind void;
}
procedure `boolean` `isDisposed`(`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber` v1 @kind this) @signature `Lhu/akarnokd/rxjava/interop/CompletableV1ToMaybeV2$SourceCompletableSubscriber;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce908.  v0:= v1.`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber.s` @type ^`rx.Subscription` @kind object;
  #L3ce90c.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/Subscription;.isUnsubscribed:()Z` @kind interface;
  #L3ce912.  v0:= temp;
  #L3ce914.  return v0;
}
procedure `void` `onCompleted`(`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber` v1 @kind this) @signature `Lhu/akarnokd/rxjava/interop/CompletableV1ToMaybeV2$SourceCompletableSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce960.  v0:= v1.`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber.observer` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L3ce964.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L3ce96a.  return @kind void;
}
procedure `void` `onError`(`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lhu/akarnokd/rxjava/interop/CompletableV1ToMaybeV2$SourceCompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce97c.  v0:= v1.`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber.observer` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L3ce980.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ce986.  return @kind void;
}
procedure `void` `onSubscribe`(`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber` v0 @kind this, `rx.Subscription` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/CompletableV1ToMaybeV2$SourceCompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;

  #L3ce998.  v0.`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber.s` @type ^`rx.Subscription` := v1 @kind object;
  #L3ce99c.  v1:= v0.`hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2$SourceCompletableSubscriber.observer` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L3ce9a0.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3ce9a6.  return @kind void;
}
