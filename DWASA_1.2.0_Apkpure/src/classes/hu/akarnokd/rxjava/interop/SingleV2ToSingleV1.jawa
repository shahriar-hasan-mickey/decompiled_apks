record `hu.akarnokd.rxjava.interop.SingleV2ToSingleV1` @kind class @AccessFlag FINAL extends `rx.Single$OnSubscribe` @kind interface {
  `io.reactivex.SingleSource` `hu.akarnokd.rxjava.interop.SingleV2ToSingleV1.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`hu.akarnokd.rxjava.interop.SingleV2ToSingleV1` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/SingleV2ToSingleV1;.<init>:(Lio/reactivex/SingleSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cf67c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cf682.  v0.`hu.akarnokd.rxjava.interop.SingleV2ToSingleV1.source` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L3cf686.  return @kind void;
}
procedure `void` `call`(`hu.akarnokd.rxjava.interop.SingleV2ToSingleV1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/SingleV2ToSingleV1;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3cf698.  v1:= (`rx.SingleSubscriber`) v1 @kind object;
  #L3cf69c.  call `call`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/SingleV2ToSingleV1;.call:(Lrx/SingleSubscriber;)V` @kind virtual;
  #L3cf6a2.  return @kind void;
}
procedure `void` `call`(`hu.akarnokd.rxjava.interop.SingleV2ToSingleV1` v1 @kind this, `rx.SingleSubscriber` v2 @kind object) @signature `Lhu/akarnokd/rxjava/interop/SingleV2ToSingleV1;.call:(Lrx/SingleSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cf6b4.  v0:= new `hu.akarnokd.rxjava.interop.SingleV2ToSingleV1$SourceSingleObserver`;
  #L3cf6b8.  call `<init>`(v0, v2) @signature `Lhu/akarnokd/rxjava/interop/SingleV2ToSingleV1$SourceSingleObserver;.<init>:(Lrx/SingleSubscriber;)V` @kind direct;
  #L3cf6be.  call `add`(v2, v0) @signature `Lrx/SingleSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L3cf6c4.  v2:= v1.`hu.akarnokd.rxjava.interop.SingleV2ToSingleV1.source` @type ^`io.reactivex.SingleSource` @kind object;
  #L3cf6c8.  call `subscribe`(v2, v0) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L3cf6ce.  return @kind void;
}
