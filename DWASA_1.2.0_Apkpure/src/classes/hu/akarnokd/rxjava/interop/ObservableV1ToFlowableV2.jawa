record `hu.akarnokd.rxjava.interop.ObservableV1ToFlowableV2` @kind class @AccessFlag FINAL extends `io.reactivex.Flowable` @kind class {
  `rx.Observable` `hu.akarnokd.rxjava.interop.ObservableV1ToFlowableV2.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`hu.akarnokd.rxjava.interop.ObservableV1ToFlowableV2` v0 @kind this, `rx.Observable` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/ObservableV1ToFlowableV2;.<init>:(Lrx/Observable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cf014.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L3cf01a.  v0.`hu.akarnokd.rxjava.interop.ObservableV1ToFlowableV2.source` @type ^`rx.Observable` := v1 @kind object;
  #L3cf01e.  return @kind void;
}
procedure `void` `subscribeActual`(`hu.akarnokd.rxjava.interop.ObservableV1ToFlowableV2` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lhu/akarnokd/rxjava/interop/ObservableV1ToFlowableV2;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3cf030.  v0:= new `hu.akarnokd.rxjava.interop.ObservableV1ToFlowableV2$ObservableSubscriber`;
  #L3cf034.  call `<init>`(v0, v3) @signature `Lhu/akarnokd/rxjava/interop/ObservableV1ToFlowableV2$ObservableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L3cf03a.  v1:= new `hu.akarnokd.rxjava.interop.ObservableV1ToFlowableV2$ObservableSubscriberSubscription`;
  #L3cf03e.  call `<init>`(v1, v0) @signature `Lhu/akarnokd/rxjava/interop/ObservableV1ToFlowableV2$ObservableSubscriberSubscription;.<init>:(Lhu/akarnokd/rxjava/interop/ObservableV1ToFlowableV2$ObservableSubscriber;)V` @kind direct;
  #L3cf044.  call `onSubscribe`(v3, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L3cf04a.  v3:= v2.`hu.akarnokd.rxjava.interop.ObservableV1ToFlowableV2.source` @type ^`rx.Observable` @kind object;
  #L3cf04e.  call temp:= `unsafeSubscribe`(v3, v0) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L3cf054.  return @kind void;
}
