record `hu.akarnokd.rxjava.interop.RxJavaInterop` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`hu.akarnokd.rxjava.interop.RxJavaInterop` v2 @kind this) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3cf3c8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cf3ce.  v0:= new `java.lang.IllegalStateException`;
  #L3cf3d2.  v1:= "No instances!" @kind object;
  #L3cf3d6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cf3dc.  throw v0;
}
procedure `rx.Completable` `toV1Completable`(`io.reactivex.CompletableSource` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV1Completable:(Lio/reactivex/CompletableSource;)Lrx/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf298.  v0:= "source is null" @kind object;
  #L3cf29c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf2a2.  v0:= new `hu.akarnokd.rxjava.interop.CompletableV2ToCompletableV1`;
  #L3cf2a6.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/CompletableV2ToCompletableV1;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3cf2ac.  call temp:= `create`(v0) @signature `Lrx/Completable;.create:(Lrx/Completable$OnSubscribe;)Lrx/Completable;` @kind static;
  #L3cf2b2.  v1:= temp @kind object;
  #L3cf2b4.  return v1 @kind object;
}
procedure `rx.Completable` `toV1Completable`(`io.reactivex.MaybeSource` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV1Completable:(Lio/reactivex/MaybeSource;)Lrx/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf2c8.  v0:= "source is null" @kind object;
  #L3cf2cc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf2d2.  v0:= new `hu.akarnokd.rxjava.interop.MaybeV2ToCompletableV1`;
  #L3cf2d6.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToCompletableV1;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L3cf2dc.  call temp:= `create`(v0) @signature `Lrx/Completable;.create:(Lrx/Completable$OnSubscribe;)Lrx/Completable;` @kind static;
  #L3cf2e2.  v1:= temp @kind object;
  #L3cf2e4.  return v1 @kind object;
}
procedure `rx.Observable` `toV1Observable`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.BackpressureStrategy` v2 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV1Observable:(Lio/reactivex/ObservableSource;Lio/reactivex/BackpressureStrategy;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf2f8.  v0:= "source is null" @kind object;
  #L3cf2fc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf302.  v0:= "strategy is null" @kind object;
  #L3cf306.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf30c.  call temp:= `wrap`(v1) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3cf312.  v1:= temp @kind object;
  #L3cf314.  call temp:= `toFlowable`(v1, v2) @signature `Lio/reactivex/Observable;.toFlowable:(Lio/reactivex/BackpressureStrategy;)Lio/reactivex/Flowable;` @kind virtual;
  #L3cf31a.  v1:= temp @kind object;
  #L3cf31c.  call temp:= `toV1Observable`(v1) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV1Observable:(Lorg/reactivestreams/Publisher;)Lrx/Observable;` @kind static;
  #L3cf322.  v1:= temp @kind object;
  #L3cf324.  return v1 @kind object;
}
procedure `rx.Observable` `toV1Observable`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV1Observable:(Lorg/reactivestreams/Publisher;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf338.  v0:= "source is null" @kind object;
  #L3cf33c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf342.  v0:= new `hu.akarnokd.rxjava.interop.FlowableV2ToObservableV1`;
  #L3cf346.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/FlowableV2ToObservableV1;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3cf34c.  call temp:= `create`(v0) @signature `Lrx/Observable;.create:(Lrx/Observable$OnSubscribe;)Lrx/Observable;` @kind static;
  #L3cf352.  v1:= temp @kind object;
  #L3cf354.  return v1 @kind object;
}
procedure `rx.Single` `toV1Single`(`io.reactivex.MaybeSource` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV1Single:(Lio/reactivex/MaybeSource;)Lrx/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf368.  v0:= "source is null" @kind object;
  #L3cf36c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf372.  v0:= new `hu.akarnokd.rxjava.interop.MaybeV2ToSingleV1`;
  #L3cf376.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/MaybeV2ToSingleV1;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L3cf37c.  call temp:= `create`(v0) @signature `Lrx/Single;.create:(Lrx/Single$OnSubscribe;)Lrx/Single;` @kind static;
  #L3cf382.  v1:= temp @kind object;
  #L3cf384.  return v1 @kind object;
}
procedure `rx.Single` `toV1Single`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV1Single:(Lio/reactivex/SingleSource;)Lrx/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf398.  v0:= "source is null" @kind object;
  #L3cf39c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf3a2.  v0:= new `hu.akarnokd.rxjava.interop.SingleV2ToSingleV1`;
  #L3cf3a6.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/SingleV2ToSingleV1;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3cf3ac.  call temp:= `create`(v0) @signature `Lrx/Single;.create:(Lrx/Single$OnSubscribe;)Lrx/Single;` @kind static;
  #L3cf3b2.  v1:= temp @kind object;
  #L3cf3b4.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `toV2Completable`(`rx.Completable` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV2Completable:(Lrx/Completable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf1a8.  v0:= "source is null" @kind object;
  #L3cf1ac.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf1b2.  v0:= new `hu.akarnokd.rxjava.interop.CompletableV1ToCompletableV2`;
  #L3cf1b6.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/CompletableV1ToCompletableV2;.<init>:(Lrx/Completable;)V` @kind direct;
  #L3cf1bc.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `toV2Flowable`(`rx.Observable` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV2Flowable:(Lrx/Observable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf1d0.  v0:= "source is null" @kind object;
  #L3cf1d4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf1da.  v0:= new `hu.akarnokd.rxjava.interop.ObservableV1ToFlowableV2`;
  #L3cf1de.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/ObservableV1ToFlowableV2;.<init>:(Lrx/Observable;)V` @kind direct;
  #L3cf1e4.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `toV2Maybe`(`rx.Completable` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV2Maybe:(Lrx/Completable;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf1f8.  v0:= "source is null" @kind object;
  #L3cf1fc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf202.  v0:= new `hu.akarnokd.rxjava.interop.CompletableV1ToMaybeV2`;
  #L3cf206.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/CompletableV1ToMaybeV2;.<init>:(Lrx/Completable;)V` @kind direct;
  #L3cf20c.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `toV2Maybe`(`rx.Single` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV2Maybe:(Lrx/Single;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf220.  v0:= "source is null" @kind object;
  #L3cf224.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf22a.  v0:= new `hu.akarnokd.rxjava.interop.SingleV1ToMaybeV2`;
  #L3cf22e.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/SingleV1ToMaybeV2;.<init>:(Lrx/Single;)V` @kind direct;
  #L3cf234.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `toV2Observable`(`rx.Observable` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV2Observable:(Lrx/Observable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf248.  v0:= "source is null" @kind object;
  #L3cf24c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf252.  v0:= new `hu.akarnokd.rxjava.interop.ObservableV1ToObservableV2`;
  #L3cf256.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/ObservableV1ToObservableV2;.<init>:(Lrx/Observable;)V` @kind direct;
  #L3cf25c.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toV2Single`(`rx.Single` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/RxJavaInterop;.toV2Single:(Lrx/Single;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cf270.  v0:= "source is null" @kind object;
  #L3cf274.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cf27a.  v0:= new `hu.akarnokd.rxjava.interop.SingleV1ToSingleV2`;
  #L3cf27e.  call `<init>`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/SingleV1ToSingleV2;.<init>:(Lrx/Single;)V` @kind direct;
  #L3cf284.  return v0 @kind object;
}
