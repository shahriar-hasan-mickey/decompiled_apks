record `hu.akarnokd.rxjava.interop.CompletableV2ToCompletableV1` @kind class @AccessFlag FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `io.reactivex.CompletableSource` `hu.akarnokd.rxjava.interop.CompletableV2ToCompletableV1.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`hu.akarnokd.rxjava.interop.CompletableV2ToCompletableV1` v0 @kind this, `io.reactivex.CompletableSource` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/CompletableV2ToCompletableV1;.<init>:(Lio/reactivex/CompletableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ceaac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ceab2.  v0.`hu.akarnokd.rxjava.interop.CompletableV2ToCompletableV1.source` @type ^`io.reactivex.CompletableSource` := v1 @kind object;
  #L3ceab6.  return @kind void;
}
procedure `void` `call`(`hu.akarnokd.rxjava.interop.CompletableV2ToCompletableV1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lhu/akarnokd/rxjava/interop/CompletableV2ToCompletableV1;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ceac8.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L3ceacc.  call `call`(v0, v1) @signature `Lhu/akarnokd/rxjava/interop/CompletableV2ToCompletableV1;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L3cead2.  return @kind void;
}
procedure `void` `call`(`hu.akarnokd.rxjava.interop.CompletableV2ToCompletableV1` v2 @kind this, `rx.CompletableSubscriber` v3 @kind object) @signature `Lhu/akarnokd/rxjava/interop/CompletableV2ToCompletableV1;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ceae4.  v0:= v2.`hu.akarnokd.rxjava.interop.CompletableV2ToCompletableV1.source` @type ^`io.reactivex.CompletableSource` @kind object;
  #L3ceae8.  v1:= new `hu.akarnokd.rxjava.interop.CompletableV2ToCompletableV1$SourceCompletableSubscriber`;
  #L3ceaec.  call `<init>`(v1, v3) @signature `Lhu/akarnokd/rxjava/interop/CompletableV2ToCompletableV1$SourceCompletableSubscriber;.<init>:(Lrx/CompletableSubscriber;)V` @kind direct;
  #L3ceaf2.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L3ceaf8.  return @kind void;
}
