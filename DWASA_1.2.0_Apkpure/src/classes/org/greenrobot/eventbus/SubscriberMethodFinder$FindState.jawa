record `org.greenrobot.eventbus.SubscriberMethodFinder$FindState` @kind class @AccessFlag  {
  `java.util.Map` `org.greenrobot.eventbus.SubscriberMethodFinder$FindState.anyMethodByEventType` @AccessFlag FINAL;
  `java.lang.Class` `org.greenrobot.eventbus.SubscriberMethodFinder$FindState.clazz` @AccessFlag ;
  `java.lang.StringBuilder` `org.greenrobot.eventbus.SubscriberMethodFinder$FindState.methodKeyBuilder` @AccessFlag FINAL;
  `boolean` `org.greenrobot.eventbus.SubscriberMethodFinder$FindState.skipSuperClasses` @AccessFlag ;
  `java.lang.Class` `org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberClass` @AccessFlag ;
  `java.util.Map` `org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberClassByMethodKey` @AccessFlag FINAL;
  `org.greenrobot.eventbus.meta.SubscriberInfo` `org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberInfo` @AccessFlag ;
  `java.util.List` `org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberMethods` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.greenrobot.eventbus.SubscriberMethodFinder$FindState` v2 @kind this) @signature `Lorg/greenrobot/eventbus/SubscriberMethodFinder$FindState;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L482c20.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L482c26.  v0:= new `java.util.ArrayList`;
  #L482c2a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L482c30.  v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberMethods` @type ^`java.util.List` := v0 @kind object;
  #L482c34.  v0:= new `java.util.HashMap`;
  #L482c38.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L482c3e.  v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.anyMethodByEventType` @type ^`java.util.Map` := v0 @kind object;
  #L482c42.  v0:= new `java.util.HashMap`;
  #L482c46.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L482c4c.  v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberClassByMethodKey` @type ^`java.util.Map` := v0 @kind object;
  #L482c50.  v0:= new `java.lang.StringBuilder`;
  #L482c54.  v1:= 128I;
  #L482c58.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L482c5e.  v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.methodKeyBuilder` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L482c62.  return @kind void;
}
procedure `boolean` `checkAddWithMethodSignature`(`org.greenrobot.eventbus.SubscriberMethodFinder$FindState` v3 @kind this, `java.lang.reflect.Method` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lorg/greenrobot/eventbus/SubscriberMethodFinder$FindState;.checkAddWithMethodSignature:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L482b90.  v0:= v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.methodKeyBuilder` @type ^`java.lang.StringBuilder` @kind object;
  #L482b94.  v1:= 0I;
  #L482b96.  call `setLength`(v0, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L482b9c.  v0:= v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.methodKeyBuilder` @type ^`java.lang.StringBuilder` @kind object;
  #L482ba0.  call temp:= `getName`(v4) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L482ba6.  v2:= temp @kind object;
  #L482ba8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482bae.  v0:= v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.methodKeyBuilder` @type ^`java.lang.StringBuilder` @kind object;
  #L482bb2.  v2:= 62I;
  #L482bb6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L482bbc.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L482bc2.  v5:= temp @kind object;
  #L482bc4.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482bca.  v5:= v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.methodKeyBuilder` @type ^`java.lang.StringBuilder` @kind object;
  #L482bce.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L482bd4.  v5:= temp @kind object;
  #L482bd6.  call temp:= `getDeclaringClass`(v4) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L482bdc.  v4:= temp @kind object;
  #L482bde.  v0:= v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberClassByMethodKey` @type ^`java.util.Map` @kind object;
  #L482be2.  call temp:= `put`(v0, v5, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L482be8.  v0:= temp @kind object;
  #L482bea.  v0:= (`java.lang.Class`) v0 @kind object;
  #L482bee.  if v0 == 0 then goto L482c0c;
  #L482bf2.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L482bf8.  v4:= temp;
  #L482bfa.  if v4 == 0 then goto L482c00;
  #L482bfe.  goto L482c0c;
  #L482c00.  v4:= v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberClassByMethodKey` @type ^`java.util.Map` @kind object;
  #L482c04.  call temp:= `put`(v4, v5, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L482c0a.  return v1;
  #L482c0c.  v4:= 1I;
  #L482c0e.  return v4;
}
procedure `boolean` `checkAdd`(`org.greenrobot.eventbus.SubscriberMethodFinder$FindState` v2 @kind this, `java.lang.reflect.Method` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/greenrobot/eventbus/SubscriberMethodFinder$FindState;.checkAdd:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L482b30.  v0:= v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.anyMethodByEventType` @type ^`java.util.Map` @kind object;
  #L482b34.  call temp:= `put`(v0, v4, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L482b3a.  v0:= temp @kind object;
  #L482b3c.  if v0 != 0 then goto L482b44;
  #L482b40.  v3:= 1I;
  #L482b42.  return v3;
  #L482b44.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.Method` @kind boolean;
  #L482b48.  if v1 == 0 then goto L482b74;
  #L482b4c.  v0:= (`java.lang.reflect.Method`) v0 @kind object;
  #L482b50.  call temp:= `checkAddWithMethodSignature`(v2, v0, v4) @signature `Lorg/greenrobot/eventbus/SubscriberMethodFinder$FindState;.checkAddWithMethodSignature:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z` @kind direct;
  #L482b56.  v0:= temp;
  #L482b58.  if v0 == 0 then goto L482b68;
  #L482b5c.  v0:= v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.anyMethodByEventType` @type ^`java.util.Map` @kind object;
  #L482b60.  call temp:= `put`(v0, v4, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L482b66.  goto L482b74;
  #L482b68.  v3:= new `java.lang.IllegalStateException`;
  #L482b6c.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L482b72.  throw v3;
  #L482b74.  call temp:= `checkAddWithMethodSignature`(v2, v3, v4) @signature `Lorg/greenrobot/eventbus/SubscriberMethodFinder$FindState;.checkAddWithMethodSignature:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z` @kind direct;
  #L482b7a.  v3:= temp;
  #L482b7c.  return v3;
}
procedure `void` `initForSubscriber`(`org.greenrobot.eventbus.SubscriberMethodFinder$FindState` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/greenrobot/eventbus/SubscriberMethodFinder$FindState;.initForSubscriber:(Ljava/lang/Class;)V` @AccessFlag  {
    temp;

  #L482c74.  v0.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.clazz` @type ^`java.lang.Class` := v1 @kind object;
  #L482c78.  v0.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberClass` @type ^`java.lang.Class` := v1 @kind object;
  #L482c7c.  v1:= 0I;
  #L482c7e.  v0.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.skipSuperClasses` @type ^`boolean` := v1 @kind boolean;
  #L482c82.  v1:= 0I;
  #L482c84.  v0.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberInfo` @type ^`org.greenrobot.eventbus.meta.SubscriberInfo` := v1 @kind object;
  #L482c88.  return @kind void;
}
procedure `void` `moveToSuperclass`(`org.greenrobot.eventbus.SubscriberMethodFinder$FindState` v3 @kind this) @signature `Lorg/greenrobot/eventbus/SubscriberMethodFinder$FindState;.moveToSuperclass:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L482c9c.  v0:= v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.skipSuperClasses` @type ^`boolean` @kind boolean;
  #L482ca0.  v1:= 0I;
  #L482ca2.  if v0 == 0 then goto L482cac;
  #L482ca6.  v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.clazz` @type ^`java.lang.Class` := v1 @kind object;
  #L482caa.  goto L482cfc;
  #L482cac.  v0:= v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.clazz` @type ^`java.lang.Class` @kind object;
  #L482cb0.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L482cb6.  v0:= temp @kind object;
  #L482cb8.  v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.clazz` @type ^`java.lang.Class` := v0 @kind object;
  #L482cbc.  v0:= v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.clazz` @type ^`java.lang.Class` @kind object;
  #L482cc0.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L482cc6.  v0:= temp @kind object;
  #L482cc8.  v2:= "java." @kind object;
  #L482ccc.  call temp:= `startsWith`(v0, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L482cd2.  v2:= temp;
  #L482cd4.  if v2 != 0 then goto L482cf8;
  #L482cd8.  v2:= "javax." @kind object;
  #L482cdc.  call temp:= `startsWith`(v0, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L482ce2.  v2:= temp;
  #L482ce4.  if v2 != 0 then goto L482cf8;
  #L482ce8.  v2:= "android." @kind object;
  #L482cec.  call temp:= `startsWith`(v0, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L482cf2.  v0:= temp;
  #L482cf4.  if v0 == 0 then goto L482cfc;
  #L482cf8.  v3.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.clazz` @type ^`java.lang.Class` := v1 @kind object;
  #L482cfc.  return @kind void;
}
procedure `void` `recycle`(`org.greenrobot.eventbus.SubscriberMethodFinder$FindState` v2 @kind this) @signature `Lorg/greenrobot/eventbus/SubscriberMethodFinder$FindState;.recycle:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L482d10.  v0:= v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberMethods` @type ^`java.util.List` @kind object;
  #L482d14.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L482d1a.  v0:= v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.anyMethodByEventType` @type ^`java.util.Map` @kind object;
  #L482d1e.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L482d24.  v0:= v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberClassByMethodKey` @type ^`java.util.Map` @kind object;
  #L482d28.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L482d2e.  v0:= v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.methodKeyBuilder` @type ^`java.lang.StringBuilder` @kind object;
  #L482d32.  v1:= 0I;
  #L482d34.  call `setLength`(v0, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L482d3a.  v0:= 0I;
  #L482d3c.  v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberClass` @type ^`java.lang.Class` := v0 @kind object;
  #L482d40.  v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.clazz` @type ^`java.lang.Class` := v0 @kind object;
  #L482d44.  v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.skipSuperClasses` @type ^`boolean` := v1 @kind boolean;
  #L482d48.  v2.`org.greenrobot.eventbus.SubscriberMethodFinder$FindState.subscriberInfo` @type ^`org.greenrobot.eventbus.meta.SubscriberInfo` := v0 @kind object;
  #L482d4c.  return @kind void;
}
