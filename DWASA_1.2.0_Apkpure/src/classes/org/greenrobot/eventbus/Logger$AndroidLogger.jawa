record `org.greenrobot.eventbus.Logger$AndroidLogger` @kind class @AccessFlag PUBLIC extends `org.greenrobot.eventbus.Logger` @kind interface {
  `java.lang.String` `org.greenrobot.eventbus.Logger$AndroidLogger.tag` @AccessFlag PRIVATE_FINAL;
}
global `boolean` `@@org.greenrobot.eventbus.Logger$AndroidLogger.ANDROID_LOG_AVAILABLE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/greenrobot/eventbus/Logger$AndroidLogger;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L48264c.  v0:= 0I;
  #L48264e.  v1:= "android.util.Log" @kind object;
  #L482652.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L482658.  v1:= temp @kind object;
  #L48265a.  if v1 == 0 then goto L482660;
  #L48265e.  v0:= 1I;
  #L482660.  `@@org.greenrobot.eventbus.Logger$AndroidLogger.ANDROID_LOG_AVAILABLE` @type ^`boolean` := v0 @kind boolean;
  #L482664.  return @kind void;
  catch `java.lang.ClassNotFoundException` @[L48264e..L48265a] goto L482660;
}
procedure `void` `<init>`(`org.greenrobot.eventbus.Logger$AndroidLogger` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/greenrobot/eventbus/Logger$AndroidLogger;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L482688.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48268e.  v0.`org.greenrobot.eventbus.Logger$AndroidLogger.tag` @type ^`java.lang.String` := v1 @kind object;
  #L482692.  return @kind void;
}
procedure `boolean` `isAndroidLogAvailable`() @signature `Lorg/greenrobot/eventbus/Logger$AndroidLogger;.isAndroidLogAvailable:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4825e8.  v0:= `@@org.greenrobot.eventbus.Logger$AndroidLogger.ANDROID_LOG_AVAILABLE` @type ^`boolean` @kind boolean;
  #L4825ec.  return v0;
}
procedure `void` `log`(`org.greenrobot.eventbus.Logger$AndroidLogger` v1 @kind this, `java.util.logging.Level` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/greenrobot/eventbus/Logger$AndroidLogger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4826a4.  v0:= `@@java.util.logging.Level.OFF` @type ^`java.util.logging.Level` @kind object;
  #L4826a8.  if v2 == v0 then goto L4826be;
  #L4826ac.  call temp:= `mapLevel`(v1, v2) @signature `Lorg/greenrobot/eventbus/Logger$AndroidLogger;.mapLevel:(Ljava/util/logging/Level;)I` @kind virtual;
  #L4826b2.  v2:= temp;
  #L4826b4.  v0:= v1.`org.greenrobot.eventbus.Logger$AndroidLogger.tag` @type ^`java.lang.String` @kind object;
  #L4826b8.  call temp:= `println`(v2, v0, v3) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4826be.  return @kind void;
}
procedure `void` `log`(`org.greenrobot.eventbus.Logger$AndroidLogger` v2 @kind this, `java.util.logging.Level` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lorg/greenrobot/eventbus/Logger$AndroidLogger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4826d0.  v0:= `@@java.util.logging.Level.OFF` @type ^`java.util.logging.Level` @kind object;
  #L4826d4.  if v3 == v0 then goto L48271a;
  #L4826d8.  call temp:= `mapLevel`(v2, v3) @signature `Lorg/greenrobot/eventbus/Logger$AndroidLogger;.mapLevel:(Ljava/util/logging/Level;)I` @kind virtual;
  #L4826de.  v3:= temp;
  #L4826e0.  v0:= v2.`org.greenrobot.eventbus.Logger$AndroidLogger.tag` @type ^`java.lang.String` @kind object;
  #L4826e4.  v1:= new `java.lang.StringBuilder`;
  #L4826e8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4826ee.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4826f4.  v4:= "\n" @kind object;
  #L4826f8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4826fe.  call temp:= `getStackTraceString`(v5) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L482704.  v4:= temp @kind object;
  #L482706.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48270c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L482712.  v4:= temp @kind object;
  #L482714.  call temp:= `println`(v3, v0, v4) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L48271a.  return @kind void;
}
procedure `int` `mapLevel`(`org.greenrobot.eventbus.Logger$AndroidLogger` v1 @kind this, `java.util.logging.Level` v2 @kind object) @signature `Lorg/greenrobot/eventbus/Logger$AndroidLogger;.mapLevel:(Ljava/util/logging/Level;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L482600.  call temp:= `intValue`(v2) @signature `Ljava/util/logging/Level;.intValue:()I` @kind virtual;
  #L482606.  v2:= temp;
  #L482608.  v0:= 800I;
  #L48260c.  if v2 >= v0 then goto L482620;
  #L482610.  v0:= 500I;
  #L482614.  if v2 >= v0 then goto L48261c;
  #L482618.  v2:= 2I;
  #L48261a.  return v2;
  #L48261c.  v2:= 3I;
  #L48261e.  return v2;
  #L482620.  v0:= 900I;
  #L482624.  if v2 >= v0 then goto L48262c;
  #L482628.  v2:= 4I;
  #L48262a.  return v2;
  #L48262c.  v0:= 1000I;
  #L482630.  if v2 >= v0 then goto L482638;
  #L482634.  v2:= 5I;
  #L482636.  return v2;
  #L482638.  v2:= 6I;
  #L48263a.  return v2;
}
