record `org.greenrobot.eventbus.Subscription` @kind class @AccessFlag FINAL {
  `boolean` `org.greenrobot.eventbus.Subscription.active` @AccessFlag VOLATILE;
  `java.lang.Object` `org.greenrobot.eventbus.Subscription.subscriber` @AccessFlag FINAL;
  `org.greenrobot.eventbus.SubscriberMethod` `org.greenrobot.eventbus.Subscription.subscriberMethod` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.greenrobot.eventbus.Subscription` v0 @kind this, `java.lang.Object` v1 @kind object, `org.greenrobot.eventbus.SubscriberMethod` v2 @kind object) @signature `Lorg/greenrobot/eventbus/Subscription;.<init>:(Ljava/lang/Object;Lorg/greenrobot/eventbus/SubscriberMethod;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L483420.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L483426.  v0.`org.greenrobot.eventbus.Subscription.subscriber` @type ^`java.lang.Object` := v1 @kind object;
  #L48342a.  v0.`org.greenrobot.eventbus.Subscription.subscriberMethod` @type ^`org.greenrobot.eventbus.SubscriberMethod` := v2 @kind object;
  #L48342e.  v1:= 1I;
  #L483430.  v0.`org.greenrobot.eventbus.Subscription.active` @type ^`boolean` := v1 @kind boolean;
  #L483434.  return @kind void;
}
procedure `boolean` `equals`(`org.greenrobot.eventbus.Subscription` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/greenrobot/eventbus/Subscription;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4833ac.  v0:= instanceof @variable v4 @type ^`org.greenrobot.eventbus.Subscription` @kind boolean;
  #L4833b0.  v1:= 0I;
  #L4833b2.  if v0 == 0 then goto L4833dc;
  #L4833b6.  v4:= (`org.greenrobot.eventbus.Subscription`) v4 @kind object;
  #L4833ba.  v0:= v3.`org.greenrobot.eventbus.Subscription.subscriber` @type ^`java.lang.Object` @kind object;
  #L4833be.  v2:= v4.`org.greenrobot.eventbus.Subscription.subscriber` @type ^`java.lang.Object` @kind object;
  #L4833c2.  if v0 != v2 then goto L4833dc;
  #L4833c6.  v0:= v3.`org.greenrobot.eventbus.Subscription.subscriberMethod` @type ^`org.greenrobot.eventbus.SubscriberMethod` @kind object;
  #L4833ca.  v4:= v4.`org.greenrobot.eventbus.Subscription.subscriberMethod` @type ^`org.greenrobot.eventbus.SubscriberMethod` @kind object;
  #L4833ce.  call temp:= `equals`(v0, v4) @signature `Lorg/greenrobot/eventbus/SubscriberMethod;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4833d4.  v4:= temp;
  #L4833d6.  if v4 == 0 then goto L4833dc;
  #L4833da.  v1:= 1I;
  #L4833dc.  return v1;
}
procedure `int` `hashCode`(`org.greenrobot.eventbus.Subscription` v2 @kind this) @signature `Lorg/greenrobot/eventbus/Subscription;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4833f0.  v0:= v2.`org.greenrobot.eventbus.Subscription.subscriber` @type ^`java.lang.Object` @kind object;
  #L4833f4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4833fa.  v0:= temp;
  #L4833fc.  v1:= v2.`org.greenrobot.eventbus.Subscription.subscriberMethod` @type ^`org.greenrobot.eventbus.SubscriberMethod` @kind object;
  #L483400.  v1:= v1.`org.greenrobot.eventbus.SubscriberMethod.methodString` @type ^`java.lang.String` @kind object;
  #L483404.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L48340a.  v1:= temp;
  #L48340c.  v0:= v0 + v1 @kind int;
  #L48340e.  return v0;
}
