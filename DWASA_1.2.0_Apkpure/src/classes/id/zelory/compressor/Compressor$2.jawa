record `id.zelory.compressor.Compressor$2` @kind class @AccessFlag  extends `rx.functions.Func0` @kind interface {
  `id.zelory.compressor.Compressor` `id.zelory.compressor.Compressor$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.io.File` `id.zelory.compressor.Compressor$2.val$file` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`id.zelory.compressor.Compressor$2` v0 @kind this, `id.zelory.compressor.Compressor` v1 @kind object, `java.io.File` v2 @kind object) @signature `Lid/zelory/compressor/Compressor$2;.<init>:(Lid/zelory/compressor/Compressor;Ljava/io/File;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cf7a8.  v0.`id.zelory.compressor.Compressor$2.this$0` @type ^`id.zelory.compressor.Compressor` := v1 @kind object;
  #L3cf7ac.  v0.`id.zelory.compressor.Compressor$2.val$file` @type ^`java.io.File` := v2 @kind object;
  #L3cf7b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cf7b6.  return @kind void;
}
procedure `java.lang.Object` `call`(`id.zelory.compressor.Compressor$2` v1 @kind this) @signature `Lid/zelory/compressor/Compressor$2;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3cf760.  call temp:= `call`(v1) @signature `Lid/zelory/compressor/Compressor$2;.call:()Lrx/Observable;` @kind virtual;
  #L3cf766.  v0:= temp @kind object;
  #L3cf768.  return v0 @kind object;
}
procedure `rx.Observable` `call`(`id.zelory.compressor.Compressor$2` v2 @kind this) @signature `Lid/zelory/compressor/Compressor$2;.call:()Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cf77c.  v0:= v2.`id.zelory.compressor.Compressor$2.this$0` @type ^`id.zelory.compressor.Compressor` @kind object;
  #L3cf780.  v1:= v2.`id.zelory.compressor.Compressor$2.val$file` @type ^`java.io.File` @kind object;
  #L3cf784.  call temp:= `compressToBitmap`(v0, v1) @signature `Lid/zelory/compressor/Compressor;.compressToBitmap:(Ljava/io/File;)Landroid/graphics/Bitmap;` @kind virtual;
  #L3cf78a.  v0:= temp @kind object;
  #L3cf78c.  call temp:= `just`(v0) @signature `Lrx/Observable;.just:(Ljava/lang/Object;)Lrx/Observable;` @kind static;
  #L3cf792.  v0:= temp @kind object;
  #L3cf794.  return v0 @kind object;
}
