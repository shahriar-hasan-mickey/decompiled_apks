record `id.zelory.compressor.ImageUtil` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`id.zelory.compressor.ImageUtil` v0 @kind this) @signature `Lid/zelory/compressor/ImageUtil;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3d0298.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d029e.  return @kind void;
}
procedure `int` `calculateInSampleSize`(`android.graphics.BitmapFactory$Options` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lid/zelory/compressor/ImageUtil;.calculateInSampleSize:(Landroid/graphics/BitmapFactory$Options;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d00d4.  v0:= v4.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L3d00d8.  v4:= v4.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L3d00dc.  if v0 > v6 then goto L3d00ea;
  #L3d00e0.  if v4 <= v5 then goto L3d00e6;
  #L3d00e4.  goto L3d00ea;
  #L3d00e6.  v1:= 1I;
  #L3d00e8.  goto L3d010e;
  #L3d00ea.  v1:= (`float`) v0 @kind i2f;
  #L3d00ec.  v2:= (`float`) v6 @kind i2f;
  #L3d00ee.  v1:= v1 / v2 @kind float;
  #L3d00f0.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3d00f6.  v1:= temp;
  #L3d00f8.  v2:= (`float`) v4 @kind i2f;
  #L3d00fa.  v3:= (`float`) v5 @kind i2f;
  #L3d00fc.  v2:= v2 / v3 @kind float;
  #L3d00fe.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3d0104.  v2:= temp;
  #L3d0106.  if v1 >= v2 then goto L3d010c;
  #L3d010a.  goto L3d010e;
  #L3d010c.  v1:= v2;
  #L3d010e.  v4:= v4 * v0 @kind int;
  #L3d0112.  v4:= (`float`) v4 @kind i2f;
  #L3d0114.  v5:= v5 * v6 @kind int;
  #L3d0118.  v5:= v5 * 2;
  #L3d011c.  v5:= (`float`) v5 @kind i2f;
  #L3d011e.  v6:= v1 * v1 @kind int;
  #L3d0122.  v6:= (`float`) v6 @kind i2f;
  #L3d0124.  v6:= v4 / v6 @kind float;
  #L3d0128.  v6:= fcmpl(v6, v5);
  #L3d012c.  if v6 <= 0 then goto L3d0136;
  #L3d0130.  v1:= v1 + 1;
  #L3d0134.  goto L3d011e;
  #L3d0136.  return v1;
}
procedure `java.io.File` `compressImage`(`android.content.Context` v2 @kind object, `android.net.Uri` v3 @kind object, `float` v4 , `float` v5 , `android.graphics.Bitmap$CompressFormat` v6 @kind object, `android.graphics.Bitmap$Config` v7 @kind object, `int` v8 , `java.lang.String` v9 @kind object) @signature `Lid/zelory/compressor/ImageUtil;.compressImage:(Landroid/content/Context;Landroid/net/Uri;FFLandroid/graphics/Bitmap$CompressFormat;Landroid/graphics/Bitmap$Config;ILjava/lang/String;)Ljava/io/File;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3d0148.  call temp:= `name`(v6) @signature `Landroid/graphics/Bitmap$CompressFormat;.name:()Ljava/lang/String;` @kind virtual;
  #L3d014e.  v0:= temp @kind object;
  #L3d0150.  call temp:= `toLowerCase`(v0) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L3d0156.  v0:= temp @kind object;
  #L3d0158.  call temp:= `generateFilePath`(v2, v9, v3, v0) @signature `Lid/zelory/compressor/ImageUtil;.generateFilePath:(Landroid/content/Context;Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3d015e.  v9:= temp @kind object;
  #L3d0160.  v0:= 0I;
  #L3d0162.  v1:= new `java.io.FileOutputStream`;
  #L3d0166.  call `<init>`(v1, v9) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d016c.  call temp:= `getScaledBitmap`(v2, v3, v4, v5, v7) @signature `Lid/zelory/compressor/ImageUtil;.getScaledBitmap:(Landroid/content/Context;Landroid/net/Uri;FFLandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3d0172.  v2:= temp @kind object;
  #L3d0174.  call temp:= `compress`(v2, v6, v8, v1) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L3d017a.  call `close`(v1) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L3d0180.  goto L3d01a4;
  #L3d0182.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0184.  v0:= v1 @kind object;
  #L3d0186.  goto L3d01b0;
  #L3d0188.  v2:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L3d018a.  v0:= v1 @kind object;
  #L3d018c.  goto L3d0194;
  #L3d018e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0190.  goto L3d01b0;
  #L3d0192.  v2:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L3d0194.  call `printStackTrace`(v2) @signature `Ljava/io/FileNotFoundException;.printStackTrace:()V` @kind virtual;
  #L3d019a.  if v0 == 0 then goto L3d01a4;
  #L3d019e.  call `close`(v0) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L3d01a4.  v2:= new `java.io.File`;
  #L3d01a8.  call `<init>`(v2, v9) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d01ae.  return v2 @kind object;
  #L3d01b0.  if v0 == 0 then goto L3d01ba;
  #L3d01b4.  call `close`(v0) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L3d01ba.  throw v2;
  catch `java.io.FileNotFoundException` @[L3d0162..L3d016c] goto L3d0192;
  catch `java.lang.Throwable` @[L3d0162..L3d016c] goto L3d018e;
  catch `java.io.FileNotFoundException` @[L3d016c..L3d017a] goto L3d0188;
  catch `java.lang.Throwable` @[L3d016c..L3d017a] goto L3d0182;
  catch `java.io.IOException` @[L3d017a..L3d0180] goto L3d01a4;
  catch `java.lang.Throwable` @[L3d0194..L3d019a] goto L3d018e;
  catch `java.io.IOException` @[L3d019e..L3d01a4] goto L3d01a4;
  catch `java.io.IOException` @[L3d01b4..L3d01ba] goto L3d01ba;
}
procedure `java.lang.String` `generateFilePath`(`android.content.Context` v1 @kind object, `java.lang.String` v2 @kind object, `android.net.Uri` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lid/zelory/compressor/ImageUtil;.generateFilePath:(Landroid/content/Context;Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3d0214.  v0:= new `java.io.File`;
  #L3d0218.  call `<init>`(v0, v2) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d021e.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3d0224.  v2:= temp;
  #L3d0226.  if v2 != 0 then goto L3d0230;
  #L3d022a.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L3d0230.  v2:= new `java.lang.StringBuilder`;
  #L3d0234.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d023a.  call temp:= `getAbsolutePath`(v0) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L3d0240.  v0:= temp @kind object;
  #L3d0242.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0248.  v0:= `@@java.io.File.separator` @type ^`java.lang.String` @kind object;
  #L3d024c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0252.  call temp:= `getFileName`(v1, v3) @signature `Lid/zelory/compressor/FileUtil;.getFileName:(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String;` @kind static;
  #L3d0258.  v1:= temp @kind object;
  #L3d025a.  call temp:= `splitFileName`(v1) @signature `Lid/zelory/compressor/FileUtil;.splitFileName:(Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L3d0260.  v1:= temp @kind object;
  #L3d0262.  v3:= 0I;
  #L3d0264.  v1:= v1[v3] @kind object;
  #L3d0268.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d026e.  v1:= "." @kind object;
  #L3d0272.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0278.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d027e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0284.  v1:= temp @kind object;
  #L3d0286.  return v1 @kind object;
}
procedure `android.graphics.Bitmap` `getScaledBitmap`(`android.content.Context` v16 @kind object, `android.net.Uri` v17 @kind object, `float` v18 , `float` v19 , `android.graphics.Bitmap$Config` v20 @kind object) @signature `Lid/zelory/compressor/ImageUtil;.getScaledBitmap:(Landroid/content/Context;Landroid/net/Uri;FFLandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3cfe54.  v1:= v18;
  #L3cfe58.  v2:= v19;
  #L3cfe5c.  call temp:= `getRealPathFromURI`(v16, v17) @signature `Lid/zelory/compressor/FileUtil;.getRealPathFromURI:(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String;` @kind static;
  #L3cfe62.  v3:= temp @kind object;
  #L3cfe64.  v4:= new `android.graphics.BitmapFactory$Options`;
  #L3cfe68.  call `<init>`(v4) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L3cfe6e.  v5:= 1I;
  #L3cfe70.  v4.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v5 @kind boolean;
  #L3cfe74.  call temp:= `decodeFile`(v3, v4) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3cfe7a.  v6:= temp @kind object;
  #L3cfe7c.  v7:= 0I;
  #L3cfe7e.  if v6 != 0 then goto L3cfeac;
  #L3cfe82.  v0:= new `java.io.FileInputStream`;
  #L3cfe86.  call `<init>`(v0, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cfe8c.  call temp:= `decodeStream`(v0, v7, v4) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3cfe92.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3cfe98.  goto L3cfeac;
  #L3cfe9a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3cfe9c.  call `printStackTrace`(v0) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L3cfea2.  goto L3cfeac;
  #L3cfea4.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L3cfea6.  call `printStackTrace`(v0) @signature `Ljava/io/FileNotFoundException;.printStackTrace:()V` @kind virtual;
  #L3cfeac.  v0:= v4.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L3cfeb0.  v8:= v4.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L3cfeb4.  if v8 < 0 then goto L3cfebc;
  #L3cfeb8.  if v0 >= 0 then goto L3cfed4;
  #L3cfebc.  call temp:= `decodeFile`(v3) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;)Landroid/graphics/Bitmap;` @kind static;
  #L3cfec2.  v0:= temp @kind object;
  #L3cfec4.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3cfeca.  v8:= temp;
  #L3cfecc.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3cfed2.  v0:= temp;
  #L3cfed4.  v9:= (`float`) v8 @kind i2f;
  #L3cfed6.  v10:= (`float`) v0 @kind i2f;
  #L3cfed8.  v11:= v9 / v10 @kind float;
  #L3cfedc.  v12:= v1 / v2 @kind float;
  #L3cfee0.  v13:= fcmpl(v10, v2);
  #L3cfee4.  if v13 > 0 then goto L3cfef6;
  #L3cfee8.  v13:= fcmpl(v9, v1);
  #L3cfeec.  if v13 <= 0 then goto L3cfef2;
  #L3cfef0.  goto L3cfef6;
  #L3cfef2.  v1:= v0;
  #L3cfef4.  goto L3cff26;
  #L3cfef6.  v0:= fcmpg(v11, v12);
  #L3cfefa.  if v0 >= 0 then goto L3cff0c;
  #L3cfefe.  v0:= v2 / v10 @kind float;
  #L3cff02.  v0:= v0 * v9 @kind float;
  #L3cff06.  v8:= (`int`) v0 @kind f2i;
  #L3cff08.  v0:= (`int`) v2 @kind f2i;
  #L3cff0a.  goto L3cfef2;
  #L3cff0c.  v0:= fcmpl(v11, v12);
  #L3cff10.  if v0 <= 0 then goto L3cff20;
  #L3cff14.  v0:= v1 / v9 @kind float;
  #L3cff18.  v0:= v0 * v10 @kind float;
  #L3cff1c.  v0:= (`int`) v0 @kind f2i;
  #L3cff1e.  goto L3cff22;
  #L3cff20.  v0:= (`int`) v2 @kind f2i;
  #L3cff22.  v8:= (`int`) v1 @kind f2i;
  #L3cff24.  goto L3cfef2;
  #L3cff26.  call temp:= `calculateInSampleSize`(v4, v8, v1) @signature `Lid/zelory/compressor/ImageUtil;.calculateInSampleSize:(Landroid/graphics/BitmapFactory$Options;II)I` @kind static;
  #L3cff2c.  v0:= temp;
  #L3cff2e.  v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v0;
  #L3cff32.  v2:= 0I;
  #L3cff34.  v4.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v2 @kind boolean;
  #L3cff38.  v4.`android.graphics.BitmapFactory$Options.inPurgeable` @type ^`boolean` := v5 @kind boolean;
  #L3cff3c.  v4.`android.graphics.BitmapFactory$Options.inInputShareable` @type ^`boolean` := v5 @kind boolean;
  #L3cff40.  v0:= 16384I;
  #L3cff44.  v0:= new `byte`[v0];
  #L3cff48.  v4.`android.graphics.BitmapFactory$Options.inTempStorage` @type ^`byte`[] := v0 @kind object;
  #L3cff4c.  call temp:= `decodeFile`(v3, v4) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3cff52.  v6:= temp @kind object;
  #L3cff54.  if v6 != 0 then goto L3cff8c;
  #L3cff58.  v0:= new `java.io.FileInputStream`;
  #L3cff5c.  call `<init>`(v0, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cff62.  call temp:= `decodeStream`(v0, v7, v4) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3cff68.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3cff6e.  goto L3cff8c;
  #L3cff70.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3cff72.  call `printStackTrace`(v0) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L3cff78.  goto L3cff8c;
  #L3cff7a.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L3cff7c.  call `printStackTrace`(v0) @signature `Ljava/io/FileNotFoundException;.printStackTrace:()V` @kind virtual;
  #L3cff82.  goto L3cff8c;
  #L3cff84.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L3cff86.  call `printStackTrace`(v0) @signature `Ljava/lang/OutOfMemoryError;.printStackTrace:()V` @kind virtual;
  #L3cff8c.  v5:= v20 @kind object;
  #L3cff90.  call temp:= `createBitmap`(v8, v1, v5) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3cff96.  v7:= temp @kind object;
  #L3cff98.  goto L3cffa4;
  #L3cff9a.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L3cff9c.  v5:= v0 @kind object;
  #L3cff9e.  call `printStackTrace`(v5) @signature `Ljava/lang/OutOfMemoryError;.printStackTrace:()V` @kind virtual;
  #L3cffa4.  v0:= (`float`) v8 @kind i2f;
  #L3cffa6.  v5:= v4.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L3cffaa.  v5:= (`float`) v5 @kind i2f;
  #L3cffac.  v0:= v0 / v5 @kind float;
  #L3cffae.  v1:= (`float`) v1 @kind i2f;
  #L3cffb0.  v4:= v4.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L3cffb4.  v4:= (`float`) v4 @kind i2f;
  #L3cffb6.  v1:= v1 / v4 @kind float;
  #L3cffb8.  v4:= new `android.graphics.Matrix`;
  #L3cffbc.  call `<init>`(v4) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3cffc2.  v5:= 0I;
  #L3cffc4.  call `setScale`(v4, v0, v1, v5, v5) @signature `Landroid/graphics/Matrix;.setScale:(FFFF)V` @kind virtual;
  #L3cffca.  v0:= new `android.graphics.Canvas`;
  #L3cffce.  call `<init>`(v0, v7) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3cffd4.  call `setMatrix`(v0, v4) @signature `Landroid/graphics/Canvas;.setMatrix:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3cffda.  v1:= new `android.graphics.Paint`;
  #L3cffde.  v4:= 2I;
  #L3cffe0.  call `<init>`(v1, v4) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3cffe6.  call `drawBitmap`(v0, v6, v5, v5, v1) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3cffec.  v0:= new `android.media.ExifInterface`;
  #L3cfff0.  call `<init>`(v0, v3) @signature `Landroid/media/ExifInterface;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cfff6.  v1:= "Orientation" @kind object;
  #L3cfffa.  call temp:= `getAttributeInt`(v0, v1, v2) @signature `Landroid/media/ExifInterface;.getAttributeInt:(Ljava/lang/String;I)I` @kind virtual;
  #L3d0000.  v0:= temp;
  #L3d0002.  v14:= new `android.graphics.Matrix`;
  #L3d0006.  call `<init>`(v14) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3d000c.  v1:= 6I;
  #L3d000e.  if v0 != v1 then goto L3d001e;
  #L3d0012.  v0:= 90.0F;
  #L3d0016.  call temp:= `postRotate`(v14, v0) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L3d001c.  goto L3d0042;
  #L3d001e.  v1:= 3I;
  #L3d0020.  if v0 != v1 then goto L3d0030;
  #L3d0024.  v0:= 180.0F;
  #L3d0028.  call temp:= `postRotate`(v14, v0) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L3d002e.  goto L3d0042;
  #L3d0030.  v1:= 8I;
  #L3d0034.  if v0 != v1 then goto L3d0042;
  #L3d0038.  v0:= 270.0F;
  #L3d003c.  call temp:= `postRotate`(v14, v0) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L3d0042.  v10:= 0I;
  #L3d0044.  v11:= 0I;
  #L3d0046.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3d004c.  v12:= temp;
  #L3d004e.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3d0054.  v13:= temp;
  #L3d0056.  v15:= 1I;
  #L3d0058.  v9:= v7 @kind object;
  #L3d005a.  call temp:= `createBitmap`(v9, v10, v11, v12, v13, v14, v15) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L3d0060.  v7:= temp @kind object;
  #L3d0062.  goto L3d006c;
  #L3d0064.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3d0066.  call `printStackTrace`(v0) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L3d006c.  return v7 @kind object;
  catch `java.io.FileNotFoundException` @[L3cfe82..L3cfe98] goto L3cfea4;
  catch `java.io.IOException` @[L3cfe82..L3cfe98] goto L3cfe9a;
  catch `java.lang.OutOfMemoryError` @[L3cff4c..L3cff54] goto L3cff84;
  catch `java.io.FileNotFoundException` @[L3cff58..L3cff6e] goto L3cff7a;
  catch `java.io.IOException` @[L3cff58..L3cff6e] goto L3cff70;
  catch `java.lang.OutOfMemoryError` @[L3cff58..L3cff6e] goto L3cff84;
  catch `java.lang.OutOfMemoryError` @[L3cff72..L3cff82] goto L3cff84;
  catch `java.lang.OutOfMemoryError` @[L3cff90..L3cff98] goto L3cff9a;
  catch `java.io.IOException` @[L3cffec..L3d0062] goto L3d0064;
}
