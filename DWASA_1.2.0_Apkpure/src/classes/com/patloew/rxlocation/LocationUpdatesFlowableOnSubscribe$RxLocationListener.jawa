record `com.patloew.rxlocation.LocationUpdatesFlowableOnSubscribe$RxLocationListener` @kind class @AccessFlag  extends `com.google.android.gms.location.LocationListener` @kind interface {
  `io.reactivex.FlowableEmitter` `com.patloew.rxlocation.LocationUpdatesFlowableOnSubscribe$RxLocationListener.emitter` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.patloew.rxlocation.LocationUpdatesFlowableOnSubscribe$RxLocationListener` v0 @kind this, `io.reactivex.FlowableEmitter` v1 @kind object) @signature `Lcom/patloew/rxlocation/LocationUpdatesFlowableOnSubscribe$RxLocationListener;.<init>:(Lio/reactivex/FlowableEmitter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L364d9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L364da2.  v0.`com.patloew.rxlocation.LocationUpdatesFlowableOnSubscribe$RxLocationListener.emitter` @type ^`io.reactivex.FlowableEmitter` := v1 @kind object;
  #L364da6.  return @kind void;
}
procedure `void` `onLocationChanged`(`com.patloew.rxlocation.LocationUpdatesFlowableOnSubscribe$RxLocationListener` v1 @kind this, `android.location.Location` v2 @kind object) @signature `Lcom/patloew/rxlocation/LocationUpdatesFlowableOnSubscribe$RxLocationListener;.onLocationChanged:(Landroid/location/Location;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L364db8.  v0:= v1.`com.patloew.rxlocation.LocationUpdatesFlowableOnSubscribe$RxLocationListener.emitter` @type ^`io.reactivex.FlowableEmitter` @kind object;
  #L364dbc.  if v0 == 0 then goto L364dc6;
  #L364dc0.  call `onNext`(v0, v2) @signature `Lio/reactivex/FlowableEmitter;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L364dc6.  return @kind void;
}
procedure `void` `onUnsubscribed`(`com.patloew.rxlocation.LocationUpdatesFlowableOnSubscribe$RxLocationListener` v1 @kind this) @signature `Lcom/patloew/rxlocation/LocationUpdatesFlowableOnSubscribe$RxLocationListener;.onUnsubscribed:()V` @AccessFlag  {
    temp;
    v0;

  #L364dd8.  v0:= 0I;
  #L364dda.  v1.`com.patloew.rxlocation.LocationUpdatesFlowableOnSubscribe$RxLocationListener.emitter` @type ^`io.reactivex.FlowableEmitter` := v0 @kind object;
  #L364dde.  return @kind void;
}
