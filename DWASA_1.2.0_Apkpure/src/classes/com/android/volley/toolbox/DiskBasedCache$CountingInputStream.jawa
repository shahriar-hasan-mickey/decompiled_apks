record `com.android.volley.toolbox.DiskBasedCache$CountingInputStream` @kind class @AccessFlag  extends `java.io.FilterInputStream` @kind class {
  `int` `com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L29ffa8.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L29ffae.  v1:= 0I;
  #L29ffb0.  v0.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int` := v1;
  #L29ffb4.  return @kind void;
}
procedure `void` `<init>`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `com.android.volley.toolbox.DiskBasedCache$1` v2 @kind object) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.<init>:(Ljava/io/InputStream;Lcom/android/volley/toolbox/DiskBasedCache$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L29ffc8.  call `<init>`(v0, v1) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L29ffce.  return @kind void;
}
procedure `int` `access$100`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v0 @kind object) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.access$100:(Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L29ff38.  v0:= v0.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int`;
  #L29ff3c.  return v0;
}
procedure `int` `read`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v2 @kind this) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29ff50.  call temp:= `read`(v2) @signature `Ljava/io/FilterInputStream;.read:()I` @kind super;
  #L29ff56.  v0:= temp;
  #L29ff58.  v1:= -1I;
  #L29ff5a.  if v0 == v1 then goto L29ff6a;
  #L29ff5e.  v1:= v2.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int`;
  #L29ff62.  v1:= v1 + 1;
  #L29ff66.  v2.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int` := v1;
  #L29ff6a.  return v0;
}
procedure `int` `read`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;

  #L29ff7c.  call temp:= `read`(v0, v1, v2, v3) @signature `Ljava/io/FilterInputStream;.read:([BII)I` @kind super;
  #L29ff82.  v1:= temp;
  #L29ff84.  v2:= -1I;
  #L29ff86.  if v1 == v2 then goto L29ff94;
  #L29ff8a.  v2:= v0.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int`;
  #L29ff8e.  v2:= v2 + v1 @kind int;
  #L29ff90.  v0.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int` := v2;
  #L29ff94.  return v1;
}
