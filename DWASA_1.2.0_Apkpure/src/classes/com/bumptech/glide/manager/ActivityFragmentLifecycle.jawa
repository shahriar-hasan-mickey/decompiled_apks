record `com.bumptech.glide.manager.ActivityFragmentLifecycle` @kind class @AccessFlag  extends `com.bumptech.glide.manager.Lifecycle` @kind interface {
  `boolean` `com.bumptech.glide.manager.ActivityFragmentLifecycle.isDestroyed` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.manager.ActivityFragmentLifecycle.isStarted` @AccessFlag PRIVATE;
  `java.util.Set` `com.bumptech.glide.manager.ActivityFragmentLifecycle.lifecycleListeners` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.ActivityFragmentLifecycle` v1 @kind this) @signature `Lcom/bumptech/glide/manager/ActivityFragmentLifecycle;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2c58dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c58e2.  v0:= new `java.util.WeakHashMap`;
  #L2c58e6.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L2c58ec.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L2c58f2.  v0:= temp @kind object;
  #L2c58f4.  v1.`com.bumptech.glide.manager.ActivityFragmentLifecycle.lifecycleListeners` @type ^`java.util.Set` := v0 @kind object;
  #L2c58f8.  return @kind void;
}
procedure `void` `addListener`(`com.bumptech.glide.manager.ActivityFragmentLifecycle` v1 @kind this, `com.bumptech.glide.manager.LifecycleListener` v2 @kind object) @signature `Lcom/bumptech/glide/manager/ActivityFragmentLifecycle;.addListener:(Lcom/bumptech/glide/manager/LifecycleListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c590c.  v0:= v1.`com.bumptech.glide.manager.ActivityFragmentLifecycle.lifecycleListeners` @type ^`java.util.Set` @kind object;
  #L2c5910.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2c5916.  v0:= v1.`com.bumptech.glide.manager.ActivityFragmentLifecycle.isDestroyed` @type ^`boolean` @kind boolean;
  #L2c591a.  if v0 == 0 then goto L2c5926;
  #L2c591e.  call `onDestroy`(v2) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onDestroy:()V` @kind interface;
  #L2c5924.  goto L2c593c;
  #L2c5926.  v0:= v1.`com.bumptech.glide.manager.ActivityFragmentLifecycle.isStarted` @type ^`boolean` @kind boolean;
  #L2c592a.  if v0 == 0 then goto L2c5936;
  #L2c592e.  call `onStart`(v2) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStart:()V` @kind interface;
  #L2c5934.  goto L2c593c;
  #L2c5936.  call `onStop`(v2) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStop:()V` @kind interface;
  #L2c593c.  return @kind void;
}
procedure `void` `onDestroy`(`com.bumptech.glide.manager.ActivityFragmentLifecycle` v2 @kind this) @signature `Lcom/bumptech/glide/manager/ActivityFragmentLifecycle;.onDestroy:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2c5950.  v0:= 1I;
  #L2c5952.  v2.`com.bumptech.glide.manager.ActivityFragmentLifecycle.isDestroyed` @type ^`boolean` := v0 @kind boolean;
  #L2c5956.  v0:= v2.`com.bumptech.glide.manager.ActivityFragmentLifecycle.lifecycleListeners` @type ^`java.util.Set` @kind object;
  #L2c595a.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L2c5960.  v0:= temp @kind object;
  #L2c5962.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c5968.  v0:= temp @kind object;
  #L2c596a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c5970.  v1:= temp;
  #L2c5972.  if v1 == 0 then goto L2c598a;
  #L2c5976.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c597c.  v1:= temp @kind object;
  #L2c597e.  v1:= (`com.bumptech.glide.manager.LifecycleListener`) v1 @kind object;
  #L2c5982.  call `onDestroy`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onDestroy:()V` @kind interface;
  #L2c5988.  goto L2c596a;
  #L2c598a.  return @kind void;
}
procedure `void` `onStart`(`com.bumptech.glide.manager.ActivityFragmentLifecycle` v2 @kind this) @signature `Lcom/bumptech/glide/manager/ActivityFragmentLifecycle;.onStart:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2c599c.  v0:= 1I;
  #L2c599e.  v2.`com.bumptech.glide.manager.ActivityFragmentLifecycle.isStarted` @type ^`boolean` := v0 @kind boolean;
  #L2c59a2.  v0:= v2.`com.bumptech.glide.manager.ActivityFragmentLifecycle.lifecycleListeners` @type ^`java.util.Set` @kind object;
  #L2c59a6.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L2c59ac.  v0:= temp @kind object;
  #L2c59ae.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c59b4.  v0:= temp @kind object;
  #L2c59b6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c59bc.  v1:= temp;
  #L2c59be.  if v1 == 0 then goto L2c59d6;
  #L2c59c2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c59c8.  v1:= temp @kind object;
  #L2c59ca.  v1:= (`com.bumptech.glide.manager.LifecycleListener`) v1 @kind object;
  #L2c59ce.  call `onStart`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStart:()V` @kind interface;
  #L2c59d4.  goto L2c59b6;
  #L2c59d6.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.manager.ActivityFragmentLifecycle` v2 @kind this) @signature `Lcom/bumptech/glide/manager/ActivityFragmentLifecycle;.onStop:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2c59e8.  v0:= 0I;
  #L2c59ea.  v2.`com.bumptech.glide.manager.ActivityFragmentLifecycle.isStarted` @type ^`boolean` := v0 @kind boolean;
  #L2c59ee.  v0:= v2.`com.bumptech.glide.manager.ActivityFragmentLifecycle.lifecycleListeners` @type ^`java.util.Set` @kind object;
  #L2c59f2.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L2c59f8.  v0:= temp @kind object;
  #L2c59fa.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c5a00.  v0:= temp @kind object;
  #L2c5a02.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c5a08.  v1:= temp;
  #L2c5a0a.  if v1 == 0 then goto L2c5a22;
  #L2c5a0e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c5a14.  v1:= temp @kind object;
  #L2c5a16.  v1:= (`com.bumptech.glide.manager.LifecycleListener`) v1 @kind object;
  #L2c5a1a.  call `onStop`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStop:()V` @kind interface;
  #L2c5a20.  goto L2c5a02;
  #L2c5a22.  return @kind void;
}
