record `com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode` @kind class @AccessFlag  extends `com.bumptech.glide.manager.RequestManagerTreeNode` @kind interface {
  `com.bumptech.glide.manager.RequestManagerFragment` `com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode` v0 @kind this, `com.bumptech.glide.manager.RequestManagerFragment` v1 @kind object) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$FragmentRequestManagerTreeNode;.<init>:(Lcom/bumptech/glide/manager/RequestManagerFragment;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c5dd0.  v0.`com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode.this$0` @type ^`com.bumptech.glide.manager.RequestManagerFragment` := v1 @kind object;
  #L2c5dd4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c5dda.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode` v0 @kind this, `com.bumptech.glide.manager.RequestManagerFragment` v1 @kind object, `com.bumptech.glide.manager.RequestManagerFragment$1` v2 @kind object) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$FragmentRequestManagerTreeNode;.<init>:(Lcom/bumptech/glide/manager/RequestManagerFragment;Lcom/bumptech/glide/manager/RequestManagerFragment$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2c5dec.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$FragmentRequestManagerTreeNode;.<init>:(Lcom/bumptech/glide/manager/RequestManagerFragment;)V` @kind direct;
  #L2c5df2.  return @kind void;
}
procedure `java.util.Set` `getDescendants`(`com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode` v4 @kind this) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$FragmentRequestManagerTreeNode;.getDescendants:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c5d64.  v0:= v4.`com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode.this$0` @type ^`com.bumptech.glide.manager.RequestManagerFragment` @kind object;
  #L2c5d68.  call temp:= `getDescendantRequestManagerFragments`(v0) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment;.getDescendantRequestManagerFragments:()Ljava/util/Set;` @kind virtual;
  #L2c5d6e.  v0:= temp @kind object;
  #L2c5d70.  v1:= new `java.util.HashSet`;
  #L2c5d74.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L2c5d7a.  v2:= temp;
  #L2c5d7c.  call `<init>`(v1, v2) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L2c5d82.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c5d88.  v0:= temp @kind object;
  #L2c5d8a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c5d90.  v2:= temp;
  #L2c5d92.  if v2 == 0 then goto L2c5dbe;
  #L2c5d96.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c5d9c.  v2:= temp @kind object;
  #L2c5d9e.  v2:= (`com.bumptech.glide.manager.RequestManagerFragment`) v2 @kind object;
  #L2c5da2.  call temp:= `getRequestManager`(v2) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment;.getRequestManager:()Lcom/bumptech/glide/RequestManager;` @kind virtual;
  #L2c5da8.  v3:= temp @kind object;
  #L2c5daa.  if v3 == 0 then goto L2c5d8a;
  #L2c5dae.  call temp:= `getRequestManager`(v2) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment;.getRequestManager:()Lcom/bumptech/glide/RequestManager;` @kind virtual;
  #L2c5db4.  v2:= temp @kind object;
  #L2c5db6.  call temp:= `add`(v1, v2) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c5dbc.  goto L2c5d8a;
  #L2c5dbe.  return v1 @kind object;
}
