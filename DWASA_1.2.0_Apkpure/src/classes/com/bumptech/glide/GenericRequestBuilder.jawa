record `com.bumptech.glide.GenericRequestBuilder` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface {
  `com.bumptech.glide.request.animation.GlideAnimationFactory` `com.bumptech.glide.GenericRequestBuilder.animationFactory` @AccessFlag PRIVATE;
  `android.content.Context` `com.bumptech.glide.GenericRequestBuilder.context` @AccessFlag PROTECTED_FINAL;
  `com.bumptech.glide.load.engine.DiskCacheStrategy` `com.bumptech.glide.GenericRequestBuilder.diskCacheStrategy` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.GenericRequestBuilder.errorId` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.GenericRequestBuilder.errorPlaceholder` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.GenericRequestBuilder.fallbackDrawable` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.GenericRequestBuilder.fallbackResource` @AccessFlag PRIVATE;
  `com.bumptech.glide.Glide` `com.bumptech.glide.GenericRequestBuilder.glide` @AccessFlag PROTECTED_FINAL;
  `boolean` `com.bumptech.glide.GenericRequestBuilder.isCacheable` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.GenericRequestBuilder.isModelSet` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.GenericRequestBuilder.isThumbnailBuilt` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.GenericRequestBuilder.isTransformationSet` @AccessFlag PRIVATE;
  `com.bumptech.glide.manager.Lifecycle` `com.bumptech.glide.GenericRequestBuilder.lifecycle` @AccessFlag PROTECTED_FINAL;
  `com.bumptech.glide.provider.ChildLoadProvider` `com.bumptech.glide.GenericRequestBuilder.loadProvider` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.GenericRequestBuilder.model` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.GenericRequestBuilder.modelClass` @AccessFlag PROTECTED_FINAL;
  `int` `com.bumptech.glide.GenericRequestBuilder.overrideHeight` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.GenericRequestBuilder.overrideWidth` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.GenericRequestBuilder.placeholderDrawable` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.GenericRequestBuilder.placeholderId` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.GenericRequestBuilder.priority` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.RequestListener` `com.bumptech.glide.GenericRequestBuilder.requestListener` @AccessFlag PRIVATE;
  `com.bumptech.glide.manager.RequestTracker` `com.bumptech.glide.GenericRequestBuilder.requestTracker` @AccessFlag PROTECTED_FINAL;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.GenericRequestBuilder.signature` @AccessFlag PRIVATE;
  `java.lang.Float` `com.bumptech.glide.GenericRequestBuilder.sizeMultiplier` @AccessFlag PRIVATE;
  `java.lang.Float` `com.bumptech.glide.GenericRequestBuilder.thumbSizeMultiplier` @AccessFlag PRIVATE;
  `com.bumptech.glide.GenericRequestBuilder` `com.bumptech.glide.GenericRequestBuilder.thumbnailRequestBuilder` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.GenericRequestBuilder.transcodeClass` @AccessFlag PROTECTED_FINAL;
  `com.bumptech.glide.load.Transformation` `com.bumptech.glide.GenericRequestBuilder.transformation` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.GenericRequestBuilder` v2 @kind this, `android.content.Context` v3 @kind object, `java.lang.Class` v4 @kind object, `com.bumptech.glide.provider.LoadProvider` v5 @kind object, `java.lang.Class` v6 @kind object, `com.bumptech.glide.Glide` v7 @kind object, `com.bumptech.glide.manager.RequestTracker` v8 @kind object, `com.bumptech.glide.manager.Lifecycle` v9 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.<init>:(Landroid/content/Context;Ljava/lang/Class;Lcom/bumptech/glide/provider/LoadProvider;Ljava/lang/Class;Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/manager/RequestTracker;Lcom/bumptech/glide/manager/Lifecycle;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2afb60.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2afb66.  call temp:= `obtain`() @signature `Lcom/bumptech/glide/signature/EmptySignature;.obtain:()Lcom/bumptech/glide/signature/EmptySignature;` @kind static;
  #L2afb6c.  v0:= temp @kind object;
  #L2afb6e.  v2.`com.bumptech.glide.GenericRequestBuilder.signature` @type ^`com.bumptech.glide.load.Key` := v0 @kind object;
  #L2afb72.  v0:= 1.0F;
  #L2afb76.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2afb7c.  v0:= temp @kind object;
  #L2afb7e.  v2.`com.bumptech.glide.GenericRequestBuilder.sizeMultiplier` @type ^`java.lang.Float` := v0 @kind object;
  #L2afb82.  v0:= 0I;
  #L2afb84.  v2.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L2afb88.  v1:= 1I;
  #L2afb8a.  v2.`com.bumptech.glide.GenericRequestBuilder.isCacheable` @type ^`boolean` := v1 @kind boolean;
  #L2afb8e.  call temp:= `getFactory`() @signature `Lcom/bumptech/glide/request/animation/NoAnimation;.getFactory:()Lcom/bumptech/glide/request/animation/GlideAnimationFactory;` @kind static;
  #L2afb94.  v1:= temp @kind object;
  #L2afb96.  v2.`com.bumptech.glide.GenericRequestBuilder.animationFactory` @type ^`com.bumptech.glide.request.animation.GlideAnimationFactory` := v1 @kind object;
  #L2afb9a.  v1:= -1I;
  #L2afb9c.  v2.`com.bumptech.glide.GenericRequestBuilder.overrideHeight` @type ^`int` := v1;
  #L2afba0.  v2.`com.bumptech.glide.GenericRequestBuilder.overrideWidth` @type ^`int` := v1;
  #L2afba4.  v1:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.RESULT` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L2afba8.  v2.`com.bumptech.glide.GenericRequestBuilder.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v1 @kind object;
  #L2afbac.  call temp:= `get`() @signature `Lcom/bumptech/glide/load/resource/UnitTransformation;.get:()Lcom/bumptech/glide/load/resource/UnitTransformation;` @kind static;
  #L2afbb2.  v1:= temp @kind object;
  #L2afbb4.  v2.`com.bumptech.glide.GenericRequestBuilder.transformation` @type ^`com.bumptech.glide.load.Transformation` := v1 @kind object;
  #L2afbb8.  v2.`com.bumptech.glide.GenericRequestBuilder.context` @type ^`android.content.Context` := v3 @kind object;
  #L2afbbc.  v2.`com.bumptech.glide.GenericRequestBuilder.modelClass` @type ^`java.lang.Class` := v4 @kind object;
  #L2afbc0.  v2.`com.bumptech.glide.GenericRequestBuilder.transcodeClass` @type ^`java.lang.Class` := v6 @kind object;
  #L2afbc4.  v2.`com.bumptech.glide.GenericRequestBuilder.glide` @type ^`com.bumptech.glide.Glide` := v7 @kind object;
  #L2afbc8.  v2.`com.bumptech.glide.GenericRequestBuilder.requestTracker` @type ^`com.bumptech.glide.manager.RequestTracker` := v8 @kind object;
  #L2afbcc.  v2.`com.bumptech.glide.GenericRequestBuilder.lifecycle` @type ^`com.bumptech.glide.manager.Lifecycle` := v9 @kind object;
  #L2afbd0.  if v5 == 0 then goto L2afbde;
  #L2afbd4.  v0:= new `com.bumptech.glide.provider.ChildLoadProvider`;
  #L2afbd8.  call `<init>`(v0, v5) @signature `Lcom/bumptech/glide/provider/ChildLoadProvider;.<init>:(Lcom/bumptech/glide/provider/LoadProvider;)V` @kind direct;
  #L2afbde.  v2.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` := v0 @kind object;
  #L2afbe2.  if v3 == 0 then goto L2afc02;
  #L2afbe6.  if v4 == 0 then goto L2afc00;
  #L2afbea.  if v5 == 0 then goto L2afbf0;
  #L2afbee.  goto L2afc00;
  #L2afbf0.  v3:= new `java.lang.NullPointerException`;
  #L2afbf4.  v4:= "LoadProvider must not be null" @kind object;
  #L2afbf8.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2afbfe.  throw v3;
  #L2afc00.  return @kind void;
  #L2afc02.  v3:= new `java.lang.NullPointerException`;
  #L2afc06.  v4:= "Context can't be null" @kind object;
  #L2afc0a.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2afc10.  throw v3;
}
procedure `void` `<init>`(`com.bumptech.glide.GenericRequestBuilder` v8 @kind this, `com.bumptech.glide.provider.LoadProvider` v9 @kind object, `java.lang.Class` v10 @kind object, `com.bumptech.glide.GenericRequestBuilder` v11 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.<init>:(Lcom/bumptech/glide/provider/LoadProvider;Ljava/lang/Class;Lcom/bumptech/glide/GenericRequestBuilder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2afc24.  v1:= v11.`com.bumptech.glide.GenericRequestBuilder.context` @type ^`android.content.Context` @kind object;
  #L2afc28.  v2:= v11.`com.bumptech.glide.GenericRequestBuilder.modelClass` @type ^`java.lang.Class` @kind object;
  #L2afc2c.  v5:= v11.`com.bumptech.glide.GenericRequestBuilder.glide` @type ^`com.bumptech.glide.Glide` @kind object;
  #L2afc30.  v6:= v11.`com.bumptech.glide.GenericRequestBuilder.requestTracker` @type ^`com.bumptech.glide.manager.RequestTracker` @kind object;
  #L2afc34.  v7:= v11.`com.bumptech.glide.GenericRequestBuilder.lifecycle` @type ^`com.bumptech.glide.manager.Lifecycle` @kind object;
  #L2afc38.  v0:= v8 @kind object;
  #L2afc3a.  v3:= v9 @kind object;
  #L2afc3c.  v4:= v10 @kind object;
  #L2afc3e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.<init>:(Landroid/content/Context;Ljava/lang/Class;Lcom/bumptech/glide/provider/LoadProvider;Ljava/lang/Class;Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/manager/RequestTracker;Lcom/bumptech/glide/manager/Lifecycle;)V` @kind direct;
  #L2afc44.  v9:= v11.`com.bumptech.glide.GenericRequestBuilder.model` @type ^`java.lang.Object` @kind object;
  #L2afc48.  v8.`com.bumptech.glide.GenericRequestBuilder.model` @type ^`java.lang.Object` := v9 @kind object;
  #L2afc4c.  v9:= v11.`com.bumptech.glide.GenericRequestBuilder.isModelSet` @type ^`boolean` @kind boolean;
  #L2afc50.  v8.`com.bumptech.glide.GenericRequestBuilder.isModelSet` @type ^`boolean` := v9 @kind boolean;
  #L2afc54.  v9:= v11.`com.bumptech.glide.GenericRequestBuilder.signature` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L2afc58.  v8.`com.bumptech.glide.GenericRequestBuilder.signature` @type ^`com.bumptech.glide.load.Key` := v9 @kind object;
  #L2afc5c.  v9:= v11.`com.bumptech.glide.GenericRequestBuilder.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L2afc60.  v8.`com.bumptech.glide.GenericRequestBuilder.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v9 @kind object;
  #L2afc64.  v9:= v11.`com.bumptech.glide.GenericRequestBuilder.isCacheable` @type ^`boolean` @kind boolean;
  #L2afc68.  v8.`com.bumptech.glide.GenericRequestBuilder.isCacheable` @type ^`boolean` := v9 @kind boolean;
  #L2afc6c.  return @kind void;
}
procedure `com.bumptech.glide.request.Request` `buildRequest`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.request.target.Target` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.buildRequest:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2af7b8.  v0:= v1.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af7bc.  if v0 != 0 then goto L2af7c8;
  #L2af7c0.  v0:= `@@com.bumptech.glide.Priority.NORMAL` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af7c4.  v1.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L2af7c8.  v0:= 0I;
  #L2af7ca.  call temp:= `buildRequestRecursive`(v1, v2, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.buildRequestRecursive:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L2af7d0.  v2:= temp @kind object;
  #L2af7d2.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.Request` `buildRequestRecursive`(`com.bumptech.glide.GenericRequestBuilder` v3 @kind this, `com.bumptech.glide.request.target.Target` v4 @kind object, `com.bumptech.glide.request.ThumbnailRequestCoordinator` v5 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.buildRequestRecursive:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2af7e4.  v0:= v3.`com.bumptech.glide.GenericRequestBuilder.thumbnailRequestBuilder` @type ^`com.bumptech.glide.GenericRequestBuilder` @kind object;
  #L2af7e8.  if v0 == 0 then goto L2af8c0;
  #L2af7ec.  v1:= v3.`com.bumptech.glide.GenericRequestBuilder.isThumbnailBuilt` @type ^`boolean` @kind boolean;
  #L2af7f0.  if v1 != 0 then goto L2af8b0;
  #L2af7f4.  v0:= v0.`com.bumptech.glide.GenericRequestBuilder.animationFactory` @type ^`com.bumptech.glide.request.animation.GlideAnimationFactory` @kind object;
  #L2af7f8.  call temp:= `getFactory`() @signature `Lcom/bumptech/glide/request/animation/NoAnimation;.getFactory:()Lcom/bumptech/glide/request/animation/GlideAnimationFactory;` @kind static;
  #L2af7fe.  v1:= temp @kind object;
  #L2af800.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2af806.  v0:= temp;
  #L2af808.  if v0 == 0 then goto L2af818;
  #L2af80c.  v0:= v3.`com.bumptech.glide.GenericRequestBuilder.thumbnailRequestBuilder` @type ^`com.bumptech.glide.GenericRequestBuilder` @kind object;
  #L2af810.  v1:= v3.`com.bumptech.glide.GenericRequestBuilder.animationFactory` @type ^`com.bumptech.glide.request.animation.GlideAnimationFactory` @kind object;
  #L2af814.  v0.`com.bumptech.glide.GenericRequestBuilder.animationFactory` @type ^`com.bumptech.glide.request.animation.GlideAnimationFactory` := v1 @kind object;
  #L2af818.  v0:= v3.`com.bumptech.glide.GenericRequestBuilder.thumbnailRequestBuilder` @type ^`com.bumptech.glide.GenericRequestBuilder` @kind object;
  #L2af81c.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af820.  if v1 != 0 then goto L2af830;
  #L2af824.  call temp:= `getThumbnailPriority`(v3) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.getThumbnailPriority:()Lcom/bumptech/glide/Priority;` @kind direct;
  #L2af82a.  v1:= temp @kind object;
  #L2af82c.  v0.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` := v1 @kind object;
  #L2af830.  v0:= v3.`com.bumptech.glide.GenericRequestBuilder.overrideWidth` @type ^`int`;
  #L2af834.  v1:= v3.`com.bumptech.glide.GenericRequestBuilder.overrideHeight` @type ^`int`;
  #L2af838.  call temp:= `isValidDimensions`(v0, v1) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L2af83e.  v0:= temp;
  #L2af840.  if v0 == 0 then goto L2af86e;
  #L2af844.  v0:= v3.`com.bumptech.glide.GenericRequestBuilder.thumbnailRequestBuilder` @type ^`com.bumptech.glide.GenericRequestBuilder` @kind object;
  #L2af848.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.overrideWidth` @type ^`int`;
  #L2af84c.  v0:= v0.`com.bumptech.glide.GenericRequestBuilder.overrideHeight` @type ^`int`;
  #L2af850.  call temp:= `isValidDimensions`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L2af856.  v0:= temp;
  #L2af858.  if v0 != 0 then goto L2af86e;
  #L2af85c.  v0:= v3.`com.bumptech.glide.GenericRequestBuilder.thumbnailRequestBuilder` @type ^`com.bumptech.glide.GenericRequestBuilder` @kind object;
  #L2af860.  v1:= v3.`com.bumptech.glide.GenericRequestBuilder.overrideWidth` @type ^`int`;
  #L2af864.  v2:= v3.`com.bumptech.glide.GenericRequestBuilder.overrideHeight` @type ^`int`;
  #L2af868.  call temp:= `override`(v0, v1, v2) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.override:(II)Lcom/bumptech/glide/GenericRequestBuilder;` @kind virtual;
  #L2af86e.  v0:= new `com.bumptech.glide.request.ThumbnailRequestCoordinator`;
  #L2af872.  call `<init>`(v0, v5) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.<init>:(Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L2af878.  v5:= v3.`com.bumptech.glide.GenericRequestBuilder.sizeMultiplier` @type ^`java.lang.Float` @kind object;
  #L2af87c.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2af882.  v5:= temp;
  #L2af884.  v1:= v3.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af888.  call temp:= `obtainRequest`(v3, v4, v5, v1, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.obtainRequest:(Lcom/bumptech/glide/request/target/Target;FLcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/RequestCoordinator;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L2af88e.  v5:= temp @kind object;
  #L2af890.  v1:= 1I;
  #L2af892.  v3.`com.bumptech.glide.GenericRequestBuilder.isThumbnailBuilt` @type ^`boolean` := v1 @kind boolean;
  #L2af896.  v1:= v3.`com.bumptech.glide.GenericRequestBuilder.thumbnailRequestBuilder` @type ^`com.bumptech.glide.GenericRequestBuilder` @kind object;
  #L2af89a.  call temp:= `buildRequestRecursive`(v1, v4, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.buildRequestRecursive:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L2af8a0.  v4:= temp @kind object;
  #L2af8a2.  v1:= 0I;
  #L2af8a4.  v3.`com.bumptech.glide.GenericRequestBuilder.isThumbnailBuilt` @type ^`boolean` := v1 @kind boolean;
  #L2af8a8.  call `setRequests`(v0, v5, v4) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L2af8ae.  return v0 @kind object;
  #L2af8b0.  v4:= new `java.lang.IllegalStateException`;
  #L2af8b4.  v5:= "You cannot use a request as both the main request and a thumbnail, consider using clone() on the request(s) passed to thumbnail()" @kind object;
  #L2af8b8.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af8be.  throw v4;
  #L2af8c0.  v0:= v3.`com.bumptech.glide.GenericRequestBuilder.thumbSizeMultiplier` @type ^`java.lang.Float` @kind object;
  #L2af8c4.  if v0 == 0 then goto L2af90e;
  #L2af8c8.  v0:= new `com.bumptech.glide.request.ThumbnailRequestCoordinator`;
  #L2af8cc.  call `<init>`(v0, v5) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.<init>:(Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L2af8d2.  v5:= v3.`com.bumptech.glide.GenericRequestBuilder.sizeMultiplier` @type ^`java.lang.Float` @kind object;
  #L2af8d6.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2af8dc.  v5:= temp;
  #L2af8de.  v1:= v3.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af8e2.  call temp:= `obtainRequest`(v3, v4, v5, v1, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.obtainRequest:(Lcom/bumptech/glide/request/target/Target;FLcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/RequestCoordinator;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L2af8e8.  v5:= temp @kind object;
  #L2af8ea.  v1:= v3.`com.bumptech.glide.GenericRequestBuilder.thumbSizeMultiplier` @type ^`java.lang.Float` @kind object;
  #L2af8ee.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2af8f4.  v1:= temp;
  #L2af8f6.  call temp:= `getThumbnailPriority`(v3) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.getThumbnailPriority:()Lcom/bumptech/glide/Priority;` @kind direct;
  #L2af8fc.  v2:= temp @kind object;
  #L2af8fe.  call temp:= `obtainRequest`(v3, v4, v1, v2, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.obtainRequest:(Lcom/bumptech/glide/request/target/Target;FLcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/RequestCoordinator;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L2af904.  v4:= temp @kind object;
  #L2af906.  call `setRequests`(v0, v5, v4) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L2af90c.  return v0 @kind object;
  #L2af90e.  v0:= v3.`com.bumptech.glide.GenericRequestBuilder.sizeMultiplier` @type ^`java.lang.Float` @kind object;
  #L2af912.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2af918.  v0:= temp;
  #L2af91a.  v1:= v3.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af91e.  call temp:= `obtainRequest`(v3, v4, v0, v1, v5) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.obtainRequest:(Lcom/bumptech/glide/request/target/Target;FLcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/RequestCoordinator;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L2af924.  v4:= temp @kind object;
  #L2af926.  return v4 @kind object;
}
procedure `com.bumptech.glide.Priority` `getThumbnailPriority`(`com.bumptech.glide.GenericRequestBuilder` v2 @kind this) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.getThumbnailPriority:()Lcom/bumptech/glide/Priority;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2af738.  v0:= v2.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af73c.  v1:= `@@com.bumptech.glide.Priority.LOW` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af740.  if v0 != v1 then goto L2af74a;
  #L2af744.  v0:= `@@com.bumptech.glide.Priority.NORMAL` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af748.  goto L2af760;
  #L2af74a.  v0:= v2.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af74e.  v1:= `@@com.bumptech.glide.Priority.NORMAL` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af752.  if v0 != v1 then goto L2af75c;
  #L2af756.  v0:= `@@com.bumptech.glide.Priority.HIGH` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af75a.  goto L2af760;
  #L2af75c.  v0:= `@@com.bumptech.glide.Priority.IMMEDIATE` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2af760.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.Request` `obtainRequest`(`com.bumptech.glide.GenericRequestBuilder` v24 @kind this, `com.bumptech.glide.request.target.Target` v25 @kind object, `float` v26 , `com.bumptech.glide.Priority` v27 @kind object, `com.bumptech.glide.request.RequestCoordinator` v28 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.obtainRequest:(Lcom/bumptech/glide/request/target/Target;FLcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/RequestCoordinator;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L2af938.  v0:= v24 @kind object;
  #L2af93c.  v6:= v25 @kind object;
  #L2af940.  v7:= v26;
  #L2af944.  v5:= v27 @kind object;
  #L2af948.  v15:= v28 @kind object;
  #L2af94c.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` @kind object;
  #L2af950.  v2:= v0.`com.bumptech.glide.GenericRequestBuilder.model` @type ^`java.lang.Object` @kind object;
  #L2af954.  v3:= v0.`com.bumptech.glide.GenericRequestBuilder.signature` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L2af958.  v4:= v0.`com.bumptech.glide.GenericRequestBuilder.context` @type ^`android.content.Context` @kind object;
  #L2af95c.  v8:= v0.`com.bumptech.glide.GenericRequestBuilder.placeholderDrawable` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2af960.  v9:= v0.`com.bumptech.glide.GenericRequestBuilder.placeholderId` @type ^`int`;
  #L2af964.  v10:= v0.`com.bumptech.glide.GenericRequestBuilder.errorPlaceholder` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2af968.  v11:= v0.`com.bumptech.glide.GenericRequestBuilder.errorId` @type ^`int`;
  #L2af96c.  v12:= v0.`com.bumptech.glide.GenericRequestBuilder.fallbackDrawable` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2af970.  v13:= v0.`com.bumptech.glide.GenericRequestBuilder.fallbackResource` @type ^`int`;
  #L2af974.  v14:= v0.`com.bumptech.glide.GenericRequestBuilder.requestListener` @type ^`com.bumptech.glide.request.RequestListener` @kind object;
  #L2af978.  v25:= v1 @kind object;
  #L2af97c.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.glide` @type ^`com.bumptech.glide.Glide` @kind object;
  #L2af980.  call temp:= `getEngine`(v1) @signature `Lcom/bumptech/glide/Glide;.getEngine:()Lcom/bumptech/glide/load/engine/Engine;` @kind virtual;
  #L2af986.  v16:= temp @kind object;
  #L2af988.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.transformation` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L2af98c.  v17:= v1 @kind object;
  #L2af990.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.transcodeClass` @type ^`java.lang.Class` @kind object;
  #L2af994.  v18:= v1 @kind object;
  #L2af998.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.isCacheable` @type ^`boolean` @kind boolean;
  #L2af99c.  v19:= v1;
  #L2af9a0.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.animationFactory` @type ^`com.bumptech.glide.request.animation.GlideAnimationFactory` @kind object;
  #L2af9a4.  v20:= v1 @kind object;
  #L2af9a8.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.overrideWidth` @type ^`int`;
  #L2af9ac.  v21:= v1;
  #L2af9b0.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.overrideHeight` @type ^`int`;
  #L2af9b4.  v22:= v1;
  #L2af9b8.  v1:= v0.`com.bumptech.glide.GenericRequestBuilder.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L2af9bc.  v23:= v1 @kind object;
  #L2af9c0.  v1:= v25 @kind object;
  #L2af9c4.  call temp:= `obtain`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23) @signature `Lcom/bumptech/glide/request/GenericRequest;.obtain:(Lcom/bumptech/glide/provider/LoadProvider;Ljava/lang/Object;Lcom/bumptech/glide/load/Key;Landroid/content/Context;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;FLandroid/graphics/drawable/Drawable;ILandroid/graphics/drawable/Drawable;ILandroid/graphics/drawable/Drawable;ILcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/load/Transformation;Ljava/lang/Class;ZLcom/bumptech/glide/request/animation/GlideAnimationFactory;IILcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/GenericRequest;` @kind static;
  #L2af9ca.  v1:= temp @kind object;
  #L2af9cc.  return v1 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `animate`(`com.bumptech.glide.GenericRequestBuilder` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.animate:(I)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2af35c.  v0:= new `com.bumptech.glide.request.animation.ViewAnimationFactory`;
  #L2af360.  v1:= v2.`com.bumptech.glide.GenericRequestBuilder.context` @type ^`android.content.Context` @kind object;
  #L2af364.  call `<init>`(v0, v1, v3) @signature `Lcom/bumptech/glide/request/animation/ViewAnimationFactory;.<init>:(Landroid/content/Context;I)V` @kind direct;
  #L2af36a.  call temp:= `animate`(v2, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.animate:(Lcom/bumptech/glide/request/animation/GlideAnimationFactory;)Lcom/bumptech/glide/GenericRequestBuilder;` @kind virtual;
  #L2af370.  v3:= temp @kind object;
  #L2af372.  return v3 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `animate`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `android.view.animation.Animation` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.animate:(Landroid/view/animation/Animation;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af2e8.  v0:= new `com.bumptech.glide.request.animation.ViewAnimationFactory`;
  #L2af2ec.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/request/animation/ViewAnimationFactory;.<init>:(Landroid/view/animation/Animation;)V` @kind direct;
  #L2af2f2.  call temp:= `animate`(v1, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.animate:(Lcom/bumptech/glide/request/animation/GlideAnimationFactory;)Lcom/bumptech/glide/GenericRequestBuilder;` @kind virtual;
  #L2af2f8.  v2:= temp @kind object;
  #L2af2fa.  return v2 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `animate`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.request.animation.GlideAnimationFactory` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.animate:(Lcom/bumptech/glide/request/animation/GlideAnimationFactory;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag  {
    temp;
    v0;

  #L2af30c.  if v2 == 0 then goto L2af316;
  #L2af310.  v1.`com.bumptech.glide.GenericRequestBuilder.animationFactory` @type ^`com.bumptech.glide.request.animation.GlideAnimationFactory` := v2 @kind object;
  #L2af314.  return v1 @kind object;
  #L2af316.  v2:= new `java.lang.NullPointerException`;
  #L2af31a.  v0:= "Animation factory must not be null!" @kind object;
  #L2af31e.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af324.  throw v2;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `animate`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.animate:(Lcom/bumptech/glide/request/animation/ViewPropertyAnimation$Animator;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af338.  v0:= new `com.bumptech.glide.request.animation.ViewPropertyAnimationFactory`;
  #L2af33c.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/request/animation/ViewPropertyAnimationFactory;.<init>:(Lcom/bumptech/glide/request/animation/ViewPropertyAnimation$Animator;)V` @kind direct;
  #L2af342.  call temp:= `animate`(v1, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.animate:(Lcom/bumptech/glide/request/animation/GlideAnimationFactory;)Lcom/bumptech/glide/GenericRequestBuilder;` @kind virtual;
  #L2af348.  v2:= temp @kind object;
  #L2af34a.  return v2 @kind object;
}
procedure `void` `applyCenterCrop`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.applyCenterCrop:()V` @AccessFlag  {
    temp;

  #L2afc80.  return @kind void;
}
procedure `void` `applyFitCenter`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.applyFitCenter:()V` @AccessFlag  {
    temp;

  #L2afc94.  return @kind void;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `cacheDecoder`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.load.ResourceDecoder` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.cacheDecoder:(Lcom/bumptech/glide/load/ResourceDecoder;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af384.  v0:= v1.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` @kind object;
  #L2af388.  if v0 == 0 then goto L2af392;
  #L2af38c.  call `setCacheDecoder`(v0, v2) @signature `Lcom/bumptech/glide/provider/ChildLoadProvider;.setCacheDecoder:(Lcom/bumptech/glide/load/ResourceDecoder;)V` @kind virtual;
  #L2af392.  return v1 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `clone`(`com.bumptech.glide.GenericRequestBuilder` v2 @kind this) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.clone:()Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2af3a4.  call temp:= `clone`(v2) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind super;
  #L2af3aa.  v0:= temp @kind object;
  #L2af3ac.  v0:= (`com.bumptech.glide.GenericRequestBuilder`) v0 @kind object;
  #L2af3b0.  v1:= v2.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` @kind object;
  #L2af3b4.  if v1 == 0 then goto L2af3c6;
  #L2af3b8.  v1:= v2.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` @kind object;
  #L2af3bc.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/provider/ChildLoadProvider;.clone:()Lcom/bumptech/glide/provider/ChildLoadProvider;` @kind virtual;
  #L2af3c2.  v1:= temp @kind object;
  #L2af3c4.  goto L2af3c8;
  #L2af3c6.  v1:= 0I;
  #L2af3c8.  v0.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` := v1 @kind object;
  #L2af3cc.  return v0 @kind object;
  #L2af3ce.  v0:= Exception @type ^`java.lang.CloneNotSupportedException` @kind object;
  #L2af3d0.  v1:= new `java.lang.RuntimeException`;
  #L2af3d4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2af3da.  throw v1;
  catch `java.lang.CloneNotSupportedException` @[L2af3a4..L2af3cc] goto L2af3ce;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2afb44.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.clone:()Lcom/bumptech/glide/GenericRequestBuilder;` @kind virtual;
  #L2afb4a.  v0:= temp @kind object;
  #L2afb4c.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `decoder`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.load.ResourceDecoder` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.decoder:(Lcom/bumptech/glide/load/ResourceDecoder;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af3fc.  v0:= v1.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` @kind object;
  #L2af400.  if v0 == 0 then goto L2af40a;
  #L2af404.  call `setSourceDecoder`(v0, v2) @signature `Lcom/bumptech/glide/provider/ChildLoadProvider;.setSourceDecoder:(Lcom/bumptech/glide/load/ResourceDecoder;)V` @kind virtual;
  #L2af40a.  return v1 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `diskCacheStrategy`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `com.bumptech.glide.load.engine.DiskCacheStrategy` v1 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.diskCacheStrategy:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af41c.  v0.`com.bumptech.glide.GenericRequestBuilder.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v1 @kind object;
  #L2af420.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `dontAnimate`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.dontAnimate:()Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af434.  call temp:= `getFactory`() @signature `Lcom/bumptech/glide/request/animation/NoAnimation;.getFactory:()Lcom/bumptech/glide/request/animation/GlideAnimationFactory;` @kind static;
  #L2af43a.  v0:= temp @kind object;
  #L2af43c.  call temp:= `animate`(v1, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.animate:(Lcom/bumptech/glide/request/animation/GlideAnimationFactory;)Lcom/bumptech/glide/GenericRequestBuilder;` @kind virtual;
  #L2af442.  v0:= temp @kind object;
  #L2af444.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `dontTransform`(`com.bumptech.glide.GenericRequestBuilder` v3 @kind this) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.dontTransform:()Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2af458.  call temp:= `get`() @signature `Lcom/bumptech/glide/load/resource/UnitTransformation;.get:()Lcom/bumptech/glide/load/resource/UnitTransformation;` @kind static;
  #L2af45e.  v0:= temp @kind object;
  #L2af460.  v1:= 1I;
  #L2af462.  v1:= new `com.bumptech.glide.load.Transformation`[v1];
  #L2af466.  v2:= 0I;
  #L2af468.  v1[v2]:= v0 @kind object;
  #L2af46c.  call temp:= `transform`(v3, v1) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.transform:([Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/GenericRequestBuilder;` @kind virtual;
  #L2af472.  v0:= temp @kind object;
  #L2af474.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `encoder`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.load.ResourceEncoder` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.encoder:(Lcom/bumptech/glide/load/ResourceEncoder;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af488.  v0:= v1.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` @kind object;
  #L2af48c.  if v0 == 0 then goto L2af496;
  #L2af490.  call `setEncoder`(v0, v2) @signature `Lcom/bumptech/glide/provider/ChildLoadProvider;.setEncoder:(Lcom/bumptech/glide/load/ResourceEncoder;)V` @kind virtual;
  #L2af496.  return v1 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `error`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.error:(I)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af4c0.  v0.`com.bumptech.glide.GenericRequestBuilder.errorId` @type ^`int` := v1;
  #L2af4c4.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `error`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.error:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af4a8.  v0.`com.bumptech.glide.GenericRequestBuilder.errorPlaceholder` @type ^`android.graphics.drawable.Drawable` := v1 @kind object;
  #L2af4ac.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `fallback`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.fallback:(I)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af4f0.  v0.`com.bumptech.glide.GenericRequestBuilder.fallbackResource` @type ^`int` := v1;
  #L2af4f4.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `fallback`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.fallback:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af4d8.  v0.`com.bumptech.glide.GenericRequestBuilder.fallbackDrawable` @type ^`android.graphics.drawable.Drawable` := v1 @kind object;
  #L2af4dc.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.FutureTarget` `into`(`com.bumptech.glide.GenericRequestBuilder` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.into:(II)Lcom/bumptech/glide/request/FutureTarget;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2af774.  v0:= new `com.bumptech.glide.request.RequestFutureTarget`;
  #L2af778.  v1:= v2.`com.bumptech.glide.GenericRequestBuilder.glide` @type ^`com.bumptech.glide.Glide` @kind object;
  #L2af77c.  call temp:= `getMainHandler`(v1) @signature `Lcom/bumptech/glide/Glide;.getMainHandler:()Landroid/os/Handler;` @kind virtual;
  #L2af782.  v1:= temp @kind object;
  #L2af784.  call `<init>`(v0, v1, v3, v4) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<init>:(Landroid/os/Handler;II)V` @kind direct;
  #L2af78a.  v3:= v2.`com.bumptech.glide.GenericRequestBuilder.glide` @type ^`com.bumptech.glide.Glide` @kind object;
  #L2af78e.  call temp:= `getMainHandler`(v3) @signature `Lcom/bumptech/glide/Glide;.getMainHandler:()Landroid/os/Handler;` @kind virtual;
  #L2af794.  v3:= temp @kind object;
  #L2af796.  v4:= new `com.bumptech.glide.GenericRequestBuilder$1`;
  #L2af79a.  call `<init>`(v4, v2, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder$1;.<init>:(Lcom/bumptech/glide/GenericRequestBuilder;Lcom/bumptech/glide/request/RequestFutureTarget;)V` @kind direct;
  #L2af7a0.  call temp:= `post`(v3, v4) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L2af7a6.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `into`(`com.bumptech.glide.GenericRequestBuilder` v2 @kind this, `android.widget.ImageView` v3 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.into:(Landroid/widget/ImageView;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2af9e0.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L2af9e6.  if v3 == 0 then goto L2afa58;
  #L2af9ea.  v0:= v2.`com.bumptech.glide.GenericRequestBuilder.isTransformationSet` @type ^`boolean` @kind boolean;
  #L2af9ee.  if v0 != 0 then goto L2afa3e;
  #L2af9f2.  call temp:= `getScaleType`(v3) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L2af9f8.  v0:= temp @kind object;
  #L2af9fa.  if v0 == 0 then goto L2afa3e;
  #L2af9fe.  v0:= `@@com.bumptech.glide.GenericRequestBuilder$2.$SwitchMap$android$widget$ImageView$ScaleType` @type ^`int`[] @kind object;
  #L2afa02.  call temp:= `getScaleType`(v3) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L2afa08.  v1:= temp @kind object;
  #L2afa0a.  call temp:= `ordinal`(v1) @signature `Landroid/widget/ImageView$ScaleType;.ordinal:()I` @kind virtual;
  #L2afa10.  v1:= temp;
  #L2afa12.  v0:= v0[v1];
  #L2afa16.  v1:= 1I;
  #L2afa18.  if v0 == v1 then goto L2afa38;
  #L2afa1c.  v1:= 2I;
  #L2afa1e.  if v0 == v1 then goto L2afa30;
  #L2afa22.  v1:= 3I;
  #L2afa24.  if v0 == v1 then goto L2afa30;
  #L2afa28.  v1:= 4I;
  #L2afa2a.  if v0 == v1 then goto L2afa30;
  #L2afa2e.  goto L2afa3e;
  #L2afa30.  call `applyFitCenter`(v2) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.applyFitCenter:()V` @kind virtual;
  #L2afa36.  goto L2afa3e;
  #L2afa38.  call `applyCenterCrop`(v2) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.applyCenterCrop:()V` @kind virtual;
  #L2afa3e.  v0:= v2.`com.bumptech.glide.GenericRequestBuilder.glide` @type ^`com.bumptech.glide.Glide` @kind object;
  #L2afa42.  v1:= v2.`com.bumptech.glide.GenericRequestBuilder.transcodeClass` @type ^`java.lang.Class` @kind object;
  #L2afa46.  call temp:= `buildImageViewTarget`(v0, v3, v1) @signature `Lcom/bumptech/glide/Glide;.buildImageViewTarget:(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L2afa4c.  v3:= temp @kind object;
  #L2afa4e.  call temp:= `into`(v2, v3) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L2afa54.  v3:= temp @kind object;
  #L2afa56.  return v3 @kind object;
  #L2afa58.  v3:= new `java.lang.IllegalArgumentException`;
  #L2afa5c.  v0:= "You must pass in a non null View" @kind object;
  #L2afa60.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2afa66.  throw v3;
}
procedure `com.bumptech.glide.request.target.Target` `into`(`com.bumptech.glide.GenericRequestBuilder` v2 @kind this, `com.bumptech.glide.request.target.Target` v3 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2afa78.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L2afa7e.  if v3 == 0 then goto L2afae0;
  #L2afa82.  v0:= v2.`com.bumptech.glide.GenericRequestBuilder.isModelSet` @type ^`boolean` @kind boolean;
  #L2afa86.  if v0 == 0 then goto L2afad0;
  #L2afa8a.  call temp:= `getRequest`(v3) @signature `Lcom/bumptech/glide/request/target/Target;.getRequest:()Lcom/bumptech/glide/request/Request;` @kind interface;
  #L2afa90.  v0:= temp @kind object;
  #L2afa92.  if v0 == 0 then goto L2afaac;
  #L2afa96.  call `clear`(v0) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L2afa9c.  v1:= v2.`com.bumptech.glide.GenericRequestBuilder.requestTracker` @type ^`com.bumptech.glide.manager.RequestTracker` @kind object;
  #L2afaa0.  call `removeRequest`(v1, v0) @signature `Lcom/bumptech/glide/manager/RequestTracker;.removeRequest:(Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L2afaa6.  call `recycle`(v0) @signature `Lcom/bumptech/glide/request/Request;.recycle:()V` @kind interface;
  #L2afaac.  call temp:= `buildRequest`(v2, v3) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.buildRequest:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L2afab2.  v0:= temp @kind object;
  #L2afab4.  call `setRequest`(v3, v0) @signature `Lcom/bumptech/glide/request/target/Target;.setRequest:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L2afaba.  v1:= v2.`com.bumptech.glide.GenericRequestBuilder.lifecycle` @type ^`com.bumptech.glide.manager.Lifecycle` @kind object;
  #L2afabe.  call `addListener`(v1, v3) @signature `Lcom/bumptech/glide/manager/Lifecycle;.addListener:(Lcom/bumptech/glide/manager/LifecycleListener;)V` @kind interface;
  #L2afac4.  v1:= v2.`com.bumptech.glide.GenericRequestBuilder.requestTracker` @type ^`com.bumptech.glide.manager.RequestTracker` @kind object;
  #L2afac8.  call `runRequest`(v1, v0) @signature `Lcom/bumptech/glide/manager/RequestTracker;.runRequest:(Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L2aface.  return v3 @kind object;
  #L2afad0.  v3:= new `java.lang.IllegalArgumentException`;
  #L2afad4.  v0:= "You must first set a model (try #load())" @kind object;
  #L2afad8.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2afade.  throw v3;
  #L2afae0.  v3:= new `java.lang.IllegalArgumentException`;
  #L2afae4.  v0:= "You must pass in a non null Target" @kind object;
  #L2afae8.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2afaee.  throw v3;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `listener`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `com.bumptech.glide.request.RequestListener` v1 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.listener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af508.  v0.`com.bumptech.glide.GenericRequestBuilder.requestListener` @type ^`com.bumptech.glide.request.RequestListener` := v1 @kind object;
  #L2af50c.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `load`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af520.  v0.`com.bumptech.glide.GenericRequestBuilder.model` @type ^`java.lang.Object` := v1 @kind object;
  #L2af524.  v1:= 1I;
  #L2af526.  v0.`com.bumptech.glide.GenericRequestBuilder.isModelSet` @type ^`boolean` := v1 @kind boolean;
  #L2af52a.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `override`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.override:(II)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af53c.  call temp:= `isValidDimensions`(v2, v3) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L2af542.  v0:= temp;
  #L2af544.  if v0 == 0 then goto L2af552;
  #L2af548.  v1.`com.bumptech.glide.GenericRequestBuilder.overrideWidth` @type ^`int` := v2;
  #L2af54c.  v1.`com.bumptech.glide.GenericRequestBuilder.overrideHeight` @type ^`int` := v3;
  #L2af550.  return v1 @kind object;
  #L2af552.  v2:= new `java.lang.IllegalArgumentException`;
  #L2af556.  v3:= "Width and height must be Target#SIZE_ORIGINAL or > 0" @kind object;
  #L2af55a.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af560.  throw v2;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `placeholder`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.placeholder:(I)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af58c.  v0.`com.bumptech.glide.GenericRequestBuilder.placeholderId` @type ^`int` := v1;
  #L2af590.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `placeholder`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.placeholder:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af574.  v0.`com.bumptech.glide.GenericRequestBuilder.placeholderDrawable` @type ^`android.graphics.drawable.Drawable` := v1 @kind object;
  #L2af578.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `preload`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.preload:()Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2afb00.  v0:= -2147483648I;
  #L2afb04.  call temp:= `preload`(v1, v0, v0) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.preload:(II)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L2afb0a.  v0:= temp @kind object;
  #L2afb0c.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `preload`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.preload:(II)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;

  #L2afb20.  call temp:= `obtain`(v1, v2) @signature `Lcom/bumptech/glide/request/target/PreloadTarget;.obtain:(II)Lcom/bumptech/glide/request/target/PreloadTarget;` @kind static;
  #L2afb26.  v1:= temp @kind object;
  #L2afb28.  call temp:= `into`(v0, v1) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L2afb2e.  v1:= temp @kind object;
  #L2afb30.  return v1 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `priority`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `com.bumptech.glide.Priority` v1 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.priority:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af5a4.  v0.`com.bumptech.glide.GenericRequestBuilder.priority` @type ^`com.bumptech.glide.Priority` := v1 @kind object;
  #L2af5a8.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `signature`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.load.Key` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.signature:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af5bc.  if v2 == 0 then goto L2af5c6;
  #L2af5c0.  v1.`com.bumptech.glide.GenericRequestBuilder.signature` @type ^`com.bumptech.glide.load.Key` := v2 @kind object;
  #L2af5c4.  return v1 @kind object;
  #L2af5c6.  v2:= new `java.lang.NullPointerException`;
  #L2af5ca.  v0:= "Signature must not be null" @kind object;
  #L2af5ce.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af5d4.  throw v2;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `sizeMultiplier`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.sizeMultiplier:(F)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af5e8.  v0:= 0I;
  #L2af5ea.  v0:= fcmpg(v2, v0);
  #L2af5ee.  if v0 < 0 then goto L2af60c;
  #L2af5f2.  v0:= 1.0F;
  #L2af5f6.  v0:= fcmpl(v2, v0);
  #L2af5fa.  if v0 > 0 then goto L2af60c;
  #L2af5fe.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2af604.  v2:= temp @kind object;
  #L2af606.  v1.`com.bumptech.glide.GenericRequestBuilder.sizeMultiplier` @type ^`java.lang.Float` := v2 @kind object;
  #L2af60a.  return v1 @kind object;
  #L2af60c.  v2:= new `java.lang.IllegalArgumentException`;
  #L2af610.  v0:= "sizeMultiplier must be between 0 and 1" @kind object;
  #L2af614.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af61a.  throw v2;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `skipMemoryCache`(`com.bumptech.glide.GenericRequestBuilder` v0 @kind this, `boolean` v1 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.skipMemoryCache:(Z)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L2af62c.  v1:= v1 ^~ 1;
  #L2af630.  v0.`com.bumptech.glide.GenericRequestBuilder.isCacheable` @type ^`boolean` := v1 @kind boolean;
  #L2af634.  return v0 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `sourceEncoder`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.load.Encoder` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.sourceEncoder:(Lcom/bumptech/glide/load/Encoder;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af648.  v0:= v1.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` @kind object;
  #L2af64c.  if v0 == 0 then goto L2af656;
  #L2af650.  call `setSourceEncoder`(v0, v2) @signature `Lcom/bumptech/glide/provider/ChildLoadProvider;.setSourceEncoder:(Lcom/bumptech/glide/load/Encoder;)V` @kind virtual;
  #L2af656.  return v1 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `thumbnail`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.thumbnail:(F)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af69c.  v0:= 0I;
  #L2af69e.  v0:= fcmpg(v2, v0);
  #L2af6a2.  if v0 < 0 then goto L2af6c0;
  #L2af6a6.  v0:= 1.0F;
  #L2af6aa.  v0:= fcmpl(v2, v0);
  #L2af6ae.  if v0 > 0 then goto L2af6c0;
  #L2af6b2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2af6b8.  v2:= temp @kind object;
  #L2af6ba.  v1.`com.bumptech.glide.GenericRequestBuilder.thumbSizeMultiplier` @type ^`java.lang.Float` := v2 @kind object;
  #L2af6be.  return v1 @kind object;
  #L2af6c0.  v2:= new `java.lang.IllegalArgumentException`;
  #L2af6c4.  v0:= "sizeMultiplier must be between 0 and 1" @kind object;
  #L2af6c8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af6ce.  throw v2;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `thumbnail`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.GenericRequestBuilder` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.thumbnail:(Lcom/bumptech/glide/GenericRequestBuilder;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af668.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2af66e.  v0:= temp;
  #L2af670.  if v0 != 0 then goto L2af67a;
  #L2af674.  v1.`com.bumptech.glide.GenericRequestBuilder.thumbnailRequestBuilder` @type ^`com.bumptech.glide.GenericRequestBuilder` := v2 @kind object;
  #L2af678.  return v1 @kind object;
  #L2af67a.  v2:= new `java.lang.IllegalArgumentException`;
  #L2af67e.  v0:= "You cannot set a request as a thumbnail for itself. Consider using clone() on the request you are passing to thumbnail()" @kind object;
  #L2af682.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af688.  throw v2;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `transcoder`(`com.bumptech.glide.GenericRequestBuilder` v1 @kind this, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.transcoder:(Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af6e0.  v0:= v1.`com.bumptech.glide.GenericRequestBuilder.loadProvider` @type ^`com.bumptech.glide.provider.ChildLoadProvider` @kind object;
  #L2af6e4.  if v0 == 0 then goto L2af6ee;
  #L2af6e8.  call `setTranscoder`(v0, v2) @signature `Lcom/bumptech/glide/provider/ChildLoadProvider;.setTranscoder:(Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)V` @kind virtual;
  #L2af6ee.  return v1 @kind object;
}
procedure `com.bumptech.glide.GenericRequestBuilder` `transform`(`com.bumptech.glide.GenericRequestBuilder` v2 @kind this, `com.bumptech.glide.load.Transformation`[] v3 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.transform:([Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/GenericRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2af700.  v0:= 1I;
  #L2af702.  v2.`com.bumptech.glide.GenericRequestBuilder.isTransformationSet` @type ^`boolean` := v0 @kind boolean;
  #L2af706.  v1:= length @variable v3;
  #L2af708.  if v1 != v0 then goto L2af718;
  #L2af70c.  v0:= 0I;
  #L2af70e.  v3:= v3[v0] @kind object;
  #L2af712.  v2.`com.bumptech.glide.GenericRequestBuilder.transformation` @type ^`com.bumptech.glide.load.Transformation` := v3 @kind object;
  #L2af716.  goto L2af726;
  #L2af718.  v0:= new `com.bumptech.glide.load.MultiTransformation`;
  #L2af71c.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/MultiTransformation;.<init>:([Lcom/bumptech/glide/load/Transformation;)V` @kind direct;
  #L2af722.  v2.`com.bumptech.glide.GenericRequestBuilder.transformation` @type ^`com.bumptech.glide.load.Transformation` := v0 @kind object;
  #L2af726.  return v2 @kind object;
}
