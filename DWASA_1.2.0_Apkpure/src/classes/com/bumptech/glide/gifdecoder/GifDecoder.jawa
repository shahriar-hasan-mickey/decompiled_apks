record `com.bumptech.glide.gifdecoder.GifDecoder` @kind class @AccessFlag PUBLIC {
  `int`[] `com.bumptech.glide.gifdecoder.GifDecoder.act` @AccessFlag PRIVATE;
  `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` `com.bumptech.glide.gifdecoder.GifDecoder.bitmapProvider` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.GifDecoder.block` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.bumptech.glide.gifdecoder.GifDecoder.data` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @AccessFlag PRIVATE;
  `com.bumptech.glide.gifdecoder.GifHeader` `com.bumptech.glide.gifdecoder.GifDecoder.header` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.GifDecoder.mainPixels` @AccessFlag PRIVATE;
  `int`[] `com.bumptech.glide.gifdecoder.GifDecoder.mainScratch` @AccessFlag PRIVATE;
  `com.bumptech.glide.gifdecoder.GifHeaderParser` `com.bumptech.glide.gifdecoder.GifDecoder.parser` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.GifDecoder.pixelStack` @AccessFlag PRIVATE;
  `short`[] `com.bumptech.glide.gifdecoder.GifDecoder.prefix` @AccessFlag PRIVATE;
  `android.graphics.Bitmap` `com.bumptech.glide.gifdecoder.GifDecoder.previousImage` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.bumptech.glide.gifdecoder.GifDecoder.rawData` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.gifdecoder.GifDecoder.savePrevious` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.GifDecoder.status` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.GifDecoder.suffix` @AccessFlag PRIVATE;
}
global `android.graphics.Bitmap$Config` `@@com.bumptech.glide.gifdecoder.GifDecoder.BITMAP_CONFIG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.DISPOSAL_BACKGROUND` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.DISPOSAL_NONE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.DISPOSAL_PREVIOUS` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.DISPOSAL_UNSPECIFIED` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.INITIAL_FRAME_POINTER` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.MAX_STACK_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.NULL_CODE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.STATUS_FORMAT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.STATUS_OK` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.STATUS_OPEN_ERROR` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.STATUS_PARTIAL_DECODE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b4b9c.  v0:= constclass @type ^`com.bumptech.glide.gifdecoder.GifDecoder` @kind object;
  #L2b4ba0.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2b4ba6.  v0:= temp @kind object;
  #L2b4ba8.  `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` := v0 @kind object;
  #L2b4bac.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2b4bb0.  `@@com.bumptech.glide.gifdecoder.GifDecoder.BITMAP_CONFIG` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L2b4bb4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this, `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` v2 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b4bc8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b4bce.  v0:= 256I;
  #L2b4bd2.  v0:= new `byte`[v0];
  #L2b4bd6.  v1.`com.bumptech.glide.gifdecoder.GifDecoder.block` @type ^`byte`[] := v0 @kind object;
  #L2b4bda.  v1.`com.bumptech.glide.gifdecoder.GifDecoder.bitmapProvider` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` := v2 @kind object;
  #L2b4bde.  v2:= new `com.bumptech.glide.gifdecoder.GifHeader`;
  #L2b4be2.  call `<init>`(v2) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.<init>:()V` @kind direct;
  #L2b4be8.  v1.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v2 @kind object;
  #L2b4bec.  return @kind void;
}
procedure `void` `decodeBitmapData`(`com.bumptech.glide.gifdecoder.GifDecoder` v27 @kind this, `com.bumptech.glide.gifdecoder.GifFrame` v28 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.decodeBitmapData:(Lcom/bumptech/glide/gifdecoder/GifFrame;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;

  #L2b4c68.  v0:= v27 @kind object;
  #L2b4c6c.  v1:= v28 @kind object;
  #L2b4c70.  if v1 == 0 then goto L2b4c82;
  #L2b4c74.  v2:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` @kind object;
  #L2b4c78.  v3:= v1.`com.bumptech.glide.gifdecoder.GifFrame.bufferFrameStart` @type ^`int`;
  #L2b4c7c.  call temp:= `position`(v2, v3) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2b4c82.  if v1 != 0 then goto L2b4c9c;
  #L2b4c86.  v1:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4c8a.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b4c8e.  v2:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4c92.  v2:= v2.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b4c96.  v1:= v1 * v2 @kind int;
  #L2b4c9a.  goto L2b4ca8;
  #L2b4c9c.  v2:= v1.`com.bumptech.glide.gifdecoder.GifFrame.iw` @type ^`int`;
  #L2b4ca0.  v1:= v1.`com.bumptech.glide.gifdecoder.GifFrame.ih` @type ^`int`;
  #L2b4ca4.  v1:= v1 * v2 @kind int;
  #L2b4ca8.  v2:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.mainPixels` @type ^`byte`[] @kind object;
  #L2b4cac.  if v2 == 0 then goto L2b4cb6;
  #L2b4cb0.  v2:= length @variable v2;
  #L2b4cb2.  if v2 >= v1 then goto L2b4cbe;
  #L2b4cb6.  v2:= new `byte`[v1];
  #L2b4cba.  v0.`com.bumptech.glide.gifdecoder.GifDecoder.mainPixels` @type ^`byte`[] := v2 @kind object;
  #L2b4cbe.  v2:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.prefix` @type ^`short`[] @kind object;
  #L2b4cc2.  v3:= 4096I;
  #L2b4cc6.  if v2 != 0 then goto L2b4cd2;
  #L2b4cca.  v2:= new `short`[v3];
  #L2b4cce.  v0.`com.bumptech.glide.gifdecoder.GifDecoder.prefix` @type ^`short`[] := v2 @kind object;
  #L2b4cd2.  v2:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.suffix` @type ^`byte`[] @kind object;
  #L2b4cd6.  if v2 != 0 then goto L2b4ce2;
  #L2b4cda.  v2:= new `byte`[v3];
  #L2b4cde.  v0.`com.bumptech.glide.gifdecoder.GifDecoder.suffix` @type ^`byte`[] := v2 @kind object;
  #L2b4ce2.  v2:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.pixelStack` @type ^`byte`[] @kind object;
  #L2b4ce6.  if v2 != 0 then goto L2b4cf6;
  #L2b4cea.  v2:= 4097I;
  #L2b4cee.  v2:= new `byte`[v2];
  #L2b4cf2.  v0.`com.bumptech.glide.gifdecoder.GifDecoder.pixelStack` @type ^`byte`[] := v2 @kind object;
  #L2b4cf6.  call temp:= `read`(v27) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.read:()I` @kind direct;
  #L2b4cfc.  v2:= temp;
  #L2b4cfe.  v4:= 1I;
  #L2b4d00.  v5:= v4 ^< v2 @kind int;
  #L2b4d04.  v6:= v5 + 1;
  #L2b4d08.  v7:= v5 + 2;
  #L2b4d0c.  v2:= v2 + v4 @kind int;
  #L2b4d0e.  v8:= v4 ^< v2 @kind int;
  #L2b4d12.  v8:= v8 - v4 @kind int;
  #L2b4d14.  v9:= 0I;
  #L2b4d16.  v10:= 0I;
  #L2b4d18.  if v10 >= v5 then goto L2b4d34;
  #L2b4d1c.  v11:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.prefix` @type ^`short`[] @kind object;
  #L2b4d20.  v11[v10]:= v9 @kind short;
  #L2b4d24.  v11:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.suffix` @type ^`byte`[] @kind object;
  #L2b4d28.  v12:= (`byte`) v10 @kind i2b;
  #L2b4d2a.  v11[v10]:= v12 @kind byte;
  #L2b4d2e.  v10:= v10 + 1;
  #L2b4d32.  goto L2b4d18;
  #L2b4d34.  v10:= -1I;
  #L2b4d36.  v21:= v2;
  #L2b4d3a.  v19:= v7;
  #L2b4d3e.  v20:= v8;
  #L2b4d42.  v11:= 0I;
  #L2b4d44.  v12:= 0I;
  #L2b4d46.  v13:= 0I;
  #L2b4d48.  v14:= 0I;
  #L2b4d4a.  v15:= 0I;
  #L2b4d4c.  v16:= 0I;
  #L2b4d50.  v17:= 0I;
  #L2b4d54.  v18:= 0I;
  #L2b4d58.  v22:= -1I;
  #L2b4d5c.  if v11 >= v1 then goto L2b4f4e;
  #L2b4d60.  v9:= 3I;
  #L2b4d62.  if v12 != 0 then goto L2b4d7c;
  #L2b4d66.  call temp:= `readBlock`(v27) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.readBlock:()I` @kind direct;
  #L2b4d6c.  v12:= temp;
  #L2b4d6e.  if v12 > 0 then goto L2b4d7a;
  #L2b4d72.  v0.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int` := v9;
  #L2b4d76.  goto L2b4f4e;
  #L2b4d7a.  v14:= 0I;
  #L2b4d7c.  v3:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.block` @type ^`byte`[] @kind object;
  #L2b4d80.  v3:= v3[v14] @kind byte;
  #L2b4d84.  v3:= v3 ^& 255;
  #L2b4d88.  v3:= v3 ^< v15 @kind int;
  #L2b4d8a.  v13:= v13 + v3 @kind int;
  #L2b4d8c.  v15:= v15 + 8;
  #L2b4d90.  v14:= v14 + v4 @kind int;
  #L2b4d92.  v12:= v12 + v10 @kind int;
  #L2b4d94.  v23:= v17;
  #L2b4d98.  v3:= v21;
  #L2b4d9c.  v4:= v22;
  #L2b4da0.  v26:= v16;
  #L2b4da4.  v16:= v11;
  #L2b4da8.  v11:= v19;
  #L2b4dac.  v19:= v18;
  #L2b4db0.  v18:= v26;
  #L2b4db4.  if v15 < v3 then goto L2b4f16;
  #L2b4db8.  v10:= v13 ^& v20 @kind int;
  #L2b4dbc.  v13:= v13 ^> v3 @kind int;
  #L2b4dbe.  v15:= v15 - v3 @kind int;
  #L2b4dc0.  if v10 != v5 then goto L2b4dd2;
  #L2b4dc4.  v3:= v2;
  #L2b4dc6.  v11:= v7;
  #L2b4dc8.  v20:= v8;
  #L2b4dcc.  v4:= -1I;
  #L2b4dce.  v10:= -1I;
  #L2b4dd0.  goto L2b4db4;
  #L2b4dd2.  if v10 <= v11 then goto L2b4ddc;
  #L2b4dd6.  v0.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int` := v9;
  #L2b4dda.  goto L2b4de0;
  #L2b4ddc.  if v10 != v6 then goto L2b4dfa;
  #L2b4de0.  v21:= v3;
  #L2b4de4.  v22:= v4;
  #L2b4de8.  v17:= v23;
  #L2b4dec.  v3:= 4096I;
  #L2b4df0.  v4:= 1I;
  #L2b4df2.  v9:= 0I;
  #L2b4df4.  v10:= -1I;
  #L2b4df6.  goto L2b4f36;
  #L2b4dfa.  v9:= -1I;
  #L2b4dfc.  if v4 != v9 then goto L2b4e22;
  #L2b4e00.  v4:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.pixelStack` @type ^`byte`[] @kind object;
  #L2b4e04.  v21:= v19 + 1;
  #L2b4e08.  v9:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.suffix` @type ^`byte`[] @kind object;
  #L2b4e0c.  v9:= v9[v10] @kind byte;
  #L2b4e10.  v4[v19]:= v9 @kind byte;
  #L2b4e14.  v4:= v10;
  #L2b4e16.  v23:= v4;
  #L2b4e1a.  v19:= v21;
  #L2b4e1e.  v9:= 3I;
  #L2b4e20.  goto L2b4dce;
  #L2b4e22.  if v10 < v11 then goto L2b4e44;
  #L2b4e26.  v9:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.pixelStack` @type ^`byte`[] @kind object;
  #L2b4e2a.  v21:= v19 + 1;
  #L2b4e2e.  v24:= v2;
  #L2b4e32.  v2:= v23;
  #L2b4e36.  v2:= (`byte`) v2 @kind i2b;
  #L2b4e38.  v9[v19]:= v2 @kind byte;
  #L2b4e3c.  v2:= v4;
  #L2b4e3e.  v19:= v21;
  #L2b4e42.  goto L2b4e4a;
  #L2b4e44.  v24:= v2;
  #L2b4e48.  v2:= v10;
  #L2b4e4a.  if v2 < v5 then goto L2b4e78;
  #L2b4e4e.  v9:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.pixelStack` @type ^`byte`[] @kind object;
  #L2b4e52.  v21:= v19 + 1;
  #L2b4e56.  v23:= v5;
  #L2b4e5a.  v5:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.suffix` @type ^`byte`[] @kind object;
  #L2b4e5e.  v5:= v5[v2] @kind byte;
  #L2b4e62.  v9[v19]:= v5 @kind byte;
  #L2b4e66.  v5:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.prefix` @type ^`short`[] @kind object;
  #L2b4e6a.  v2:= v5[v2] @kind short;
  #L2b4e6e.  v19:= v21;
  #L2b4e72.  v5:= v23;
  #L2b4e76.  goto L2b4e4a;
  #L2b4e78.  v23:= v5;
  #L2b4e7c.  v5:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.suffix` @type ^`byte`[] @kind object;
  #L2b4e80.  v2:= v5[v2] @kind byte;
  #L2b4e84.  v2:= v2 ^& 255;
  #L2b4e88.  v9:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.pixelStack` @type ^`byte`[] @kind object;
  #L2b4e8c.  v21:= v19 + 1;
  #L2b4e90.  v25:= v6;
  #L2b4e94.  v6:= (`byte`) v2 @kind i2b;
  #L2b4e96.  v9[v19]:= v6 @kind byte;
  #L2b4e9a.  v9:= 4096I;
  #L2b4e9e.  if v11 >= v9 then goto L2b4ece;
  #L2b4ea2.  v9:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.prefix` @type ^`short`[] @kind object;
  #L2b4ea6.  v4:= (`short`) v4 @kind i2s;
  #L2b4ea8.  v9[v11]:= v4 @kind short;
  #L2b4eac.  v5[v11]:= v6 @kind byte;
  #L2b4eb0.  v11:= v11 + 1;
  #L2b4eb4.  v4:= v11 ^& v20 @kind int;
  #L2b4eb8.  if v4 != 0 then goto L2b4ece;
  #L2b4ebc.  v5:= 4096I;
  #L2b4ec0.  if v11 >= v5 then goto L2b4ed2;
  #L2b4ec4.  v3:= v3 + 1;
  #L2b4ec8.  v20:= v20 + v11 @kind int;
  #L2b4ecc.  goto L2b4ed2;
  #L2b4ece.  v5:= 4096I;
  #L2b4ed2.  v19:= v21;
  #L2b4ed6.  if v19 <= 0 then goto L2b4efc;
  #L2b4eda.  v19:= v19 + -1;
  #L2b4ede.  v4:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.mainPixels` @type ^`byte`[] @kind object;
  #L2b4ee2.  v6:= v18 + 1;
  #L2b4ee6.  v9:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.pixelStack` @type ^`byte`[] @kind object;
  #L2b4eea.  v9:= v9[v19] @kind byte;
  #L2b4eee.  v4[v18]:= v9 @kind byte;
  #L2b4ef2.  v16:= v16 + 1;
  #L2b4ef6.  v18:= v6;
  #L2b4efa.  goto L2b4ed6;
  #L2b4efc.  v4:= v10;
  #L2b4efe.  v5:= v23;
  #L2b4f02.  v6:= v25;
  #L2b4f06.  v9:= 3I;
  #L2b4f08.  v10:= -1I;
  #L2b4f0a.  v23:= v2;
  #L2b4f0e.  v2:= v24;
  #L2b4f12.  goto L2b4db4;
  #L2b4f16.  v24:= v2;
  #L2b4f1a.  v2:= v23;
  #L2b4f1e.  v17:= v2;
  #L2b4f22.  v21:= v3;
  #L2b4f26.  v22:= v4;
  #L2b4f2a.  v2:= v24;
  #L2b4f2e.  v3:= 4096I;
  #L2b4f32.  v4:= 1I;
  #L2b4f34.  v9:= 0I;
  #L2b4f36.  v26:= v19;
  #L2b4f3a.  v19:= v11;
  #L2b4f3e.  v11:= v16;
  #L2b4f42.  v16:= v18;
  #L2b4f46.  v18:= v26;
  #L2b4f4a.  goto L2b4d5c;
  #L2b4f4e.  v2:= v16;
  #L2b4f52.  if v2 >= v1 then goto L2b4f66;
  #L2b4f56.  v3:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.mainPixels` @type ^`byte`[] @kind object;
  #L2b4f5a.  v4:= 0I;
  #L2b4f5c.  v3[v2]:= v4 @kind byte;
  #L2b4f60.  v2:= v2 + 1;
  #L2b4f64.  goto L2b4f52;
  #L2b4f66.  return @kind void;
}
procedure `com.bumptech.glide.gifdecoder.GifHeaderParser` `getHeaderParser`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getHeaderParser:()Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2b4830.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.parser` @type ^`com.bumptech.glide.gifdecoder.GifHeaderParser` @kind object;
  #L2b4834.  if v0 != 0 then goto L2b4846;
  #L2b4838.  v0:= new `com.bumptech.glide.gifdecoder.GifHeaderParser`;
  #L2b483c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.<init>:()V` @kind direct;
  #L2b4842.  v1.`com.bumptech.glide.gifdecoder.GifDecoder.parser` @type ^`com.bumptech.glide.gifdecoder.GifHeaderParser` := v0 @kind object;
  #L2b4846.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.parser` @type ^`com.bumptech.glide.gifdecoder.GifHeaderParser` @kind object;
  #L2b484a.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `getNextBitmap`(`com.bumptech.glide.gifdecoder.GifDecoder` v4 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getNextBitmap:()Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b4408.  v0:= v4.`com.bumptech.glide.gifdecoder.GifDecoder.bitmapProvider` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L2b440c.  v1:= v4.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4410.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b4414.  v2:= v4.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4418.  v2:= v2.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b441c.  v3:= `@@com.bumptech.glide.gifdecoder.GifDecoder.BITMAP_CONFIG` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2b4420.  call temp:= `obtain`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtain:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L2b4426.  v0:= temp @kind object;
  #L2b4428.  if v0 != 0 then goto L2b4448;
  #L2b442c.  v0:= v4.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4430.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b4434.  v1:= v4.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4438.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b443c.  v2:= `@@com.bumptech.glide.gifdecoder.GifDecoder.BITMAP_CONFIG` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2b4440.  call temp:= `createBitmap`(v0, v1, v2) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L2b4446.  v0:= temp @kind object;
  #L2b4448.  call `setAlpha`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setAlpha:(Landroid/graphics/Bitmap;)V` @kind static;
  #L2b444e.  return v0 @kind object;
}
procedure `int` `read`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.read:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2b4970.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` @kind object;
  #L2b4974.  call temp:= `get`(v0) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L2b497a.  v0:= temp;
  #L2b497c.  v0:= v0 ^& 255;
  #L2b4980.  goto L2b498a;
  #L2b4982.  v0:= 1I;
  #L2b4984.  v1.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int` := v0;
  #L2b4988.  v0:= 0I;
  #L2b498a.  return v0;
  catch `java.lang.Exception` @[L2b4970..L2b497c] goto L2b4982;
}
procedure `int` `readBlock`(`com.bumptech.glide.gifdecoder.GifDecoder` v5 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.readBlock:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b4b3c.  call temp:= `read`(v5) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.read:()I` @kind direct;
  #L2b4b42.  v0:= temp;
  #L2b4b44.  v1:= 0I;
  #L2b4b46.  if v0 <= 0 then goto L2b4b7a;
  #L2b4b4a.  if v1 >= v0 then goto L2b4b7a;
  #L2b4b4e.  v2:= v0 - v1 @kind int;
  #L2b4b52.  v3:= v5.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` @kind object;
  #L2b4b56.  v4:= v5.`com.bumptech.glide.gifdecoder.GifDecoder.block` @type ^`byte`[] @kind object;
  #L2b4b5a.  call temp:= `get`(v3, v4, v1, v2) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2b4b60.  v1:= v1 + v2 @kind int;
  #L2b4b62.  goto L2b4b4a;
  #L2b4b64.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2b4b66.  v2:= `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` @kind object;
  #L2b4b6a.  v3:= "Error Reading Block" @kind object;
  #L2b4b6e.  call temp:= `w`(v2, v3, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2b4b74.  v0:= 1I;
  #L2b4b76.  v5.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int` := v0;
  #L2b4b7a.  return v1;
  catch `java.lang.Exception` @[L2b4b52..L2b4b60] goto L2b4b64;
}
procedure `void` `setAlpha`(`android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setAlpha:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2b4f90.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2b4f94.  v1:= 12I;
  #L2b4f98.  if v0 < v1 then goto L2b4fa4;
  #L2b4f9c.  v0:= 1I;
  #L2b4f9e.  call `setHasAlpha`(v2, v0) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L2b4fa4.  return @kind void;
}
procedure `android.graphics.Bitmap` `setPixels`(`com.bumptech.glide.gifdecoder.GifDecoder` v17 @kind this, `com.bumptech.glide.gifdecoder.GifFrame` v18 @kind object, `com.bumptech.glide.gifdecoder.GifFrame` v19 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setPixels:(Lcom/bumptech/glide/gifdecoder/GifFrame;Lcom/bumptech/glide/gifdecoder/GifFrame;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2b464c.  v0:= v17 @kind object;
  #L2b4650.  v1:= v18 @kind object;
  #L2b4654.  v2:= v19 @kind object;
  #L2b4658.  v3:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b465c.  v3:= v3.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b4660.  v4:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4664.  v12:= v4.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b4668.  v13:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.mainScratch` @type ^`int`[] @kind object;
  #L2b466c.  v14:= 3I;
  #L2b466e.  v15:= 0I;
  #L2b4670.  v11:= 2I;
  #L2b4672.  if v2 == 0 then goto L2b46ca;
  #L2b4676.  v4:= v2.`com.bumptech.glide.gifdecoder.GifFrame.dispose` @type ^`int`;
  #L2b467a.  if v4 <= 0 then goto L2b46ca;
  #L2b467e.  v4:= v2.`com.bumptech.glide.gifdecoder.GifFrame.dispose` @type ^`int`;
  #L2b4682.  if v4 != v11 then goto L2b46a2;
  #L2b4686.  v2:= v1.`com.bumptech.glide.gifdecoder.GifFrame.transparency` @type ^`boolean` @kind boolean;
  #L2b468a.  if v2 != 0 then goto L2b4698;
  #L2b468e.  v2:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4692.  v2:= v2.`com.bumptech.glide.gifdecoder.GifHeader.bgColor` @type ^`int`;
  #L2b4696.  goto L2b469a;
  #L2b4698.  v2:= 0I;
  #L2b469a.  call `fill`(v13, v2) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L2b46a0.  goto L2b46ca;
  #L2b46a2.  v2:= v2.`com.bumptech.glide.gifdecoder.GifFrame.dispose` @type ^`int`;
  #L2b46a6.  if v2 != v14 then goto L2b46ca;
  #L2b46aa.  v4:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.previousImage` @type ^`android.graphics.Bitmap` @kind object;
  #L2b46ae.  if v4 == 0 then goto L2b46ca;
  #L2b46b2.  v6:= 0I;
  #L2b46b4.  v8:= 0I;
  #L2b46b6.  v9:= 0I;
  #L2b46b8.  v5:= v13 @kind object;
  #L2b46ba.  v7:= v3;
  #L2b46bc.  v10:= v3;
  #L2b46be.  v2:= 2I;
  #L2b46c0.  v11:= v12;
  #L2b46c2.  call `getPixels`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Landroid/graphics/Bitmap;.getPixels:([IIIIIII)V` @kind virtual;
  #L2b46c8.  goto L2b46cc;
  #L2b46ca.  v2:= 2I;
  #L2b46cc.  call `decodeBitmapData`(v17, v18) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.decodeBitmapData:(Lcom/bumptech/glide/gifdecoder/GifFrame;)V` @kind direct;
  #L2b46d2.  v4:= 8I;
  #L2b46d6.  v11:= 1I;
  #L2b46d8.  v4:= 0I;
  #L2b46da.  v5:= 1I;
  #L2b46dc.  v6:= 8I;
  #L2b46e0.  v7:= v1.`com.bumptech.glide.gifdecoder.GifFrame.ih` @type ^`int`;
  #L2b46e4.  if v15 >= v7 then goto L2b47a4;
  #L2b46e8.  v7:= v1.`com.bumptech.glide.gifdecoder.GifFrame.interlace` @type ^`boolean` @kind boolean;
  #L2b46ec.  if v7 == 0 then goto L2b4720;
  #L2b46f0.  v7:= v1.`com.bumptech.glide.gifdecoder.GifFrame.ih` @type ^`int`;
  #L2b46f4.  v8:= 4I;
  #L2b46f6.  if v4 < v7 then goto L2b471a;
  #L2b46fa.  v5:= v5 + 1;
  #L2b46fe.  if v5 == v2 then goto L2b4718;
  #L2b4702.  if v5 == v14 then goto L2b4712;
  #L2b4706.  if v5 == v8 then goto L2b470c;
  #L2b470a.  goto L2b471a;
  #L2b470c.  v4:= 1I;
  #L2b470e.  v6:= 2I;
  #L2b4710.  goto L2b471a;
  #L2b4712.  v4:= 2I;
  #L2b4714.  v6:= 4I;
  #L2b4716.  goto L2b471a;
  #L2b4718.  v4:= 4I;
  #L2b471a.  v7:= v4 + v6 @kind int;
  #L2b471e.  goto L2b4724;
  #L2b4720.  v7:= v4;
  #L2b4722.  v4:= v15;
  #L2b4724.  v8:= v1.`com.bumptech.glide.gifdecoder.GifFrame.iy` @type ^`int`;
  #L2b4728.  v4:= v4 + v8 @kind int;
  #L2b472a.  v8:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b472e.  v8:= v8.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b4732.  if v4 >= v8 then goto L2b479c;
  #L2b4736.  v8:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b473a.  v8:= v8.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b473e.  v4:= v4 * v8 @kind int;
  #L2b4742.  v8:= v1.`com.bumptech.glide.gifdecoder.GifFrame.ix` @type ^`int`;
  #L2b4746.  v8:= v8 + v4 @kind int;
  #L2b4748.  v9:= v1.`com.bumptech.glide.gifdecoder.GifFrame.iw` @type ^`int`;
  #L2b474c.  v9:= v9 + v8 @kind int;
  #L2b474e.  v10:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4752.  v10:= v10.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b4756.  v10:= v10 + v4 @kind int;
  #L2b4758.  if v10 >= v9 then goto L2b4766;
  #L2b475c.  v9:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4760.  v9:= v9.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b4764.  v9:= v9 + v4 @kind int;
  #L2b4766.  v4:= v1.`com.bumptech.glide.gifdecoder.GifFrame.iw` @type ^`int`;
  #L2b476a.  v4:= v4 * v15 @kind int;
  #L2b476e.  if v8 >= v9 then goto L2b479c;
  #L2b4772.  v10:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.mainPixels` @type ^`byte`[] @kind object;
  #L2b4776.  v16:= v4 + 1;
  #L2b477a.  v4:= v10[v4] @kind byte;
  #L2b477e.  v4:= v4 ^& 255;
  #L2b4782.  v10:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.act` @type ^`int`[] @kind object;
  #L2b4786.  v4:= v10[v4];
  #L2b478a.  if v4 == 0 then goto L2b4792;
  #L2b478e.  v13[v8]:= v4;
  #L2b4792.  v8:= v8 + 1;
  #L2b4796.  v4:= v16;
  #L2b479a.  goto L2b476e;
  #L2b479c.  v15:= v15 + 1;
  #L2b47a0.  v4:= v7;
  #L2b47a2.  goto L2b46e0;
  #L2b47a4.  v2:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.savePrevious` @type ^`boolean` @kind boolean;
  #L2b47a8.  if v2 == 0 then goto L2b47e8;
  #L2b47ac.  v2:= v1.`com.bumptech.glide.gifdecoder.GifFrame.dispose` @type ^`int`;
  #L2b47b0.  if v2 == 0 then goto L2b47bc;
  #L2b47b4.  v1:= v1.`com.bumptech.glide.gifdecoder.GifFrame.dispose` @type ^`int`;
  #L2b47b8.  if v1 != v11 then goto L2b47e8;
  #L2b47bc.  v1:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.previousImage` @type ^`android.graphics.Bitmap` @kind object;
  #L2b47c0.  if v1 != 0 then goto L2b47d0;
  #L2b47c4.  call temp:= `getNextBitmap`(v17) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getNextBitmap:()Landroid/graphics/Bitmap;` @kind direct;
  #L2b47ca.  v1:= temp @kind object;
  #L2b47cc.  v0.`com.bumptech.glide.gifdecoder.GifDecoder.previousImage` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L2b47d0.  v4:= v0.`com.bumptech.glide.gifdecoder.GifDecoder.previousImage` @type ^`android.graphics.Bitmap` @kind object;
  #L2b47d4.  v6:= 0I;
  #L2b47d6.  v8:= 0I;
  #L2b47d8.  v9:= 0I;
  #L2b47da.  v5:= v13 @kind object;
  #L2b47dc.  v7:= v3;
  #L2b47de.  v10:= v3;
  #L2b47e0.  v11:= v12;
  #L2b47e2.  call `setPixels`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Landroid/graphics/Bitmap;.setPixels:([IIIIIII)V` @kind virtual;
  #L2b47e8.  call temp:= `getNextBitmap`(v17) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getNextBitmap:()Landroid/graphics/Bitmap;` @kind direct;
  #L2b47ee.  v1:= temp @kind object;
  #L2b47f0.  v6:= 0I;
  #L2b47f2.  v8:= 0I;
  #L2b47f4.  v9:= 0I;
  #L2b47f6.  v4:= v1 @kind object;
  #L2b47f8.  v5:= v13 @kind object;
  #L2b47fa.  v7:= v3;
  #L2b47fc.  v10:= v3;
  #L2b47fe.  v11:= v12;
  #L2b4800.  call `setPixels`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Landroid/graphics/Bitmap;.setPixels:([IIIIIII)V` @kind virtual;
  #L2b4806.  return v1 @kind object;
}
procedure `void` `advance`(`com.bumptech.glide.gifdecoder.GifDecoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.advance:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b4c00.  v0:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int`;
  #L2b4c04.  v0:= v0 + 1;
  #L2b4c08.  v1:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4c0c.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.frameCount` @type ^`int`;
  #L2b4c10.  v0:= v0 %% v1 @kind int;
  #L2b4c12.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int` := v0;
  #L2b4c16.  return @kind void;
}
procedure `void` `clear`(`com.bumptech.glide.gifdecoder.GifDecoder` v3 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b4c28.  v0:= 0I;
  #L2b4c2a.  v3.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v0 @kind object;
  #L2b4c2e.  v3.`com.bumptech.glide.gifdecoder.GifDecoder.data` @type ^`byte`[] := v0 @kind object;
  #L2b4c32.  v3.`com.bumptech.glide.gifdecoder.GifDecoder.mainPixels` @type ^`byte`[] := v0 @kind object;
  #L2b4c36.  v3.`com.bumptech.glide.gifdecoder.GifDecoder.mainScratch` @type ^`int`[] := v0 @kind object;
  #L2b4c3a.  v1:= v3.`com.bumptech.glide.gifdecoder.GifDecoder.previousImage` @type ^`android.graphics.Bitmap` @kind object;
  #L2b4c3e.  if v1 == 0 then goto L2b4c4c;
  #L2b4c42.  v2:= v3.`com.bumptech.glide.gifdecoder.GifDecoder.bitmapProvider` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L2b4c46.  call `release`(v2, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L2b4c4c.  v3.`com.bumptech.glide.gifdecoder.GifDecoder.previousImage` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L2b4c50.  v3.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L2b4c54.  return @kind void;
}
procedure `int` `getCurrentFrameIndex`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getCurrentFrameIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b485c.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int`;
  #L2b4860.  return v0;
}
procedure `byte`[] `getData`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getData:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4818.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.data` @type ^`byte`[] @kind object;
  #L2b481c.  return v0 @kind object;
}
procedure `int` `getDelay`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getDelay:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4874.  if v2 < 0 then goto L2b489e;
  #L2b4878.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b487c.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.frameCount` @type ^`int`;
  #L2b4880.  if v2 >= v0 then goto L2b489e;
  #L2b4884.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4888.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.frames` @type ^`java.util.List` @kind object;
  #L2b488c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b4892.  v2:= temp @kind object;
  #L2b4894.  v2:= (`com.bumptech.glide.gifdecoder.GifFrame`) v2 @kind object;
  #L2b4898.  v2:= v2.`com.bumptech.glide.gifdecoder.GifFrame.delay` @type ^`int`;
  #L2b489c.  goto L2b48a0;
  #L2b489e.  v2:= -1I;
  #L2b48a0.  return v2;
}
procedure `int` `getFrameCount`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getFrameCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b48b4.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b48b8.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.frameCount` @type ^`int`;
  #L2b48bc.  return v0;
}
procedure `int` `getHeight`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b48d0.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b48d4.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b48d8.  return v0;
}
procedure `int` `getLoopCount`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getLoopCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b48ec.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b48f0.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.loopCount` @type ^`int`;
  #L2b48f4.  return v0;
}
procedure `int` `getNextDelay`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getNextDelay:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4908.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b490c.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.frameCount` @type ^`int`;
  #L2b4910.  if v0 <= 0 then goto L2b4928;
  #L2b4914.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int`;
  #L2b4918.  if v0 >= 0 then goto L2b491e;
  #L2b491c.  goto L2b4928;
  #L2b491e.  call temp:= `getDelay`(v1, v0) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getDelay:(I)I` @kind virtual;
  #L2b4924.  v0:= temp;
  #L2b4926.  return v0;
  #L2b4928.  v0:= -1I;
  #L2b492a.  return v0;
}
procedure `android.graphics.Bitmap` `getNextFrame`(`com.bumptech.glide.gifdecoder.GifDecoder` v9 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getNextFrame:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2b4460.  @monitorenter v9
  #L2b4462.  v0:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4466.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.frameCount` @type ^`int`;
  #L2b446a.  v1:= 3I;
  #L2b446c.  v2:= 1I;
  #L2b446e.  if v0 <= 0 then goto L2b447a;
  #L2b4472.  v0:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int`;
  #L2b4476.  if v0 >= 0 then goto L2b44d6;
  #L2b447a.  v0:= `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` @kind object;
  #L2b447e.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b4484.  v0:= temp;
  #L2b4486.  if v0 == 0 then goto L2b44d2;
  #L2b448a.  v0:= `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` @kind object;
  #L2b448e.  v3:= new `java.lang.StringBuilder`;
  #L2b4492.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b4498.  v4:= "unable to decode frame, frameCount=" @kind object;
  #L2b449c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b44a2.  v4:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b44a6.  v4:= v4.`com.bumptech.glide.gifdecoder.GifHeader.frameCount` @type ^`int`;
  #L2b44aa.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b44b0.  v4:= " framePointer=" @kind object;
  #L2b44b4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b44ba.  v4:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int`;
  #L2b44be.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b44c4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b44ca.  v3:= temp @kind object;
  #L2b44cc.  call temp:= `d`(v0, v3) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2b44d2.  v9.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int` := v2;
  #L2b44d6.  v0:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int`;
  #L2b44da.  v3:= 0I;
  #L2b44dc.  if v0 == v2 then goto L2b45d4;
  #L2b44e0.  v0:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int`;
  #L2b44e4.  v4:= 2I;
  #L2b44e6.  if v0 != v4 then goto L2b44ee;
  #L2b44ea.  goto L2b45d4;
  #L2b44ee.  v0:= 0I;
  #L2b44f0.  v9.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int` := v0;
  #L2b44f4.  v4:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b44f8.  v4:= v4.`com.bumptech.glide.gifdecoder.GifHeader.frames` @type ^`java.util.List` @kind object;
  #L2b44fc.  v5:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int`;
  #L2b4500.  call temp:= `get`(v4, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b4506.  v4:= temp @kind object;
  #L2b4508.  v4:= (`com.bumptech.glide.gifdecoder.GifFrame`) v4 @kind object;
  #L2b450c.  v5:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int`;
  #L2b4510.  v5:= v5 - v2 @kind int;
  #L2b4512.  if v5 < 0 then goto L2b452c;
  #L2b4516.  v6:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b451a.  v6:= v6.`com.bumptech.glide.gifdecoder.GifHeader.frames` @type ^`java.util.List` @kind object;
  #L2b451e.  call temp:= `get`(v6, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b4524.  v5:= temp @kind object;
  #L2b4526.  v5:= (`com.bumptech.glide.gifdecoder.GifFrame`) v5 @kind object;
  #L2b452a.  goto L2b452e;
  #L2b452c.  v5:= v3 @kind object;
  #L2b452e.  v6:= v4.`com.bumptech.glide.gifdecoder.GifFrame.lct` @type ^`int`[] @kind object;
  #L2b4532.  if v6 != 0 then goto L2b4544;
  #L2b4536.  v6:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b453a.  v6:= v6.`com.bumptech.glide.gifdecoder.GifHeader.gct` @type ^`int`[] @kind object;
  #L2b453e.  v9.`com.bumptech.glide.gifdecoder.GifDecoder.act` @type ^`int`[] := v6 @kind object;
  #L2b4542.  goto L2b4564;
  #L2b4544.  v6:= v4.`com.bumptech.glide.gifdecoder.GifFrame.lct` @type ^`int`[] @kind object;
  #L2b4548.  v9.`com.bumptech.glide.gifdecoder.GifDecoder.act` @type ^`int`[] := v6 @kind object;
  #L2b454c.  v6:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4550.  v6:= v6.`com.bumptech.glide.gifdecoder.GifHeader.bgIndex` @type ^`int`;
  #L2b4554.  v7:= v4.`com.bumptech.glide.gifdecoder.GifFrame.transIndex` @type ^`int`;
  #L2b4558.  if v6 != v7 then goto L2b4564;
  #L2b455c.  v6:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4560.  v6.`com.bumptech.glide.gifdecoder.GifHeader.bgColor` @type ^`int` := v0;
  #L2b4564.  v6:= v4.`com.bumptech.glide.gifdecoder.GifFrame.transparency` @type ^`boolean` @kind boolean;
  #L2b4568.  if v6 == 0 then goto L2b4586;
  #L2b456c.  v6:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.act` @type ^`int`[] @kind object;
  #L2b4570.  v7:= v4.`com.bumptech.glide.gifdecoder.GifFrame.transIndex` @type ^`int`;
  #L2b4574.  v6:= v6[v7];
  #L2b4578.  v7:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.act` @type ^`int`[] @kind object;
  #L2b457c.  v8:= v4.`com.bumptech.glide.gifdecoder.GifFrame.transIndex` @type ^`int`;
  #L2b4580.  v7[v8]:= v0;
  #L2b4584.  v0:= v6;
  #L2b4586.  v6:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.act` @type ^`int`[] @kind object;
  #L2b458a.  if v6 != 0 then goto L2b45b4;
  #L2b458e.  v0:= `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` @kind object;
  #L2b4592.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b4598.  v0:= temp;
  #L2b459a.  if v0 == 0 then goto L2b45ac;
  #L2b459e.  v0:= `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` @kind object;
  #L2b45a2.  v1:= "No Valid Color Table" @kind object;
  #L2b45a6.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2b45ac.  v9.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int` := v2;
  #L2b45b0.  @monitorexit v9
  #L2b45b2.  return v3 @kind object;
  #L2b45b4.  call temp:= `setPixels`(v9, v4, v5) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setPixels:(Lcom/bumptech/glide/gifdecoder/GifFrame;Lcom/bumptech/glide/gifdecoder/GifFrame;)Landroid/graphics/Bitmap;` @kind direct;
  #L2b45ba.  v1:= temp @kind object;
  #L2b45bc.  v2:= v4.`com.bumptech.glide.gifdecoder.GifFrame.transparency` @type ^`boolean` @kind boolean;
  #L2b45c0.  if v2 == 0 then goto L2b45d0;
  #L2b45c4.  v2:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.act` @type ^`int`[] @kind object;
  #L2b45c8.  v3:= v4.`com.bumptech.glide.gifdecoder.GifFrame.transIndex` @type ^`int`;
  #L2b45cc.  v2[v3]:= v0;
  #L2b45d0.  @monitorexit v9
  #L2b45d2.  return v1 @kind object;
  #L2b45d4.  v0:= `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` @kind object;
  #L2b45d8.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b45de.  v0:= temp;
  #L2b45e0.  if v0 == 0 then goto L2b4614;
  #L2b45e4.  v0:= `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` @kind object;
  #L2b45e8.  v1:= new `java.lang.StringBuilder`;
  #L2b45ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b45f2.  v2:= "Unable to decode frame, status=" @kind object;
  #L2b45f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b45fc.  v2:= v9.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int`;
  #L2b4600.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4606.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b460c.  v1:= temp @kind object;
  #L2b460e.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2b4614.  @monitorexit v9
  #L2b4616.  return v3 @kind object;
  #L2b4618.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b461a.  @monitorexit v9
  #L2b461c.  throw v0;
  catch `java.lang.Throwable` @[L2b4462..L2b45b0] goto L2b4618;
  catch `java.lang.Throwable` @[L2b45b4..L2b45d0] goto L2b4618;
  catch `java.lang.Throwable` @[L2b45d4..L2b4614] goto L2b4618;
}
procedure `int` `getStatus`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getStatus:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b493c.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int`;
  #L2b4940.  return v0;
}
procedure `int` `getWidth`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4954.  v0:= v1.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4958.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b495c.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.gifdecoder.GifDecoder` v4 @kind this, `java.io.InputStream` v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.read:(Ljava/io/InputStream;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b4a80.  if v5 == 0 then goto L2b4ae6;
  #L2b4a84.  v0:= 16384I;
  #L2b4a88.  if v6 <= 0 then goto L2b4a92;
  #L2b4a8c.  v6:= v6 + 4096;
  #L2b4a90.  goto L2b4a96;
  #L2b4a92.  v6:= 16384I;
  #L2b4a96.  v1:= new `java.io.ByteArrayOutputStream`;
  #L2b4a9a.  call `<init>`(v1, v6) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L2b4aa0.  v6:= new `byte`[v0];
  #L2b4aa4.  v0:= length @variable v6;
  #L2b4aa6.  v2:= 0I;
  #L2b4aa8.  call temp:= `read`(v5, v6, v2, v0) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L2b4aae.  v0:= temp;
  #L2b4ab0.  v3:= -1I;
  #L2b4ab2.  if v0 == v3 then goto L2b4abe;
  #L2b4ab6.  call `write`(v1, v6, v2, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L2b4abc.  goto L2b4aa4;
  #L2b4abe.  call `flush`(v1) @signature `Ljava/io/ByteArrayOutputStream;.flush:()V` @kind virtual;
  #L2b4ac4.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L2b4aca.  v6:= temp @kind object;
  #L2b4acc.  call temp:= `read`(v4, v6) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.read:([B)I` @kind virtual;
  #L2b4ad2.  goto L2b4aec;
  #L2b4ad4.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L2b4ad6.  v0:= `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` @kind object;
  #L2b4ada.  v1:= "Error reading data from stream" @kind object;
  #L2b4ade.  call temp:= `w`(v0, v1, v6) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2b4ae4.  goto L2b4aec;
  #L2b4ae6.  v6:= 2I;
  #L2b4ae8.  v4.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int` := v6;
  #L2b4aec.  if v5 == 0 then goto L2b4b08;
  #L2b4af0.  call `close`(v5) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2b4af6.  goto L2b4b08;
  #L2b4af8.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L2b4afa.  v6:= `@@com.bumptech.glide.gifdecoder.GifDecoder.TAG` @type ^`java.lang.String` @kind object;
  #L2b4afe.  v0:= "Error closing stream" @kind object;
  #L2b4b02.  call temp:= `w`(v6, v0, v5) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2b4b08.  v5:= v4.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int`;
  #L2b4b0c.  return v5;
  catch `java.io.IOException` @[L2b4a96..L2b4ad2] goto L2b4ad4;
  catch `java.io.IOException` @[L2b4af0..L2b4af6] goto L2b4af8;
}
procedure `int` `read`(`com.bumptech.glide.gifdecoder.GifDecoder` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b49ac.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.data` @type ^`byte`[] := v3 @kind object;
  #L2b49b0.  call temp:= `getHeaderParser`(v2) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getHeaderParser:()Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind direct;
  #L2b49b6.  v0:= temp @kind object;
  #L2b49b8.  call temp:= `setData`(v0, v3) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.setData:([B)Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind virtual;
  #L2b49be.  v0:= temp @kind object;
  #L2b49c0.  call temp:= `parseHeader`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.parseHeader:()Lcom/bumptech/glide/gifdecoder/GifHeader;` @kind virtual;
  #L2b49c6.  v0:= temp @kind object;
  #L2b49c8.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v0 @kind object;
  #L2b49cc.  if v3 == 0 then goto L2b4a6a;
  #L2b49d0.  call temp:= `wrap`(v3) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L2b49d6.  v3:= temp @kind object;
  #L2b49d8.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` := v3 @kind object;
  #L2b49dc.  v3:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` @kind object;
  #L2b49e0.  call temp:= `rewind`(v3) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L2b49e6.  v3:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` @kind object;
  #L2b49ea.  v0:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L2b49ee.  call temp:= `order`(v3, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2b49f4.  v3:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b49f8.  v3:= v3.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b49fc.  v0:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4a00.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b4a04.  v3:= v3 * v0 @kind int;
  #L2b4a08.  v3:= new `byte`[v3];
  #L2b4a0c.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.mainPixels` @type ^`byte`[] := v3 @kind object;
  #L2b4a10.  v3:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4a14.  v3:= v3.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b4a18.  v0:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4a1c.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b4a20.  v3:= v3 * v0 @kind int;
  #L2b4a24.  v3:= new `int`[v3];
  #L2b4a28.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.mainScratch` @type ^`int`[] := v3 @kind object;
  #L2b4a2c.  v3:= 0I;
  #L2b4a2e.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.savePrevious` @type ^`boolean` := v3 @kind boolean;
  #L2b4a32.  v3:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2b4a36.  v3:= v3.`com.bumptech.glide.gifdecoder.GifHeader.frames` @type ^`java.util.List` @kind object;
  #L2b4a3a.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b4a40.  v3:= temp @kind object;
  #L2b4a42.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b4a48.  v0:= temp;
  #L2b4a4a.  if v0 == 0 then goto L2b4a6a;
  #L2b4a4e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b4a54.  v0:= temp @kind object;
  #L2b4a56.  v0:= (`com.bumptech.glide.gifdecoder.GifFrame`) v0 @kind object;
  #L2b4a5a.  v0:= v0.`com.bumptech.glide.gifdecoder.GifFrame.dispose` @type ^`int`;
  #L2b4a5e.  v1:= 3I;
  #L2b4a60.  if v0 != v1 then goto L2b4a42;
  #L2b4a64.  v3:= 1I;
  #L2b4a66.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.savePrevious` @type ^`boolean` := v3 @kind boolean;
  #L2b4a6a.  v3:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int`;
  #L2b4a6e.  return v3;
}
procedure `void` `resetFrameIndex`(`com.bumptech.glide.gifdecoder.GifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.resetFrameIndex:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4f78.  v0:= -1I;
  #L2b4f7a.  v1.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int` := v0;
  #L2b4f7e.  return @kind void;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.GifDecoder` v2 @kind this, `com.bumptech.glide.gifdecoder.GifHeader` v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b4fb8.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.header` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v3 @kind object;
  #L2b4fbc.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.data` @type ^`byte`[] := v4 @kind object;
  #L2b4fc0.  v0:= 0I;
  #L2b4fc2.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.status` @type ^`int` := v0;
  #L2b4fc6.  v1:= -1I;
  #L2b4fc8.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.framePointer` @type ^`int` := v1;
  #L2b4fcc.  call temp:= `wrap`(v4) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L2b4fd2.  v4:= temp @kind object;
  #L2b4fd4.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` := v4 @kind object;
  #L2b4fd8.  v4:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` @kind object;
  #L2b4fdc.  call temp:= `rewind`(v4) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L2b4fe2.  v4:= v2.`com.bumptech.glide.gifdecoder.GifDecoder.rawData` @type ^`java.nio.ByteBuffer` @kind object;
  #L2b4fe6.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L2b4fea.  call temp:= `order`(v4, v1) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2b4ff0.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.savePrevious` @type ^`boolean` := v0 @kind boolean;
  #L2b4ff4.  v4:= v3.`com.bumptech.glide.gifdecoder.GifHeader.frames` @type ^`java.util.List` @kind object;
  #L2b4ff8.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b4ffe.  v4:= temp @kind object;
  #L2b5000.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b5006.  v0:= temp;
  #L2b5008.  if v0 == 0 then goto L2b5028;
  #L2b500c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b5012.  v0:= temp @kind object;
  #L2b5014.  v0:= (`com.bumptech.glide.gifdecoder.GifFrame`) v0 @kind object;
  #L2b5018.  v0:= v0.`com.bumptech.glide.gifdecoder.GifFrame.dispose` @type ^`int`;
  #L2b501c.  v1:= 3I;
  #L2b501e.  if v0 != v1 then goto L2b5000;
  #L2b5022.  v4:= 1I;
  #L2b5024.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.savePrevious` @type ^`boolean` := v4 @kind boolean;
  #L2b5028.  v4:= v3.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b502c.  v0:= v3.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b5030.  v4:= v4 * v0 @kind int;
  #L2b5034.  v4:= new `byte`[v4];
  #L2b5038.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.mainPixels` @type ^`byte`[] := v4 @kind object;
  #L2b503c.  v4:= v3.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b5040.  v3:= v3.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b5044.  v4:= v4 * v3 @kind int;
  #L2b5048.  v3:= new `int`[v4];
  #L2b504c.  v2.`com.bumptech.glide.gifdecoder.GifDecoder.mainScratch` @type ^`int`[] := v3 @kind object;
  #L2b5050.  return @kind void;
}
