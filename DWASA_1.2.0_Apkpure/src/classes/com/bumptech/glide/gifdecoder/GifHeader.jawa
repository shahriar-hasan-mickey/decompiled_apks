record `com.bumptech.glide.gifdecoder.GifHeader` @kind class @AccessFlag PUBLIC {
  `int` `com.bumptech.glide.gifdecoder.GifHeader.bgColor` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.bgIndex` @AccessFlag ;
  `com.bumptech.glide.gifdecoder.GifFrame` `com.bumptech.glide.gifdecoder.GifHeader.currentFrame` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.frameCount` @AccessFlag ;
  `java.util.List` `com.bumptech.glide.gifdecoder.GifHeader.frames` @AccessFlag ;
  `int`[] `com.bumptech.glide.gifdecoder.GifHeader.gct` @AccessFlag ;
  `boolean` `com.bumptech.glide.gifdecoder.GifHeader.gctFlag` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.gctSize` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.height` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.loopCount` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.pixelAspect` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.status` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.width` @AccessFlag ;
}
procedure `void` `<init>`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b5904.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b590a.  v0:= 0I;
  #L2b590c.  v1.`com.bumptech.glide.gifdecoder.GifHeader.gct` @type ^`int`[] := v0 @kind object;
  #L2b5910.  v0:= 0I;
  #L2b5912.  v1.`com.bumptech.glide.gifdecoder.GifHeader.status` @type ^`int` := v0;
  #L2b5916.  v1.`com.bumptech.glide.gifdecoder.GifHeader.frameCount` @type ^`int` := v0;
  #L2b591a.  v0:= new `java.util.ArrayList`;
  #L2b591e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b5924.  v1.`com.bumptech.glide.gifdecoder.GifHeader.frames` @type ^`java.util.List` := v0 @kind object;
  #L2b5928.  return @kind void;
}
procedure `int` `getHeight`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.getHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b58a4.  v0:= v1.`com.bumptech.glide.gifdecoder.GifHeader.height` @type ^`int`;
  #L2b58a8.  return v0;
}
procedure `int` `getNumFrames`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.getNumFrames:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b58bc.  v0:= v1.`com.bumptech.glide.gifdecoder.GifHeader.frameCount` @type ^`int`;
  #L2b58c0.  return v0;
}
procedure `int` `getStatus`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.getStatus:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b58d4.  v0:= v1.`com.bumptech.glide.gifdecoder.GifHeader.status` @type ^`int`;
  #L2b58d8.  return v0;
}
procedure `int` `getWidth`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.getWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b58ec.  v0:= v1.`com.bumptech.glide.gifdecoder.GifHeader.width` @type ^`int`;
  #L2b58f0.  return v0;
}
