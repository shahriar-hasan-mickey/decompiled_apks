record `com.bumptech.glide.signature.MediaStoreSignature` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Key` @kind interface {
  `long` `com.bumptech.glide.signature.MediaStoreSignature.dateModified` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.signature.MediaStoreSignature.mimeType` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.signature.MediaStoreSignature.orientation` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.signature.MediaStoreSignature` v0 @kind this, `java.lang.String` v1 @kind object, `long` v2 , `int` v4 ) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.<init>:(Ljava/lang/String;JI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ca2ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ca2f2.  v0.`com.bumptech.glide.signature.MediaStoreSignature.mimeType` @type ^`java.lang.String` := v1 @kind object;
  #L2ca2f6.  v0.`com.bumptech.glide.signature.MediaStoreSignature.dateModified` @type ^`long` := v2 @kind wide;
  #L2ca2fa.  v0.`com.bumptech.glide.signature.MediaStoreSignature.orientation` @type ^`int` := v4;
  #L2ca2fe.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.signature.MediaStoreSignature` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2ca228.  v0:= 1I;
  #L2ca22a.  if v7 != v8 then goto L2ca230;
  #L2ca22e.  return v0;
  #L2ca230.  v1:= 0I;
  #L2ca232.  if v8 == 0 then goto L2ca292;
  #L2ca236.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ca23c.  v2:= temp @kind object;
  #L2ca23e.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ca244.  v3:= temp @kind object;
  #L2ca246.  if v2 == v3 then goto L2ca24c;
  #L2ca24a.  goto L2ca292;
  #L2ca24c.  v8:= (`com.bumptech.glide.signature.MediaStoreSignature`) v8 @kind object;
  #L2ca250.  v2:= v7.`com.bumptech.glide.signature.MediaStoreSignature.dateModified` @type ^`long` @kind wide;
  #L2ca254.  v4:= v8.`com.bumptech.glide.signature.MediaStoreSignature.dateModified` @type ^`long` @kind wide;
  #L2ca258.  v6:= lcmp(v2, v4);
  #L2ca25c.  if v6 == 0 then goto L2ca262;
  #L2ca260.  return v1;
  #L2ca262.  v2:= v7.`com.bumptech.glide.signature.MediaStoreSignature.orientation` @type ^`int`;
  #L2ca266.  v3:= v8.`com.bumptech.glide.signature.MediaStoreSignature.orientation` @type ^`int`;
  #L2ca26a.  if v2 == v3 then goto L2ca270;
  #L2ca26e.  return v1;
  #L2ca270.  v2:= v7.`com.bumptech.glide.signature.MediaStoreSignature.mimeType` @type ^`java.lang.String` @kind object;
  #L2ca274.  v8:= v8.`com.bumptech.glide.signature.MediaStoreSignature.mimeType` @type ^`java.lang.String` @kind object;
  #L2ca278.  if v2 == 0 then goto L2ca28a;
  #L2ca27c.  call temp:= `equals`(v2, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ca282.  v8:= temp;
  #L2ca284.  if v8 != 0 then goto L2ca290;
  #L2ca288.  goto L2ca28e;
  #L2ca28a.  if v8 == 0 then goto L2ca290;
  #L2ca28e.  return v1;
  #L2ca290.  return v0;
  #L2ca292.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.signature.MediaStoreSignature` v5 @kind this) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ca2a4.  v0:= v5.`com.bumptech.glide.signature.MediaStoreSignature.mimeType` @type ^`java.lang.String` @kind object;
  #L2ca2a8.  if v0 == 0 then goto L2ca2b6;
  #L2ca2ac.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2ca2b2.  v0:= temp;
  #L2ca2b4.  goto L2ca2b8;
  #L2ca2b6.  v0:= 0I;
  #L2ca2b8.  v0:= v0 * 31;
  #L2ca2bc.  v1:= v5.`com.bumptech.glide.signature.MediaStoreSignature.dateModified` @type ^`long` @kind wide;
  #L2ca2c0.  v3:= 32I;
  #L2ca2c4.  v3:= v1 ^>> v3 @kind long;
  #L2ca2c8.  v1:= v1 ^~ v3 @kind long;
  #L2ca2ca.  v2:= (`int`) v1 @kind l2i;
  #L2ca2cc.  v0:= v0 + v2 @kind int;
  #L2ca2ce.  v0:= v0 * 31;
  #L2ca2d2.  v1:= v5.`com.bumptech.glide.signature.MediaStoreSignature.orientation` @type ^`int`;
  #L2ca2d6.  v0:= v0 + v1 @kind int;
  #L2ca2d8.  return v0;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.signature.MediaStoreSignature` v3 @kind this, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ca310.  v0:= 12I;
  #L2ca314.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L2ca31a.  v0:= temp @kind object;
  #L2ca31c.  v1:= v3.`com.bumptech.glide.signature.MediaStoreSignature.dateModified` @type ^`long` @kind wide;
  #L2ca320.  call temp:= `putLong`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2ca326.  v0:= temp @kind object;
  #L2ca328.  v1:= v3.`com.bumptech.glide.signature.MediaStoreSignature.orientation` @type ^`int`;
  #L2ca32c.  call temp:= `putInt`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2ca332.  v0:= temp @kind object;
  #L2ca334.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L2ca33a.  v0:= temp @kind object;
  #L2ca33c.  call `update`(v4, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2ca342.  v0:= v3.`com.bumptech.glide.signature.MediaStoreSignature.mimeType` @type ^`java.lang.String` @kind object;
  #L2ca346.  v1:= "UTF-8" @kind object;
  #L2ca34a.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L2ca350.  v0:= temp @kind object;
  #L2ca352.  call `update`(v4, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2ca358.  return @kind void;
}
