record `com.bumptech.glide.signature.ApplicationVersionSignature` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.concurrent.ConcurrentHashMap` `@@com.bumptech.glide.signature.ApplicationVersionSignature.PACKAGE_NAME_TO_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/signature/ApplicationVersionSignature;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ca170.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L2ca174.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L2ca17a.  `@@com.bumptech.glide.signature.ApplicationVersionSignature.PACKAGE_NAME_TO_KEY` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L2ca17e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.signature.ApplicationVersionSignature` v0 @kind this) @signature `Lcom/bumptech/glide/signature/ApplicationVersionSignature;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ca190.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ca196.  return @kind void;
}
procedure `com.bumptech.glide.load.Key` `obtain`(`android.content.Context` v2 @kind object) @signature `Lcom/bumptech/glide/signature/ApplicationVersionSignature;.obtain:(Landroid/content/Context;)Lcom/bumptech/glide/load/Key;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2ca0ac.  call temp:= `getPackageName`(v2) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L2ca0b2.  v0:= temp @kind object;
  #L2ca0b4.  v1:= `@@com.bumptech.glide.signature.ApplicationVersionSignature.PACKAGE_NAME_TO_KEY` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2ca0b8.  call temp:= `get`(v1, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ca0be.  v1:= temp @kind object;
  #L2ca0c0.  v1:= (`com.bumptech.glide.load.Key`) v1 @kind object;
  #L2ca0c4.  if v1 != 0 then goto L2ca0e8;
  #L2ca0c8.  call temp:= `obtainVersionSignature`(v2) @signature `Lcom/bumptech/glide/signature/ApplicationVersionSignature;.obtainVersionSignature:(Landroid/content/Context;)Lcom/bumptech/glide/load/Key;` @kind static;
  #L2ca0ce.  v1:= temp @kind object;
  #L2ca0d0.  v2:= `@@com.bumptech.glide.signature.ApplicationVersionSignature.PACKAGE_NAME_TO_KEY` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2ca0d4.  call temp:= `putIfAbsent`(v2, v0, v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ca0da.  v2:= temp @kind object;
  #L2ca0dc.  v2:= (`com.bumptech.glide.load.Key`) v2 @kind object;
  #L2ca0e0.  if v2 != 0 then goto L2ca0e6;
  #L2ca0e4.  goto L2ca0e8;
  #L2ca0e6.  v1:= v2 @kind object;
  #L2ca0e8.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.Key` `obtainVersionSignature`(`android.content.Context` v2 @kind object) @signature `Lcom/bumptech/glide/signature/ApplicationVersionSignature;.obtainVersionSignature:(Landroid/content/Context;)Lcom/bumptech/glide/load/Key;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2ca0fc.  call temp:= `getPackageManager`(v2) @signature `Landroid/content/Context;.getPackageManager:()Landroid/content/pm/PackageManager;` @kind virtual;
  #L2ca102.  v0:= temp @kind object;
  #L2ca104.  call temp:= `getPackageName`(v2) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L2ca10a.  v2:= temp @kind object;
  #L2ca10c.  v1:= 0I;
  #L2ca10e.  call temp:= `getPackageInfo`(v0, v2, v1) @signature `Landroid/content/pm/PackageManager;.getPackageInfo:(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;` @kind virtual;
  #L2ca114.  v2:= temp @kind object;
  #L2ca116.  goto L2ca122;
  #L2ca118.  v2:= Exception @type ^`android.content.pm.PackageManager$NameNotFoundException` @kind object;
  #L2ca11a.  call `printStackTrace`(v2) @signature `Landroid/content/pm/PackageManager$NameNotFoundException;.printStackTrace:()V` @kind virtual;
  #L2ca120.  v2:= 0I;
  #L2ca122.  if v2 == 0 then goto L2ca134;
  #L2ca126.  v2:= v2.`android.content.pm.PackageInfo.versionCode` @type ^`int`;
  #L2ca12a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2ca130.  v2:= temp @kind object;
  #L2ca132.  goto L2ca144;
  #L2ca134.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L2ca13a.  v2:= temp @kind object;
  #L2ca13c.  call temp:= `toString`(v2) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ca142.  v2:= temp @kind object;
  #L2ca144.  v0:= new `com.bumptech.glide.signature.StringSignature`;
  #L2ca148.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/signature/StringSignature;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ca14e.  return v0 @kind object;
  catch `android.content.pm.PackageManager$NameNotFoundException` @[L2ca0fc..L2ca116] goto L2ca118;
}
procedure `void` `reset`() @signature `Lcom/bumptech/glide/signature/ApplicationVersionSignature;.reset:()V` @AccessFlag STATIC {
    temp;
    v0;

  #L2ca1a8.  v0:= `@@com.bumptech.glide.signature.ApplicationVersionSignature.PACKAGE_NAME_TO_KEY` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2ca1ac.  call `clear`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.clear:()V` @kind virtual;
  #L2ca1b2.  return @kind void;
}
