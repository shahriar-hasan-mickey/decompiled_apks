record `com.bumptech.glide.signature.EmptySignature` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.Key` @kind interface {
}
global `com.bumptech.glide.signature.EmptySignature` `@@com.bumptech.glide.signature.EmptySignature.EMPTY_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/signature/EmptySignature;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ca1dc.  v0:= new `com.bumptech.glide.signature.EmptySignature`;
  #L2ca1e0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/signature/EmptySignature;.<init>:()V` @kind direct;
  #L2ca1e6.  `@@com.bumptech.glide.signature.EmptySignature.EMPTY_KEY` @type ^`com.bumptech.glide.signature.EmptySignature` := v0 @kind object;
  #L2ca1ea.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.signature.EmptySignature` v0 @kind this) @signature `Lcom/bumptech/glide/signature/EmptySignature;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ca1fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ca202.  return @kind void;
}
procedure `com.bumptech.glide.signature.EmptySignature` `obtain`() @signature `Lcom/bumptech/glide/signature/EmptySignature;.obtain:()Lcom/bumptech/glide/signature/EmptySignature;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ca1c4.  v0:= `@@com.bumptech.glide.signature.EmptySignature.EMPTY_KEY` @type ^`com.bumptech.glide.signature.EmptySignature` @kind object;
  #L2ca1c8.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.signature.EmptySignature` v0 @kind this, `java.security.MessageDigest` v1 @kind object) @signature `Lcom/bumptech/glide/signature/EmptySignature;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;

  #L2ca214.  return @kind void;
}
