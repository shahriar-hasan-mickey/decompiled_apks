record `com.bumptech.glide.signature.StringSignature` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Key` @kind interface {
  `java.lang.String` `com.bumptech.glide.signature.StringSignature.signature` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.signature.StringSignature` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/signature/StringSignature;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ca424.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ca42a.  if v2 == 0 then goto L2ca434;
  #L2ca42e.  v1.`com.bumptech.glide.signature.StringSignature.signature` @type ^`java.lang.String` := v2 @kind object;
  #L2ca432.  return @kind void;
  #L2ca434.  v2:= new `java.lang.NullPointerException`;
  #L2ca438.  v0:= "Signature cannot be null!" @kind object;
  #L2ca43c.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ca442.  throw v2;
}
procedure `boolean` `equals`(`com.bumptech.glide.signature.StringSignature` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/signature/StringSignature;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ca36c.  if v2 != v3 then goto L2ca374;
  #L2ca370.  v3:= 1I;
  #L2ca372.  return v3;
  #L2ca374.  if v3 == 0 then goto L2ca3a4;
  #L2ca378.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ca37e.  v0:= temp @kind object;
  #L2ca380.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ca386.  v1:= temp @kind object;
  #L2ca388.  if v0 == v1 then goto L2ca38e;
  #L2ca38c.  goto L2ca3a4;
  #L2ca38e.  v3:= (`com.bumptech.glide.signature.StringSignature`) v3 @kind object;
  #L2ca392.  v0:= v2.`com.bumptech.glide.signature.StringSignature.signature` @type ^`java.lang.String` @kind object;
  #L2ca396.  v3:= v3.`com.bumptech.glide.signature.StringSignature.signature` @type ^`java.lang.String` @kind object;
  #L2ca39a.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ca3a0.  v3:= temp;
  #L2ca3a2.  return v3;
  #L2ca3a4.  v3:= 0I;
  #L2ca3a6.  return v3;
}
procedure `int` `hashCode`(`com.bumptech.glide.signature.StringSignature` v1 @kind this) @signature `Lcom/bumptech/glide/signature/StringSignature;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca3b8.  v0:= v1.`com.bumptech.glide.signature.StringSignature.signature` @type ^`java.lang.String` @kind object;
  #L2ca3bc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2ca3c2.  v0:= temp;
  #L2ca3c4.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.signature.StringSignature` v2 @kind this) @signature `Lcom/bumptech/glide/signature/StringSignature;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ca3d8.  v0:= new `java.lang.StringBuilder`;
  #L2ca3dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ca3e2.  v1:= "StringSignature{signature='" @kind object;
  #L2ca3e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca3ec.  v1:= v2.`com.bumptech.glide.signature.StringSignature.signature` @type ^`java.lang.String` @kind object;
  #L2ca3f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca3f6.  v1:= 39I;
  #L2ca3fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca400.  v1:= 125I;
  #L2ca404.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca40a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ca410.  v0:= temp @kind object;
  #L2ca412.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.signature.StringSignature` v2 @kind this, `java.security.MessageDigest` v3 @kind object) @signature `Lcom/bumptech/glide/signature/StringSignature;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ca454.  v0:= v2.`com.bumptech.glide.signature.StringSignature.signature` @type ^`java.lang.String` @kind object;
  #L2ca458.  v1:= "UTF-8" @kind object;
  #L2ca45c.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L2ca462.  v0:= temp @kind object;
  #L2ca464.  call `update`(v3, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2ca46a.  return @kind void;
}
