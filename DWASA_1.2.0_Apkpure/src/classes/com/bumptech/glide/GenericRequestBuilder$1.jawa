record `com.bumptech.glide.GenericRequestBuilder$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.GenericRequestBuilder` `com.bumptech.glide.GenericRequestBuilder$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.bumptech.glide.request.RequestFutureTarget` `com.bumptech.glide.GenericRequestBuilder$1.val$target` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.GenericRequestBuilder$1` v0 @kind this, `com.bumptech.glide.GenericRequestBuilder` v1 @kind object, `com.bumptech.glide.request.RequestFutureTarget` v2 @kind object) @signature `Lcom/bumptech/glide/GenericRequestBuilder$1;.<init>:(Lcom/bumptech/glide/GenericRequestBuilder;Lcom/bumptech/glide/request/RequestFutureTarget;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2af1e8.  v0.`com.bumptech.glide.GenericRequestBuilder$1.this$0` @type ^`com.bumptech.glide.GenericRequestBuilder` := v1 @kind object;
  #L2af1ec.  v0.`com.bumptech.glide.GenericRequestBuilder$1.val$target` @type ^`com.bumptech.glide.request.RequestFutureTarget` := v2 @kind object;
  #L2af1f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2af1f6.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.GenericRequestBuilder$1` v2 @kind this) @signature `Lcom/bumptech/glide/GenericRequestBuilder$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2af208.  v0:= v2.`com.bumptech.glide.GenericRequestBuilder$1.val$target` @type ^`com.bumptech.glide.request.RequestFutureTarget` @kind object;
  #L2af20c.  call temp:= `isCancelled`(v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.isCancelled:()Z` @kind virtual;
  #L2af212.  v0:= temp;
  #L2af214.  if v0 != 0 then goto L2af226;
  #L2af218.  v0:= v2.`com.bumptech.glide.GenericRequestBuilder$1.this$0` @type ^`com.bumptech.glide.GenericRequestBuilder` @kind object;
  #L2af21c.  v1:= v2.`com.bumptech.glide.GenericRequestBuilder$1.val$target` @type ^`com.bumptech.glide.request.RequestFutureTarget` @kind object;
  #L2af220.  call temp:= `into`(v0, v1) @signature `Lcom/bumptech/glide/GenericRequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L2af226.  return @kind void;
}
