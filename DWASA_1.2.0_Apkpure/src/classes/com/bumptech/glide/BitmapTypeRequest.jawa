record `com.bumptech.glide.BitmapTypeRequest` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.BitmapRequestBuilder` @kind class {
  `com.bumptech.glide.load.model.ModelLoader` `com.bumptech.glide.BitmapTypeRequest.fileDescriptorModelLoader` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.Glide` `com.bumptech.glide.BitmapTypeRequest.glide` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.RequestManager$OptionsApplier` `com.bumptech.glide.BitmapTypeRequest.optionsApplier` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.model.ModelLoader` `com.bumptech.glide.BitmapTypeRequest.streamModelLoader` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.BitmapTypeRequest` v3 @kind this, `com.bumptech.glide.GenericRequestBuilder` v4 @kind object, `com.bumptech.glide.load.model.ModelLoader` v5 @kind object, `com.bumptech.glide.load.model.ModelLoader` v6 @kind object, `com.bumptech.glide.RequestManager$OptionsApplier` v7 @kind object) @signature `Lcom/bumptech/glide/BitmapTypeRequest;.<init>:(Lcom/bumptech/glide/GenericRequestBuilder;Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/RequestManager$OptionsApplier;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2ae7a0.  v0:= v4.`com.bumptech.glide.GenericRequestBuilder.glide` @type ^`com.bumptech.glide.Glide` @kind object;
  #L2ae7a4.  v1:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L2ae7a8.  v2:= 0I;
  #L2ae7aa.  call temp:= `buildProvider`(v0, v5, v6, v1, v2) @signature `Lcom/bumptech/glide/BitmapTypeRequest;.buildProvider:(Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/load/model/ModelLoader;Ljava/lang/Class;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)Lcom/bumptech/glide/provider/FixedLoadProvider;` @kind static;
  #L2ae7b0.  v0:= temp @kind object;
  #L2ae7b2.  v1:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L2ae7b6.  call `<init>`(v3, v0, v1, v4) @signature `Lcom/bumptech/glide/BitmapRequestBuilder;.<init>:(Lcom/bumptech/glide/provider/LoadProvider;Ljava/lang/Class;Lcom/bumptech/glide/GenericRequestBuilder;)V` @kind direct;
  #L2ae7bc.  v3.`com.bumptech.glide.BitmapTypeRequest.streamModelLoader` @type ^`com.bumptech.glide.load.model.ModelLoader` := v5 @kind object;
  #L2ae7c0.  v3.`com.bumptech.glide.BitmapTypeRequest.fileDescriptorModelLoader` @type ^`com.bumptech.glide.load.model.ModelLoader` := v6 @kind object;
  #L2ae7c4.  v4:= v4.`com.bumptech.glide.GenericRequestBuilder.glide` @type ^`com.bumptech.glide.Glide` @kind object;
  #L2ae7c8.  v3.`com.bumptech.glide.BitmapTypeRequest.glide` @type ^`com.bumptech.glide.Glide` := v4 @kind object;
  #L2ae7cc.  v3.`com.bumptech.glide.BitmapTypeRequest.optionsApplier` @type ^`com.bumptech.glide.RequestManager$OptionsApplier` := v7 @kind object;
  #L2ae7d0.  return @kind void;
}
procedure `com.bumptech.glide.provider.FixedLoadProvider` `buildProvider`(`com.bumptech.glide.Glide` v1 @kind object, `com.bumptech.glide.load.model.ModelLoader` v2 @kind object, `com.bumptech.glide.load.model.ModelLoader` v3 @kind object, `java.lang.Class` v4 @kind object, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v5 @kind object) @signature `Lcom/bumptech/glide/BitmapTypeRequest;.buildProvider:(Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/load/model/ModelLoader;Ljava/lang/Class;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)Lcom/bumptech/glide/provider/FixedLoadProvider;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2ae74c.  if v2 != 0 then goto L2ae758;
  #L2ae750.  if v3 != 0 then goto L2ae758;
  #L2ae754.  v1:= 0I;
  #L2ae756.  return v1 @kind object;
  #L2ae758.  if v5 != 0 then goto L2ae768;
  #L2ae75c.  v5:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L2ae760.  call temp:= `buildTranscoder`(v1, v5, v4) @signature `Lcom/bumptech/glide/Glide;.buildTranscoder:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;` @kind virtual;
  #L2ae766.  v5:= temp @kind object;
  #L2ae768.  v4:= constclass @type ^`com.bumptech.glide.load.model.ImageVideoWrapper` @kind object;
  #L2ae76c.  v0:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L2ae770.  call temp:= `buildDataProvider`(v1, v4, v0) @signature `Lcom/bumptech/glide/Glide;.buildDataProvider:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/provider/DataLoadProvider;` @kind virtual;
  #L2ae776.  v1:= temp @kind object;
  #L2ae778.  v4:= new `com.bumptech.glide.load.model.ImageVideoModelLoader`;
  #L2ae77c.  call `<init>`(v4, v2, v3) @signature `Lcom/bumptech/glide/load/model/ImageVideoModelLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/load/model/ModelLoader;)V` @kind direct;
  #L2ae782.  v2:= new `com.bumptech.glide.provider.FixedLoadProvider`;
  #L2ae786.  call `<init>`(v2, v4, v5, v1) @signature `Lcom/bumptech/glide/provider/FixedLoadProvider;.<init>:(Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Lcom/bumptech/glide/provider/DataLoadProvider;)V` @kind direct;
  #L2ae78c.  return v2 @kind object;
}
procedure `com.bumptech.glide.BitmapRequestBuilder` `toBytes`(`com.bumptech.glide.BitmapTypeRequest` v2 @kind this) @signature `Lcom/bumptech/glide/BitmapTypeRequest;.toBytes:()Lcom/bumptech/glide/BitmapRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ae6bc.  v0:= new `com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder`;
  #L2ae6c0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder;.<init>:()V` @kind direct;
  #L2ae6c6.  v1:= constclass @type ^`byte`[] @kind object;
  #L2ae6ca.  call temp:= `transcode`(v2, v0, v1) @signature `Lcom/bumptech/glide/BitmapTypeRequest;.transcode:(Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Ljava/lang/Class;)Lcom/bumptech/glide/BitmapRequestBuilder;` @kind virtual;
  #L2ae6d0.  v0:= temp @kind object;
  #L2ae6d2.  return v0 @kind object;
}
procedure `com.bumptech.glide.BitmapRequestBuilder` `toBytes`(`com.bumptech.glide.BitmapTypeRequest` v1 @kind this, `android.graphics.Bitmap$CompressFormat` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/BitmapTypeRequest;.toBytes:(Landroid/graphics/Bitmap$CompressFormat;I)Lcom/bumptech/glide/BitmapRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ae6e4.  v0:= new `com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder`;
  #L2ae6e8.  call `<init>`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder;.<init>:(Landroid/graphics/Bitmap$CompressFormat;I)V` @kind direct;
  #L2ae6ee.  v2:= constclass @type ^`byte`[] @kind object;
  #L2ae6f2.  call temp:= `transcode`(v1, v0, v2) @signature `Lcom/bumptech/glide/BitmapTypeRequest;.transcode:(Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Ljava/lang/Class;)Lcom/bumptech/glide/BitmapRequestBuilder;` @kind virtual;
  #L2ae6f8.  v2:= temp @kind object;
  #L2ae6fa.  return v2 @kind object;
}
procedure `com.bumptech.glide.BitmapRequestBuilder` `transcode`(`com.bumptech.glide.BitmapTypeRequest` v5 @kind this, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lcom/bumptech/glide/BitmapTypeRequest;.transcode:(Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Ljava/lang/Class;)Lcom/bumptech/glide/BitmapRequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ae70c.  v0:= v5.`com.bumptech.glide.BitmapTypeRequest.optionsApplier` @type ^`com.bumptech.glide.RequestManager$OptionsApplier` @kind object;
  #L2ae710.  v1:= new `com.bumptech.glide.BitmapRequestBuilder`;
  #L2ae714.  v2:= v5.`com.bumptech.glide.BitmapTypeRequest.glide` @type ^`com.bumptech.glide.Glide` @kind object;
  #L2ae718.  v3:= v5.`com.bumptech.glide.BitmapTypeRequest.streamModelLoader` @type ^`com.bumptech.glide.load.model.ModelLoader` @kind object;
  #L2ae71c.  v4:= v5.`com.bumptech.glide.BitmapTypeRequest.fileDescriptorModelLoader` @type ^`com.bumptech.glide.load.model.ModelLoader` @kind object;
  #L2ae720.  call temp:= `buildProvider`(v2, v3, v4, v7, v6) @signature `Lcom/bumptech/glide/BitmapTypeRequest;.buildProvider:(Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/load/model/ModelLoader;Ljava/lang/Class;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)Lcom/bumptech/glide/provider/FixedLoadProvider;` @kind static;
  #L2ae726.  v6:= temp @kind object;
  #L2ae728.  call `<init>`(v1, v6, v7, v5) @signature `Lcom/bumptech/glide/BitmapRequestBuilder;.<init>:(Lcom/bumptech/glide/provider/LoadProvider;Ljava/lang/Class;Lcom/bumptech/glide/GenericRequestBuilder;)V` @kind direct;
  #L2ae72e.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/RequestManager$OptionsApplier;.apply:(Lcom/bumptech/glide/GenericRequestBuilder;)Lcom/bumptech/glide/GenericRequestBuilder;` @kind virtual;
  #L2ae734.  v6:= temp @kind object;
  #L2ae736.  v6:= (`com.bumptech.glide.BitmapRequestBuilder`) v6 @kind object;
  #L2ae73a.  return v6 @kind object;
}
