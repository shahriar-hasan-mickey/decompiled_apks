record `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` @kind class @AccessFlag  {
  `java.util.List` `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.cbs` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Point` `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.displayDimens` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener` `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.layoutListener` @AccessFlag PRIVATE;
  `android.view.View` `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.PENDING_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.<init>:(Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c9d48.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c9d4e.  v0:= new `java.util.ArrayList`;
  #L2c9d52.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2c9d58.  v1.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.cbs` @type ^`java.util.List` := v0 @kind object;
  #L2c9d5c.  v1.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` := v2 @kind object;
  #L2c9d60.  return @kind void;
}
procedure `void` `access$000`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v0 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.access$000:(Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2c9d74.  call `checkCurrentDimens`(v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.checkCurrentDimens:()V` @kind direct;
  #L2c9d7a.  return @kind void;
}
procedure `void` `checkCurrentDimens`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.checkCurrentDimens:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2c9d8c.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.cbs` @type ^`java.util.List` @kind object;
  #L2c9d90.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2c9d96.  v0:= temp;
  #L2c9d98.  if v0 == 0 then goto L2c9d9e;
  #L2c9d9c.  return @kind void;
  #L2c9d9e.  call temp:= `getViewWidthOrParam`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getViewWidthOrParam:()I` @kind direct;
  #L2c9da4.  v0:= temp;
  #L2c9da6.  call temp:= `getViewHeightOrParam`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getViewHeightOrParam:()I` @kind direct;
  #L2c9dac.  v1:= temp;
  #L2c9dae.  call temp:= `isSizeValid`(v3, v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.isSizeValid:(I)Z` @kind direct;
  #L2c9db4.  v2:= temp;
  #L2c9db6.  if v2 == 0 then goto L2c9df6;
  #L2c9dba.  call temp:= `isSizeValid`(v3, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.isSizeValid:(I)Z` @kind direct;
  #L2c9dc0.  v2:= temp;
  #L2c9dc2.  if v2 != 0 then goto L2c9dc8;
  #L2c9dc6.  goto L2c9df6;
  #L2c9dc8.  call `notifyCbs`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.notifyCbs:(II)V` @kind direct;
  #L2c9dce.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` @kind object;
  #L2c9dd2.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L2c9dd8.  v0:= temp @kind object;
  #L2c9dda.  call temp:= `isAlive`(v0) @signature `Landroid/view/ViewTreeObserver;.isAlive:()Z` @kind virtual;
  #L2c9de0.  v1:= temp;
  #L2c9de2.  if v1 == 0 then goto L2c9df0;
  #L2c9de6.  v1:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.layoutListener` @type ^`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener` @kind object;
  #L2c9dea.  call `removeOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L2c9df0.  v0:= 0I;
  #L2c9df2.  v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.layoutListener` @type ^`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener` := v0 @kind object;
  #L2c9df6.  return @kind void;
}
procedure `android.graphics.Point` `getDisplayDimens`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getDisplayDimens:()Landroid/graphics/Point;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2c9bb8.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.displayDimens` @type ^`android.graphics.Point` @kind object;
  #L2c9bbc.  if v0 == 0 then goto L2c9bc2;
  #L2c9bc0.  return v0 @kind object;
  #L2c9bc2.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` @kind object;
  #L2c9bc6.  call temp:= `getContext`(v0) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2c9bcc.  v0:= temp @kind object;
  #L2c9bce.  v1:= "window" @kind object;
  #L2c9bd2.  call temp:= `getSystemService`(v0, v1) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L2c9bd8.  v0:= temp @kind object;
  #L2c9bda.  v0:= (`android.view.WindowManager`) v0 @kind object;
  #L2c9bde.  call temp:= `getDefaultDisplay`(v0) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L2c9be4.  v0:= temp @kind object;
  #L2c9be6.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2c9bea.  v2:= 13I;
  #L2c9bee.  if v1 < v2 then goto L2c9c0c;
  #L2c9bf2.  v1:= new `android.graphics.Point`;
  #L2c9bf6.  call `<init>`(v1) @signature `Landroid/graphics/Point;.<init>:()V` @kind direct;
  #L2c9bfc.  v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.displayDimens` @type ^`android.graphics.Point` := v1 @kind object;
  #L2c9c00.  v1:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.displayDimens` @type ^`android.graphics.Point` @kind object;
  #L2c9c04.  call `getSize`(v0, v1) @signature `Landroid/view/Display;.getSize:(Landroid/graphics/Point;)V` @kind virtual;
  #L2c9c0a.  goto L2c9c2a;
  #L2c9c0c.  v1:= new `android.graphics.Point`;
  #L2c9c10.  call temp:= `getWidth`(v0) @signature `Landroid/view/Display;.getWidth:()I` @kind virtual;
  #L2c9c16.  v2:= temp;
  #L2c9c18.  call temp:= `getHeight`(v0) @signature `Landroid/view/Display;.getHeight:()I` @kind virtual;
  #L2c9c1e.  v0:= temp;
  #L2c9c20.  call `<init>`(v1, v2, v0) @signature `Landroid/graphics/Point;.<init>:(II)V` @kind direct;
  #L2c9c26.  v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.displayDimens` @type ^`android.graphics.Point` := v1 @kind object;
  #L2c9c2a.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.displayDimens` @type ^`android.graphics.Point` @kind object;
  #L2c9c2e.  return v0 @kind object;
}
procedure `int` `getSizeForParam`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getSizeForParam:(IZ)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c9c64.  v0:= -2I;
  #L2c9c66.  if v2 != v0 then goto L2c9c80;
  #L2c9c6a.  call temp:= `getDisplayDimens`(v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getDisplayDimens:()Landroid/graphics/Point;` @kind direct;
  #L2c9c70.  v2:= temp @kind object;
  #L2c9c72.  if v3 == 0 then goto L2c9c7c;
  #L2c9c76.  v2:= v2.`android.graphics.Point.y` @type ^`int`;
  #L2c9c7a.  goto L2c9c80;
  #L2c9c7c.  v2:= v2.`android.graphics.Point.x` @type ^`int`;
  #L2c9c80.  return v2;
}
procedure `int` `getViewHeightOrParam`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getViewHeightOrParam:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c9c94.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` @kind object;
  #L2c9c98.  call temp:= `getLayoutParams`(v0) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L2c9c9e.  v0:= temp @kind object;
  #L2c9ca0.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` @kind object;
  #L2c9ca4.  call temp:= `getHeight`(v1) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L2c9caa.  v1:= temp;
  #L2c9cac.  call temp:= `isSizeValid`(v2, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.isSizeValid:(I)Z` @kind direct;
  #L2c9cb2.  v1:= temp;
  #L2c9cb4.  if v1 == 0 then goto L2c9cc6;
  #L2c9cb8.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` @kind object;
  #L2c9cbc.  call temp:= `getHeight`(v0) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L2c9cc2.  v0:= temp;
  #L2c9cc4.  return v0;
  #L2c9cc6.  if v0 == 0 then goto L2c9cda;
  #L2c9cca.  v0:= v0.`android.view.ViewGroup$LayoutParams.height` @type ^`int`;
  #L2c9cce.  v1:= 1I;
  #L2c9cd0.  call temp:= `getSizeForParam`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getSizeForParam:(IZ)I` @kind direct;
  #L2c9cd6.  v0:= temp;
  #L2c9cd8.  return v0;
  #L2c9cda.  v0:= 0I;
  #L2c9cdc.  return v0;
}
procedure `int` `getViewWidthOrParam`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getViewWidthOrParam:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c9cf0.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` @kind object;
  #L2c9cf4.  call temp:= `getLayoutParams`(v0) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L2c9cfa.  v0:= temp @kind object;
  #L2c9cfc.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` @kind object;
  #L2c9d00.  call temp:= `getWidth`(v1) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L2c9d06.  v1:= temp;
  #L2c9d08.  call temp:= `isSizeValid`(v2, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.isSizeValid:(I)Z` @kind direct;
  #L2c9d0e.  v1:= temp;
  #L2c9d10.  if v1 == 0 then goto L2c9d22;
  #L2c9d14.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` @kind object;
  #L2c9d18.  call temp:= `getWidth`(v0) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L2c9d1e.  v0:= temp;
  #L2c9d20.  return v0;
  #L2c9d22.  v1:= 0I;
  #L2c9d24.  if v0 == 0 then goto L2c9d36;
  #L2c9d28.  v0:= v0.`android.view.ViewGroup$LayoutParams.width` @type ^`int`;
  #L2c9d2c.  call temp:= `getSizeForParam`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getSizeForParam:(IZ)I` @kind direct;
  #L2c9d32.  v0:= temp;
  #L2c9d34.  return v0;
  #L2c9d36.  return v1;
}
procedure `boolean` `isSizeValid`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.isSizeValid:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c9c40.  if v2 > 0 then goto L2c9c50;
  #L2c9c44.  v0:= -2I;
  #L2c9c46.  if v2 != v0 then goto L2c9c4c;
  #L2c9c4a.  goto L2c9c50;
  #L2c9c4c.  v2:= 0I;
  #L2c9c4e.  goto L2c9c52;
  #L2c9c50.  v2:= 1I;
  #L2c9c52.  return v2;
}
procedure `void` `notifyCbs`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.notifyCbs:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c9e90.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.cbs` @type ^`java.util.List` @kind object;
  #L2c9e94.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c9e9a.  v0:= temp @kind object;
  #L2c9e9c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c9ea2.  v1:= temp;
  #L2c9ea4.  if v1 == 0 then goto L2c9ebc;
  #L2c9ea8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c9eae.  v1:= temp @kind object;
  #L2c9eb0.  v1:= (`com.bumptech.glide.request.target.SizeReadyCallback`) v1 @kind object;
  #L2c9eb4.  call `onSizeReady`(v1, v3, v4) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L2c9eba.  goto L2c9e9c;
  #L2c9ebc.  v3:= v2.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.cbs` @type ^`java.util.List` @kind object;
  #L2c9ec0.  call `clear`(v3) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2c9ec6.  return @kind void;
}
procedure `void` `getSize`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v3 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v4 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getSize:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c9e08.  call temp:= `getViewWidthOrParam`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getViewWidthOrParam:()I` @kind direct;
  #L2c9e0e.  v0:= temp;
  #L2c9e10.  call temp:= `getViewHeightOrParam`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getViewHeightOrParam:()I` @kind direct;
  #L2c9e16.  v1:= temp;
  #L2c9e18.  call temp:= `isSizeValid`(v3, v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.isSizeValid:(I)Z` @kind direct;
  #L2c9e1e.  v2:= temp;
  #L2c9e20.  if v2 == 0 then goto L2c9e38;
  #L2c9e24.  call temp:= `isSizeValid`(v3, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.isSizeValid:(I)Z` @kind direct;
  #L2c9e2a.  v2:= temp;
  #L2c9e2c.  if v2 == 0 then goto L2c9e38;
  #L2c9e30.  call `onSizeReady`(v4, v0, v1) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L2c9e36.  goto L2c9e7e;
  #L2c9e38.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.cbs` @type ^`java.util.List` @kind object;
  #L2c9e3c.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2c9e42.  v0:= temp;
  #L2c9e44.  if v0 != 0 then goto L2c9e52;
  #L2c9e48.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.cbs` @type ^`java.util.List` @kind object;
  #L2c9e4c.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2c9e52.  v4:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.layoutListener` @type ^`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener` @kind object;
  #L2c9e56.  if v4 != 0 then goto L2c9e7e;
  #L2c9e5a.  v4:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.view` @type ^`android.view.View` @kind object;
  #L2c9e5e.  call temp:= `getViewTreeObserver`(v4) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L2c9e64.  v4:= temp @kind object;
  #L2c9e66.  v0:= new `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener`;
  #L2c9e6a.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener;.<init>:(Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;)V` @kind direct;
  #L2c9e70.  v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.layoutListener` @type ^`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener` := v0 @kind object;
  #L2c9e74.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer.layoutListener` @type ^`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener` @kind object;
  #L2c9e78.  call `addOnPreDrawListener`(v4, v0) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L2c9e7e.  return @kind void;
}
