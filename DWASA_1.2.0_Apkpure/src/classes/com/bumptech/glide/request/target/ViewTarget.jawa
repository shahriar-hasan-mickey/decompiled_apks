record `com.bumptech.glide.request.target.ViewTarget` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.request.target.BaseTarget` @kind class {
  `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` `com.bumptech.glide.request.target.ViewTarget.sizeDeterminer` @AccessFlag PRIVATE_FINAL;
  `android.view.View` `com.bumptech.glide.request.target.ViewTarget.view` @AccessFlag PROTECTED_FINAL;
}
global `java.lang.String` `@@com.bumptech.glide.request.target.ViewTarget.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@com.bumptech.glide.request.target.ViewTarget.isTagUsedAtLeastOnce` @AccessFlag PRIVATE_STATIC;
global `java.lang.Integer` `@@com.bumptech.glide.request.target.ViewTarget.tagId` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2c9fa4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<init>:(Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c9fb8.  call `<init>`(v1) @signature `Lcom/bumptech/glide/request/target/BaseTarget;.<init>:()V` @kind direct;
  #L2c9fbe.  if v2 == 0 then goto L2c9fd6;
  #L2c9fc2.  v1.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` := v2 @kind object;
  #L2c9fc6.  v0:= new `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer`;
  #L2c9fca.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.<init>:(Landroid/view/View;)V` @kind direct;
  #L2c9fd0.  v1.`com.bumptech.glide.request.target.ViewTarget.sizeDeterminer` @type ^`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` := v0 @kind object;
  #L2c9fd4.  return @kind void;
  #L2c9fd6.  v2:= new `java.lang.NullPointerException`;
  #L2c9fda.  v0:= "View must not be null!" @kind object;
  #L2c9fde.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c9fe4.  throw v2;
}
procedure `java.lang.Object` `getTag`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getTag:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c9f30.  v0:= `@@com.bumptech.glide.request.target.ViewTarget.tagId` @type ^`java.lang.Integer` @kind object;
  #L2c9f34.  if v0 != 0 then goto L2c9f46;
  #L2c9f38.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L2c9f3c.  call temp:= `getTag`(v0) @signature `Landroid/view/View;.getTag:()Ljava/lang/Object;` @kind virtual;
  #L2c9f42.  v0:= temp @kind object;
  #L2c9f44.  return v0 @kind object;
  #L2c9f46.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L2c9f4a.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2c9f50.  v0:= temp;
  #L2c9f52.  call temp:= `getTag`(v1, v0) @signature `Landroid/view/View;.getTag:(I)Ljava/lang/Object;` @kind virtual;
  #L2c9f58.  v0:= temp @kind object;
  #L2c9f5a.  return v0 @kind object;
}
procedure `void` `setTag`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.setTag:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2ca02c.  v0:= `@@com.bumptech.glide.request.target.ViewTarget.tagId` @type ^`java.lang.Integer` @kind object;
  #L2ca030.  if v0 != 0 then goto L2ca046;
  #L2ca034.  v0:= 1I;
  #L2ca036.  `@@com.bumptech.glide.request.target.ViewTarget.isTagUsedAtLeastOnce` @type ^`boolean` := v0 @kind boolean;
  #L2ca03a.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L2ca03e.  call `setTag`(v0, v3) @signature `Landroid/view/View;.setTag:(Ljava/lang/Object;)V` @kind virtual;
  #L2ca044.  goto L2ca058;
  #L2ca046.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L2ca04a.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2ca050.  v0:= temp;
  #L2ca052.  call `setTag`(v1, v0, v3) @signature `Landroid/view/View;.setTag:(ILjava/lang/Object;)V` @kind virtual;
  #L2ca058.  return @kind void;
}
procedure `void` `setTagId`(`int` v1 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.setTagId:(I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ca06c.  v0:= `@@com.bumptech.glide.request.target.ViewTarget.tagId` @type ^`java.lang.Integer` @kind object;
  #L2ca070.  if v0 != 0 then goto L2ca08a;
  #L2ca074.  v0:= `@@com.bumptech.glide.request.target.ViewTarget.isTagUsedAtLeastOnce` @type ^`boolean` @kind boolean;
  #L2ca078.  if v0 != 0 then goto L2ca08a;
  #L2ca07c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2ca082.  v1:= temp @kind object;
  #L2ca084.  `@@com.bumptech.glide.request.target.ViewTarget.tagId` @type ^`java.lang.Integer` := v1 @kind object;
  #L2ca088.  return @kind void;
  #L2ca08a.  v1:= new `java.lang.IllegalArgumentException`;
  #L2ca08e.  v0:= "You cannot set the tag id more than once or change the tag id after the first request has been made" @kind object;
  #L2ca092.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ca098.  throw v1;
}
procedure `com.bumptech.glide.request.Request` `getRequest`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getRequest:()Lcom/bumptech/glide/request/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c9ef0.  call temp:= `getTag`(v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getTag:()Ljava/lang/Object;` @kind direct;
  #L2c9ef6.  v0:= temp @kind object;
  #L2c9ef8.  if v0 == 0 then goto L2c9f1a;
  #L2c9efc.  v1:= instanceof @variable v0 @type ^`com.bumptech.glide.request.Request` @kind boolean;
  #L2c9f00.  if v1 == 0 then goto L2c9f0a;
  #L2c9f04.  v0:= (`com.bumptech.glide.request.Request`) v0 @kind object;
  #L2c9f08.  goto L2c9f1c;
  #L2c9f0a.  v0:= new `java.lang.IllegalArgumentException`;
  #L2c9f0e.  v1:= "You must not call setTag() on a view Glide is targeting" @kind object;
  #L2c9f12.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c9f18.  throw v0;
  #L2c9f1a.  v0:= 0I;
  #L2c9f1c.  return v0 @kind object;
}
procedure `void` `getSize`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getSize:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9ff8.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.sizeDeterminer` @type ^`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` @kind object;
  #L2c9ffc.  call `getSize`(v0, v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.getSize:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind virtual;
  #L2ca002.  return @kind void;
}
procedure `android.view.View` `getView`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getView:()Landroid/view/View;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9ed8.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L2c9edc.  return v0 @kind object;
}
procedure `void` `setRequest`(`com.bumptech.glide.request.target.ViewTarget` v0 @kind this, `com.bumptech.glide.request.Request` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.setRequest:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;

  #L2ca014.  call `setTag`(v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.setTag:(Ljava/lang/Object;)V` @kind direct;
  #L2ca01a.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c9f6c.  v0:= new `java.lang.StringBuilder`;
  #L2c9f70.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9f76.  v1:= "Target for: " @kind object;
  #L2c9f7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9f80.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L2c9f84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9f8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9f90.  v0:= temp @kind object;
  #L2c9f92.  return v0 @kind object;
}
