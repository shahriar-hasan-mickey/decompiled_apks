record `com.bumptech.glide.request.target.ImageViewTargetFactory` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.bumptech.glide.request.target.ImageViewTargetFactory` v0 @kind this) @signature `Lcom/bumptech/glide/request/target/ImageViewTargetFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c92cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c92d2.  return @kind void;
}
procedure `com.bumptech.glide.request.target.Target` `buildTarget`(`com.bumptech.glide.request.target.ImageViewTargetFactory` v2 @kind this, `android.widget.ImageView` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/request/target/ImageViewTargetFactory;.buildTarget:(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c9230.  v0:= constclass @type ^`com.bumptech.glide.load.resource.drawable.GlideDrawable` @kind object;
  #L2c9234.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2c923a.  v0:= temp;
  #L2c923c.  if v0 == 0 then goto L2c924c;
  #L2c9240.  v4:= new `com.bumptech.glide.request.target.GlideDrawableImageViewTarget`;
  #L2c9244.  call `<init>`(v4, v3) @signature `Lcom/bumptech/glide/request/target/GlideDrawableImageViewTarget;.<init>:(Landroid/widget/ImageView;)V` @kind direct;
  #L2c924a.  return v4 @kind object;
  #L2c924c.  v0:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L2c9250.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c9256.  v0:= temp;
  #L2c9258.  if v0 == 0 then goto L2c9268;
  #L2c925c.  v4:= new `com.bumptech.glide.request.target.BitmapImageViewTarget`;
  #L2c9260.  call `<init>`(v4, v3) @signature `Lcom/bumptech/glide/request/target/BitmapImageViewTarget;.<init>:(Landroid/widget/ImageView;)V` @kind direct;
  #L2c9266.  return v4 @kind object;
  #L2c9268.  v0:= constclass @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2c926c.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2c9272.  v0:= temp;
  #L2c9274.  if v0 == 0 then goto L2c9284;
  #L2c9278.  v4:= new `com.bumptech.glide.request.target.DrawableImageViewTarget`;
  #L2c927c.  call `<init>`(v4, v3) @signature `Lcom/bumptech/glide/request/target/DrawableImageViewTarget;.<init>:(Landroid/widget/ImageView;)V` @kind direct;
  #L2c9282.  return v4 @kind object;
  #L2c9284.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c9288.  v0:= new `java.lang.StringBuilder`;
  #L2c928c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9292.  v1:= "Unhandled class: " @kind object;
  #L2c9296.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c929c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c92a2.  v4:= ", try .as*(Class).transcode(ResourceTranscoder)" @kind object;
  #L2c92a6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c92ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c92b2.  v4:= temp @kind object;
  #L2c92b4.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c92ba.  throw v3;
}
