record `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener` @kind class @AccessFlag  extends `android.view.ViewTreeObserver$OnPreDrawListener` @kind interface {
  `java.lang.ref.WeakReference` `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener.sizeDeterminerRef` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener` v1 @kind this, `com.bumptech.glide.request.target.ViewTarget$SizeDeterminer` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener;.<init>:(Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c9b90.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c9b96.  v0:= new `java.lang.ref.WeakReference`;
  #L2c9b9a.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2c9ba0.  v1.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener.sizeDeterminerRef` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L2c9ba4.  return @kind void;
}
procedure `boolean` `onPreDraw`(`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener;.onPreDraw:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c9b28.  v0:= "ViewTarget" @kind object;
  #L2c9b2c.  v1:= 2I;
  #L2c9b2e.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c9b34.  v1:= temp;
  #L2c9b36.  if v1 == 0 then goto L2c9b62;
  #L2c9b3a.  v1:= new `java.lang.StringBuilder`;
  #L2c9b3e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9b44.  v2:= "OnGlobalLayoutListener called listener=" @kind object;
  #L2c9b48.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9b4e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9b54.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9b5a.  v1:= temp @kind object;
  #L2c9b5c.  call temp:= `v`(v0, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c9b62.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener.sizeDeterminerRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L2c9b66.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2c9b6c.  v0:= temp @kind object;
  #L2c9b6e.  v0:= (`com.bumptech.glide.request.target.ViewTarget$SizeDeterminer`) v0 @kind object;
  #L2c9b72.  if v0 == 0 then goto L2c9b7c;
  #L2c9b76.  call `access$000`(v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;.access$000:(Lcom/bumptech/glide/request/target/ViewTarget$SizeDeterminer;)V` @kind static;
  #L2c9b7c.  v0:= 1I;
  #L2c9b7e.  return v0;
}
