record `com.bumptech.glide.request.RequestFutureTarget` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.FutureTarget` @kind interface, `java.lang.Runnable` @kind interface {
  `boolean` `com.bumptech.glide.request.RequestFutureTarget.assertBackgroundThread` @AccessFlag PRIVATE_FINAL;
  `java.lang.Exception` `com.bumptech.glide.request.RequestFutureTarget.exception` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.RequestFutureTarget.exceptionReceived` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.RequestFutureTarget.height` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.request.RequestFutureTarget.isCancelled` @AccessFlag PRIVATE;
  `android.os.Handler` `com.bumptech.glide.request.RequestFutureTarget.mainHandler` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.Request` `com.bumptech.glide.request.RequestFutureTarget.request` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.request.RequestFutureTarget.resource` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.RequestFutureTarget.resultReceived` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.RequestFutureTarget$Waiter` `com.bumptech.glide.request.RequestFutureTarget.waiter` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.request.RequestFutureTarget.width` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.request.RequestFutureTarget$Waiter` `@@com.bumptech.glide.request.RequestFutureTarget.DEFAULT_WAITER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c82b4.  v0:= new `com.bumptech.glide.request.RequestFutureTarget$Waiter`;
  #L2c82b8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$Waiter;.<init>:()V` @kind direct;
  #L2c82be.  `@@com.bumptech.glide.request.RequestFutureTarget.DEFAULT_WAITER` @type ^`com.bumptech.glide.request.RequestFutureTarget$Waiter` := v0 @kind object;
  #L2c82c2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.RequestFutureTarget` v6 @kind this, `android.os.Handler` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<init>:(Landroid/os/Handler;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c82d4.  v5:= `@@com.bumptech.glide.request.RequestFutureTarget.DEFAULT_WAITER` @type ^`com.bumptech.glide.request.RequestFutureTarget$Waiter` @kind object;
  #L2c82d8.  v4:= 1I;
  #L2c82da.  v0:= v6 @kind object;
  #L2c82dc.  v1:= v7 @kind object;
  #L2c82de.  v2:= v8;
  #L2c82e0.  v3:= v9;
  #L2c82e2.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<init>:(Landroid/os/Handler;IIZLcom/bumptech/glide/request/RequestFutureTarget$Waiter;)V` @kind direct;
  #L2c82e8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `android.os.Handler` v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `com.bumptech.glide.request.RequestFutureTarget$Waiter` v5 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<init>:(Landroid/os/Handler;IIZLcom/bumptech/glide/request/RequestFutureTarget$Waiter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c82fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c8302.  v0.`com.bumptech.glide.request.RequestFutureTarget.mainHandler` @type ^`android.os.Handler` := v1 @kind object;
  #L2c8306.  v0.`com.bumptech.glide.request.RequestFutureTarget.width` @type ^`int` := v2;
  #L2c830a.  v0.`com.bumptech.glide.request.RequestFutureTarget.height` @type ^`int` := v3;
  #L2c830e.  v0.`com.bumptech.glide.request.RequestFutureTarget.assertBackgroundThread` @type ^`boolean` := v4 @kind boolean;
  #L2c8312.  v0.`com.bumptech.glide.request.RequestFutureTarget.waiter` @type ^`com.bumptech.glide.request.RequestFutureTarget$Waiter` := v5 @kind object;
  #L2c8316.  return @kind void;
}
procedure `java.lang.Object` `doGet`(`com.bumptech.glide.request.RequestFutureTarget` v5 @kind this, `java.lang.Long` v6 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.doGet:(Ljava/lang/Long;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c8138.  @monitorenter v5
  #L2c813a.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.assertBackgroundThread` @type ^`boolean` @kind boolean;
  #L2c813e.  if v0 == 0 then goto L2c8148;
  #L2c8142.  call `assertBackgroundThread`() @signature `Lcom/bumptech/glide/util/Util;.assertBackgroundThread:()V` @kind static;
  #L2c8148.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.isCancelled` @type ^`boolean` @kind boolean;
  #L2c814c.  if v0 != 0 then goto L2c820e;
  #L2c8150.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.exceptionReceived` @type ^`boolean` @kind boolean;
  #L2c8154.  if v0 != 0 then goto L2c81fe;
  #L2c8158.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.resultReceived` @type ^`boolean` @kind boolean;
  #L2c815c.  if v0 == 0 then goto L2c8168;
  #L2c8160.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.resource` @type ^`java.lang.Object` @kind object;
  #L2c8164.  @monitorexit v5
  #L2c8166.  return v6 @kind object;
  #L2c8168.  v0:= 0L;
  #L2c816c.  if v6 != 0 then goto L2c817c;
  #L2c8170.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.waiter` @type ^`com.bumptech.glide.request.RequestFutureTarget$Waiter` @kind object;
  #L2c8174.  call `waitForTimeout`(v6, v5, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$Waiter;.waitForTimeout:(Ljava/lang/Object;J)V` @kind virtual;
  #L2c817a.  goto L2c819e;
  #L2c817c.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2c8182.  v2:= temp @kind wide;
  #L2c8184.  v4:= lcmp(v2, v0);
  #L2c8188.  if v4 <= 0 then goto L2c819e;
  #L2c818c.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.waiter` @type ^`com.bumptech.glide.request.RequestFutureTarget$Waiter` @kind object;
  #L2c8190.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2c8196.  v1:= temp @kind wide;
  #L2c8198.  call `waitForTimeout`(v0, v5, v1) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$Waiter;.waitForTimeout:(Ljava/lang/Object;J)V` @kind virtual;
  #L2c819e.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L2c81a4.  v6:= temp;
  #L2c81a6.  if v6 != 0 then goto L2c81f2;
  #L2c81aa.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.exceptionReceived` @type ^`boolean` @kind boolean;
  #L2c81ae.  if v6 != 0 then goto L2c81e2;
  #L2c81b2.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.isCancelled` @type ^`boolean` @kind boolean;
  #L2c81b6.  if v6 != 0 then goto L2c81d6;
  #L2c81ba.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.resultReceived` @type ^`boolean` @kind boolean;
  #L2c81be.  if v6 == 0 then goto L2c81ca;
  #L2c81c2.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.resource` @type ^`java.lang.Object` @kind object;
  #L2c81c6.  @monitorexit v5
  #L2c81c8.  return v6 @kind object;
  #L2c81ca.  v6:= new `java.util.concurrent.TimeoutException`;
  #L2c81ce.  call `<init>`(v6) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L2c81d4.  throw v6;
  #L2c81d6.  v6:= new `java.util.concurrent.CancellationException`;
  #L2c81da.  call `<init>`(v6) @signature `Ljava/util/concurrent/CancellationException;.<init>:()V` @kind direct;
  #L2c81e0.  throw v6;
  #L2c81e2.  v6:= new `java.util.concurrent.ExecutionException`;
  #L2c81e6.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.exception` @type ^`java.lang.Exception` @kind object;
  #L2c81ea.  call `<init>`(v6, v0) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2c81f0.  throw v6;
  #L2c81f2.  v6:= new `java.lang.InterruptedException`;
  #L2c81f6.  call `<init>`(v6) @signature `Ljava/lang/InterruptedException;.<init>:()V` @kind direct;
  #L2c81fc.  throw v6;
  #L2c81fe.  v6:= new `java.util.concurrent.ExecutionException`;
  #L2c8202.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.exception` @type ^`java.lang.Exception` @kind object;
  #L2c8206.  call `<init>`(v6, v0) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2c820c.  throw v6;
  #L2c820e.  v6:= new `java.util.concurrent.CancellationException`;
  #L2c8212.  call `<init>`(v6) @signature `Ljava/util/concurrent/CancellationException;.<init>:()V` @kind direct;
  #L2c8218.  throw v6;
  #L2c821a.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c821c.  @monitorexit v5
  #L2c821e.  throw v6;
  catch `java.lang.Throwable` @[L2c813a..L2c8164] goto L2c821a;
  catch `java.lang.Throwable` @[L2c8170..L2c81c6] goto L2c821a;
  catch `java.lang.Throwable` @[L2c81ca..L2c821a] goto L2c821a;
}
procedure `boolean` `cancel`(`com.bumptech.glide.request.RequestFutureTarget` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.cancel:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c8050.  @monitorenter v2
  #L2c8052.  v0:= v2.`com.bumptech.glide.request.RequestFutureTarget.isCancelled` @type ^`boolean` @kind boolean;
  #L2c8056.  v1:= 1I;
  #L2c8058.  if v0 == 0 then goto L2c8060;
  #L2c805c.  @monitorexit v2
  #L2c805e.  return v1;
  #L2c8060.  call temp:= `isDone`(v2) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.isDone:()Z` @kind virtual;
  #L2c8066.  v0:= temp;
  #L2c8068.  v0:= v0 ^~ v1 @kind int;
  #L2c806a.  if v0 == 0 then goto L2c8086;
  #L2c806e.  v2.`com.bumptech.glide.request.RequestFutureTarget.isCancelled` @type ^`boolean` := v1 @kind boolean;
  #L2c8072.  if v3 == 0 then goto L2c807c;
  #L2c8076.  call `clear`(v2) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.clear:()V` @kind virtual;
  #L2c807c.  v3:= v2.`com.bumptech.glide.request.RequestFutureTarget.waiter` @type ^`com.bumptech.glide.request.RequestFutureTarget$Waiter` @kind object;
  #L2c8080.  call `notifyAll`(v3, v2) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$Waiter;.notifyAll:(Ljava/lang/Object;)V` @kind virtual;
  #L2c8086.  @monitorexit v2
  #L2c8088.  return v0;
  #L2c808a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c808c.  @monitorexit v2
  #L2c808e.  throw v3;
  catch `java.lang.Throwable` @[L2c8052..L2c8056] goto L2c808a;
  catch `java.lang.Throwable` @[L2c8060..L2c8086] goto L2c808a;
}
procedure `void` `clear`(`com.bumptech.glide.request.RequestFutureTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c8328.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.mainHandler` @type ^`android.os.Handler` @kind object;
  #L2c832c.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L2c8332.  return @kind void;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.request.RequestFutureTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c824c.  v0:= 0I;
  #L2c824e.  call temp:= `doGet`(v2, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.doGet:(Ljava/lang/Long;)Ljava/lang/Object;` @kind direct;
  #L2c8254.  v0:= temp @kind object;
  #L2c8256.  return v0 @kind object;
  #L2c8258.  v0:= Exception @type ^`java.util.concurrent.TimeoutException` @kind object;
  #L2c825a.  v1:= new `java.lang.AssertionError`;
  #L2c825e.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2c8264.  throw v1;
  catch `java.util.concurrent.TimeoutException` @[L2c824e..L2c8256] goto L2c8258;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2c8288.  call temp:= `toMillis`(v3, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L2c828e.  v1:= temp @kind wide;
  #L2c8290.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2c8296.  v1:= temp @kind object;
  #L2c8298.  call temp:= `doGet`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.doGet:(Ljava/lang/Long;)Ljava/lang/Object;` @kind direct;
  #L2c829e.  v1:= temp @kind object;
  #L2c82a0.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.Request` `getRequest`(`com.bumptech.glide.request.RequestFutureTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.getRequest:()Lcom/bumptech/glide/request/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c8120.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.request` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L2c8124.  return v0 @kind object;
}
procedure `void` `getSize`(`com.bumptech.glide.request.RequestFutureTarget` v2 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v3 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.getSize:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c8344.  v0:= v2.`com.bumptech.glide.request.RequestFutureTarget.width` @type ^`int`;
  #L2c8348.  v1:= v2.`com.bumptech.glide.request.RequestFutureTarget.height` @type ^`int`;
  #L2c834c.  call `onSizeReady`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L2c8352.  return @kind void;
}
procedure `boolean` `isCancelled`(`com.bumptech.glide.request.RequestFutureTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c80b4.  @monitorenter v1
  #L2c80b6.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.isCancelled` @type ^`boolean` @kind boolean;
  #L2c80ba.  @monitorexit v1
  #L2c80bc.  return v0;
  #L2c80be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c80c0.  @monitorexit v1
  #L2c80c2.  throw v0;
  catch `java.lang.Throwable` @[L2c80b6..L2c80ba] goto L2c80be;
}
procedure `boolean` `isDone`(`com.bumptech.glide.request.RequestFutureTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c80e0.  @monitorenter v1
  #L2c80e2.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.isCancelled` @type ^`boolean` @kind boolean;
  #L2c80e6.  if v0 != 0 then goto L2c80f8;
  #L2c80ea.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.resultReceived` @type ^`boolean` @kind boolean;
  #L2c80ee.  if v0 == 0 then goto L2c80f4;
  #L2c80f2.  goto L2c80f8;
  #L2c80f4.  v0:= 0I;
  #L2c80f6.  goto L2c80fa;
  #L2c80f8.  v0:= 1I;
  #L2c80fa.  @monitorexit v1
  #L2c80fc.  return v0;
  #L2c80fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c8100.  @monitorexit v1
  #L2c8102.  throw v0;
  catch `java.lang.Throwable` @[L2c80e2..L2c80ee] goto L2c80fe;
}
procedure `void` `onDestroy`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;

  #L2c8364.  return @kind void;
}
procedure `void` `onLoadCleared`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L2c8378.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `java.lang.Exception` v1 @kind object, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onLoadFailed:(Ljava/lang/Exception;Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L2c838c.  @monitorenter v0
  #L2c838e.  v2:= 1I;
  #L2c8390.  v0.`com.bumptech.glide.request.RequestFutureTarget.exceptionReceived` @type ^`boolean` := v2 @kind boolean;
  #L2c8394.  v0.`com.bumptech.glide.request.RequestFutureTarget.exception` @type ^`java.lang.Exception` := v1 @kind object;
  #L2c8398.  v1:= v0.`com.bumptech.glide.request.RequestFutureTarget.waiter` @type ^`com.bumptech.glide.request.RequestFutureTarget$Waiter` @kind object;
  #L2c839c.  call `notifyAll`(v1, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$Waiter;.notifyAll:(Ljava/lang/Object;)V` @kind virtual;
  #L2c83a2.  @monitorexit v0
  #L2c83a4.  return @kind void;
  #L2c83a6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c83a8.  @monitorexit v0
  #L2c83aa.  throw v1;
  catch `java.lang.Throwable` @[L2c8390..L2c83a2] goto L2c83a6;
}
procedure `void` `onLoadStarted`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L2c83c8.  return @kind void;
}
procedure `void` `onResourceReady`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.request.animation.GlideAnimation` v2 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onResourceReady:(Ljava/lang/Object;Lcom/bumptech/glide/request/animation/GlideAnimation;)V` @AccessFlag PUBLIC {
    temp;

  #L2c83dc.  @monitorenter v0
  #L2c83de.  v2:= 1I;
  #L2c83e0.  v0.`com.bumptech.glide.request.RequestFutureTarget.resultReceived` @type ^`boolean` := v2 @kind boolean;
  #L2c83e4.  v0.`com.bumptech.glide.request.RequestFutureTarget.resource` @type ^`java.lang.Object` := v1 @kind object;
  #L2c83e8.  v1:= v0.`com.bumptech.glide.request.RequestFutureTarget.waiter` @type ^`com.bumptech.glide.request.RequestFutureTarget$Waiter` @kind object;
  #L2c83ec.  call `notifyAll`(v1, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$Waiter;.notifyAll:(Ljava/lang/Object;)V` @kind virtual;
  #L2c83f2.  @monitorexit v0
  #L2c83f4.  return @kind void;
  #L2c83f6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c83f8.  @monitorexit v0
  #L2c83fa.  throw v1;
  catch `java.lang.Throwable` @[L2c83e0..L2c83f2] goto L2c83f6;
}
procedure `void` `onStart`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onStart:()V` @AccessFlag PUBLIC {
    temp;

  #L2c8418.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onStop:()V` @AccessFlag PUBLIC {
    temp;

  #L2c842c.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.request.RequestFutureTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c8440.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.request` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L2c8444.  if v0 == 0 then goto L2c8456;
  #L2c8448.  call `clear`(v0) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L2c844e.  v0:= 0I;
  #L2c8450.  call temp:= `cancel`(v1, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.cancel:(Z)Z` @kind virtual;
  #L2c8456.  return @kind void;
}
procedure `void` `setRequest`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `com.bumptech.glide.request.Request` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.setRequest:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;

  #L2c8468.  v0.`com.bumptech.glide.request.RequestFutureTarget.request` @type ^`com.bumptech.glide.request.Request` := v1 @kind object;
  #L2c846c.  return @kind void;
}
