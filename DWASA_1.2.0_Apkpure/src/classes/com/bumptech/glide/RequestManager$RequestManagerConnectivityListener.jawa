record `com.bumptech.glide.RequestManager$RequestManagerConnectivityListener` @kind class @AccessFlag  extends `com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener` @kind interface {
  `com.bumptech.glide.manager.RequestTracker` `com.bumptech.glide.RequestManager$RequestManagerConnectivityListener.requestTracker` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.RequestManager$RequestManagerConnectivityListener` v0 @kind this, `com.bumptech.glide.manager.RequestTracker` v1 @kind object) @signature `Lcom/bumptech/glide/RequestManager$RequestManagerConnectivityListener;.<init>:(Lcom/bumptech/glide/manager/RequestTracker;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b1d58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b1d5e.  v0.`com.bumptech.glide.RequestManager$RequestManagerConnectivityListener.requestTracker` @type ^`com.bumptech.glide.manager.RequestTracker` := v1 @kind object;
  #L2b1d62.  return @kind void;
}
procedure `void` `onConnectivityChanged`(`com.bumptech.glide.RequestManager$RequestManagerConnectivityListener` v0 @kind this, `boolean` v1 ) @signature `Lcom/bumptech/glide/RequestManager$RequestManagerConnectivityListener;.onConnectivityChanged:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b1d74.  if v1 == 0 then goto L2b1d82;
  #L2b1d78.  v1:= v0.`com.bumptech.glide.RequestManager$RequestManagerConnectivityListener.requestTracker` @type ^`com.bumptech.glide.manager.RequestTracker` @kind object;
  #L2b1d7c.  call `restartRequests`(v1) @signature `Lcom/bumptech/glide/manager/RequestTracker;.restartRequests:()V` @kind virtual;
  #L2b1d82.  return @kind void;
}
