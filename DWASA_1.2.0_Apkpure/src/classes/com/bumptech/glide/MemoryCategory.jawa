record `com.bumptech.glide.MemoryCategory` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `float` `com.bumptech.glide.MemoryCategory.multiplier` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.MemoryCategory`[] `@@com.bumptech.glide.MemoryCategory.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.bumptech.glide.MemoryCategory` `@@com.bumptech.glide.MemoryCategory.HIGH` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.MemoryCategory` `@@com.bumptech.glide.MemoryCategory.LOW` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.MemoryCategory` `@@com.bumptech.glide.MemoryCategory.NORMAL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/MemoryCategory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2b18b4.  v0:= new `com.bumptech.glide.MemoryCategory`;
  #L2b18b8.  v1:= 0I;
  #L2b18ba.  v2:= "LOW" @kind object;
  #L2b18be.  v3:= 0.5F;
  #L2b18c2.  call `<init>`(v0, v2, v1, v3) @signature `Lcom/bumptech/glide/MemoryCategory;.<init>:(Ljava/lang/String;IF)V` @kind direct;
  #L2b18c8.  `@@com.bumptech.glide.MemoryCategory.LOW` @type ^`com.bumptech.glide.MemoryCategory` := v0 @kind object;
  #L2b18cc.  v0:= new `com.bumptech.glide.MemoryCategory`;
  #L2b18d0.  v2:= 1I;
  #L2b18d2.  v3:= "NORMAL" @kind object;
  #L2b18d6.  v4:= 1.0F;
  #L2b18da.  call `<init>`(v0, v3, v2, v4) @signature `Lcom/bumptech/glide/MemoryCategory;.<init>:(Ljava/lang/String;IF)V` @kind direct;
  #L2b18e0.  `@@com.bumptech.glide.MemoryCategory.NORMAL` @type ^`com.bumptech.glide.MemoryCategory` := v0 @kind object;
  #L2b18e4.  v0:= new `com.bumptech.glide.MemoryCategory`;
  #L2b18e8.  v3:= 2I;
  #L2b18ea.  v4:= "HIGH" @kind object;
  #L2b18ee.  v5:= 1.5F;
  #L2b18f2.  call `<init>`(v0, v4, v3, v5) @signature `Lcom/bumptech/glide/MemoryCategory;.<init>:(Ljava/lang/String;IF)V` @kind direct;
  #L2b18f8.  `@@com.bumptech.glide.MemoryCategory.HIGH` @type ^`com.bumptech.glide.MemoryCategory` := v0 @kind object;
  #L2b18fc.  v0:= 3I;
  #L2b18fe.  v0:= new `com.bumptech.glide.MemoryCategory`[v0];
  #L2b1902.  v4:= `@@com.bumptech.glide.MemoryCategory.LOW` @type ^`com.bumptech.glide.MemoryCategory` @kind object;
  #L2b1906.  v0[v1]:= v4 @kind object;
  #L2b190a.  v1:= `@@com.bumptech.glide.MemoryCategory.NORMAL` @type ^`com.bumptech.glide.MemoryCategory` @kind object;
  #L2b190e.  v0[v2]:= v1 @kind object;
  #L2b1912.  v1:= `@@com.bumptech.glide.MemoryCategory.HIGH` @type ^`com.bumptech.glide.MemoryCategory` @kind object;
  #L2b1916.  v0[v3]:= v1 @kind object;
  #L2b191a.  `@@com.bumptech.glide.MemoryCategory.$VALUES` @type ^`com.bumptech.glide.MemoryCategory`[] := v0 @kind object;
  #L2b191e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.MemoryCategory` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `float` v3 ) @signature `Lcom/bumptech/glide/MemoryCategory;.<init>:(Ljava/lang/String;IF)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b1930.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b1936.  v0.`com.bumptech.glide.MemoryCategory.multiplier` @type ^`float` := v3;
  #L2b193a.  return @kind void;
}
procedure `com.bumptech.glide.MemoryCategory` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/MemoryCategory;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/MemoryCategory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b1854.  v0:= constclass @type ^`com.bumptech.glide.MemoryCategory` @kind object;
  #L2b1858.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2b185e.  v1:= temp @kind object;
  #L2b1860.  v1:= (`com.bumptech.glide.MemoryCategory`) v1 @kind object;
  #L2b1864.  return v1 @kind object;
}
procedure `com.bumptech.glide.MemoryCategory`[] `values`() @signature `Lcom/bumptech/glide/MemoryCategory;.values:()[Lcom/bumptech/glide/MemoryCategory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b1878.  v0:= `@@com.bumptech.glide.MemoryCategory.$VALUES` @type ^`com.bumptech.glide.MemoryCategory`[] @kind object;
  #L2b187c.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/MemoryCategory;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b1882.  v0:= temp @kind object;
  #L2b1884.  v0:= (`com.bumptech.glide.MemoryCategory`[]) v0 @kind object;
  #L2b1888.  return v0 @kind object;
}
procedure `float` `getMultiplier`(`com.bumptech.glide.MemoryCategory` v1 @kind this) @signature `Lcom/bumptech/glide/MemoryCategory;.getMultiplier:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b189c.  v0:= v1.`com.bumptech.glide.MemoryCategory.multiplier` @type ^`float`;
  #L2b18a0.  return v0;
}
