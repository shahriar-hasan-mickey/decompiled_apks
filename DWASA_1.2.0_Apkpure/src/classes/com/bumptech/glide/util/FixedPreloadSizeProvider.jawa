record `com.bumptech.glide.util.FixedPreloadSizeProvider` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.ListPreloader$PreloadSizeProvider` @kind interface {
  `int`[] `com.bumptech.glide.util.FixedPreloadSizeProvider.size` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.util.FixedPreloadSizeProvider` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/util/FixedPreloadSizeProvider;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2caaf0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2caaf6.  v0:= 2I;
  #L2caaf8.  v0:= new `int`[v0];
  #L2caafc.  v1:= 0I;
  #L2caafe.  v0[v1]:= v3;
  #L2cab02.  v3:= 1I;
  #L2cab04.  v0[v3]:= v4;
  #L2cab08.  v2.`com.bumptech.glide.util.FixedPreloadSizeProvider.size` @type ^`int`[] := v0 @kind object;
  #L2cab0c.  return @kind void;
}
procedure `int`[] `getPreloadSize`(`com.bumptech.glide.util.FixedPreloadSizeProvider` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/util/FixedPreloadSizeProvider;.getPreloadSize:(Ljava/lang/Object;II)[I` @AccessFlag PUBLIC {
    temp;

  #L2caad0.  v1:= v0.`com.bumptech.glide.util.FixedPreloadSizeProvider.size` @type ^`int`[] @kind object;
  #L2caad4.  v2:= length @variable v1;
  #L2caad6.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L2caadc.  v1:= temp @kind object;
  #L2caade.  return v1 @kind object;
}
