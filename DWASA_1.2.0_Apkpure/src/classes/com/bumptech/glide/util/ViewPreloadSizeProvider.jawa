record `com.bumptech.glide.util.ViewPreloadSizeProvider` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.ListPreloader$PreloadSizeProvider` @kind interface, `com.bumptech.glide.request.target.SizeReadyCallback` @kind interface {
  `int`[] `com.bumptech.glide.util.ViewPreloadSizeProvider.size` @AccessFlag PRIVATE;
  `com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget` `com.bumptech.glide.util.ViewPreloadSizeProvider.viewTarget` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.util.ViewPreloadSizeProvider` v0 @kind this) @signature `Lcom/bumptech/glide/util/ViewPreloadSizeProvider;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cb580.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cb586.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.util.ViewPreloadSizeProvider` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lcom/bumptech/glide/util/ViewPreloadSizeProvider;.<init>:(Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cb598.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cb59e.  call `setView`(v0, v1) @signature `Lcom/bumptech/glide/util/ViewPreloadSizeProvider;.setView:(Landroid/view/View;)V` @kind virtual;
  #L2cb5a4.  return @kind void;
}
procedure `int`[] `getPreloadSize`(`com.bumptech.glide.util.ViewPreloadSizeProvider` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/util/ViewPreloadSizeProvider;.getPreloadSize:(Ljava/lang/Object;II)[I` @AccessFlag PUBLIC {
    temp;

  #L2cb558.  v1:= v0.`com.bumptech.glide.util.ViewPreloadSizeProvider.size` @type ^`int`[] @kind object;
  #L2cb55c.  if v1 != 0 then goto L2cb564;
  #L2cb560.  v1:= 0I;
  #L2cb562.  return v1 @kind object;
  #L2cb564.  v2:= length @variable v1;
  #L2cb566.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L2cb56c.  v1:= temp @kind object;
  #L2cb56e.  return v1 @kind object;
}
procedure `void` `onSizeReady`(`com.bumptech.glide.util.ViewPreloadSizeProvider` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/util/ViewPreloadSizeProvider;.onSizeReady:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cb5b8.  v0:= 2I;
  #L2cb5ba.  v0:= new `int`[v0];
  #L2cb5be.  v1:= 0I;
  #L2cb5c0.  v0[v1]:= v3;
  #L2cb5c4.  v3:= 1I;
  #L2cb5c6.  v0[v3]:= v4;
  #L2cb5ca.  v2.`com.bumptech.glide.util.ViewPreloadSizeProvider.size` @type ^`int`[] := v0 @kind object;
  #L2cb5ce.  v3:= 0I;
  #L2cb5d0.  v2.`com.bumptech.glide.util.ViewPreloadSizeProvider.viewTarget` @type ^`com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget` := v3 @kind object;
  #L2cb5d4.  return @kind void;
}
procedure `void` `setView`(`com.bumptech.glide.util.ViewPreloadSizeProvider` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/util/ViewPreloadSizeProvider;.setView:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cb5e8.  v0:= v1.`com.bumptech.glide.util.ViewPreloadSizeProvider.size` @type ^`int`[] @kind object;
  #L2cb5ec.  if v0 != 0 then goto L2cb608;
  #L2cb5f0.  v0:= v1.`com.bumptech.glide.util.ViewPreloadSizeProvider.viewTarget` @type ^`com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget` @kind object;
  #L2cb5f4.  if v0 == 0 then goto L2cb5fa;
  #L2cb5f8.  goto L2cb608;
  #L2cb5fa.  v0:= new `com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget`;
  #L2cb5fe.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/util/ViewPreloadSizeProvider$SizeViewTarget;.<init>:(Landroid/view/View;Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind direct;
  #L2cb604.  v1.`com.bumptech.glide.util.ViewPreloadSizeProvider.viewTarget` @type ^`com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget` := v0 @kind object;
  #L2cb608.  return @kind void;
}
