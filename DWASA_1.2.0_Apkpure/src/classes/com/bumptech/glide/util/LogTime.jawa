record `com.bumptech.glide.util.LogTime` @kind class @AccessFlag PUBLIC_FINAL {
}
global `double` `@@com.bumptech.glide.util.LogTime.MILLIS_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/util/LogTime;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2cab7c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2cab80.  v1:= 1.0D;
  #L2cab84.  v3:= 17I;
  #L2cab88.  if v3 > v0 then goto L2cab9e;
  #L2cab8c.  v3:= 10.0D;
  #L2cab90.  v5:= 6.0D;
  #L2cab94.  call temp:= `pow`(v3, v5) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2cab9a.  v3:= temp @kind wide;
  #L2cab9c.  v1:= v1 / v3 @kind double;
  #L2cab9e.  `@@com.bumptech.glide.util.LogTime.MILLIS_MULTIPLIER` @type ^`double` := v1 @kind wide;
  #L2caba2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.util.LogTime` v0 @kind this) @signature `Lcom/bumptech/glide/util/LogTime;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2cabb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cabba.  return @kind void;
}
procedure `double` `getElapsedMillis`(`long` v2 ) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2cab20.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2cab26.  v0:= temp @kind wide;
  #L2cab28.  v0:= v0 - v2 @kind long;
  #L2cab2a.  v2:= (`double`) v0 @kind l2d;
  #L2cab2c.  v0:= `@@com.bumptech.glide.util.LogTime.MILLIS_MULTIPLIER` @type ^`double` @kind wide;
  #L2cab30.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2cab36.  v2:= v2 * v0 @kind double;
  #L2cab3a.  return v2 @kind wide;
}
procedure `long` `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2cab4c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2cab50.  v1:= 17I;
  #L2cab54.  if v1 > v0 then goto L2cab62;
  #L2cab58.  call temp:= `elapsedRealtimeNanos`() @signature `Landroid/os/SystemClock;.elapsedRealtimeNanos:()J` @kind static;
  #L2cab5e.  v0:= temp @kind wide;
  #L2cab60.  return v0 @kind wide;
  #L2cab62.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2cab68.  v0:= temp @kind wide;
  #L2cab6a.  return v0 @kind wide;
}
