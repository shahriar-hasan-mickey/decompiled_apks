record `com.bumptech.glide.provider.DataLoadProviderRegistry` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `com.bumptech.glide.provider.DataLoadProviderRegistry.providers` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.util.MultiClassKey` `@@com.bumptech.glide.provider.DataLoadProviderRegistry.GET_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/provider/DataLoadProviderRegistry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c7048.  v0:= new `com.bumptech.glide.util.MultiClassKey`;
  #L2c704c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/util/MultiClassKey;.<init>:()V` @kind direct;
  #L2c7052.  `@@com.bumptech.glide.provider.DataLoadProviderRegistry.GET_KEY` @type ^`com.bumptech.glide.util.MultiClassKey` := v0 @kind object;
  #L2c7056.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.provider.DataLoadProviderRegistry` v1 @kind this) @signature `Lcom/bumptech/glide/provider/DataLoadProviderRegistry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c7068.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c706e.  v0:= new `java.util.HashMap`;
  #L2c7072.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2c7078.  v1.`com.bumptech.glide.provider.DataLoadProviderRegistry.providers` @type ^`java.util.Map` := v0 @kind object;
  #L2c707c.  return @kind void;
}
procedure `com.bumptech.glide.provider.DataLoadProvider` `get`(`com.bumptech.glide.provider.DataLoadProviderRegistry` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/provider/DataLoadProviderRegistry;.get:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/provider/DataLoadProvider;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c6fe8.  v0:= `@@com.bumptech.glide.provider.DataLoadProviderRegistry.GET_KEY` @type ^`com.bumptech.glide.util.MultiClassKey` @kind object;
  #L2c6fec.  @monitorenter v0
  #L2c6fee.  v1:= `@@com.bumptech.glide.provider.DataLoadProviderRegistry.GET_KEY` @type ^`com.bumptech.glide.util.MultiClassKey` @kind object;
  #L2c6ff2.  call `set`(v1, v3, v4) @signature `Lcom/bumptech/glide/util/MultiClassKey;.set:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind virtual;
  #L2c6ff8.  v3:= v2.`com.bumptech.glide.provider.DataLoadProviderRegistry.providers` @type ^`java.util.Map` @kind object;
  #L2c6ffc.  v4:= `@@com.bumptech.glide.provider.DataLoadProviderRegistry.GET_KEY` @type ^`com.bumptech.glide.util.MultiClassKey` @kind object;
  #L2c7000.  call temp:= `get`(v3, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c7006.  v3:= temp @kind object;
  #L2c7008.  v3:= (`com.bumptech.glide.provider.DataLoadProvider`) v3 @kind object;
  #L2c700c.  @monitorexit v0
  #L2c700e.  if v3 != 0 then goto L2c701a;
  #L2c7012.  call temp:= `get`() @signature `Lcom/bumptech/glide/provider/EmptyDataLoadProvider;.get:()Lcom/bumptech/glide/provider/DataLoadProvider;` @kind static;
  #L2c7018.  v3:= temp @kind object;
  #L2c701a.  return v3 @kind object;
  #L2c701c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c701e.  @monitorexit v0
  #L2c7020.  throw v3;
  catch `java.lang.Throwable` @[L2c6fee..L2c700e] goto L2c701c;
  catch `java.lang.Throwable` @[L2c701e..L2c7020] goto L2c701c;
}
procedure `void` `register`(`com.bumptech.glide.provider.DataLoadProviderRegistry` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object, `com.bumptech.glide.provider.DataLoadProvider` v5 @kind object) @signature `Lcom/bumptech/glide/provider/DataLoadProviderRegistry;.register:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/provider/DataLoadProvider;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c7090.  v0:= v2.`com.bumptech.glide.provider.DataLoadProviderRegistry.providers` @type ^`java.util.Map` @kind object;
  #L2c7094.  v1:= new `com.bumptech.glide.util.MultiClassKey`;
  #L2c7098.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/util/MultiClassKey;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L2c709e.  call temp:= `put`(v0, v1, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c70a4.  return @kind void;
}
