record `com.bumptech.glide.disklrucache.Util` @kind class @AccessFlag FINAL {
}
global `java.nio.charset.Charset` `@@com.bumptech.glide.disklrucache.Util.US_ASCII` @AccessFlag STATIC_FINAL;
global `java.nio.charset.Charset` `@@com.bumptech.glide.disklrucache.Util.UTF_8` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/disklrucache/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b42d8.  v0:= "US-ASCII" @kind object;
  #L2b42dc.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2b42e2.  v0:= temp @kind object;
  #L2b42e4.  `@@com.bumptech.glide.disklrucache.Util.US_ASCII` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2b42e8.  v0:= "UTF-8" @kind object;
  #L2b42ec.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2b42f2.  v0:= temp @kind object;
  #L2b42f4.  `@@com.bumptech.glide.disklrucache.Util.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2b42f8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.disklrucache.Util` v0 @kind this) @signature `Lcom/bumptech/glide/disklrucache/Util;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b430c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b4312.  return @kind void;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v0 @kind object) @signature `Lcom/bumptech/glide/disklrucache/Util;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag STATIC {
    temp;

  #L2b4324.  if v0 == 0 then goto L2b4334;
  #L2b4328.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L2b432e.  goto L2b4334;
  #L2b4330.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L2b4332.  throw v0;
  #L2b4334.  return @kind void;
  catch `java.lang.RuntimeException` @[L2b4328..L2b432e] goto L2b4330;
  catch `java.lang.Exception` @[L2b4328..L2b432e] goto L2b4334;
}
procedure `void` `deleteContents`(`java.io.File` v4 @kind object) @signature `Lcom/bumptech/glide/disklrucache/Util;.deleteContents:(Ljava/io/File;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b4358.  call temp:= `listFiles`(v4) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L2b435e.  v0:= temp @kind object;
  #L2b4360.  if v0 == 0 then goto L2b43c4;
  #L2b4364.  v4:= length @variable v0;
  #L2b4366.  v1:= 0I;
  #L2b4368.  if v1 >= v4 then goto L2b43c2;
  #L2b436c.  v2:= v0[v1] @kind object;
  #L2b4370.  call temp:= `isDirectory`(v2) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L2b4376.  v3:= temp;
  #L2b4378.  if v3 == 0 then goto L2b4382;
  #L2b437c.  call `deleteContents`(v2) @signature `Lcom/bumptech/glide/disklrucache/Util;.deleteContents:(Ljava/io/File;)V` @kind static;
  #L2b4382.  call temp:= `delete`(v2) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L2b4388.  v3:= temp;
  #L2b438a.  if v3 == 0 then goto L2b4394;
  #L2b438e.  v1:= v1 + 1;
  #L2b4392.  goto L2b4368;
  #L2b4394.  v4:= new `java.io.IOException`;
  #L2b4398.  v0:= new `java.lang.StringBuilder`;
  #L2b439c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b43a2.  v1:= "failed to delete file: " @kind object;
  #L2b43a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b43ac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b43b2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b43b8.  v0:= temp @kind object;
  #L2b43ba.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b43c0.  throw v4;
  #L2b43c2.  return @kind void;
  #L2b43c4.  v0:= new `java.io.IOException`;
  #L2b43c8.  v1:= new `java.lang.StringBuilder`;
  #L2b43cc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b43d2.  v2:= "not a readable directory: " @kind object;
  #L2b43d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b43dc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b43e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b43e8.  v4:= temp @kind object;
  #L2b43ea.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b43f0.  goto L2b43f4;
  #L2b43f2.  throw v0;
  #L2b43f4.  goto L2b43f2;
}
procedure `java.lang.String` `readFully`(`java.io.Reader` v4 @kind object) @signature `Lcom/bumptech/glide/disklrucache/Util;.readFully:(Ljava/io/Reader;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b4274.  v0:= new `java.io.StringWriter`;
  #L2b4278.  call `<init>`(v0) @signature `Ljava/io/StringWriter;.<init>:()V` @kind direct;
  #L2b427e.  v1:= 1024I;
  #L2b4282.  v1:= new `char`[v1];
  #L2b4286.  call temp:= `read`(v4, v1) @signature `Ljava/io/Reader;.read:([C)I` @kind virtual;
  #L2b428c.  v2:= temp;
  #L2b428e.  v3:= -1I;
  #L2b4290.  if v2 == v3 then goto L2b429e;
  #L2b4294.  v3:= 0I;
  #L2b4296.  call `write`(v0, v1, v3, v2) @signature `Ljava/io/StringWriter;.write:([CII)V` @kind virtual;
  #L2b429c.  goto L2b4286;
  #L2b429e.  call temp:= `toString`(v0) @signature `Ljava/io/StringWriter;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b42a4.  v0:= temp @kind object;
  #L2b42a6.  call `close`(v4) @signature `Ljava/io/Reader;.close:()V` @kind virtual;
  #L2b42ac.  return v0 @kind object;
  #L2b42ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b42b0.  call `close`(v4) @signature `Ljava/io/Reader;.close:()V` @kind virtual;
  #L2b42b6.  goto L2b42ba;
  #L2b42b8.  throw v0;
  #L2b42ba.  goto L2b42b8;
  catch `java.lang.Throwable` @[L2b4274..L2b42a6] goto L2b42ae;
}
