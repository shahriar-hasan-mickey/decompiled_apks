record `com.bumptech.glide.disklrucache.StrictLineReader` @kind class @AccessFlag  extends `java.io.Closeable` @kind interface {
  `byte`[] `com.bumptech.glide.disklrucache.StrictLineReader.buf` @AccessFlag PRIVATE;
  `java.nio.charset.Charset` `com.bumptech.glide.disklrucache.StrictLineReader.charset` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.disklrucache.StrictLineReader.end` @AccessFlag PRIVATE;
  `java.io.InputStream` `com.bumptech.glide.disklrucache.StrictLineReader.in` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.disklrucache.StrictLineReader.pos` @AccessFlag PRIVATE;
}
global `byte` `@@com.bumptech.glide.disklrucache.StrictLineReader.CR` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@com.bumptech.glide.disklrucache.StrictLineReader.LF` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.disklrucache.StrictLineReader` v1 @kind this, `java.io.InputStream` v2 @kind object, `int` v3 , `java.nio.charset.Charset` v4 @kind object) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.<init>:(Ljava/io/InputStream;ILjava/nio/charset/Charset;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b4164.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b416a.  if v2 == 0 then goto L2b41b8;
  #L2b416e.  if v4 == 0 then goto L2b41b8;
  #L2b4172.  if v3 < 0 then goto L2b41a8;
  #L2b4176.  v0:= `@@com.bumptech.glide.disklrucache.Util.US_ASCII` @type ^`java.nio.charset.Charset` @kind object;
  #L2b417a.  call temp:= `equals`(v4, v0) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b4180.  v0:= temp;
  #L2b4182.  if v0 == 0 then goto L2b4198;
  #L2b4186.  v1.`com.bumptech.glide.disklrucache.StrictLineReader.in` @type ^`java.io.InputStream` := v2 @kind object;
  #L2b418a.  v1.`com.bumptech.glide.disklrucache.StrictLineReader.charset` @type ^`java.nio.charset.Charset` := v4 @kind object;
  #L2b418e.  v2:= new `byte`[v3];
  #L2b4192.  v1.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] := v2 @kind object;
  #L2b4196.  return @kind void;
  #L2b4198.  v2:= new `java.lang.IllegalArgumentException`;
  #L2b419c.  v3:= "Unsupported encoding" @kind object;
  #L2b41a0.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b41a6.  throw v2;
  #L2b41a8.  v2:= new `java.lang.IllegalArgumentException`;
  #L2b41ac.  v3:= "capacity <= 0" @kind object;
  #L2b41b0.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b41b6.  throw v2;
  #L2b41b8.  v2:= new `java.lang.NullPointerException`;
  #L2b41bc.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L2b41c2.  throw v2;
}
procedure `void` `<init>`(`com.bumptech.glide.disklrucache.StrictLineReader` v1 @kind this, `java.io.InputStream` v2 @kind object, `java.nio.charset.Charset` v3 @kind object) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b41d4.  v0:= 8192I;
  #L2b41d8.  call `<init>`(v1, v2, v0, v3) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.<init>:(Ljava/io/InputStream;ILjava/nio/charset/Charset;)V` @kind direct;
  #L2b41de.  return @kind void;
}
procedure `java.nio.charset.Charset` `access$000`(`com.bumptech.glide.disklrucache.StrictLineReader` v0 @kind object) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.access$000:(Lcom/bumptech/glide/disklrucache/StrictLineReader;)Ljava/nio/charset/Charset;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b414c.  v0:= v0.`com.bumptech.glide.disklrucache.StrictLineReader.charset` @type ^`java.nio.charset.Charset` @kind object;
  #L2b4150.  return v0 @kind object;
}
procedure `void` `fillBuf`(`com.bumptech.glide.disklrucache.StrictLineReader` v4 @kind this) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.fillBuf:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b4234.  v0:= v4.`com.bumptech.glide.disklrucache.StrictLineReader.in` @type ^`java.io.InputStream` @kind object;
  #L2b4238.  v1:= v4.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] @kind object;
  #L2b423c.  v2:= length @variable v1;
  #L2b423e.  v3:= 0I;
  #L2b4240.  call temp:= `read`(v0, v1, v3, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L2b4246.  v0:= temp;
  #L2b4248.  v1:= -1I;
  #L2b424a.  if v0 == v1 then goto L2b4258;
  #L2b424e.  v4.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int` := v3;
  #L2b4252.  v4.`com.bumptech.glide.disklrucache.StrictLineReader.end` @type ^`int` := v0;
  #L2b4256.  return @kind void;
  #L2b4258.  v0:= new `java.io.EOFException`;
  #L2b425c.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L2b4262.  throw v0;
}
procedure `void` `close`(`com.bumptech.glide.disklrucache.StrictLineReader` v2 @kind this) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b41f0.  v0:= v2.`com.bumptech.glide.disklrucache.StrictLineReader.in` @type ^`java.io.InputStream` @kind object;
  #L2b41f4.  @monitorenter v0
  #L2b41f6.  v1:= v2.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] @kind object;
  #L2b41fa.  if v1 == 0 then goto L2b420e;
  #L2b41fe.  v1:= 0I;
  #L2b4200.  v2.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] := v1 @kind object;
  #L2b4204.  v1:= v2.`com.bumptech.glide.disklrucache.StrictLineReader.in` @type ^`java.io.InputStream` @kind object;
  #L2b4208.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2b420e.  @monitorexit v0
  #L2b4210.  return @kind void;
  #L2b4212.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b4214.  @monitorexit v0
  #L2b4216.  throw v1;
  catch `java.lang.Throwable` @[L2b41f6..L2b4216] goto L2b4212;
}
procedure `boolean` `hasUnterminatedLine`(`com.bumptech.glide.disklrucache.StrictLineReader` v2 @kind this) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.hasUnterminatedLine:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b3fd4.  v0:= v2.`com.bumptech.glide.disklrucache.StrictLineReader.end` @type ^`int`;
  #L2b3fd8.  v1:= -1I;
  #L2b3fda.  if v0 != v1 then goto L2b3fe2;
  #L2b3fde.  v0:= 1I;
  #L2b3fe0.  goto L2b3fe4;
  #L2b3fe2.  v0:= 0I;
  #L2b3fe4.  return v0;
}
procedure `java.lang.String` `readLine`(`com.bumptech.glide.disklrucache.StrictLineReader` v7 @kind this) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.readLine:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b3ff8.  v0:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.in` @type ^`java.io.InputStream` @kind object;
  #L2b3ffc.  @monitorenter v0
  #L2b3ffe.  v1:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] @kind object;
  #L2b4002.  if v1 == 0 then goto L2b4116;
  #L2b4006.  v1:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b400a.  v2:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.end` @type ^`int`;
  #L2b400e.  if v1 < v2 then goto L2b4018;
  #L2b4012.  call `fillBuf`(v7) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.fillBuf:()V` @kind direct;
  #L2b4018.  v1:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b401c.  v2:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.end` @type ^`int`;
  #L2b4020.  v3:= 10I;
  #L2b4024.  if v1 == v2 then goto L2b408a;
  #L2b4028.  v2:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] @kind object;
  #L2b402c.  v2:= v2[v1] @kind byte;
  #L2b4030.  if v2 != v3 then goto L2b4084;
  #L2b4034.  v2:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b4038.  if v1 == v2 then goto L2b4052;
  #L2b403c.  v2:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] @kind object;
  #L2b4040.  v3:= v1 + -1;
  #L2b4044.  v2:= v2[v3] @kind byte;
  #L2b4048.  v4:= 13I;
  #L2b404c.  if v2 != v4 then goto L2b4052;
  #L2b4050.  goto L2b4054;
  #L2b4052.  v3:= v1;
  #L2b4054.  v2:= new `java.lang.String`;
  #L2b4058.  v4:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] @kind object;
  #L2b405c.  v5:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b4060.  v6:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b4064.  v3:= v3 - v6 @kind int;
  #L2b4066.  v6:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.charset` @type ^`java.nio.charset.Charset` @kind object;
  #L2b406a.  call temp:= `name`(v6) @signature `Ljava/nio/charset/Charset;.name:()Ljava/lang/String;` @kind virtual;
  #L2b4070.  v6:= temp @kind object;
  #L2b4072.  call `<init>`(v2, v4, v5, v3, v6) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L2b4078.  v1:= v1 + 1;
  #L2b407c.  v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int` := v1;
  #L2b4080.  @monitorexit v0
  #L2b4082.  return v2 @kind object;
  #L2b4084.  v1:= v1 + 1;
  #L2b4088.  goto L2b401c;
  #L2b408a.  v1:= new `com.bumptech.glide.disklrucache.StrictLineReader$1`;
  #L2b408e.  v2:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.end` @type ^`int`;
  #L2b4092.  v4:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b4096.  v2:= v2 - v4 @kind int;
  #L2b4098.  v2:= v2 + 80;
  #L2b409c.  call `<init>`(v1, v7, v2) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader$1;.<init>:(Lcom/bumptech/glide/disklrucache/StrictLineReader;I)V` @kind direct;
  #L2b40a2.  v2:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] @kind object;
  #L2b40a6.  v4:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b40aa.  v5:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.end` @type ^`int`;
  #L2b40ae.  v6:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b40b2.  v5:= v5 - v6 @kind int;
  #L2b40b4.  call `write`(v1, v2, v4, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L2b40ba.  v2:= -1I;
  #L2b40bc.  v7.`com.bumptech.glide.disklrucache.StrictLineReader.end` @type ^`int` := v2;
  #L2b40c0.  call `fillBuf`(v7) @signature `Lcom/bumptech/glide/disklrucache/StrictLineReader;.fillBuf:()V` @kind direct;
  #L2b40c6.  v2:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b40ca.  v4:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.end` @type ^`int`;
  #L2b40ce.  if v2 == v4 then goto L2b40a2;
  #L2b40d2.  v4:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] @kind object;
  #L2b40d6.  v4:= v4[v2] @kind byte;
  #L2b40da.  if v4 != v3 then goto L2b4110;
  #L2b40de.  v3:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b40e2.  if v2 == v3 then goto L2b40fc;
  #L2b40e6.  v3:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.buf` @type ^`byte`[] @kind object;
  #L2b40ea.  v4:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b40ee.  v5:= v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int`;
  #L2b40f2.  v5:= v2 - v5 @kind int;
  #L2b40f6.  call `write`(v1, v3, v4, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L2b40fc.  v2:= v2 + 1;
  #L2b4100.  v7.`com.bumptech.glide.disklrucache.StrictLineReader.pos` @type ^`int` := v2;
  #L2b4104.  call temp:= `toString`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b410a.  v1:= temp @kind object;
  #L2b410c.  @monitorexit v0
  #L2b410e.  return v1 @kind object;
  #L2b4110.  v2:= v2 + 1;
  #L2b4114.  goto L2b40ca;
  #L2b4116.  v1:= new `java.io.IOException`;
  #L2b411a.  v2:= "LineReader is closed" @kind object;
  #L2b411e.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b4124.  throw v1;
  #L2b4126.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b4128.  @monitorexit v0
  #L2b412a.  goto L2b412e;
  #L2b412c.  throw v1;
  #L2b412e.  goto L2b412c;
  catch `java.lang.Throwable` @[L2b3ffe..L2b412a] goto L2b4126;
}
