record `com.bumptech.glide.RequestManager$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.RequestManager` `com.bumptech.glide.RequestManager$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.bumptech.glide.manager.Lifecycle` `com.bumptech.glide.RequestManager$1.val$lifecycle` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.RequestManager$1` v0 @kind this, `com.bumptech.glide.RequestManager` v1 @kind object, `com.bumptech.glide.manager.Lifecycle` v2 @kind object) @signature `Lcom/bumptech/glide/RequestManager$1;.<init>:(Lcom/bumptech/glide/RequestManager;Lcom/bumptech/glide/manager/Lifecycle;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b1a54.  v0.`com.bumptech.glide.RequestManager$1.this$0` @type ^`com.bumptech.glide.RequestManager` := v1 @kind object;
  #L2b1a58.  v0.`com.bumptech.glide.RequestManager$1.val$lifecycle` @type ^`com.bumptech.glide.manager.Lifecycle` := v2 @kind object;
  #L2b1a5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b1a62.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.RequestManager$1` v2 @kind this) @signature `Lcom/bumptech/glide/RequestManager$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b1a74.  v0:= v2.`com.bumptech.glide.RequestManager$1.val$lifecycle` @type ^`com.bumptech.glide.manager.Lifecycle` @kind object;
  #L2b1a78.  v1:= v2.`com.bumptech.glide.RequestManager$1.this$0` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L2b1a7c.  call `addListener`(v0, v1) @signature `Lcom/bumptech/glide/manager/Lifecycle;.addListener:(Lcom/bumptech/glide/manager/LifecycleListener;)V` @kind interface;
  #L2b1a82.  return @kind void;
}
