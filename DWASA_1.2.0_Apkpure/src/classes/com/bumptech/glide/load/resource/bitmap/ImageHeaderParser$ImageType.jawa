record `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `boolean` `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.hasAlpha` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`[] `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.GIF` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.JPEG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.PNG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.PNG_A` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2c1638.  v0:= new `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`;
  #L2c163c.  v1:= 1I;
  #L2c163e.  v2:= 0I;
  #L2c1640.  v3:= "GIF" @kind object;
  #L2c1644.  call `<init>`(v0, v3, v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L2c164a.  `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` := v0 @kind object;
  #L2c164e.  v0:= new `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`;
  #L2c1652.  v3:= "JPEG" @kind object;
  #L2c1656.  call `<init>`(v0, v3, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L2c165c.  `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` := v0 @kind object;
  #L2c1660.  v0:= new `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`;
  #L2c1664.  v3:= 2I;
  #L2c1666.  v4:= "PNG_A" @kind object;
  #L2c166a.  call `<init>`(v0, v4, v3, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L2c1670.  `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` := v0 @kind object;
  #L2c1674.  v0:= new `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`;
  #L2c1678.  v4:= 3I;
  #L2c167a.  v5:= "PNG" @kind object;
  #L2c167e.  call `<init>`(v0, v5, v4, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L2c1684.  `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` := v0 @kind object;
  #L2c1688.  v0:= new `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`;
  #L2c168c.  v5:= 4I;
  #L2c168e.  v6:= "UNKNOWN" @kind object;
  #L2c1692.  call `<init>`(v0, v6, v5, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L2c1698.  `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` := v0 @kind object;
  #L2c169c.  v0:= 5I;
  #L2c169e.  v0:= new `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`[v0];
  #L2c16a2.  v6:= `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` @kind object;
  #L2c16a6.  v0[v2]:= v6 @kind object;
  #L2c16aa.  v2:= `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` @kind object;
  #L2c16ae.  v0[v1]:= v2 @kind object;
  #L2c16b2.  v1:= `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` @kind object;
  #L2c16b6.  v0[v3]:= v1 @kind object;
  #L2c16ba.  v1:= `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` @kind object;
  #L2c16be.  v0[v4]:= v1 @kind object;
  #L2c16c2.  v1:= `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` @kind object;
  #L2c16c6.  v0[v5]:= v1 @kind object;
  #L2c16ca.  `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.$VALUES` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`[] := v0 @kind object;
  #L2c16ce.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c16e0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2c16e6.  v0.`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.hasAlpha` @type ^`boolean` := v3 @kind boolean;
  #L2c16ea.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2c15f0.  v0:= constclass @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` @kind object;
  #L2c15f4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2c15fa.  v1:= temp @kind object;
  #L2c15fc.  v1:= (`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`) v1 @kind object;
  #L2c1600.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`[] `values`() @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.values:()[Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2c1614.  v0:= `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.$VALUES` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`[] @kind object;
  #L2c1618.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2c161e.  v0:= temp @kind object;
  #L2c1620.  v0:= (`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType`[]) v0 @kind object;
  #L2c1624.  return v0 @kind object;
}
procedure `boolean` `hasAlpha`(`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;.hasAlpha:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c15d8.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.hasAlpha` @type ^`boolean` @kind boolean;
  #L2c15dc.  return v0;
}
