record `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceDecoder` @kind interface {
  `com.bumptech.glide.load.ResourceDecoder` `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.bitmapDecoder` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.bitmapPool` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.ResourceDecoder` `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.gifDecoder` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.id` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.parser` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory` `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.streamFactory` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` `@@com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.DEFAULT_PARSER` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory` `@@com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.DEFAULT_STREAM_FACTORY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.MARK_LIMIT_BYTES` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c4f34.  v0:= new `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser`;
  #L2c4f38.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$ImageTypeParser;.<init>:()V` @kind direct;
  #L2c4f3e.  `@@com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.DEFAULT_PARSER` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` := v0 @kind object;
  #L2c4f42.  v0:= new `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory`;
  #L2c4f46.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$BufferedStreamFactory;.<init>:()V` @kind direct;
  #L2c4f4c.  `@@com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.DEFAULT_STREAM_FACTORY` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory` := v0 @kind object;
  #L2c4f50.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` v6 @kind this, `com.bumptech.glide.load.ResourceDecoder` v7 @kind object, `com.bumptech.glide.load.ResourceDecoder` v8 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v9 @kind object) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.<init>:(Lcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c4f64.  v4:= `@@com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.DEFAULT_PARSER` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` @kind object;
  #L2c4f68.  v5:= `@@com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.DEFAULT_STREAM_FACTORY` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory` @kind object;
  #L2c4f6c.  v0:= v6 @kind object;
  #L2c4f6e.  v1:= v7 @kind object;
  #L2c4f70.  v2:= v8 @kind object;
  #L2c4f72.  v3:= v9 @kind object;
  #L2c4f74.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.<init>:(Lcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$ImageTypeParser;Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$BufferedStreamFactory;)V` @kind direct;
  #L2c4f7a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` v0 @kind this, `com.bumptech.glide.load.ResourceDecoder` v1 @kind object, `com.bumptech.glide.load.ResourceDecoder` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v3 @kind object, `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` v4 @kind object, `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.<init>:(Lcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$ImageTypeParser;Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$BufferedStreamFactory;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c4f8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c4f92.  v0.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.bitmapDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` := v1 @kind object;
  #L2c4f96.  v0.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.gifDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` := v2 @kind object;
  #L2c4f9a.  v0.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v3 @kind object;
  #L2c4f9e.  v0.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.parser` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` := v4 @kind object;
  #L2c4fa2.  v0.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.streamFactory` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory` := v5 @kind object;
  #L2c4fa6.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` `decode`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` v1 @kind this, `com.bumptech.glide.load.model.ImageVideoWrapper` v2 @kind object, `int` v3 , `int` v4 , `byte`[] v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decode:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II[B)Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c4d98.  call temp:= `getStream`(v2) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapper;.getStream:()Ljava/io/InputStream;` @kind virtual;
  #L2c4d9e.  v0:= temp @kind object;
  #L2c4da0.  if v0 == 0 then goto L2c4dae;
  #L2c4da4.  call temp:= `decodeStream`(v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decodeStream:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II[B)Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @kind direct;
  #L2c4daa.  v2:= temp @kind object;
  #L2c4dac.  goto L2c4db6;
  #L2c4dae.  call temp:= `decodeBitmapWrapper`(v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decodeBitmapWrapper:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II)Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @kind direct;
  #L2c4db4.  v2:= temp @kind object;
  #L2c4db6.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` `decodeBitmapWrapper`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` v1 @kind this, `com.bumptech.glide.load.model.ImageVideoWrapper` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decodeBitmapWrapper:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II)Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c4dc8.  v0:= v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.bitmapDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` @kind object;
  #L2c4dcc.  call temp:= `decode`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.decode:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2c4dd2.  v2:= temp @kind object;
  #L2c4dd4.  v3:= 0I;
  #L2c4dd6.  if v2 == 0 then goto L2c4de6;
  #L2c4dda.  v4:= new `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper`;
  #L2c4dde.  call `<init>`(v4, v2, v3) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.<init>:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/engine/Resource;)V` @kind direct;
  #L2c4de4.  v3:= v4 @kind object;
  #L2c4de6.  return v3 @kind object;
}
procedure `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` `decodeGifWrapper`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` v2 @kind this, `java.io.InputStream` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decodeGifWrapper:(Ljava/io/InputStream;II)Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c4df8.  v0:= v2.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.gifDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` @kind object;
  #L2c4dfc.  call temp:= `decode`(v0, v3, v4, v5) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.decode:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2c4e02.  v3:= temp @kind object;
  #L2c4e04.  v4:= 0I;
  #L2c4e06.  if v3 == 0 then goto L2c4e52;
  #L2c4e0a.  call temp:= `get`(v3) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L2c4e10.  v5:= temp @kind object;
  #L2c4e12.  v5:= (`com.bumptech.glide.load.resource.gif.GifDrawable`) v5 @kind object;
  #L2c4e16.  call temp:= `getFrameCount`(v5) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getFrameCount:()I` @kind virtual;
  #L2c4e1c.  v0:= temp;
  #L2c4e1e.  v1:= 1I;
  #L2c4e20.  if v0 <= v1 then goto L2c4e30;
  #L2c4e24.  v5:= new `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper`;
  #L2c4e28.  call `<init>`(v5, v4, v3) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.<init>:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/engine/Resource;)V` @kind direct;
  #L2c4e2e.  goto L2c4e54;
  #L2c4e30.  v3:= new `com.bumptech.glide.load.resource.bitmap.BitmapResource`;
  #L2c4e34.  call temp:= `getFirstFrame`(v5) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getFirstFrame:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2c4e3a.  v5:= temp @kind object;
  #L2c4e3c.  v0:= v2.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L2c4e40.  call `<init>`(v3, v5, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @kind direct;
  #L2c4e46.  v5:= new `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper`;
  #L2c4e4a.  call `<init>`(v5, v3, v4) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.<init>:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/engine/Resource;)V` @kind direct;
  #L2c4e50.  goto L2c4e54;
  #L2c4e52.  v5:= v4 @kind object;
  #L2c4e54.  return v5 @kind object;
}
procedure `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` `decodeStream`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` v2 @kind this, `com.bumptech.glide.load.model.ImageVideoWrapper` v3 @kind object, `int` v4 , `int` v5 , `byte`[] v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decodeStream:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II[B)Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c4e68.  v0:= v2.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.streamFactory` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory` @kind object;
  #L2c4e6c.  call temp:= `getStream`(v3) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapper;.getStream:()Ljava/io/InputStream;` @kind virtual;
  #L2c4e72.  v1:= temp @kind object;
  #L2c4e74.  call temp:= `build`(v0, v1, v6) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$BufferedStreamFactory;.build:(Ljava/io/InputStream;[B)Ljava/io/InputStream;` @kind virtual;
  #L2c4e7a.  v6:= temp @kind object;
  #L2c4e7c.  v0:= 2048I;
  #L2c4e80.  call `mark`(v6, v0) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L2c4e86.  v0:= v2.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.parser` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` @kind object;
  #L2c4e8a.  call temp:= `parse`(v0, v6) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$ImageTypeParser;.parse:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;` @kind virtual;
  #L2c4e90.  v0:= temp @kind object;
  #L2c4e92.  call `reset`(v6) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L2c4e98.  v1:= `@@com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` @kind object;
  #L2c4e9c.  if v0 != v1 then goto L2c4eaa;
  #L2c4ea0.  call temp:= `decodeGifWrapper`(v2, v6, v4, v5) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decodeGifWrapper:(Ljava/io/InputStream;II)Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @kind direct;
  #L2c4ea6.  v0:= temp @kind object;
  #L2c4ea8.  goto L2c4eac;
  #L2c4eaa.  v0:= 0I;
  #L2c4eac.  if v0 != 0 then goto L2c4eca;
  #L2c4eb0.  v0:= new `com.bumptech.glide.load.model.ImageVideoWrapper`;
  #L2c4eb4.  call temp:= `getFileDescriptor`(v3) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapper;.getFileDescriptor:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L2c4eba.  v3:= temp @kind object;
  #L2c4ebc.  call `<init>`(v0, v6, v3) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapper;.<init>:(Ljava/io/InputStream;Landroid/os/ParcelFileDescriptor;)V` @kind direct;
  #L2c4ec2.  call temp:= `decodeBitmapWrapper`(v2, v0, v4, v5) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decodeBitmapWrapper:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II)Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @kind direct;
  #L2c4ec8.  v0:= temp @kind object;
  #L2c4eca.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` v2 @kind this, `com.bumptech.glide.load.model.ImageVideoWrapper` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decode:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c4d20.  call temp:= `get`() @signature `Lcom/bumptech/glide/util/ByteArrayPool;.get:()Lcom/bumptech/glide/util/ByteArrayPool;` @kind static;
  #L2c4d26.  v0:= temp @kind object;
  #L2c4d28.  call temp:= `getBytes`(v0) @signature `Lcom/bumptech/glide/util/ByteArrayPool;.getBytes:()[B` @kind virtual;
  #L2c4d2e.  v1:= temp @kind object;
  #L2c4d30.  call temp:= `decode`(v2, v3, v4, v5, v1) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decode:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II[B)Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @kind direct;
  #L2c4d36.  v3:= temp @kind object;
  #L2c4d38.  call temp:= `releaseBytes`(v0, v1) @signature `Lcom/bumptech/glide/util/ByteArrayPool;.releaseBytes:([B)Z` @kind virtual;
  #L2c4d3e.  if v3 == 0 then goto L2c4d4e;
  #L2c4d42.  v4:= new `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource`;
  #L2c4d46.  call `<init>`(v4, v3) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResource;.<init>:(Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;)V` @kind direct;
  #L2c4d4c.  goto L2c4d50;
  #L2c4d4e.  v4:= 0I;
  #L2c4d50.  return v4 @kind object;
  #L2c4d52.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c4d54.  call temp:= `releaseBytes`(v0, v1) @signature `Lcom/bumptech/glide/util/ByteArrayPool;.releaseBytes:([B)Z` @kind virtual;
  #L2c4d5a.  throw v3;
  catch `java.lang.Throwable` @[L2c4d30..L2c4d38] goto L2c4d52;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decode:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c4d78.  v1:= (`com.bumptech.glide.load.model.ImageVideoWrapper`) v1 @kind object;
  #L2c4d7c.  call temp:= `decode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.decode:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L2c4d82.  v1:= temp @kind object;
  #L2c4d84.  return v1 @kind object;
}
procedure `java.lang.String` `getId`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c4edc.  v0:= v2.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.id` @type ^`java.lang.String` @kind object;
  #L2c4ee0.  if v0 != 0 then goto L2c4f1e;
  #L2c4ee4.  v0:= new `java.lang.StringBuilder`;
  #L2c4ee8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c4eee.  v1:= v2.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.gifDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` @kind object;
  #L2c4ef2.  call temp:= `getId`(v1) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.getId:()Ljava/lang/String;` @kind interface;
  #L2c4ef8.  v1:= temp @kind object;
  #L2c4efa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c4f00.  v1:= v2.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.bitmapDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` @kind object;
  #L2c4f04.  call temp:= `getId`(v1) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.getId:()Ljava/lang/String;` @kind interface;
  #L2c4f0a.  v1:= temp @kind object;
  #L2c4f0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c4f12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c4f18.  v0:= temp @kind object;
  #L2c4f1a.  v2.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.id` @type ^`java.lang.String` := v0 @kind object;
  #L2c4f1e.  v0:= v2.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder.id` @type ^`java.lang.String` @kind object;
  #L2c4f22.  return v0 @kind object;
}
