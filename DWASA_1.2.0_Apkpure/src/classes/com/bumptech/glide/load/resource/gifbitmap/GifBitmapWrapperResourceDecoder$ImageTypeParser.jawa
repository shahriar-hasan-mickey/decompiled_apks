record `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$ImageTypeParser;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c4d08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c4d0e.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType` `parse`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResourceDecoder$ImageTypeParser;.parse:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c4ce4.  v0:= new `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser`;
  #L2c4ce8.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2c4cee.  call temp:= `getType`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser;.getType:()Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;` @kind virtual;
  #L2c4cf4.  v2:= temp @kind object;
  #L2c4cf6.  return v2 @kind object;
}
