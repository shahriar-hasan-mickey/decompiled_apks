record `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader` @kind class @AccessFlag  {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader.data` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$RandomAccessReader;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c175c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c1762.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L2c1768.  v2:= temp @kind object;
  #L2c176a.  v1.`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L2c176e.  v2:= v1.`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` @kind object;
  #L2c1772.  v0:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L2c1776.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c177c.  return @kind void;
}
procedure `short` `getInt16`(`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$RandomAccessReader;.getInt16:(I)S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c173c.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` @kind object;
  #L2c1740.  call temp:= `getShort`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L2c1746.  v2:= temp;
  #L2c1748.  return v2;
}
procedure `int` `getInt32`(`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$RandomAccessReader;.getInt32:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c16fc.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` @kind object;
  #L2c1700.  call temp:= `getInt`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L2c1706.  v2:= temp;
  #L2c1708.  return v2;
}
procedure `int` `length`(`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$RandomAccessReader;.length:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c171c.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` @kind object;
  #L2c1720.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L2c1726.  v0:= temp @kind object;
  #L2c1728.  v0:= length @variable v0;
  #L2c172a.  return v0;
}
procedure `void` `order`(`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader` v1 @kind this, `java.nio.ByteOrder` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$RandomAccessReader;.order:(Ljava/nio/ByteOrder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c1790.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` @kind object;
  #L2c1794.  call temp:= `order`(v0, v2) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c179a.  return @kind void;
}
