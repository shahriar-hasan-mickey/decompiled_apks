record `com.bumptech.glide.load.resource.bitmap.BitmapEncoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceEncoder` @kind interface {
  `android.graphics.Bitmap$CompressFormat` `com.bumptech.glide.load.resource.bitmap.BitmapEncoder.compressFormat` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.BitmapEncoder.quality` @AccessFlag PRIVATE;
}
global `int` `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.DEFAULT_COMPRESSION_QUALITY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2c02d4.  v0:= 0I;
  #L2c02d6.  v1:= 90I;
  #L2c02da.  call `<init>`(v2, v0, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.<init>:(Landroid/graphics/Bitmap$CompressFormat;I)V` @kind direct;
  #L2c02e0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v0 @kind this, `android.graphics.Bitmap$CompressFormat` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.<init>:(Landroid/graphics/Bitmap$CompressFormat;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c02f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c02fa.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapEncoder.compressFormat` @type ^`android.graphics.Bitmap$CompressFormat` := v1 @kind object;
  #L2c02fe.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapEncoder.quality` @type ^`int` := v2;
  #L2c0302.  return @kind void;
}
procedure `android.graphics.Bitmap$CompressFormat` `getFormat`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.getFormat:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$CompressFormat;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c01c4.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapEncoder.compressFormat` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2c01c8.  if v0 == 0 then goto L2c01ce;
  #L2c01cc.  return v0 @kind object;
  #L2c01ce.  call temp:= `hasAlpha`(v2) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L2c01d4.  v2:= temp;
  #L2c01d6.  if v2 == 0 then goto L2c01e0;
  #L2c01da.  v2:= `@@android.graphics.Bitmap$CompressFormat.PNG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2c01de.  return v2 @kind object;
  #L2c01e0.  v2:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2c01e4.  return v2 @kind object;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v5 @kind this, `com.bumptech.glide.load.engine.Resource` v6 @kind object, `java.io.OutputStream` v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/OutputStream;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c01f8.  call temp:= `get`(v6) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L2c01fe.  v6:= temp @kind object;
  #L2c0200.  v6:= (`android.graphics.Bitmap`) v6 @kind object;
  #L2c0204.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2c020a.  v0:= temp @kind wide;
  #L2c020c.  call temp:= `getFormat`(v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.getFormat:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$CompressFormat;` @kind direct;
  #L2c0212.  v2:= temp @kind object;
  #L2c0214.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.BitmapEncoder.quality` @type ^`int`;
  #L2c0218.  call temp:= `compress`(v6, v2, v3, v7) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L2c021e.  v7:= "BitmapEncoder" @kind object;
  #L2c0222.  v3:= 2I;
  #L2c0224.  call temp:= `isLoggable`(v7, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c022a.  v3:= temp;
  #L2c022c.  if v3 == 0 then goto L2c0288;
  #L2c0230.  v3:= new `java.lang.StringBuilder`;
  #L2c0234.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c023a.  v4:= "Compressed with type: " @kind object;
  #L2c023e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c0244.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c024a.  v2:= " of size " @kind object;
  #L2c024e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c0254.  call temp:= `getBitmapByteSize`(v6) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2c025a.  v6:= temp;
  #L2c025c.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c0262.  v6:= " in " @kind object;
  #L2c0266.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c026c.  call temp:= `getElapsedMillis`(v0) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L2c0272.  v0:= temp @kind wide;
  #L2c0274.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c027a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c0280.  v6:= temp @kind object;
  #L2c0282.  call temp:= `v`(v7, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c0288.  v6:= 1I;
  #L2c028a.  return v6;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.encode:(Ljava/lang/Object;Ljava/io/OutputStream;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c029c.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L2c02a0.  call temp:= `encode`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/OutputStream;)Z` @kind virtual;
  #L2c02a6.  v1:= temp;
  #L2c02a8.  return v1;
}
procedure `java.lang.String` `getId`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c02bc.  v0:= "BitmapEncoder.com.bumptech.glide.load.resource.bitmap" @kind object;
  #L2c02c0.  return v0 @kind object;
}
