record `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.Resource` @kind interface {
  `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource.data` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource` v1 @kind this, `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResource;.<init>:(Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c50f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c50f6.  if v2 == 0 then goto L2c5100;
  #L2c50fa.  v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource.data` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` := v2 @kind object;
  #L2c50fe.  return @kind void;
  #L2c5100.  v2:= new `java.lang.NullPointerException`;
  #L2c5104.  v0:= "Data must not be null" @kind object;
  #L2c5108.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c510e.  throw v2;
}
procedure `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` `get`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResource;.get:()Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c509c.  v0:= v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource.data` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` @kind object;
  #L2c50a0.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResource;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2c50d4.  call temp:= `get`(v1) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResource;.get:()Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;` @kind virtual;
  #L2c50da.  v0:= temp @kind object;
  #L2c50dc.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResource;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c50b4.  v0:= v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource.data` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` @kind object;
  #L2c50b8.  call temp:= `getSize`(v0) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.getSize:()I` @kind virtual;
  #L2c50be.  v0:= temp;
  #L2c50c0.  return v0;
}
procedure `void` `recycle`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperResource;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5120.  v0:= v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource.data` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` @kind object;
  #L2c5124.  call temp:= `getBitmapResource`(v0) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.getBitmapResource:()Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L2c512a.  v0:= temp @kind object;
  #L2c512c.  if v0 == 0 then goto L2c5136;
  #L2c5130.  call `recycle`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L2c5136.  v0:= v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource.data` @type ^`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` @kind object;
  #L2c513a.  call temp:= `getGifResource`(v0) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.getGifResource:()Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L2c5140.  v0:= temp @kind object;
  #L2c5142.  if v0 == 0 then goto L2c514c;
  #L2c5146.  call `recycle`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L2c514c.  return @kind void;
}
