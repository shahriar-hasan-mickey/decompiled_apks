record `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` @kind class @AccessFlag PUBLIC {
  `com.bumptech.glide.load.engine.Resource` `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper.bitmapResource` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Resource` `com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper.gifResource` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` v0 @kind this, `com.bumptech.glide.load.engine.Resource` v1 @kind object, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.<init>:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/engine/Resource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c5378.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c537e.  if v1 == 0 then goto L2c5398;
  #L2c5382.  if v2 != 0 then goto L2c5388;
  #L2c5386.  goto L2c5398;
  #L2c5388.  v1:= new `java.lang.IllegalArgumentException`;
  #L2c538c.  v2:= "Can only contain either a bitmap resource or a gif resource, not both" @kind object;
  #L2c5390.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c5396.  throw v1;
  #L2c5398.  if v1 != 0 then goto L2c53b2;
  #L2c539c.  if v2 == 0 then goto L2c53a2;
  #L2c53a0.  goto L2c53b2;
  #L2c53a2.  v1:= new `java.lang.IllegalArgumentException`;
  #L2c53a6.  v2:= "Must contain either a bitmap resource or a gif resource" @kind object;
  #L2c53aa.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c53b0.  throw v1;
  #L2c53b2.  v0.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper.bitmapResource` @type ^`com.bumptech.glide.load.engine.Resource` := v1 @kind object;
  #L2c53b6.  v0.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper.gifResource` @type ^`com.bumptech.glide.load.engine.Resource` := v2 @kind object;
  #L2c53ba.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `getBitmapResource`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.getBitmapResource:()Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5318.  v0:= v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper.bitmapResource` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L2c531c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `getGifResource`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.getGifResource:()Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5330.  v0:= v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper.gifResource` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L2c5334.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapper;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5348.  v0:= v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper.bitmapResource` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L2c534c.  if v0 == 0 then goto L2c535a;
  #L2c5350.  call temp:= `getSize`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getSize:()I` @kind interface;
  #L2c5356.  v0:= temp;
  #L2c5358.  return v0;
  #L2c535a.  v0:= v1.`com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper.gifResource` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L2c535e.  call temp:= `getSize`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getSize:()I` @kind interface;
  #L2c5364.  v0:= temp;
  #L2c5366.  return v0;
}
