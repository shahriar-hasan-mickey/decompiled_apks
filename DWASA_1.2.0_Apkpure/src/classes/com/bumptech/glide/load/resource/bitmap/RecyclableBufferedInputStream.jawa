record `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind class @AccessFlag PUBLIC extends `java.io.FilterInputStream` @kind class {
  `byte`[] `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @AccessFlag PRIVATE_VOLATILE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.marklimit` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c2624.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2c262a.  v1:= -1I;
  #L2c262c.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int` := v1;
  #L2c2630.  if v2 == 0 then goto L2c2640;
  #L2c2634.  v1:= length @variable v2;
  #L2c2636.  if v1 == 0 then goto L2c2640;
  #L2c263a.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] := v2 @kind object;
  #L2c263e.  return @kind void;
  #L2c2640.  v1:= new `java.lang.IllegalArgumentException`;
  #L2c2644.  v2:= "buffer is null or empty" @kind object;
  #L2c2648.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c264e.  throw v1;
}
procedure `int` `fillbuf`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this, `java.io.InputStream` v6 @kind object, `byte`[] v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.fillbuf:(Ljava/io/InputStream;[B)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c2178.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int`;
  #L2c217c.  v1:= -1I;
  #L2c217e.  v2:= 0I;
  #L2c2180.  if v0 == v1 then goto L2c224c;
  #L2c2184.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c2188.  v3:= v3 - v0 @kind int;
  #L2c218a.  v4:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.marklimit` @type ^`int`;
  #L2c218e.  if v3 < v4 then goto L2c2194;
  #L2c2192.  goto L2c224c;
  #L2c2194.  if v0 != 0 then goto L2c2202;
  #L2c2198.  v0:= length @variable v7;
  #L2c219a.  if v4 <= v0 then goto L2c2202;
  #L2c219e.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c21a2.  v1:= length @variable v7;
  #L2c21a4.  if v0 != v1 then goto L2c2202;
  #L2c21a8.  v0:= length @variable v7;
  #L2c21aa.  v0:= v0 * 2;
  #L2c21ae.  if v0 <= v4 then goto L2c21b4;
  #L2c21b2.  v0:= v4;
  #L2c21b4.  v1:= 3I;
  #L2c21b6.  v3:= "BufferedIs" @kind object;
  #L2c21ba.  call temp:= `isLoggable`(v3, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c21c0.  v1:= temp;
  #L2c21c2.  if v1 == 0 then goto L2c21ee;
  #L2c21c6.  v1:= new `java.lang.StringBuilder`;
  #L2c21ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c21d0.  v4:= "allocate buffer of length: " @kind object;
  #L2c21d4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c21da.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c21e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c21e6.  v1:= temp @kind object;
  #L2c21e8.  call temp:= `d`(v3, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c21ee.  v0:= new `byte`[v0];
  #L2c21f2.  v1:= length @variable v7;
  #L2c21f4.  call `arraycopy`(v7, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c21fa.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] := v0 @kind object;
  #L2c21fe.  v7:= v0 @kind object;
  #L2c2200.  goto L2c2214;
  #L2c2202.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int`;
  #L2c2206.  if v0 <= 0 then goto L2c2214;
  #L2c220a.  v1:= length @variable v7;
  #L2c220c.  v1:= v1 - v0 @kind int;
  #L2c220e.  call `arraycopy`(v7, v0, v7, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c2214.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c2218.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int`;
  #L2c221c.  v0:= v0 - v1 @kind int;
  #L2c221e.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v0;
  #L2c2222.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int` := v2;
  #L2c2226.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int` := v2;
  #L2c222a.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c222e.  v1:= length @variable v7;
  #L2c2230.  v1:= v1 - v0 @kind int;
  #L2c2232.  call temp:= `read`(v6, v7, v0, v1) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L2c2238.  v6:= temp;
  #L2c223a.  v7:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c223e.  if v6 > 0 then goto L2c2244;
  #L2c2242.  goto L2c2246;
  #L2c2244.  v7:= v7 + v6 @kind int;
  #L2c2246.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int` := v7;
  #L2c224a.  return v6;
  #L2c224c.  call temp:= `read`(v6, v7) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L2c2252.  v6:= temp;
  #L2c2254.  if v6 <= 0 then goto L2c2264;
  #L2c2258.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int` := v1;
  #L2c225c.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v2;
  #L2c2260.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int` := v6;
  #L2c2264.  return v6;
}
procedure `java.io.IOException` `streamClosed`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.streamClosed:()Ljava/io/IOException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2c24c0.  v0:= new `java.io.IOException`;
  #L2c24c4.  v1:= "BufferedInputStream is closed" @kind object;
  #L2c24c8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c24ce.  throw v0;
}
procedure `int` `available`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c2118.  @monitorenter v3
  #L2c211a.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L2c211e.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c2122.  if v1 == 0 then goto L2c2142;
  #L2c2126.  if v0 == 0 then goto L2c2142;
  #L2c212a.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c212e.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c2132.  v1:= v1 - v2 @kind int;
  #L2c2134.  call temp:= `available`(v0) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L2c213a.  v0:= temp;
  #L2c213c.  v1:= v1 + v0 @kind int;
  #L2c213e.  @monitorexit v3
  #L2c2140.  return v1;
  #L2c2142.  call temp:= `streamClosed`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.streamClosed:()Ljava/io/IOException;` @kind static;
  #L2c2148.  v0:= temp @kind object;
  #L2c214a.  throw v0;
  #L2c214c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c214e.  @monitorexit v3
  #L2c2150.  throw v0;
  catch `java.lang.Throwable` @[L2c211a..L2c213c] goto L2c214c;
  catch `java.lang.Throwable` @[L2c2142..L2c214c] goto L2c214c;
}
procedure `void` `close`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c2660.  v0:= 0I;
  #L2c2662.  v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] := v0 @kind object;
  #L2c2666.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L2c266a.  v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.in` @type ^`java.io.InputStream` := v0 @kind object;
  #L2c266e.  if v1 == 0 then goto L2c2678;
  #L2c2672.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2c2678.  return @kind void;
}
procedure `void` `fixMarkLimit`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.fixMarkLimit:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c268c.  @monitorenter v1
  #L2c268e.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c2692.  v0:= length @variable v0;
  #L2c2694.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.marklimit` @type ^`int` := v0;
  #L2c2698.  @monitorexit v1
  #L2c269a.  return @kind void;
  #L2c269c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c269e.  @monitorexit v1
  #L2c26a0.  throw v0;
  catch `java.lang.Throwable` @[L2c268e..L2c2698] goto L2c269c;
}
procedure `void` `mark`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c26c0.  @monitorenter v1
  #L2c26c2.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.marklimit` @type ^`int`;
  #L2c26c6.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2c26cc.  v2:= temp;
  #L2c26ce.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.marklimit` @type ^`int` := v2;
  #L2c26d2.  v2:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c26d6.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int` := v2;
  #L2c26da.  @monitorexit v1
  #L2c26dc.  return @kind void;
  #L2c26de.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c26e0.  @monitorexit v1
  #L2c26e2.  throw v2;
  catch `java.lang.Throwable` @[L2c26c2..L2c26da] goto L2c26de;
}
procedure `boolean` `markSupported`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c2104.  v0:= 1I;
  #L2c2106.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c2278.  @monitorenter v5
  #L2c227a.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c227e.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L2c2282.  if v0 == 0 then goto L2c22ee;
  #L2c2286.  if v1 == 0 then goto L2c22ee;
  #L2c228a.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c228e.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c2292.  v4:= -1I;
  #L2c2294.  if v2 < v3 then goto L2c22a8;
  #L2c2298.  call temp:= `fillbuf`(v5, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.fillbuf:(Ljava/io/InputStream;[B)I` @kind direct;
  #L2c229e.  v1:= temp;
  #L2c22a0.  if v1 != v4 then goto L2c22a8;
  #L2c22a4.  @monitorexit v5
  #L2c22a6.  return v4;
  #L2c22a8.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c22ac.  if v0 == v1 then goto L2c22c4;
  #L2c22b0.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c22b4.  if v0 == 0 then goto L2c22ba;
  #L2c22b8.  goto L2c22c4;
  #L2c22ba.  call temp:= `streamClosed`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.streamClosed:()Ljava/io/IOException;` @kind static;
  #L2c22c0.  v0:= temp @kind object;
  #L2c22c2.  throw v0;
  #L2c22c4.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c22c8.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c22cc.  v1:= v1 - v2 @kind int;
  #L2c22ce.  if v1 <= 0 then goto L2c22ea;
  #L2c22d2.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c22d6.  v2:= v1 + 1;
  #L2c22da.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v2;
  #L2c22de.  v0:= v0[v1] @kind byte;
  #L2c22e2.  v0:= v0 ^& 255;
  #L2c22e6.  @monitorexit v5
  #L2c22e8.  return v0;
  #L2c22ea.  @monitorexit v5
  #L2c22ec.  return v4;
  #L2c22ee.  call temp:= `streamClosed`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.streamClosed:()Ljava/io/IOException;` @kind static;
  #L2c22f4.  v0:= temp @kind object;
  #L2c22f6.  throw v0;
  #L2c22f8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c22fa.  @monitorexit v5
  #L2c22fc.  throw v0;
  catch `java.lang.Throwable` @[L2c227a..L2c22a0] goto L2c22f8;
  catch `java.lang.Throwable` @[L2c22a8..L2c22e2] goto L2c22f8;
  catch `java.lang.Throwable` @[L2c22ee..L2c22f8] goto L2c22f8;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c232c.  @monitorenter v5
  #L2c232e.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c2332.  if v0 == 0 then goto L2c245e;
  #L2c2336.  if v8 != 0 then goto L2c2340;
  #L2c233a.  v6:= 0I;
  #L2c233c.  @monitorexit v5
  #L2c233e.  return v6;
  #L2c2340.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L2c2344.  if v1 == 0 then goto L2c2454;
  #L2c2348.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c234c.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c2350.  if v2 >= v3 then goto L2c23a2;
  #L2c2354.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c2358.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c235c.  v2:= v2 - v3 @kind int;
  #L2c235e.  if v2 < v8 then goto L2c2366;
  #L2c2362.  v2:= v8;
  #L2c2364.  goto L2c2370;
  #L2c2366.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c236a.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c236e.  v2:= v2 - v3 @kind int;
  #L2c2370.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c2374.  call `arraycopy`(v0, v3, v6, v7, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c237a.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c237e.  v3:= v3 + v2 @kind int;
  #L2c2380.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v3;
  #L2c2384.  if v2 == v8 then goto L2c239e;
  #L2c2388.  call temp:= `available`(v1) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L2c238e.  v3:= temp;
  #L2c2390.  if v3 != 0 then goto L2c2396;
  #L2c2394.  goto L2c239e;
  #L2c2396.  v7:= v7 + v2 @kind int;
  #L2c2398.  v2:= v8 - v2 @kind int;
  #L2c239c.  goto L2c23a4;
  #L2c239e.  @monitorexit v5
  #L2c23a0.  return v2;
  #L2c23a2.  v2:= v8;
  #L2c23a4.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int`;
  #L2c23a8.  v4:= -1I;
  #L2c23aa.  if v3 != v4 then goto L2c23ce;
  #L2c23ae.  v3:= length @variable v0;
  #L2c23b0.  if v2 < v3 then goto L2c23ce;
  #L2c23b4.  call temp:= `read`(v1, v6, v7, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L2c23ba.  v3:= temp;
  #L2c23bc.  if v3 != v4 then goto L2c2434;
  #L2c23c0.  if v2 != v8 then goto L2c23c6;
  #L2c23c4.  goto L2c23ca;
  #L2c23c6.  v4:= v8 - v2 @kind int;
  #L2c23ca.  @monitorexit v5
  #L2c23cc.  return v4;
  #L2c23ce.  call temp:= `fillbuf`(v5, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.fillbuf:(Ljava/io/InputStream;[B)I` @kind direct;
  #L2c23d4.  v3:= temp;
  #L2c23d6.  if v3 != v4 then goto L2c23e8;
  #L2c23da.  if v2 != v8 then goto L2c23e0;
  #L2c23de.  goto L2c23e4;
  #L2c23e0.  v4:= v8 - v2 @kind int;
  #L2c23e4.  @monitorexit v5
  #L2c23e6.  return v4;
  #L2c23e8.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c23ec.  if v0 == v3 then goto L2c2404;
  #L2c23f0.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c23f4.  if v0 == 0 then goto L2c23fa;
  #L2c23f8.  goto L2c2404;
  #L2c23fa.  call temp:= `streamClosed`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.streamClosed:()Ljava/io/IOException;` @kind static;
  #L2c2400.  v6:= temp @kind object;
  #L2c2402.  throw v6;
  #L2c2404.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c2408.  v4:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c240c.  v3:= v3 - v4 @kind int;
  #L2c240e.  if v3 < v2 then goto L2c2416;
  #L2c2412.  v3:= v2;
  #L2c2414.  goto L2c2420;
  #L2c2416.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c241a.  v4:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c241e.  v3:= v3 - v4 @kind int;
  #L2c2420.  v4:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c2424.  call `arraycopy`(v0, v4, v6, v7, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c242a.  v4:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c242e.  v4:= v4 + v3 @kind int;
  #L2c2430.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v4;
  #L2c2434.  v2:= v2 - v3 @kind int;
  #L2c2436.  if v2 != 0 then goto L2c243e;
  #L2c243a.  @monitorexit v5
  #L2c243c.  return v8;
  #L2c243e.  call temp:= `available`(v1) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L2c2444.  v4:= temp;
  #L2c2446.  if v4 != 0 then goto L2c2450;
  #L2c244a.  v8:= v8 - v2 @kind int;
  #L2c244c.  @monitorexit v5
  #L2c244e.  return v8;
  #L2c2450.  v7:= v7 + v3 @kind int;
  #L2c2452.  goto L2c23a4;
  #L2c2454.  call temp:= `streamClosed`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.streamClosed:()Ljava/io/IOException;` @kind static;
  #L2c245a.  v6:= temp @kind object;
  #L2c245c.  throw v6;
  #L2c245e.  call temp:= `streamClosed`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.streamClosed:()Ljava/io/IOException;` @kind static;
  #L2c2464.  v6:= temp @kind object;
  #L2c2466.  throw v6;
  #L2c2468.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c246a.  @monitorexit v5
  #L2c246c.  goto L2c2470;
  #L2c246e.  throw v6;
  #L2c2470.  goto L2c246e;
  catch `java.lang.Throwable` @[L2c232e..L2c2332] goto L2c2468;
  catch `java.lang.Throwable` @[L2c2340..L2c2390] goto L2c2468;
  catch `java.lang.Throwable` @[L2c23a4..L2c23bc] goto L2c2468;
  catch `java.lang.Throwable` @[L2c23ce..L2c23d6] goto L2c2468;
  catch `java.lang.Throwable` @[L2c23e8..L2c2434] goto L2c2468;
  catch `java.lang.Throwable` @[L2c243e..L2c2446] goto L2c2468;
  catch `java.lang.Throwable` @[L2c2454..L2c2468] goto L2c2468;
}
procedure `void` `reset`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c2700.  @monitorenter v2
  #L2c2702.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c2706.  if v0 == 0 then goto L2c2730;
  #L2c270a.  v0:= -1I;
  #L2c270c.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int`;
  #L2c2710.  if v0 == v1 then goto L2c2720;
  #L2c2714.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int`;
  #L2c2718.  v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v0;
  #L2c271c.  @monitorexit v2
  #L2c271e.  return @kind void;
  #L2c2720.  v0:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException`;
  #L2c2724.  v1:= "Mark has been invalidated" @kind object;
  #L2c2728.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream$InvalidMarkException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c272e.  throw v0;
  #L2c2730.  v0:= new `java.io.IOException`;
  #L2c2734.  v1:= "Stream is closed" @kind object;
  #L2c2738.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c273e.  throw v0;
  #L2c2740.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c2742.  @monitorexit v2
  #L2c2744.  throw v0;
  catch `java.lang.Throwable` @[L2c2702..L2c271c] goto L2c2740;
  catch `java.lang.Throwable` @[L2c2720..L2c2740] goto L2c2740;
}
procedure `long` `skip`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v8 @kind this, `long` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2c24e0.  @monitorenter v8
  #L2c24e2.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.buf` @type ^`byte`[] @kind object;
  #L2c24e6.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L2c24ea.  if v0 == 0 then goto L2c25c8;
  #L2c24ee.  v2:= 1L;
  #L2c24f2.  v4:= lcmp(v9, v2);
  #L2c24f6.  if v4 >= 0 then goto L2c2502;
  #L2c24fa.  v9:= 0L;
  #L2c24fe.  @monitorexit v8
  #L2c2500.  return v9 @kind wide;
  #L2c2502.  if v1 == 0 then goto L2c25be;
  #L2c2506.  v2:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c250a.  v3:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c250e.  v2:= v2 - v3 @kind int;
  #L2c2510.  v2:= (`long`) v2 @kind i2l;
  #L2c2512.  v4:= lcmp(v2, v9);
  #L2c2516.  if v4 < 0 then goto L2c252c;
  #L2c251a.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c251e.  v0:= (`long`) v0 @kind i2l;
  #L2c2520.  v0:= v0 + v9 @kind long;
  #L2c2522.  v1:= (`int`) v0 @kind l2i;
  #L2c2524.  v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v1;
  #L2c2528.  @monitorexit v8
  #L2c252a.  return v9 @kind wide;
  #L2c252c.  v2:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c2530.  v3:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c2534.  v2:= v2 - v3 @kind int;
  #L2c2536.  v2:= (`long`) v2 @kind i2l;
  #L2c2538.  v4:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c253c.  v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v4;
  #L2c2540.  v4:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.markpos` @type ^`int`;
  #L2c2544.  v5:= -1I;
  #L2c2546.  if v4 == v5 then goto L2c25ae;
  #L2c254a.  v4:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.marklimit` @type ^`int`;
  #L2c254e.  v6:= (`long`) v4 @kind i2l;
  #L2c2550.  v4:= lcmp(v9, v6);
  #L2c2554.  if v4 > 0 then goto L2c25ae;
  #L2c2558.  call temp:= `fillbuf`(v8, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.fillbuf:(Ljava/io/InputStream;[B)I` @kind direct;
  #L2c255e.  v0:= temp;
  #L2c2560.  if v0 != v5 then goto L2c2568;
  #L2c2564.  @monitorexit v8
  #L2c2566.  return v2 @kind wide;
  #L2c2568.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c256c.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c2570.  v0:= v0 - v1 @kind int;
  #L2c2572.  v0:= (`long`) v0 @kind i2l;
  #L2c2574.  v4:= v9 - v2 @kind long;
  #L2c2578.  v6:= lcmp(v0, v4);
  #L2c257c.  if v6 < 0 then goto L2c2592;
  #L2c2580.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c2584.  v0:= (`long`) v0 @kind i2l;
  #L2c2586.  v0:= v0 + v4 @kind long;
  #L2c2588.  v1:= (`int`) v0 @kind l2i;
  #L2c258a.  v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v1;
  #L2c258e.  @monitorexit v8
  #L2c2590.  return v9 @kind wide;
  #L2c2592.  v9:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c2596.  v9:= (`long`) v9 @kind i2l;
  #L2c2598.  v2:= v2 + v9 @kind long;
  #L2c259a.  v9:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int`;
  #L2c259e.  v9:= (`long`) v9 @kind i2l;
  #L2c25a0.  v2:= v2 - v9 @kind long;
  #L2c25a2.  v9:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.count` @type ^`int`;
  #L2c25a6.  v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.pos` @type ^`int` := v9;
  #L2c25aa.  @monitorexit v8
  #L2c25ac.  return v2 @kind wide;
  #L2c25ae.  v9:= v9 - v2 @kind long;
  #L2c25b0.  call temp:= `skip`(v1, v9) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L2c25b6.  v9:= temp @kind wide;
  #L2c25b8.  v2:= v2 + v9 @kind long;
  #L2c25ba.  @monitorexit v8
  #L2c25bc.  return v2 @kind wide;
  #L2c25be.  call temp:= `streamClosed`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.streamClosed:()Ljava/io/IOException;` @kind static;
  #L2c25c4.  v9:= temp @kind object;
  #L2c25c6.  throw v9;
  #L2c25c8.  call temp:= `streamClosed`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.streamClosed:()Ljava/io/IOException;` @kind static;
  #L2c25ce.  v9:= temp @kind object;
  #L2c25d0.  throw v9;
  #L2c25d2.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c25d4.  @monitorexit v8
  #L2c25d6.  throw v9;
  catch `java.lang.Throwable` @[L2c24e2..L2c24ea] goto L2c25d2;
  catch `java.lang.Throwable` @[L2c2506..L2c2528] goto L2c25d2;
  catch `java.lang.Throwable` @[L2c252c..L2c2560] goto L2c25d2;
  catch `java.lang.Throwable` @[L2c2568..L2c258e] goto L2c25d2;
  catch `java.lang.Throwable` @[L2c2592..L2c25aa] goto L2c25d2;
  catch `java.lang.Throwable` @[L2c25b0..L2c25b8] goto L2c25d2;
  catch `java.lang.Throwable` @[L2c25be..L2c25d2] goto L2c25d2;
}
