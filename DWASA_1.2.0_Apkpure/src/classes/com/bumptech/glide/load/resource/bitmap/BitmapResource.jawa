record `com.bumptech.glide.load.resource.bitmap.BitmapResource` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.Resource` @kind interface {
  `android.graphics.Bitmap` `com.bumptech.glide.load.resource.bitmap.BitmapResource.bitmap` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.resource.bitmap.BitmapResource.bitmapPool` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v0 @kind this, `android.graphics.Bitmap` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c038c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c0392.  if v1 == 0 then goto L2c03b4;
  #L2c0396.  if v2 == 0 then goto L2c03a4;
  #L2c039a.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapResource.bitmap` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L2c039e.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapResource.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v2 @kind object;
  #L2c03a2.  return @kind void;
  #L2c03a4.  v1:= new `java.lang.NullPointerException`;
  #L2c03a8.  v2:= "BitmapPool must not be null" @kind object;
  #L2c03ac.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c03b2.  throw v1;
  #L2c03b4.  v1:= new `java.lang.NullPointerException`;
  #L2c03b8.  v2:= "Bitmap must not be null" @kind object;
  #L2c03bc.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c03c2.  throw v1;
}
procedure `com.bumptech.glide.load.resource.bitmap.BitmapResource` `obtain`(`android.graphics.Bitmap` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.obtain:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2c032c.  if v1 != 0 then goto L2c0334;
  #L2c0330.  v1:= 0I;
  #L2c0332.  return v1 @kind object;
  #L2c0334.  v0:= new `com.bumptech.glide.load.resource.bitmap.BitmapResource`;
  #L2c0338.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @kind direct;
  #L2c033e.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `get`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.get:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c0314.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapResource.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2c0318.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2c0370.  call temp:= `get`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.get:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2c0376.  v0:= temp @kind object;
  #L2c0378.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c0350.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapResource.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2c0354.  call temp:= `getBitmapByteSize`(v0) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2c035a.  v0:= temp;
  #L2c035c.  return v0;
}
procedure `void` `recycle`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c03d4.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.BitmapResource.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L2c03d8.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.BitmapResource.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2c03dc.  call temp:= `put`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)Z` @kind interface;
  #L2c03e2.  v0:= temp;
  #L2c03e4.  if v0 != 0 then goto L2c03f2;
  #L2c03e8.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.BitmapResource.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2c03ec.  call `recycle`(v0) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2c03f2.  return @kind void;
}
