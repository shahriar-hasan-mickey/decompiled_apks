record `com.bumptech.glide.load.resource.gif.GifResourceEncoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceEncoder` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.resource.gif.GifResourceEncoder.bitmapPool` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` `com.bumptech.glide.load.resource.gif.GifResourceEncoder.factory` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` `com.bumptech.glide.load.resource.gif.GifResourceEncoder.provider` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` `@@com.bumptech.glide.load.resource.gif.GifResourceEncoder.FACTORY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.bumptech.glide.load.resource.gif.GifResourceEncoder.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c4c44.  v0:= new `com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory`;
  #L2c4c48.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder$Factory;.<init>:()V` @kind direct;
  #L2c4c4e.  `@@com.bumptech.glide.load.resource.gif.GifResourceEncoder.FACTORY` @type ^`com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` := v0 @kind object;
  #L2c4c52.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.GifResourceEncoder` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c4c64.  v0:= `@@com.bumptech.glide.load.resource.gif.GifResourceEncoder.FACTORY` @type ^`com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` @kind object;
  #L2c4c68.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder$Factory;)V` @kind direct;
  #L2c4c6e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.GifResourceEncoder` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object, `com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder$Factory;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2c4c80.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c4c86.  v1.`com.bumptech.glide.load.resource.gif.GifResourceEncoder.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v2 @kind object;
  #L2c4c8a.  v0:= new `com.bumptech.glide.load.resource.gif.GifBitmapProvider`;
  #L2c4c8e.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @kind direct;
  #L2c4c94.  v1.`com.bumptech.glide.load.resource.gif.GifResourceEncoder.provider` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` := v0 @kind object;
  #L2c4c98.  v1.`com.bumptech.glide.load.resource.gif.GifResourceEncoder.factory` @type ^`com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` := v3 @kind object;
  #L2c4c9c.  return @kind void;
}
procedure `com.bumptech.glide.gifdecoder.GifDecoder` `decodeHeaders`(`com.bumptech.glide.load.resource.gif.GifResourceEncoder` v3 @kind this, `byte`[] v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.decodeHeaders:([B)Lcom/bumptech/glide/gifdecoder/GifDecoder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2c4b98.  v0:= v3.`com.bumptech.glide.load.resource.gif.GifResourceEncoder.factory` @type ^`com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` @kind object;
  #L2c4b9c.  call temp:= `buildParser`(v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder$Factory;.buildParser:()Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind virtual;
  #L2c4ba2.  v0:= temp @kind object;
  #L2c4ba4.  call temp:= `setData`(v0, v4) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.setData:([B)Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind virtual;
  #L2c4baa.  call temp:= `parseHeader`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.parseHeader:()Lcom/bumptech/glide/gifdecoder/GifHeader;` @kind virtual;
  #L2c4bb0.  v0:= temp @kind object;
  #L2c4bb2.  v1:= v3.`com.bumptech.glide.load.resource.gif.GifResourceEncoder.factory` @type ^`com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` @kind object;
  #L2c4bb6.  v2:= v3.`com.bumptech.glide.load.resource.gif.GifResourceEncoder.provider` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L2c4bba.  call temp:= `buildDecoder`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder$Factory;.buildDecoder:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;)Lcom/bumptech/glide/gifdecoder/GifDecoder;` @kind virtual;
  #L2c4bc0.  v1:= temp @kind object;
  #L2c4bc2.  call `setData`(v1, v0, v4) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;[B)V` @kind virtual;
  #L2c4bc8.  call `advance`(v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.advance:()V` @kind virtual;
  #L2c4bce.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `getTransformedFrame`(`com.bumptech.glide.load.resource.gif.GifResourceEncoder` v2 @kind this, `android.graphics.Bitmap` v3 @kind object, `com.bumptech.glide.load.Transformation` v4 @kind object, `com.bumptech.glide.load.resource.gif.GifDrawable` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.getTransformedFrame:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/Transformation;Lcom/bumptech/glide/load/resource/gif/GifDrawable;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c4be0.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifResourceEncoder.factory` @type ^`com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` @kind object;
  #L2c4be4.  v1:= v2.`com.bumptech.glide.load.resource.gif.GifResourceEncoder.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L2c4be8.  call temp:= `buildFrameResource`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder$Factory;.buildFrameResource:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L2c4bee.  v3:= temp @kind object;
  #L2c4bf0.  call temp:= `getIntrinsicWidth`(v5) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L2c4bf6.  v0:= temp;
  #L2c4bf8.  call temp:= `getIntrinsicHeight`(v5) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L2c4bfe.  v5:= temp;
  #L2c4c00.  call temp:= `transform`(v4, v3, v0, v5) @signature `Lcom/bumptech/glide/load/Transformation;.transform:(Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2c4c06.  v4:= temp @kind object;
  #L2c4c08.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c4c0e.  v5:= temp;
  #L2c4c10.  if v5 != 0 then goto L2c4c1a;
  #L2c4c14.  call `recycle`(v3) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L2c4c1a.  return v4 @kind object;
}
procedure `boolean` `writeDataDirect`(`com.bumptech.glide.load.resource.gif.GifResourceEncoder` v1 @kind this, `byte`[] v2 @kind object, `java.io.OutputStream` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.writeDataDirect:([BLjava/io/OutputStream;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c4b4c.  call `write`(v3, v2) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L2c4b52.  v2:= 1I;
  #L2c4b54.  goto L2c4b76;
  #L2c4b56.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L2c4b58.  v3:= 3I;
  #L2c4b5a.  v0:= "GifEncoder" @kind object;
  #L2c4b5e.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c4b64.  v3:= temp;
  #L2c4b66.  if v3 == 0 then goto L2c4b74;
  #L2c4b6a.  v3:= "Failed to write data to output stream in GifResourceEncoder" @kind object;
  #L2c4b6e.  call temp:= `d`(v0, v3, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2c4b74.  v2:= 0I;
  #L2c4b76.  return v2;
  catch `java.io.IOException` @[L2c4b4c..L2c4b52] goto L2c4b56;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.gif.GifResourceEncoder` v8 @kind this, `com.bumptech.glide.load.engine.Resource` v9 @kind object, `java.io.OutputStream` v10 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/OutputStream;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2c49ac.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2c49b2.  v0:= temp @kind wide;
  #L2c49b4.  call temp:= `get`(v9) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L2c49ba.  v9:= temp @kind object;
  #L2c49bc.  v9:= (`com.bumptech.glide.load.resource.gif.GifDrawable`) v9 @kind object;
  #L2c49c0.  call temp:= `getFrameTransformation`(v9) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getFrameTransformation:()Lcom/bumptech/glide/load/Transformation;` @kind virtual;
  #L2c49c6.  v2:= temp @kind object;
  #L2c49c8.  v3:= instanceof @variable v2 @type ^`com.bumptech.glide.load.resource.UnitTransformation` @kind boolean;
  #L2c49cc.  if v3 == 0 then goto L2c49e2;
  #L2c49d0.  call temp:= `getData`(v9) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getData:()[B` @kind virtual;
  #L2c49d6.  v9:= temp @kind object;
  #L2c49d8.  call temp:= `writeDataDirect`(v8, v9, v10) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.writeDataDirect:([BLjava/io/OutputStream;)Z` @kind direct;
  #L2c49de.  v9:= temp;
  #L2c49e0.  return v9;
  #L2c49e2.  call temp:= `getData`(v9) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getData:()[B` @kind virtual;
  #L2c49e8.  v3:= temp @kind object;
  #L2c49ea.  call temp:= `decodeHeaders`(v8, v3) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.decodeHeaders:([B)Lcom/bumptech/glide/gifdecoder/GifDecoder;` @kind direct;
  #L2c49f0.  v3:= temp @kind object;
  #L2c49f2.  v4:= v8.`com.bumptech.glide.load.resource.gif.GifResourceEncoder.factory` @type ^`com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory` @kind object;
  #L2c49f6.  call temp:= `buildEncoder`(v4) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder$Factory;.buildEncoder:()Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;` @kind virtual;
  #L2c49fc.  v4:= temp @kind object;
  #L2c49fe.  call temp:= `start`(v4, v10) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.start:(Ljava/io/OutputStream;)Z` @kind virtual;
  #L2c4a04.  v10:= temp;
  #L2c4a06.  v5:= 0I;
  #L2c4a08.  if v10 != 0 then goto L2c4a0e;
  #L2c4a0c.  return v5;
  #L2c4a0e.  v10:= 0I;
  #L2c4a10.  call temp:= `getFrameCount`(v3) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getFrameCount:()I` @kind virtual;
  #L2c4a16.  v6:= temp;
  #L2c4a18.  if v10 >= v6 then goto L2c4a7e;
  #L2c4a1c.  call temp:= `getNextFrame`(v3) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getNextFrame:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2c4a22.  v6:= temp @kind object;
  #L2c4a24.  call temp:= `getTransformedFrame`(v8, v6, v2, v9) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.getTransformedFrame:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/Transformation;Lcom/bumptech/glide/load/resource/gif/GifDrawable;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2c4a2a.  v6:= temp @kind object;
  #L2c4a2c.  call temp:= `get`(v6) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L2c4a32.  v7:= temp @kind object;
  #L2c4a34.  v7:= (`android.graphics.Bitmap`) v7 @kind object;
  #L2c4a38.  call temp:= `addFrame`(v4, v7) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.addFrame:(Landroid/graphics/Bitmap;)Z` @kind virtual;
  #L2c4a3e.  v7:= temp;
  #L2c4a40.  if v7 != 0 then goto L2c4a4c;
  #L2c4a44.  call `recycle`(v6) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L2c4a4a.  return v5;
  #L2c4a4c.  call temp:= `getCurrentFrameIndex`(v3) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getCurrentFrameIndex:()I` @kind virtual;
  #L2c4a52.  v7:= temp;
  #L2c4a54.  call temp:= `getDelay`(v3, v7) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getDelay:(I)I` @kind virtual;
  #L2c4a5a.  v7:= temp;
  #L2c4a5c.  call `setDelay`(v4, v7) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.setDelay:(I)V` @kind virtual;
  #L2c4a62.  call `advance`(v3) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.advance:()V` @kind virtual;
  #L2c4a68.  call `recycle`(v6) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L2c4a6e.  v10:= v10 + 1;
  #L2c4a72.  goto L2c4a10;
  #L2c4a74.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c4a76.  call `recycle`(v6) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L2c4a7c.  throw v9;
  #L2c4a7e.  call temp:= `finish`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.finish:()Z` @kind virtual;
  #L2c4a84.  v10:= temp;
  #L2c4a86.  v2:= 2I;
  #L2c4a88.  v4:= "GifEncoder" @kind object;
  #L2c4a8c.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c4a92.  v2:= temp;
  #L2c4a94.  if v2 == 0 then goto L2c4b04;
  #L2c4a98.  v2:= new `java.lang.StringBuilder`;
  #L2c4a9c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c4aa2.  v5:= "Encoded gif with " @kind object;
  #L2c4aa6.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c4aac.  call temp:= `getFrameCount`(v3) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getFrameCount:()I` @kind virtual;
  #L2c4ab2.  v3:= temp;
  #L2c4ab4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c4aba.  v3:= " frames and " @kind object;
  #L2c4abe.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c4ac4.  call temp:= `getData`(v9) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getData:()[B` @kind virtual;
  #L2c4aca.  v9:= temp @kind object;
  #L2c4acc.  v9:= length @variable v9;
  #L2c4ace.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c4ad4.  v9:= " bytes in " @kind object;
  #L2c4ad8.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c4ade.  call temp:= `getElapsedMillis`(v0) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L2c4ae4.  v0:= temp @kind wide;
  #L2c4ae6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c4aec.  v9:= " ms" @kind object;
  #L2c4af0.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c4af6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c4afc.  v9:= temp @kind object;
  #L2c4afe.  call temp:= `v`(v4, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c4b04.  return v10;
  catch `java.lang.Throwable` @[L2c4a2c..L2c4a40] goto L2c4a74;
  catch `java.lang.Throwable` @[L2c4a4c..L2c4a68] goto L2c4a74;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.gif.GifResourceEncoder` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.encode:(Ljava/lang/Object;Ljava/io/OutputStream;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c4b2c.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L2c4b30.  call temp:= `encode`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/OutputStream;)Z` @kind virtual;
  #L2c4b36.  v1:= temp;
  #L2c4b38.  return v1;
}
procedure `java.lang.String` `getId`(`com.bumptech.glide.load.resource.gif.GifResourceEncoder` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifResourceEncoder;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c4c2c.  v0:= "" @kind object;
  #L2c4c30.  return v0 @kind object;
}
