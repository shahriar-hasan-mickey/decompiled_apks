record `com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceDecoder` @kind interface {
  `com.bumptech.glide.load.ResourceDecoder` `com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder.fileDescriptorDecoder` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.ResourceDecoder` `com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder.streamDecoder` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder` v0 @kind this, `com.bumptech.glide.load.ResourceDecoder` v1 @kind object, `com.bumptech.glide.load.ResourceDecoder` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoder;.<init>:(Lcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/ResourceDecoder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c2000.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c2006.  v0.`com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder.streamDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` := v1 @kind object;
  #L2c200a.  v0.`com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder.fileDescriptorDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` := v2 @kind object;
  #L2c200e.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder` v3 @kind this, `com.bumptech.glide.load.model.ImageVideoWrapper` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoder;.decode:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c1f50.  call temp:= `getStream`(v4) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapper;.getStream:()Ljava/io/InputStream;` @kind virtual;
  #L2c1f56.  v0:= temp @kind object;
  #L2c1f58.  if v0 == 0 then goto L2c1f88;
  #L2c1f5c.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder.streamDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` @kind object;
  #L2c1f60.  call temp:= `decode`(v1, v0, v5, v6) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.decode:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2c1f66.  v0:= temp @kind object;
  #L2c1f68.  goto L2c1f8a;
  #L2c1f6a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L2c1f6c.  v1:= 2I;
  #L2c1f6e.  v2:= "ImageVideoDecoder" @kind object;
  #L2c1f72.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c1f78.  v1:= temp;
  #L2c1f7a.  if v1 == 0 then goto L2c1f88;
  #L2c1f7e.  v1:= "Failed to load image from stream, trying FileDescriptor" @kind object;
  #L2c1f82.  call temp:= `v`(v2, v1, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2c1f88.  v0:= 0I;
  #L2c1f8a.  if v0 != 0 then goto L2c1fa6;
  #L2c1f8e.  call temp:= `getFileDescriptor`(v4) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapper;.getFileDescriptor:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L2c1f94.  v4:= temp @kind object;
  #L2c1f96.  if v4 == 0 then goto L2c1fa6;
  #L2c1f9a.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder.fileDescriptorDecoder` @type ^`com.bumptech.glide.load.ResourceDecoder` @kind object;
  #L2c1f9e.  call temp:= `decode`(v0, v4, v5, v6) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.decode:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2c1fa4.  v0:= temp @kind object;
  #L2c1fa6.  return v0 @kind object;
  catch `java.io.IOException` @[L2c1f5c..L2c1f68] goto L2c1f6a;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoder;.decode:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c1fc8.  v1:= (`com.bumptech.glide.load.model.ImageVideoWrapper`) v1 @kind object;
  #L2c1fcc.  call temp:= `decode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoder;.decode:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;II)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L2c1fd2.  v1:= temp @kind object;
  #L2c1fd4.  return v1 @kind object;
}
procedure `java.lang.String` `getId`(`com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoder;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c1fe8.  v0:= "ImageVideoBitmapDecoder.com.bumptech.glide.load.resource.bitmap" @kind object;
  #L2c1fec.  return v0 @kind object;
}
