record `com.bumptech.glide.load.resource.bitmap.BitmapTransformation` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.load.Transformation` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.resource.bitmap.BitmapTransformation.bitmapPool` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapTransformation` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapTransformation;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c04b8.  call temp:= `get`(v1) @signature `Lcom/bumptech/glide/Glide;.get:(Landroid/content/Context;)Lcom/bumptech/glide/Glide;` @kind static;
  #L2c04be.  v1:= temp @kind object;
  #L2c04c0.  call temp:= `getBitmapPool`(v1) @signature `Lcom/bumptech/glide/Glide;.getBitmapPool:()Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;` @kind virtual;
  #L2c04c6.  v1:= temp @kind object;
  #L2c04c8.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapTransformation;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @kind direct;
  #L2c04ce.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapTransformation` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapTransformation;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c04e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c04e6.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapTransformation.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v1 @kind object;
  #L2c04ea.  return @kind void;
}
procedure `android.graphics.Bitmap` `transform`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v0 @kind object, `android.graphics.Bitmap` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapTransformation;.transform:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `com.bumptech.glide.load.engine.Resource` `transform`(`com.bumptech.glide.load.resource.bitmap.BitmapTransformation` v2 @kind this, `com.bumptech.glide.load.engine.Resource` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapTransformation;.transform:(Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c0404.  call temp:= `isValidDimensions`(v4, v5) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L2c040a.  v0:= temp;
  #L2c040c.  if v0 == 0 then goto L2c0460;
  #L2c0410.  call temp:= `get`(v3) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L2c0416.  v0:= temp @kind object;
  #L2c0418.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L2c041c.  v1:= -2147483648I;
  #L2c0420.  if v4 != v1 then goto L2c042c;
  #L2c0424.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c042a.  v4:= temp;
  #L2c042c.  if v5 != v1 then goto L2c0438;
  #L2c0430.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c0436.  v5:= temp;
  #L2c0438.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.BitmapTransformation.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L2c043c.  call temp:= `transform`(v2, v1, v0, v4, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapTransformation;.transform:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @kind virtual;
  #L2c0442.  v4:= temp @kind object;
  #L2c0444.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c044a.  v5:= temp;
  #L2c044c.  if v5 == 0 then goto L2c0452;
  #L2c0450.  goto L2c045e;
  #L2c0452.  v3:= v2.`com.bumptech.glide.load.resource.bitmap.BitmapTransformation.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L2c0456.  call temp:= `obtain`(v4, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.obtain:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;` @kind static;
  #L2c045c.  v3:= temp @kind object;
  #L2c045e.  return v3 @kind object;
  #L2c0460.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c0464.  v0:= new `java.lang.StringBuilder`;
  #L2c0468.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c046e.  v1:= "Cannot apply transformation on width: " @kind object;
  #L2c0472.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c0478.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c047e.  v4:= " or height: " @kind object;
  #L2c0482.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c0488.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c048e.  v4:= " less than or equal to zero and not Target.SIZE_ORIGINAL" @kind object;
  #L2c0492.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c0498.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c049e.  v4:= temp @kind object;
  #L2c04a0.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c04a6.  throw v3;
}
