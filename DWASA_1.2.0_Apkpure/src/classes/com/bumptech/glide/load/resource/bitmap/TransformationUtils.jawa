record `com.bumptech.glide.load.resource.bitmap.TransformationUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.PAINT_FLAGS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.TransformationUtils` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c2edc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c2ee2.  return @kind void;
}
procedure `android.graphics.Bitmap` `centerCrop`(`android.graphics.Bitmap` v6 @kind object, `android.graphics.Bitmap` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.centerCrop:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c2988.  if v7 != 0 then goto L2c2990;
  #L2c298c.  v6:= 0I;
  #L2c298e.  return v6 @kind object;
  #L2c2990.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2996.  v0:= temp;
  #L2c2998.  if v0 != v8 then goto L2c29aa;
  #L2c299c.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c29a2.  v0:= temp;
  #L2c29a4.  if v0 != v9 then goto L2c29aa;
  #L2c29a8.  return v7 @kind object;
  #L2c29aa.  v0:= new `android.graphics.Matrix`;
  #L2c29ae.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2c29b4.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c29ba.  v1:= temp;
  #L2c29bc.  v1:= v1 * v9 @kind int;
  #L2c29c0.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c29c6.  v2:= temp;
  #L2c29c8.  v2:= v2 * v8 @kind int;
  #L2c29cc.  v3:= 0I;
  #L2c29ce.  v4:= 0.5F;
  #L2c29d2.  if v1 <= v2 then goto L2c29fc;
  #L2c29d6.  v1:= (`float`) v9 @kind i2f;
  #L2c29d8.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c29de.  v2:= temp;
  #L2c29e0.  v2:= (`float`) v2 @kind i2f;
  #L2c29e2.  v1:= v1 / v2 @kind float;
  #L2c29e4.  v2:= (`float`) v8 @kind i2f;
  #L2c29e6.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c29ec.  v5:= temp;
  #L2c29ee.  v5:= (`float`) v5 @kind i2f;
  #L2c29f0.  v5:= v5 * v1 @kind float;
  #L2c29f4.  v2:= v2 - v5 @kind float;
  #L2c29f6.  v2:= v2 * v4 @kind float;
  #L2c29fa.  goto L2c2a24;
  #L2c29fc.  v1:= (`float`) v8 @kind i2f;
  #L2c29fe.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2a04.  v2:= temp;
  #L2c2a06.  v2:= (`float`) v2 @kind i2f;
  #L2c2a08.  v1:= v1 / v2 @kind float;
  #L2c2a0a.  v2:= (`float`) v9 @kind i2f;
  #L2c2a0c.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c2a12.  v5:= temp;
  #L2c2a14.  v5:= (`float`) v5 @kind i2f;
  #L2c2a16.  v5:= v5 * v1 @kind float;
  #L2c2a1a.  v2:= v2 - v5 @kind float;
  #L2c2a1c.  v2:= v2 * v4 @kind float;
  #L2c2a20.  v3:= v2;
  #L2c2a22.  v2:= 0I;
  #L2c2a24.  call `setScale`(v0, v1, v1) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L2c2a2a.  v2:= v2 + v4 @kind float;
  #L2c2a2c.  v1:= (`int`) v2 @kind f2i;
  #L2c2a2e.  v1:= (`float`) v1 @kind i2f;
  #L2c2a30.  v3:= v3 + v4 @kind float;
  #L2c2a32.  v2:= (`int`) v3 @kind f2i;
  #L2c2a34.  v2:= (`float`) v2 @kind i2f;
  #L2c2a36.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L2c2a3c.  if v6 == 0 then goto L2c2a42;
  #L2c2a40.  goto L2c2a52;
  #L2c2a42.  call temp:= `getSafeConfig`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getSafeConfig:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L2c2a48.  v6:= temp @kind object;
  #L2c2a4a.  call temp:= `createBitmap`(v8, v9, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L2c2a50.  v6:= temp @kind object;
  #L2c2a52.  call `setAlpha`(v7, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.setAlpha:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V` @kind static;
  #L2c2a58.  v8:= new `android.graphics.Canvas`;
  #L2c2a5c.  call `<init>`(v8, v6) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L2c2a62.  v9:= new `android.graphics.Paint`;
  #L2c2a66.  v1:= 6I;
  #L2c2a68.  call `<init>`(v9, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L2c2a6e.  call `drawBitmap`(v8, v7, v0, v9) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;Landroid/graphics/Paint;)V` @kind virtual;
  #L2c2a74.  return v6 @kind object;
}
procedure `android.graphics.Bitmap` `fitCenter`(`android.graphics.Bitmap` v6 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.fitCenter:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c2a88.  call temp:= `getWidth`(v6) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2a8e.  v0:= temp;
  #L2c2a90.  v1:= 2I;
  #L2c2a92.  v2:= "TransformationUtils" @kind object;
  #L2c2a96.  if v0 != v8 then goto L2c2abe;
  #L2c2a9a.  call temp:= `getHeight`(v6) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c2aa0.  v0:= temp;
  #L2c2aa2.  if v0 != v9 then goto L2c2abe;
  #L2c2aa6.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c2aac.  v7:= temp;
  #L2c2aae.  if v7 == 0 then goto L2c2abc;
  #L2c2ab2.  v7:= "requested target size matches input, returning input" @kind object;
  #L2c2ab6.  call temp:= `v`(v2, v7) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c2abc.  return v6 @kind object;
  #L2c2abe.  v0:= (`float`) v8 @kind i2f;
  #L2c2ac0.  call temp:= `getWidth`(v6) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2ac6.  v3:= temp;
  #L2c2ac8.  v3:= (`float`) v3 @kind i2f;
  #L2c2aca.  v0:= v0 / v3 @kind float;
  #L2c2acc.  v3:= (`float`) v9 @kind i2f;
  #L2c2ace.  call temp:= `getHeight`(v6) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c2ad4.  v4:= temp;
  #L2c2ad6.  v4:= (`float`) v4 @kind i2f;
  #L2c2ad8.  v3:= v3 / v4 @kind float;
  #L2c2ada.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c2ae0.  v0:= temp;
  #L2c2ae2.  call temp:= `getWidth`(v6) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2ae8.  v3:= temp;
  #L2c2aea.  v3:= (`float`) v3 @kind i2f;
  #L2c2aec.  v3:= v3 * v0 @kind float;
  #L2c2af0.  v3:= (`int`) v3 @kind f2i;
  #L2c2af2.  call temp:= `getHeight`(v6) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c2af8.  v4:= temp;
  #L2c2afa.  v4:= (`float`) v4 @kind i2f;
  #L2c2afc.  v4:= v4 * v0 @kind float;
  #L2c2b00.  v4:= (`int`) v4 @kind f2i;
  #L2c2b02.  call temp:= `getWidth`(v6) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2b08.  v5:= temp;
  #L2c2b0a.  if v5 != v3 then goto L2c2b32;
  #L2c2b0e.  call temp:= `getHeight`(v6) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c2b14.  v5:= temp;
  #L2c2b16.  if v5 != v4 then goto L2c2b32;
  #L2c2b1a.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c2b20.  v7:= temp;
  #L2c2b22.  if v7 == 0 then goto L2c2b30;
  #L2c2b26.  v7:= "adjusted target size matches input, returning input" @kind object;
  #L2c2b2a.  call temp:= `v`(v2, v7) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c2b30.  return v6 @kind object;
  #L2c2b32.  call temp:= `getSafeConfig`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getSafeConfig:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L2c2b38.  v5:= temp @kind object;
  #L2c2b3a.  call temp:= `get`(v7, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L2c2b40.  v7:= temp @kind object;
  #L2c2b42.  if v7 != 0 then goto L2c2b4e;
  #L2c2b46.  call temp:= `createBitmap`(v3, v4, v5) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L2c2b4c.  v7:= temp @kind object;
  #L2c2b4e.  call `setAlpha`(v6, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.setAlpha:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V` @kind static;
  #L2c2b54.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c2b5a.  v1:= temp;
  #L2c2b5c.  if v1 == 0 then goto L2c2c48;
  #L2c2b60.  v1:= new `java.lang.StringBuilder`;
  #L2c2b64.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c2b6a.  v3:= "request: " @kind object;
  #L2c2b6e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2b74.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2b7a.  v8:= "x" @kind object;
  #L2c2b7e.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2b84.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2b8a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c2b90.  v9:= temp @kind object;
  #L2c2b92.  call temp:= `v`(v2, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c2b98.  v9:= new `java.lang.StringBuilder`;
  #L2c2b9c.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c2ba2.  v1:= "toFit:   " @kind object;
  #L2c2ba6.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2bac.  call temp:= `getWidth`(v6) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2bb2.  v1:= temp;
  #L2c2bb4.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2bba.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2bc0.  call temp:= `getHeight`(v6) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c2bc6.  v1:= temp;
  #L2c2bc8.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2bce.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c2bd4.  v9:= temp @kind object;
  #L2c2bd6.  call temp:= `v`(v2, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c2bdc.  v9:= new `java.lang.StringBuilder`;
  #L2c2be0.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c2be6.  v1:= "toReuse: " @kind object;
  #L2c2bea.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2bf0.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2bf6.  v1:= temp;
  #L2c2bf8.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2bfe.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2c04.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c2c0a.  v8:= temp;
  #L2c2c0c.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2c12.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c2c18.  v8:= temp @kind object;
  #L2c2c1a.  call temp:= `v`(v2, v8) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c2c20.  v8:= new `java.lang.StringBuilder`;
  #L2c2c24.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c2c2a.  v9:= "minPct:   " @kind object;
  #L2c2c2e.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2c34.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2c3a.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c2c40.  v8:= temp @kind object;
  #L2c2c42.  call temp:= `v`(v2, v8) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c2c48.  v8:= new `android.graphics.Canvas`;
  #L2c2c4c.  call `<init>`(v8, v7) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L2c2c52.  v9:= new `android.graphics.Matrix`;
  #L2c2c56.  call `<init>`(v9) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2c2c5c.  call `setScale`(v9, v0, v0) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L2c2c62.  v0:= new `android.graphics.Paint`;
  #L2c2c66.  v1:= 6I;
  #L2c2c68.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L2c2c6e.  call `drawBitmap`(v8, v6, v9, v0) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;Landroid/graphics/Paint;)V` @kind virtual;
  #L2c2c74.  return v7 @kind object;
}
procedure `int` `getExifOrientationDegrees`(`int` v0 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getExifOrientationDegrees:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2c2e10.  goto L2c2e2c;
  #L2c2e16.  v0:= 0I;
  #L2c2e18.  goto L2c2e2a;
  #L2c2e1a.  v0:= 270I;
  #L2c2e1e.  goto L2c2e2a;
  #L2c2e20.  v0:= 90I;
  #L2c2e24.  goto L2c2e2a;
  #L2c2e26.  v0:= 180I;
  #L2c2e2a.  return v0;
  #L2c2e2c.  switch v0
                  | 3 => goto L2c2e26
                  | 4 => goto L2c2e26
                  | 5 => goto L2c2e20
                  | 6 => goto L2c2e20
                  | 7 => goto L2c2e1a
                  | 8 => goto L2c2e1a
                  | else => goto L2c2e16;
}
procedure `int` `getOrientation`(`java.lang.String` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getOrientation:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c2e5c.  v0:= 0I;
  #L2c2e5e.  v1:= new `android.media.ExifInterface`;
  #L2c2e62.  call `<init>`(v1, v5) @signature `Landroid/media/ExifInterface;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c2e68.  v2:= "Orientation" @kind object;
  #L2c2e6c.  call temp:= `getAttributeInt`(v1, v2, v0) @signature `Landroid/media/ExifInterface;.getAttributeInt:(Ljava/lang/String;I)I` @kind virtual;
  #L2c2e72.  v1:= temp;
  #L2c2e74.  call temp:= `getExifOrientationDegrees`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getExifOrientationDegrees:(I)I` @kind static;
  #L2c2e7a.  v5:= temp;
  #L2c2e7c.  return v5;
  #L2c2e7e.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L2c2e80.  v2:= 6I;
  #L2c2e82.  v3:= "TransformationUtils" @kind object;
  #L2c2e86.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c2e8c.  v2:= temp;
  #L2c2e8e.  if v2 == 0 then goto L2c2eba;
  #L2c2e92.  v2:= new `java.lang.StringBuilder`;
  #L2c2e96.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c2e9c.  v4:= "Unable to get orientation for image with path=" @kind object;
  #L2c2ea0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2ea6.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c2eac.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c2eb2.  v5:= temp @kind object;
  #L2c2eb4.  call temp:= `e`(v3, v5, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2c2eba.  return v0;
  catch `java.lang.Exception` @[L2c2e5e..L2c2e7c] goto L2c2e7e;
}
procedure `android.graphics.Bitmap$Config` `getSafeConfig`(`android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getSafeConfig:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2c2de4.  call temp:= `getConfig`(v1) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2c2dea.  v0:= temp @kind object;
  #L2c2dec.  if v0 == 0 then goto L2c2dfa;
  #L2c2df0.  call temp:= `getConfig`(v1) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2c2df6.  v1:= temp @kind object;
  #L2c2df8.  goto L2c2dfe;
  #L2c2dfa.  v1:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2c2dfe.  return v1 @kind object;
}
procedure `void` `initializeMatrixForRotation`(`int` v5 , `android.graphics.Matrix` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.initializeMatrixForRotation:(ILandroid/graphics/Matrix;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c2ef4.  v0:= -90.0F;
  #L2c2ef8.  v1:= 90.0F;
  #L2c2efc.  v2:= 180.0F;
  #L2c2f00.  v3:= 1.0F;
  #L2c2f04.  v4:= -1.0F;
  #L2c2f08.  goto L2c2f5c;
  #L2c2f0e.  goto L2c2f58;
  #L2c2f10.  call `setRotate`(v6, v0) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L2c2f16.  goto L2c2f58;
  #L2c2f18.  call `setRotate`(v6, v0) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L2c2f1e.  call temp:= `postScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L2c2f24.  goto L2c2f58;
  #L2c2f26.  call `setRotate`(v6, v1) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L2c2f2c.  goto L2c2f58;
  #L2c2f2e.  call `setRotate`(v6, v1) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L2c2f34.  call temp:= `postScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L2c2f3a.  goto L2c2f58;
  #L2c2f3c.  call `setRotate`(v6, v2) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L2c2f42.  call temp:= `postScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L2c2f48.  goto L2c2f58;
  #L2c2f4a.  call `setRotate`(v6, v2) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L2c2f50.  goto L2c2f58;
  #L2c2f52.  call `setScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L2c2f58.  return @kind void;
  #L2c2f5a.  
  #L2c2f5c.  switch v5
                  | 2 => goto L2c2f52
                  | 3 => goto L2c2f4a
                  | 4 => goto L2c2f3c
                  | 5 => goto L2c2f2e
                  | 6 => goto L2c2f26
                  | 7 => goto L2c2f18
                  | 8 => goto L2c2f10
                  | else => goto L2c2f0e;
}
procedure `android.graphics.Bitmap` `orientImage`(`java.lang.String` v0 @kind object, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.orientImage:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2c2c88.  call temp:= `getOrientation`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getOrientation:(Ljava/lang/String;)I` @kind static;
  #L2c2c8e.  v0:= temp;
  #L2c2c90.  call temp:= `rotateImage`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.rotateImage:(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @kind static;
  #L2c2c96.  v0:= temp @kind object;
  #L2c2c98.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `rotateImage`(`android.graphics.Bitmap` v7 @kind object, `int` v8 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.rotateImage:(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2c2cac.  if v8 == 0 then goto L2c2d02;
  #L2c2cb0.  v5:= new `android.graphics.Matrix`;
  #L2c2cb4.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2c2cba.  v8:= (`float`) v8 @kind i2f;
  #L2c2cbc.  call `setRotate`(v5, v8) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L2c2cc2.  v1:= 0I;
  #L2c2cc4.  v2:= 0I;
  #L2c2cc6.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2ccc.  v3:= temp;
  #L2c2cce.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c2cd4.  v4:= temp;
  #L2c2cd6.  v6:= 1I;
  #L2c2cd8.  v0:= v7 @kind object;
  #L2c2cda.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L2c2ce0.  v7:= temp @kind object;
  #L2c2ce2.  goto L2c2d02;
  #L2c2ce4.  v8:= Exception @type ^`java.lang.Exception` @kind object;
  #L2c2ce6.  v0:= 6I;
  #L2c2ce8.  v1:= "TransformationUtils" @kind object;
  #L2c2cec.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c2cf2.  v0:= temp;
  #L2c2cf4.  if v0 == 0 then goto L2c2d02;
  #L2c2cf8.  v0:= "Exception when trying to orient image" @kind object;
  #L2c2cfc.  call temp:= `e`(v1, v0, v8) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2c2d02.  return v7 @kind object;
  catch `java.lang.Exception` @[L2c2cb0..L2c2ce2] goto L2c2ce4;
}
procedure `android.graphics.Bitmap` `rotateImageExif`(`android.graphics.Bitmap` v4 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.rotateImageExif:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c2d24.  v0:= new `android.graphics.Matrix`;
  #L2c2d28.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2c2d2e.  call `initializeMatrixForRotation`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.initializeMatrixForRotation:(ILandroid/graphics/Matrix;)V` @kind static;
  #L2c2d34.  call temp:= `isIdentity`(v0) @signature `Landroid/graphics/Matrix;.isIdentity:()Z` @kind virtual;
  #L2c2d3a.  v6:= temp;
  #L2c2d3c.  if v6 == 0 then goto L2c2d42;
  #L2c2d40.  return v4 @kind object;
  #L2c2d42.  v6:= new `android.graphics.RectF`;
  #L2c2d46.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c2d4c.  v1:= temp;
  #L2c2d4e.  v1:= (`float`) v1 @kind i2f;
  #L2c2d50.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c2d56.  v2:= temp;
  #L2c2d58.  v2:= (`float`) v2 @kind i2f;
  #L2c2d5a.  v3:= 0I;
  #L2c2d5c.  call `<init>`(v6, v3, v3, v1, v2) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L2c2d62.  call temp:= `mapRect`(v0, v6) @signature `Landroid/graphics/Matrix;.mapRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L2c2d68.  call temp:= `width`(v6) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L2c2d6e.  v1:= temp;
  #L2c2d70.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2c2d76.  v1:= temp;
  #L2c2d78.  call temp:= `height`(v6) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L2c2d7e.  v2:= temp;
  #L2c2d80.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2c2d86.  v2:= temp;
  #L2c2d88.  call temp:= `getSafeConfig`(v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getSafeConfig:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L2c2d8e.  v3:= temp @kind object;
  #L2c2d90.  call temp:= `get`(v5, v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L2c2d96.  v5:= temp @kind object;
  #L2c2d98.  if v5 != 0 then goto L2c2da4;
  #L2c2d9c.  call temp:= `createBitmap`(v1, v2, v3) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L2c2da2.  v5:= temp @kind object;
  #L2c2da4.  v1:= v6.`android.graphics.RectF.left` @type ^`float`;
  #L2c2da8.  v1:= -v1 @kind float;
  #L2c2daa.  v6:= v6.`android.graphics.RectF.top` @type ^`float`;
  #L2c2dae.  v6:= -v6 @kind float;
  #L2c2db0.  call temp:= `postTranslate`(v0, v1, v6) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L2c2db6.  v6:= new `android.graphics.Canvas`;
  #L2c2dba.  call `<init>`(v6, v5) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L2c2dc0.  v1:= new `android.graphics.Paint`;
  #L2c2dc4.  v2:= 6I;
  #L2c2dc6.  call `<init>`(v1, v2) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L2c2dcc.  call `drawBitmap`(v6, v4, v0, v1) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;Landroid/graphics/Paint;)V` @kind virtual;
  #L2c2dd2.  return v5 @kind object;
}
procedure `void` `setAlpha`(`android.graphics.Bitmap` v2 @kind object, `android.graphics.Bitmap` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.setAlpha:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2c2f90.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2c2f94.  v1:= 12I;
  #L2c2f98.  if v0 < v1 then goto L2c2fae;
  #L2c2f9c.  if v3 == 0 then goto L2c2fae;
  #L2c2fa0.  call temp:= `hasAlpha`(v2) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L2c2fa6.  v2:= temp;
  #L2c2fa8.  call `setHasAlpha`(v3, v2) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L2c2fae.  return @kind void;
}
