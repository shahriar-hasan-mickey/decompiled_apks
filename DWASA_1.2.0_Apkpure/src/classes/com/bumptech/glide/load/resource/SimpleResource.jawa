record `com.bumptech.glide.load.resource.SimpleResource` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.Resource` @kind interface {
  `java.lang.Object` `com.bumptech.glide.load.resource.SimpleResource.data` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.SimpleResource` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/SimpleResource;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c008c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c0092.  if v2 == 0 then goto L2c009c;
  #L2c0096.  v1.`com.bumptech.glide.load.resource.SimpleResource.data` @type ^`java.lang.Object` := v2 @kind object;
  #L2c009a.  return @kind void;
  #L2c009c.  v2:= new `java.lang.NullPointerException`;
  #L2c00a0.  v0:= "Data must not be null" @kind object;
  #L2c00a4.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c00aa.  throw v2;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.resource.SimpleResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/SimpleResource;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c0074.  v0:= v1.`com.bumptech.glide.load.resource.SimpleResource.data` @type ^`java.lang.Object` @kind object;
  #L2c0078.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.resource.SimpleResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/SimpleResource;.getSize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c0060.  v0:= 1I;
  #L2c0062.  return v0;
}
procedure `void` `recycle`(`com.bumptech.glide.load.resource.SimpleResource` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/SimpleResource;.recycle:()V` @AccessFlag PUBLIC {
    temp;

  #L2c00bc.  return @kind void;
}
