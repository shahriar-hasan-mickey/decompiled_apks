record `com.bumptech.glide.load.resource.transcode.TranscoderRegistry` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `com.bumptech.glide.load.resource.transcode.TranscoderRegistry.factories` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.util.MultiClassKey` `@@com.bumptech.glide.load.resource.transcode.TranscoderRegistry.GET_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c57f0.  v0:= new `com.bumptech.glide.util.MultiClassKey`;
  #L2c57f4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/util/MultiClassKey;.<init>:()V` @kind direct;
  #L2c57fa.  `@@com.bumptech.glide.load.resource.transcode.TranscoderRegistry.GET_KEY` @type ^`com.bumptech.glide.util.MultiClassKey` := v0 @kind object;
  #L2c57fe.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.transcode.TranscoderRegistry` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c5810.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c5816.  v0:= new `java.util.HashMap`;
  #L2c581a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2c5820.  v1.`com.bumptech.glide.load.resource.transcode.TranscoderRegistry.factories` @type ^`java.util.Map` := v0 @kind object;
  #L2c5824.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` `get`(`com.bumptech.glide.load.resource.transcode.TranscoderRegistry` v3 @kind this, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry;.get:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c5744.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c574a.  v0:= temp;
  #L2c574c.  if v0 == 0 then goto L2c575a;
  #L2c5750.  call temp:= `get`() @signature `Lcom/bumptech/glide/load/resource/transcode/UnitTranscoder;.get:()Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;` @kind static;
  #L2c5756.  v4:= temp @kind object;
  #L2c5758.  return v4 @kind object;
  #L2c575a.  v0:= `@@com.bumptech.glide.load.resource.transcode.TranscoderRegistry.GET_KEY` @type ^`com.bumptech.glide.util.MultiClassKey` @kind object;
  #L2c575e.  @monitorenter v0
  #L2c5760.  v1:= `@@com.bumptech.glide.load.resource.transcode.TranscoderRegistry.GET_KEY` @type ^`com.bumptech.glide.util.MultiClassKey` @kind object;
  #L2c5764.  call `set`(v1, v4, v5) @signature `Lcom/bumptech/glide/util/MultiClassKey;.set:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind virtual;
  #L2c576a.  v1:= v3.`com.bumptech.glide.load.resource.transcode.TranscoderRegistry.factories` @type ^`java.util.Map` @kind object;
  #L2c576e.  v2:= `@@com.bumptech.glide.load.resource.transcode.TranscoderRegistry.GET_KEY` @type ^`com.bumptech.glide.util.MultiClassKey` @kind object;
  #L2c5772.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c5778.  v1:= temp @kind object;
  #L2c577a.  v1:= (`com.bumptech.glide.load.resource.transcode.ResourceTranscoder`) v1 @kind object;
  #L2c577e.  @monitorexit v0
  #L2c5780.  if v1 == 0 then goto L2c5786;
  #L2c5784.  return v1 @kind object;
  #L2c5786.  v0:= new `java.lang.IllegalArgumentException`;
  #L2c578a.  v1:= new `java.lang.StringBuilder`;
  #L2c578e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c5794.  v2:= "No transcoder registered for " @kind object;
  #L2c5798.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c579e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c57a4.  v4:= " and " @kind object;
  #L2c57a8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c57ae.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c57b4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c57ba.  v4:= temp @kind object;
  #L2c57bc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c57c2.  throw v0;
  #L2c57c4.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2c57c6.  @monitorexit v0
  #L2c57c8.  throw v4;
  catch `java.lang.Throwable` @[L2c5760..L2c5780] goto L2c57c4;
  catch `java.lang.Throwable` @[L2c57c6..L2c57c8] goto L2c57c4;
}
procedure `void` `register`(`com.bumptech.glide.load.resource.transcode.TranscoderRegistry` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry;.register:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c5838.  v0:= v2.`com.bumptech.glide.load.resource.transcode.TranscoderRegistry.factories` @type ^`java.util.Map` @kind object;
  #L2c583c.  v1:= new `com.bumptech.glide.util.MultiClassKey`;
  #L2c5840.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/util/MultiClassKey;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L2c5846.  call temp:= `put`(v0, v1, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c584c.  return @kind void;
}
