record `com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.resource.bitmap.BitmapDecoder` @kind interface {
  `com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory` `com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.factory` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.frame` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory` `@@com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.DEFAULT_FACTORY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.NO_FRAME` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c30a8.  v0:= new `com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory`;
  #L2c30ac.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder$MediaMetadataRetrieverFactory;.<init>:()V` @kind direct;
  #L2c30b2.  `@@com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.DEFAULT_FACTORY` @type ^`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory` := v0 @kind object;
  #L2c30b6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2c30c8.  v0:= `@@com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.DEFAULT_FACTORY` @type ^`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory` @kind object;
  #L2c30cc.  v1:= -1I;
  #L2c30ce.  call `<init>`(v2, v0, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder$MediaMetadataRetrieverFactory;I)V` @kind direct;
  #L2c30d4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c3124.  v0:= `@@com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.DEFAULT_FACTORY` @type ^`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory` @kind object;
  #L2c3128.  call temp:= `checkValidFrame`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.checkValidFrame:(I)I` @kind static;
  #L2c312e.  v2:= temp;
  #L2c3130.  call `<init>`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder$MediaMetadataRetrieverFactory;I)V` @kind direct;
  #L2c3136.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder$MediaMetadataRetrieverFactory;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2c30e8.  v0:= -1I;
  #L2c30ea.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder$MediaMetadataRetrieverFactory;I)V` @kind direct;
  #L2c30f0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder$MediaMetadataRetrieverFactory;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c3104.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c310a.  v0.`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.factory` @type ^`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory` := v1 @kind object;
  #L2c310e.  v0.`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.frame` @type ^`int` := v2;
  #L2c3112.  return @kind void;
}
procedure `int` `checkValidFrame`(`int` v1 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.checkValidFrame:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2c3068.  if v1 < 0 then goto L2c306e;
  #L2c306c.  return v1;
  #L2c306e.  v1:= new `java.lang.IllegalArgumentException`;
  #L2c3072.  v0:= "Requested frame must be non-negative" @kind object;
  #L2c3076.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c307c.  throw v1;
}
procedure `android.graphics.Bitmap` `decode`(`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder` v0 @kind this, `android.os.ParcelFileDescriptor` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.DecodeFormat` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.decode:(Landroid/os/ParcelFileDescriptor;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;IILcom/bumptech/glide/load/DecodeFormat;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;

  #L2c2ff4.  v2:= v0.`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.factory` @type ^`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory` @kind object;
  #L2c2ff8.  call temp:= `build`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder$MediaMetadataRetrieverFactory;.build:()Landroid/media/MediaMetadataRetriever;` @kind virtual;
  #L2c2ffe.  v2:= temp @kind object;
  #L2c3000.  call temp:= `getFileDescriptor`(v1) @signature `Landroid/os/ParcelFileDescriptor;.getFileDescriptor:()Ljava/io/FileDescriptor;` @kind virtual;
  #L2c3006.  v3:= temp @kind object;
  #L2c3008.  call `setDataSource`(v2, v3) @signature `Landroid/media/MediaMetadataRetriever;.setDataSource:(Ljava/io/FileDescriptor;)V` @kind virtual;
  #L2c300e.  v3:= v0.`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder.frame` @type ^`int`;
  #L2c3012.  if v3 < 0 then goto L2c3022;
  #L2c3016.  v3:= (`long`) v3 @kind i2l;
  #L2c3018.  call temp:= `getFrameAtTime`(v2, v3) @signature `Landroid/media/MediaMetadataRetriever;.getFrameAtTime:(J)Landroid/graphics/Bitmap;` @kind virtual;
  #L2c301e.  v3:= temp @kind object;
  #L2c3020.  goto L2c302a;
  #L2c3022.  call temp:= `getFrameAtTime`(v2) @signature `Landroid/media/MediaMetadataRetriever;.getFrameAtTime:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2c3028.  v3:= temp @kind object;
  #L2c302a.  call `release`(v2) @signature `Landroid/media/MediaMetadataRetriever;.release:()V` @kind virtual;
  #L2c3030.  call `close`(v1) @signature `Landroid/os/ParcelFileDescriptor;.close:()V` @kind virtual;
  #L2c3036.  return v3 @kind object;
}
procedure `android.graphics.Bitmap` `decode`(`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.DecodeFormat` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.decode:(Ljava/lang/Object;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;IILcom/bumptech/glide/load/DecodeFormat;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c3048.  v1:= (`android.os.ParcelFileDescriptor`) v1 @kind object;
  #L2c304c.  call temp:= `decode`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.decode:(Landroid/os/ParcelFileDescriptor;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;IILcom/bumptech/glide/load/DecodeFormat;)Landroid/graphics/Bitmap;` @kind virtual;
  #L2c3052.  v1:= temp @kind object;
  #L2c3054.  return v1 @kind object;
}
procedure `java.lang.String` `getId`(`com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3090.  v0:= "VideoBitmapDecoder.com.bumptech.glide.load.resource.bitmap" @kind object;
  #L2c3094.  return v0 @kind object;
}
