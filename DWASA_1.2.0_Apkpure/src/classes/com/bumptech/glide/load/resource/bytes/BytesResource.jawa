record `com.bumptech.glide.load.resource.bytes.BytesResource` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.Resource` @kind interface {
  `byte`[] `com.bumptech.glide.load.resource.bytes.BytesResource.bytes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bytes.BytesResource` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bytes/BytesResource;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c3194.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c319a.  if v2 == 0 then goto L2c31a4;
  #L2c319e.  v1.`com.bumptech.glide.load.resource.bytes.BytesResource.bytes` @type ^`byte`[] := v2 @kind object;
  #L2c31a2.  return @kind void;
  #L2c31a4.  v2:= new `java.lang.NullPointerException`;
  #L2c31a8.  v0:= "Bytes must not be null" @kind object;
  #L2c31ac.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c31b2.  throw v2;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.resource.bytes.BytesResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bytes/BytesResource;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2c3178.  call temp:= `get`(v1) @signature `Lcom/bumptech/glide/load/resource/bytes/BytesResource;.get:()[B` @kind virtual;
  #L2c317e.  v0:= temp @kind object;
  #L2c3180.  return v0 @kind object;
}
procedure `byte`[] `get`(`com.bumptech.glide.load.resource.bytes.BytesResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bytes/BytesResource;.get:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3148.  v0:= v1.`com.bumptech.glide.load.resource.bytes.BytesResource.bytes` @type ^`byte`[] @kind object;
  #L2c314c.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.resource.bytes.BytesResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bytes/BytesResource;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3160.  v0:= v1.`com.bumptech.glide.load.resource.bytes.BytesResource.bytes` @type ^`byte`[] @kind object;
  #L2c3164.  v0:= length @variable v0;
  #L2c3166.  return v0;
}
procedure `void` `recycle`(`com.bumptech.glide.load.resource.bytes.BytesResource` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bytes/BytesResource;.recycle:()V` @AccessFlag PUBLIC {
    temp;

  #L2c31c4.  return @kind void;
}
