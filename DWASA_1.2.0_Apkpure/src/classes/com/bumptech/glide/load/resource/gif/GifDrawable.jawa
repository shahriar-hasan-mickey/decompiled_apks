record `com.bumptech.glide.load.resource.gif.GifDrawable` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.resource.drawable.GlideDrawable` @kind class, `com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback` @kind interface {
  `boolean` `com.bumptech.glide.load.resource.gif.GifDrawable.applyGravity` @AccessFlag PRIVATE;
  `com.bumptech.glide.gifdecoder.GifDecoder` `com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Rect` `com.bumptech.glide.load.resource.gif.GifDrawable.destRect` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.resource.gif.GifFrameLoader` `com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.resource.gif.GifDrawable.isRecycled` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.resource.gif.GifDrawable.isRunning` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.resource.gif.GifDrawable.isStarted` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.resource.gif.GifDrawable.isVisible` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.gif.GifDrawable.loopCount` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.gif.GifDrawable.maxLoopCount` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.bumptech.glide.load.resource.gif.GifDrawable.paint` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.resource.gif.GifDrawable$GifState` `com.bumptech.glide.load.resource.gif.GifDrawable.state` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.GifDrawable` v11 @kind this, `android.content.Context` v12 @kind object, `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` v13 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v14 @kind object, `com.bumptech.glide.load.Transformation` v15 @kind object, `int` v16 , `int` v17 , `com.bumptech.glide.gifdecoder.GifHeader` v18 @kind object, `byte`[] v19 @kind object, `android.graphics.Bitmap` v20 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/Transformation;IILcom/bumptech/glide/gifdecoder/GifHeader;[BLandroid/graphics/Bitmap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2c3a3c.  v10:= new `com.bumptech.glide.load.resource.gif.GifDrawable$GifState`;
  #L2c3a40.  v0:= v10 @kind object;
  #L2c3a42.  v1:= v18 @kind object;
  #L2c3a46.  v2:= v19 @kind object;
  #L2c3a4a.  v3:= v12 @kind object;
  #L2c3a4c.  v4:= v15 @kind object;
  #L2c3a4e.  v5:= v16;
  #L2c3a52.  v6:= v17;
  #L2c3a56.  v7:= v13 @kind object;
  #L2c3a58.  v8:= v14 @kind object;
  #L2c3a5a.  v9:= v20 @kind object;
  #L2c3a5e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable$GifState;.<init>:(Lcom/bumptech/glide/gifdecoder/GifHeader;[BLandroid/content/Context;Lcom/bumptech/glide/load/Transformation;IILcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)V` @kind direct;
  #L2c3a64.  v0:= v11 @kind object;
  #L2c3a66.  call `<init>`(v11, v10) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.<init>:(Lcom/bumptech/glide/load/resource/gif/GifDrawable$GifState;)V` @kind direct;
  #L2c3a6c.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this, `com.bumptech.glide.gifdecoder.GifDecoder` v2 @kind object, `com.bumptech.glide.load.resource.gif.GifFrameLoader` v3 @kind object, `android.graphics.Bitmap` v4 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v5 @kind object, `android.graphics.Paint` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder;Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Paint;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2c3a80.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/drawable/GlideDrawable;.<init>:()V` @kind direct;
  #L2c3a86.  v0:= new `android.graphics.Rect`;
  #L2c3a8a.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L2c3a90.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.destRect` @type ^`android.graphics.Rect` := v0 @kind object;
  #L2c3a94.  v0:= 1I;
  #L2c3a96.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.isVisible` @type ^`boolean` := v0 @kind boolean;
  #L2c3a9a.  v0:= -1I;
  #L2c3a9c.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.maxLoopCount` @type ^`int` := v0;
  #L2c3aa0.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @type ^`com.bumptech.glide.gifdecoder.GifDecoder` := v2 @kind object;
  #L2c3aa4.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` := v3 @kind object;
  #L2c3aa8.  v2:= new `com.bumptech.glide.load.resource.gif.GifDrawable$GifState`;
  #L2c3aac.  v3:= 0I;
  #L2c3aae.  call `<init>`(v2, v3) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable$GifState;.<init>:(Lcom/bumptech/glide/load/resource/gif/GifDrawable$GifState;)V` @kind direct;
  #L2c3ab4.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` := v2 @kind object;
  #L2c3ab8.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.paint` @type ^`android.graphics.Paint` := v6 @kind object;
  #L2c3abc.  v2:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3ac0.  v2.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v5 @kind object;
  #L2c3ac4.  v2.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.firstFrame` @type ^`android.graphics.Bitmap` := v4 @kind object;
  #L2c3ac8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.GifDrawable` v9 @kind this, `com.bumptech.glide.load.resource.gif.GifDrawable$GifState` v10 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.<init>:(Lcom/bumptech/glide/load/resource/gif/GifDrawable$GifState;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2c3adc.  call `<init>`(v9) @signature `Lcom/bumptech/glide/load/resource/drawable/GlideDrawable;.<init>:()V` @kind direct;
  #L2c3ae2.  v0:= new `android.graphics.Rect`;
  #L2c3ae6.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L2c3aec.  v9.`com.bumptech.glide.load.resource.gif.GifDrawable.destRect` @type ^`android.graphics.Rect` := v0 @kind object;
  #L2c3af0.  v0:= 1I;
  #L2c3af2.  v9.`com.bumptech.glide.load.resource.gif.GifDrawable.isVisible` @type ^`boolean` := v0 @kind boolean;
  #L2c3af6.  v0:= -1I;
  #L2c3af8.  v9.`com.bumptech.glide.load.resource.gif.GifDrawable.maxLoopCount` @type ^`int` := v0;
  #L2c3afc.  if v10 == 0 then goto L2c3b68;
  #L2c3b00.  v9.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` := v10 @kind object;
  #L2c3b04.  v0:= new `com.bumptech.glide.gifdecoder.GifDecoder`;
  #L2c3b08.  v1:= v10.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.bitmapProvider` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L2c3b0c.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;)V` @kind direct;
  #L2c3b12.  v9.`com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @type ^`com.bumptech.glide.gifdecoder.GifDecoder` := v0 @kind object;
  #L2c3b16.  v0:= new `android.graphics.Paint`;
  #L2c3b1a.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L2c3b20.  v9.`com.bumptech.glide.load.resource.gif.GifDrawable.paint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L2c3b24.  v0:= v9.`com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @type ^`com.bumptech.glide.gifdecoder.GifDecoder` @kind object;
  #L2c3b28.  v1:= v10.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.gifHeader` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2c3b2c.  v2:= v10.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.data` @type ^`byte`[] @kind object;
  #L2c3b30.  call `setData`(v0, v1, v2) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;[B)V` @kind virtual;
  #L2c3b36.  v0:= new `com.bumptech.glide.load.resource.gif.GifFrameLoader`;
  #L2c3b3a.  v4:= v10.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.context` @type ^`android.content.Context` @kind object;
  #L2c3b3e.  v6:= v9.`com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @type ^`com.bumptech.glide.gifdecoder.GifDecoder` @kind object;
  #L2c3b42.  v7:= v10.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.targetWidth` @type ^`int`;
  #L2c3b46.  v8:= v10.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.targetHeight` @type ^`int`;
  #L2c3b4a.  v3:= v0 @kind object;
  #L2c3b4c.  v5:= v9 @kind object;
  #L2c3b4e.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/load/resource/gif/GifFrameLoader$FrameCallback;Lcom/bumptech/glide/gifdecoder/GifDecoder;II)V` @kind direct;
  #L2c3b54.  v9.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` := v0 @kind object;
  #L2c3b58.  v0:= v9.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` @kind object;
  #L2c3b5c.  v10:= v10.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.frameTransformation` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L2c3b60.  call `setFrameTransformation`(v0, v10) @signature `Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;.setFrameTransformation:(Lcom/bumptech/glide/load/Transformation;)V` @kind virtual;
  #L2c3b66.  return @kind void;
  #L2c3b68.  v10:= new `java.lang.NullPointerException`;
  #L2c3b6c.  v0:= "GifState must not be null" @kind object;
  #L2c3b70.  call `<init>`(v10, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c3b76.  throw v10;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.GifDrawable` v11 @kind this, `com.bumptech.glide.load.resource.gif.GifDrawable` v12 @kind object, `android.graphics.Bitmap` v13 @kind object, `com.bumptech.glide.load.Transformation` v14 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.<init>:(Lcom/bumptech/glide/load/resource/gif/GifDrawable;Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/Transformation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2c3b88.  v10:= new `com.bumptech.glide.load.resource.gif.GifDrawable$GifState`;
  #L2c3b8c.  v0:= v12.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3b90.  v1:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.gifHeader` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L2c3b94.  v0:= v12.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3b98.  v2:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.data` @type ^`byte`[] @kind object;
  #L2c3b9c.  v0:= v12.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3ba0.  v3:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.context` @type ^`android.content.Context` @kind object;
  #L2c3ba4.  v0:= v12.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3ba8.  v5:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.targetWidth` @type ^`int`;
  #L2c3bac.  v0:= v12.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3bb0.  v6:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.targetHeight` @type ^`int`;
  #L2c3bb4.  v0:= v12.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3bb8.  v7:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.bitmapProvider` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L2c3bbc.  v12:= v12.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3bc0.  v8:= v12.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L2c3bc4.  v0:= v10 @kind object;
  #L2c3bc6.  v4:= v14 @kind object;
  #L2c3bc8.  v9:= v13 @kind object;
  #L2c3bca.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable$GifState;.<init>:(Lcom/bumptech/glide/gifdecoder/GifHeader;[BLandroid/content/Context;Lcom/bumptech/glide/load/Transformation;IILcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)V` @kind direct;
  #L2c3bd0.  call `<init>`(v11, v10) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.<init>:(Lcom/bumptech/glide/load/resource/gif/GifDrawable$GifState;)V` @kind direct;
  #L2c3bd6.  return @kind void;
}
procedure `void` `reset`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.reset:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c3d40.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` @kind object;
  #L2c3d44.  call `clear`(v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;.clear:()V` @kind virtual;
  #L2c3d4a.  call `invalidateSelf`(v1) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.invalidateSelf:()V` @kind virtual;
  #L2c3d50.  return @kind void;
}
procedure `void` `resetLoopCount`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.resetLoopCount:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c3d64.  v0:= 0I;
  #L2c3d66.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.loopCount` @type ^`int` := v0;
  #L2c3d6a.  return @kind void;
}
procedure `void` `startRunning`(`com.bumptech.glide.load.resource.gif.GifDrawable` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.startRunning:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c3e94.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @type ^`com.bumptech.glide.gifdecoder.GifDecoder` @kind object;
  #L2c3e98.  call temp:= `getFrameCount`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getFrameCount:()I` @kind virtual;
  #L2c3e9e.  v0:= temp;
  #L2c3ea0.  v1:= 1I;
  #L2c3ea2.  if v0 != v1 then goto L2c3eae;
  #L2c3ea6.  call `invalidateSelf`(v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.invalidateSelf:()V` @kind virtual;
  #L2c3eac.  goto L2c3eca;
  #L2c3eae.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.isRunning` @type ^`boolean` @kind boolean;
  #L2c3eb2.  if v0 != 0 then goto L2c3eca;
  #L2c3eb6.  v2.`com.bumptech.glide.load.resource.gif.GifDrawable.isRunning` @type ^`boolean` := v1 @kind boolean;
  #L2c3eba.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` @kind object;
  #L2c3ebe.  call `start`(v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;.start:()V` @kind virtual;
  #L2c3ec4.  call `invalidateSelf`(v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.invalidateSelf:()V` @kind virtual;
  #L2c3eca.  return @kind void;
}
procedure `void` `stopRunning`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.stopRunning:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c3f0c.  v0:= 0I;
  #L2c3f0e.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.isRunning` @type ^`boolean` := v0 @kind boolean;
  #L2c3f12.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` @kind object;
  #L2c3f16.  call `stop`(v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;.stop:()V` @kind virtual;
  #L2c3f1c.  return @kind void;
}
procedure `void` `draw`(`com.bumptech.glide.load.resource.gif.GifDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c3be8.  v0:= v5.`com.bumptech.glide.load.resource.gif.GifDrawable.isRecycled` @type ^`boolean` @kind boolean;
  #L2c3bec.  if v0 == 0 then goto L2c3bf2;
  #L2c3bf0.  return @kind void;
  #L2c3bf2.  v0:= v5.`com.bumptech.glide.load.resource.gif.GifDrawable.applyGravity` @type ^`boolean` @kind boolean;
  #L2c3bf6.  if v0 == 0 then goto L2c3c26;
  #L2c3bfa.  v0:= 119I;
  #L2c3bfe.  call temp:= `getIntrinsicWidth`(v5) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L2c3c04.  v1:= temp;
  #L2c3c06.  call temp:= `getIntrinsicHeight`(v5) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L2c3c0c.  v2:= temp;
  #L2c3c0e.  call temp:= `getBounds`(v5) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L2c3c14.  v3:= temp @kind object;
  #L2c3c16.  v4:= v5.`com.bumptech.glide.load.resource.gif.GifDrawable.destRect` @type ^`android.graphics.Rect` @kind object;
  #L2c3c1a.  call `apply`(v0, v1, v2, v3, v4) @signature `Landroid/view/Gravity;.apply:(IIILandroid/graphics/Rect;Landroid/graphics/Rect;)V` @kind static;
  #L2c3c20.  v0:= 0I;
  #L2c3c22.  v5.`com.bumptech.glide.load.resource.gif.GifDrawable.applyGravity` @type ^`boolean` := v0 @kind boolean;
  #L2c3c26.  v0:= v5.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` @kind object;
  #L2c3c2a.  call temp:= `getCurrentFrame`(v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;.getCurrentFrame:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2c3c30.  v0:= temp @kind object;
  #L2c3c32.  if v0 == 0 then goto L2c3c38;
  #L2c3c36.  goto L2c3c40;
  #L2c3c38.  v0:= v5.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3c3c.  v0:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.firstFrame` @type ^`android.graphics.Bitmap` @kind object;
  #L2c3c40.  v1:= 0I;
  #L2c3c42.  v2:= v5.`com.bumptech.glide.load.resource.gif.GifDrawable.destRect` @type ^`android.graphics.Rect` @kind object;
  #L2c3c46.  v3:= v5.`com.bumptech.glide.load.resource.gif.GifDrawable.paint` @type ^`android.graphics.Paint` @kind object;
  #L2c3c4a.  call `drawBitmap`(v6, v0, v1, v2, v3) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Paint;)V` @kind virtual;
  #L2c3c50.  return @kind void;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c38dc.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c38e0.  return v0 @kind object;
}
procedure `byte`[] `getData`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getData:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3970.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3974.  v0:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.data` @type ^`byte`[] @kind object;
  #L2c3978.  return v0 @kind object;
}
procedure `com.bumptech.glide.gifdecoder.GifDecoder` `getDecoder`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getDecoder:()Lcom/bumptech/glide/gifdecoder/GifDecoder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c398c.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @type ^`com.bumptech.glide.gifdecoder.GifDecoder` @kind object;
  #L2c3990.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `getFirstFrame`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getFirstFrame:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c38c0.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c38c4.  v0:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.firstFrame` @type ^`android.graphics.Bitmap` @kind object;
  #L2c38c8.  return v0 @kind object;
}
procedure `int` `getFrameCount`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getFrameCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c39c0.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @type ^`com.bumptech.glide.gifdecoder.GifDecoder` @kind object;
  #L2c39c4.  call temp:= `getFrameCount`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getFrameCount:()I` @kind virtual;
  #L2c39ca.  v0:= temp;
  #L2c39cc.  return v0;
}
procedure `com.bumptech.glide.load.Transformation` `getFrameTransformation`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getFrameTransformation:()Lcom/bumptech/glide/load/Transformation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c39a4.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c39a8.  v0:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.frameTransformation` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L2c39ac.  return v0 @kind object;
}
procedure `int` `getIntrinsicHeight`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c39e0.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c39e4.  v0:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.firstFrame` @type ^`android.graphics.Bitmap` @kind object;
  #L2c39e8.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2c39ee.  v0:= temp;
  #L2c39f0.  return v0;
}
procedure `int` `getIntrinsicWidth`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3a04.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3a08.  v0:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.firstFrame` @type ^`android.graphics.Bitmap` @kind object;
  #L2c3a0c.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2c3a12.  v0:= temp;
  #L2c3a14.  return v0;
}
procedure `int` `getOpacity`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3a28.  v0:= -2I;
  #L2c3a2a.  return v0;
}
procedure `boolean` `isAnimated`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.isAnimated:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c38f4.  v0:= 1I;
  #L2c38f6.  return v0;
}
procedure `boolean` `isRecycled`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.isRecycled:()Z` @AccessFlag  {
    temp;
    v0;

  #L2c3908.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.isRecycled` @type ^`boolean` @kind boolean;
  #L2c390c.  return v0;
}
procedure `boolean` `isRunning`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3920.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.isRunning` @type ^`boolean` @kind boolean;
  #L2c3924.  return v0;
}
procedure `void` `onBoundsChange`(`com.bumptech.glide.load.resource.gif.GifDrawable` v0 @kind this, `android.graphics.Rect` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;

  #L2c3c64.  call `onBoundsChange`(v0, v1) @signature `Lcom/bumptech/glide/load/resource/drawable/GlideDrawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @kind super;
  #L2c3c6a.  v1:= 1I;
  #L2c3c6c.  v0.`com.bumptech.glide.load.resource.gif.GifDrawable.applyGravity` @type ^`boolean` := v1 @kind boolean;
  #L2c3c70.  return @kind void;
}
procedure `void` `onFrameReady`(`com.bumptech.glide.load.resource.gif.GifDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.onFrameReady:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c3c84.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2c3c88.  v1:= 11I;
  #L2c3c8c.  if v0 < v1 then goto L2c3caa;
  #L2c3c90.  call temp:= `getCallback`(v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L2c3c96.  v0:= temp @kind object;
  #L2c3c98.  if v0 != 0 then goto L2c3caa;
  #L2c3c9c.  call `stop`(v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.stop:()V` @kind virtual;
  #L2c3ca2.  call `reset`(v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.reset:()V` @kind direct;
  #L2c3ca8.  return @kind void;
  #L2c3caa.  call `invalidateSelf`(v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.invalidateSelf:()V` @kind virtual;
  #L2c3cb0.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @type ^`com.bumptech.glide.gifdecoder.GifDecoder` @kind object;
  #L2c3cb4.  call temp:= `getFrameCount`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getFrameCount:()I` @kind virtual;
  #L2c3cba.  v0:= temp;
  #L2c3cbc.  v0:= v0 + -1;
  #L2c3cc0.  if v3 != v0 then goto L2c3cd0;
  #L2c3cc4.  v3:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.loopCount` @type ^`int`;
  #L2c3cc8.  v3:= v3 + 1;
  #L2c3ccc.  v2.`com.bumptech.glide.load.resource.gif.GifDrawable.loopCount` @type ^`int` := v3;
  #L2c3cd0.  v3:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.maxLoopCount` @type ^`int`;
  #L2c3cd4.  v0:= -1I;
  #L2c3cd6.  if v3 == v0 then goto L2c3ce8;
  #L2c3cda.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.loopCount` @type ^`int`;
  #L2c3cde.  if v0 < v3 then goto L2c3ce8;
  #L2c3ce2.  call `stop`(v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.stop:()V` @kind virtual;
  #L2c3ce8.  return @kind void;
}
procedure `void` `recycle`(`com.bumptech.glide.load.resource.gif.GifDrawable` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c3cfc.  v0:= 1I;
  #L2c3cfe.  v2.`com.bumptech.glide.load.resource.gif.GifDrawable.isRecycled` @type ^`boolean` := v0 @kind boolean;
  #L2c3d02.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3d06.  v0:= v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.bitmapPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L2c3d0a.  v1:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3d0e.  v1:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.firstFrame` @type ^`android.graphics.Bitmap` @kind object;
  #L2c3d12.  call temp:= `put`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)Z` @kind interface;
  #L2c3d18.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` @kind object;
  #L2c3d1c.  call `clear`(v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;.clear:()V` @kind virtual;
  #L2c3d22.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` @kind object;
  #L2c3d26.  call `stop`(v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;.stop:()V` @kind virtual;
  #L2c3d2c.  return @kind void;
}
procedure `void` `setAlpha`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3d7c.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.paint` @type ^`android.graphics.Paint` @kind object;
  #L2c3d80.  call `setAlpha`(v0, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L2c3d86.  return @kind void;
}
procedure `void` `setColorFilter`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3d98.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.paint` @type ^`android.graphics.Paint` @kind object;
  #L2c3d9c.  call temp:= `setColorFilter`(v0, v2) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L2c3da2.  return @kind void;
}
procedure `void` `setFrameTransformation`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this, `com.bumptech.glide.load.Transformation` v2 @kind object, `android.graphics.Bitmap` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.setFrameTransformation:(Lcom/bumptech/glide/load/Transformation;Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3db4.  if v3 == 0 then goto L2c3de4;
  #L2c3db8.  if v2 == 0 then goto L2c3dd4;
  #L2c3dbc.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.state` @type ^`com.bumptech.glide.load.resource.gif.GifDrawable$GifState` @kind object;
  #L2c3dc0.  v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.frameTransformation` @type ^`com.bumptech.glide.load.Transformation` := v2 @kind object;
  #L2c3dc4.  v0.`com.bumptech.glide.load.resource.gif.GifDrawable$GifState.firstFrame` @type ^`android.graphics.Bitmap` := v3 @kind object;
  #L2c3dc8.  v3:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.frameLoader` @type ^`com.bumptech.glide.load.resource.gif.GifFrameLoader` @kind object;
  #L2c3dcc.  call `setFrameTransformation`(v3, v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifFrameLoader;.setFrameTransformation:(Lcom/bumptech/glide/load/Transformation;)V` @kind virtual;
  #L2c3dd2.  return @kind void;
  #L2c3dd4.  v2:= new `java.lang.NullPointerException`;
  #L2c3dd8.  v3:= "The frame transformation must not be null" @kind object;
  #L2c3ddc.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c3de2.  throw v2;
  #L2c3de4.  v2:= new `java.lang.NullPointerException`;
  #L2c3de8.  v3:= "The first frame of the GIF must not be null" @kind object;
  #L2c3dec.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c3df2.  throw v2;
}
procedure `void` `setIsRunning`(`com.bumptech.glide.load.resource.gif.GifDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.setIsRunning:(Z)V` @AccessFlag  {
    temp;

  #L2c3e04.  v0.`com.bumptech.glide.load.resource.gif.GifDrawable.isRunning` @type ^`boolean` := v1 @kind boolean;
  #L2c3e08.  return @kind void;
}
procedure `void` `setLoopCount`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.setLoopCount:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3e1c.  if v2 > 0 then goto L2c3e3c;
  #L2c3e20.  v0:= -1I;
  #L2c3e22.  if v2 == v0 then goto L2c3e3c;
  #L2c3e26.  if v2 != 0 then goto L2c3e2c;
  #L2c3e2a.  goto L2c3e3c;
  #L2c3e2c.  v2:= new `java.lang.IllegalArgumentException`;
  #L2c3e30.  v0:= "Loop count must be greater than 0, or equal to GlideDrawable.LOOP_FOREVER, or equal to GlideDrawable.LOOP_INTRINSIC" @kind object;
  #L2c3e34.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c3e3a.  throw v2;
  #L2c3e3c.  if v2 != 0 then goto L2c3e52;
  #L2c3e40.  v2:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.decoder` @type ^`com.bumptech.glide.gifdecoder.GifDecoder` @kind object;
  #L2c3e44.  call temp:= `getLoopCount`(v2) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getLoopCount:()I` @kind virtual;
  #L2c3e4a.  v2:= temp;
  #L2c3e4c.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.maxLoopCount` @type ^`int` := v2;
  #L2c3e50.  goto L2c3e56;
  #L2c3e52.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.maxLoopCount` @type ^`int` := v2;
  #L2c3e56.  return @kind void;
}
procedure `boolean` `setVisible`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this, `boolean` v2 , `boolean` v3 ) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3938.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.isVisible` @type ^`boolean` := v2 @kind boolean;
  #L2c393c.  if v2 != 0 then goto L2c3948;
  #L2c3940.  call `stopRunning`(v1) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.stopRunning:()V` @kind direct;
  #L2c3946.  goto L2c3956;
  #L2c3948.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.isStarted` @type ^`boolean` @kind boolean;
  #L2c394c.  if v0 == 0 then goto L2c3956;
  #L2c3950.  call `startRunning`(v1) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.startRunning:()V` @kind direct;
  #L2c3956.  call temp:= `setVisible`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/drawable/GlideDrawable;.setVisible:(ZZ)Z` @kind super;
  #L2c395c.  v2:= temp;
  #L2c395e.  return v2;
}
procedure `void` `start`(`com.bumptech.glide.load.resource.gif.GifDrawable` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.start:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3e68.  v0:= 1I;
  #L2c3e6a.  v1.`com.bumptech.glide.load.resource.gif.GifDrawable.isStarted` @type ^`boolean` := v0 @kind boolean;
  #L2c3e6e.  call `resetLoopCount`(v1) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.resetLoopCount:()V` @kind direct;
  #L2c3e74.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifDrawable.isVisible` @type ^`boolean` @kind boolean;
  #L2c3e78.  if v0 == 0 then goto L2c3e82;
  #L2c3e7c.  call `startRunning`(v1) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.startRunning:()V` @kind direct;
  #L2c3e82.  return @kind void;
}
procedure `void` `stop`(`com.bumptech.glide.load.resource.gif.GifDrawable` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.stop:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c3edc.  v0:= 0I;
  #L2c3ede.  v2.`com.bumptech.glide.load.resource.gif.GifDrawable.isStarted` @type ^`boolean` := v0 @kind boolean;
  #L2c3ee2.  call `stopRunning`(v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.stopRunning:()V` @kind direct;
  #L2c3ee8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2c3eec.  v1:= 11I;
  #L2c3ef0.  if v0 >= v1 then goto L2c3efa;
  #L2c3ef4.  call `reset`(v2) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.reset:()V` @kind direct;
  #L2c3efa.  return @kind void;
}
