record `com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` @kind class @AccessFlag  extends `android.graphics.drawable.Drawable$ConstantState` @kind class {
  `android.graphics.Bitmap` `com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.bitmap` @AccessFlag FINAL;
  `android.graphics.Paint` `com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.paint` @AccessFlag ;
  `int` `com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.targetDensity` @AccessFlag ;
}
global `android.graphics.Paint` `@@com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.DEFAULT_PAINT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.DEFAULT_PAINT_FLAGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.GRAVITY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2c11b0.  v0:= new `android.graphics.Paint`;
  #L2c11b4.  v1:= 6I;
  #L2c11b6.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L2c11bc.  `@@com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.DEFAULT_PAINT` @type ^`android.graphics.Paint` := v0 @kind object;
  #L2c11c0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.<init>:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c11d4.  call `<init>`(v1) @signature `Landroid/graphics/drawable/Drawable$ConstantState;.<init>:()V` @kind direct;
  #L2c11da.  v0:= `@@com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.DEFAULT_PAINT` @type ^`android.graphics.Paint` @kind object;
  #L2c11de.  v1.`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.paint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L2c11e2.  v1.`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.bitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L2c11e6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2c11f8.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2c11fc.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L2c1202.  v2:= v2.`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.targetDensity` @type ^`int`;
  #L2c1206.  v1.`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.targetDensity` @type ^`int` := v2;
  #L2c120a.  return @kind void;
}
procedure `int` `getChangingConfigurations`(`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.getChangingConfigurations:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c119c.  v0:= 0I;
  #L2c119e.  return v0;
}
procedure `void` `mutatePaint`(`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.mutatePaint:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2c121c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.DEFAULT_PAINT` @type ^`android.graphics.Paint` @kind object;
  #L2c1220.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.paint` @type ^`android.graphics.Paint` @kind object;
  #L2c1224.  if v0 != v1 then goto L2c1238;
  #L2c1228.  v0:= new `android.graphics.Paint`;
  #L2c122c.  v1:= 6I;
  #L2c122e.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L2c1234.  v2.`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.paint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L2c1238.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `newDrawable`(`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.newDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c1160.  v0:= new `com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable`;
  #L2c1164.  v1:= 0I;
  #L2c1166.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable;.<init>:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;)V` @kind direct;
  #L2c116c.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `newDrawable`(`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` v1 @kind this, `android.content.res.Resources` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.newDrawable:(Landroid/content/res/Resources;)Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c1180.  v0:= new `com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable`;
  #L2c1184.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable;.<init>:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;)V` @kind direct;
  #L2c118a.  return v0 @kind object;
}
procedure `void` `setAlpha`(`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.setAlpha:(I)V` @AccessFlag  {
    temp;
    v0;

  #L2c124c.  call `mutatePaint`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.mutatePaint:()V` @kind virtual;
  #L2c1252.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.paint` @type ^`android.graphics.Paint` @kind object;
  #L2c1256.  call `setAlpha`(v0, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L2c125c.  return @kind void;
}
procedure `void` `setColorFilter`(`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag  {
    temp;
    v0;

  #L2c1270.  call `mutatePaint`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/GlideBitmapDrawable$BitmapState;.mutatePaint:()V` @kind virtual;
  #L2c1276.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState.paint` @type ^`android.graphics.Paint` @kind object;
  #L2c127a.  call temp:= `setColorFilter`(v0, v2) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L2c1280.  return @kind void;
}
