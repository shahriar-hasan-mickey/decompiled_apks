record `com.bumptech.glide.load.model.AssetUriParser` @kind class @AccessFlag FINAL {
}
global `java.lang.String` `@@com.bumptech.glide.load.model.AssetUriParser.ASSET_PATH_SEGMENT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.bumptech.glide.load.model.AssetUriParser.ASSET_PREFIX` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.model.AssetUriParser.ASSET_PREFIX_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/model/AssetUriParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2bdefc.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.AssetUriParser` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/AssetUriParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2bdf10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bdf16.  return @kind void;
}
procedure `boolean` `isAssetUri`(`android.net.Uri` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/AssetUriParser;.isAssetUri:(Landroid/net/Uri;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2bde70.  call temp:= `getScheme`(v2) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L2bde76.  v0:= temp @kind object;
  #L2bde78.  v1:= "file" @kind object;
  #L2bde7c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2bde82.  v0:= temp;
  #L2bde84.  v1:= 0I;
  #L2bde86.  if v0 == 0 then goto L2bdec0;
  #L2bde8a.  call temp:= `getPathSegments`(v2) @signature `Landroid/net/Uri;.getPathSegments:()Ljava/util/List;` @kind virtual;
  #L2bde90.  v0:= temp @kind object;
  #L2bde92.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2bde98.  v0:= temp;
  #L2bde9a.  if v0 != 0 then goto L2bdec0;
  #L2bde9e.  call temp:= `getPathSegments`(v2) @signature `Landroid/net/Uri;.getPathSegments:()Ljava/util/List;` @kind virtual;
  #L2bdea4.  v2:= temp @kind object;
  #L2bdea6.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2bdeac.  v2:= temp @kind object;
  #L2bdeae.  v0:= "android_asset" @kind object;
  #L2bdeb2.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2bdeb8.  v2:= temp;
  #L2bdeba.  if v2 == 0 then goto L2bdec0;
  #L2bdebe.  v1:= 1I;
  #L2bdec0.  return v1;
}
procedure `java.lang.String` `toAssetPath`(`android.net.Uri` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/AssetUriParser;.toAssetPath:(Landroid/net/Uri;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2bded4.  call temp:= `toString`(v1) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bdeda.  v1:= temp @kind object;
  #L2bdedc.  v0:= `@@com.bumptech.glide.load.model.AssetUriParser.ASSET_PREFIX_LENGTH` @type ^`int`;
  #L2bdee0.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2bdee6.  v1:= temp @kind object;
  #L2bdee8.  return v1 @kind object;
}
