record `com.bumptech.glide.load.model.stream.StreamByteArrayLoader` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.stream.StreamModelLoader` @kind interface {
  `java.lang.String` `com.bumptech.glide.load.model.stream.StreamByteArrayLoader.id` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.stream.StreamByteArrayLoader` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/stream/StreamByteArrayLoader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bfb8c.  v0:= "" @kind object;
  #L2bfb90.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/load/model/stream/StreamByteArrayLoader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bfb96.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.stream.StreamByteArrayLoader` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/StreamByteArrayLoader;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2bfba8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bfbae.  v0.`com.bumptech.glide.load.model.stream.StreamByteArrayLoader.id` @type ^`java.lang.String` := v1 @kind object;
  #L2bfbb2.  return @kind void;
}
procedure `com.bumptech.glide.load.data.DataFetcher` `getResourceFetcher`(`com.bumptech.glide.load.model.stream.StreamByteArrayLoader` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/model/stream/StreamByteArrayLoader;.getResourceFetcher:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/data/DataFetcher;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bfb6c.  v1:= (`byte`[]) v1 @kind object;
  #L2bfb70.  call temp:= `getResourceFetcher`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/model/stream/StreamByteArrayLoader;.getResourceFetcher:([BII)Lcom/bumptech/glide/load/data/DataFetcher;` @kind virtual;
  #L2bfb76.  v1:= temp @kind object;
  #L2bfb78.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.data.DataFetcher` `getResourceFetcher`(`com.bumptech.glide.load.model.stream.StreamByteArrayLoader` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/model/stream/StreamByteArrayLoader;.getResourceFetcher:([BII)Lcom/bumptech/glide/load/data/DataFetcher;` @AccessFlag PUBLIC {
    temp;

  #L2bfb4c.  v2:= new `com.bumptech.glide.load.data.ByteArrayFetcher`;
  #L2bfb50.  v3:= v0.`com.bumptech.glide.load.model.stream.StreamByteArrayLoader.id` @type ^`java.lang.String` @kind object;
  #L2bfb54.  call `<init>`(v2, v1, v3) @signature `Lcom/bumptech/glide/load/data/ByteArrayFetcher;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L2bfb5a.  return v2 @kind object;
}
