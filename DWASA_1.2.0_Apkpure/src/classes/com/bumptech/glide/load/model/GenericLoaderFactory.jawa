record `com.bumptech.glide.load.model.GenericLoaderFactory` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `com.bumptech.glide.load.model.GenericLoaderFactory.cachedModelLoaders` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.bumptech.glide.load.model.GenericLoaderFactory.context` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.model.GenericLoaderFactory.modelClassToResourceFactories` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.model.ModelLoader` `@@com.bumptech.glide.load.model.GenericLoaderFactory.NULL_MODEL_LOADER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2be258.  v0:= new `com.bumptech.glide.load.model.GenericLoaderFactory$1`;
  #L2be25c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory$1;.<init>:()V` @kind direct;
  #L2be262.  `@@com.bumptech.glide.load.model.GenericLoaderFactory.NULL_MODEL_LOADER` @type ^`com.bumptech.glide.load.model.ModelLoader` := v0 @kind object;
  #L2be266.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.GenericLoaderFactory` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2be278.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2be27e.  v0:= new `java.util.HashMap`;
  #L2be282.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2be288.  v1.`com.bumptech.glide.load.model.GenericLoaderFactory.modelClassToResourceFactories` @type ^`java.util.Map` := v0 @kind object;
  #L2be28c.  v0:= new `java.util.HashMap`;
  #L2be290.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2be296.  v1.`com.bumptech.glide.load.model.GenericLoaderFactory.cachedModelLoaders` @type ^`java.util.Map` := v0 @kind object;
  #L2be29a.  call temp:= `getApplicationContext`(v2) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L2be2a0.  v2:= temp @kind object;
  #L2be2a2.  v1.`com.bumptech.glide.load.model.GenericLoaderFactory.context` @type ^`android.content.Context` := v2 @kind object;
  #L2be2a6.  return @kind void;
}
procedure `void` `cacheModelLoader`(`com.bumptech.glide.load.model.GenericLoaderFactory` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object, `com.bumptech.glide.load.model.ModelLoader` v5 @kind object) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.cacheModelLoader:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoader;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2be2b8.  v0:= v2.`com.bumptech.glide.load.model.GenericLoaderFactory.cachedModelLoaders` @type ^`java.util.Map` @kind object;
  #L2be2bc.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be2c2.  v0:= temp @kind object;
  #L2be2c4.  v0:= (`java.util.Map`) v0 @kind object;
  #L2be2c8.  if v0 != 0 then goto L2be2e0;
  #L2be2cc.  v0:= new `java.util.HashMap`;
  #L2be2d0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2be2d6.  v1:= v2.`com.bumptech.glide.load.model.GenericLoaderFactory.cachedModelLoaders` @type ^`java.util.Map` @kind object;
  #L2be2da.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be2e0.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be2e6.  return @kind void;
}
procedure `void` `cacheNullLoader`(`com.bumptech.glide.load.model.GenericLoaderFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.cacheNullLoader:(Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2be2f8.  v0:= `@@com.bumptech.glide.load.model.GenericLoaderFactory.NULL_MODEL_LOADER` @type ^`com.bumptech.glide.load.model.ModelLoader` @kind object;
  #L2be2fc.  call `cacheModelLoader`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.cacheModelLoader:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoader;)V` @kind direct;
  #L2be302.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `getCachedLoader`(`com.bumptech.glide.load.model.GenericLoaderFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.getCachedLoader:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2be088.  v0:= v1.`com.bumptech.glide.load.model.GenericLoaderFactory.cachedModelLoaders` @type ^`java.util.Map` @kind object;
  #L2be08c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be092.  v2:= temp @kind object;
  #L2be094.  v2:= (`java.util.Map`) v2 @kind object;
  #L2be098.  if v2 == 0 then goto L2be0aa;
  #L2be09c.  call temp:= `get`(v2, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be0a2.  v2:= temp @kind object;
  #L2be0a4.  v2:= (`com.bumptech.glide.load.model.ModelLoader`) v2 @kind object;
  #L2be0a8.  goto L2be0ac;
  #L2be0aa.  v2:= 0I;
  #L2be0ac.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoaderFactory` `getFactory`(`com.bumptech.glide.load.model.GenericLoaderFactory` v4 @kind this, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.getFactory:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2be0c0.  v0:= v4.`com.bumptech.glide.load.model.GenericLoaderFactory.modelClassToResourceFactories` @type ^`java.util.Map` @kind object;
  #L2be0c4.  call temp:= `get`(v0, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be0ca.  v0:= temp @kind object;
  #L2be0cc.  v0:= (`java.util.Map`) v0 @kind object;
  #L2be0d0.  if v0 == 0 then goto L2be0e2;
  #L2be0d4.  call temp:= `get`(v0, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be0da.  v0:= temp @kind object;
  #L2be0dc.  v0:= (`com.bumptech.glide.load.model.ModelLoaderFactory`) v0 @kind object;
  #L2be0e0.  goto L2be0e4;
  #L2be0e2.  v0:= 0I;
  #L2be0e4.  if v0 != 0 then goto L2be144;
  #L2be0e8.  v1:= v4.`com.bumptech.glide.load.model.GenericLoaderFactory.modelClassToResourceFactories` @type ^`java.util.Map` @kind object;
  #L2be0ec.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2be0f2.  v1:= temp @kind object;
  #L2be0f4.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2be0fa.  v1:= temp @kind object;
  #L2be0fc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2be102.  v2:= temp;
  #L2be104.  if v2 == 0 then goto L2be144;
  #L2be108.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2be10e.  v2:= temp @kind object;
  #L2be110.  v2:= (`java.lang.Class`) v2 @kind object;
  #L2be114.  call temp:= `isAssignableFrom`(v2, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2be11a.  v3:= temp;
  #L2be11c.  if v3 == 0 then goto L2be0fc;
  #L2be120.  v3:= v4.`com.bumptech.glide.load.model.GenericLoaderFactory.modelClassToResourceFactories` @type ^`java.util.Map` @kind object;
  #L2be124.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be12a.  v2:= temp @kind object;
  #L2be12c.  v2:= (`java.util.Map`) v2 @kind object;
  #L2be130.  if v2 == 0 then goto L2be0fc;
  #L2be134.  call temp:= `get`(v2, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be13a.  v0:= temp @kind object;
  #L2be13c.  v0:= (`com.bumptech.glide.load.model.ModelLoaderFactory`) v0 @kind object;
  #L2be140.  if v0 == 0 then goto L2be0fc;
  #L2be144.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `buildModelLoader`(`com.bumptech.glide.load.model.GenericLoaderFactory` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.buildModelLoader:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bdfdc.  @monitorenter v2
  #L2bdfde.  call temp:= `getCachedLoader`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.getCachedLoader:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind direct;
  #L2bdfe4.  v0:= temp @kind object;
  #L2bdfe6.  if v0 == 0 then goto L2be004;
  #L2bdfea.  v3:= `@@com.bumptech.glide.load.model.GenericLoaderFactory.NULL_MODEL_LOADER` @type ^`com.bumptech.glide.load.model.ModelLoader` @kind object;
  #L2bdfee.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2bdff4.  v3:= temp;
  #L2bdff6.  if v3 == 0 then goto L2be000;
  #L2bdffa.  v3:= 0I;
  #L2bdffc.  @monitorexit v2
  #L2bdffe.  return v3 @kind object;
  #L2be000.  @monitorexit v2
  #L2be002.  return v0 @kind object;
  #L2be004.  call temp:= `getFactory`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.getFactory:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;` @kind direct;
  #L2be00a.  v1:= temp @kind object;
  #L2be00c.  if v1 == 0 then goto L2be024;
  #L2be010.  v0:= v2.`com.bumptech.glide.load.model.GenericLoaderFactory.context` @type ^`android.content.Context` @kind object;
  #L2be014.  call temp:= `build`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/model/ModelLoaderFactory;.build:(Landroid/content/Context;Lcom/bumptech/glide/load/model/GenericLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind interface;
  #L2be01a.  v0:= temp @kind object;
  #L2be01c.  call `cacheModelLoader`(v2, v3, v4, v0) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.cacheModelLoader:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoader;)V` @kind direct;
  #L2be022.  goto L2be02a;
  #L2be024.  call `cacheNullLoader`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.cacheNullLoader:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L2be02a.  @monitorexit v2
  #L2be02c.  return v0 @kind object;
  #L2be02e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2be030.  @monitorexit v2
  #L2be032.  throw v3;
  catch `java.lang.Throwable` @[L2bdfde..L2bdff6] goto L2be02e;
  catch `java.lang.Throwable` @[L2be004..L2be02a] goto L2be02e;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `buildModelLoader`(`com.bumptech.glide.load.model.GenericLoaderFactory` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `android.content.Context` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.buildModelLoader:(Ljava/lang/Class;Ljava/lang/Class;Landroid/content/Context;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC {
    temp;

  #L2be058.  @monitorenter v0
  #L2be05a.  call temp:= `buildModelLoader`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.buildModelLoader:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind virtual;
  #L2be060.  v1:= temp @kind object;
  #L2be062.  @monitorexit v0
  #L2be064.  return v1 @kind object;
  #L2be066.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2be068.  @monitorexit v0
  #L2be06a.  throw v1;
  catch `java.lang.Throwable` @[L2be05a..L2be062] goto L2be066;
}
procedure `com.bumptech.glide.load.model.ModelLoaderFactory` `register`(`com.bumptech.glide.load.model.GenericLoaderFactory` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v5 @kind object) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.register:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2be158.  @monitorenter v2
  #L2be15a.  v0:= v2.`com.bumptech.glide.load.model.GenericLoaderFactory.cachedModelLoaders` @type ^`java.util.Map` @kind object;
  #L2be15e.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L2be164.  v0:= v2.`com.bumptech.glide.load.model.GenericLoaderFactory.modelClassToResourceFactories` @type ^`java.util.Map` @kind object;
  #L2be168.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be16e.  v0:= temp @kind object;
  #L2be170.  v0:= (`java.util.Map`) v0 @kind object;
  #L2be174.  if v0 != 0 then goto L2be18c;
  #L2be178.  v0:= new `java.util.HashMap`;
  #L2be17c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2be182.  v1:= v2.`com.bumptech.glide.load.model.GenericLoaderFactory.modelClassToResourceFactories` @type ^`java.util.Map` @kind object;
  #L2be186.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be18c.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be192.  v3:= temp @kind object;
  #L2be194.  v3:= (`com.bumptech.glide.load.model.ModelLoaderFactory`) v3 @kind object;
  #L2be198.  if v3 == 0 then goto L2be1d6;
  #L2be19c.  v4:= v2.`com.bumptech.glide.load.model.GenericLoaderFactory.modelClassToResourceFactories` @type ^`java.util.Map` @kind object;
  #L2be1a0.  call temp:= `values`(v4) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2be1a6.  v4:= temp @kind object;
  #L2be1a8.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2be1ae.  v4:= temp @kind object;
  #L2be1b0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2be1b6.  v5:= temp;
  #L2be1b8.  if v5 == 0 then goto L2be1d6;
  #L2be1bc.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2be1c2.  v5:= temp @kind object;
  #L2be1c4.  v5:= (`java.util.Map`) v5 @kind object;
  #L2be1c8.  call temp:= `containsValue`(v5, v3) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L2be1ce.  v5:= temp;
  #L2be1d0.  if v5 == 0 then goto L2be1b0;
  #L2be1d4.  v3:= 0I;
  #L2be1d6.  @monitorexit v2
  #L2be1d8.  return v3 @kind object;
  #L2be1da.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2be1dc.  @monitorexit v2
  #L2be1de.  goto L2be1e2;
  #L2be1e0.  throw v3;
  #L2be1e2.  goto L2be1e0;
  catch `java.lang.Throwable` @[L2be15a..L2be1d0] goto L2be1da;
}
procedure `com.bumptech.glide.load.model.ModelLoaderFactory` `unregister`(`com.bumptech.glide.load.model.GenericLoaderFactory` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.unregister:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2be200.  @monitorenter v2
  #L2be202.  v0:= v2.`com.bumptech.glide.load.model.GenericLoaderFactory.cachedModelLoaders` @type ^`java.util.Map` @kind object;
  #L2be206.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L2be20c.  v0:= 0I;
  #L2be20e.  v1:= v2.`com.bumptech.glide.load.model.GenericLoaderFactory.modelClassToResourceFactories` @type ^`java.util.Map` @kind object;
  #L2be212.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be218.  v3:= temp @kind object;
  #L2be21a.  v3:= (`java.util.Map`) v3 @kind object;
  #L2be21e.  if v3 == 0 then goto L2be230;
  #L2be222.  call temp:= `remove`(v3, v4) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2be228.  v3:= temp @kind object;
  #L2be22a.  v0:= v3 @kind object;
  #L2be22c.  v0:= (`com.bumptech.glide.load.model.ModelLoaderFactory`) v0 @kind object;
  #L2be230.  @monitorexit v2
  #L2be232.  return v0 @kind object;
  #L2be234.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2be236.  @monitorexit v2
  #L2be238.  throw v3;
  catch `java.lang.Throwable` @[L2be202..L2be230] goto L2be234;
}
