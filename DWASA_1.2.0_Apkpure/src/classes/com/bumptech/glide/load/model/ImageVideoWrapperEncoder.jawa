record `com.bumptech.glide.load.model.ImageVideoWrapperEncoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Encoder` @kind interface {
  `com.bumptech.glide.load.Encoder` `com.bumptech.glide.load.model.ImageVideoWrapperEncoder.fileDescriptorEncoder` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.model.ImageVideoWrapperEncoder.id` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Encoder` `com.bumptech.glide.load.model.ImageVideoWrapperEncoder.streamEncoder` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.ImageVideoWrapperEncoder` v0 @kind this, `com.bumptech.glide.load.Encoder` v1 @kind object, `com.bumptech.glide.load.Encoder` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapperEncoder;.<init>:(Lcom/bumptech/glide/load/Encoder;Lcom/bumptech/glide/load/Encoder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2be92c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2be932.  v0.`com.bumptech.glide.load.model.ImageVideoWrapperEncoder.streamEncoder` @type ^`com.bumptech.glide.load.Encoder` := v1 @kind object;
  #L2be936.  v0.`com.bumptech.glide.load.model.ImageVideoWrapperEncoder.fileDescriptorEncoder` @type ^`com.bumptech.glide.load.Encoder` := v2 @kind object;
  #L2be93a.  return @kind void;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.model.ImageVideoWrapperEncoder` v1 @kind this, `com.bumptech.glide.load.model.ImageVideoWrapper` v2 @kind object, `java.io.OutputStream` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapperEncoder;.encode:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;Ljava/io/OutputStream;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2be86c.  call temp:= `getStream`(v2) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapper;.getStream:()Ljava/io/InputStream;` @kind virtual;
  #L2be872.  v0:= temp @kind object;
  #L2be874.  if v0 == 0 then goto L2be88e;
  #L2be878.  v0:= v1.`com.bumptech.glide.load.model.ImageVideoWrapperEncoder.streamEncoder` @type ^`com.bumptech.glide.load.Encoder` @kind object;
  #L2be87c.  call temp:= `getStream`(v2) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapper;.getStream:()Ljava/io/InputStream;` @kind virtual;
  #L2be882.  v2:= temp @kind object;
  #L2be884.  call temp:= `encode`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/Encoder;.encode:(Ljava/lang/Object;Ljava/io/OutputStream;)Z` @kind interface;
  #L2be88a.  v2:= temp;
  #L2be88c.  return v2;
  #L2be88e.  v0:= v1.`com.bumptech.glide.load.model.ImageVideoWrapperEncoder.fileDescriptorEncoder` @type ^`com.bumptech.glide.load.Encoder` @kind object;
  #L2be892.  call temp:= `getFileDescriptor`(v2) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapper;.getFileDescriptor:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L2be898.  v2:= temp @kind object;
  #L2be89a.  call temp:= `encode`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/Encoder;.encode:(Ljava/lang/Object;Ljava/io/OutputStream;)Z` @kind interface;
  #L2be8a0.  v2:= temp;
  #L2be8a2.  return v2;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.model.ImageVideoWrapperEncoder` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapperEncoder;.encode:(Ljava/lang/Object;Ljava/io/OutputStream;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2be8b4.  v1:= (`com.bumptech.glide.load.model.ImageVideoWrapper`) v1 @kind object;
  #L2be8b8.  call temp:= `encode`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapperEncoder;.encode:(Lcom/bumptech/glide/load/model/ImageVideoWrapper;Ljava/io/OutputStream;)Z` @kind virtual;
  #L2be8be.  v1:= temp;
  #L2be8c0.  return v1;
}
procedure `java.lang.String` `getId`(`com.bumptech.glide.load.model.ImageVideoWrapperEncoder` v2 @kind this) @signature `Lcom/bumptech/glide/load/model/ImageVideoWrapperEncoder;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2be8d4.  v0:= v2.`com.bumptech.glide.load.model.ImageVideoWrapperEncoder.id` @type ^`java.lang.String` @kind object;
  #L2be8d8.  if v0 != 0 then goto L2be916;
  #L2be8dc.  v0:= new `java.lang.StringBuilder`;
  #L2be8e0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2be8e6.  v1:= v2.`com.bumptech.glide.load.model.ImageVideoWrapperEncoder.streamEncoder` @type ^`com.bumptech.glide.load.Encoder` @kind object;
  #L2be8ea.  call temp:= `getId`(v1) @signature `Lcom/bumptech/glide/load/Encoder;.getId:()Ljava/lang/String;` @kind interface;
  #L2be8f0.  v1:= temp @kind object;
  #L2be8f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be8f8.  v1:= v2.`com.bumptech.glide.load.model.ImageVideoWrapperEncoder.fileDescriptorEncoder` @type ^`com.bumptech.glide.load.Encoder` @kind object;
  #L2be8fc.  call temp:= `getId`(v1) @signature `Lcom/bumptech/glide/load/Encoder;.getId:()Ljava/lang/String;` @kind interface;
  #L2be902.  v1:= temp @kind object;
  #L2be904.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be90a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be910.  v0:= temp @kind object;
  #L2be912.  v2.`com.bumptech.glide.load.model.ImageVideoWrapperEncoder.id` @type ^`java.lang.String` := v0 @kind object;
  #L2be916.  v0:= v2.`com.bumptech.glide.load.model.ImageVideoWrapperEncoder.id` @type ^`java.lang.String` @kind object;
  #L2be91a.  return v0 @kind object;
}
