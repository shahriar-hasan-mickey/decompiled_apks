record `com.bumptech.glide.load.model.stream.StreamStringLoader$Factory` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoaderFactory` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.stream.StreamStringLoader$Factory` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/stream/StreamStringLoader$Factory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2bfd18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bfd1e.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `build`(`com.bumptech.glide.load.model.stream.StreamStringLoader$Factory` v2 @kind this, `android.content.Context` v3 @kind object, `com.bumptech.glide.load.model.GenericLoaderFactory` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/StreamStringLoader$Factory;.build:(Landroid/content/Context;Lcom/bumptech/glide/load/model/GenericLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bfcec.  v3:= new `com.bumptech.glide.load.model.stream.StreamStringLoader`;
  #L2bfcf0.  v0:= constclass @type ^`android.net.Uri` @kind object;
  #L2bfcf4.  v1:= constclass @type ^`java.io.InputStream` @kind object;
  #L2bfcf8.  call temp:= `buildModelLoader`(v4, v0, v1) @signature `Lcom/bumptech/glide/load/model/GenericLoaderFactory;.buildModelLoader:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind virtual;
  #L2bfcfe.  v4:= temp @kind object;
  #L2bfd00.  call `<init>`(v3, v4) @signature `Lcom/bumptech/glide/load/model/stream/StreamStringLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelLoader;)V` @kind direct;
  #L2bfd06.  return v3 @kind object;
}
procedure `void` `teardown`(`com.bumptech.glide.load.model.stream.StreamStringLoader$Factory` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/stream/StreamStringLoader$Factory;.teardown:()V` @AccessFlag PUBLIC {
    temp;

  #L2bfd30.  return @kind void;
}
