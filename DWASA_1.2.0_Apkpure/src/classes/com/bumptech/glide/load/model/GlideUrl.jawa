record `com.bumptech.glide.load.model.GlideUrl` @kind class @AccessFlag PUBLIC {
  `com.bumptech.glide.load.model.Headers` `com.bumptech.glide.load.model.GlideUrl.headers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.model.GlideUrl.safeStringUrl` @AccessFlag PRIVATE;
  `java.net.URL` `com.bumptech.glide.load.model.GlideUrl.safeUrl` @AccessFlag PRIVATE;
  `java.lang.String` `com.bumptech.glide.load.model.GlideUrl.stringUrl` @AccessFlag PRIVATE_FINAL;
  `java.net.URL` `com.bumptech.glide.load.model.GlideUrl.url` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.bumptech.glide.load.model.GlideUrl.ALLOWED_URI_CHARS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.model.GlideUrl` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2be4f4.  v0:= `@@com.bumptech.glide.load.model.Headers.DEFAULT` @type ^`com.bumptech.glide.load.model.Headers` @kind object;
  #L2be4f8.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/model/Headers;)V` @kind direct;
  #L2be4fe.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.GlideUrl` v2 @kind this, `java.lang.String` v3 @kind object, `com.bumptech.glide.load.model.Headers` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/model/Headers;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2be510.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2be516.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2be51c.  v0:= temp;
  #L2be51e.  if v0 != 0 then goto L2be546;
  #L2be522.  if v4 == 0 then goto L2be536;
  #L2be526.  v2.`com.bumptech.glide.load.model.GlideUrl.stringUrl` @type ^`java.lang.String` := v3 @kind object;
  #L2be52a.  v3:= 0I;
  #L2be52c.  v2.`com.bumptech.glide.load.model.GlideUrl.url` @type ^`java.net.URL` := v3 @kind object;
  #L2be530.  v2.`com.bumptech.glide.load.model.GlideUrl.headers` @type ^`com.bumptech.glide.load.model.Headers` := v4 @kind object;
  #L2be534.  return @kind void;
  #L2be536.  v3:= new `java.lang.IllegalArgumentException`;
  #L2be53a.  v4:= "Headers must not be null" @kind object;
  #L2be53e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2be544.  throw v3;
  #L2be546.  v4:= new `java.lang.IllegalArgumentException`;
  #L2be54a.  v0:= new `java.lang.StringBuilder`;
  #L2be54e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2be554.  v1:= "String url must not be empty or null: " @kind object;
  #L2be558.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be55e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be564.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be56a.  v3:= temp @kind object;
  #L2be56c.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2be572.  throw v4;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.GlideUrl` v1 @kind this, `java.net.URL` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.<init>:(Ljava/net/URL;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2be584.  v0:= `@@com.bumptech.glide.load.model.Headers.DEFAULT` @type ^`com.bumptech.glide.load.model.Headers` @kind object;
  #L2be588.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.<init>:(Ljava/net/URL;Lcom/bumptech/glide/load/model/Headers;)V` @kind direct;
  #L2be58e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.GlideUrl` v0 @kind this, `java.net.URL` v1 @kind object, `com.bumptech.glide.load.model.Headers` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.<init>:(Ljava/net/URL;Lcom/bumptech/glide/load/model/Headers;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2be5a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2be5a6.  if v1 == 0 then goto L2be5ce;
  #L2be5aa.  if v2 == 0 then goto L2be5be;
  #L2be5ae.  v0.`com.bumptech.glide.load.model.GlideUrl.url` @type ^`java.net.URL` := v1 @kind object;
  #L2be5b2.  v1:= 0I;
  #L2be5b4.  v0.`com.bumptech.glide.load.model.GlideUrl.stringUrl` @type ^`java.lang.String` := v1 @kind object;
  #L2be5b8.  v0.`com.bumptech.glide.load.model.GlideUrl.headers` @type ^`com.bumptech.glide.load.model.Headers` := v2 @kind object;
  #L2be5bc.  return @kind void;
  #L2be5be.  v1:= new `java.lang.IllegalArgumentException`;
  #L2be5c2.  v2:= "Headers must not be null" @kind object;
  #L2be5c6.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2be5cc.  throw v1;
  #L2be5ce.  v1:= new `java.lang.IllegalArgumentException`;
  #L2be5d2.  v2:= "URL must not be null!" @kind object;
  #L2be5d6.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2be5dc.  throw v1;
}
procedure `java.lang.String` `getSafeStringUrl`(`com.bumptech.glide.load.model.GlideUrl` v2 @kind this) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getSafeStringUrl:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2be3c4.  v0:= v2.`com.bumptech.glide.load.model.GlideUrl.safeStringUrl` @type ^`java.lang.String` @kind object;
  #L2be3c8.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2be3ce.  v0:= temp;
  #L2be3d0.  if v0 == 0 then goto L2be400;
  #L2be3d4.  v0:= v2.`com.bumptech.glide.load.model.GlideUrl.stringUrl` @type ^`java.lang.String` @kind object;
  #L2be3d8.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2be3de.  v1:= temp;
  #L2be3e0.  if v1 == 0 then goto L2be3f0;
  #L2be3e4.  v0:= v2.`com.bumptech.glide.load.model.GlideUrl.url` @type ^`java.net.URL` @kind object;
  #L2be3e8.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be3ee.  v0:= temp @kind object;
  #L2be3f0.  v1:= "@#&=*+-_.,:!?()/~'%" @kind object;
  #L2be3f4.  call temp:= `encode`(v0, v1) @signature `Landroid/net/Uri;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2be3fa.  v0:= temp @kind object;
  #L2be3fc.  v2.`com.bumptech.glide.load.model.GlideUrl.safeStringUrl` @type ^`java.lang.String` := v0 @kind object;
  #L2be400.  v0:= v2.`com.bumptech.glide.load.model.GlideUrl.safeStringUrl` @type ^`java.lang.String` @kind object;
  #L2be404.  return v0 @kind object;
}
procedure `java.net.URL` `getSafeUrl`(`com.bumptech.glide.load.model.GlideUrl` v2 @kind this) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getSafeUrl:()Ljava/net/URL;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2be484.  v0:= v2.`com.bumptech.glide.load.model.GlideUrl.safeUrl` @type ^`java.net.URL` @kind object;
  #L2be488.  if v0 != 0 then goto L2be4a2;
  #L2be48c.  v0:= new `java.net.URL`;
  #L2be490.  call temp:= `getSafeStringUrl`(v2) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getSafeStringUrl:()Ljava/lang/String;` @kind direct;
  #L2be496.  v1:= temp @kind object;
  #L2be498.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2be49e.  v2.`com.bumptech.glide.load.model.GlideUrl.safeUrl` @type ^`java.net.URL` := v0 @kind object;
  #L2be4a2.  v0:= v2.`com.bumptech.glide.load.model.GlideUrl.safeUrl` @type ^`java.net.URL` @kind object;
  #L2be4a6.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.model.GlideUrl` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2be314.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.model.GlideUrl` @kind boolean;
  #L2be318.  v1:= 0I;
  #L2be31a.  if v0 == 0 then goto L2be354;
  #L2be31e.  v4:= (`com.bumptech.glide.load.model.GlideUrl`) v4 @kind object;
  #L2be322.  call temp:= `getCacheKey`(v3) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getCacheKey:()Ljava/lang/String;` @kind virtual;
  #L2be328.  v0:= temp @kind object;
  #L2be32a.  call temp:= `getCacheKey`(v4) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getCacheKey:()Ljava/lang/String;` @kind virtual;
  #L2be330.  v2:= temp @kind object;
  #L2be332.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2be338.  v0:= temp;
  #L2be33a.  if v0 == 0 then goto L2be354;
  #L2be33e.  v0:= v3.`com.bumptech.glide.load.model.GlideUrl.headers` @type ^`com.bumptech.glide.load.model.Headers` @kind object;
  #L2be342.  v4:= v4.`com.bumptech.glide.load.model.GlideUrl.headers` @type ^`com.bumptech.glide.load.model.Headers` @kind object;
  #L2be346.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2be34c.  v4:= temp;
  #L2be34e.  if v4 == 0 then goto L2be354;
  #L2be352.  v1:= 1I;
  #L2be354.  return v1;
}
procedure `java.lang.String` `getCacheKey`(`com.bumptech.glide.load.model.GlideUrl` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getCacheKey:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2be39c.  v0:= v1.`com.bumptech.glide.load.model.GlideUrl.stringUrl` @type ^`java.lang.String` @kind object;
  #L2be3a0.  if v0 == 0 then goto L2be3a6;
  #L2be3a4.  goto L2be3b2;
  #L2be3a6.  v0:= v1.`com.bumptech.glide.load.model.GlideUrl.url` @type ^`java.net.URL` @kind object;
  #L2be3aa.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be3b0.  v0:= temp @kind object;
  #L2be3b2.  return v0 @kind object;
}
procedure `java.util.Map` `getHeaders`(`com.bumptech.glide.load.model.GlideUrl` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getHeaders:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2be4d4.  v0:= v1.`com.bumptech.glide.load.model.GlideUrl.headers` @type ^`com.bumptech.glide.load.model.Headers` @kind object;
  #L2be4d8.  call temp:= `getHeaders`(v0) @signature `Lcom/bumptech/glide/load/model/Headers;.getHeaders:()Ljava/util/Map;` @kind interface;
  #L2be4de.  v0:= temp @kind object;
  #L2be4e0.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.model.GlideUrl` v2 @kind this) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2be368.  call temp:= `getCacheKey`(v2) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getCacheKey:()Ljava/lang/String;` @kind virtual;
  #L2be36e.  v0:= temp @kind object;
  #L2be370.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2be376.  v0:= temp;
  #L2be378.  v0:= v0 * 31;
  #L2be37c.  v1:= v2.`com.bumptech.glide.load.model.GlideUrl.headers` @type ^`com.bumptech.glide.load.model.Headers` @kind object;
  #L2be380.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2be386.  v1:= temp;
  #L2be388.  v0:= v0 + v1 @kind int;
  #L2be38a.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.model.GlideUrl` v2 @kind this) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2be418.  v0:= new `java.lang.StringBuilder`;
  #L2be41c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2be422.  call temp:= `getCacheKey`(v2) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getCacheKey:()Ljava/lang/String;` @kind virtual;
  #L2be428.  v1:= temp @kind object;
  #L2be42a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be430.  v1:= 10I;
  #L2be434.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be43a.  v1:= v2.`com.bumptech.glide.load.model.GlideUrl.headers` @type ^`com.bumptech.glide.load.model.Headers` @kind object;
  #L2be43e.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be444.  v1:= temp @kind object;
  #L2be446.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be44c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be452.  v0:= temp @kind object;
  #L2be454.  return v0 @kind object;
}
procedure `java.lang.String` `toStringUrl`(`com.bumptech.glide.load.model.GlideUrl` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.toStringUrl:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2be468.  call temp:= `getSafeStringUrl`(v1) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getSafeStringUrl:()Ljava/lang/String;` @kind direct;
  #L2be46e.  v0:= temp @kind object;
  #L2be470.  return v0 @kind object;
}
procedure `java.net.URL` `toURL`(`com.bumptech.glide.load.model.GlideUrl` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.toURL:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2be4b8.  call temp:= `getSafeUrl`(v1) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getSafeUrl:()Ljava/net/URL;` @kind direct;
  #L2be4be.  v0:= temp @kind object;
  #L2be4c0.  return v0 @kind object;
}
