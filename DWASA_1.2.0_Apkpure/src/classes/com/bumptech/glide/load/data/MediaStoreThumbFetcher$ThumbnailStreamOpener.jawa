record `com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener` @kind class @AccessFlag  {
  `com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailQuery` `com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.query` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService` `com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.service` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService` `@@com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.DEFAULT_SERVICE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailStreamOpener;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b7d88.  v0:= new `com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService`;
  #L2b7d8c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$FileService;.<init>:()V` @kind direct;
  #L2b7d92.  `@@com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.DEFAULT_SERVICE` @type ^`com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService` := v0 @kind object;
  #L2b7d96.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener` v0 @kind this, `com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService` v1 @kind object, `com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailQuery` v2 @kind object) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailStreamOpener;.<init>:(Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$FileService;Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailQuery;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b7da8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b7dae.  v0.`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.service` @type ^`com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService` := v1 @kind object;
  #L2b7db2.  v0.`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.query` @type ^`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailQuery` := v2 @kind object;
  #L2b7db6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener` v1 @kind this, `com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailQuery` v2 @kind object) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailStreamOpener;.<init>:(Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailQuery;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b7dc8.  v0:= `@@com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.DEFAULT_SERVICE` @type ^`com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService` @kind object;
  #L2b7dcc.  call `<init>`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailStreamOpener;.<init>:(Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$FileService;Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailQuery;)V` @kind direct;
  #L2b7dd2.  return @kind void;
}
procedure `android.net.Uri` `parseThumbUri`(`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener` v5 @kind this, `android.database.Cursor` v6 @kind object) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailStreamOpener;.parseThumbUri:(Landroid/database/Cursor;)Landroid/net/Uri;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b7bd4.  v0:= 0I;
  #L2b7bd6.  call temp:= `getString`(v6, v0) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L2b7bdc.  v6:= temp @kind object;
  #L2b7bde.  call temp:= `isEmpty`(v6) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2b7be4.  v0:= temp;
  #L2b7be6.  if v0 != 0 then goto L2b7c28;
  #L2b7bea.  v0:= v5.`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.service` @type ^`com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService` @kind object;
  #L2b7bee.  call temp:= `get`(v0, v6) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$FileService;.get:(Ljava/lang/String;)Ljava/io/File;` @kind virtual;
  #L2b7bf4.  v6:= temp @kind object;
  #L2b7bf6.  v0:= v5.`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.service` @type ^`com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService` @kind object;
  #L2b7bfa.  call temp:= `exists`(v0, v6) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$FileService;.exists:(Ljava/io/File;)Z` @kind virtual;
  #L2b7c00.  v0:= temp;
  #L2b7c02.  if v0 == 0 then goto L2b7c28;
  #L2b7c06.  v0:= v5.`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.service` @type ^`com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService` @kind object;
  #L2b7c0a.  call temp:= `length`(v0, v6) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$FileService;.length:(Ljava/io/File;)J` @kind virtual;
  #L2b7c10.  v0:= temp @kind wide;
  #L2b7c12.  v2:= 0L;
  #L2b7c16.  v4:= lcmp(v0, v2);
  #L2b7c1a.  if v4 <= 0 then goto L2b7c28;
  #L2b7c1e.  call temp:= `fromFile`(v6) @signature `Landroid/net/Uri;.fromFile:(Ljava/io/File;)Landroid/net/Uri;` @kind static;
  #L2b7c24.  v6:= temp @kind object;
  #L2b7c26.  goto L2b7c2a;
  #L2b7c28.  v6:= 0I;
  #L2b7c2a.  return v6 @kind object;
}
procedure `int` `getOrientation`(`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener` v4 @kind this, `android.content.Context` v5 @kind object, `android.net.Uri` v6 @kind object) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailStreamOpener;.getOrientation:(Landroid/content/Context;Landroid/net/Uri;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b7c3c.  v0:= "MediaStoreThumbFetcher" @kind object;
  #L2b7c40.  v1:= 0I;
  #L2b7c42.  call temp:= `getContentResolver`(v5) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2b7c48.  v5:= temp @kind object;
  #L2b7c4a.  call temp:= `openInputStream`(v5, v6) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2b7c50.  v1:= temp @kind object;
  #L2b7c52.  v5:= new `com.bumptech.glide.load.resource.bitmap.ImageHeaderParser`;
  #L2b7c56.  call `<init>`(v5, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2b7c5c.  call temp:= `getOrientation`(v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser;.getOrientation:()I` @kind virtual;
  #L2b7c62.  v5:= temp;
  #L2b7c64.  if v1 == 0 then goto L2b7cb8;
  #L2b7c68.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2b7c6e.  goto L2b7cb8;
  #L2b7c70.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b7c72.  goto L2b7cba;
  #L2b7c74.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L2b7c76.  v2:= 3I;
  #L2b7c78.  call temp:= `isLoggable`(v0, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b7c7e.  v2:= temp;
  #L2b7c80.  if v2 == 0 then goto L2b7cac;
  #L2b7c84.  v2:= new `java.lang.StringBuilder`;
  #L2b7c88.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b7c8e.  v3:= "Failed to open uri: " @kind object;
  #L2b7c92.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b7c98.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b7c9e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b7ca4.  v6:= temp @kind object;
  #L2b7ca6.  call temp:= `d`(v0, v6, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2b7cac.  if v1 == 0 then goto L2b7cb6;
  #L2b7cb0.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2b7cb6.  v5:= -1I;
  #L2b7cb8.  return v5;
  #L2b7cba.  if v1 == 0 then goto L2b7cc4;
  #L2b7cbe.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2b7cc4.  throw v5;
  catch `java.io.IOException` @[L2b7c42..L2b7c64] goto L2b7c74;
  catch `java.lang.Throwable` @[L2b7c42..L2b7c64] goto L2b7c70;
  catch `java.io.IOException` @[L2b7c68..L2b7c6e] goto L2b7cb8;
  catch `java.lang.Throwable` @[L2b7c78..L2b7cac] goto L2b7c70;
  catch `java.io.IOException` @[L2b7cb0..L2b7cb6] goto L2b7cb6;
  catch `java.io.IOException` @[L2b7cbe..L2b7cc4] goto L2b7cc4;
}
procedure `java.io.InputStream` `open`(`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener` v2 @kind this, `android.content.Context` v3 @kind object, `android.net.Uri` v4 @kind object) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailStreamOpener;.open:(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b7d14.  v0:= v2.`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener.query` @type ^`com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailQuery` @kind object;
  #L2b7d18.  call temp:= `queryPath`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailQuery;.queryPath:(Landroid/content/Context;Landroid/net/Uri;)Landroid/database/Cursor;` @kind interface;
  #L2b7d1e.  v4:= temp @kind object;
  #L2b7d20.  v0:= 0I;
  #L2b7d22.  if v4 == 0 then goto L2b7d4a;
  #L2b7d26.  call temp:= `moveToFirst`(v4) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L2b7d2c.  v1:= temp;
  #L2b7d2e.  if v1 == 0 then goto L2b7d4a;
  #L2b7d32.  call temp:= `parseThumbUri`(v2, v4) @signature `Lcom/bumptech/glide/load/data/MediaStoreThumbFetcher$ThumbnailStreamOpener;.parseThumbUri:(Landroid/database/Cursor;)Landroid/net/Uri;` @kind direct;
  #L2b7d38.  v1:= temp @kind object;
  #L2b7d3a.  goto L2b7d4c;
  #L2b7d3c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b7d3e.  if v4 == 0 then goto L2b7d48;
  #L2b7d42.  call `close`(v4) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2b7d48.  throw v3;
  #L2b7d4a.  v1:= v0 @kind object;
  #L2b7d4c.  if v4 == 0 then goto L2b7d56;
  #L2b7d50.  call `close`(v4) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2b7d56.  if v1 == 0 then goto L2b7d6a;
  #L2b7d5a.  call temp:= `getContentResolver`(v3) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2b7d60.  v3:= temp @kind object;
  #L2b7d62.  call temp:= `openInputStream`(v3, v1) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2b7d68.  v0:= temp @kind object;
  #L2b7d6a.  return v0 @kind object;
  catch `java.lang.Throwable` @[L2b7d26..L2b7d3a] goto L2b7d3c;
}
