record `com.bumptech.glide.load.data.ByteArrayFetcher` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.data.DataFetcher` @kind interface {
  `byte`[] `com.bumptech.glide.load.data.ByteArrayFetcher.bytes` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.data.ByteArrayFetcher.id` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.ByteArrayFetcher` v0 @kind this, `byte`[] v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/load/data/ByteArrayFetcher;.<init>:([BLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b7218.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b721e.  v0.`com.bumptech.glide.load.data.ByteArrayFetcher.bytes` @type ^`byte`[] := v1 @kind object;
  #L2b7222.  v0.`com.bumptech.glide.load.data.ByteArrayFetcher.id` @type ^`java.lang.String` := v2 @kind object;
  #L2b7226.  return @kind void;
}
procedure `void` `cancel`(`com.bumptech.glide.load.data.ByteArrayFetcher` v0 @kind this) @signature `Lcom/bumptech/glide/load/data/ByteArrayFetcher;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L2b7238.  return @kind void;
}
procedure `void` `cleanup`(`com.bumptech.glide.load.data.ByteArrayFetcher` v0 @kind this) @signature `Lcom/bumptech/glide/load/data/ByteArrayFetcher;.cleanup:()V` @AccessFlag PUBLIC {
    temp;

  #L2b724c.  return @kind void;
}
procedure `java.lang.String` `getId`(`com.bumptech.glide.load.data.ByteArrayFetcher` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/ByteArrayFetcher;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7200.  v0:= v1.`com.bumptech.glide.load.data.ByteArrayFetcher.id` @type ^`java.lang.String` @kind object;
  #L2b7204.  return v0 @kind object;
}
procedure `java.io.InputStream` `loadData`(`com.bumptech.glide.load.data.ByteArrayFetcher` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object) @signature `Lcom/bumptech/glide/load/data/ByteArrayFetcher;.loadData:(Lcom/bumptech/glide/Priority;)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b71c4.  v2:= new `java.io.ByteArrayInputStream`;
  #L2b71c8.  v0:= v1.`com.bumptech.glide.load.data.ByteArrayFetcher.bytes` @type ^`byte`[] @kind object;
  #L2b71cc.  call `<init>`(v2, v0) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L2b71d2.  return v2 @kind object;
}
procedure `java.lang.Object` `loadData`(`com.bumptech.glide.load.data.ByteArrayFetcher` v0 @kind this, `com.bumptech.glide.Priority` v1 @kind object) @signature `Lcom/bumptech/glide/load/data/ByteArrayFetcher;.loadData:(Lcom/bumptech/glide/Priority;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2b71e4.  call temp:= `loadData`(v0, v1) @signature `Lcom/bumptech/glide/load/data/ByteArrayFetcher;.loadData:(Lcom/bumptech/glide/Priority;)Ljava/io/InputStream;` @kind virtual;
  #L2b71ea.  v1:= temp @kind object;
  #L2b71ec.  return v1 @kind object;
}
