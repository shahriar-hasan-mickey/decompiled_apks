record `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.ThreadFactory` @kind interface {
  `int` `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory.threadNum` @AccessFlag ;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$DefaultThreadFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bd124.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bd12a.  v0:= 0I;
  #L2bd12c.  v1.`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory.threadNum` @type ^`int` := v0;
  #L2bd130.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$DefaultThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bd0d4.  v0:= new `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory$1`;
  #L2bd0d8.  v1:= new `java.lang.StringBuilder`;
  #L2bd0dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bd0e2.  v2:= "fifo-pool-thread-" @kind object;
  #L2bd0e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd0ec.  v2:= v3.`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory.threadNum` @type ^`int`;
  #L2bd0f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd0f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bd0fc.  v1:= temp @kind object;
  #L2bd0fe.  call `<init>`(v0, v3, v4, v1) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$DefaultThreadFactory$1;.<init>:(Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$DefaultThreadFactory;Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L2bd104.  v4:= v3.`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory.threadNum` @type ^`int`;
  #L2bd108.  v4:= v4 + 1;
  #L2bd10c.  v3.`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory.threadNum` @type ^`int` := v4;
  #L2bd110.  return v0 @kind object;
}
