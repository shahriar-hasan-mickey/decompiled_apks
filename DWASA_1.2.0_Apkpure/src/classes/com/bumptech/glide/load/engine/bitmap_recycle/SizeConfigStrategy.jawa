record `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.groupedMap` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.keyPool` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.sortedSizes` @AccessFlag PRIVATE_FINAL;
}
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.ALPHA_8_IN_CONFIGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.ARGB_4444_IN_CONFIGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.ARGB_8888_IN_CONFIGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.MAX_SIZE_MULTIPLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.RGB_565_IN_CONFIGS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bbbe8.  v0:= 2I;
  #L2bbbea.  v0:= new `android.graphics.Bitmap$Config`[v0];
  #L2bbbee.  v1:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bbbf2.  v2:= 0I;
  #L2bbbf4.  v0[v2]:= v1 @kind object;
  #L2bbbf8.  v1:= 1I;
  #L2bbbfa.  v3:= 0I;
  #L2bbbfc.  v0[v1]:= v3 @kind object;
  #L2bbc00.  `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.ARGB_8888_IN_CONFIGS` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L2bbc04.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L2bbc08.  v3:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bbc0c.  v0[v2]:= v3 @kind object;
  #L2bbc10.  `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.RGB_565_IN_CONFIGS` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L2bbc14.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L2bbc18.  v3:= `@@android.graphics.Bitmap$Config.ARGB_4444` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bbc1c.  v0[v2]:= v3 @kind object;
  #L2bbc20.  `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.ARGB_4444_IN_CONFIGS` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L2bbc24.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L2bbc28.  v1:= `@@android.graphics.Bitmap$Config.ALPHA_8` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bbc2c.  v0[v2]:= v1 @kind object;
  #L2bbc30.  `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.ALPHA_8_IN_CONFIGS` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L2bbc34.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bbc48.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bbc4e.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool`;
  #L2bbc52.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$KeyPool;.<init>:()V` @kind direct;
  #L2bbc58.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` := v0 @kind object;
  #L2bbc5c.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap`;
  #L2bbc60.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.<init>:()V` @kind direct;
  #L2bbc66.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` := v0 @kind object;
  #L2bbc6a.  v0:= new `java.util.HashMap`;
  #L2bbc6e.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2bbc74.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.sortedSizes` @type ^`java.util.Map` := v0 @kind object;
  #L2bbc78.  return @kind void;
}
procedure `java.lang.String` `access$100`(`int` v0 , `android.graphics.Bitmap$Config` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.access$100:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bba18.  call temp:= `getBitmapString`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getBitmapString:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L2bba1e.  v0:= temp @kind object;
  #L2bba20.  return v0 @kind object;
}
procedure `void` `decrementBitmapOfSize`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v3 @kind this, `java.lang.Integer` v4 @kind object, `android.graphics.Bitmap$Config` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.decrementBitmapOfSize:(Ljava/lang/Integer;Landroid/graphics/Bitmap$Config;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2bbc8c.  call temp:= `getSizesForConfig`(v3, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getSizesForConfig:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L2bbc92.  v5:= temp @kind object;
  #L2bbc94.  call temp:= `get`(v5, v4) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bbc9a.  v0:= temp @kind object;
  #L2bbc9c.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2bbca0.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bbca6.  v1:= temp;
  #L2bbca8.  v2:= 1I;
  #L2bbcaa.  if v1 != v2 then goto L2bbcb6;
  #L2bbcae.  call temp:= `remove`(v5, v4) @signature `Ljava/util/NavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bbcb4.  goto L2bbcce;
  #L2bbcb6.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bbcbc.  v0:= temp;
  #L2bbcbe.  v0:= v0 - v2 @kind int;
  #L2bbcc0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bbcc6.  v0:= temp @kind object;
  #L2bbcc8.  call temp:= `put`(v5, v4, v0) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bbcce.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` `findBestKey`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v7 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` v8 @kind object, `int` v9 , `android.graphics.Bitmap$Config` v10 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.findBestKey:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2bb95c.  call temp:= `getInConfigs`(v10) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getInConfigs:(Landroid/graphics/Bitmap$Config;)[Landroid/graphics/Bitmap$Config;` @kind static;
  #L2bb962.  v0:= temp @kind object;
  #L2bb964.  v1:= length @variable v0;
  #L2bb966.  v2:= 0I;
  #L2bb968.  if v2 >= v1 then goto L2bb9e8;
  #L2bb96c.  v3:= v0[v2] @kind object;
  #L2bb970.  call temp:= `getSizesForConfig`(v7, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getSizesForConfig:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L2bb976.  v4:= temp @kind object;
  #L2bb978.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb97e.  v5:= temp @kind object;
  #L2bb980.  call temp:= `ceilingKey`(v4, v5) @signature `Ljava/util/NavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bb986.  v4:= temp @kind object;
  #L2bb988.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L2bb98c.  if v4 == 0 then goto L2bb9e2;
  #L2bb990.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bb996.  v5:= temp;
  #L2bb998.  v6:= v9 * 8;
  #L2bb99c.  if v5 > v6 then goto L2bb9e2;
  #L2bb9a0.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bb9a6.  v0:= temp;
  #L2bb9a8.  if v0 != v9 then goto L2bb9c2;
  #L2bb9ac.  if v3 != 0 then goto L2bb9b6;
  #L2bb9b0.  if v10 == 0 then goto L2bb9e8;
  #L2bb9b4.  goto L2bb9c2;
  #L2bb9b6.  call temp:= `equals`(v3, v10) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2bb9bc.  v9:= temp;
  #L2bb9be.  if v9 != 0 then goto L2bb9e8;
  #L2bb9c2.  v9:= v7.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` @kind object;
  #L2bb9c6.  call `offer`(v9, v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$KeyPool;.offer:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;)V` @kind virtual;
  #L2bb9cc.  v8:= v7.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` @kind object;
  #L2bb9d0.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bb9d6.  v9:= temp;
  #L2bb9d8.  call temp:= `get`(v8, v9, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$KeyPool;.get:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;` @kind virtual;
  #L2bb9de.  v8:= temp @kind object;
  #L2bb9e0.  goto L2bb9e8;
  #L2bb9e2.  v2:= v2 + 1;
  #L2bb9e6.  goto L2bb968;
  #L2bb9e8.  return v8 @kind object;
}
procedure `java.lang.String` `getBitmapString`(`int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getBitmapString:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2bba34.  v0:= new `java.lang.StringBuilder`;
  #L2bba38.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bba3e.  v1:= "[" @kind object;
  #L2bba42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bba48.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bba4e.  v2:= "](" @kind object;
  #L2bba52.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bba58.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bba5e.  v2:= ")" @kind object;
  #L2bba62.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bba68.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bba6e.  v2:= temp @kind object;
  #L2bba70.  return v2 @kind object;
}
procedure `android.graphics.Bitmap$Config`[] `getInConfigs`(`android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getInConfigs:(Landroid/graphics/Bitmap$Config;)[Landroid/graphics/Bitmap$Config;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2bb900.  v0:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1.$SwitchMap$android$graphics$Bitmap$Config` @type ^`int`[] @kind object;
  #L2bb904.  call temp:= `ordinal`(v3) @signature `Landroid/graphics/Bitmap$Config;.ordinal:()I` @kind virtual;
  #L2bb90a.  v1:= temp;
  #L2bb90c.  v0:= v0[v1];
  #L2bb910.  v1:= 1I;
  #L2bb912.  if v0 == v1 then goto L2bb946;
  #L2bb916.  v2:= 2I;
  #L2bb918.  if v0 == v2 then goto L2bb940;
  #L2bb91c.  v2:= 3I;
  #L2bb91e.  if v0 == v2 then goto L2bb93a;
  #L2bb922.  v2:= 4I;
  #L2bb924.  if v0 == v2 then goto L2bb934;
  #L2bb928.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L2bb92c.  v1:= 0I;
  #L2bb92e.  v0[v1]:= v3 @kind object;
  #L2bb932.  return v0 @kind object;
  #L2bb934.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.ALPHA_8_IN_CONFIGS` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L2bb938.  return v3 @kind object;
  #L2bb93a.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.ARGB_4444_IN_CONFIGS` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L2bb93e.  return v3 @kind object;
  #L2bb940.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.RGB_565_IN_CONFIGS` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L2bb944.  return v3 @kind object;
  #L2bb946.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.ARGB_8888_IN_CONFIGS` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L2bb94a.  return v3 @kind object;
}
procedure `java.util.NavigableMap` `getSizesForConfig`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v2 @kind this, `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getSizesForConfig:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2bbbac.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.sortedSizes` @type ^`java.util.Map` @kind object;
  #L2bbbb0.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bbbb6.  v0:= temp @kind object;
  #L2bbbb8.  v0:= (`java.util.NavigableMap`) v0 @kind object;
  #L2bbbbc.  if v0 != 0 then goto L2bbbd4;
  #L2bbbc0.  v0:= new `java.util.TreeMap`;
  #L2bbbc4.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L2bbbca.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.sortedSizes` @type ^`java.util.Map` @kind object;
  #L2bbbce.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bbbd4.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `get`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v2 @kind this, `int` v3 , `int` v4 , `android.graphics.Bitmap$Config` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bb83c.  call temp:= `getBitmapByteSize`(v3, v4, v5) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L2bb842.  v0:= temp;
  #L2bb844.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` @kind object;
  #L2bb848.  call temp:= `get`(v1, v0, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$KeyPool;.get:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;` @kind virtual;
  #L2bb84e.  v1:= temp @kind object;
  #L2bb850.  call temp:= `findBestKey`(v2, v1, v0, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.findBestKey:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;` @kind direct;
  #L2bb856.  v5:= temp @kind object;
  #L2bb858.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` @kind object;
  #L2bb85c.  call temp:= `get`(v0, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.get:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;)Ljava/lang/Object;` @kind virtual;
  #L2bb862.  v5:= temp @kind object;
  #L2bb864.  v5:= (`android.graphics.Bitmap`) v5 @kind object;
  #L2bb868.  if v5 == 0 then goto L2bb8aa;
  #L2bb86c.  call temp:= `getBitmapByteSize`(v5) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2bb872.  v0:= temp;
  #L2bb874.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb87a.  v0:= temp @kind object;
  #L2bb87c.  call temp:= `getConfig`(v5) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2bb882.  v1:= temp @kind object;
  #L2bb884.  call `decrementBitmapOfSize`(v2, v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.decrementBitmapOfSize:(Ljava/lang/Integer;Landroid/graphics/Bitmap$Config;)V` @kind direct;
  #L2bb88a.  call temp:= `getConfig`(v5) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2bb890.  v0:= temp @kind object;
  #L2bb892.  if v0 == 0 then goto L2bb8a0;
  #L2bb896.  call temp:= `getConfig`(v5) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2bb89c.  v0:= temp @kind object;
  #L2bb89e.  goto L2bb8a4;
  #L2bb8a0.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bb8a4.  call `reconfigure`(v5, v3, v4, v0) @signature `Landroid/graphics/Bitmap;.reconfigure:(IILandroid/graphics/Bitmap$Config;)V` @kind virtual;
  #L2bb8aa.  return v5 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getSize:(Landroid/graphics/Bitmap;)I` @AccessFlag PUBLIC {
    temp;

  #L2bb9fc.  call temp:= `getBitmapByteSize`(v1) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2bba02.  v1:= temp;
  #L2bba04.  return v1;
}
procedure `java.lang.String` `logBitmap`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v0 @kind this, `int` v1 , `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.logBitmap:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L2bbab0.  call temp:= `getBitmapByteSize`(v1, v2, v3) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L2bbab6.  v1:= temp;
  #L2bbab8.  call temp:= `getBitmapString`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getBitmapString:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L2bbabe.  v1:= temp @kind object;
  #L2bbac0.  return v1 @kind object;
}
procedure `java.lang.String` `logBitmap`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bba84.  call temp:= `getBitmapByteSize`(v2) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2bba8a.  v0:= temp;
  #L2bba8c.  call temp:= `getConfig`(v2) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2bba92.  v2:= temp @kind object;
  #L2bba94.  call temp:= `getBitmapString`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getBitmapString:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L2bba9a.  v2:= temp @kind object;
  #L2bba9c.  return v2 @kind object;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v3 @kind this, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.put:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bbce0.  call temp:= `getBitmapByteSize`(v4) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2bbce6.  v0:= temp;
  #L2bbce8.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` @kind object;
  #L2bbcec.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2bbcf2.  v2:= temp @kind object;
  #L2bbcf4.  call temp:= `get`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$KeyPool;.get:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;` @kind virtual;
  #L2bbcfa.  v0:= temp @kind object;
  #L2bbcfc.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` @kind object;
  #L2bbd00.  call `put`(v1, v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.put:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;Ljava/lang/Object;)V` @kind virtual;
  #L2bbd06.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2bbd0c.  v4:= temp @kind object;
  #L2bbd0e.  call temp:= `getSizesForConfig`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getSizesForConfig:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L2bbd14.  v4:= temp @kind object;
  #L2bbd16.  call temp:= `access$000`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.access$000:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;)I` @kind static;
  #L2bbd1c.  v1:= temp;
  #L2bbd1e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bbd24.  v1:= temp @kind object;
  #L2bbd26.  call temp:= `get`(v4, v1) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bbd2c.  v1:= temp @kind object;
  #L2bbd2e.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L2bbd32.  call temp:= `access$000`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.access$000:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;)I` @kind static;
  #L2bbd38.  v0:= temp;
  #L2bbd3a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bbd40.  v0:= temp @kind object;
  #L2bbd42.  v2:= 1I;
  #L2bbd44.  if v1 != 0 then goto L2bbd4a;
  #L2bbd48.  goto L2bbd54;
  #L2bbd4a.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bbd50.  v1:= temp;
  #L2bbd52.  v2:= v2 + v1 @kind int;
  #L2bbd54.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bbd5a.  v1:= temp @kind object;
  #L2bbd5c.  call temp:= `put`(v4, v0, v1) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bbd62.  return @kind void;
}
procedure `android.graphics.Bitmap` `removeLast`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.removeLast:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bb8bc.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` @kind object;
  #L2bb8c0.  call temp:= `removeLast`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L2bb8c6.  v0:= temp @kind object;
  #L2bb8c8.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L2bb8cc.  if v0 == 0 then goto L2bb8ee;
  #L2bb8d0.  call temp:= `getBitmapByteSize`(v0) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2bb8d6.  v1:= temp;
  #L2bb8d8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb8de.  v1:= temp @kind object;
  #L2bb8e0.  call temp:= `getConfig`(v0) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2bb8e6.  v2:= temp @kind object;
  #L2bb8e8.  call `decrementBitmapOfSize`(v3, v1, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.decrementBitmapOfSize:(Ljava/lang/Integer;Landroid/graphics/Bitmap$Config;)V` @kind direct;
  #L2bb8ee.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bbad4.  v0:= new `java.lang.StringBuilder`;
  #L2bbad8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bbade.  v1:= "SizeConfigStrategy{groupedMap=" @kind object;
  #L2bbae2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbae8.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` @kind object;
  #L2bbaec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbaf2.  v1:= ", sortedSizes=(" @kind object;
  #L2bbaf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbafc.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.sortedSizes` @type ^`java.util.Map` @kind object;
  #L2bbb00.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2bbb06.  v1:= temp @kind object;
  #L2bbb08.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2bbb0e.  v1:= temp @kind object;
  #L2bbb10.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2bbb16.  v2:= temp;
  #L2bbb18.  if v2 == 0 then goto L2bbb5a;
  #L2bbb1c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2bbb22.  v2:= temp @kind object;
  #L2bbb24.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L2bbb28.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2bbb2e.  v3:= temp @kind object;
  #L2bbb30.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbb36.  v3:= 91I;
  #L2bbb3a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbb40.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2bbb46.  v2:= temp @kind object;
  #L2bbb48.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbb4e.  v2:= "], " @kind object;
  #L2bbb52.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbb58.  goto L2bbb10;
  #L2bbb5a.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.sortedSizes` @type ^`java.util.Map` @kind object;
  #L2bbb5e.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2bbb64.  v1:= temp;
  #L2bbb66.  if v1 != 0 then goto L2bbb88;
  #L2bbb6a.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2bbb70.  v1:= temp;
  #L2bbb72.  v1:= v1 + -2;
  #L2bbb76.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2bbb7c.  v2:= temp;
  #L2bbb7e.  v3:= "" @kind object;
  #L2bbb82.  call temp:= `replace`(v0, v1, v2, v3) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbb88.  v1:= ")}" @kind object;
  #L2bbb8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbb92.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bbb98.  v0:= temp @kind object;
  #L2bbb9a.  return v0 @kind object;
}
