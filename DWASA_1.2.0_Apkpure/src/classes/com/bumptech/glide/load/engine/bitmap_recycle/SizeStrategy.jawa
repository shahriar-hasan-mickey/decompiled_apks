record `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.groupedMap` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.keyPool` @AccessFlag PRIVATE_FINAL;
  `java.util.TreeMap` `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.sortedSizes` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.MAX_SIZE_MULTIPLE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2bc0c4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bc0ca.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool`;
  #L2bc0ce.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.<init>:()V` @kind direct;
  #L2bc0d4.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` := v0 @kind object;
  #L2bc0d8.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap`;
  #L2bc0dc.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.<init>:()V` @kind direct;
  #L2bc0e2.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` := v0 @kind object;
  #L2bc0e6.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.PrettyPrintTreeMap`;
  #L2bc0ea.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/PrettyPrintTreeMap;.<init>:()V` @kind direct;
  #L2bc0f0.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.sortedSizes` @type ^`java.util.TreeMap` := v0 @kind object;
  #L2bc0f4.  return @kind void;
}
procedure `java.lang.String` `access$100`(`int` v0 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.access$100:(I)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bbfac.  call temp:= `getBitmapString`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.getBitmapString:(I)Ljava/lang/String;` @kind static;
  #L2bbfb2.  v0:= temp @kind object;
  #L2bbfb4.  return v0 @kind object;
}
procedure `void` `decrementBitmapOfSize`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` v3 @kind this, `java.lang.Integer` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.decrementBitmapOfSize:(Ljava/lang/Integer;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2bc108.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.sortedSizes` @type ^`java.util.TreeMap` @kind object;
  #L2bc10c.  call temp:= `get`(v0, v4) @signature `Ljava/util/TreeMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2bc112.  v0:= temp @kind object;
  #L2bc114.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2bc118.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bc11e.  v1:= temp;
  #L2bc120.  v2:= 1I;
  #L2bc122.  if v1 != v2 then goto L2bc132;
  #L2bc126.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.sortedSizes` @type ^`java.util.TreeMap` @kind object;
  #L2bc12a.  call temp:= `remove`(v0, v4) @signature `Ljava/util/TreeMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2bc130.  goto L2bc14e;
  #L2bc132.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.sortedSizes` @type ^`java.util.TreeMap` @kind object;
  #L2bc136.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bc13c.  v0:= temp;
  #L2bc13e.  v0:= v0 - v2 @kind int;
  #L2bc140.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bc146.  v0:= temp @kind object;
  #L2bc148.  call temp:= `put`(v1, v4, v0) @signature `Ljava/util/TreeMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2bc14e.  return @kind void;
}
procedure `java.lang.String` `getBitmapString`(`int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.getBitmapString:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2bbfec.  v0:= new `java.lang.StringBuilder`;
  #L2bbff0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bbff6.  v1:= "[" @kind object;
  #L2bbffa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bc000.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bc006.  v2:= "]" @kind object;
  #L2bc00a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bc010.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bc016.  v2:= temp @kind object;
  #L2bc018.  return v2 @kind object;
}
procedure `java.lang.String` `getBitmapString`(`android.graphics.Bitmap` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.getBitmapString:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2bbfc8.  call temp:= `getBitmapByteSize`(v0) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2bbfce.  v0:= temp;
  #L2bbfd0.  call temp:= `getBitmapString`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.getBitmapString:(I)Ljava/lang/String;` @kind static;
  #L2bbfd6.  v0:= temp @kind object;
  #L2bbfd8.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `get`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` v4 @kind this, `int` v5 , `int` v6 , `android.graphics.Bitmap$Config` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bbeb8.  call temp:= `getBitmapByteSize`(v5, v6, v7) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L2bbebe.  v0:= temp;
  #L2bbec0.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` @kind object;
  #L2bbec4.  call temp:= `get`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.get:(I)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;` @kind virtual;
  #L2bbeca.  v1:= temp @kind object;
  #L2bbecc.  v2:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.sortedSizes` @type ^`java.util.TreeMap` @kind object;
  #L2bbed0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bbed6.  v3:= temp @kind object;
  #L2bbed8.  call temp:= `ceilingKey`(v2, v3) @signature `Ljava/util/TreeMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2bbede.  v2:= temp @kind object;
  #L2bbee0.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L2bbee4.  if v2 == 0 then goto L2bbf22;
  #L2bbee8.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bbeee.  v3:= temp;
  #L2bbef0.  if v3 == v0 then goto L2bbf22;
  #L2bbef4.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bbefa.  v3:= temp;
  #L2bbefc.  v0:= v0 * 8;
  #L2bbf00.  if v3 > v0 then goto L2bbf22;
  #L2bbf04.  v0:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` @kind object;
  #L2bbf08.  call `offer`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.offer:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;)V` @kind virtual;
  #L2bbf0e.  v0:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` @kind object;
  #L2bbf12.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bbf18.  v1:= temp;
  #L2bbf1a.  call temp:= `get`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.get:(I)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;` @kind virtual;
  #L2bbf20.  v1:= temp @kind object;
  #L2bbf22.  v0:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` @kind object;
  #L2bbf26.  call temp:= `get`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.get:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;)Ljava/lang/Object;` @kind virtual;
  #L2bbf2c.  v0:= temp @kind object;
  #L2bbf2e.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L2bbf32.  if v0 == 0 then goto L2bbf42;
  #L2bbf36.  call `reconfigure`(v0, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.reconfigure:(IILandroid/graphics/Bitmap$Config;)V` @kind virtual;
  #L2bbf3c.  call `decrementBitmapOfSize`(v4, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.decrementBitmapOfSize:(Ljava/lang/Integer;)V` @kind direct;
  #L2bbf42.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.getSize:(Landroid/graphics/Bitmap;)I` @AccessFlag PUBLIC {
    temp;

  #L2bbf90.  call temp:= `getBitmapByteSize`(v1) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2bbf96.  v1:= temp;
  #L2bbf98.  return v1;
}
procedure `java.lang.String` `logBitmap`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` v0 @kind this, `int` v1 , `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.logBitmap:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L2bc048.  call temp:= `getBitmapByteSize`(v1, v2, v3) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L2bc04e.  v1:= temp;
  #L2bc050.  call temp:= `getBitmapString`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.getBitmapString:(I)Ljava/lang/String;` @kind static;
  #L2bc056.  v1:= temp @kind object;
  #L2bc058.  return v1 @kind object;
}
procedure `java.lang.String` `logBitmap`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L2bc02c.  call temp:= `getBitmapString`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.getBitmapString:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind static;
  #L2bc032.  v1:= temp @kind object;
  #L2bc034.  return v1 @kind object;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` v3 @kind this, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.put:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bc160.  call temp:= `getBitmapByteSize`(v4) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2bc166.  v0:= temp;
  #L2bc168.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.keyPool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` @kind object;
  #L2bc16c.  call temp:= `get`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.get:(I)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;` @kind virtual;
  #L2bc172.  v0:= temp @kind object;
  #L2bc174.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` @kind object;
  #L2bc178.  call `put`(v1, v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.put:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;Ljava/lang/Object;)V` @kind virtual;
  #L2bc17e.  v4:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.sortedSizes` @type ^`java.util.TreeMap` @kind object;
  #L2bc182.  call temp:= `access$000`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.access$000:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;)I` @kind static;
  #L2bc188.  v1:= temp;
  #L2bc18a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bc190.  v1:= temp @kind object;
  #L2bc192.  call temp:= `get`(v4, v1) @signature `Ljava/util/TreeMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2bc198.  v4:= temp @kind object;
  #L2bc19a.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L2bc19e.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.sortedSizes` @type ^`java.util.TreeMap` @kind object;
  #L2bc1a2.  call temp:= `access$000`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.access$000:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;)I` @kind static;
  #L2bc1a8.  v0:= temp;
  #L2bc1aa.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bc1b0.  v0:= temp @kind object;
  #L2bc1b2.  v2:= 1I;
  #L2bc1b4.  if v4 != 0 then goto L2bc1ba;
  #L2bc1b8.  goto L2bc1c4;
  #L2bc1ba.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bc1c0.  v4:= temp;
  #L2bc1c2.  v2:= v2 + v4 @kind int;
  #L2bc1c4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bc1ca.  v4:= temp @kind object;
  #L2bc1cc.  call temp:= `put`(v1, v0, v4) @signature `Ljava/util/TreeMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2bc1d2.  return @kind void;
}
procedure `android.graphics.Bitmap` `removeLast`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.removeLast:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bbf54.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` @kind object;
  #L2bbf58.  call temp:= `removeLast`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L2bbf5e.  v0:= temp @kind object;
  #L2bbf60.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L2bbf64.  if v0 == 0 then goto L2bbf7e;
  #L2bbf68.  call temp:= `getBitmapByteSize`(v0) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2bbf6e.  v1:= temp;
  #L2bbf70.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bbf76.  v1:= temp @kind object;
  #L2bbf78.  call `decrementBitmapOfSize`(v2, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.decrementBitmapOfSize:(Ljava/lang/Integer;)V` @kind direct;
  #L2bbf7e.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bc06c.  v0:= new `java.lang.StringBuilder`;
  #L2bc070.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bc076.  v1:= "SizeStrategy:\n  " @kind object;
  #L2bc07a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bc080.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.groupedMap` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` @kind object;
  #L2bc084.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bc08a.  v1:= "\n" @kind object;
  #L2bc08e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bc094.  v1:= "  SortedSizes" @kind object;
  #L2bc098.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bc09e.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.sortedSizes` @type ^`java.util.TreeMap` @kind object;
  #L2bc0a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bc0a8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bc0ae.  v0:= temp @kind object;
  #L2bc0b0.  return v0 @kind object;
}
