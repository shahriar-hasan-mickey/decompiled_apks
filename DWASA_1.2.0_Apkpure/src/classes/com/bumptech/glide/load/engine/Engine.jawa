record `com.bumptech.glide.load.engine.Engine` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.EngineJobListener` @kind interface, `com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` @kind interface, `com.bumptech.glide.load.engine.EngineResource$ResourceListener` @kind interface {
  `java.util.Map` `com.bumptech.glide.load.engine.Engine.activeResources` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.cache.MemoryCache` `com.bumptech.glide.load.engine.Engine.cache` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider` `com.bumptech.glide.load.engine.Engine.diskCacheProvider` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Engine$EngineJobFactory` `com.bumptech.glide.load.engine.Engine.engineJobFactory` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.Engine.jobs` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.EngineKeyFactory` `com.bumptech.glide.load.engine.Engine.keyFactory` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.ResourceRecycler` `com.bumptech.glide.load.engine.Engine.resourceRecycler` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.ReferenceQueue` `com.bumptech.glide.load.engine.Engine.resourceReferenceQueue` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.bumptech.glide.load.engine.Engine.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.engine.Engine` v10 @kind this, `com.bumptech.glide.load.engine.cache.MemoryCache` v11 @kind object, `com.bumptech.glide.load.engine.cache.DiskCache$Factory` v12 @kind object, `java.util.concurrent.ExecutorService` v13 @kind object, `java.util.concurrent.ExecutorService` v14 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.<init>:(Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2ba020.  v5:= 0I;
  #L2ba022.  v6:= 0I;
  #L2ba024.  v7:= 0I;
  #L2ba026.  v8:= 0I;
  #L2ba028.  v9:= 0I;
  #L2ba02a.  v0:= v10 @kind object;
  #L2ba02c.  v1:= v11 @kind object;
  #L2ba02e.  v2:= v12 @kind object;
  #L2ba030.  v3:= v13 @kind object;
  #L2ba032.  v4:= v14 @kind object;
  #L2ba034.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/load/engine/Engine;.<init>:(Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/Map;Lcom/bumptech/glide/load/engine/EngineKeyFactory;Ljava/util/Map;Lcom/bumptech/glide/load/engine/Engine$EngineJobFactory;Lcom/bumptech/glide/load/engine/ResourceRecycler;)V` @kind direct;
  #L2ba03a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.Engine` v1 @kind this, `com.bumptech.glide.load.engine.cache.MemoryCache` v2 @kind object, `com.bumptech.glide.load.engine.cache.DiskCache$Factory` v3 @kind object, `java.util.concurrent.ExecutorService` v4 @kind object, `java.util.concurrent.ExecutorService` v5 @kind object, `java.util.Map` v6 @kind object, `com.bumptech.glide.load.engine.EngineKeyFactory` v7 @kind object, `java.util.Map` v8 @kind object, `com.bumptech.glide.load.engine.Engine$EngineJobFactory` v9 @kind object, `com.bumptech.glide.load.engine.ResourceRecycler` v10 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.<init>:(Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/Map;Lcom/bumptech/glide/load/engine/EngineKeyFactory;Ljava/util/Map;Lcom/bumptech/glide/load/engine/Engine$EngineJobFactory;Lcom/bumptech/glide/load/engine/ResourceRecycler;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2ba04c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ba052.  v1.`com.bumptech.glide.load.engine.Engine.cache` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` := v2 @kind object;
  #L2ba056.  v0:= new `com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider`;
  #L2ba05a.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/Engine$LazyDiskCacheProvider;.<init>:(Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;)V` @kind direct;
  #L2ba060.  v1.`com.bumptech.glide.load.engine.Engine.diskCacheProvider` @type ^`com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider` := v0 @kind object;
  #L2ba064.  if v8 != 0 then goto L2ba072;
  #L2ba068.  v8:= new `java.util.HashMap`;
  #L2ba06c.  call `<init>`(v8) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2ba072.  v1.`com.bumptech.glide.load.engine.Engine.activeResources` @type ^`java.util.Map` := v8 @kind object;
  #L2ba076.  if v7 != 0 then goto L2ba084;
  #L2ba07a.  v7:= new `com.bumptech.glide.load.engine.EngineKeyFactory`;
  #L2ba07e.  call `<init>`(v7) @signature `Lcom/bumptech/glide/load/engine/EngineKeyFactory;.<init>:()V` @kind direct;
  #L2ba084.  v1.`com.bumptech.glide.load.engine.Engine.keyFactory` @type ^`com.bumptech.glide.load.engine.EngineKeyFactory` := v7 @kind object;
  #L2ba088.  if v6 != 0 then goto L2ba096;
  #L2ba08c.  v6:= new `java.util.HashMap`;
  #L2ba090.  call `<init>`(v6) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2ba096.  v1.`com.bumptech.glide.load.engine.Engine.jobs` @type ^`java.util.Map` := v6 @kind object;
  #L2ba09a.  if v9 != 0 then goto L2ba0a8;
  #L2ba09e.  v9:= new `com.bumptech.glide.load.engine.Engine$EngineJobFactory`;
  #L2ba0a2.  call `<init>`(v9, v4, v5, v1) @signature `Lcom/bumptech/glide/load/engine/Engine$EngineJobFactory;.<init>:(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;Lcom/bumptech/glide/load/engine/EngineJobListener;)V` @kind direct;
  #L2ba0a8.  v1.`com.bumptech.glide.load.engine.Engine.engineJobFactory` @type ^`com.bumptech.glide.load.engine.Engine$EngineJobFactory` := v9 @kind object;
  #L2ba0ac.  if v10 != 0 then goto L2ba0ba;
  #L2ba0b0.  v10:= new `com.bumptech.glide.load.engine.ResourceRecycler`;
  #L2ba0b4.  call `<init>`(v10) @signature `Lcom/bumptech/glide/load/engine/ResourceRecycler;.<init>:()V` @kind direct;
  #L2ba0ba.  v1.`com.bumptech.glide.load.engine.Engine.resourceRecycler` @type ^`com.bumptech.glide.load.engine.ResourceRecycler` := v10 @kind object;
  #L2ba0be.  call `setResourceRemovedListener`(v2, v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.setResourceRemovedListener:(Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;)V` @kind interface;
  #L2ba0c4.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.EngineResource` `getEngineResourceFromCache`(`com.bumptech.glide.load.engine.Engine` v2 @kind this, `com.bumptech.glide.load.Key` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.getEngineResourceFromCache:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/EngineResource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2b9ef4.  v0:= v2.`com.bumptech.glide.load.engine.Engine.cache` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L2b9ef8.  call temp:= `remove`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.remove:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2b9efe.  v3:= temp @kind object;
  #L2b9f00.  if v3 != 0 then goto L2b9f08;
  #L2b9f04.  v3:= 0I;
  #L2b9f06.  goto L2b9f24;
  #L2b9f08.  v0:= instanceof @variable v3 @type ^`com.bumptech.glide.load.engine.EngineResource` @kind boolean;
  #L2b9f0c.  if v0 == 0 then goto L2b9f16;
  #L2b9f10.  v3:= (`com.bumptech.glide.load.engine.EngineResource`) v3 @kind object;
  #L2b9f14.  goto L2b9f24;
  #L2b9f16.  v0:= new `com.bumptech.glide.load.engine.EngineResource`;
  #L2b9f1a.  v1:= 1I;
  #L2b9f1c.  call `<init>`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/engine/EngineResource;.<init>:(Lcom/bumptech/glide/load/engine/Resource;Z)V` @kind direct;
  #L2b9f22.  v3:= v0 @kind object;
  #L2b9f24.  return v3 @kind object;
}
procedure `java.lang.ref.ReferenceQueue` `getReferenceQueue`(`com.bumptech.glide.load.engine.Engine` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine;.getReferenceQueue:()Ljava/lang/ref/ReferenceQueue;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b9fd4.  v0:= v4.`com.bumptech.glide.load.engine.Engine.resourceReferenceQueue` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L2b9fd8.  if v0 != 0 then goto L2ba00a;
  #L2b9fdc.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L2b9fe0.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L2b9fe6.  v4.`com.bumptech.glide.load.engine.Engine.resourceReferenceQueue` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L2b9fea.  call temp:= `myQueue`() @signature `Landroid/os/Looper;.myQueue:()Landroid/os/MessageQueue;` @kind static;
  #L2b9ff0.  v0:= temp @kind object;
  #L2b9ff2.  v1:= new `com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler`;
  #L2b9ff6.  v2:= v4.`com.bumptech.glide.load.engine.Engine.activeResources` @type ^`java.util.Map` @kind object;
  #L2b9ffa.  v3:= v4.`com.bumptech.glide.load.engine.Engine.resourceReferenceQueue` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L2b9ffe.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/Engine$RefQueueIdleHandler;.<init>:(Ljava/util/Map;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L2ba004.  call `addIdleHandler`(v0, v1) @signature `Landroid/os/MessageQueue;.addIdleHandler:(Landroid/os/MessageQueue$IdleHandler;)V` @kind virtual;
  #L2ba00a.  v0:= v4.`com.bumptech.glide.load.engine.Engine.resourceReferenceQueue` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L2ba00e.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.EngineResource` `loadFromActiveResources`(`com.bumptech.glide.load.engine.Engine` v1 @kind this, `com.bumptech.glide.load.Key` v2 @kind object, `boolean` v3 ) @signature `Lcom/bumptech/glide/load/engine/Engine;.loadFromActiveResources:(Lcom/bumptech/glide/load/Key;Z)Lcom/bumptech/glide/load/engine/EngineResource;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2b9f38.  v0:= 0I;
  #L2b9f3a.  if v3 != 0 then goto L2b9f40;
  #L2b9f3e.  return v0 @kind object;
  #L2b9f40.  v3:= v1.`com.bumptech.glide.load.engine.Engine.activeResources` @type ^`java.util.Map` @kind object;
  #L2b9f44.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b9f4a.  v3:= temp @kind object;
  #L2b9f4c.  v3:= (`java.lang.ref.WeakReference`) v3 @kind object;
  #L2b9f50.  if v3 == 0 then goto L2b9f78;
  #L2b9f54.  call temp:= `get`(v3) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2b9f5a.  v3:= temp @kind object;
  #L2b9f5c.  v0:= v3 @kind object;
  #L2b9f5e.  v0:= (`com.bumptech.glide.load.engine.EngineResource`) v0 @kind object;
  #L2b9f62.  if v0 == 0 then goto L2b9f6e;
  #L2b9f66.  call `acquire`(v0) @signature `Lcom/bumptech/glide/load/engine/EngineResource;.acquire:()V` @kind virtual;
  #L2b9f6c.  goto L2b9f78;
  #L2b9f6e.  v3:= v1.`com.bumptech.glide.load.engine.Engine.activeResources` @type ^`java.util.Map` @kind object;
  #L2b9f72.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b9f78.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.EngineResource` `loadFromCache`(`com.bumptech.glide.load.engine.Engine` v3 @kind this, `com.bumptech.glide.load.Key` v4 @kind object, `boolean` v5 ) @signature `Lcom/bumptech/glide/load/engine/Engine;.loadFromCache:(Lcom/bumptech/glide/load/Key;Z)Lcom/bumptech/glide/load/engine/EngineResource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2b9f8c.  if v5 != 0 then goto L2b9f94;
  #L2b9f90.  v4:= 0I;
  #L2b9f92.  return v4 @kind object;
  #L2b9f94.  call temp:= `getEngineResourceFromCache`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/Engine;.getEngineResourceFromCache:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/EngineResource;` @kind direct;
  #L2b9f9a.  v5:= temp @kind object;
  #L2b9f9c.  if v5 == 0 then goto L2b9fc2;
  #L2b9fa0.  call `acquire`(v5) @signature `Lcom/bumptech/glide/load/engine/EngineResource;.acquire:()V` @kind virtual;
  #L2b9fa6.  v0:= v3.`com.bumptech.glide.load.engine.Engine.activeResources` @type ^`java.util.Map` @kind object;
  #L2b9faa.  v1:= new `com.bumptech.glide.load.engine.Engine$ResourceWeakReference`;
  #L2b9fae.  call temp:= `getReferenceQueue`(v3) @signature `Lcom/bumptech/glide/load/engine/Engine;.getReferenceQueue:()Ljava/lang/ref/ReferenceQueue;` @kind direct;
  #L2b9fb4.  v2:= temp @kind object;
  #L2b9fb6.  call `<init>`(v1, v4, v5, v2) @signature `Lcom/bumptech/glide/load/engine/Engine$ResourceWeakReference;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/EngineResource;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L2b9fbc.  call temp:= `put`(v0, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b9fc2.  return v5 @kind object;
}
procedure `void` `logWithTimeAndKey`(`java.lang.String` v1 @kind object, `long` v2 , `com.bumptech.glide.load.Key` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.logWithTimeAndKey:(Ljava/lang/String;JLcom/bumptech/glide/load/Key;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2ba0fc.  v0:= new `java.lang.StringBuilder`;
  #L2ba100.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ba106.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba10c.  v1:= " in " @kind object;
  #L2ba110.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba116.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L2ba11c.  v1:= temp @kind wide;
  #L2ba11e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba124.  v1:= "ms, key: " @kind object;
  #L2ba128.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba12e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba134.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ba13a.  v1:= temp @kind object;
  #L2ba13c.  v2:= "Engine" @kind object;
  #L2ba140.  call temp:= `v`(v2, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2ba146.  return @kind void;
}
procedure `void` `clearDiskCache`(`com.bumptech.glide.load.engine.Engine` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine;.clearDiskCache:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ba0d8.  v0:= v1.`com.bumptech.glide.load.engine.Engine.diskCacheProvider` @type ^`com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider` @kind object;
  #L2ba0dc.  call temp:= `getDiskCache`(v0) @signature `Lcom/bumptech/glide/load/engine/Engine$LazyDiskCacheProvider;.getDiskCache:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind virtual;
  #L2ba0e2.  v0:= temp @kind object;
  #L2ba0e4.  call `clear`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.clear:()V` @kind interface;
  #L2ba0ea.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Engine$LoadStatus` `load`(`com.bumptech.glide.load.engine.Engine` v27 @kind this, `com.bumptech.glide.load.Key` v28 @kind object, `int` v29 , `int` v30 , `com.bumptech.glide.load.data.DataFetcher` v31 @kind object, `com.bumptech.glide.provider.DataLoadProvider` v32 @kind object, `com.bumptech.glide.load.Transformation` v33 @kind object, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v34 @kind object, `com.bumptech.glide.Priority` v35 @kind object, `boolean` v36 , `com.bumptech.glide.load.engine.DiskCacheStrategy` v37 @kind object, `com.bumptech.glide.request.ResourceCallback` v38 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.load:(Lcom/bumptech/glide/load/Key;IILcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/provider/DataLoadProvider;Lcom/bumptech/glide/load/Transformation;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Lcom/bumptech/glide/Priority;ZLcom/bumptech/glide/load/engine/DiskCacheStrategy;Lcom/bumptech/glide/request/ResourceCallback;)Lcom/bumptech/glide/load/engine/Engine$LoadStatus;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;

  #L2b9d5c.  v0:= v27 @kind object;
  #L2b9d60.  v1:= v36;
  #L2b9d64.  v2:= v38 @kind object;
  #L2b9d68.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L2b9d6e.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b9d74.  v3:= temp @kind wide;
  #L2b9d76.  call temp:= `getId`(v31) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getId:()Ljava/lang/String;` @kind interface;
  #L2b9d7c.  v6:= temp @kind object;
  #L2b9d7e.  v5:= v0.`com.bumptech.glide.load.engine.Engine.keyFactory` @type ^`com.bumptech.glide.load.engine.EngineKeyFactory` @kind object;
  #L2b9d82.  call temp:= `getCacheDecoder`(v32) @signature `Lcom/bumptech/glide/provider/DataLoadProvider;.getCacheDecoder:()Lcom/bumptech/glide/load/ResourceDecoder;` @kind interface;
  #L2b9d88.  v10:= temp @kind object;
  #L2b9d8a.  call temp:= `getSourceDecoder`(v32) @signature `Lcom/bumptech/glide/provider/DataLoadProvider;.getSourceDecoder:()Lcom/bumptech/glide/load/ResourceDecoder;` @kind interface;
  #L2b9d90.  v11:= temp @kind object;
  #L2b9d92.  call temp:= `getEncoder`(v32) @signature `Lcom/bumptech/glide/provider/DataLoadProvider;.getEncoder:()Lcom/bumptech/glide/load/ResourceEncoder;` @kind interface;
  #L2b9d98.  v13:= temp @kind object;
  #L2b9d9a.  call temp:= `getSourceEncoder`(v32) @signature `Lcom/bumptech/glide/provider/DataLoadProvider;.getSourceEncoder:()Lcom/bumptech/glide/load/Encoder;` @kind interface;
  #L2b9da0.  v15:= temp @kind object;
  #L2b9da2.  v7:= v28 @kind object;
  #L2b9da6.  v8:= v29;
  #L2b9daa.  v9:= v30;
  #L2b9dae.  v12:= v33 @kind object;
  #L2b9db2.  v14:= v34 @kind object;
  #L2b9db6.  call temp:= `buildKey`(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lcom/bumptech/glide/load/engine/EngineKeyFactory;.buildKey:(Ljava/lang/String;Lcom/bumptech/glide/load/Key;IILcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/Transformation;Lcom/bumptech/glide/load/ResourceEncoder;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Lcom/bumptech/glide/load/Encoder;)Lcom/bumptech/glide/load/engine/EngineKey;` @kind virtual;
  #L2b9dbc.  v5:= temp @kind object;
  #L2b9dbe.  call temp:= `loadFromCache`(v0, v5, v1) @signature `Lcom/bumptech/glide/load/engine/Engine;.loadFromCache:(Lcom/bumptech/glide/load/Key;Z)Lcom/bumptech/glide/load/engine/EngineResource;` @kind direct;
  #L2b9dc4.  v6:= temp @kind object;
  #L2b9dc6.  v7:= 0I;
  #L2b9dc8.  v8:= 2I;
  #L2b9dca.  v9:= "Engine" @kind object;
  #L2b9dce.  if v6 == 0 then goto L2b9df0;
  #L2b9dd2.  call `onResourceReady`(v2, v6) @signature `Lcom/bumptech/glide/request/ResourceCallback;.onResourceReady:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind interface;
  #L2b9dd8.  call temp:= `isLoggable`(v9, v8) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b9dde.  v1:= temp;
  #L2b9de0.  if v1 == 0 then goto L2b9dee;
  #L2b9de4.  v1:= "Loaded resource from cache" @kind object;
  #L2b9de8.  call `logWithTimeAndKey`(v1, v3, v5) @signature `Lcom/bumptech/glide/load/engine/Engine;.logWithTimeAndKey:(Ljava/lang/String;JLcom/bumptech/glide/load/Key;)V` @kind static;
  #L2b9dee.  return v7 @kind object;
  #L2b9df0.  call temp:= `loadFromActiveResources`(v0, v5, v1) @signature `Lcom/bumptech/glide/load/engine/Engine;.loadFromActiveResources:(Lcom/bumptech/glide/load/Key;Z)Lcom/bumptech/glide/load/engine/EngineResource;` @kind direct;
  #L2b9df6.  v6:= temp @kind object;
  #L2b9df8.  if v6 == 0 then goto L2b9e1a;
  #L2b9dfc.  call `onResourceReady`(v2, v6) @signature `Lcom/bumptech/glide/request/ResourceCallback;.onResourceReady:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind interface;
  #L2b9e02.  call temp:= `isLoggable`(v9, v8) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b9e08.  v1:= temp;
  #L2b9e0a.  if v1 == 0 then goto L2b9e18;
  #L2b9e0e.  v1:= "Loaded resource from active resources" @kind object;
  #L2b9e12.  call `logWithTimeAndKey`(v1, v3, v5) @signature `Lcom/bumptech/glide/load/engine/Engine;.logWithTimeAndKey:(Ljava/lang/String;JLcom/bumptech/glide/load/Key;)V` @kind static;
  #L2b9e18.  return v7 @kind object;
  #L2b9e1a.  v6:= v0.`com.bumptech.glide.load.engine.Engine.jobs` @type ^`java.util.Map` @kind object;
  #L2b9e1e.  call temp:= `get`(v6, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b9e24.  v6:= temp @kind object;
  #L2b9e26.  v6:= (`com.bumptech.glide.load.engine.EngineJob`) v6 @kind object;
  #L2b9e2a.  if v6 == 0 then goto L2b9e56;
  #L2b9e2e.  call `addCallback`(v6, v2) @signature `Lcom/bumptech/glide/load/engine/EngineJob;.addCallback:(Lcom/bumptech/glide/request/ResourceCallback;)V` @kind virtual;
  #L2b9e34.  call temp:= `isLoggable`(v9, v8) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b9e3a.  v1:= temp;
  #L2b9e3c.  if v1 == 0 then goto L2b9e4a;
  #L2b9e40.  v1:= "Added to existing load" @kind object;
  #L2b9e44.  call `logWithTimeAndKey`(v1, v3, v5) @signature `Lcom/bumptech/glide/load/engine/Engine;.logWithTimeAndKey:(Ljava/lang/String;JLcom/bumptech/glide/load/Key;)V` @kind static;
  #L2b9e4a.  v1:= new `com.bumptech.glide.load.engine.Engine$LoadStatus`;
  #L2b9e4e.  call `<init>`(v1, v2, v6) @signature `Lcom/bumptech/glide/load/engine/Engine$LoadStatus;.<init>:(Lcom/bumptech/glide/request/ResourceCallback;Lcom/bumptech/glide/load/engine/EngineJob;)V` @kind direct;
  #L2b9e54.  return v1 @kind object;
  #L2b9e56.  v6:= v0.`com.bumptech.glide.load.engine.Engine.engineJobFactory` @type ^`com.bumptech.glide.load.engine.Engine$EngineJobFactory` @kind object;
  #L2b9e5a.  call temp:= `build`(v6, v5, v1) @signature `Lcom/bumptech/glide/load/engine/Engine$EngineJobFactory;.build:(Lcom/bumptech/glide/load/Key;Z)Lcom/bumptech/glide/load/engine/EngineJob;` @kind virtual;
  #L2b9e60.  v1:= temp @kind object;
  #L2b9e62.  v6:= new `com.bumptech.glide.load.engine.DecodeJob`;
  #L2b9e66.  v7:= v0.`com.bumptech.glide.load.engine.Engine.diskCacheProvider` @type ^`com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider` @kind object;
  #L2b9e6a.  v16:= v6 @kind object;
  #L2b9e6e.  v17:= v5 @kind object;
  #L2b9e72.  v18:= v29;
  #L2b9e76.  v19:= v30;
  #L2b9e7a.  v20:= v31 @kind object;
  #L2b9e7e.  v21:= v32 @kind object;
  #L2b9e82.  v22:= v33 @kind object;
  #L2b9e86.  v23:= v34 @kind object;
  #L2b9e8a.  v24:= v7 @kind object;
  #L2b9e8e.  v25:= v37 @kind object;
  #L2b9e92.  v26:= v35 @kind object;
  #L2b9e96.  call `<init>`(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.<init>:(Lcom/bumptech/glide/load/engine/EngineKey;IILcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/provider/DataLoadProvider;Lcom/bumptech/glide/load/Transformation;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Lcom/bumptech/glide/load/engine/DecodeJob$DiskCacheProvider;Lcom/bumptech/glide/load/engine/DiskCacheStrategy;Lcom/bumptech/glide/Priority;)V` @kind direct;
  #L2b9e9c.  v7:= new `com.bumptech.glide.load.engine.EngineRunnable`;
  #L2b9ea0.  v10:= v35 @kind object;
  #L2b9ea4.  call `<init>`(v7, v1, v6, v10) @signature `Lcom/bumptech/glide/load/engine/EngineRunnable;.<init>:(Lcom/bumptech/glide/load/engine/EngineRunnable$EngineRunnableManager;Lcom/bumptech/glide/load/engine/DecodeJob;Lcom/bumptech/glide/Priority;)V` @kind direct;
  #L2b9eaa.  v6:= v0.`com.bumptech.glide.load.engine.Engine.jobs` @type ^`java.util.Map` @kind object;
  #L2b9eae.  call temp:= `put`(v6, v5, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b9eb4.  call `addCallback`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/EngineJob;.addCallback:(Lcom/bumptech/glide/request/ResourceCallback;)V` @kind virtual;
  #L2b9eba.  call `start`(v1, v7) @signature `Lcom/bumptech/glide/load/engine/EngineJob;.start:(Lcom/bumptech/glide/load/engine/EngineRunnable;)V` @kind virtual;
  #L2b9ec0.  call temp:= `isLoggable`(v9, v8) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b9ec6.  v6:= temp;
  #L2b9ec8.  if v6 == 0 then goto L2b9ed6;
  #L2b9ecc.  v6:= "Started new load" @kind object;
  #L2b9ed0.  call `logWithTimeAndKey`(v6, v3, v5) @signature `Lcom/bumptech/glide/load/engine/Engine;.logWithTimeAndKey:(Ljava/lang/String;JLcom/bumptech/glide/load/Key;)V` @kind static;
  #L2b9ed6.  v3:= new `com.bumptech.glide.load.engine.Engine$LoadStatus`;
  #L2b9eda.  call `<init>`(v3, v2, v1) @signature `Lcom/bumptech/glide/load/engine/Engine$LoadStatus;.<init>:(Lcom/bumptech/glide/request/ResourceCallback;Lcom/bumptech/glide/load/engine/EngineJob;)V` @kind direct;
  #L2b9ee0.  return v3 @kind object;
}
procedure `void` `onEngineJobCancelled`(`com.bumptech.glide.load.engine.Engine` v1 @kind this, `com.bumptech.glide.load.engine.EngineJob` v2 @kind object, `com.bumptech.glide.load.Key` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.onEngineJobCancelled:(Lcom/bumptech/glide/load/engine/EngineJob;Lcom/bumptech/glide/load/Key;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ba158.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L2ba15e.  v0:= v1.`com.bumptech.glide.load.engine.Engine.jobs` @type ^`java.util.Map` @kind object;
  #L2ba162.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ba168.  v0:= temp @kind object;
  #L2ba16a.  v0:= (`com.bumptech.glide.load.engine.EngineJob`) v0 @kind object;
  #L2ba16e.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ba174.  v2:= temp;
  #L2ba176.  if v2 == 0 then goto L2ba184;
  #L2ba17a.  v2:= v1.`com.bumptech.glide.load.engine.Engine.jobs` @type ^`java.util.Map` @kind object;
  #L2ba17e.  call temp:= `remove`(v2, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ba184.  return @kind void;
}
procedure `void` `onEngineJobComplete`(`com.bumptech.glide.load.engine.Engine` v3 @kind this, `com.bumptech.glide.load.Key` v4 @kind object, `com.bumptech.glide.load.engine.EngineResource` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.onEngineJobComplete:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/EngineResource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ba198.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L2ba19e.  if v5 == 0 then goto L2ba1d0;
  #L2ba1a2.  call `setResourceListener`(v5, v4, v3) @signature `Lcom/bumptech/glide/load/engine/EngineResource;.setResourceListener:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/EngineResource$ResourceListener;)V` @kind virtual;
  #L2ba1a8.  call temp:= `isCacheable`(v5) @signature `Lcom/bumptech/glide/load/engine/EngineResource;.isCacheable:()Z` @kind virtual;
  #L2ba1ae.  v0:= temp;
  #L2ba1b0.  if v0 == 0 then goto L2ba1d0;
  #L2ba1b4.  v0:= v3.`com.bumptech.glide.load.engine.Engine.activeResources` @type ^`java.util.Map` @kind object;
  #L2ba1b8.  v1:= new `com.bumptech.glide.load.engine.Engine$ResourceWeakReference`;
  #L2ba1bc.  call temp:= `getReferenceQueue`(v3) @signature `Lcom/bumptech/glide/load/engine/Engine;.getReferenceQueue:()Ljava/lang/ref/ReferenceQueue;` @kind direct;
  #L2ba1c2.  v2:= temp @kind object;
  #L2ba1c4.  call `<init>`(v1, v4, v5, v2) @signature `Lcom/bumptech/glide/load/engine/Engine$ResourceWeakReference;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/EngineResource;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L2ba1ca.  call temp:= `put`(v0, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ba1d0.  v5:= v3.`com.bumptech.glide.load.engine.Engine.jobs` @type ^`java.util.Map` @kind object;
  #L2ba1d4.  call temp:= `remove`(v5, v4) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ba1da.  return @kind void;
}
procedure `void` `onResourceReleased`(`com.bumptech.glide.load.engine.Engine` v1 @kind this, `com.bumptech.glide.load.Key` v2 @kind object, `com.bumptech.glide.load.engine.EngineResource` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.onResourceReleased:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/EngineResource;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ba1ec.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L2ba1f2.  v0:= v1.`com.bumptech.glide.load.engine.Engine.activeResources` @type ^`java.util.Map` @kind object;
  #L2ba1f6.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ba1fc.  call temp:= `isCacheable`(v3) @signature `Lcom/bumptech/glide/load/engine/EngineResource;.isCacheable:()Z` @kind virtual;
  #L2ba202.  v0:= temp;
  #L2ba204.  if v0 == 0 then goto L2ba214;
  #L2ba208.  v0:= v1.`com.bumptech.glide.load.engine.Engine.cache` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L2ba20c.  call temp:= `put`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2ba212.  goto L2ba21e;
  #L2ba214.  v2:= v1.`com.bumptech.glide.load.engine.Engine.resourceRecycler` @type ^`com.bumptech.glide.load.engine.ResourceRecycler` @kind object;
  #L2ba218.  call `recycle`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/ResourceRecycler;.recycle:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L2ba21e.  return @kind void;
}
procedure `void` `onResourceRemoved`(`com.bumptech.glide.load.engine.Engine` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.onResourceRemoved:(Lcom/bumptech/glide/load/engine/Resource;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ba230.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L2ba236.  v0:= v1.`com.bumptech.glide.load.engine.Engine.resourceRecycler` @type ^`com.bumptech.glide.load.engine.ResourceRecycler` @kind object;
  #L2ba23a.  call `recycle`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/ResourceRecycler;.recycle:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L2ba240.  return @kind void;
}
procedure `void` `release`(`com.bumptech.glide.load.engine.Engine` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine;.release:(Lcom/bumptech/glide/load/engine/Resource;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ba254.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L2ba25a.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.engine.EngineResource` @kind boolean;
  #L2ba25e.  if v0 == 0 then goto L2ba26e;
  #L2ba262.  v2:= (`com.bumptech.glide.load.engine.EngineResource`) v2 @kind object;
  #L2ba266.  call `release`(v2) @signature `Lcom/bumptech/glide/load/engine/EngineResource;.release:()V` @kind virtual;
  #L2ba26c.  return @kind void;
  #L2ba26e.  v2:= new `java.lang.IllegalArgumentException`;
  #L2ba272.  v0:= "Cannot release anything but an EngineResource" @kind object;
  #L2ba276.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ba27c.  throw v2;
}
