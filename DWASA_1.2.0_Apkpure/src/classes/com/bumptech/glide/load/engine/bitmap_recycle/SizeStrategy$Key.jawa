record `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.Poolable` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.pool` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.size` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bbe68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bbe6e.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.pool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` := v1 @kind object;
  #L2bbe72.  return @kind void;
}
procedure `int` `access$000`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.access$000:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bbe18.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.size` @type ^`int`;
  #L2bbe1c.  return v0;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bbde8.  v0:= instanceof @variable v3 @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` @kind boolean;
  #L2bbdec.  v1:= 0I;
  #L2bbdee.  if v0 == 0 then goto L2bbe04;
  #L2bbdf2.  v3:= (`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key`) v3 @kind object;
  #L2bbdf6.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.size` @type ^`int`;
  #L2bbdfa.  v3:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.size` @type ^`int`;
  #L2bbdfe.  if v0 != v3 then goto L2bbe04;
  #L2bbe02.  v1:= 1I;
  #L2bbe04.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bbe30.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.size` @type ^`int`;
  #L2bbe34.  return v0;
}
procedure `void` `init`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.init:(I)V` @AccessFlag PUBLIC {
    temp;

  #L2bbe84.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.size` @type ^`int` := v1;
  #L2bbe88.  return @kind void;
}
procedure `void` `offer`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.offer:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bbe9c.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.pool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` @kind object;
  #L2bbea0.  call `offer`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.offer:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;)V` @kind virtual;
  #L2bbea6.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bbe48.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key.size` @type ^`int`;
  #L2bbe4c.  call temp:= `access$100`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy;.access$100:(I)Ljava/lang/String;` @kind static;
  #L2bbe52.  v0:= temp @kind object;
  #L2bbe54.  return v0 @kind object;
}
