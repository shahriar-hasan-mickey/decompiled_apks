record `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.Poolable` @kind interface {
  `android.graphics.Bitmap$Config` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.config` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.pool` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.size` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$KeyPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2bb7c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bb7ce.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.pool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` := v1 @kind object;
  #L2bb7d2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` v1 @kind object, `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$KeyPool;ILandroid/graphics/Bitmap$Config;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bb7e4.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$KeyPool;)V` @kind direct;
  #L2bb7ea.  call `init`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.init:(ILandroid/graphics/Bitmap$Config;)V` @kind virtual;
  #L2bb7f0.  return @kind void;
}
procedure `int` `access$000`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.access$000:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bb75c.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.size` @type ^`int`;
  #L2bb760.  return v0;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bb710.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` @kind boolean;
  #L2bb714.  v1:= 0I;
  #L2bb716.  if v0 == 0 then goto L2bb74a;
  #L2bb71a.  v4:= (`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key`) v4 @kind object;
  #L2bb71e.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.size` @type ^`int`;
  #L2bb722.  v2:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.size` @type ^`int`;
  #L2bb726.  if v0 != v2 then goto L2bb74a;
  #L2bb72a.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bb72e.  v4:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bb732.  if v0 != 0 then goto L2bb73c;
  #L2bb736.  if v4 != 0 then goto L2bb74a;
  #L2bb73a.  goto L2bb748;
  #L2bb73c.  call temp:= `equals`(v0, v4) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2bb742.  v4:= temp;
  #L2bb744.  if v4 == 0 then goto L2bb74a;
  #L2bb748.  v1:= 1I;
  #L2bb74a.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bb774.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.size` @type ^`int`;
  #L2bb778.  v0:= v0 * 31;
  #L2bb77c.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bb780.  if v1 == 0 then goto L2bb78e;
  #L2bb784.  call temp:= `hashCode`(v1) @signature `Landroid/graphics/Bitmap$Config;.hashCode:()I` @kind virtual;
  #L2bb78a.  v1:= temp;
  #L2bb78c.  goto L2bb790;
  #L2bb78e.  v1:= 0I;
  #L2bb790.  v0:= v0 + v1 @kind int;
  #L2bb792.  return v0;
}
procedure `void` `init`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` v0 @kind this, `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.init:(ILandroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC {
    temp;

  #L2bb804.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.size` @type ^`int` := v1;
  #L2bb808.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.config` @type ^`android.graphics.Bitmap$Config` := v2 @kind object;
  #L2bb80c.  return @kind void;
}
procedure `void` `offer`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.offer:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bb820.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.pool` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool` @kind object;
  #L2bb824.  call `offer`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$KeyPool;.offer:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;)V` @kind virtual;
  #L2bb82a.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$Key;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bb7a4.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.size` @type ^`int`;
  #L2bb7a8.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bb7ac.  call temp:= `access$100`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.access$100:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L2bb7b2.  v0:= temp @kind object;
  #L2bb7b4.  return v0 @kind object;
}
