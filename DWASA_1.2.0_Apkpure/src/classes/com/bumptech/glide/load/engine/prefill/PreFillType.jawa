record `com.bumptech.glide.load.engine.prefill.PreFillType` @kind class @AccessFlag PUBLIC_FINAL {
  `android.graphics.Bitmap$Config` `com.bumptech.glide.load.engine.prefill.PreFillType.config` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillType.height` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillType.weight` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillType.width` @AccessFlag PRIVATE_FINAL;
}
global `android.graphics.Bitmap$Config` `@@com.bumptech.glide.load.engine.prefill.PreFillType.DEFAULT_CONFIG` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bde18.  v0:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bde1c.  `@@com.bumptech.glide.load.engine.prefill.PreFillType.DEFAULT_CONFIG` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L2bde20.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.PreFillType` v0 @kind this, `int` v1 , `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object, `int` v4 ) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.<init>:(IILandroid/graphics/Bitmap$Config;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bde34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bde3a.  if v3 == 0 then goto L2bde50;
  #L2bde3e.  v0.`com.bumptech.glide.load.engine.prefill.PreFillType.width` @type ^`int` := v1;
  #L2bde42.  v0.`com.bumptech.glide.load.engine.prefill.PreFillType.height` @type ^`int` := v2;
  #L2bde46.  v0.`com.bumptech.glide.load.engine.prefill.PreFillType.config` @type ^`android.graphics.Bitmap$Config` := v3 @kind object;
  #L2bde4a.  v0.`com.bumptech.glide.load.engine.prefill.PreFillType.weight` @type ^`int` := v4;
  #L2bde4e.  return @kind void;
  #L2bde50.  v1:= new `java.lang.NullPointerException`;
  #L2bde54.  v2:= "Config must not be null" @kind object;
  #L2bde58.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bde5e.  throw v1;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.prefill.PreFillType` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bdcc0.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.prefill.PreFillType` @kind boolean;
  #L2bdcc4.  v1:= 0I;
  #L2bdcc6.  if v0 == 0 then goto L2bdd00;
  #L2bdcca.  v4:= (`com.bumptech.glide.load.engine.prefill.PreFillType`) v4 @kind object;
  #L2bdcce.  v0:= v3.`com.bumptech.glide.load.engine.prefill.PreFillType.height` @type ^`int`;
  #L2bdcd2.  v2:= v4.`com.bumptech.glide.load.engine.prefill.PreFillType.height` @type ^`int`;
  #L2bdcd6.  if v0 != v2 then goto L2bdd00;
  #L2bdcda.  v0:= v3.`com.bumptech.glide.load.engine.prefill.PreFillType.width` @type ^`int`;
  #L2bdcde.  v2:= v4.`com.bumptech.glide.load.engine.prefill.PreFillType.width` @type ^`int`;
  #L2bdce2.  if v0 != v2 then goto L2bdd00;
  #L2bdce6.  v0:= v3.`com.bumptech.glide.load.engine.prefill.PreFillType.weight` @type ^`int`;
  #L2bdcea.  v2:= v4.`com.bumptech.glide.load.engine.prefill.PreFillType.weight` @type ^`int`;
  #L2bdcee.  if v0 != v2 then goto L2bdd00;
  #L2bdcf2.  v0:= v3.`com.bumptech.glide.load.engine.prefill.PreFillType.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bdcf6.  v4:= v4.`com.bumptech.glide.load.engine.prefill.PreFillType.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bdcfa.  if v0 != v4 then goto L2bdd00;
  #L2bdcfe.  v1:= 1I;
  #L2bdd00.  return v1;
}
procedure `android.graphics.Bitmap$Config` `getConfig`(`com.bumptech.glide.load.engine.prefill.PreFillType` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.getConfig:()Landroid/graphics/Bitmap$Config;` @AccessFlag  {
    temp;
    v0;

  #L2bdca8.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillType.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bdcac.  return v0 @kind object;
}
procedure `int` `getHeight`(`com.bumptech.glide.load.engine.prefill.PreFillType` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.getHeight:()I` @AccessFlag  {
    temp;
    v0;

  #L2bdd14.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillType.height` @type ^`int`;
  #L2bdd18.  return v0;
}
procedure `int` `getWeight`(`com.bumptech.glide.load.engine.prefill.PreFillType` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.getWeight:()I` @AccessFlag  {
    temp;
    v0;

  #L2bdd2c.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillType.weight` @type ^`int`;
  #L2bdd30.  return v0;
}
procedure `int` `getWidth`(`com.bumptech.glide.load.engine.prefill.PreFillType` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.getWidth:()I` @AccessFlag  {
    temp;
    v0;

  #L2bdd44.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillType.width` @type ^`int`;
  #L2bdd48.  return v0;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.prefill.PreFillType` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bdd5c.  v0:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.width` @type ^`int`;
  #L2bdd60.  v0:= v0 * 31;
  #L2bdd64.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.height` @type ^`int`;
  #L2bdd68.  v0:= v0 + v1 @kind int;
  #L2bdd6a.  v0:= v0 * 31;
  #L2bdd6e.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bdd72.  call temp:= `hashCode`(v1) @signature `Landroid/graphics/Bitmap$Config;.hashCode:()I` @kind virtual;
  #L2bdd78.  v1:= temp;
  #L2bdd7a.  v0:= v0 + v1 @kind int;
  #L2bdd7c.  v0:= v0 * 31;
  #L2bdd80.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.weight` @type ^`int`;
  #L2bdd84.  v0:= v0 + v1 @kind int;
  #L2bdd86.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.prefill.PreFillType` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bdd98.  v0:= new `java.lang.StringBuilder`;
  #L2bdd9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bdda2.  v1:= "PreFillSize{width=" @kind object;
  #L2bdda6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddac.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.width` @type ^`int`;
  #L2bddb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddb6.  v1:= ", height=" @kind object;
  #L2bddba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddc0.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.height` @type ^`int`;
  #L2bddc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddca.  v1:= ", config=" @kind object;
  #L2bddce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddd4.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bddd8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddde.  v1:= ", weight=" @kind object;
  #L2bdde2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bdde8.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.weight` @type ^`int`;
  #L2bddec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddf2.  v1:= 125I;
  #L2bddf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddfc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bde02.  v0:= temp @kind object;
  #L2bde04.  return v0 @kind object;
}
