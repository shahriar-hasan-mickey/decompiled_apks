record `com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler` @kind class @AccessFlag  extends `android.os.MessageQueue$IdleHandler` @kind interface {
  `java.util.Map` `com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler.activeResources` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.ReferenceQueue` `com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler.queue` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler` v0 @kind this, `java.util.Map` v1 @kind object, `java.lang.ref.ReferenceQueue` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine$RefQueueIdleHandler;.<init>:(Ljava/util/Map;Ljava/lang/ref/ReferenceQueue;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b8bf8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b8bfe.  v0.`com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler.activeResources` @type ^`java.util.Map` := v1 @kind object;
  #L2b8c02.  v0.`com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler.queue` @type ^`java.lang.ref.ReferenceQueue` := v2 @kind object;
  #L2b8c06.  return @kind void;
}
procedure `boolean` `queueIdle`(`com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine$RefQueueIdleHandler;.queueIdle:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b8bbc.  v0:= v2.`com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler.queue` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L2b8bc0.  call temp:= `poll`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;` @kind virtual;
  #L2b8bc6.  v0:= temp @kind object;
  #L2b8bc8.  v0:= (`com.bumptech.glide.load.engine.Engine$ResourceWeakReference`) v0 @kind object;
  #L2b8bcc.  if v0 == 0 then goto L2b8be2;
  #L2b8bd0.  v1:= v2.`com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler.activeResources` @type ^`java.util.Map` @kind object;
  #L2b8bd4.  call temp:= `access$000`(v0) @signature `Lcom/bumptech/glide/load/engine/Engine$ResourceWeakReference;.access$000:(Lcom/bumptech/glide/load/engine/Engine$ResourceWeakReference;)Lcom/bumptech/glide/load/Key;` @kind static;
  #L2b8bda.  v0:= temp @kind object;
  #L2b8bdc.  call temp:= `remove`(v1, v0) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b8be2.  v0:= 1I;
  #L2b8be4.  return v0;
}
