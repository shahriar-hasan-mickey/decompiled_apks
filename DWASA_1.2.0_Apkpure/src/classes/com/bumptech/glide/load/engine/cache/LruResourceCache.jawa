record `com.bumptech.glide.load.engine.cache.LruResourceCache` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.util.LruCache` @kind class, `com.bumptech.glide.load.engine.cache.MemoryCache` @kind interface {
  `com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` `com.bumptech.glide.load.engine.cache.LruResourceCache.listener` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2bcb98.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.<init>:(I)V` @kind direct;
  #L2bcb9e.  return @kind void;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.engine.Resource` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getSize:(Lcom/bumptech/glide/load/engine/Resource;)I` @AccessFlag PROTECTED {
    temp;

  #L2bcb5c.  call temp:= `getSize`(v1) @signature `Lcom/bumptech/glide/load/engine/Resource;.getSize:()I` @kind interface;
  #L2bcb62.  v1:= temp;
  #L2bcb64.  return v1;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getSize:(Ljava/lang/Object;)I` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L2bcb78.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L2bcb7c.  call temp:= `getSize`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getSize:(Lcom/bumptech/glide/load/engine/Resource;)I` @kind virtual;
  #L2bcb82.  v1:= temp;
  #L2bcb84.  return v1;
}
procedure `void` `onItemEvicted`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.onItemEvicted:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)V` @AccessFlag PROTECTED {
    temp;

  #L2bcbb0.  v1:= v0.`com.bumptech.glide.load.engine.cache.LruResourceCache.listener` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` @kind object;
  #L2bcbb4.  if v1 == 0 then goto L2bcbbe;
  #L2bcbb8.  call `onResourceRemoved`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;.onResourceRemoved:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind interface;
  #L2bcbbe.  return @kind void;
}
procedure `void` `onItemEvicted`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.onItemEvicted:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L2bcbd0.  v1:= (`com.bumptech.glide.load.Key`) v1 @kind object;
  #L2bcbd4.  v2:= (`com.bumptech.glide.load.engine.Resource`) v2 @kind object;
  #L2bcbd8.  call `onItemEvicted`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.onItemEvicted:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L2bcbde.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `put`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bcb1c.  call temp:= `put`(v0, v1, v2) @signature `Lcom/bumptech/glide/util/LruCache;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L2bcb22.  v1:= temp @kind object;
  #L2bcb24.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L2bcb28.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `remove`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.remove:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bcb3c.  call temp:= `remove`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L2bcb42.  v1:= temp @kind object;
  #L2bcb44.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L2bcb48.  return v1 @kind object;
}
procedure `void` `setResourceRemovedListener`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.setResourceRemovedListener:(Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;)V` @AccessFlag PUBLIC {
    temp;

  #L2bcbf0.  v0.`com.bumptech.glide.load.engine.cache.LruResourceCache.listener` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` := v1 @kind object;
  #L2bcbf4.  return @kind void;
}
procedure `void` `trimMemory`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.trimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bcc08.  v0:= 60I;
  #L2bcc0c.  if v2 < v0 then goto L2bcc18;
  #L2bcc10.  call `clearMemory`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.clearMemory:()V` @kind virtual;
  #L2bcc16.  goto L2bcc32;
  #L2bcc18.  v0:= 40I;
  #L2bcc1c.  if v2 < v0 then goto L2bcc32;
  #L2bcc20.  call temp:= `getCurrentSize`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getCurrentSize:()I` @kind virtual;
  #L2bcc26.  v2:= temp;
  #L2bcc28.  v2:= v2 / 2;
  #L2bcc2c.  call `trimToSize`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.trimToSize:(I)V` @kind virtual;
  #L2bcc32.  return @kind void;
}
