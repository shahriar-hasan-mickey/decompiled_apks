record `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `clearMemory`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.clearMemory:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `android.graphics.Bitmap` `get`(`int` v0 , `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `android.graphics.Bitmap` `getDirty`(`int` v0 , `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.getDirty:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getMaxSize`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.getMaxSize:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `put`(`android.graphics.Bitmap` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setSizeMultiplier`(`float` v0 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.setSizeMultiplier:(F)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `trimMemory`(`int` v0 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.trimMemory:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
