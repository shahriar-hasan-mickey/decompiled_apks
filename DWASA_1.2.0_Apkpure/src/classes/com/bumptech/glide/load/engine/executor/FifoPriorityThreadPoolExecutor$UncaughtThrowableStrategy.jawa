record `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` @kind class @AccessFlag PUBLIC_ENUM extends `java.lang.Enum` @kind class {
}
global `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy`[] `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.IGNORE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.LOG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.THROW` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bd304.  v0:= new `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy`;
  #L2bd308.  v1:= 0I;
  #L2bd30a.  v2:= "IGNORE" @kind object;
  #L2bd30e.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bd314.  `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.IGNORE` @type ^`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` := v0 @kind object;
  #L2bd318.  v0:= new `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy$1`;
  #L2bd31c.  v2:= 1I;
  #L2bd31e.  v3:= "LOG" @kind object;
  #L2bd322.  call `<init>`(v0, v3, v2) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy$1;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bd328.  `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.LOG` @type ^`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` := v0 @kind object;
  #L2bd32c.  v0:= new `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy$2`;
  #L2bd330.  v3:= 2I;
  #L2bd332.  v4:= "THROW" @kind object;
  #L2bd336.  call `<init>`(v0, v4, v3) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy$2;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bd33c.  `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.THROW` @type ^`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` := v0 @kind object;
  #L2bd340.  v0:= 3I;
  #L2bd342.  v0:= new `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy`[v0];
  #L2bd346.  v4:= `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.IGNORE` @type ^`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` @kind object;
  #L2bd34a.  v0[v1]:= v4 @kind object;
  #L2bd34e.  v1:= `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.LOG` @type ^`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` @kind object;
  #L2bd352.  v0[v2]:= v1 @kind object;
  #L2bd356.  v1:= `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.THROW` @type ^`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` @kind object;
  #L2bd35a.  v0[v3]:= v1 @kind object;
  #L2bd35e.  `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.$VALUES` @type ^`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy`[] := v0 @kind object;
  #L2bd362.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2bd374.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bd37a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$1` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;.<init>:(Ljava/lang/String;ILcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2bd38c.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bd392.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2bd2bc.  v0:= constclass @type ^`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` @kind object;
  #L2bd2c0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2bd2c6.  v1:= temp @kind object;
  #L2bd2c8.  v1:= (`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy`) v1 @kind object;
  #L2bd2cc.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy`[] `values`() @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;.values:()[Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2bd2e0.  v0:= `@@com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy.$VALUES` @type ^`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy`[] @kind object;
  #L2bd2e4.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2bd2ea.  v0:= temp @kind object;
  #L2bd2ec.  v0:= (`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy`[]) v0 @kind object;
  #L2bd2f0.  return v0 @kind object;
}
procedure `void` `handle`(`com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy;.handle:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;

  #L2bd3a4.  return @kind void;
}
