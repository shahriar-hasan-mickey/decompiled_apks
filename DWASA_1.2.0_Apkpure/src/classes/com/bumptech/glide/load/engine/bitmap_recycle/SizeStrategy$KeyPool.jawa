record `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bbdd0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BaseKeyPool;.<init>:()V` @kind direct;
  #L2bbdd6.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.Poolable` `create`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.create:()Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L2bbd74.  call temp:= `create`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.create:()Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;` @kind virtual;
  #L2bbd7a.  v0:= temp @kind object;
  #L2bbd7c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` `create`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.create:()Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2bbd90.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key`;
  #L2bbd94.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;)V` @kind direct;
  #L2bbd9a.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key` `get`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.get:(I)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bbdac.  call temp:= `get`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$KeyPool;.get:()Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;` @kind virtual;
  #L2bbdb2.  v0:= temp @kind object;
  #L2bbdb4.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key`) v0 @kind object;
  #L2bbdb8.  call `init`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy$Key;.init:(I)V` @kind virtual;
  #L2bbdbe.  return v0 @kind object;
}
