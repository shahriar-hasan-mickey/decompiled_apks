record `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` @kind class @AccessFlag  {
  `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.head` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.keyToEntry` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2bab4c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bab52.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry`;
  #L2bab56.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.<init>:()V` @kind direct;
  #L2bab5c.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.head` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` := v0 @kind object;
  #L2bab60.  v0:= new `java.util.HashMap`;
  #L2bab64.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2bab6a.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.keyToEntry` @type ^`java.util.Map` := v0 @kind object;
  #L2bab6e.  return @kind void;
}
procedure `void` `makeHead`(`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.makeHead:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2bab80.  call `removeEntry`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.removeEntry:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @kind static;
  #L2bab86.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.head` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2bab8a.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` := v0 @kind object;
  #L2bab8e.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2bab92.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` := v0 @kind object;
  #L2bab96.  call `updateEntry`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.updateEntry:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @kind static;
  #L2bab9c.  return @kind void;
}
procedure `void` `makeTail`(`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.makeTail:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2babb0.  call `removeEntry`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.removeEntry:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @kind static;
  #L2babb6.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.head` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2babba.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2babbe.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` := v0 @kind object;
  #L2babc2.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.head` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2babc6.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` := v0 @kind object;
  #L2babca.  call `updateEntry`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.updateEntry:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @kind static;
  #L2babd0.  return @kind void;
}
procedure `void` `removeEntry`(`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.removeEntry:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2bac34.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2bac38.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2bac3c.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` := v1 @kind object;
  #L2bac40.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2bac44.  v2:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2bac48.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` := v2 @kind object;
  #L2bac4c.  return @kind void;
}
procedure `void` `updateEntry`(`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.updateEntry:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2bac60.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2bac64.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` := v1 @kind object;
  #L2bac68.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2bac6c.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` := v1 @kind object;
  #L2bac70.  return @kind void;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.Poolable` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.get:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ba9e4.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.keyToEntry` @type ^`java.util.Map` @kind object;
  #L2ba9e8.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ba9ee.  v0:= temp @kind object;
  #L2ba9f0.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry`) v0 @kind object;
  #L2ba9f4.  if v0 != 0 then goto L2baa0e;
  #L2ba9f8.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry`;
  #L2ba9fc.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2baa02.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.keyToEntry` @type ^`java.util.Map` @kind object;
  #L2baa06.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2baa0c.  goto L2baa14;
  #L2baa0e.  call `offer`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;.offer:()V` @kind interface;
  #L2baa14.  call `makeHead`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.makeHead:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @kind direct;
  #L2baa1a.  call temp:= `removeLast`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L2baa20.  v3:= temp @kind object;
  #L2baa22.  return v3 @kind object;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.Poolable` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.put:(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2babe4.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.keyToEntry` @type ^`java.util.Map` @kind object;
  #L2babe8.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2babee.  v0:= temp @kind object;
  #L2babf0.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry`) v0 @kind object;
  #L2babf4.  if v0 != 0 then goto L2bac14;
  #L2babf8.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry`;
  #L2babfc.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2bac02.  call `makeTail`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.makeTail:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @kind direct;
  #L2bac08.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.keyToEntry` @type ^`java.util.Map` @kind object;
  #L2bac0c.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bac12.  goto L2bac1a;
  #L2bac14.  call `offer`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;.offer:()V` @kind interface;
  #L2bac1a.  call `add`(v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L2bac20.  return @kind void;
}
procedure `java.lang.Object` `removeLast`(`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.removeLast:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2baa34.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.head` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2baa38.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2baa3c.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.head` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2baa40.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2baa46.  v1:= temp;
  #L2baa48.  if v1 != 0 then goto L2baa8a;
  #L2baa4c.  call temp:= `removeLast`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L2baa52.  v1:= temp @kind object;
  #L2baa54.  if v1 == 0 then goto L2baa5a;
  #L2baa58.  return v1 @kind object;
  #L2baa5a.  call `removeEntry`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.removeEntry:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)V` @kind static;
  #L2baa60.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.keyToEntry` @type ^`java.util.Map` @kind object;
  #L2baa64.  call temp:= `access$000`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.access$000:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)Ljava/lang/Object;` @kind static;
  #L2baa6a.  v2:= temp @kind object;
  #L2baa6c.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2baa72.  call temp:= `access$000`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.access$000:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)Ljava/lang/Object;` @kind static;
  #L2baa78.  v1:= temp @kind object;
  #L2baa7a.  v1:= (`com.bumptech.glide.load.engine.bitmap_recycle.Poolable`) v1 @kind object;
  #L2baa7e.  call `offer`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;.offer:()V` @kind interface;
  #L2baa84.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.prev` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2baa88.  goto L2baa3c;
  #L2baa8a.  v0:= 0I;
  #L2baa8c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2baaa0.  v0:= new `java.lang.StringBuilder`;
  #L2baaa4.  v1:= "GroupedLinkedMap( " @kind object;
  #L2baaa8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2baaae.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.head` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2baab2.  v1:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2baab6.  v2:= 0I;
  #L2baab8.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap.head` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2baabc.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2baac2.  v3:= temp;
  #L2baac4.  if v3 != 0 then goto L2bab0a;
  #L2baac8.  v2:= 1I;
  #L2baaca.  v3:= 123I;
  #L2baace.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2baad4.  call temp:= `access$000`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.access$000:(Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;)Ljava/lang/Object;` @kind static;
  #L2baada.  v3:= temp @kind object;
  #L2baadc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2baae2.  v3:= 58I;
  #L2baae6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2baaec.  call temp:= `size`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap$LinkedEntry;.size:()I` @kind virtual;
  #L2baaf2.  v3:= temp;
  #L2baaf4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2baafa.  v3:= "}, " @kind object;
  #L2baafe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bab04.  v1:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry.next` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry` @kind object;
  #L2bab08.  goto L2baab8;
  #L2bab0a.  if v2 == 0 then goto L2bab28;
  #L2bab0e.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2bab14.  v1:= temp;
  #L2bab16.  v1:= v1 + -2;
  #L2bab1a.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2bab20.  v2:= temp;
  #L2bab22.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bab28.  v1:= " )" @kind object;
  #L2bab2c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bab32.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bab38.  v0:= temp @kind object;
  #L2bab3a.  return v0 @kind object;
}
