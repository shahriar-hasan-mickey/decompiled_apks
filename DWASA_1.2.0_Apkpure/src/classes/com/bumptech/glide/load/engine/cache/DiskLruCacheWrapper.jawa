record `com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.cache.DiskCache` @kind interface {
  `java.io.File` `com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.directory` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.disklrucache.DiskLruCache` `com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.diskLruCache` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.maxSize` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.cache.SafeKeyGenerator` `com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.safeKeyGenerator` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker` `com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.writeLocker` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.APP_VERSION` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.VALUE_COUNT` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` `@@com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.wrapper` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2bc780.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` v1 @kind this, `java.io.File` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.<init>:(Ljava/io/File;I)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L2bc794.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bc79a.  v0:= new `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker`;
  #L2bc79e.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker;.<init>:()V` @kind direct;
  #L2bc7a4.  v1.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.writeLocker` @type ^`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker` := v0 @kind object;
  #L2bc7a8.  v1.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.directory` @type ^`java.io.File` := v2 @kind object;
  #L2bc7ac.  v1.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.maxSize` @type ^`int` := v3;
  #L2bc7b0.  v2:= new `com.bumptech.glide.load.engine.cache.SafeKeyGenerator`;
  #L2bc7b4.  call `<init>`(v2) @signature `Lcom/bumptech/glide/load/engine/cache/SafeKeyGenerator;.<init>:()V` @kind direct;
  #L2bc7ba.  v1.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.safeKeyGenerator` @type ^`com.bumptech.glide.load.engine.cache.SafeKeyGenerator` := v2 @kind object;
  #L2bc7be.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.cache.DiskCache` `get`(`java.io.File` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.get:(Ljava/io/File;I)Lcom/bumptech/glide/load/engine/cache/DiskCache;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2bc6c8.  v0:= constclass @type ^`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` @kind object;
  #L2bc6cc.  @monitorenter v0
  #L2bc6ce.  v1:= `@@com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.wrapper` @type ^`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` @kind object;
  #L2bc6d2.  if v1 != 0 then goto L2bc6e4;
  #L2bc6d6.  v1:= new `com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper`;
  #L2bc6da.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.<init>:(Ljava/io/File;I)V` @kind direct;
  #L2bc6e0.  `@@com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.wrapper` @type ^`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` := v1 @kind object;
  #L2bc6e4.  v2:= `@@com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.wrapper` @type ^`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` @kind object;
  #L2bc6e8.  @monitorexit v0
  #L2bc6ea.  return v2 @kind object;
  #L2bc6ec.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bc6ee.  @monitorexit v0
  #L2bc6f0.  throw v2;
  catch `java.lang.Throwable` @[L2bc6ce..L2bc6e8] goto L2bc6ec;
}
procedure `com.bumptech.glide.disklrucache.DiskLruCache` `getDiskCache`(`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.getDiskCache:()Lcom/bumptech/glide/disklrucache/DiskLruCache;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bc67c.  @monitorenter v4
  #L2bc67e.  v0:= v4.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.diskLruCache` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L2bc682.  if v0 != 0 then goto L2bc69e;
  #L2bc686.  v0:= v4.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.directory` @type ^`java.io.File` @kind object;
  #L2bc68a.  v1:= v4.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.maxSize` @type ^`int`;
  #L2bc68e.  v1:= (`long`) v1 @kind i2l;
  #L2bc690.  v3:= 1I;
  #L2bc692.  call temp:= `open`(v0, v3, v3, v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.open:(Ljava/io/File;IIJ)Lcom/bumptech/glide/disklrucache/DiskLruCache;` @kind static;
  #L2bc698.  v0:= temp @kind object;
  #L2bc69a.  v4.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.diskLruCache` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` := v0 @kind object;
  #L2bc69e.  v0:= v4.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.diskLruCache` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L2bc6a2.  @monitorexit v4
  #L2bc6a4.  return v0 @kind object;
  #L2bc6a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bc6a8.  @monitorexit v4
  #L2bc6aa.  throw v0;
  catch `java.lang.Throwable` @[L2bc67e..L2bc6a2] goto L2bc6a6;
}
procedure `void` `resetDiskCache`(`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.resetDiskCache:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2bc974.  @monitorenter v1
  #L2bc976.  v0:= 0I;
  #L2bc978.  v1.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.diskLruCache` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` := v0 @kind object;
  #L2bc97c.  @monitorexit v1
  #L2bc97e.  return @kind void;
  #L2bc980.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bc982.  @monitorexit v1
  #L2bc984.  throw v0;
  catch `java.lang.Throwable` @[L2bc978..L2bc97c] goto L2bc980;
}
procedure `void` `clear`(`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bc7d0.  @monitorenter v3
  #L2bc7d2.  call temp:= `getDiskCache`(v3) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.getDiskCache:()Lcom/bumptech/glide/disklrucache/DiskLruCache;` @kind direct;
  #L2bc7d8.  v0:= temp @kind object;
  #L2bc7da.  call `delete`(v0) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.delete:()V` @kind virtual;
  #L2bc7e0.  call `resetDiskCache`(v3) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.resetDiskCache:()V` @kind direct;
  #L2bc7e6.  goto L2bc80e;
  #L2bc7e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bc7ea.  goto L2bc812;
  #L2bc7ec.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L2bc7ee.  v1:= "DiskLruCacheWrapper" @kind object;
  #L2bc7f2.  v2:= 5I;
  #L2bc7f4.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2bc7fa.  v1:= temp;
  #L2bc7fc.  if v1 == 0 then goto L2bc80e;
  #L2bc800.  v1:= "DiskLruCacheWrapper" @kind object;
  #L2bc804.  v2:= "Unable to clear disk cache" @kind object;
  #L2bc808.  call temp:= `w`(v1, v2, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2bc80e.  @monitorexit v3
  #L2bc810.  return @kind void;
  #L2bc812.  @monitorexit v3
  #L2bc814.  throw v0;
  catch `java.io.IOException` @[L2bc7d2..L2bc7e6] goto L2bc7ec;
  catch `java.lang.Throwable` @[L2bc7d2..L2bc7e6] goto L2bc7e8;
  catch `java.lang.Throwable` @[L2bc7ee..L2bc80e] goto L2bc7e8;
}
procedure `void` `delete`(`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` v2 @kind this, `com.bumptech.glide.load.Key` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.delete:(Lcom/bumptech/glide/load/Key;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bc840.  v0:= v2.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.safeKeyGenerator` @type ^`com.bumptech.glide.load.engine.cache.SafeKeyGenerator` @kind object;
  #L2bc844.  call temp:= `getSafeKey`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/cache/SafeKeyGenerator;.getSafeKey:(Lcom/bumptech/glide/load/Key;)Ljava/lang/String;` @kind virtual;
  #L2bc84a.  v3:= temp @kind object;
  #L2bc84c.  call temp:= `getDiskCache`(v2) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.getDiskCache:()Lcom/bumptech/glide/disklrucache/DiskLruCache;` @kind direct;
  #L2bc852.  v0:= temp @kind object;
  #L2bc854.  call temp:= `remove`(v0, v3) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L2bc85a.  goto L2bc87a;
  #L2bc85c.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L2bc85e.  v0:= 5I;
  #L2bc860.  v1:= "DiskLruCacheWrapper" @kind object;
  #L2bc864.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2bc86a.  v0:= temp;
  #L2bc86c.  if v0 == 0 then goto L2bc87a;
  #L2bc870.  v0:= "Unable to delete from disk cache" @kind object;
  #L2bc874.  call temp:= `w`(v1, v0, v3) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2bc87a.  return @kind void;
  catch `java.io.IOException` @[L2bc84c..L2bc85a] goto L2bc85c;
}
procedure `java.io.File` `get`(`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` v3 @kind this, `com.bumptech.glide.load.Key` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.get:(Lcom/bumptech/glide/load/Key;)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bc710.  v0:= v3.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.safeKeyGenerator` @type ^`com.bumptech.glide.load.engine.cache.SafeKeyGenerator` @kind object;
  #L2bc714.  call temp:= `getSafeKey`(v0, v4) @signature `Lcom/bumptech/glide/load/engine/cache/SafeKeyGenerator;.getSafeKey:(Lcom/bumptech/glide/load/Key;)Ljava/lang/String;` @kind virtual;
  #L2bc71a.  v4:= temp @kind object;
  #L2bc71c.  v0:= 0I;
  #L2bc71e.  call temp:= `getDiskCache`(v3) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.getDiskCache:()Lcom/bumptech/glide/disklrucache/DiskLruCache;` @kind direct;
  #L2bc724.  v1:= temp @kind object;
  #L2bc726.  call temp:= `get`(v1, v4) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.get:(Ljava/lang/String;)Lcom/bumptech/glide/disklrucache/DiskLruCache$Value;` @kind virtual;
  #L2bc72c.  v4:= temp @kind object;
  #L2bc72e.  if v4 == 0 then goto L2bc75e;
  #L2bc732.  v1:= 0I;
  #L2bc734.  call temp:= `getFile`(v4, v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Value;.getFile:(I)Ljava/io/File;` @kind virtual;
  #L2bc73a.  v4:= temp @kind object;
  #L2bc73c.  v0:= v4 @kind object;
  #L2bc73e.  goto L2bc75e;
  #L2bc740.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L2bc742.  v1:= 5I;
  #L2bc744.  v2:= "DiskLruCacheWrapper" @kind object;
  #L2bc748.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2bc74e.  v1:= temp;
  #L2bc750.  if v1 == 0 then goto L2bc75e;
  #L2bc754.  v1:= "Unable to get from disk cache" @kind object;
  #L2bc758.  call temp:= `w`(v2, v1, v4) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2bc75e.  return v0 @kind object;
  catch `java.io.IOException` @[L2bc71e..L2bc73c] goto L2bc740;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper` v3 @kind this, `com.bumptech.glide.load.Key` v4 @kind object, `com.bumptech.glide.load.engine.cache.DiskCache$Writer` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/cache/DiskCache$Writer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bc89c.  v0:= "DiskLruCacheWrapper" @kind object;
  #L2bc8a0.  v1:= v3.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.safeKeyGenerator` @type ^`com.bumptech.glide.load.engine.cache.SafeKeyGenerator` @kind object;
  #L2bc8a4.  call temp:= `getSafeKey`(v1, v4) @signature `Lcom/bumptech/glide/load/engine/cache/SafeKeyGenerator;.getSafeKey:(Lcom/bumptech/glide/load/Key;)Ljava/lang/String;` @kind virtual;
  #L2bc8aa.  v1:= temp @kind object;
  #L2bc8ac.  v2:= v3.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.writeLocker` @type ^`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker` @kind object;
  #L2bc8b0.  call `acquire`(v2, v4) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker;.acquire:(Lcom/bumptech/glide/load/Key;)V` @kind virtual;
  #L2bc8b6.  call temp:= `getDiskCache`(v3) @signature `Lcom/bumptech/glide/load/engine/cache/DiskLruCacheWrapper;.getDiskCache:()Lcom/bumptech/glide/disklrucache/DiskLruCache;` @kind direct;
  #L2bc8bc.  v2:= temp @kind object;
  #L2bc8be.  call temp:= `edit`(v2, v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.edit:(Ljava/lang/String;)Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;` @kind virtual;
  #L2bc8c4.  v1:= temp @kind object;
  #L2bc8c6.  if v1 == 0 then goto L2bc8f8;
  #L2bc8ca.  v2:= 0I;
  #L2bc8cc.  call temp:= `getFile`(v1, v2) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.getFile:(I)Ljava/io/File;` @kind virtual;
  #L2bc8d2.  v2:= temp @kind object;
  #L2bc8d4.  call temp:= `write`(v5, v2) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache$Writer;.write:(Ljava/io/File;)Z` @kind interface;
  #L2bc8da.  v5:= temp;
  #L2bc8dc.  if v5 == 0 then goto L2bc8e6;
  #L2bc8e0.  call `commit`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L2bc8e6.  call `abortUnlessCommitted`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.abortUnlessCommitted:()V` @kind virtual;
  #L2bc8ec.  goto L2bc8f8;
  #L2bc8ee.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bc8f0.  call `abortUnlessCommitted`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.abortUnlessCommitted:()V` @kind virtual;
  #L2bc8f6.  throw v5;
  #L2bc8f8.  v5:= v3.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.writeLocker` @type ^`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker` @kind object;
  #L2bc8fc.  call `release`(v5, v4) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker;.release:(Lcom/bumptech/glide/load/Key;)V` @kind virtual;
  #L2bc902.  goto L2bc924;
  #L2bc904.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bc906.  goto L2bc926;
  #L2bc908.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L2bc90a.  v1:= 5I;
  #L2bc90c.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2bc912.  v1:= temp;
  #L2bc914.  if v1 == 0 then goto L2bc8f8;
  #L2bc918.  v1:= "Unable to put to disk cache" @kind object;
  #L2bc91c.  call temp:= `w`(v0, v1, v5) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2bc922.  goto L2bc8f8;
  #L2bc924.  return @kind void;
  #L2bc926.  v0:= v3.`com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper.writeLocker` @type ^`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker` @kind object;
  #L2bc92a.  call `release`(v0, v4) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker;.release:(Lcom/bumptech/glide/load/Key;)V` @kind virtual;
  #L2bc930.  goto L2bc934;
  #L2bc932.  throw v5;
  #L2bc934.  goto L2bc932;
  catch `java.io.IOException` @[L2bc8b6..L2bc8c6] goto L2bc908;
  catch `java.lang.Throwable` @[L2bc8b6..L2bc8c6] goto L2bc904;
  catch `java.lang.Throwable` @[L2bc8cc..L2bc8e6] goto L2bc8ee;
  catch `java.io.IOException` @[L2bc8e6..L2bc8f8] goto L2bc908;
  catch `java.lang.Throwable` @[L2bc8e6..L2bc8f8] goto L2bc904;
  catch `java.lang.Throwable` @[L2bc90c..L2bc922] goto L2bc904;
}
