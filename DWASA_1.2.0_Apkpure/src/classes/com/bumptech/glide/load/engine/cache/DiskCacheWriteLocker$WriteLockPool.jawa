record `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool` @kind class @AccessFlag  {
  `java.util.Queue` `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool.pool` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool.MAX_POOL_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLockPool;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2bc2a0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bc2a6.  v0:= new `java.util.ArrayDeque`;
  #L2bc2aa.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L2bc2b0.  v1.`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool.pool` @type ^`java.util.Queue` := v0 @kind object;
  #L2bc2b4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool` v0 @kind this, `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$1` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLockPool;.<init>:(Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2bc2c8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLockPool;.<init>:()V` @kind direct;
  #L2bc2ce.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock` `obtain`(`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLockPool;.obtain:()Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLock;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2bc24c.  v0:= v2.`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool.pool` @type ^`java.util.Queue` @kind object;
  #L2bc250.  @monitorenter v0
  #L2bc252.  v1:= v2.`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool.pool` @type ^`java.util.Queue` @kind object;
  #L2bc256.  call temp:= `poll`(v1) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L2bc25c.  v1:= temp @kind object;
  #L2bc25e.  v1:= (`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock`) v1 @kind object;
  #L2bc262.  @monitorexit v0
  #L2bc264.  if v1 != 0 then goto L2bc274;
  #L2bc268.  v1:= new `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock`;
  #L2bc26c.  v0:= 0I;
  #L2bc26e.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLock;.<init>:(Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$1;)V` @kind direct;
  #L2bc274.  return v1 @kind object;
  #L2bc276.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bc278.  @monitorexit v0
  #L2bc27a.  throw v1;
  catch `java.lang.Throwable` @[L2bc252..L2bc264] goto L2bc276;
  catch `java.lang.Throwable` @[L2bc278..L2bc27a] goto L2bc276;
}
procedure `void` `offer`(`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool` v3 @kind this, `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLockPool;.offer:(Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLock;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2bc2e0.  v0:= v3.`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool.pool` @type ^`java.util.Queue` @kind object;
  #L2bc2e4.  @monitorenter v0
  #L2bc2e6.  v1:= v3.`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool.pool` @type ^`java.util.Queue` @kind object;
  #L2bc2ea.  call temp:= `size`(v1) @signature `Ljava/util/Queue;.size:()I` @kind interface;
  #L2bc2f0.  v1:= temp;
  #L2bc2f2.  v2:= 10I;
  #L2bc2f6.  if v1 >= v2 then goto L2bc304;
  #L2bc2fa.  v1:= v3.`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool.pool` @type ^`java.util.Queue` @kind object;
  #L2bc2fe.  call temp:= `offer`(v1, v4) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L2bc304.  @monitorexit v0
  #L2bc306.  return @kind void;
  #L2bc308.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bc30a.  @monitorexit v0
  #L2bc30c.  throw v4;
  catch `java.lang.Throwable` @[L2bc2e6..L2bc30c] goto L2bc308;
}
