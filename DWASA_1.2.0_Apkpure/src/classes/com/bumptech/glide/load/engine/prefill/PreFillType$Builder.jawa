record `com.bumptech.glide.load.engine.prefill.PreFillType$Builder` @kind class @AccessFlag PUBLIC {
  `android.graphics.Bitmap$Config` `com.bumptech.glide.load.engine.prefill.PreFillType$Builder.config` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillType$Builder.height` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillType$Builder.weight` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillType$Builder.width` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.PreFillType$Builder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2bdc40.  call `<init>`(v0, v1, v1) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.<init>:(II)V` @kind direct;
  #L2bdc46.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.PreFillType$Builder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bdc58.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bdc5e.  v0:= 1I;
  #L2bdc60.  v1.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.weight` @type ^`int` := v0;
  #L2bdc64.  if v2 <= 0 then goto L2bdc86;
  #L2bdc68.  if v3 <= 0 then goto L2bdc76;
  #L2bdc6c.  v1.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.width` @type ^`int` := v2;
  #L2bdc70.  v1.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.height` @type ^`int` := v3;
  #L2bdc74.  return @kind void;
  #L2bdc76.  v2:= new `java.lang.IllegalArgumentException`;
  #L2bdc7a.  v3:= "Height must be > 0" @kind object;
  #L2bdc7e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bdc84.  throw v2;
  #L2bdc86.  v2:= new `java.lang.IllegalArgumentException`;
  #L2bdc8a.  v3:= "Width must be > 0" @kind object;
  #L2bdc8e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bdc94.  throw v2;
}
procedure `com.bumptech.glide.load.engine.prefill.PreFillType` `build`(`com.bumptech.glide.load.engine.prefill.PreFillType$Builder` v5 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.build:()Lcom/bumptech/glide/load/engine/prefill/PreFillType;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bdbd0.  v0:= new `com.bumptech.glide.load.engine.prefill.PreFillType`;
  #L2bdbd4.  v1:= v5.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.width` @type ^`int`;
  #L2bdbd8.  v2:= v5.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.height` @type ^`int`;
  #L2bdbdc.  v3:= v5.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bdbe0.  v4:= v5.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.weight` @type ^`int`;
  #L2bdbe4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.<init>:(IILandroid/graphics/Bitmap$Config;I)V` @kind direct;
  #L2bdbea.  return v0 @kind object;
}
procedure `android.graphics.Bitmap$Config` `getConfig`(`com.bumptech.glide.load.engine.prefill.PreFillType$Builder` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.getConfig:()Landroid/graphics/Bitmap$Config;` @AccessFlag  {
    temp;
    v0;

  #L2bdbb8.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.config` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2bdbbc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.prefill.PreFillType$Builder` `setConfig`(`com.bumptech.glide.load.engine.prefill.PreFillType$Builder` v0 @kind this, `android.graphics.Bitmap$Config` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.setConfig:(Landroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;` @AccessFlag PUBLIC {
    temp;

  #L2bdbfc.  v0.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.config` @type ^`android.graphics.Bitmap$Config` := v1 @kind object;
  #L2bdc00.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.prefill.PreFillType$Builder` `setWeight`(`com.bumptech.glide.load.engine.prefill.PreFillType$Builder` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.setWeight:(I)Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bdc14.  if v2 <= 0 then goto L2bdc1e;
  #L2bdc18.  v1.`com.bumptech.glide.load.engine.prefill.PreFillType$Builder.weight` @type ^`int` := v2;
  #L2bdc1c.  return v1 @kind object;
  #L2bdc1e.  v2:= new `java.lang.IllegalArgumentException`;
  #L2bdc22.  v0:= "Weight must be > 0" @kind object;
  #L2bdc26.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bdc2c.  throw v2;
}
