record `com.bumptech.glide.load.engine.DecodeJob` @kind class @AccessFlag  {
  `com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider` `com.bumptech.glide.load.engine.DecodeJob.diskCacheProvider` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.DiskCacheStrategy` `com.bumptech.glide.load.engine.DecodeJob.diskCacheStrategy` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.data.DataFetcher` `com.bumptech.glide.load.engine.DecodeJob.fetcher` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.DecodeJob$FileOpener` `com.bumptech.glide.load.engine.DecodeJob.fileOpener` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.DecodeJob.height` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.engine.DecodeJob.isCancelled` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.provider.DataLoadProvider` `com.bumptech.glide.load.engine.DecodeJob.loadProvider` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.Priority` `com.bumptech.glide.load.engine.DecodeJob.priority` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.EngineKey` `com.bumptech.glide.load.engine.DecodeJob.resultKey` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` `com.bumptech.glide.load.engine.DecodeJob.transcoder` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Transformation` `com.bumptech.glide.load.engine.DecodeJob.transformation` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.DecodeJob.width` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.engine.DecodeJob$FileOpener` `@@com.bumptech.glide.load.engine.DecodeJob.DEFAULT_FILE_OPENER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.bumptech.glide.load.engine.DecodeJob.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b87e4.  v0:= new `com.bumptech.glide.load.engine.DecodeJob$FileOpener`;
  #L2b87e8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob$FileOpener;.<init>:()V` @kind direct;
  #L2b87ee.  `@@com.bumptech.glide.load.engine.DecodeJob.DEFAULT_FILE_OPENER` @type ^`com.bumptech.glide.load.engine.DecodeJob$FileOpener` := v0 @kind object;
  #L2b87f2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.DecodeJob` v12 @kind this, `com.bumptech.glide.load.engine.EngineKey` v13 @kind object, `int` v14 , `int` v15 , `com.bumptech.glide.load.data.DataFetcher` v16 @kind object, `com.bumptech.glide.provider.DataLoadProvider` v17 @kind object, `com.bumptech.glide.load.Transformation` v18 @kind object, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v19 @kind object, `com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider` v20 @kind object, `com.bumptech.glide.load.engine.DiskCacheStrategy` v21 @kind object, `com.bumptech.glide.Priority` v22 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.<init>:(Lcom/bumptech/glide/load/engine/EngineKey;IILcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/provider/DataLoadProvider;Lcom/bumptech/glide/load/Transformation;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Lcom/bumptech/glide/load/engine/DecodeJob$DiskCacheProvider;Lcom/bumptech/glide/load/engine/DiskCacheStrategy;Lcom/bumptech/glide/Priority;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2b8804.  v11:= `@@com.bumptech.glide.load.engine.DecodeJob.DEFAULT_FILE_OPENER` @type ^`com.bumptech.glide.load.engine.DecodeJob$FileOpener` @kind object;
  #L2b8808.  v0:= v12 @kind object;
  #L2b880a.  v1:= v13 @kind object;
  #L2b880c.  v2:= v14;
  #L2b880e.  v3:= v15;
  #L2b8810.  v4:= v16 @kind object;
  #L2b8814.  v5:= v17 @kind object;
  #L2b8818.  v6:= v18 @kind object;
  #L2b881c.  v7:= v19 @kind object;
  #L2b8820.  v8:= v20 @kind object;
  #L2b8824.  v9:= v21 @kind object;
  #L2b8828.  v10:= v22 @kind object;
  #L2b882c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.<init>:(Lcom/bumptech/glide/load/engine/EngineKey;IILcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/provider/DataLoadProvider;Lcom/bumptech/glide/load/Transformation;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Lcom/bumptech/glide/load/engine/DecodeJob$DiskCacheProvider;Lcom/bumptech/glide/load/engine/DiskCacheStrategy;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/engine/DecodeJob$FileOpener;)V` @kind direct;
  #L2b8832.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.DecodeJob` v0 @kind this, `com.bumptech.glide.load.engine.EngineKey` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.data.DataFetcher` v4 @kind object, `com.bumptech.glide.provider.DataLoadProvider` v5 @kind object, `com.bumptech.glide.load.Transformation` v6 @kind object, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v7 @kind object, `com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider` v8 @kind object, `com.bumptech.glide.load.engine.DiskCacheStrategy` v9 @kind object, `com.bumptech.glide.Priority` v10 @kind object, `com.bumptech.glide.load.engine.DecodeJob$FileOpener` v11 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.<init>:(Lcom/bumptech/glide/load/engine/EngineKey;IILcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/provider/DataLoadProvider;Lcom/bumptech/glide/load/Transformation;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Lcom/bumptech/glide/load/engine/DecodeJob$DiskCacheProvider;Lcom/bumptech/glide/load/engine/DiskCacheStrategy;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/engine/DecodeJob$FileOpener;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b8844.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b884a.  v0.`com.bumptech.glide.load.engine.DecodeJob.resultKey` @type ^`com.bumptech.glide.load.engine.EngineKey` := v1 @kind object;
  #L2b884e.  v0.`com.bumptech.glide.load.engine.DecodeJob.width` @type ^`int` := v2;
  #L2b8852.  v0.`com.bumptech.glide.load.engine.DecodeJob.height` @type ^`int` := v3;
  #L2b8856.  v0.`com.bumptech.glide.load.engine.DecodeJob.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` := v4 @kind object;
  #L2b885a.  v0.`com.bumptech.glide.load.engine.DecodeJob.loadProvider` @type ^`com.bumptech.glide.provider.DataLoadProvider` := v5 @kind object;
  #L2b885e.  v0.`com.bumptech.glide.load.engine.DecodeJob.transformation` @type ^`com.bumptech.glide.load.Transformation` := v6 @kind object;
  #L2b8862.  v0.`com.bumptech.glide.load.engine.DecodeJob.transcoder` @type ^`com.bumptech.glide.load.resource.transcode.ResourceTranscoder` := v7 @kind object;
  #L2b8866.  v0.`com.bumptech.glide.load.engine.DecodeJob.diskCacheProvider` @type ^`com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider` := v8 @kind object;
  #L2b886a.  v0.`com.bumptech.glide.load.engine.DecodeJob.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v9 @kind object;
  #L2b886e.  v0.`com.bumptech.glide.load.engine.DecodeJob.priority` @type ^`com.bumptech.glide.Priority` := v10 @kind object;
  #L2b8872.  v0.`com.bumptech.glide.load.engine.DecodeJob.fileOpener` @type ^`com.bumptech.glide.load.engine.DecodeJob$FileOpener` := v11 @kind object;
  #L2b8876.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.DecodeJob$FileOpener` `access$000`(`com.bumptech.glide.load.engine.DecodeJob` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.access$000:(Lcom/bumptech/glide/load/engine/DecodeJob;)Lcom/bumptech/glide/load/engine/DecodeJob$FileOpener;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b83d0.  v0:= v0.`com.bumptech.glide.load.engine.DecodeJob.fileOpener` @type ^`com.bumptech.glide.load.engine.DecodeJob$FileOpener` @kind object;
  #L2b83d4.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `cacheAndDecodeSourceData`(`com.bumptech.glide.load.engine.DecodeJob` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.cacheAndDecodeSourceData:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b83e8.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b83ee.  v0:= temp @kind wide;
  #L2b83f0.  v2:= new `com.bumptech.glide.load.engine.DecodeJob$SourceWriter`;
  #L2b83f4.  v3:= v4.`com.bumptech.glide.load.engine.DecodeJob.loadProvider` @type ^`com.bumptech.glide.provider.DataLoadProvider` @kind object;
  #L2b83f8.  call temp:= `getSourceEncoder`(v3) @signature `Lcom/bumptech/glide/provider/DataLoadProvider;.getSourceEncoder:()Lcom/bumptech/glide/load/Encoder;` @kind interface;
  #L2b83fe.  v3:= temp @kind object;
  #L2b8400.  call `<init>`(v2, v4, v3, v5) @signature `Lcom/bumptech/glide/load/engine/DecodeJob$SourceWriter;.<init>:(Lcom/bumptech/glide/load/engine/DecodeJob;Lcom/bumptech/glide/load/Encoder;Ljava/lang/Object;)V` @kind direct;
  #L2b8406.  v5:= v4.`com.bumptech.glide.load.engine.DecodeJob.diskCacheProvider` @type ^`com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider` @kind object;
  #L2b840a.  call temp:= `getDiskCache`(v5) @signature `Lcom/bumptech/glide/load/engine/DecodeJob$DiskCacheProvider;.getDiskCache:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L2b8410.  v5:= temp @kind object;
  #L2b8412.  v3:= v4.`com.bumptech.glide.load.engine.DecodeJob.resultKey` @type ^`com.bumptech.glide.load.engine.EngineKey` @kind object;
  #L2b8416.  call temp:= `getOriginalKey`(v3) @signature `Lcom/bumptech/glide/load/engine/EngineKey;.getOriginalKey:()Lcom/bumptech/glide/load/Key;` @kind virtual;
  #L2b841c.  v3:= temp @kind object;
  #L2b841e.  call `put`(v5, v3, v2) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/cache/DiskCache$Writer;)V` @kind interface;
  #L2b8424.  v5:= 2I;
  #L2b8426.  v2:= "DecodeJob" @kind object;
  #L2b842a.  call temp:= `isLoggable`(v2, v5) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b8430.  v3:= temp;
  #L2b8432.  if v3 == 0 then goto L2b8440;
  #L2b8436.  v3:= "Wrote source to cache" @kind object;
  #L2b843a.  call `logWithTimeAndKey`(v4, v3, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b8440.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b8446.  v0:= temp @kind wide;
  #L2b8448.  v3:= v4.`com.bumptech.glide.load.engine.DecodeJob.resultKey` @type ^`com.bumptech.glide.load.engine.EngineKey` @kind object;
  #L2b844c.  call temp:= `getOriginalKey`(v3) @signature `Lcom/bumptech/glide/load/engine/EngineKey;.getOriginalKey:()Lcom/bumptech/glide/load/Key;` @kind virtual;
  #L2b8452.  v3:= temp @kind object;
  #L2b8454.  call temp:= `loadFromCache`(v4, v3) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.loadFromCache:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b845a.  v3:= temp @kind object;
  #L2b845c.  call temp:= `isLoggable`(v2, v5) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b8462.  v5:= temp;
  #L2b8464.  if v5 == 0 then goto L2b8476;
  #L2b8468.  if v3 == 0 then goto L2b8476;
  #L2b846c.  v5:= "Decoded source from cache" @kind object;
  #L2b8470.  call `logWithTimeAndKey`(v4, v5, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b8476.  return v3 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `decodeFromSourceData`(`com.bumptech.glide.load.engine.DecodeJob` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.decodeFromSourceData:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b84ac.  v0:= v5.`com.bumptech.glide.load.engine.DecodeJob.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L2b84b0.  call temp:= `cacheSource`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.cacheSource:()Z` @kind virtual;
  #L2b84b6.  v0:= temp;
  #L2b84b8.  if v0 == 0 then goto L2b84c6;
  #L2b84bc.  call temp:= `cacheAndDecodeSourceData`(v5, v6) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.cacheAndDecodeSourceData:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b84c2.  v6:= temp @kind object;
  #L2b84c4.  goto L2b8506;
  #L2b84c6.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b84cc.  v0:= temp @kind wide;
  #L2b84ce.  v2:= v5.`com.bumptech.glide.load.engine.DecodeJob.loadProvider` @type ^`com.bumptech.glide.provider.DataLoadProvider` @kind object;
  #L2b84d2.  call temp:= `getSourceDecoder`(v2) @signature `Lcom/bumptech/glide/provider/DataLoadProvider;.getSourceDecoder:()Lcom/bumptech/glide/load/ResourceDecoder;` @kind interface;
  #L2b84d8.  v2:= temp @kind object;
  #L2b84da.  v3:= v5.`com.bumptech.glide.load.engine.DecodeJob.width` @type ^`int`;
  #L2b84de.  v4:= v5.`com.bumptech.glide.load.engine.DecodeJob.height` @type ^`int`;
  #L2b84e2.  call temp:= `decode`(v2, v6, v3, v4) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.decode:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2b84e8.  v6:= temp @kind object;
  #L2b84ea.  v2:= 2I;
  #L2b84ec.  v3:= "DecodeJob" @kind object;
  #L2b84f0.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b84f6.  v2:= temp;
  #L2b84f8.  if v2 == 0 then goto L2b8506;
  #L2b84fc.  v2:= "Decoded from source" @kind object;
  #L2b8500.  call `logWithTimeAndKey`(v5, v2, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b8506.  return v6 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `decodeSource`(`com.bumptech.glide.load.engine.DecodeJob` v5 @kind this) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.decodeSource:()Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b8594.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b859a.  v0:= temp @kind wide;
  #L2b859c.  v2:= v5.`com.bumptech.glide.load.engine.DecodeJob.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L2b85a0.  v3:= v5.`com.bumptech.glide.load.engine.DecodeJob.priority` @type ^`com.bumptech.glide.Priority` @kind object;
  #L2b85a4.  call temp:= `loadData`(v2, v3) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.loadData:(Lcom/bumptech/glide/Priority;)Ljava/lang/Object;` @kind interface;
  #L2b85aa.  v2:= temp @kind object;
  #L2b85ac.  v3:= "DecodeJob" @kind object;
  #L2b85b0.  v4:= 2I;
  #L2b85b2.  call temp:= `isLoggable`(v3, v4) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b85b8.  v3:= temp;
  #L2b85ba.  if v3 == 0 then goto L2b85c8;
  #L2b85be.  v3:= "Fetched data" @kind object;
  #L2b85c2.  call `logWithTimeAndKey`(v5, v3, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b85c8.  v0:= v5.`com.bumptech.glide.load.engine.DecodeJob.isCancelled` @type ^`boolean` @kind boolean;
  #L2b85cc.  if v0 == 0 then goto L2b85de;
  #L2b85d0.  v0:= 0I;
  #L2b85d2.  v1:= v5.`com.bumptech.glide.load.engine.DecodeJob.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L2b85d6.  call `cleanup`(v1) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L2b85dc.  return v0 @kind object;
  #L2b85de.  call temp:= `decodeFromSourceData`(v5, v2) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.decodeFromSourceData:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b85e4.  v0:= temp @kind object;
  #L2b85e6.  v1:= v5.`com.bumptech.glide.load.engine.DecodeJob.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L2b85ea.  call `cleanup`(v1) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L2b85f0.  return v0 @kind object;
  #L2b85f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b85f4.  v1:= v5.`com.bumptech.glide.load.engine.DecodeJob.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L2b85f8.  call `cleanup`(v1) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L2b85fe.  throw v0;
  catch `java.lang.Throwable` @[L2b8594..L2b85cc] goto L2b85f2;
  catch `java.lang.Throwable` @[L2b85de..L2b85e6] goto L2b85f2;
}
procedure `com.bumptech.glide.load.engine.Resource` `loadFromCache`(`com.bumptech.glide.load.engine.DecodeJob` v4 @kind this, `com.bumptech.glide.load.Key` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.loadFromCache:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b868c.  v0:= v4.`com.bumptech.glide.load.engine.DecodeJob.diskCacheProvider` @type ^`com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider` @kind object;
  #L2b8690.  call temp:= `getDiskCache`(v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob$DiskCacheProvider;.getDiskCache:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L2b8696.  v0:= temp @kind object;
  #L2b8698.  call temp:= `get`(v0, v5) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.get:(Lcom/bumptech/glide/load/Key;)Ljava/io/File;` @kind interface;
  #L2b869e.  v0:= temp @kind object;
  #L2b86a0.  if v0 != 0 then goto L2b86a8;
  #L2b86a4.  v5:= 0I;
  #L2b86a6.  return v5 @kind object;
  #L2b86a8.  v1:= v4.`com.bumptech.glide.load.engine.DecodeJob.loadProvider` @type ^`com.bumptech.glide.provider.DataLoadProvider` @kind object;
  #L2b86ac.  call temp:= `getCacheDecoder`(v1) @signature `Lcom/bumptech/glide/provider/DataLoadProvider;.getCacheDecoder:()Lcom/bumptech/glide/load/ResourceDecoder;` @kind interface;
  #L2b86b2.  v1:= temp @kind object;
  #L2b86b4.  v2:= v4.`com.bumptech.glide.load.engine.DecodeJob.width` @type ^`int`;
  #L2b86b8.  v3:= v4.`com.bumptech.glide.load.engine.DecodeJob.height` @type ^`int`;
  #L2b86bc.  call temp:= `decode`(v1, v0, v2, v3) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.decode:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2b86c2.  v0:= temp @kind object;
  #L2b86c4.  if v0 != 0 then goto L2b86da;
  #L2b86c8.  v1:= v4.`com.bumptech.glide.load.engine.DecodeJob.diskCacheProvider` @type ^`com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider` @kind object;
  #L2b86cc.  call temp:= `getDiskCache`(v1) @signature `Lcom/bumptech/glide/load/engine/DecodeJob$DiskCacheProvider;.getDiskCache:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L2b86d2.  v1:= temp @kind object;
  #L2b86d4.  call `delete`(v1, v5) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.delete:(Lcom/bumptech/glide/load/Key;)V` @kind interface;
  #L2b86da.  return v0 @kind object;
  #L2b86dc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b86de.  v1:= v4.`com.bumptech.glide.load.engine.DecodeJob.diskCacheProvider` @type ^`com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider` @kind object;
  #L2b86e2.  call temp:= `getDiskCache`(v1) @signature `Lcom/bumptech/glide/load/engine/DecodeJob$DiskCacheProvider;.getDiskCache:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L2b86e8.  v1:= temp @kind object;
  #L2b86ea.  call `delete`(v1, v5) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.delete:(Lcom/bumptech/glide/load/Key;)V` @kind interface;
  #L2b86f0.  throw v0;
  catch `java.lang.Throwable` @[L2b86a8..L2b86c4] goto L2b86dc;
}
procedure `void` `logWithTimeAndKey`(`com.bumptech.glide.load.engine.DecodeJob` v1 @kind this, `java.lang.String` v2 @kind object, `long` v3 ) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2b88ac.  v0:= new `java.lang.StringBuilder`;
  #L2b88b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b88b6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b88bc.  v2:= " in " @kind object;
  #L2b88c0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b88c6.  call temp:= `getElapsedMillis`(v3) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L2b88cc.  v2:= temp @kind wide;
  #L2b88ce.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b88d4.  v2:= ", key: " @kind object;
  #L2b88d8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b88de.  v2:= v1.`com.bumptech.glide.load.engine.DecodeJob.resultKey` @type ^`com.bumptech.glide.load.engine.EngineKey` @kind object;
  #L2b88e2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b88e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b88ee.  v2:= temp @kind object;
  #L2b88f0.  v3:= "DecodeJob" @kind object;
  #L2b88f4.  call temp:= `v`(v3, v2) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2b88fa.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `transcode`(`com.bumptech.glide.load.engine.DecodeJob` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.transcode:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2b8710.  if v2 != 0 then goto L2b8718;
  #L2b8714.  v2:= 0I;
  #L2b8716.  return v2 @kind object;
  #L2b8718.  v0:= v1.`com.bumptech.glide.load.engine.DecodeJob.transcoder` @type ^`com.bumptech.glide.load.resource.transcode.ResourceTranscoder` @kind object;
  #L2b871c.  call temp:= `transcode`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;.transcode:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2b8722.  v2:= temp @kind object;
  #L2b8724.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `transform`(`com.bumptech.glide.load.engine.DecodeJob` v3 @kind this, `com.bumptech.glide.load.engine.Resource` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.transform:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2b8738.  if v4 != 0 then goto L2b8740;
  #L2b873c.  v4:= 0I;
  #L2b873e.  return v4 @kind object;
  #L2b8740.  v0:= v3.`com.bumptech.glide.load.engine.DecodeJob.transformation` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L2b8744.  v1:= v3.`com.bumptech.glide.load.engine.DecodeJob.width` @type ^`int`;
  #L2b8748.  v2:= v3.`com.bumptech.glide.load.engine.DecodeJob.height` @type ^`int`;
  #L2b874c.  call temp:= `transform`(v0, v4, v1, v2) @signature `Lcom/bumptech/glide/load/Transformation;.transform:(Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L2b8752.  v0:= temp @kind object;
  #L2b8754.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b875a.  v1:= temp;
  #L2b875c.  if v1 != 0 then goto L2b8766;
  #L2b8760.  call `recycle`(v4) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L2b8766.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `transformEncodeAndTranscode`(`com.bumptech.glide.load.engine.DecodeJob` v5 @kind this, `com.bumptech.glide.load.engine.Resource` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.transformEncodeAndTranscode:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b8778.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b877e.  v0:= temp @kind wide;
  #L2b8780.  call temp:= `transform`(v5, v6) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.transform:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b8786.  v6:= temp @kind object;
  #L2b8788.  v2:= 2I;
  #L2b878a.  v3:= "DecodeJob" @kind object;
  #L2b878e.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b8794.  v4:= temp;
  #L2b8796.  if v4 == 0 then goto L2b87a4;
  #L2b879a.  v4:= "Transformed resource from source" @kind object;
  #L2b879e.  call `logWithTimeAndKey`(v5, v4, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b87a4.  call `writeTransformedToCache`(v5, v6) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.writeTransformedToCache:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind direct;
  #L2b87aa.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b87b0.  v0:= temp @kind wide;
  #L2b87b2.  call temp:= `transcode`(v5, v6) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.transcode:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b87b8.  v6:= temp @kind object;
  #L2b87ba.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b87c0.  v2:= temp;
  #L2b87c2.  if v2 == 0 then goto L2b87d0;
  #L2b87c6.  v2:= "Transcoded transformed from source" @kind object;
  #L2b87ca.  call `logWithTimeAndKey`(v5, v2, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b87d0.  return v6 @kind object;
}
procedure `void` `writeTransformedToCache`(`com.bumptech.glide.load.engine.DecodeJob` v4 @kind this, `com.bumptech.glide.load.engine.Resource` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.writeTransformedToCache:(Lcom/bumptech/glide/load/engine/Resource;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b890c.  if v5 == 0 then goto L2b8972;
  #L2b8910.  v0:= v4.`com.bumptech.glide.load.engine.DecodeJob.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L2b8914.  call temp:= `cacheResult`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.cacheResult:()Z` @kind virtual;
  #L2b891a.  v0:= temp;
  #L2b891c.  if v0 != 0 then goto L2b8922;
  #L2b8920.  goto L2b8972;
  #L2b8922.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b8928.  v0:= temp @kind wide;
  #L2b892a.  v2:= new `com.bumptech.glide.load.engine.DecodeJob$SourceWriter`;
  #L2b892e.  v3:= v4.`com.bumptech.glide.load.engine.DecodeJob.loadProvider` @type ^`com.bumptech.glide.provider.DataLoadProvider` @kind object;
  #L2b8932.  call temp:= `getEncoder`(v3) @signature `Lcom/bumptech/glide/provider/DataLoadProvider;.getEncoder:()Lcom/bumptech/glide/load/ResourceEncoder;` @kind interface;
  #L2b8938.  v3:= temp @kind object;
  #L2b893a.  call `<init>`(v2, v4, v3, v5) @signature `Lcom/bumptech/glide/load/engine/DecodeJob$SourceWriter;.<init>:(Lcom/bumptech/glide/load/engine/DecodeJob;Lcom/bumptech/glide/load/Encoder;Ljava/lang/Object;)V` @kind direct;
  #L2b8940.  v5:= v4.`com.bumptech.glide.load.engine.DecodeJob.diskCacheProvider` @type ^`com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider` @kind object;
  #L2b8944.  call temp:= `getDiskCache`(v5) @signature `Lcom/bumptech/glide/load/engine/DecodeJob$DiskCacheProvider;.getDiskCache:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L2b894a.  v5:= temp @kind object;
  #L2b894c.  v3:= v4.`com.bumptech.glide.load.engine.DecodeJob.resultKey` @type ^`com.bumptech.glide.load.engine.EngineKey` @kind object;
  #L2b8950.  call `put`(v5, v3, v2) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/cache/DiskCache$Writer;)V` @kind interface;
  #L2b8956.  v5:= 2I;
  #L2b8958.  v2:= "DecodeJob" @kind object;
  #L2b895c.  call temp:= `isLoggable`(v2, v5) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b8962.  v5:= temp;
  #L2b8964.  if v5 == 0 then goto L2b8972;
  #L2b8968.  v5:= "Wrote transformed from source to cache" @kind object;
  #L2b896c.  call `logWithTimeAndKey`(v4, v5, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b8972.  return @kind void;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.DecodeJob` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8888.  v0:= 1I;
  #L2b888a.  v1.`com.bumptech.glide.load.engine.DecodeJob.isCancelled` @type ^`boolean` := v0 @kind boolean;
  #L2b888e.  v0:= v1.`com.bumptech.glide.load.engine.DecodeJob.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L2b8892.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cancel:()V` @kind interface;
  #L2b8898.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `decodeFromSource`(`com.bumptech.glide.load.engine.DecodeJob` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.decodeFromSource:()Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8488.  call temp:= `decodeSource`(v1) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.decodeSource:()Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b848e.  v0:= temp @kind object;
  #L2b8490.  call temp:= `transformEncodeAndTranscode`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.transformEncodeAndTranscode:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b8496.  v0:= temp @kind object;
  #L2b8498.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `decodeResultFromCache`(`com.bumptech.glide.load.engine.DecodeJob` v6 @kind this) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.decodeResultFromCache:()Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2b8518.  v0:= v6.`com.bumptech.glide.load.engine.DecodeJob.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L2b851c.  call temp:= `cacheResult`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.cacheResult:()Z` @kind virtual;
  #L2b8522.  v0:= temp;
  #L2b8524.  if v0 != 0 then goto L2b852c;
  #L2b8528.  v0:= 0I;
  #L2b852a.  return v0 @kind object;
  #L2b852c.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b8532.  v0:= temp @kind wide;
  #L2b8534.  v2:= v6.`com.bumptech.glide.load.engine.DecodeJob.resultKey` @type ^`com.bumptech.glide.load.engine.EngineKey` @kind object;
  #L2b8538.  call temp:= `loadFromCache`(v6, v2) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.loadFromCache:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b853e.  v2:= temp @kind object;
  #L2b8540.  v3:= 2I;
  #L2b8542.  v4:= "DecodeJob" @kind object;
  #L2b8546.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b854c.  v5:= temp;
  #L2b854e.  if v5 == 0 then goto L2b855c;
  #L2b8552.  v5:= "Decoded transformed from cache" @kind object;
  #L2b8556.  call `logWithTimeAndKey`(v6, v5, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b855c.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b8562.  v0:= temp @kind wide;
  #L2b8564.  call temp:= `transcode`(v6, v2) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.transcode:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b856a.  v2:= temp @kind object;
  #L2b856c.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b8572.  v3:= temp;
  #L2b8574.  if v3 == 0 then goto L2b8582;
  #L2b8578.  v3:= "Transcoded transformed from cache" @kind object;
  #L2b857c.  call `logWithTimeAndKey`(v6, v3, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b8582.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `decodeSourceFromCache`(`com.bumptech.glide.load.engine.DecodeJob` v5 @kind this) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.decodeSourceFromCache:()Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b8624.  v0:= v5.`com.bumptech.glide.load.engine.DecodeJob.diskCacheStrategy` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L2b8628.  call temp:= `cacheSource`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.cacheSource:()Z` @kind virtual;
  #L2b862e.  v0:= temp;
  #L2b8630.  if v0 != 0 then goto L2b8638;
  #L2b8634.  v0:= 0I;
  #L2b8636.  return v0 @kind object;
  #L2b8638.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L2b863e.  v0:= temp @kind wide;
  #L2b8640.  v2:= v5.`com.bumptech.glide.load.engine.DecodeJob.resultKey` @type ^`com.bumptech.glide.load.engine.EngineKey` @kind object;
  #L2b8644.  call temp:= `getOriginalKey`(v2) @signature `Lcom/bumptech/glide/load/engine/EngineKey;.getOriginalKey:()Lcom/bumptech/glide/load/Key;` @kind virtual;
  #L2b864a.  v2:= temp @kind object;
  #L2b864c.  call temp:= `loadFromCache`(v5, v2) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.loadFromCache:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b8652.  v2:= temp @kind object;
  #L2b8654.  v3:= 2I;
  #L2b8656.  v4:= "DecodeJob" @kind object;
  #L2b865a.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b8660.  v3:= temp;
  #L2b8662.  if v3 == 0 then goto L2b8670;
  #L2b8666.  v3:= "Decoded source from cache" @kind object;
  #L2b866a.  call `logWithTimeAndKey`(v5, v3, v0) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.logWithTimeAndKey:(Ljava/lang/String;J)V` @kind direct;
  #L2b8670.  call temp:= `transformEncodeAndTranscode`(v5, v2) @signature `Lcom/bumptech/glide/load/engine/DecodeJob;.transformEncodeAndTranscode:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L2b8676.  v0:= temp @kind object;
  #L2b8678.  return v0 @kind object;
}
