record `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock` @kind class @AccessFlag  {
  `int` `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock.interestedThreads` @AccessFlag ;
  `java.util.concurrent.locks.Lock` `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock.lock` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLock;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2bc32c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bc332.  v0:= new `java.util.concurrent.locks.ReentrantLock`;
  #L2bc336.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L2bc33c.  v1.`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock.lock` @type ^`java.util.concurrent.locks.Lock` := v0 @kind object;
  #L2bc340.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock` v0 @kind this, `com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$1` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLock;.<init>:(Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2bc354.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheWriteLocker$WriteLock;.<init>:()V` @kind direct;
  #L2bc35a.  return @kind void;
}
