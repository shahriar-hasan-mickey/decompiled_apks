record `com.bumptech.glide.load.engine.cache.MemorySizeCalculator` @kind class @AccessFlag PUBLIC {
  `int` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator.bitmapPoolSize` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator.context` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator.memoryCacheSize` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator.BITMAP_POOL_TARGET_SCREENS` @AccessFlag STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator.BYTES_PER_ARGB_8888_PIXEL` @AccessFlag STATIC_FINAL;
global `float` `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator.LOW_MEMORY_MAX_SIZE_MULTIPLIER` @AccessFlag STATIC_FINAL;
global `float` `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator.MAX_SIZE_MULTIPLIER` @AccessFlag STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator.MEMORY_CACHE_TARGET_SCREENS` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` v3 @kind this, `android.content.Context` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2bce38.  v0:= "activity" @kind object;
  #L2bce3c.  call temp:= `getSystemService`(v4, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L2bce42.  v0:= temp @kind object;
  #L2bce44.  v0:= (`android.app.ActivityManager`) v0 @kind object;
  #L2bce48.  v1:= new `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions`;
  #L2bce4c.  call temp:= `getResources`(v4) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L2bce52.  v2:= temp @kind object;
  #L2bce54.  call temp:= `getDisplayMetrics`(v2) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L2bce5a.  v2:= temp @kind object;
  #L2bce5c.  call `<init>`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$DisplayMetricsScreenDimensions;.<init>:(Landroid/util/DisplayMetrics;)V` @kind direct;
  #L2bce62.  call `<init>`(v3, v4, v0, v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.<init>:(Landroid/content/Context;Landroid/app/ActivityManager;Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$ScreenDimensions;)V` @kind direct;
  #L2bce68.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` v3 @kind this, `android.content.Context` v4 @kind object, `android.app.ActivityManager` v5 @kind object, `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.<init>:(Landroid/content/Context;Landroid/app/ActivityManager;Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$ScreenDimensions;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2bce7c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bce82.  v3.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.context` @type ^`android.content.Context` := v4 @kind object;
  #L2bce86.  call temp:= `getMaxSize`(v5) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getMaxSize:(Landroid/app/ActivityManager;)I` @kind static;
  #L2bce8c.  v4:= temp;
  #L2bce8e.  call temp:= `getWidthPixels`(v6) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$ScreenDimensions;.getWidthPixels:()I` @kind interface;
  #L2bce94.  v0:= temp;
  #L2bce96.  call temp:= `getHeightPixels`(v6) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$ScreenDimensions;.getHeightPixels:()I` @kind interface;
  #L2bce9c.  v6:= temp;
  #L2bce9e.  v0:= v0 * v6 @kind int;
  #L2bcea2.  v0:= v0 * 4;
  #L2bcea6.  v6:= v0 * 4;
  #L2bceaa.  v0:= v0 * 2;
  #L2bceae.  v1:= v0 + v6 @kind int;
  #L2bceb2.  if v1 > v4 then goto L2bcec0;
  #L2bceb6.  v3.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.memoryCacheSize` @type ^`int` := v0;
  #L2bceba.  v3.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.bitmapPoolSize` @type ^`int` := v6;
  #L2bcebe.  goto L2bcee0;
  #L2bcec0.  v6:= (`float`) v4 @kind i2f;
  #L2bcec2.  v0:= 6.0F;
  #L2bcec6.  v6:= v6 / v0 @kind float;
  #L2bcec8.  call temp:= `round`(v6) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2bcece.  v6:= temp;
  #L2bced0.  v0:= v6 * 2;
  #L2bced4.  v3.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.memoryCacheSize` @type ^`int` := v0;
  #L2bced8.  v6:= v6 * 4;
  #L2bcedc.  v3.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.bitmapPoolSize` @type ^`int` := v6;
  #L2bcee0.  v6:= 3I;
  #L2bcee2.  v0:= "MemorySizeCalculator" @kind object;
  #L2bcee6.  call temp:= `isLoggable`(v0, v6) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2bceec.  v6:= temp;
  #L2bceee.  if v6 == 0 then goto L2bcfa4;
  #L2bcef2.  v6:= new `java.lang.StringBuilder`;
  #L2bcef6.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bcefc.  v2:= "Calculated memory cache size: " @kind object;
  #L2bcf00.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf06.  v2:= v3.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.memoryCacheSize` @type ^`int`;
  #L2bcf0a.  call temp:= `toMb`(v3, v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.toMb:(I)Ljava/lang/String;` @kind direct;
  #L2bcf10.  v2:= temp @kind object;
  #L2bcf12.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf18.  v2:= " pool size: " @kind object;
  #L2bcf1c.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf22.  v2:= v3.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.bitmapPoolSize` @type ^`int`;
  #L2bcf26.  call temp:= `toMb`(v3, v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.toMb:(I)Ljava/lang/String;` @kind direct;
  #L2bcf2c.  v2:= temp @kind object;
  #L2bcf2e.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf34.  v2:= " memory class limited? " @kind object;
  #L2bcf38.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf3e.  if v1 <= v4 then goto L2bcf46;
  #L2bcf42.  v1:= 1I;
  #L2bcf44.  goto L2bcf48;
  #L2bcf46.  v1:= 0I;
  #L2bcf48.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf4e.  v1:= " max size: " @kind object;
  #L2bcf52.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf58.  call temp:= `toMb`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.toMb:(I)Ljava/lang/String;` @kind direct;
  #L2bcf5e.  v4:= temp @kind object;
  #L2bcf60.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf66.  v4:= " memoryClass: " @kind object;
  #L2bcf6a.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf70.  call temp:= `getMemoryClass`(v5) @signature `Landroid/app/ActivityManager;.getMemoryClass:()I` @kind virtual;
  #L2bcf76.  v4:= temp;
  #L2bcf78.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf7e.  v4:= " isLowMemoryDevice: " @kind object;
  #L2bcf82.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf88.  call temp:= `isLowMemoryDevice`(v5) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.isLowMemoryDevice:(Landroid/app/ActivityManager;)Z` @kind static;
  #L2bcf8e.  v4:= temp;
  #L2bcf90.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bcf96.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bcf9c.  v4:= temp @kind object;
  #L2bcf9e.  call temp:= `d`(v0, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2bcfa4.  return @kind void;
}
procedure `int` `getMaxSize`(`android.app.ActivityManager` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getMaxSize:(Landroid/app/ActivityManager;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2bcdb4.  call temp:= `getMemoryClass`(v1) @signature `Landroid/app/ActivityManager;.getMemoryClass:()I` @kind virtual;
  #L2bcdba.  v0:= temp;
  #L2bcdbc.  v0:= v0 * 1024;
  #L2bcdc0.  v0:= v0 * 1024;
  #L2bcdc4.  call temp:= `isLowMemoryDevice`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.isLowMemoryDevice:(Landroid/app/ActivityManager;)Z` @kind static;
  #L2bcdca.  v1:= temp;
  #L2bcdcc.  v0:= (`float`) v0 @kind i2f;
  #L2bcdce.  if v1 == 0 then goto L2bcdda;
  #L2bcdd2.  v1:= 1051260355I;
  #L2bcdd8.  goto L2bcde0;
  #L2bcdda.  v1:= 1053609165I;
  #L2bcde0.  v0:= v0 * v1 @kind float;
  #L2bcde4.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2bcdea.  v1:= temp;
  #L2bcdec.  return v1;
}
procedure `boolean` `isLowMemoryDevice`(`android.app.ActivityManager` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.isLowMemoryDevice:(Landroid/app/ActivityManager;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2bcd60.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2bcd64.  v1:= 19I;
  #L2bcd68.  if v0 < v1 then goto L2bcd76;
  #L2bcd6c.  call temp:= `isLowRamDevice`(v2) @signature `Landroid/app/ActivityManager;.isLowRamDevice:()Z` @kind virtual;
  #L2bcd72.  v2:= temp;
  #L2bcd74.  return v2;
  #L2bcd76.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2bcd7a.  v0:= 11I;
  #L2bcd7e.  if v2 >= v0 then goto L2bcd86;
  #L2bcd82.  v2:= 1I;
  #L2bcd84.  goto L2bcd88;
  #L2bcd86.  v2:= 0I;
  #L2bcd88.  return v2;
}
procedure `java.lang.String` `toMb`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` v3 @kind this, `int` v4 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.toMb:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2bce18.  v0:= v3.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.context` @type ^`android.content.Context` @kind object;
  #L2bce1c.  v1:= (`long`) v4 @kind i2l;
  #L2bce1e.  call temp:= `formatFileSize`(v0, v1) @signature `Landroid/text/format/Formatter;.formatFileSize:(Landroid/content/Context;J)Ljava/lang/String;` @kind static;
  #L2bce24.  v4:= temp @kind object;
  #L2bce26.  return v4 @kind object;
}
procedure `int` `getBitmapPoolSize`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getBitmapPoolSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bcd9c.  v0:= v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.bitmapPoolSize` @type ^`int`;
  #L2bcda0.  return v0;
}
procedure `int` `getMemoryCacheSize`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getMemoryCacheSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bce00.  v0:= v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator.memoryCacheSize` @type ^`int`;
  #L2bce04.  return v0;
}
