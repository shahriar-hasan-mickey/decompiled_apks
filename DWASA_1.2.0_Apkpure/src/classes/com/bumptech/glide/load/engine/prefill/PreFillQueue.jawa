record `com.bumptech.glide.load.engine.prefill.PreFillQueue` @kind class @AccessFlag FINAL {
  `java.util.Map` `com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsPerType` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsRemaining` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillQueue.keyIndex` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.load.engine.prefill.PreFillQueue.keyList` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.PreFillQueue` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillQueue;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2bdb48.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bdb4e.  v2.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsPerType` @type ^`java.util.Map` := v3 @kind object;
  #L2bdb52.  v0:= new `java.util.ArrayList`;
  #L2bdb56.  call temp:= `keySet`(v3) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2bdb5c.  v1:= temp @kind object;
  #L2bdb5e.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2bdb64.  v2.`com.bumptech.glide.load.engine.prefill.PreFillQueue.keyList` @type ^`java.util.List` := v0 @kind object;
  #L2bdb68.  call temp:= `values`(v3) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2bdb6e.  v3:= temp @kind object;
  #L2bdb70.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2bdb76.  v3:= temp @kind object;
  #L2bdb78.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2bdb7e.  v0:= temp;
  #L2bdb80.  if v0 == 0 then goto L2bdba4;
  #L2bdb84.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2bdb8a.  v0:= temp @kind object;
  #L2bdb8c.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2bdb90.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsRemaining` @type ^`int`;
  #L2bdb94.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bdb9a.  v0:= temp;
  #L2bdb9c.  v1:= v1 + v0 @kind int;
  #L2bdb9e.  v2.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsRemaining` @type ^`int` := v1;
  #L2bdba2.  goto L2bdb78;
  #L2bdba4.  return @kind void;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.prefill.PreFillQueue` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillQueue;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bdb30.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsRemaining` @type ^`int`;
  #L2bdb34.  return v0;
}
procedure `boolean` `isEmpty`(`com.bumptech.glide.load.engine.prefill.PreFillQueue` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bda60.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsRemaining` @type ^`int`;
  #L2bda64.  if v0 != 0 then goto L2bda6c;
  #L2bda68.  v0:= 1I;
  #L2bda6a.  goto L2bda6e;
  #L2bda6c.  v0:= 0I;
  #L2bda6e.  return v0;
}
procedure `com.bumptech.glide.load.engine.prefill.PreFillType` `remove`(`com.bumptech.glide.load.engine.prefill.PreFillQueue` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillQueue;.remove:()Lcom/bumptech/glide/load/engine/prefill/PreFillType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bda80.  v0:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.keyList` @type ^`java.util.List` @kind object;
  #L2bda84.  v1:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.keyIndex` @type ^`int`;
  #L2bda88.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2bda8e.  v0:= temp @kind object;
  #L2bda90.  v0:= (`com.bumptech.glide.load.engine.prefill.PreFillType`) v0 @kind object;
  #L2bda94.  v1:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsPerType` @type ^`java.util.Map` @kind object;
  #L2bda98.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bda9e.  v1:= temp @kind object;
  #L2bdaa0.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L2bdaa4.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bdaaa.  v2:= temp;
  #L2bdaac.  v3:= 1I;
  #L2bdaae.  if v2 != v3 then goto L2bdacc;
  #L2bdab2.  v1:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsPerType` @type ^`java.util.Map` @kind object;
  #L2bdab6.  call temp:= `remove`(v1, v0) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bdabc.  v1:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.keyList` @type ^`java.util.List` @kind object;
  #L2bdac0.  v2:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.keyIndex` @type ^`int`;
  #L2bdac4.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2bdaca.  goto L2bdae8;
  #L2bdacc.  v2:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsPerType` @type ^`java.util.Map` @kind object;
  #L2bdad0.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2bdad6.  v1:= temp;
  #L2bdad8.  v1:= v1 - v3 @kind int;
  #L2bdada.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bdae0.  v1:= temp @kind object;
  #L2bdae2.  call temp:= `put`(v2, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bdae8.  v1:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsRemaining` @type ^`int`;
  #L2bdaec.  v1:= v1 - v3 @kind int;
  #L2bdaee.  v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.bitmapsRemaining` @type ^`int` := v1;
  #L2bdaf2.  v1:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.keyList` @type ^`java.util.List` @kind object;
  #L2bdaf6.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2bdafc.  v1:= temp;
  #L2bdafe.  if v1 == 0 then goto L2bdb06;
  #L2bdb02.  v1:= 0I;
  #L2bdb04.  goto L2bdb1a;
  #L2bdb06.  v1:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.keyIndex` @type ^`int`;
  #L2bdb0a.  v1:= v1 + v3 @kind int;
  #L2bdb0c.  v2:= v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.keyList` @type ^`java.util.List` @kind object;
  #L2bdb10.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2bdb16.  v2:= temp;
  #L2bdb18.  v1:= v1 %% v2 @kind int;
  #L2bdb1a.  v4.`com.bumptech.glide.load.engine.prefill.PreFillQueue.keyIndex` @type ^`int` := v1;
  #L2bdb1e.  return v0 @kind object;
}
