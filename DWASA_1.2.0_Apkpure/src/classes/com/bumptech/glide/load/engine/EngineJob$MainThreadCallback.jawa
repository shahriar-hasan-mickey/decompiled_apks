record `com.bumptech.glide.load.engine.EngineJob$MainThreadCallback` @kind class @AccessFlag  extends `android.os.Handler$Callback` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.EngineJob$MainThreadCallback` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/EngineJob$MainThreadCallback;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b8ccc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b8cd2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.EngineJob$MainThreadCallback` v0 @kind this, `com.bumptech.glide.load.engine.EngineJob$1` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/EngineJob$MainThreadCallback;.<init>:(Lcom/bumptech/glide/load/engine/EngineJob$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2b8ce4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/EngineJob$MainThreadCallback;.<init>:()V` @kind direct;
  #L2b8cea.  return @kind void;
}
procedure `boolean` `handleMessage`(`com.bumptech.glide.load.engine.EngineJob$MainThreadCallback` v3 @kind this, `android.os.Message` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/EngineJob$MainThreadCallback;.handleMessage:(Landroid/os/Message;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b8c80.  v0:= v4.`android.os.Message.what` @type ^`int`;
  #L2b8c84.  v1:= 1I;
  #L2b8c86.  if v1 == v0 then goto L2b8c9a;
  #L2b8c8a.  v0:= 2I;
  #L2b8c8c.  v2:= v4.`android.os.Message.what` @type ^`int`;
  #L2b8c90.  if v0 != v2 then goto L2b8c96;
  #L2b8c94.  goto L2b8c9a;
  #L2b8c96.  v4:= 0I;
  #L2b8c98.  return v4;
  #L2b8c9a.  v0:= v4.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L2b8c9e.  v0:= (`com.bumptech.glide.load.engine.EngineJob`) v0 @kind object;
  #L2b8ca2.  v4:= v4.`android.os.Message.what` @type ^`int`;
  #L2b8ca6.  if v1 != v4 then goto L2b8cb2;
  #L2b8caa.  call `access$100`(v0) @signature `Lcom/bumptech/glide/load/engine/EngineJob;.access$100:(Lcom/bumptech/glide/load/engine/EngineJob;)V` @kind static;
  #L2b8cb0.  goto L2b8cb8;
  #L2b8cb2.  call `access$200`(v0) @signature `Lcom/bumptech/glide/load/engine/EngineJob;.access$200:(Lcom/bumptech/glide/load/engine/EngineJob;)V` @kind static;
  #L2b8cb8.  return v1;
}
