record `com.bumptech.glide.gifencoder.AnimatedGifEncoder` @kind class @AccessFlag PUBLIC {
  `boolean` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.closeStream` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorDepth` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorTab` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.delay` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.dispose` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.firstFrame` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.hasTransparentPixels` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.height` @AccessFlag PRIVATE;
  `android.graphics.Bitmap` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.image` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifencoder.AnimatedGifEncoder.indexedPixels` @AccessFlag PRIVATE;
  `java.io.OutputStream` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.palSize` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifencoder.AnimatedGifEncoder.pixels` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.repeat` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.sample` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.sizeSet` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.started` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.transIndex` @AccessFlag PRIVATE;
  `java.lang.Integer` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.transparent` @AccessFlag PRIVATE;
  `boolean`[] `com.bumptech.glide.gifencoder.AnimatedGifEncoder.usedEntry` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifencoder.AnimatedGifEncoder.width` @AccessFlag PRIVATE;
}
global `double` `@@com.bumptech.glide.gifencoder.AnimatedGifEncoder.MIN_TRANSPARENT_PERCENTAGE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.bumptech.glide.gifencoder.AnimatedGifEncoder.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v3 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2b5bb4.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5bba.  v0:= 0I;
  #L2b5bbc.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.transparent` @type ^`java.lang.Integer` := v0 @kind object;
  #L2b5bc0.  v0:= -1I;
  #L2b5bc2.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.repeat` @type ^`int` := v0;
  #L2b5bc6.  v1:= 0I;
  #L2b5bc8.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.delay` @type ^`int` := v1;
  #L2b5bcc.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.started` @type ^`boolean` := v1 @kind boolean;
  #L2b5bd0.  v2:= 256I;
  #L2b5bd4.  v2:= new `boolean`[v2];
  #L2b5bd8.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.usedEntry` @type ^`boolean`[] := v2 @kind object;
  #L2b5bdc.  v2:= 7I;
  #L2b5bde.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.palSize` @type ^`int` := v2;
  #L2b5be2.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.dispose` @type ^`int` := v0;
  #L2b5be6.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.closeStream` @type ^`boolean` := v1 @kind boolean;
  #L2b5bea.  v0:= 1I;
  #L2b5bec.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.firstFrame` @type ^`boolean` := v0 @kind boolean;
  #L2b5bf0.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.sizeSet` @type ^`boolean` := v1 @kind boolean;
  #L2b5bf4.  v0:= 10I;
  #L2b5bf8.  v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.sample` @type ^`int` := v0;
  #L2b5bfc.  return @kind void;
}
procedure `void` `analyzePixels`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v9 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.analyzePixels:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2b5c10.  v0:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.pixels` @type ^`byte`[] @kind object;
  #L2b5c14.  v1:= length @variable v0;
  #L2b5c16.  v2:= v1 / 3;
  #L2b5c1a.  v3:= new `byte`[v2];
  #L2b5c1e.  v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.indexedPixels` @type ^`byte`[] := v3 @kind object;
  #L2b5c22.  v3:= new `com.bumptech.glide.gifencoder.NeuQuant`;
  #L2b5c26.  v4:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.sample` @type ^`int`;
  #L2b5c2a.  call `<init>`(v3, v0, v1, v4) @signature `Lcom/bumptech/glide/gifencoder/NeuQuant;.<init>:([BII)V` @kind direct;
  #L2b5c30.  call temp:= `process`(v3) @signature `Lcom/bumptech/glide/gifencoder/NeuQuant;.process:()[B` @kind virtual;
  #L2b5c36.  v0:= temp @kind object;
  #L2b5c38.  v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorTab` @type ^`byte`[] := v0 @kind object;
  #L2b5c3c.  v0:= 0I;
  #L2b5c3e.  v1:= 0I;
  #L2b5c40.  v4:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorTab` @type ^`byte`[] @kind object;
  #L2b5c44.  v5:= length @variable v4;
  #L2b5c46.  if v1 >= v5 then goto L2b5c70;
  #L2b5c4a.  v5:= v4[v1] @kind byte;
  #L2b5c4e.  v6:= v1 + 2;
  #L2b5c52.  v7:= v4[v6] @kind byte;
  #L2b5c56.  v4[v1]:= v7 @kind byte;
  #L2b5c5a.  v4[v6]:= v5 @kind byte;
  #L2b5c5e.  v4:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.usedEntry` @type ^`boolean`[] @kind object;
  #L2b5c62.  v5:= v1 / 3;
  #L2b5c66.  v4[v5]:= v0 @kind boolean;
  #L2b5c6a.  v1:= v1 + 3;
  #L2b5c6e.  goto L2b5c40;
  #L2b5c70.  v1:= 0I;
  #L2b5c72.  v4:= 0I;
  #L2b5c74.  if v1 >= v2 then goto L2b5cc4;
  #L2b5c78.  v5:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.pixels` @type ^`byte`[] @kind object;
  #L2b5c7c.  v6:= v4 + 1;
  #L2b5c80.  v4:= v5[v4] @kind byte;
  #L2b5c84.  v4:= v4 ^& 255;
  #L2b5c88.  v7:= v6 + 1;
  #L2b5c8c.  v6:= v5[v6] @kind byte;
  #L2b5c90.  v6:= v6 ^& 255;
  #L2b5c94.  v8:= v7 + 1;
  #L2b5c98.  v5:= v5[v7] @kind byte;
  #L2b5c9c.  v5:= v5 ^& 255;
  #L2b5ca0.  call temp:= `map`(v3, v4, v6, v5) @signature `Lcom/bumptech/glide/gifencoder/NeuQuant;.map:(III)I` @kind virtual;
  #L2b5ca6.  v4:= temp;
  #L2b5ca8.  v5:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.usedEntry` @type ^`boolean`[] @kind object;
  #L2b5cac.  v6:= 1I;
  #L2b5cae.  v5[v4]:= v6 @kind boolean;
  #L2b5cb2.  v5:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.indexedPixels` @type ^`byte`[] @kind object;
  #L2b5cb6.  v4:= (`byte`) v4 @kind i2b;
  #L2b5cb8.  v5[v1]:= v4 @kind byte;
  #L2b5cbc.  v1:= v1 + 1;
  #L2b5cc0.  v4:= v8;
  #L2b5cc2.  goto L2b5c74;
  #L2b5cc4.  v1:= 0I;
  #L2b5cc6.  v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.pixels` @type ^`byte`[] := v1 @kind object;
  #L2b5cca.  v1:= 8I;
  #L2b5cce.  v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorDepth` @type ^`int` := v1;
  #L2b5cd2.  v1:= 7I;
  #L2b5cd4.  v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.palSize` @type ^`int` := v1;
  #L2b5cd8.  v1:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.transparent` @type ^`java.lang.Integer` @kind object;
  #L2b5cdc.  if v1 == 0 then goto L2b5cf6;
  #L2b5ce0.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2b5ce6.  v0:= temp;
  #L2b5ce8.  call temp:= `findClosest`(v9, v0) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.findClosest:(I)I` @kind direct;
  #L2b5cee.  v0:= temp;
  #L2b5cf0.  v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.transIndex` @type ^`int` := v0;
  #L2b5cf4.  goto L2b5d0a;
  #L2b5cf6.  v1:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.hasTransparentPixels` @type ^`boolean` @kind boolean;
  #L2b5cfa.  if v1 == 0 then goto L2b5d0a;
  #L2b5cfe.  call temp:= `findClosest`(v9, v0) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.findClosest:(I)I` @kind direct;
  #L2b5d04.  v0:= temp;
  #L2b5d06.  v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.transIndex` @type ^`int` := v0;
  #L2b5d0a.  return @kind void;
}
procedure `int` `findClosest`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v9 @kind this, `int` v10 ) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.findClosest:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2b5b08.  v0:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorTab` @type ^`byte`[] @kind object;
  #L2b5b0c.  if v0 != 0 then goto L2b5b14;
  #L2b5b10.  v10:= -1I;
  #L2b5b12.  return v10;
  #L2b5b14.  call temp:= `red`(v10) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2b5b1a.  v0:= temp;
  #L2b5b1c.  call temp:= `green`(v10) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2b5b22.  v1:= temp;
  #L2b5b24.  call temp:= `blue`(v10) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2b5b2a.  v10:= temp;
  #L2b5b2c.  v2:= 16777216I;
  #L2b5b30.  v3:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorTab` @type ^`byte`[] @kind object;
  #L2b5b34.  v3:= length @variable v3;
  #L2b5b36.  v4:= 0I;
  #L2b5b38.  v2:= 0I;
  #L2b5b3a.  v5:= 16777216I;
  #L2b5b3e.  if v4 >= v3 then goto L2b5ba0;
  #L2b5b42.  v6:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorTab` @type ^`byte`[] @kind object;
  #L2b5b46.  v7:= v4 + 1;
  #L2b5b4a.  v4:= v6[v4] @kind byte;
  #L2b5b4e.  v4:= v4 ^& 255;
  #L2b5b52.  v4:= v0 - v4 @kind int;
  #L2b5b56.  v8:= v7 + 1;
  #L2b5b5a.  v7:= v6[v7] @kind byte;
  #L2b5b5e.  v7:= v7 ^& 255;
  #L2b5b62.  v7:= v1 - v7 @kind int;
  #L2b5b66.  v6:= v6[v8] @kind byte;
  #L2b5b6a.  v6:= v6 ^& 255;
  #L2b5b6e.  v6:= v10 - v6 @kind int;
  #L2b5b72.  v4:= v4 * v4 @kind int;
  #L2b5b76.  v7:= v7 * v7 @kind int;
  #L2b5b7a.  v4:= v4 + v7 @kind int;
  #L2b5b7c.  v6:= v6 * v6 @kind int;
  #L2b5b80.  v4:= v4 + v6 @kind int;
  #L2b5b82.  v6:= v8 / 3;
  #L2b5b86.  v7:= v9.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.usedEntry` @type ^`boolean`[] @kind object;
  #L2b5b8a.  v7:= v7[v6] @kind boolean;
  #L2b5b8e.  if v7 == 0 then goto L2b5b9a;
  #L2b5b92.  if v4 >= v5 then goto L2b5b9a;
  #L2b5b96.  v5:= v4;
  #L2b5b98.  v2:= v6;
  #L2b5b9a.  v4:= v8 + 1;
  #L2b5b9e.  goto L2b5b3e;
  #L2b5ba0.  return v2;
}
procedure `void` `getImagePixels`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v11 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.getImagePixels:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2b5d1c.  v0:= v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.image` @type ^`android.graphics.Bitmap` @kind object;
  #L2b5d20.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2b5d26.  v7:= temp;
  #L2b5d28.  v0:= v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.image` @type ^`android.graphics.Bitmap` @kind object;
  #L2b5d2c.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2b5d32.  v8:= temp;
  #L2b5d34.  v0:= v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.width` @type ^`int`;
  #L2b5d38.  if v7 != v0 then goto L2b5d44;
  #L2b5d3c.  v0:= v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.height` @type ^`int`;
  #L2b5d40.  if v8 == v0 then goto L2b5d70;
  #L2b5d44.  v0:= v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.width` @type ^`int`;
  #L2b5d48.  v1:= v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.height` @type ^`int`;
  #L2b5d4c.  v2:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2b5d50.  call temp:= `createBitmap`(v0, v1, v2) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L2b5d56.  v0:= temp @kind object;
  #L2b5d58.  v1:= new `android.graphics.Canvas`;
  #L2b5d5c.  call `<init>`(v1, v0) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L2b5d62.  v2:= 0I;
  #L2b5d64.  v3:= 0I;
  #L2b5d66.  call `drawBitmap`(v1, v0, v3, v3, v2) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L2b5d6c.  v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.image` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L2b5d70.  v0:= v7 * v8 @kind int;
  #L2b5d74.  v0:= new `int`[v0];
  #L2b5d78.  v1:= v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.image` @type ^`android.graphics.Bitmap` @kind object;
  #L2b5d7c.  v3:= 0I;
  #L2b5d7e.  v5:= 0I;
  #L2b5d80.  v6:= 0I;
  #L2b5d82.  v2:= v0 @kind object;
  #L2b5d84.  v4:= v7;
  #L2b5d86.  call `getPixels`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Bitmap;.getPixels:([IIIIIII)V` @kind virtual;
  #L2b5d8c.  v1:= length @variable v0;
  #L2b5d8e.  v2:= 3I;
  #L2b5d90.  v1:= v1 * 3;
  #L2b5d94.  v1:= new `byte`[v1];
  #L2b5d98.  v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.pixels` @type ^`byte`[] := v1 @kind object;
  #L2b5d9c.  v1:= 0I;
  #L2b5d9e.  v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.hasTransparentPixels` @type ^`boolean` := v1 @kind boolean;
  #L2b5da2.  v3:= length @variable v0;
  #L2b5da4.  v4:= 0I;
  #L2b5da6.  v5:= 0I;
  #L2b5da8.  v6:= 0I;
  #L2b5daa.  if v4 >= v3 then goto L2b5df8;
  #L2b5dae.  v7:= v0[v4];
  #L2b5db2.  if v7 != 0 then goto L2b5dba;
  #L2b5db6.  v5:= v5 + 1;
  #L2b5dba.  v8:= v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.pixels` @type ^`byte`[] @kind object;
  #L2b5dbe.  v9:= v6 + 1;
  #L2b5dc2.  v10:= v7 ^& 255;
  #L2b5dc6.  v10:= (`byte`) v10 @kind i2b;
  #L2b5dc8.  v8[v6]:= v10 @kind byte;
  #L2b5dcc.  v6:= v9 + 1;
  #L2b5dd0.  v10:= v7 ^> 8;
  #L2b5dd4.  v10:= v10 ^& 255;
  #L2b5dd8.  v10:= (`byte`) v10 @kind i2b;
  #L2b5dda.  v8[v9]:= v10 @kind byte;
  #L2b5dde.  v9:= v6 + 1;
  #L2b5de2.  v7:= v7 ^> 16;
  #L2b5de6.  v7:= v7 ^& 255;
  #L2b5dea.  v7:= (`byte`) v7 @kind i2b;
  #L2b5dec.  v8[v6]:= v7 @kind byte;
  #L2b5df0.  v4:= v4 + 1;
  #L2b5df4.  v6:= v9;
  #L2b5df6.  goto L2b5daa;
  #L2b5df8.  v5:= v5 * 100;
  #L2b5dfc.  v3:= (`double`) v5 @kind i2d;
  #L2b5dfe.  v0:= length @variable v0;
  #L2b5e00.  v5:= (`double`) v0 @kind i2d;
  #L2b5e02.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2b5e08.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2b5e0e.  v3:= v3 / v5 @kind double;
  #L2b5e10.  v5:= 4.0D;
  #L2b5e14.  v0:= dcmpl(v3, v5);
  #L2b5e18.  if v0 <= 0 then goto L2b5e1e;
  #L2b5e1c.  v1:= 1I;
  #L2b5e1e.  v11.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.hasTransparentPixels` @type ^`boolean` := v1 @kind boolean;
  #L2b5e22.  v0:= "AnimatedGifEncoder" @kind object;
  #L2b5e26.  call temp:= `isLoggable`(v0, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2b5e2c.  v1:= temp;
  #L2b5e2e.  if v1 == 0 then goto L2b5e64;
  #L2b5e32.  v1:= new `java.lang.StringBuilder`;
  #L2b5e36.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b5e3c.  v2:= "got pixels for frame with " @kind object;
  #L2b5e40.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b5e46.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b5e4c.  v2:= "% transparent pixels" @kind object;
  #L2b5e50.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b5e56.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b5e5c.  v1:= temp @kind object;
  #L2b5e5e.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2b5e64.  return @kind void;
}
procedure `void` `writeGraphicCtrlExt`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v5 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeGraphicCtrlExt:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b5f9c.  v0:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b5fa0.  v1:= 33I;
  #L2b5fa4.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b5faa.  v0:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b5fae.  v1:= 249I;
  #L2b5fb2.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b5fb8.  v0:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b5fbc.  v1:= 4I;
  #L2b5fbe.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b5fc4.  v0:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.transparent` @type ^`java.lang.Integer` @kind object;
  #L2b5fc8.  v1:= 2I;
  #L2b5fca.  v2:= 0I;
  #L2b5fcc.  if v0 != 0 then goto L2b5fde;
  #L2b5fd0.  v0:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.hasTransparentPixels` @type ^`boolean` @kind boolean;
  #L2b5fd4.  if v0 != 0 then goto L2b5fde;
  #L2b5fd8.  v0:= 0I;
  #L2b5fda.  v3:= 0I;
  #L2b5fdc.  goto L2b5fe2;
  #L2b5fde.  v0:= 1I;
  #L2b5fe0.  v3:= 2I;
  #L2b5fe2.  v4:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.dispose` @type ^`int`;
  #L2b5fe6.  if v4 < 0 then goto L2b5fee;
  #L2b5fea.  v3:= v4 ^& 7;
  #L2b5fee.  v1:= v3 ^< 2;
  #L2b5ff2.  v3:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b5ff6.  v1:= v1 ^| v2 @kind int;
  #L2b5ff8.  v1:= v1 ^| v2 @kind int;
  #L2b5ffa.  v0:= v0 ^| v1 @kind int;
  #L2b5ffc.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b6002.  v0:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.delay` @type ^`int`;
  #L2b6006.  call `writeShort`(v5, v0) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeShort:(I)V` @kind direct;
  #L2b600c.  v0:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b6010.  v1:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.transIndex` @type ^`int`;
  #L2b6014.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b601a.  v0:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b601e.  call `write`(v0, v2) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b6024.  return @kind void;
}
procedure `void` `writeImageDesc`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeImageDesc:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2b6038.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b603c.  v1:= 44I;
  #L2b6040.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b6046.  v0:= 0I;
  #L2b6048.  call `writeShort`(v2, v0) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeShort:(I)V` @kind direct;
  #L2b604e.  call `writeShort`(v2, v0) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeShort:(I)V` @kind direct;
  #L2b6054.  v1:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.width` @type ^`int`;
  #L2b6058.  call `writeShort`(v2, v1) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeShort:(I)V` @kind direct;
  #L2b605e.  v1:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.height` @type ^`int`;
  #L2b6062.  call `writeShort`(v2, v1) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeShort:(I)V` @kind direct;
  #L2b6068.  v1:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.firstFrame` @type ^`boolean` @kind boolean;
  #L2b606c.  if v1 == 0 then goto L2b607c;
  #L2b6070.  v1:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b6074.  call `write`(v1, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b607a.  goto L2b608e;
  #L2b607c.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b6080.  v1:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.palSize` @type ^`int`;
  #L2b6084.  v1:= v1 ^| 128;
  #L2b6088.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b608e.  return @kind void;
}
procedure `void` `writeLSD`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeLSD:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2b60a0.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.width` @type ^`int`;
  #L2b60a4.  call `writeShort`(v2, v0) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeShort:(I)V` @kind direct;
  #L2b60aa.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.height` @type ^`int`;
  #L2b60ae.  call `writeShort`(v2, v0) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeShort:(I)V` @kind direct;
  #L2b60b4.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b60b8.  v1:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.palSize` @type ^`int`;
  #L2b60bc.  v1:= v1 ^| 240;
  #L2b60c0.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b60c6.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b60ca.  v1:= 0I;
  #L2b60cc.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b60d2.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b60d6.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b60dc.  return @kind void;
}
procedure `void` `writeNetscapeExt`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeNetscapeExt:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2b60f0.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b60f4.  v1:= 33I;
  #L2b60f8.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b60fe.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b6102.  v1:= 255I;
  #L2b6106.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b610c.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b6110.  v1:= 11I;
  #L2b6114.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b611a.  v0:= "NETSCAPE2.0" @kind object;
  #L2b611e.  call `writeString`(v2, v0) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeString:(Ljava/lang/String;)V` @kind direct;
  #L2b6124.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b6128.  v1:= 3I;
  #L2b612a.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b6130.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b6134.  v1:= 1I;
  #L2b6136.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b613c.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.repeat` @type ^`int`;
  #L2b6140.  call `writeShort`(v2, v0) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeShort:(I)V` @kind direct;
  #L2b6146.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b614a.  v1:= 0I;
  #L2b614c.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b6152.  return @kind void;
}
procedure `void` `writePalette`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v4 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writePalette:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b6164.  v0:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b6168.  v1:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorTab` @type ^`byte`[] @kind object;
  #L2b616c.  v2:= length @variable v1;
  #L2b616e.  v3:= 0I;
  #L2b6170.  call `write`(v0, v1, v3, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L2b6176.  v0:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorTab` @type ^`byte`[] @kind object;
  #L2b617a.  v0:= length @variable v0;
  #L2b617c.  v0:= v0 - 768;
  #L2b6180.  v1:= 0I;
  #L2b6182.  if v1 >= v0 then goto L2b6196;
  #L2b6186.  v2:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b618a.  call `write`(v2, v3) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b6190.  v1:= v1 + 1;
  #L2b6194.  goto L2b6182;
  #L2b6196.  return @kind void;
}
procedure `void` `writePixels`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v5 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writePixels:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b61a8.  v0:= new `com.bumptech.glide.gifencoder.LZWEncoder`;
  #L2b61ac.  v1:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.width` @type ^`int`;
  #L2b61b0.  v2:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.height` @type ^`int`;
  #L2b61b4.  v3:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.indexedPixels` @type ^`byte`[] @kind object;
  #L2b61b8.  v4:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorDepth` @type ^`int`;
  #L2b61bc.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/gifencoder/LZWEncoder;.<init>:(II[BI)V` @kind direct;
  #L2b61c2.  v1:= v5.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b61c6.  call `encode`(v0, v1) @signature `Lcom/bumptech/glide/gifencoder/LZWEncoder;.encode:(Ljava/io/OutputStream;)V` @kind virtual;
  #L2b61cc.  return @kind void;
}
procedure `void` `writeShort`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeShort:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2b61e0.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b61e4.  v1:= v3 ^& 255;
  #L2b61e8.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b61ee.  v0:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b61f2.  v3:= v3 ^> 8;
  #L2b61f6.  v3:= v3 ^& 255;
  #L2b61fa.  call `write`(v0, v3) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b6200.  return @kind void;
}
procedure `void` `writeString`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeString:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2b6214.  v0:= 0I;
  #L2b6216.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2b621c.  v1:= temp;
  #L2b621e.  if v0 >= v1 then goto L2b623c;
  #L2b6222.  v1:= v3.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b6226.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2b622c.  v2:= temp;
  #L2b622e.  v2:= (`byte`) v2 @kind i2b;
  #L2b6230.  call `write`(v1, v2) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b6236.  v0:= v0 + 1;
  #L2b623a.  goto L2b6216;
  #L2b623c.  return @kind void;
}
procedure `boolean` `addFrame`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v4 @kind this, `android.graphics.Bitmap` v5 @kind object) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.addFrame:(Landroid/graphics/Bitmap;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b593c.  v0:= 0I;
  #L2b593e.  if v5 == 0 then goto L2b59c4;
  #L2b5942.  v1:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.started` @type ^`boolean` @kind boolean;
  #L2b5946.  if v1 != 0 then goto L2b594c;
  #L2b594a.  goto L2b59c4;
  #L2b594c.  v1:= 1I;
  #L2b594e.  v2:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.sizeSet` @type ^`boolean` @kind boolean;
  #L2b5952.  if v2 != 0 then goto L2b596c;
  #L2b5956.  call temp:= `getWidth`(v5) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2b595c.  v2:= temp;
  #L2b595e.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2b5964.  v3:= temp;
  #L2b5966.  call `setSize`(v4, v2, v3) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.setSize:(II)V` @kind virtual;
  #L2b596c.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.image` @type ^`android.graphics.Bitmap` := v5 @kind object;
  #L2b5970.  call `getImagePixels`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.getImagePixels:()V` @kind direct;
  #L2b5976.  call `analyzePixels`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.analyzePixels:()V` @kind direct;
  #L2b597c.  v5:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.firstFrame` @type ^`boolean` @kind boolean;
  #L2b5980.  if v5 == 0 then goto L2b599e;
  #L2b5984.  call `writeLSD`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeLSD:()V` @kind direct;
  #L2b598a.  call `writePalette`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writePalette:()V` @kind direct;
  #L2b5990.  v5:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.repeat` @type ^`int`;
  #L2b5994.  if v5 < 0 then goto L2b599e;
  #L2b5998.  call `writeNetscapeExt`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeNetscapeExt:()V` @kind direct;
  #L2b599e.  call `writeGraphicCtrlExt`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeGraphicCtrlExt:()V` @kind direct;
  #L2b59a4.  call `writeImageDesc`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeImageDesc:()V` @kind direct;
  #L2b59aa.  v5:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.firstFrame` @type ^`boolean` @kind boolean;
  #L2b59ae.  if v5 != 0 then goto L2b59b8;
  #L2b59b2.  call `writePalette`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writePalette:()V` @kind direct;
  #L2b59b8.  call `writePixels`(v4) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writePixels:()V` @kind direct;
  #L2b59be.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.firstFrame` @type ^`boolean` := v0 @kind boolean;
  #L2b59c2.  v0:= 1I;
  #L2b59c4.  return v0;
  catch `java.io.IOException` @[L2b594e..L2b59c2] goto L2b59c4;
}
procedure `boolean` `finish`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v4 @kind this) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.finish:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b59e8.  v0:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.started` @type ^`boolean` @kind boolean;
  #L2b59ec.  v1:= 0I;
  #L2b59ee.  if v0 != 0 then goto L2b59f4;
  #L2b59f2.  return v1;
  #L2b59f4.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.started` @type ^`boolean` := v1 @kind boolean;
  #L2b59f8.  v0:= 1I;
  #L2b59fa.  v2:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b59fe.  v3:= 59I;
  #L2b5a02.  call `write`(v2, v3) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2b5a08.  v2:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b5a0c.  call `flush`(v2) @signature `Ljava/io/OutputStream;.flush:()V` @kind virtual;
  #L2b5a12.  v2:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.closeStream` @type ^`boolean` @kind boolean;
  #L2b5a16.  if v2 == 0 then goto L2b5a24;
  #L2b5a1a.  v2:= v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b5a1e.  call `close`(v2) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L2b5a24.  v2:= 1I;
  #L2b5a26.  goto L2b5a2a;
  #L2b5a28.  v2:= 0I;
  #L2b5a2a.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.transIndex` @type ^`int` := v1;
  #L2b5a2e.  v3:= 0I;
  #L2b5a30.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` := v3 @kind object;
  #L2b5a34.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.image` @type ^`android.graphics.Bitmap` := v3 @kind object;
  #L2b5a38.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.pixels` @type ^`byte`[] := v3 @kind object;
  #L2b5a3c.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.indexedPixels` @type ^`byte`[] := v3 @kind object;
  #L2b5a40.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.colorTab` @type ^`byte`[] := v3 @kind object;
  #L2b5a44.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.closeStream` @type ^`boolean` := v1 @kind boolean;
  #L2b5a48.  v4.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.firstFrame` @type ^`boolean` := v0 @kind boolean;
  #L2b5a4c.  return v2;
  catch `java.io.IOException` @[L2b59fa..L2b5a24] goto L2b5a28;
}
procedure `void` `setDelay`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.setDelay:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b5e78.  v2:= (`float`) v2 @kind i2f;
  #L2b5e7a.  v0:= 10.0F;
  #L2b5e7e.  v2:= v2 / v0 @kind float;
  #L2b5e80.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2b5e86.  v2:= temp;
  #L2b5e88.  v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.delay` @type ^`int` := v2;
  #L2b5e8c.  return @kind void;
}
procedure `void` `setDispose`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.setDispose:(I)V` @AccessFlag PUBLIC {
    temp;

  #L2b5ea0.  if v1 < 0 then goto L2b5ea8;
  #L2b5ea4.  v0.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.dispose` @type ^`int` := v1;
  #L2b5ea8.  return @kind void;
}
procedure `void` `setFrameRate`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.setFrameRate:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b5ebc.  v0:= 0I;
  #L2b5ebe.  v0:= fcmpl(v2, v0);
  #L2b5ec2.  if v0 == 0 then goto L2b5ed8;
  #L2b5ec6.  v0:= 100.0F;
  #L2b5eca.  v0:= v0 / v2 @kind float;
  #L2b5ecc.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2b5ed2.  v2:= temp;
  #L2b5ed4.  v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.delay` @type ^`int` := v2;
  #L2b5ed8.  return @kind void;
}
procedure `void` `setQuality`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.setQuality:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b5eec.  v0:= 1I;
  #L2b5eee.  if v2 >= v0 then goto L2b5ef4;
  #L2b5ef2.  v2:= 1I;
  #L2b5ef4.  v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.sample` @type ^`int` := v2;
  #L2b5ef8.  return @kind void;
}
procedure `void` `setRepeat`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.setRepeat:(I)V` @AccessFlag PUBLIC {
    temp;

  #L2b5f0c.  if v1 < 0 then goto L2b5f14;
  #L2b5f10.  v0.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.repeat` @type ^`int` := v1;
  #L2b5f14.  return @kind void;
}
procedure `void` `setSize`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.setSize:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b5f28.  v0:= v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.started` @type ^`boolean` @kind boolean;
  #L2b5f2c.  if v0 == 0 then goto L2b5f3a;
  #L2b5f30.  v0:= v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.firstFrame` @type ^`boolean` @kind boolean;
  #L2b5f34.  if v0 != 0 then goto L2b5f3a;
  #L2b5f38.  return @kind void;
  #L2b5f3a.  v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.width` @type ^`int` := v2;
  #L2b5f3e.  v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.height` @type ^`int` := v3;
  #L2b5f42.  v2:= v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.width` @type ^`int`;
  #L2b5f46.  v3:= 1I;
  #L2b5f48.  if v2 >= v3 then goto L2b5f54;
  #L2b5f4c.  v2:= 320I;
  #L2b5f50.  v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.width` @type ^`int` := v2;
  #L2b5f54.  v2:= v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.height` @type ^`int`;
  #L2b5f58.  if v2 >= v3 then goto L2b5f64;
  #L2b5f5c.  v2:= 240I;
  #L2b5f60.  v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.height` @type ^`int` := v2;
  #L2b5f64.  v1.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.sizeSet` @type ^`boolean` := v3 @kind boolean;
  #L2b5f68.  return @kind void;
}
procedure `void` `setTransparent`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.setTransparent:(I)V` @AccessFlag PUBLIC {
    temp;

  #L2b5f7c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b5f82.  v1:= temp @kind object;
  #L2b5f84.  v0.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.transparent` @type ^`java.lang.Integer` := v1 @kind object;
  #L2b5f88.  return @kind void;
}
procedure `boolean` `start`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v2 @kind this, `java.io.OutputStream` v3 @kind object) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.start:(Ljava/io/OutputStream;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b5a70.  v0:= 0I;
  #L2b5a72.  if v3 != 0 then goto L2b5a78;
  #L2b5a76.  return v0;
  #L2b5a78.  v1:= 1I;
  #L2b5a7a.  v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.closeStream` @type ^`boolean` := v0 @kind boolean;
  #L2b5a7e.  v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` := v3 @kind object;
  #L2b5a82.  v3:= "GIF89a" @kind object;
  #L2b5a86.  call `writeString`(v2, v3) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.writeString:(Ljava/lang/String;)V` @kind direct;
  #L2b5a8c.  v0:= 1I;
  #L2b5a8e.  v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.started` @type ^`boolean` := v0 @kind boolean;
  #L2b5a92.  return v0;
  catch `java.io.IOException` @[L2b5a82..L2b5a8c] goto L2b5a8e;
}
procedure `boolean` `start`(`com.bumptech.glide.gifencoder.AnimatedGifEncoder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.start:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b5ab4.  v0:= new `java.io.BufferedOutputStream`;
  #L2b5ab8.  v1:= new `java.io.FileOutputStream`;
  #L2b5abc.  call `<init>`(v1, v3) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b5ac2.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L2b5ac8.  v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` := v0 @kind object;
  #L2b5acc.  v3:= v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.out` @type ^`java.io.OutputStream` @kind object;
  #L2b5ad0.  call temp:= `start`(v2, v3) @signature `Lcom/bumptech/glide/gifencoder/AnimatedGifEncoder;.start:(Ljava/io/OutputStream;)Z` @kind virtual;
  #L2b5ad6.  v3:= temp;
  #L2b5ad8.  v0:= 1I;
  #L2b5ada.  v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.closeStream` @type ^`boolean` := v0 @kind boolean;
  #L2b5ade.  goto L2b5ae2;
  #L2b5ae0.  v3:= 0I;
  #L2b5ae2.  v2.`com.bumptech.glide.gifencoder.AnimatedGifEncoder.started` @type ^`boolean` := v3 @kind boolean;
  #L2b5ae6.  return v3;
  catch `java.io.IOException` @[L2b5ab4..L2b5ade] goto L2b5ae0;
}
