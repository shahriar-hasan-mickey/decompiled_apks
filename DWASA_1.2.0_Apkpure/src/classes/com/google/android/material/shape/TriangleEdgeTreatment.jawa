record `com.google.android.material.shape.TriangleEdgeTreatment` @kind class @AccessFlag PUBLIC extends `com.google.android.material.shape.EdgeTreatment` @kind class {
  `boolean` `com.google.android.material.shape.TriangleEdgeTreatment.inside` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.shape.TriangleEdgeTreatment.size` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.material.shape.TriangleEdgeTreatment` v0 @kind this, `float` v1 , `boolean` v2 ) @signature `Lcom/google/android/material/shape/TriangleEdgeTreatment;.<init>:(FZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L33beb4.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/EdgeTreatment;.<init>:()V` @kind direct;
  #L33beba.  v0.`com.google.android.material.shape.TriangleEdgeTreatment.size` @type ^`float` := v1;
  #L33bebe.  v0.`com.google.android.material.shape.TriangleEdgeTreatment.inside` @type ^`boolean` := v2 @kind boolean;
  #L33bec2.  return @kind void;
}
procedure `void` `getEdgePath`(`com.google.android.material.shape.TriangleEdgeTreatment` v3 @kind this, `float` v4 , `float` v5 , `com.google.android.material.shape.ShapePath` v6 @kind object) @signature `Lcom/google/android/material/shape/TriangleEdgeTreatment;.getEdgePath:(FFLcom/google/android/material/shape/ShapePath;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33bed4.  v0:= 2.0F;
  #L33bed8.  v0:= v4 / v0 @kind float;
  #L33bedc.  v1:= v3.`com.google.android.material.shape.TriangleEdgeTreatment.size` @type ^`float`;
  #L33bee0.  v1:= v1 * v5 @kind float;
  #L33bee4.  v1:= v0 - v1 @kind float;
  #L33bee8.  v2:= 0I;
  #L33beea.  call `lineTo`(v6, v1, v2) @signature `Lcom/google/android/material/shape/ShapePath;.lineTo:(FF)V` @kind virtual;
  #L33bef0.  v1:= v3.`com.google.android.material.shape.TriangleEdgeTreatment.inside` @type ^`boolean` @kind boolean;
  #L33bef4.  if v1 == 0 then goto L33befe;
  #L33bef8.  v1:= v3.`com.google.android.material.shape.TriangleEdgeTreatment.size` @type ^`float`;
  #L33befc.  goto L33bf04;
  #L33befe.  v1:= v3.`com.google.android.material.shape.TriangleEdgeTreatment.size` @type ^`float`;
  #L33bf02.  v1:= -v1 @kind float;
  #L33bf04.  v1:= v1 * v5 @kind float;
  #L33bf08.  call `lineTo`(v6, v0, v1) @signature `Lcom/google/android/material/shape/ShapePath;.lineTo:(FF)V` @kind virtual;
  #L33bf0e.  v1:= v3.`com.google.android.material.shape.TriangleEdgeTreatment.size` @type ^`float`;
  #L33bf12.  v1:= v1 * v5 @kind float;
  #L33bf16.  v0:= v0 + v1 @kind float;
  #L33bf18.  call `lineTo`(v6, v0, v2) @signature `Lcom/google/android/material/shape/ShapePath;.lineTo:(FF)V` @kind virtual;
  #L33bf1e.  call `lineTo`(v6, v4, v2) @signature `Lcom/google/android/material/shape/ShapePath;.lineTo:(FF)V` @kind virtual;
  #L33bf24.  return @kind void;
}
