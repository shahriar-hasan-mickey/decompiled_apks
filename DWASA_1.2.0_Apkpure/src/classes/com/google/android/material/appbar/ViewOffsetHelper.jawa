record `com.google.android.material.appbar.ViewOffsetHelper` @kind class @AccessFlag  {
  `int` `com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @AccessFlag PRIVATE;
  `android.view.View` `com.google.android.material.appbar.ViewOffsetHelper.view` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.material.appbar.ViewOffsetHelper` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.<init>:(Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32348c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L323492.  v0.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` := v1 @kind object;
  #L323496.  return @kind void;
}
procedure `void` `updateOffsets`(`com.google.android.material.appbar.ViewOffsetHelper` v4 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.updateOffsets:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3234e0.  v0:= v4.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L3234e4.  v1:= v4.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int`;
  #L3234e8.  call temp:= `getTop`(v0) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3234ee.  v2:= temp;
  #L3234f0.  v3:= v4.`com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @type ^`int`;
  #L3234f4.  v2:= v2 - v3 @kind int;
  #L3234f6.  v1:= v1 - v2 @kind int;
  #L3234f8.  call `offsetTopAndBottom`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3234fe.  v0:= v4.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L323502.  v1:= v4.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int`;
  #L323506.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L32350c.  v2:= temp;
  #L32350e.  v3:= v4.`com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @type ^`int`;
  #L323512.  v2:= v2 - v3 @kind int;
  #L323514.  v1:= v1 - v2 @kind int;
  #L323516.  call `offsetLeftAndRight`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.offsetLeftAndRight:(Landroid/view/View;I)V` @kind static;
  #L32351c.  return @kind void;
}
procedure `int` `getLayoutLeft`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getLayoutLeft:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32342c.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @type ^`int`;
  #L323430.  return v0;
}
procedure `int` `getLayoutTop`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getLayoutTop:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L323444.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @type ^`int`;
  #L323448.  return v0;
}
procedure `int` `getLeftAndRightOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getLeftAndRightOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32345c.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int`;
  #L323460.  return v0;
}
procedure `int` `getTopAndBottomOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getTopAndBottomOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L323474.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int`;
  #L323478.  return v0;
}
procedure `void` `onViewLayout`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.onViewLayout:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3234a8.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L3234ac.  call temp:= `getTop`(v0) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3234b2.  v0:= temp;
  #L3234b4.  v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @type ^`int` := v0;
  #L3234b8.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L3234bc.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L3234c2.  v0:= temp;
  #L3234c4.  v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @type ^`int` := v0;
  #L3234c8.  call `updateOffsets`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.updateOffsets:()V` @kind direct;
  #L3234ce.  return @kind void;
}
procedure `boolean` `setLeftAndRightOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setLeftAndRightOffset:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3233d4.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int`;
  #L3233d8.  if v0 == v2 then goto L3233ea;
  #L3233dc.  v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int` := v2;
  #L3233e0.  call `updateOffsets`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.updateOffsets:()V` @kind direct;
  #L3233e6.  v2:= 1I;
  #L3233e8.  return v2;
  #L3233ea.  v2:= 0I;
  #L3233ec.  return v2;
}
procedure `boolean` `setTopAndBottomOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setTopAndBottomOffset:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L323400.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int`;
  #L323404.  if v0 == v2 then goto L323416;
  #L323408.  v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int` := v2;
  #L32340c.  call `updateOffsets`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.updateOffsets:()V` @kind direct;
  #L323412.  v2:= 1I;
  #L323414.  return v2;
  #L323416.  v2:= 0I;
  #L323418.  return v2;
}
