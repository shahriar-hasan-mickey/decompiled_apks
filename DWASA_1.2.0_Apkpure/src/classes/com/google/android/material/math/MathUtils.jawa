record `com.google.android.material.math.MathUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `float` `@@com.google.android.material.math.MathUtils.DEFAULT_EPSILON` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.material.math.MathUtils` v0 @kind this) @signature `Lcom/google/android/material/math/MathUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L338cc4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L338cca.  return @kind void;
}
procedure `float` `dist`(`float` v0 , `float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L338bf0.  v2:= v2 - v0 @kind float;
  #L338bf2.  v3:= v3 - v1 @kind float;
  #L338bf4.  v0:= (`double`) v2 @kind f2d;
  #L338bf6.  v2:= (`double`) v3 @kind f2d;
  #L338bf8.  call temp:= `hypot`(v0, v2) @signature `Ljava/lang/Math;.hypot:(DD)D` @kind static;
  #L338bfe.  v0:= temp @kind wide;
  #L338c00.  v0:= (`float`) v0 @kind d2f;
  #L338c02.  return v0;
}
procedure `float` `distanceToFurthestCorner`(`float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/google/android/material/math/MathUtils;.distanceToFurthestCorner:(FFFFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L338c14.  call temp:= `dist`(v1, v2, v3, v4) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L338c1a.  v0:= temp;
  #L338c1c.  call temp:= `dist`(v1, v2, v5, v4) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L338c22.  v4:= temp;
  #L338c24.  call temp:= `dist`(v1, v2, v5, v6) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L338c2a.  v5:= temp;
  #L338c2c.  call temp:= `dist`(v1, v2, v3, v6) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L338c32.  v1:= temp;
  #L338c34.  call temp:= `max`(v0, v4, v5, v1) @signature `Lcom/google/android/material/math/MathUtils;.max:(FFFF)F` @kind static;
  #L338c3a.  v1:= temp;
  #L338c3c.  return v1;
}
procedure `boolean` `geq`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lcom/google/android/material/math/MathUtils;.geq:(FFF)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L338bcc.  v0:= v0 + v2 @kind float;
  #L338bce.  v0:= fcmpl(v0, v1);
  #L338bd2.  if v0 < 0 then goto L338bda;
  #L338bd6.  v0:= 1I;
  #L338bd8.  goto L338bdc;
  #L338bda.  v0:= 0I;
  #L338bdc.  return v0;
}
procedure `float` `lerp`(`float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/google/android/material/math/MathUtils;.lerp:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L338c50.  v0:= 1.0F;
  #L338c54.  v0:= v0 - v3 @kind float;
  #L338c56.  v0:= v0 * v1 @kind float;
  #L338c5a.  v3:= v3 * v2 @kind float;
  #L338c5e.  v0:= v0 + v3 @kind float;
  #L338c60.  return v0;
}
procedure `float` `max`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/google/android/material/math/MathUtils;.max:(FFFF)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L338c74.  v0:= fcmpl(v1, v2);
  #L338c78.  if v0 <= 0 then goto L338c8e;
  #L338c7c.  v0:= fcmpl(v1, v3);
  #L338c80.  if v0 <= 0 then goto L338c8e;
  #L338c84.  v0:= fcmpl(v1, v4);
  #L338c88.  if v0 <= 0 then goto L338c8e;
  #L338c8c.  goto L338cb0;
  #L338c8e.  v1:= fcmpl(v2, v3);
  #L338c92.  if v1 <= 0 then goto L338ca2;
  #L338c96.  v1:= fcmpl(v2, v4);
  #L338c9a.  if v1 <= 0 then goto L338ca2;
  #L338c9e.  v1:= v2;
  #L338ca0.  goto L338cb0;
  #L338ca2.  v1:= fcmpl(v3, v4);
  #L338ca6.  if v1 <= 0 then goto L338cae;
  #L338caa.  v1:= v3;
  #L338cac.  goto L338cb0;
  #L338cae.  v1:= v4;
  #L338cb0.  return v1;
}
