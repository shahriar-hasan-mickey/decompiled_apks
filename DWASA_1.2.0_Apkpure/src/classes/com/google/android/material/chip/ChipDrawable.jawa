record `com.google.android.material.chip.ChipDrawable` @kind class @AccessFlag PUBLIC extends `android.graphics.drawable.Drawable` @kind class, `androidx.core.graphics.drawable.TintAwareDrawable` @kind interface, `android.graphics.drawable.Drawable$Callback` @kind interface {
  `int` `com.google.android.material.chip.ChipDrawable.alpha` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkable` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.checkedIcon` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkedIconVisible` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipCornerRadius` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.chipIcon` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipIconSize` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.chipIconVisible` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipMinHeight` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.chipPaint` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.chipStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipStrokeColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIcon` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconSize` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @AccessFlag PRIVATE;
  `int`[] `com.google.android.material.chip.ChipDrawable.closeIconStateSet` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.closeIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.closeIconVisible` @AccessFlag PRIVATE;
  `android.graphics.ColorFilter` `com.google.android.material.chip.ChipDrawable.colorFilter` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.compatRippleColor` @AccessFlag PRIVATE;
  `android.content.Context` `com.google.android.material.chip.ChipDrawable.context` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.currentChecked` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTextColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTint` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.debugPaint` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.google.android.material.chip.ChipDrawable.delegate` @AccessFlag PRIVATE;
  `androidx.core.content.res.ResourcesCompat$FontCallback` `com.google.android.material.chip.ChipDrawable.fontCallback` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint$FontMetrics` `com.google.android.material.chip.ChipDrawable.fontMetrics` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.hideMotionSpec` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconStartPadding` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.maxWidth` @AccessFlag PRIVATE;
  `android.graphics.PointF` `com.google.android.material.chip.ChipDrawable.pointF` @AccessFlag PRIVATE_FINAL;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.rawText` @AccessFlag PRIVATE;
  `android.graphics.RectF` `com.google.android.material.chip.ChipDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.rippleColor` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.shouldDrawText` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.showMotionSpec` @AccessFlag PRIVATE;
  `com.google.android.material.resources.TextAppearance` `com.google.android.material.chip.ChipDrawable.textAppearance` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.textEndPadding` @AccessFlag PRIVATE;
  `android.text.TextPaint` `com.google.android.material.chip.ChipDrawable.textPaint` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.textStartPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.textWidth` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.textWidthDirty` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.tint` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.chip.ChipDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuff$Mode` `com.google.android.material.chip.ChipDrawable.tintMode` @AccessFlag PRIVATE;
  `android.text.TextUtils$TruncateAt` `com.google.android.material.chip.ChipDrawable.truncateAt` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.unicodeWrappedText` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.useCompatRipple` @AccessFlag PRIVATE;
}
global `boolean` `@@com.google.android.material.chip.ChipDrawable.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.chip.ChipDrawable.NAMESPACE_APP` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32b838.  v0:= 1I;
  #L32b83a.  v0:= new `int`[v0];
  #L32b83e.  v1:= 0I;
  #L32b840.  v2:= 16842910I;
  #L32b846.  v0[v1]:= v2;
  #L32b84a.  `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] := v0 @kind object;
  #L32b84e.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.content.Context` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32b860.  call `<init>`(v3) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L32b866.  v0:= new `com.google.android.material.chip.ChipDrawable$1`;
  #L32b86a.  call `<init>`(v0, v3) @signature `Lcom/google/android/material/chip/ChipDrawable$1;.<init>:(Lcom/google/android/material/chip/ChipDrawable;)V` @kind direct;
  #L32b870.  v3.`com.google.android.material.chip.ChipDrawable.fontCallback` @type ^`androidx.core.content.res.ResourcesCompat$FontCallback` := v0 @kind object;
  #L32b874.  v0:= new `android.text.TextPaint`;
  #L32b878.  v1:= 1I;
  #L32b87a.  call `<init>`(v0, v1) @signature `Landroid/text/TextPaint;.<init>:(I)V` @kind direct;
  #L32b880.  v3.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` := v0 @kind object;
  #L32b884.  v0:= new `android.graphics.Paint`;
  #L32b888.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L32b88e.  v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L32b892.  v0:= new `android.graphics.Paint$FontMetrics`;
  #L32b896.  call `<init>`(v0) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L32b89c.  v3.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` := v0 @kind object;
  #L32b8a0.  v0:= new `android.graphics.RectF`;
  #L32b8a4.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L32b8aa.  v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L32b8ae.  v0:= new `android.graphics.PointF`;
  #L32b8b2.  call `<init>`(v0) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L32b8b8.  v3.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` := v0 @kind object;
  #L32b8bc.  v0:= 255I;
  #L32b8c0.  v3.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v0;
  #L32b8c4.  v0:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L32b8c8.  v3.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v0 @kind object;
  #L32b8cc.  v0:= new `java.lang.ref.WeakReference`;
  #L32b8d0.  v2:= 0I;
  #L32b8d2.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L32b8d8.  v3.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L32b8dc.  v3.`com.google.android.material.chip.ChipDrawable.textWidthDirty` @type ^`boolean` := v1 @kind boolean;
  #L32b8e0.  v3.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` := v4 @kind object;
  #L32b8e4.  v0:= "" @kind object;
  #L32b8e8.  v3.`com.google.android.material.chip.ChipDrawable.rawText` @type ^`java.lang.CharSequence` := v0 @kind object;
  #L32b8ec.  v0:= v3.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` @kind object;
  #L32b8f0.  call temp:= `getResources`(v4) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32b8f6.  v4:= temp @kind object;
  #L32b8f8.  call temp:= `getDisplayMetrics`(v4) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L32b8fe.  v4:= temp @kind object;
  #L32b900.  v4:= v4.`android.util.DisplayMetrics.density` @type ^`float`;
  #L32b904.  v0.`android.text.TextPaint.density` @type ^`float` := v4;
  #L32b908.  v3.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L32b90c.  v4:= v3.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32b910.  if v4 == 0 then goto L32b91e;
  #L32b914.  v0:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L32b918.  call `setStyle`(v4, v0) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L32b91e.  v4:= `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] @kind object;
  #L32b922.  call temp:= `setState`(v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setState:([I)Z` @kind virtual;
  #L32b928.  v4:= `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] @kind object;
  #L32b92c.  call temp:= `setCloseIconState`(v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @kind virtual;
  #L32b932.  v3.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v1 @kind boolean;
  #L32b936.  return @kind void;
}
procedure `boolean` `access$002`(`com.google.android.material.chip.ChipDrawable` v0 @kind object, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.access$002:(Lcom/google/android/material/chip/ChipDrawable;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32acd4.  v0.`com.google.android.material.chip.ChipDrawable.textWidthDirty` @type ^`boolean` := v1 @kind boolean;
  #L32acd8.  return v1;
}
procedure `void` `applyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32b948.  if v3 == 0 then goto L32b9c6;
  #L32b94c.  call `setCallback`(v3, v2) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L32b952.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L32b958.  v0:= temp;
  #L32b95a.  call temp:= `setLayoutDirection`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L32b960.  call temp:= `getLevel`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getLevel:()I` @kind virtual;
  #L32b966.  v0:= temp;
  #L32b968.  call temp:= `setLevel`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L32b96e.  call temp:= `isVisible`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.isVisible:()Z` @kind virtual;
  #L32b974.  v0:= temp;
  #L32b976.  v1:= 0I;
  #L32b978.  call temp:= `setVisible`(v3, v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L32b97e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b982.  if v3 != v0 then goto L32b9ac;
  #L32b986.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L32b98c.  v0:= temp;
  #L32b98e.  if v0 == 0 then goto L32b9a0;
  #L32b992.  call temp:= `getCloseIconState`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L32b998.  v0:= temp @kind object;
  #L32b99a.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L32b9a0.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32b9a4.  call `setTintList`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L32b9aa.  goto L32b9c6;
  #L32b9ac.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L32b9b2.  v0:= temp;
  #L32b9b4.  if v0 == 0 then goto L32b9c6;
  #L32b9b8.  call temp:= `getState`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32b9be.  v0:= temp @kind object;
  #L32b9c0.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L32b9c6.  return @kind void;
}
procedure `void` `calculateChipIconBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32b9d8.  call `setEmpty`(v4) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L32b9de.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32b9e4.  v0:= temp;
  #L32b9e6.  if v0 != 0 then goto L32b9f6;
  #L32b9ea.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L32b9f0.  v0:= temp;
  #L32b9f2.  if v0 == 0 then goto L32ba68;
  #L32b9f6.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L32b9fa.  v1:= v2.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L32b9fe.  v0:= v0 + v1 @kind float;
  #L32ba00.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L32ba06.  v1:= temp;
  #L32ba08.  if v1 != 0 then goto L32ba28;
  #L32ba0c.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L32ba10.  v1:= (`float`) v1 @kind i2f;
  #L32ba12.  v1:= v1 + v0 @kind float;
  #L32ba14.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L32ba18.  v0:= v4.`android.graphics.RectF.left` @type ^`float`;
  #L32ba1c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L32ba20.  v0:= v0 + v1 @kind float;
  #L32ba22.  v4.`android.graphics.RectF.right` @type ^`float` := v0;
  #L32ba26.  goto L32ba42;
  #L32ba28.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L32ba2c.  v1:= (`float`) v1 @kind i2f;
  #L32ba2e.  v1:= v1 - v0 @kind float;
  #L32ba30.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L32ba34.  v0:= v4.`android.graphics.RectF.right` @type ^`float`;
  #L32ba38.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L32ba3c.  v0:= v0 - v1 @kind float;
  #L32ba3e.  v4.`android.graphics.RectF.left` @type ^`float` := v0;
  #L32ba42.  call temp:= `exactCenterY`(v3) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L32ba48.  v3:= temp;
  #L32ba4a.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L32ba4e.  v1:= 2.0F;
  #L32ba52.  v0:= v0 / v1 @kind float;
  #L32ba54.  v3:= v3 - v0 @kind float;
  #L32ba56.  v4.`android.graphics.RectF.top` @type ^`float` := v3;
  #L32ba5a.  v3:= v4.`android.graphics.RectF.top` @type ^`float`;
  #L32ba5e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L32ba62.  v3:= v3 + v0 @kind float;
  #L32ba64.  v4.`android.graphics.RectF.bottom` @type ^`float` := v3;
  #L32ba68.  return @kind void;
}
procedure `void` `calculateChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32ba7c.  call `set`(v4, v3) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L32ba82.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32ba88.  v0:= temp;
  #L32ba8a.  if v0 == 0 then goto L32bad0;
  #L32ba8e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L32ba92.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L32ba96.  v0:= v0 + v1 @kind float;
  #L32ba98.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L32ba9c.  v0:= v0 + v1 @kind float;
  #L32ba9e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L32baa2.  v0:= v0 + v1 @kind float;
  #L32baa4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L32baa8.  v0:= v0 + v1 @kind float;
  #L32baaa.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L32bab0.  v1:= temp;
  #L32bab2.  if v1 != 0 then goto L32bac4;
  #L32bab6.  v3:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L32baba.  v3:= (`float`) v3 @kind i2f;
  #L32babc.  v3:= v3 - v0 @kind float;
  #L32babe.  v4.`android.graphics.RectF.right` @type ^`float` := v3;
  #L32bac2.  goto L32bad0;
  #L32bac4.  v3:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L32bac8.  v3:= (`float`) v3 @kind i2f;
  #L32baca.  v3:= v3 + v0 @kind float;
  #L32bacc.  v4.`android.graphics.RectF.left` @type ^`float` := v3;
  #L32bad0.  return @kind void;
}
procedure `void` `calculateCloseIconBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32bae4.  call `setEmpty`(v4) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L32baea.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32baf0.  v0:= temp;
  #L32baf2.  if v0 == 0 then goto L32bb68;
  #L32baf6.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L32bafa.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L32bafe.  v0:= v0 + v1 @kind float;
  #L32bb00.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L32bb06.  v1:= temp;
  #L32bb08.  if v1 != 0 then goto L32bb28;
  #L32bb0c.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L32bb10.  v1:= (`float`) v1 @kind i2f;
  #L32bb12.  v1:= v1 - v0 @kind float;
  #L32bb14.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L32bb18.  v0:= v4.`android.graphics.RectF.right` @type ^`float`;
  #L32bb1c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L32bb20.  v0:= v0 - v1 @kind float;
  #L32bb22.  v4.`android.graphics.RectF.left` @type ^`float` := v0;
  #L32bb26.  goto L32bb42;
  #L32bb28.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L32bb2c.  v1:= (`float`) v1 @kind i2f;
  #L32bb2e.  v1:= v1 + v0 @kind float;
  #L32bb30.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L32bb34.  v0:= v4.`android.graphics.RectF.left` @type ^`float`;
  #L32bb38.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L32bb3c.  v0:= v0 + v1 @kind float;
  #L32bb3e.  v4.`android.graphics.RectF.right` @type ^`float` := v0;
  #L32bb42.  call temp:= `exactCenterY`(v3) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L32bb48.  v3:= temp;
  #L32bb4a.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L32bb4e.  v1:= 2.0F;
  #L32bb52.  v0:= v0 / v1 @kind float;
  #L32bb54.  v3:= v3 - v0 @kind float;
  #L32bb56.  v4.`android.graphics.RectF.top` @type ^`float` := v3;
  #L32bb5a.  v3:= v4.`android.graphics.RectF.top` @type ^`float`;
  #L32bb5e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L32bb62.  v3:= v3 + v0 @kind float;
  #L32bb64.  v4.`android.graphics.RectF.bottom` @type ^`float` := v3;
  #L32bb68.  return @kind void;
}
procedure `void` `calculateCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32bb7c.  call `setEmpty`(v4) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L32bb82.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32bb88.  v0:= temp;
  #L32bb8a.  if v0 == 0 then goto L32bbf6;
  #L32bb8e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L32bb92.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L32bb96.  v0:= v0 + v1 @kind float;
  #L32bb98.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L32bb9c.  v0:= v0 + v1 @kind float;
  #L32bb9e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L32bba2.  v0:= v0 + v1 @kind float;
  #L32bba4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L32bba8.  v0:= v0 + v1 @kind float;
  #L32bbaa.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L32bbb0.  v1:= temp;
  #L32bbb2.  if v1 != 0 then goto L32bbcc;
  #L32bbb6.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L32bbba.  v1:= (`float`) v1 @kind i2f;
  #L32bbbc.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L32bbc0.  v1:= v4.`android.graphics.RectF.right` @type ^`float`;
  #L32bbc4.  v1:= v1 - v0 @kind float;
  #L32bbc6.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L32bbca.  goto L32bbe2;
  #L32bbcc.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L32bbd0.  v1:= (`float`) v1 @kind i2f;
  #L32bbd2.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L32bbd6.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L32bbda.  v1:= (`float`) v1 @kind i2f;
  #L32bbdc.  v1:= v1 + v0 @kind float;
  #L32bbde.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L32bbe2.  v0:= v3.`android.graphics.Rect.top` @type ^`int`;
  #L32bbe6.  v0:= (`float`) v0 @kind i2f;
  #L32bbe8.  v4.`android.graphics.RectF.top` @type ^`float` := v0;
  #L32bbec.  v3:= v3.`android.graphics.Rect.bottom` @type ^`int`;
  #L32bbf0.  v3:= (`float`) v3 @kind i2f;
  #L32bbf2.  v4.`android.graphics.RectF.bottom` @type ^`float` := v3;
  #L32bbf6.  return @kind void;
}
procedure `float` `calculateCloseIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32b528.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32b52e.  v0:= temp;
  #L32b530.  if v0 == 0 then goto L32b546;
  #L32b534.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L32b538.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L32b53c.  v0:= v0 + v1 @kind float;
  #L32b53e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L32b542.  v0:= v0 + v1 @kind float;
  #L32b544.  return v0;
  #L32b546.  v0:= 0I;
  #L32b548.  return v0;
}
procedure `void` `calculateTextBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32bc08.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L32bc0e.  v0:= v3.`com.google.android.material.chip.ChipDrawable.unicodeWrappedText` @type ^`java.lang.CharSequence` @kind object;
  #L32bc12.  if v0 == 0 then goto L32bc90;
  #L32bc16.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L32bc1a.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32bc20.  v1:= temp;
  #L32bc22.  v0:= v0 + v1 @kind float;
  #L32bc24.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L32bc28.  v0:= v0 + v1 @kind float;
  #L32bc2a.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L32bc2e.  call temp:= `calculateCloseIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind direct;
  #L32bc34.  v2:= temp;
  #L32bc36.  v1:= v1 + v2 @kind float;
  #L32bc38.  v2:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L32bc3c.  v1:= v1 + v2 @kind float;
  #L32bc3e.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L32bc44.  v2:= temp;
  #L32bc46.  if v2 != 0 then goto L32bc64;
  #L32bc4a.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L32bc4e.  v2:= (`float`) v2 @kind i2f;
  #L32bc50.  v2:= v2 + v0 @kind float;
  #L32bc52.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L32bc56.  v0:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L32bc5a.  v0:= (`float`) v0 @kind i2f;
  #L32bc5c.  v0:= v0 - v1 @kind float;
  #L32bc5e.  v5.`android.graphics.RectF.right` @type ^`float` := v0;
  #L32bc62.  goto L32bc7c;
  #L32bc64.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L32bc68.  v2:= (`float`) v2 @kind i2f;
  #L32bc6a.  v2:= v2 + v1 @kind float;
  #L32bc6c.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L32bc70.  v1:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L32bc74.  v1:= (`float`) v1 @kind i2f;
  #L32bc76.  v1:= v1 - v0 @kind float;
  #L32bc78.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L32bc7c.  v0:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L32bc80.  v0:= (`float`) v0 @kind i2f;
  #L32bc82.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L32bc86.  v4:= v4.`android.graphics.Rect.bottom` @type ^`int`;
  #L32bc8a.  v4:= (`float`) v4 @kind i2f;
  #L32bc8c.  v5.`android.graphics.RectF.bottom` @type ^`float` := v4;
  #L32bc90.  return @kind void;
}
procedure `float` `calculateTextCenterFromBaseline`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32b55c.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` @kind object;
  #L32b560.  v1:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L32b564.  call temp:= `getFontMetrics`(v0, v1) @signature `Landroid/text/TextPaint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L32b56a.  v0:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L32b56e.  v0:= v0.`android.graphics.Paint$FontMetrics.descent` @type ^`float`;
  #L32b572.  v1:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L32b576.  v1:= v1.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L32b57a.  v0:= v0 + v1 @kind float;
  #L32b57c.  v1:= 2.0F;
  #L32b580.  v0:= v0 / v1 @kind float;
  #L32b582.  return v0;
}
procedure `float` `calculateTextWidth`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `java.lang.CharSequence` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextWidth:(Ljava/lang/CharSequence;)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32b594.  if v4 != 0 then goto L32b59c;
  #L32b598.  v4:= 0I;
  #L32b59a.  return v4;
  #L32b59c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` @kind object;
  #L32b5a0.  v1:= 0I;
  #L32b5a2.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L32b5a8.  v2:= temp;
  #L32b5aa.  call temp:= `measureText`(v0, v4, v1, v2) @signature `Landroid/text/TextPaint;.measureText:(Ljava/lang/CharSequence;II)F` @kind virtual;
  #L32b5b0.  v4:= temp;
  #L32b5b2.  return v4;
}
procedure `boolean` `canShowCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32acec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L32acf0.  if v0 == 0 then goto L32ad08;
  #L32acf4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32acf8.  if v0 == 0 then goto L32ad08;
  #L32acfc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L32ad00.  if v0 == 0 then goto L32ad08;
  #L32ad04.  v0:= 1I;
  #L32ad06.  goto L32ad0a;
  #L32ad08.  v0:= 0I;
  #L32ad0a.  return v0;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromAttributes`(`android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32b3c0.  v0:= new `com.google.android.material.chip.ChipDrawable`;
  #L32b3c4.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L32b3ca.  call `loadFromAttributes`(v0, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @kind direct;
  #L32b3d0.  return v0 @kind object;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromResource`(`android.content.Context` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b3e4.  call temp:= `getResources`(v4) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32b3ea.  v0:= temp @kind object;
  #L32b3ec.  call temp:= `getXml`(v0, v5) @signature `Landroid/content/res/Resources;.getXml:(I)Landroid/content/res/XmlResourceParser;` @kind virtual;
  #L32b3f2.  v0:= temp @kind object;
  #L32b3f4.  call temp:= `next`(v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.next:()I` @kind interface;
  #L32b3fa.  v1:= temp;
  #L32b3fc.  v2:= 2I;
  #L32b3fe.  if v1 == v2 then goto L32b408;
  #L32b402.  v3:= 1I;
  #L32b404.  if v1 != v3 then goto L32b3f4;
  #L32b408.  if v1 != v2 then goto L32b45a;
  #L32b40c.  call temp:= `getName`(v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.getName:()Ljava/lang/String;` @kind interface;
  #L32b412.  v1:= temp @kind object;
  #L32b414.  v2:= "chip" @kind object;
  #L32b418.  call temp:= `equals`(v1, v2) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L32b41e.  v1:= temp;
  #L32b420.  if v1 == 0 then goto L32b44a;
  #L32b424.  call temp:= `asAttributeSet`(v0) @signature `Landroid/util/Xml;.asAttributeSet:(Lorg/xmlpull/v1/XmlPullParser;)Landroid/util/AttributeSet;` @kind static;
  #L32b42a.  v0:= temp @kind object;
  #L32b42c.  call temp:= `getStyleAttribute`(v0) @signature `Landroid/util/AttributeSet;.getStyleAttribute:()I` @kind interface;
  #L32b432.  v1:= temp;
  #L32b434.  if v1 != 0 then goto L32b43c;
  #L32b438.  v1:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Chip_Entry` @type ^`int`;
  #L32b43c.  v2:= `@@com.google.android.material.R$attr.chipStandaloneStyle` @type ^`int`;
  #L32b440.  call temp:= `createFromAttributes`(v4, v0, v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @kind static;
  #L32b446.  v4:= temp @kind object;
  #L32b448.  return v4 @kind object;
  #L32b44a.  v4:= new `org.xmlpull.v1.XmlPullParserException`;
  #L32b44e.  v0:= "Must have a <chip> start tag" @kind object;
  #L32b452.  call `<init>`(v4, v0) @signature `Lorg/xmlpull/v1/XmlPullParserException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b458.  throw v4;
  #L32b45a.  v4:= new `org.xmlpull.v1.XmlPullParserException`;
  #L32b45e.  v0:= "No start tag found" @kind object;
  #L32b462.  call `<init>`(v4, v0) @signature `Lorg/xmlpull/v1/XmlPullParserException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b468.  throw v4;
  #L32b46a.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L32b46c.  goto L32b470;
  #L32b46e.  v4:= Exception @type ^`org.xmlpull.v1.XmlPullParserException` @kind object;
  #L32b470.  v0:= new `android.content.res.Resources$NotFoundException`;
  #L32b474.  v1:= new `java.lang.StringBuilder`;
  #L32b478.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b47e.  v2:= "Can't load chip resource ID #0x" @kind object;
  #L32b482.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b488.  call temp:= `toHexString`(v5) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L32b48e.  v5:= temp @kind object;
  #L32b490.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b496.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b49c.  v5:= temp @kind object;
  #L32b49e.  call `<init>`(v0, v5) @signature `Landroid/content/res/Resources$NotFoundException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b4a4.  call temp:= `initCause`(v0, v4) @signature `Landroid/content/res/Resources$NotFoundException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L32b4aa.  goto L32b4ae;
  #L32b4ac.  throw v0;
  #L32b4ae.  goto L32b4ac;
  catch `org.xmlpull.v1.XmlPullParserException` @[L32b3e4..L32b46a] goto L32b46e;
  catch `java.io.IOException` @[L32b3e4..L32b46a] goto L32b46a;
}
procedure `void` `drawCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32bd54.  call temp:= `showsCheckedIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L32bd5a.  v0:= temp;
  #L32bd5c.  if v0 == 0 then goto L32bdbc;
  #L32bd60.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bd64.  call `calculateChipIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32bd6a.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bd6e.  v7:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L32bd72.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bd76.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L32bd7a.  call `translate`(v6, v7, v0) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L32bd80.  v1:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32bd84.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bd88.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L32bd8e.  v2:= temp;
  #L32bd90.  v2:= (`int`) v2 @kind f2i;
  #L32bd92.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bd96.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L32bd9c.  v3:= temp;
  #L32bd9e.  v3:= (`int`) v3 @kind f2i;
  #L32bda0.  v4:= 0I;
  #L32bda2.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L32bda8.  v1:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32bdac.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32bdb2.  v7:= -v7 @kind float;
  #L32bdb4.  v0:= -v0 @kind float;
  #L32bdb6.  call `translate`(v6, v7, v0) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L32bdbc.  return @kind void;
}
procedure `void` `drawChipBackground`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Canvas` v3 @kind object, `android.graphics.Rect` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32bdd0.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32bdd4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L32bdd8.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L32bdde.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32bde2.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L32bde6.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L32bdec.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32bdf0.  call temp:= `getTintColorFilter`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L32bdf6.  v1:= temp @kind object;
  #L32bdf8.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L32bdfe.  v0:= v2.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32be02.  call `set`(v0, v4) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L32be08.  v4:= v2.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32be0c.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L32be10.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32be14.  call `drawRoundRect`(v3, v4, v0, v0, v1) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L32be1a.  return @kind void;
}
procedure `void` `drawChipIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32be2c.  call temp:= `showsChipIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32be32.  v0:= temp;
  #L32be34.  if v0 == 0 then goto L32be94;
  #L32be38.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32be3c.  call `calculateChipIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32be42.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32be46.  v7:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L32be4a.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32be4e.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L32be52.  call `translate`(v6, v7, v0) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L32be58.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32be5c.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32be60.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L32be66.  v2:= temp;
  #L32be68.  v2:= (`int`) v2 @kind f2i;
  #L32be6a.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32be6e.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L32be74.  v3:= temp;
  #L32be76.  v3:= (`int`) v3 @kind f2i;
  #L32be78.  v4:= 0I;
  #L32be7a.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L32be80.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32be84.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32be8a.  v7:= -v7 @kind float;
  #L32be8c.  v0:= -v0 @kind float;
  #L32be8e.  call `translate`(v6, v7, v0) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L32be94.  return @kind void;
}
procedure `void` `drawChipStroke`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object, `android.graphics.Rect` v8 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32bea8.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L32beac.  v1:= 0I;
  #L32beae.  v0:= fcmpl(v0, v1);
  #L32beb2.  if v0 <= 0 then goto L32bf44;
  #L32beb6.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32beba.  v1:= v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L32bebe.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L32bec4.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32bec8.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L32becc.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L32bed2.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32bed6.  call temp:= `getTintColorFilter`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L32bedc.  v1:= temp @kind object;
  #L32bede.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L32bee4.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bee8.  v1:= v8.`android.graphics.Rect.left` @type ^`int`;
  #L32beec.  v1:= (`float`) v1 @kind i2f;
  #L32beee.  v2:= v6.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L32bef2.  v3:= 2.0F;
  #L32bef6.  v2:= v2 / v3 @kind float;
  #L32bef8.  v1:= v1 + v2 @kind float;
  #L32befa.  v2:= v8.`android.graphics.Rect.top` @type ^`int`;
  #L32befe.  v2:= (`float`) v2 @kind i2f;
  #L32bf00.  v4:= v6.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L32bf04.  v4:= v4 / v3 @kind float;
  #L32bf06.  v2:= v2 + v4 @kind float;
  #L32bf08.  v4:= v8.`android.graphics.Rect.right` @type ^`int`;
  #L32bf0c.  v4:= (`float`) v4 @kind i2f;
  #L32bf0e.  v5:= v6.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L32bf12.  v5:= v5 / v3 @kind float;
  #L32bf14.  v4:= v4 - v5 @kind float;
  #L32bf16.  v8:= v8.`android.graphics.Rect.bottom` @type ^`int`;
  #L32bf1a.  v8:= (`float`) v8 @kind i2f;
  #L32bf1c.  v5:= v6.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L32bf20.  v5:= v5 / v3 @kind float;
  #L32bf22.  v8:= v8 - v5 @kind float;
  #L32bf24.  call `set`(v0, v1, v2, v4, v8) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L32bf2a.  v8:= v6.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L32bf2e.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L32bf32.  v0:= v0 / v3 @kind float;
  #L32bf34.  v8:= v8 - v0 @kind float;
  #L32bf36.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bf3a.  v1:= v6.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32bf3e.  call `drawRoundRect`(v7, v0, v8, v8, v1) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L32bf44.  return @kind void;
}
procedure `void` `drawCloseIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32bf58.  call temp:= `showsCloseIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32bf5e.  v0:= temp;
  #L32bf60.  if v0 == 0 then goto L32bfc0;
  #L32bf64.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bf68.  call `calculateCloseIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32bf6e.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bf72.  v7:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L32bf76.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bf7a.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L32bf7e.  call `translate`(v6, v7, v0) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L32bf84.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32bf88.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bf8c.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L32bf92.  v2:= temp;
  #L32bf94.  v2:= (`int`) v2 @kind f2i;
  #L32bf96.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bf9a.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L32bfa0.  v3:= temp;
  #L32bfa2.  v3:= (`int`) v3 @kind f2i;
  #L32bfa4.  v4:= 0I;
  #L32bfa6.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L32bfac.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32bfb0.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32bfb6.  v7:= -v7 @kind float;
  #L32bfb8.  v0:= -v0 @kind float;
  #L32bfba.  call `translate`(v6, v7, v0) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L32bfc0.  return @kind void;
}
procedure `void` `drawCompatRipple`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Canvas` v3 @kind object, `android.graphics.Rect` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32bfd4.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32bfd8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L32bfdc.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L32bfe2.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32bfe6.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L32bfea.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L32bff0.  v0:= v2.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bff4.  call `set`(v0, v4) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L32bffa.  v4:= v2.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32bffe.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L32c002.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c006.  call `drawRoundRect`(v3, v4, v0, v0, v1) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L32c00c.  return @kind void;
}
procedure `void` `drawDebug`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object, `android.graphics.Rect` v11 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L32c020.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c024.  if v0 == 0 then goto L32c12a;
  #L32c028.  v1:= -16777216I;
  #L32c02c.  v2:= 127I;
  #L32c030.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L32c036.  v1:= temp;
  #L32c038.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L32c03e.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c042.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/Rect;Landroid/graphics/Paint;)V` @kind virtual;
  #L32c048.  call temp:= `showsChipIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32c04e.  v0:= temp;
  #L32c050.  if v0 != 0 then goto L32c060;
  #L32c054.  call temp:= `showsCheckedIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L32c05a.  v0:= temp;
  #L32c05c.  if v0 == 0 then goto L32c078;
  #L32c060.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c064.  call `calculateChipIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32c06a.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c06e.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c072.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L32c078.  v0:= v9.`com.google.android.material.chip.ChipDrawable.unicodeWrappedText` @type ^`java.lang.CharSequence` @kind object;
  #L32c07c.  if v0 == 0 then goto L32c0a8;
  #L32c080.  v0:= v11.`android.graphics.Rect.left` @type ^`int`;
  #L32c084.  v4:= (`float`) v0 @kind i2f;
  #L32c086.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L32c08c.  v5:= temp;
  #L32c08e.  v0:= v11.`android.graphics.Rect.right` @type ^`int`;
  #L32c092.  v6:= (`float`) v0 @kind i2f;
  #L32c094.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L32c09a.  v7:= temp;
  #L32c09c.  v8:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c0a0.  v3:= v10 @kind object;
  #L32c0a2.  call `drawLine`(v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L32c0a8.  call temp:= `showsCloseIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32c0ae.  v0:= temp;
  #L32c0b0.  if v0 == 0 then goto L32c0cc;
  #L32c0b4.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c0b8.  call `calculateCloseIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32c0be.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c0c2.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c0c6.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L32c0cc.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c0d0.  v1:= -65536I;
  #L32c0d4.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L32c0da.  v1:= temp;
  #L32c0dc.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L32c0e2.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c0e6.  call `calculateChipTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32c0ec.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c0f0.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c0f4.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L32c0fa.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c0fe.  v1:= -16711936I;
  #L32c104.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L32c10a.  v1:= temp;
  #L32c10c.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L32c112.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c116.  call `calculateCloseIconTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32c11c.  v11:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c120.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L32c124.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L32c12a.  return @kind void;
}
procedure `void` `drawText`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object, `android.graphics.Rect` v11 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L32c13c.  v0:= v9.`com.google.android.material.chip.ChipDrawable.unicodeWrappedText` @type ^`java.lang.CharSequence` @kind object;
  #L32c140.  if v0 == 0 then goto L32c236;
  #L32c144.  v0:= v9.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L32c148.  call temp:= `calculateTextOriginAndAlignment`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @kind virtual;
  #L32c14e.  v0:= temp @kind object;
  #L32c150.  v1:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c154.  call `calculateTextBounds`(v9, v11, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32c15a.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textAppearance` @type ^`com.google.android.material.resources.TextAppearance` @kind object;
  #L32c15e.  if v11 == 0 then goto L32c188;
  #L32c162.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` @kind object;
  #L32c166.  call temp:= `getState`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32c16c.  v1:= temp @kind object;
  #L32c16e.  v11.`android.text.TextPaint.drawableState` @type ^`int`[] := v1 @kind object;
  #L32c172.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textAppearance` @type ^`com.google.android.material.resources.TextAppearance` @kind object;
  #L32c176.  v1:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c17a.  v2:= v9.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` @kind object;
  #L32c17e.  v3:= v9.`com.google.android.material.chip.ChipDrawable.fontCallback` @type ^`androidx.core.content.res.ResourcesCompat$FontCallback` @kind object;
  #L32c182.  call `updateDrawState`(v11, v1, v2, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.updateDrawState:(Landroid/content/Context;Landroid/text/TextPaint;Landroidx/core/content/res/ResourcesCompat$FontCallback;)V` @kind virtual;
  #L32c188.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` @kind object;
  #L32c18c.  call `setTextAlign`(v11, v0) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L32c192.  call temp:= `getTextWidth`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextWidth:()F` @kind direct;
  #L32c198.  v11:= temp;
  #L32c19a.  call temp:= `round`(v11) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L32c1a0.  v11:= temp;
  #L32c1a2.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c1a6.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L32c1ac.  v0:= temp;
  #L32c1ae.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L32c1b4.  v0:= temp;
  #L32c1b6.  v1:= 0I;
  #L32c1b8.  if v11 <= v0 then goto L32c1c0;
  #L32c1bc.  v11:= 1I;
  #L32c1be.  goto L32c1c2;
  #L32c1c0.  v11:= 0I;
  #L32c1c2.  if v11 == 0 then goto L32c1d8;
  #L32c1c6.  call temp:= `save`(v10) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L32c1cc.  v1:= temp;
  #L32c1ce.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c1d2.  call temp:= `clipRect`(v10, v0) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L32c1d8.  v0:= v9.`com.google.android.material.chip.ChipDrawable.unicodeWrappedText` @type ^`java.lang.CharSequence` @kind object;
  #L32c1dc.  if v11 == 0 then goto L32c204;
  #L32c1e0.  v2:= v9.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L32c1e4.  if v2 == 0 then goto L32c204;
  #L32c1e8.  v2:= v9.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` @kind object;
  #L32c1ec.  v3:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32c1f0.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L32c1f6.  v3:= temp;
  #L32c1f8.  v4:= v9.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L32c1fc.  call temp:= `ellipsize`(v0, v2, v3, v4) @signature `Landroid/text/TextUtils;.ellipsize:(Ljava/lang/CharSequence;Landroid/text/TextPaint;FLandroid/text/TextUtils$TruncateAt;)Ljava/lang/CharSequence;` @kind static;
  #L32c202.  v0:= temp @kind object;
  #L32c204.  v3:= v0 @kind object;
  #L32c206.  v4:= 0I;
  #L32c208.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L32c20e.  v5:= temp;
  #L32c210.  v0:= v9.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L32c214.  v6:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L32c218.  v0:= v9.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L32c21c.  v7:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L32c220.  v8:= v9.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` @kind object;
  #L32c224.  v2:= v10 @kind object;
  #L32c226.  call `drawText`(v2, v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/CharSequence;IIFFLandroid/graphics/Paint;)V` @kind virtual;
  #L32c22c.  if v11 == 0 then goto L32c236;
  #L32c230.  call `restoreToCount`(v10, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L32c236.  return @kind void;
}
procedure `float` `getTextWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextWidth:()F` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32b6fc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textWidthDirty` @type ^`boolean` @kind boolean;
  #L32b700.  if v0 != 0 then goto L32b70a;
  #L32b704.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textWidth` @type ^`float`;
  #L32b708.  return v0;
  #L32b70a.  v0:= v1.`com.google.android.material.chip.ChipDrawable.unicodeWrappedText` @type ^`java.lang.CharSequence` @kind object;
  #L32b70e.  call temp:= `calculateTextWidth`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextWidth:(Ljava/lang/CharSequence;)F` @kind direct;
  #L32b714.  v0:= temp;
  #L32b716.  v1.`com.google.android.material.chip.ChipDrawable.textWidth` @type ^`float` := v0;
  #L32b71a.  v0:= 0I;
  #L32b71c.  v1.`com.google.android.material.chip.ChipDrawable.textWidthDirty` @type ^`boolean` := v0 @kind boolean;
  #L32b720.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textWidth` @type ^`float`;
  #L32b724.  return v0;
}
procedure `android.graphics.ColorFilter` `getTintColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32abb4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L32abb8.  if v0 == 0 then goto L32abbe;
  #L32abbc.  goto L32abc2;
  #L32abbe.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L32abc2.  return v0 @kind object;
}
procedure `boolean` `hasState`(`int`[] v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32ad34.  v0:= 0I;
  #L32ad36.  if v4 != 0 then goto L32ad3c;
  #L32ad3a.  return v0;
  #L32ad3c.  v1:= length @variable v4;
  #L32ad3e.  v2:= 0I;
  #L32ad40.  if v2 >= v1 then goto L32ad56;
  #L32ad44.  v3:= v4[v2];
  #L32ad48.  if v3 != v5 then goto L32ad50;
  #L32ad4c.  v4:= 1I;
  #L32ad4e.  return v4;
  #L32ad50.  v2:= v2 + 1;
  #L32ad54.  goto L32ad40;
  #L32ad56.  return v0;
}
procedure `boolean` `isStateful`(`android.content.res.ColorStateList` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L32aedc.  if v0 == 0 then goto L32aef0;
  #L32aee0.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L32aee6.  v0:= temp;
  #L32aee8.  if v0 == 0 then goto L32aef0;
  #L32aeec.  v0:= 1I;
  #L32aeee.  goto L32aef2;
  #L32aef0.  v0:= 0I;
  #L32aef2.  return v0;
}
procedure `boolean` `isStateful`(`android.graphics.drawable.Drawable` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L32af04.  if v0 == 0 then goto L32af18;
  #L32af08.  call temp:= `isStateful`(v0) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L32af0e.  v0:= temp;
  #L32af10.  if v0 == 0 then goto L32af18;
  #L32af14.  v0:= 1I;
  #L32af16.  goto L32af1a;
  #L32af18.  v0:= 0I;
  #L32af1a.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.resources.TextAppearance` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L32af2c.  if v1 == 0 then goto L32af4c;
  #L32af30.  v0:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32af34.  if v0 == 0 then goto L32af4c;
  #L32af38.  v1:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32af3c.  call temp:= `isStateful`(v1) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L32af42.  v1:= temp;
  #L32af44.  if v1 == 0 then goto L32af4c;
  #L32af48.  v1:= 1I;
  #L32af4a.  goto L32af4e;
  #L32af4c.  v1:= 0I;
  #L32af4e.  return v1;
}
procedure `void` `loadFromAttributes`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.util.AttributeSet` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32c314.  v0:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c318.  v2:= `@@com.google.android.material.R$styleable.Chip` @type ^`int`[] @kind object;
  #L32c31c.  v6:= 0I;
  #L32c31e.  v5:= new `int`[v6];
  #L32c322.  v1:= v8 @kind object;
  #L32c324.  v3:= v9;
  #L32c326.  v4:= v10;
  #L32c328.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L32c32e.  v9:= temp @kind object;
  #L32c330.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c334.  v0:= `@@com.google.android.material.R$styleable.Chip_chipBackgroundColor` @type ^`int`;
  #L32c338.  call temp:= `getColorStateList`(v10, v9, v0) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32c33e.  v10:= temp @kind object;
  #L32c340.  call `setChipBackgroundColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32c346.  v10:= `@@com.google.android.material.R$styleable.Chip_chipMinHeight` @type ^`int`;
  #L32c34a.  v0:= 0I;
  #L32c34c.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c352.  v10:= temp;
  #L32c354.  call `setChipMinHeight`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L32c35a.  v10:= `@@com.google.android.material.R$styleable.Chip_chipCornerRadius` @type ^`int`;
  #L32c35e.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c364.  v10:= temp;
  #L32c366.  call `setChipCornerRadius`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L32c36c.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c370.  v1:= `@@com.google.android.material.R$styleable.Chip_chipStrokeColor` @type ^`int`;
  #L32c374.  call temp:= `getColorStateList`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32c37a.  v10:= temp @kind object;
  #L32c37c.  call `setChipStrokeColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32c382.  v10:= `@@com.google.android.material.R$styleable.Chip_chipStrokeWidth` @type ^`int`;
  #L32c386.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c38c.  v10:= temp;
  #L32c38e.  call `setChipStrokeWidth`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L32c394.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c398.  v1:= `@@com.google.android.material.R$styleable.Chip_rippleColor` @type ^`int`;
  #L32c39c.  call temp:= `getColorStateList`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32c3a2.  v10:= temp @kind object;
  #L32c3a4.  call `setRippleColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32c3aa.  v10:= `@@com.google.android.material.R$styleable.Chip_android_text` @type ^`int`;
  #L32c3ae.  call temp:= `getText`(v9, v10) @signature `Landroid/content/res/TypedArray;.getText:(I)Ljava/lang/CharSequence;` @kind virtual;
  #L32c3b4.  v10:= temp @kind object;
  #L32c3b6.  call `setText`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L32c3bc.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c3c0.  v1:= `@@com.google.android.material.R$styleable.Chip_android_textAppearance` @type ^`int`;
  #L32c3c4.  call temp:= `getTextAppearance`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getTextAppearance:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/resources/TextAppearance;` @kind static;
  #L32c3ca.  v10:= temp @kind object;
  #L32c3cc.  call `setTextAppearance`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L32c3d2.  v10:= `@@com.google.android.material.R$styleable.Chip_android_ellipsize` @type ^`int`;
  #L32c3d6.  call temp:= `getInt`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L32c3dc.  v10:= temp;
  #L32c3de.  v1:= 1I;
  #L32c3e0.  if v10 == v1 then goto L32c40a;
  #L32c3e4.  v1:= 2I;
  #L32c3e6.  if v10 == v1 then goto L32c3fe;
  #L32c3ea.  v1:= 3I;
  #L32c3ec.  if v10 == v1 then goto L32c3f2;
  #L32c3f0.  goto L32c414;
  #L32c3f2.  v10:= `@@android.text.TextUtils$TruncateAt.END` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L32c3f6.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L32c3fc.  goto L32c414;
  #L32c3fe.  v10:= `@@android.text.TextUtils$TruncateAt.MIDDLE` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L32c402.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L32c408.  goto L32c414;
  #L32c40a.  v10:= `@@android.text.TextUtils$TruncateAt.START` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L32c40e.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L32c414.  v10:= `@@com.google.android.material.R$styleable.Chip_chipIconVisible` @type ^`int`;
  #L32c418.  call temp:= `getBoolean`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L32c41e.  v10:= temp;
  #L32c420.  call `setChipIconVisible`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L32c426.  v10:= "http://schemas.android.com/apk/res-auto" @kind object;
  #L32c42a.  if v8 == 0 then goto L32c460;
  #L32c42e.  v1:= "chipIconEnabled" @kind object;
  #L32c432.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32c438.  v1:= temp @kind object;
  #L32c43a.  if v1 == 0 then goto L32c460;
  #L32c43e.  v1:= "chipIconVisible" @kind object;
  #L32c442.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32c448.  v1:= temp @kind object;
  #L32c44a.  if v1 != 0 then goto L32c460;
  #L32c44e.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconEnabled` @type ^`int`;
  #L32c452.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L32c458.  v1:= temp;
  #L32c45a.  call `setChipIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L32c460.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c464.  v2:= `@@com.google.android.material.R$styleable.Chip_chipIcon` @type ^`int`;
  #L32c468.  call temp:= `getDrawable`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32c46e.  v1:= temp @kind object;
  #L32c470.  call `setChipIcon`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L32c476.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c47a.  v2:= `@@com.google.android.material.R$styleable.Chip_chipIconTint` @type ^`int`;
  #L32c47e.  call temp:= `getColorStateList`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32c484.  v1:= temp @kind object;
  #L32c486.  call `setChipIconTint`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32c48c.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconSize` @type ^`int`;
  #L32c490.  call temp:= `getDimension`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c496.  v1:= temp;
  #L32c498.  call `setChipIconSize`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L32c49e.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconVisible` @type ^`int`;
  #L32c4a2.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L32c4a8.  v1:= temp;
  #L32c4aa.  call `setCloseIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L32c4b0.  if v8 == 0 then goto L32c4e6;
  #L32c4b4.  v1:= "closeIconEnabled" @kind object;
  #L32c4b8.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32c4be.  v1:= temp @kind object;
  #L32c4c0.  if v1 == 0 then goto L32c4e6;
  #L32c4c4.  v1:= "closeIconVisible" @kind object;
  #L32c4c8.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32c4ce.  v1:= temp @kind object;
  #L32c4d0.  if v1 != 0 then goto L32c4e6;
  #L32c4d4.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconEnabled` @type ^`int`;
  #L32c4d8.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L32c4de.  v1:= temp;
  #L32c4e0.  call `setCloseIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L32c4e6.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c4ea.  v2:= `@@com.google.android.material.R$styleable.Chip_closeIcon` @type ^`int`;
  #L32c4ee.  call temp:= `getDrawable`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32c4f4.  v1:= temp @kind object;
  #L32c4f6.  call `setCloseIcon`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L32c4fc.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c500.  v2:= `@@com.google.android.material.R$styleable.Chip_closeIconTint` @type ^`int`;
  #L32c504.  call temp:= `getColorStateList`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32c50a.  v1:= temp @kind object;
  #L32c50c.  call `setCloseIconTint`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32c512.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconSize` @type ^`int`;
  #L32c516.  call temp:= `getDimension`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c51c.  v1:= temp;
  #L32c51e.  call `setCloseIconSize`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L32c524.  v1:= `@@com.google.android.material.R$styleable.Chip_android_checkable` @type ^`int`;
  #L32c528.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L32c52e.  v1:= temp;
  #L32c530.  call `setCheckable`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L32c536.  v1:= `@@com.google.android.material.R$styleable.Chip_checkedIconVisible` @type ^`int`;
  #L32c53a.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L32c540.  v1:= temp;
  #L32c542.  call `setCheckedIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L32c548.  if v8 == 0 then goto L32c57e;
  #L32c54c.  v1:= "checkedIconEnabled" @kind object;
  #L32c550.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32c556.  v1:= temp @kind object;
  #L32c558.  if v1 == 0 then goto L32c57e;
  #L32c55c.  v1:= "checkedIconVisible" @kind object;
  #L32c560.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32c566.  v8:= temp @kind object;
  #L32c568.  if v8 != 0 then goto L32c57e;
  #L32c56c.  v8:= `@@com.google.android.material.R$styleable.Chip_checkedIconEnabled` @type ^`int`;
  #L32c570.  call temp:= `getBoolean`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L32c576.  v8:= temp;
  #L32c578.  call `setCheckedIconVisible`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L32c57e.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c582.  v10:= `@@com.google.android.material.R$styleable.Chip_checkedIcon` @type ^`int`;
  #L32c586.  call temp:= `getDrawable`(v8, v9, v10) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32c58c.  v8:= temp @kind object;
  #L32c58e.  call `setCheckedIcon`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L32c594.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c598.  v10:= `@@com.google.android.material.R$styleable.Chip_showMotionSpec` @type ^`int`;
  #L32c59c.  call temp:= `createFromAttribute`(v8, v9, v10) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L32c5a2.  v8:= temp @kind object;
  #L32c5a4.  call `setShowMotionSpec`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L32c5aa.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c5ae.  v10:= `@@com.google.android.material.R$styleable.Chip_hideMotionSpec` @type ^`int`;
  #L32c5b2.  call temp:= `createFromAttribute`(v8, v9, v10) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L32c5b8.  v8:= temp @kind object;
  #L32c5ba.  call `setHideMotionSpec`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L32c5c0.  v8:= `@@com.google.android.material.R$styleable.Chip_chipStartPadding` @type ^`int`;
  #L32c5c4.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c5ca.  v8:= temp;
  #L32c5cc.  call `setChipStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L32c5d2.  v8:= `@@com.google.android.material.R$styleable.Chip_iconStartPadding` @type ^`int`;
  #L32c5d6.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c5dc.  v8:= temp;
  #L32c5de.  call `setIconStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L32c5e4.  v8:= `@@com.google.android.material.R$styleable.Chip_iconEndPadding` @type ^`int`;
  #L32c5e8.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c5ee.  v8:= temp;
  #L32c5f0.  call `setIconEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L32c5f6.  v8:= `@@com.google.android.material.R$styleable.Chip_textStartPadding` @type ^`int`;
  #L32c5fa.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c600.  v8:= temp;
  #L32c602.  call `setTextStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L32c608.  v8:= `@@com.google.android.material.R$styleable.Chip_textEndPadding` @type ^`int`;
  #L32c60c.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c612.  v8:= temp;
  #L32c614.  call `setTextEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L32c61a.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIconStartPadding` @type ^`int`;
  #L32c61e.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c624.  v8:= temp;
  #L32c626.  call `setCloseIconStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L32c62c.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIconEndPadding` @type ^`int`;
  #L32c630.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c636.  v8:= temp;
  #L32c638.  call `setCloseIconEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L32c63e.  v8:= `@@com.google.android.material.R$styleable.Chip_chipEndPadding` @type ^`int`;
  #L32c642.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L32c648.  v8:= temp;
  #L32c64a.  call `setChipEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L32c650.  v8:= `@@com.google.android.material.R$styleable.Chip_android_maxWidth` @type ^`int`;
  #L32c654.  v10:= 2147483647I;
  #L32c65a.  call temp:= `getDimensionPixelSize`(v9, v8, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L32c660.  v8:= temp;
  #L32c662.  call `setMaxWidth`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @kind virtual;
  #L32c668.  call `recycle`(v9) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L32c66e.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `int`[] v6 @kind object, `int`[] v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32b06c.  call temp:= `onStateChange`(v5, v6) @signature `Landroid/graphics/drawable/Drawable;.onStateChange:([I)Z` @kind super;
  #L32b072.  v0:= temp;
  #L32b074.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32b078.  v2:= 0I;
  #L32b07a.  if v1 == 0 then goto L32b08c;
  #L32b07e.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L32b082.  call temp:= `getColorForState`(v1, v6, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L32b088.  v1:= temp;
  #L32b08a.  goto L32b08e;
  #L32b08c.  v1:= 0I;
  #L32b08e.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L32b092.  v4:= 1I;
  #L32b094.  if v3 == v1 then goto L32b09e;
  #L32b098.  v5.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int` := v1;
  #L32b09c.  v0:= 1I;
  #L32b09e.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32b0a2.  if v1 == 0 then goto L32b0b4;
  #L32b0a6.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L32b0aa.  call temp:= `getColorForState`(v1, v6, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L32b0b0.  v1:= temp;
  #L32b0b2.  goto L32b0b6;
  #L32b0b4.  v1:= 0I;
  #L32b0b6.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L32b0ba.  if v3 == v1 then goto L32b0c4;
  #L32b0be.  v5.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int` := v1;
  #L32b0c2.  v0:= 1I;
  #L32b0c4.  v1:= v5.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32b0c8.  if v1 == 0 then goto L32b0da;
  #L32b0cc.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L32b0d0.  call temp:= `getColorForState`(v1, v6, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L32b0d6.  v1:= temp;
  #L32b0d8.  goto L32b0dc;
  #L32b0da.  v1:= 0I;
  #L32b0dc.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L32b0e0.  if v3 == v1 then goto L32b0f2;
  #L32b0e4.  v5.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int` := v1;
  #L32b0e8.  v1:= v5.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L32b0ec.  if v1 == 0 then goto L32b0f2;
  #L32b0f0.  v0:= 1I;
  #L32b0f2.  v1:= v5.`com.google.android.material.chip.ChipDrawable.textAppearance` @type ^`com.google.android.material.resources.TextAppearance` @kind object;
  #L32b0f6.  if v1 == 0 then goto L32b118;
  #L32b0fa.  v1:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32b0fe.  if v1 == 0 then goto L32b118;
  #L32b102.  v1:= v5.`com.google.android.material.chip.ChipDrawable.textAppearance` @type ^`com.google.android.material.resources.TextAppearance` @kind object;
  #L32b106.  v1:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32b10a.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L32b10e.  call temp:= `getColorForState`(v1, v6, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L32b114.  v1:= temp;
  #L32b116.  goto L32b11a;
  #L32b118.  v1:= 0I;
  #L32b11a.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L32b11e.  if v3 == v1 then goto L32b128;
  #L32b122.  v5.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int` := v1;
  #L32b126.  v0:= 1I;
  #L32b128.  call temp:= `getState`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32b12e.  v1:= temp @kind object;
  #L32b130.  v3:= 16842912I;
  #L32b136.  call temp:= `hasState`(v1, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @kind static;
  #L32b13c.  v1:= temp;
  #L32b13e.  if v1 == 0 then goto L32b14e;
  #L32b142.  v1:= v5.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L32b146.  if v1 == 0 then goto L32b14e;
  #L32b14a.  v1:= 1I;
  #L32b14c.  goto L32b150;
  #L32b14e.  v1:= 0I;
  #L32b150.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L32b154.  if v3 == v1 then goto L32b184;
  #L32b158.  v3:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b15c.  if v3 == 0 then goto L32b184;
  #L32b160.  call temp:= `calculateChipIconWidth`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32b166.  v0:= temp;
  #L32b168.  v5.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v1 @kind boolean;
  #L32b16c.  call temp:= `calculateChipIconWidth`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32b172.  v1:= temp;
  #L32b174.  v0:= fcmpl(v0, v1);
  #L32b178.  if v0 == 0 then goto L32b182;
  #L32b17c.  v0:= 1I;
  #L32b17e.  v1:= 1I;
  #L32b180.  goto L32b186;
  #L32b182.  v0:= 1I;
  #L32b184.  v1:= 0I;
  #L32b186.  v3:= v5.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32b18a.  if v3 == 0 then goto L32b19a;
  #L32b18e.  v2:= v5.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L32b192.  call temp:= `getColorForState`(v3, v6, v2) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L32b198.  v2:= temp;
  #L32b19a.  v3:= v5.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L32b19e.  if v3 == v2 then goto L32b1bc;
  #L32b1a2.  v5.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int` := v2;
  #L32b1a6.  v0:= v5.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32b1aa.  v2:= v5.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L32b1ae.  call temp:= `updateTintFilter`(v5, v0, v2) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L32b1b4.  v0:= temp @kind object;
  #L32b1b6.  v5.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v0 @kind object;
  #L32b1ba.  v0:= 1I;
  #L32b1bc.  v2:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b1c0.  call temp:= `isStateful`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L32b1c6.  v2:= temp;
  #L32b1c8.  if v2 == 0 then goto L32b1da;
  #L32b1cc.  v2:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b1d0.  call temp:= `setState`(v2, v6) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L32b1d6.  v2:= temp;
  #L32b1d8.  v0:= v0 ^| v2 @kind int;
  #L32b1da.  v2:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b1de.  call temp:= `isStateful`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L32b1e4.  v2:= temp;
  #L32b1e6.  if v2 == 0 then goto L32b1f8;
  #L32b1ea.  v2:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b1ee.  call temp:= `setState`(v2, v6) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L32b1f4.  v6:= temp;
  #L32b1f6.  v0:= v0 ^| v6 @kind int;
  #L32b1f8.  v6:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b1fc.  call temp:= `isStateful`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L32b202.  v6:= temp;
  #L32b204.  if v6 == 0 then goto L32b216;
  #L32b208.  v6:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b20c.  call temp:= `setState`(v6, v7) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L32b212.  v6:= temp;
  #L32b214.  v0:= v0 ^| v6 @kind int;
  #L32b216.  if v0 == 0 then goto L32b220;
  #L32b21a.  call `invalidateSelf`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32b220.  if v1 == 0 then goto L32b22a;
  #L32b224.  call `onSizeChange`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32b22a.  return v0;
}
procedure `boolean` `showsCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32b310.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L32b314.  if v0 == 0 then goto L32b32c;
  #L32b318.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b31c.  if v0 == 0 then goto L32b32c;
  #L32b320.  v0:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L32b324.  if v0 == 0 then goto L32b32c;
  #L32b328.  v0:= 1I;
  #L32b32a.  goto L32b32e;
  #L32b32c.  v0:= 0I;
  #L32b32e.  return v0;
}
procedure `boolean` `showsChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32b340.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L32b344.  if v0 == 0 then goto L32b354;
  #L32b348.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b34c.  if v0 == 0 then goto L32b354;
  #L32b350.  v0:= 1I;
  #L32b352.  goto L32b356;
  #L32b354.  v0:= 0I;
  #L32b356.  return v0;
}
procedure `boolean` `showsCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32b368.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L32b36c.  if v0 == 0 then goto L32b37c;
  #L32b370.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b374.  if v0 == 0 then goto L32b37c;
  #L32b378.  v0:= 1I;
  #L32b37a.  goto L32b37e;
  #L32b37c.  v0:= 0I;
  #L32b37e.  return v0;
}
procedure `void` `unapplyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32d51c.  if v2 == 0 then goto L32d528;
  #L32d520.  v0:= 0I;
  #L32d522.  call `setCallback`(v2, v0) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L32d528.  return @kind void;
}
procedure `void` `updateCompatRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32d560.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L32d564.  if v0 == 0 then goto L32d576;
  #L32d568.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32d56c.  call temp:= `convertToRippleDrawableColor`(v0) @signature `Lcom/google/android/material/ripple/RippleUtils;.convertToRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L32d572.  v0:= temp @kind object;
  #L32d574.  goto L32d578;
  #L32d576.  v0:= 0I;
  #L32d578.  v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` := v0 @kind object;
  #L32d57c.  return @kind void;
}
procedure `float` `calculateChipIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L32b4e8.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32b4ee.  v0:= temp;
  #L32b4f0.  if v0 != 0 then goto L32b506;
  #L32b4f4.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L32b4fa.  v0:= temp;
  #L32b4fc.  if v0 == 0 then goto L32b502;
  #L32b500.  goto L32b506;
  #L32b502.  v0:= 0I;
  #L32b504.  return v0;
  #L32b506.  v0:= v2.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L32b50a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L32b50e.  v0:= v0 + v1 @kind float;
  #L32b510.  v1:= v2.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L32b514.  v0:= v0 + v1 @kind float;
  #L32b516.  return v0;
}
procedure `android.graphics.Paint$Align` `calculateTextOriginAndAlignment`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.PointF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L32abd4.  v0:= 0I;
  #L32abd6.  call `set`(v4, v0, v0) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L32abdc.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L32abe0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.unicodeWrappedText` @type ^`java.lang.CharSequence` @kind object;
  #L32abe4.  if v1 == 0 then goto L32ac42;
  #L32abe8.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L32abec.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32abf2.  v1:= temp;
  #L32abf4.  v0:= v0 + v1 @kind float;
  #L32abf6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L32abfa.  v0:= v0 + v1 @kind float;
  #L32abfc.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L32ac02.  v1:= temp;
  #L32ac04.  if v1 != 0 then goto L32ac1a;
  #L32ac08.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L32ac0c.  v1:= (`float`) v1 @kind i2f;
  #L32ac0e.  v1:= v1 + v0 @kind float;
  #L32ac10.  v4.`android.graphics.PointF.x` @type ^`float` := v1;
  #L32ac14.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L32ac18.  goto L32ac2a;
  #L32ac1a.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L32ac1e.  v1:= (`float`) v1 @kind i2f;
  #L32ac20.  v1:= v1 - v0 @kind float;
  #L32ac22.  v4.`android.graphics.PointF.x` @type ^`float` := v1;
  #L32ac26.  v0:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L32ac2a.  call temp:= `centerY`(v3) @signature `Landroid/graphics/Rect;.centerY:()I` @kind virtual;
  #L32ac30.  v3:= temp;
  #L32ac32.  v3:= (`float`) v3 @kind i2f;
  #L32ac34.  call temp:= `calculateTextCenterFromBaseline`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @kind direct;
  #L32ac3a.  v1:= temp;
  #L32ac3c.  v3:= v3 - v1 @kind float;
  #L32ac3e.  v4.`android.graphics.PointF.y` @type ^`float` := v3;
  #L32ac42.  return v0 @kind object;
}
procedure `void` `draw`(`com.google.android.material.chip.ChipDrawable` v10 @kind this, `android.graphics.Canvas` v11 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L32bca4.  call temp:= `getBounds`(v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L32bcaa.  v0:= temp @kind object;
  #L32bcac.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L32bcb2.  v1:= temp;
  #L32bcb4.  if v1 != 0 then goto L32bd40;
  #L32bcb8.  call temp:= `getAlpha`(v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L32bcbe.  v1:= temp;
  #L32bcc0.  if v1 != 0 then goto L32bcc6;
  #L32bcc4.  goto L32bd40;
  #L32bcc6.  v1:= 0I;
  #L32bcc8.  v2:= v10.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L32bccc.  v3:= 255I;
  #L32bcd0.  if v2 >= v3 then goto L32bcfa;
  #L32bcd4.  v1:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L32bcd8.  v5:= (`float`) v1 @kind i2f;
  #L32bcda.  v1:= v0.`android.graphics.Rect.top` @type ^`int`;
  #L32bcde.  v6:= (`float`) v1 @kind i2f;
  #L32bce0.  v1:= v0.`android.graphics.Rect.right` @type ^`int`;
  #L32bce4.  v7:= (`float`) v1 @kind i2f;
  #L32bce6.  v1:= v0.`android.graphics.Rect.bottom` @type ^`int`;
  #L32bcea.  v8:= (`float`) v1 @kind i2f;
  #L32bcec.  v9:= v10.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L32bcf0.  v4:= v11 @kind object;
  #L32bcf2.  call temp:= `saveLayerAlpha`(v4, v5, v6, v7, v8, v9) @signature `Lcom/google/android/material/canvas/CanvasCompat;.saveLayerAlpha:(Landroid/graphics/Canvas;FFFFI)I` @kind static;
  #L32bcf8.  v1:= temp;
  #L32bcfa.  call `drawChipBackground`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L32bd00.  call `drawChipStroke`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L32bd06.  call `drawCompatRipple`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L32bd0c.  call `drawChipIcon`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L32bd12.  call `drawCheckedIcon`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L32bd18.  v2:= v10.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L32bd1c.  if v2 == 0 then goto L32bd26;
  #L32bd20.  call `drawText`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L32bd26.  call `drawCloseIcon`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L32bd2c.  call `drawDebug`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L32bd32.  v0:= v10.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L32bd36.  if v0 >= v3 then goto L32bd40;
  #L32bd3a.  call `restoreToCount`(v11, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L32bd40.  return @kind void;
}
procedure `int` `getAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b738.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L32b73c.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ac54.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32ac58.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipBackgroundColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ab24.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32ab28.  return v0 @kind object;
}
procedure `float` `getChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b5c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L32b5c8.  return v0;
}
procedure `float` `getChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b5dc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L32b5e0.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ac6c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32ac70.  if v0 == 0 then goto L32ac7e;
  #L32ac74.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32ac7a.  v0:= temp @kind object;
  #L32ac7c.  goto L32ac80;
  #L32ac7e.  v0:= 0I;
  #L32ac80.  return v0 @kind object;
}
procedure `float` `getChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b5f4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L32b5f8.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ab3c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32ab40.  return v0 @kind object;
}
procedure `float` `getChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipMinHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b60c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L32b610.  return v0;
}
procedure `float` `getChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b624.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L32b628.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ab54.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32ab58.  return v0 @kind object;
}
procedure `float` `getChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b63c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L32b640.  return v0;
}
procedure `void` `getChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c248.  call temp:= `getBounds`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L32c24e.  v0:= temp @kind object;
  #L32c250.  call `calculateChipTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32c256.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `getCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ac94.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32ac98.  if v0 == 0 then goto L32aca6;
  #L32ac9c.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32aca2.  v0:= temp @kind object;
  #L32aca4.  goto L32aca8;
  #L32aca6.  v0:= 0I;
  #L32aca8.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconContentDescription:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b808.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L32b80c.  return v0 @kind object;
}
procedure `float` `getCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b654.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L32b658.  return v0;
}
procedure `float` `getCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b66c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L32b670.  return v0;
}
procedure `float` `getCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b684.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L32b688.  return v0;
}
procedure `int`[] `getCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b7f0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L32b7f4.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ab6c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32ab70.  return v0 @kind object;
}
procedure `void` `getCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c268.  call temp:= `getBounds`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L32c26e.  v0:= temp @kind object;
  #L32c270.  call `calculateCloseIconTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L32c276.  return @kind void;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ab9c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L32aba0.  return v0 @kind object;
}
procedure `android.text.TextUtils$TruncateAt` `getEllipsize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getEllipsize:()Landroid/text/TextUtils$TruncateAt;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32acbc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L32acc0.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getHideMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b390.  v0:= v1.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L32b394.  return v0 @kind object;
}
procedure `float` `getIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b69c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L32b6a0.  return v0;
}
procedure `float` `getIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b6b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L32b6b8.  return v0;
}
procedure `int` `getIntrinsicHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b750.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L32b754.  v0:= (`int`) v0 @kind f2i;
  #L32b756.  return v0;
}
procedure `int` `getIntrinsicWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32b768.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L32b76c.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32b772.  v1:= temp;
  #L32b774.  v0:= v0 + v1 @kind float;
  #L32b776.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L32b77a.  v0:= v0 + v1 @kind float;
  #L32b77c.  call temp:= `getTextWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextWidth:()F` @kind direct;
  #L32b782.  v1:= temp;
  #L32b784.  v0:= v0 + v1 @kind float;
  #L32b786.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L32b78a.  v0:= v0 + v1 @kind float;
  #L32b78c.  call temp:= `calculateCloseIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind direct;
  #L32b792.  v1:= temp;
  #L32b794.  v0:= v0 + v1 @kind float;
  #L32b796.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L32b79a.  v0:= v0 + v1 @kind float;
  #L32b79c.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L32b7a2.  v0:= temp;
  #L32b7a4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L32b7a8.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L32b7ae.  v0:= temp;
  #L32b7b0.  return v0;
}
procedure `int` `getMaxWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getMaxWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b7c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L32b7c8.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b7dc.  v0:= -3I;
  #L32b7de.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.chip.ChipDrawable` v8 @kind this, `android.graphics.Outline` v9 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L32c288.  call temp:= `getBounds`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L32c28e.  v0:= temp @kind object;
  #L32c290.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L32c296.  v1:= temp;
  #L32c298.  if v1 != 0 then goto L32c2a8;
  #L32c29c.  v1:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L32c2a0.  call `setRoundRect`(v9, v0, v1) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L32c2a6.  goto L32c2c8;
  #L32c2a8.  v3:= 0I;
  #L32c2aa.  v4:= 0I;
  #L32c2ac.  call temp:= `getIntrinsicWidth`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L32c2b2.  v5:= temp;
  #L32c2b4.  call temp:= `getIntrinsicHeight`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L32c2ba.  v6:= temp;
  #L32c2bc.  v7:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L32c2c0.  v2:= v9 @kind object;
  #L32c2c2.  call `setRoundRect`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Outline;.setRoundRect:(IIIIF)V` @kind virtual;
  #L32c2c8.  call temp:= `getAlpha`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L32c2ce.  v0:= temp;
  #L32c2d0.  v0:= (`float`) v0 @kind i2f;
  #L32c2d2.  v1:= 255.0F;
  #L32c2d6.  v0:= v0 / v1 @kind float;
  #L32c2d8.  call `setAlpha`(v9, v0) @signature `Landroid/graphics/Outline;.setAlpha:(F)V` @kind virtual;
  #L32c2de.  return @kind void;
}
procedure `android.content.res.ColorStateList` `getRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ab84.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32ab88.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getShowMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b3a8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L32b3ac.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b820.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rawText` @type ^`java.lang.CharSequence` @kind object;
  #L32b824.  return v0 @kind object;
}
procedure `com.google.android.material.resources.TextAppearance` `getTextAppearance`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b4d0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textAppearance` @type ^`com.google.android.material.resources.TextAppearance` @kind object;
  #L32b4d4.  return v0 @kind object;
}
procedure `float` `getTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b6cc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L32b6d0.  return v0;
}
procedure `float` `getTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b6e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L32b6e8.  return v0;
}
procedure `boolean` `getUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getUseCompatRipple:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ad1c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L32ad20.  return v0;
}
procedure `void` `invalidateDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L32c2f0.  call temp:= `getCallback`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L32c2f6.  v1:= temp @kind object;
  #L32c2f8.  if v1 == 0 then goto L32c302;
  #L32c2fc.  call `invalidateDrawable`(v1, v0) @signature `Landroid/graphics/drawable/Drawable$Callback;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L32c302.  return @kind void;
}
procedure `boolean` `isCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ad68.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L32ad6c.  return v0;
}
procedure `boolean` `isCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ad80.  call temp:= `isCheckedIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @kind virtual;
  #L32ad86.  v0:= temp;
  #L32ad88.  return v0;
}
procedure `boolean` `isCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ad9c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L32ada0.  return v0;
}
procedure `boolean` `isChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32adb4.  call temp:= `isChipIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @kind virtual;
  #L32adba.  v0:= temp;
  #L32adbc.  return v0;
}
procedure `boolean` `isChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32add0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L32add4.  return v0;
}
procedure `boolean` `isCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ade8.  call temp:= `isCloseIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @kind virtual;
  #L32adee.  v0:= temp;
  #L32adf0.  return v0;
}
procedure `boolean` `isCloseIconStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ae04.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32ae08.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L32ae0e.  v0:= temp;
  #L32ae10.  return v0;
}
procedure `boolean` `isCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ae24.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L32ae28.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ae3c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32ae40.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L32ae46.  v0:= temp;
  #L32ae48.  if v0 != 0 then goto L32aec6;
  #L32ae4c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32ae50.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L32ae56.  v0:= temp;
  #L32ae58.  if v0 != 0 then goto L32aec6;
  #L32ae5c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L32ae60.  if v0 == 0 then goto L32ae74;
  #L32ae64.  v0:= v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32ae68.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L32ae6e.  v0:= temp;
  #L32ae70.  if v0 != 0 then goto L32aec6;
  #L32ae74.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textAppearance` @type ^`com.google.android.material.resources.TextAppearance` @kind object;
  #L32ae78.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @kind static;
  #L32ae7e.  v0:= temp;
  #L32ae80.  if v0 != 0 then goto L32aec6;
  #L32ae84.  call temp:= `canShowCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @kind direct;
  #L32ae8a.  v0:= temp;
  #L32ae8c.  if v0 != 0 then goto L32aec6;
  #L32ae90.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32ae94.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L32ae9a.  v0:= temp;
  #L32ae9c.  if v0 != 0 then goto L32aec6;
  #L32aea0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32aea4.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L32aeaa.  v0:= temp;
  #L32aeac.  if v0 != 0 then goto L32aec6;
  #L32aeb0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32aeb4.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L32aeba.  v0:= temp;
  #L32aebc.  if v0 == 0 then goto L32aec2;
  #L32aec0.  goto L32aec6;
  #L32aec2.  v0:= 0I;
  #L32aec4.  goto L32aec8;
  #L32aec6.  v0:= 1I;
  #L32aec8.  return v0;
}
procedure `boolean` `onLayoutDirectionChanged`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLayoutDirectionChanged:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32af60.  call temp:= `onLayoutDirectionChanged`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.onLayoutDirectionChanged:(I)Z` @kind super;
  #L32af66.  v0:= temp;
  #L32af68.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32af6e.  v1:= temp;
  #L32af70.  if v1 == 0 then goto L32af82;
  #L32af74.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32af78.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLayoutDirection:(I)Z` @kind virtual;
  #L32af7e.  v1:= temp;
  #L32af80.  v0:= v0 ^| v1 @kind int;
  #L32af82.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L32af88.  v1:= temp;
  #L32af8a.  if v1 == 0 then goto L32af9c;
  #L32af8e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32af92.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLayoutDirection:(I)Z` @kind virtual;
  #L32af98.  v1:= temp;
  #L32af9a.  v0:= v0 ^| v1 @kind int;
  #L32af9c.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32afa2.  v1:= temp;
  #L32afa4.  if v1 == 0 then goto L32afb6;
  #L32afa8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32afac.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLayoutDirection:(I)Z` @kind virtual;
  #L32afb2.  v3:= temp;
  #L32afb4.  v0:= v0 ^| v3 @kind int;
  #L32afb6.  if v0 == 0 then goto L32afc0;
  #L32afba.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32afc0.  v3:= 1I;
  #L32afc2.  return v3;
}
procedure `boolean` `onLevelChange`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLevelChange:(I)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L32afd4.  call temp:= `onLevelChange`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.onLevelChange:(I)Z` @kind super;
  #L32afda.  v0:= temp;
  #L32afdc.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32afe2.  v1:= temp;
  #L32afe4.  if v1 == 0 then goto L32aff6;
  #L32afe8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32afec.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L32aff2.  v1:= temp;
  #L32aff4.  v0:= v0 ^| v1 @kind int;
  #L32aff6.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L32affc.  v1:= temp;
  #L32affe.  if v1 == 0 then goto L32b010;
  #L32b002.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b006.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L32b00c.  v1:= temp;
  #L32b00e.  v0:= v0 ^| v1 @kind int;
  #L32b010.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32b016.  v1:= temp;
  #L32b018.  if v1 == 0 then goto L32b02a;
  #L32b01c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b020.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L32b026.  v3:= temp;
  #L32b028.  v0:= v0 ^| v3 @kind int;
  #L32b02a.  if v0 == 0 then goto L32b034;
  #L32b02e.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32b034.  return v0;
}
procedure `void` `onSizeChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32c680.  v0:= v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` @kind object;
  #L32c684.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L32c68a.  v0:= temp @kind object;
  #L32c68c.  v0:= (`com.google.android.material.chip.ChipDrawable$Delegate`) v0 @kind object;
  #L32c690.  if v0 == 0 then goto L32c69a;
  #L32c694.  call `onChipDrawableSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable$Delegate;.onChipDrawableSizeChange:()V` @kind interface;
  #L32c69a.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32b048.  call temp:= `getCloseIconState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L32b04e.  v0:= temp @kind object;
  #L32b050.  call temp:= `onStateChange`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L32b056.  v2:= temp;
  #L32b058.  return v2;
}
procedure `void` `scheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object, `long` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {
    temp;

  #L32c6ac.  call temp:= `getCallback`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L32c6b2.  v1:= temp @kind object;
  #L32c6b4.  if v1 == 0 then goto L32c6be;
  #L32c6b8.  call `scheduleDrawable`(v1, v0, v2, v3) @signature `Landroid/graphics/drawable/Drawable$Callback;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @kind interface;
  #L32c6be.  return @kind void;
}
procedure `void` `setAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c6d0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L32c6d4.  if v0 == v2 then goto L32c6e2;
  #L32c6d8.  v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v2;
  #L32c6dc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32c6e2.  return @kind void;
}
procedure `void` `setCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c6f4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L32c6f8.  if v0 == v2 then goto L32c736;
  #L32c6fc.  v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` := v2 @kind boolean;
  #L32c700.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32c706.  v0:= temp;
  #L32c708.  if v2 != 0 then goto L32c71a;
  #L32c70c.  v2:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L32c710.  if v2 == 0 then goto L32c71a;
  #L32c714.  v2:= 0I;
  #L32c716.  v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v2 @kind boolean;
  #L32c71a.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32c720.  v2:= temp;
  #L32c722.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32c728.  v2:= fcmpl(v0, v2);
  #L32c72c.  if v2 == 0 then goto L32c736;
  #L32c730.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32c736.  return @kind void;
}
procedure `void` `setCheckableResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckableResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c748.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c74c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32c752.  v0:= temp @kind object;
  #L32c754.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L32c75a.  v2:= temp;
  #L32c75c.  call `setCheckable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L32c762.  return @kind void;
}
procedure `void` `setCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32c774.  v0:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32c778.  if v0 == v3 then goto L32c7b8;
  #L32c77c.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32c782.  v0:= temp;
  #L32c784.  v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L32c788.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32c78e.  v3:= temp;
  #L32c790.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32c794.  call `unapplyChildDrawable`(v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32c79a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32c79e.  call `applyChildDrawable`(v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32c7a4.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32c7aa.  v3:= fcmpl(v0, v3);
  #L32c7ae.  if v3 == 0 then goto L32c7b8;
  #L32c7b2.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32c7b8.  return @kind void;
}
procedure `void` `setCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32c7cc.  call `setCheckedIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L32c7d2.  return @kind void;
}
procedure `void` `setCheckedIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c7e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c7e8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32c7ee.  v0:= temp @kind object;
  #L32c7f0.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L32c7f6.  v2:= temp;
  #L32c7f8.  call `setCheckedIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L32c7fe.  return @kind void;
}
procedure `void` `setCheckedIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c810.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c814.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32c81a.  v2:= temp @kind object;
  #L32c81c.  call `setCheckedIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L32c822.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c898.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c89c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32c8a2.  v0:= temp @kind object;
  #L32c8a4.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L32c8aa.  v2:= temp;
  #L32c8ac.  call `setCheckedIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L32c8b2.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c834.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L32c838.  if v0 == v2 then goto L32c884;
  #L32c83c.  call temp:= `showsCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L32c842.  v0:= temp;
  #L32c844.  v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L32c848.  call temp:= `showsCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L32c84e.  v2:= temp;
  #L32c850.  if v0 == v2 then goto L32c858;
  #L32c854.  v0:= 1I;
  #L32c856.  goto L32c85a;
  #L32c858.  v0:= 0I;
  #L32c85a.  if v0 == 0 then goto L32c884;
  #L32c85e.  if v2 == 0 then goto L32c86e;
  #L32c862.  v2:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32c866.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32c86c.  goto L32c878;
  #L32c86e.  v2:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32c872.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32c878.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32c87e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32c884.  return @kind void;
}
procedure `void` `setChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c8c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32c8c8.  if v0 == v2 then goto L32c8de;
  #L32c8cc.  v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L32c8d0.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32c8d6.  v2:= temp @kind object;
  #L32c8d8.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L32c8de.  return @kind void;
}
procedure `void` `setChipBackgroundColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c8f0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c8f4.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32c8fa.  v2:= temp @kind object;
  #L32c8fc.  call `setChipBackgroundColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32c902.  return @kind void;
}
procedure `void` `setChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c914.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L32c918.  v0:= fcmpl(v0, v2);
  #L32c91c.  if v0 == 0 then goto L32c92a;
  #L32c920.  v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float` := v2;
  #L32c924.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32c92a.  return @kind void;
}
procedure `void` `setChipCornerRadiusResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c93c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c940.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32c946.  v0:= temp @kind object;
  #L32c948.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32c94e.  v2:= temp;
  #L32c950.  call `setChipCornerRadius`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L32c956.  return @kind void;
}
procedure `void` `setChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c968.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L32c96c.  v0:= fcmpl(v0, v2);
  #L32c970.  if v0 == 0 then goto L32c984;
  #L32c974.  v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float` := v2;
  #L32c978.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32c97e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32c984.  return @kind void;
}
procedure `void` `setChipEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c998.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32c99c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32c9a2.  v0:= temp @kind object;
  #L32c9a4.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32c9aa.  v2:= temp;
  #L32c9ac.  call `setChipEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L32c9b2.  return @kind void;
}
procedure `void` `setChipIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32c9c4.  call temp:= `getChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32c9ca.  v0:= temp @kind object;
  #L32c9cc.  if v0 == v3 then goto L32ca2c;
  #L32c9d0.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32c9d6.  v1:= temp;
  #L32c9d8.  if v3 == 0 then goto L32c9ee;
  #L32c9dc.  call temp:= `wrap`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32c9e2.  v3:= temp @kind object;
  #L32c9e4.  call temp:= `mutate`(v3) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32c9ea.  v3:= temp @kind object;
  #L32c9ec.  goto L32c9f0;
  #L32c9ee.  v3:= 0I;
  #L32c9f0.  v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L32c9f4.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32c9fa.  v3:= temp;
  #L32c9fc.  call `unapplyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32ca02.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32ca08.  v0:= temp;
  #L32ca0a.  if v0 == 0 then goto L32ca18;
  #L32ca0e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32ca12.  call `applyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32ca18.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32ca1e.  v3:= fcmpl(v1, v3);
  #L32ca22.  if v3 == 0 then goto L32ca2c;
  #L32ca26.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32ca2c.  return @kind void;
}
procedure `void` `setChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32ca40.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L32ca46.  return @kind void;
}
procedure `void` `setChipIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L32ca58.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @kind virtual;
  #L32ca5e.  return @kind void;
}
procedure `void` `setChipIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ca70.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32ca74.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32ca7a.  v2:= temp @kind object;
  #L32ca7c.  call `setChipIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L32ca82.  return @kind void;
}
procedure `void` `setChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ca94.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L32ca98.  v0:= fcmpl(v0, v2);
  #L32ca9c.  if v0 == 0 then goto L32cac8;
  #L32caa0.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32caa6.  v0:= temp;
  #L32caa8.  v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float` := v2;
  #L32caac.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32cab2.  v2:= temp;
  #L32cab4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32caba.  v2:= fcmpl(v0, v2);
  #L32cabe.  if v2 == 0 then goto L32cac8;
  #L32cac2.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32cac8.  return @kind void;
}
procedure `void` `setChipIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cadc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cae0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32cae6.  v0:= temp @kind object;
  #L32cae8.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32caee.  v2:= temp;
  #L32caf0.  call `setChipIconSize`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L32caf6.  return @kind void;
}
procedure `void` `setChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cb08.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32cb0c.  if v0 == v2 then goto L32cb38;
  #L32cb10.  v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L32cb14.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32cb1a.  v0:= temp;
  #L32cb1c.  if v0 == 0 then goto L32cb2a;
  #L32cb20.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32cb24.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L32cb2a.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32cb30.  v2:= temp @kind object;
  #L32cb32.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L32cb38.  return @kind void;
}
procedure `void` `setChipIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cb4c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cb50.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32cb56.  v2:= temp @kind object;
  #L32cb58.  call `setChipIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32cb5e.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cbd4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cbd8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32cbde.  v0:= temp @kind object;
  #L32cbe0.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L32cbe6.  v2:= temp;
  #L32cbe8.  call `setChipIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L32cbee.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cb70.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L32cb74.  if v0 == v2 then goto L32cbc0;
  #L32cb78.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32cb7e.  v0:= temp;
  #L32cb80.  v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L32cb84.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32cb8a.  v2:= temp;
  #L32cb8c.  if v0 == v2 then goto L32cb94;
  #L32cb90.  v0:= 1I;
  #L32cb92.  goto L32cb96;
  #L32cb94.  v0:= 0I;
  #L32cb96.  if v0 == 0 then goto L32cbc0;
  #L32cb9a.  if v2 == 0 then goto L32cbaa;
  #L32cb9e.  v2:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32cba2.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32cba8.  goto L32cbb4;
  #L32cbaa.  v2:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32cbae.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32cbb4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32cbba.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32cbc0.  return @kind void;
}
procedure `void` `setChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cc00.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L32cc04.  v0:= fcmpl(v0, v2);
  #L32cc08.  if v0 == 0 then goto L32cc1c;
  #L32cc0c.  v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float` := v2;
  #L32cc10.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32cc16.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32cc1c.  return @kind void;
}
procedure `void` `setChipMinHeightResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeightResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cc30.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cc34.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32cc3a.  v0:= temp @kind object;
  #L32cc3c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32cc42.  v2:= temp;
  #L32cc44.  call `setChipMinHeight`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L32cc4a.  return @kind void;
}
procedure `void` `setChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cc5c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L32cc60.  v0:= fcmpl(v0, v2);
  #L32cc64.  if v0 == 0 then goto L32cc78;
  #L32cc68.  v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float` := v2;
  #L32cc6c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32cc72.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32cc78.  return @kind void;
}
procedure `void` `setChipStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cc8c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cc90.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32cc96.  v0:= temp @kind object;
  #L32cc98.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32cc9e.  v2:= temp;
  #L32cca0.  call `setChipStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L32cca6.  return @kind void;
}
procedure `void` `setChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ccb8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32ccbc.  if v0 == v2 then goto L32ccd2;
  #L32ccc0.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L32ccc4.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32ccca.  v2:= temp @kind object;
  #L32cccc.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L32ccd2.  return @kind void;
}
procedure `void` `setChipStrokeColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cce4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cce8.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32ccee.  v2:= temp @kind object;
  #L32ccf0.  call `setChipStrokeColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32ccf6.  return @kind void;
}
procedure `void` `setChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cd08.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L32cd0c.  v0:= fcmpl(v0, v2);
  #L32cd10.  if v0 == 0 then goto L32cd28;
  #L32cd14.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float` := v2;
  #L32cd18.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L32cd1c.  call `setStrokeWidth`(v0, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L32cd22.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32cd28.  return @kind void;
}
procedure `void` `setChipStrokeWidthResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cd3c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cd40.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32cd46.  v0:= temp @kind object;
  #L32cd48.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32cd4e.  v2:= temp;
  #L32cd50.  call `setChipStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L32cd56.  return @kind void;
}
procedure `void` `setCloseIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32cd68.  call temp:= `getCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32cd6e.  v0:= temp @kind object;
  #L32cd70.  if v0 == v3 then goto L32cdd0;
  #L32cd74.  call temp:= `calculateCloseIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind direct;
  #L32cd7a.  v1:= temp;
  #L32cd7c.  if v3 == 0 then goto L32cd92;
  #L32cd80.  call temp:= `wrap`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32cd86.  v3:= temp @kind object;
  #L32cd88.  call temp:= `mutate`(v3) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32cd8e.  v3:= temp @kind object;
  #L32cd90.  goto L32cd94;
  #L32cd92.  v3:= 0I;
  #L32cd94.  v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L32cd98.  call temp:= `calculateCloseIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind direct;
  #L32cd9e.  v3:= temp;
  #L32cda0.  call `unapplyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32cda6.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32cdac.  v0:= temp;
  #L32cdae.  if v0 == 0 then goto L32cdbc;
  #L32cdb2.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32cdb6.  call `applyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32cdbc.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32cdc2.  v3:= fcmpl(v1, v3);
  #L32cdc6.  if v3 == 0 then goto L32cdd0;
  #L32cdca.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32cdd0.  return @kind void;
}
procedure `void` `setCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconContentDescription:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cde4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L32cde8.  if v0 == v2 then goto L32ce06;
  #L32cdec.  call temp:= `getInstance`() @signature `Landroidx/core/text/BidiFormatter;.getInstance:()Landroidx/core/text/BidiFormatter;` @kind static;
  #L32cdf2.  v0:= temp @kind object;
  #L32cdf4.  call temp:= `unicodeWrap`(v0, v2) @signature `Landroidx/core/text/BidiFormatter;.unicodeWrap:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind virtual;
  #L32cdfa.  v2:= temp @kind object;
  #L32cdfc.  v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L32ce00.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32ce06.  return @kind void;
}
procedure `void` `setCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32ce18.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L32ce1e.  return @kind void;
}
procedure `void` `setCloseIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L32ce30.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @kind virtual;
  #L32ce36.  return @kind void;
}
procedure `void` `setCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ce48.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L32ce4c.  v0:= fcmpl(v0, v2);
  #L32ce50.  if v0 == 0 then goto L32ce70;
  #L32ce54.  v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float` := v2;
  #L32ce58.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32ce5e.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32ce64.  v2:= temp;
  #L32ce66.  if v2 == 0 then goto L32ce70;
  #L32ce6a.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32ce70.  return @kind void;
}
procedure `void` `setCloseIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ce84.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32ce88.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32ce8e.  v0:= temp @kind object;
  #L32ce90.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32ce96.  v2:= temp;
  #L32ce98.  call `setCloseIconEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L32ce9e.  return @kind void;
}
procedure `void` `setCloseIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ceb0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32ceb4.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L32ceba.  v2:= temp @kind object;
  #L32cebc.  call `setCloseIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L32cec2.  return @kind void;
}
procedure `void` `setCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ced4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L32ced8.  v0:= fcmpl(v0, v2);
  #L32cedc.  if v0 == 0 then goto L32cefc;
  #L32cee0.  v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float` := v2;
  #L32cee4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32ceea.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32cef0.  v2:= temp;
  #L32cef2.  if v2 == 0 then goto L32cefc;
  #L32cef6.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32cefc.  return @kind void;
}
procedure `void` `setCloseIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cf10.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cf14.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32cf1a.  v0:= temp @kind object;
  #L32cf1c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32cf22.  v2:= temp;
  #L32cf24.  call `setCloseIconSize`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L32cf2a.  return @kind void;
}
procedure `void` `setCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cf3c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L32cf40.  v0:= fcmpl(v0, v2);
  #L32cf44.  if v0 == 0 then goto L32cf64;
  #L32cf48.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float` := v2;
  #L32cf4c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32cf52.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32cf58.  v2:= temp;
  #L32cf5a.  if v2 == 0 then goto L32cf64;
  #L32cf5e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32cf64.  return @kind void;
}
procedure `void` `setCloseIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cf78.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cf7c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32cf82.  v0:= temp @kind object;
  #L32cf84.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32cf8a.  v2:= temp;
  #L32cf8c.  call `setCloseIconStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L32cf92.  return @kind void;
}
procedure `boolean` `setCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b23c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L32b240.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L32b246.  v0:= temp;
  #L32b248.  if v0 != 0 then goto L32b26e;
  #L32b24c.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] := v2 @kind object;
  #L32b250.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32b256.  v0:= temp;
  #L32b258.  if v0 == 0 then goto L32b26e;
  #L32b25c.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32b262.  v0:= temp @kind object;
  #L32b264.  call temp:= `onStateChange`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L32b26a.  v2:= temp;
  #L32b26c.  return v2;
  #L32b26e.  v2:= 0I;
  #L32b270.  return v2;
}
procedure `void` `setCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cfa4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32cfa8.  if v0 == v2 then goto L32cfd4;
  #L32cfac.  v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L32cfb0.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32cfb6.  v0:= temp;
  #L32cfb8.  if v0 == 0 then goto L32cfc6;
  #L32cfbc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32cfc0.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L32cfc6.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32cfcc.  v2:= temp @kind object;
  #L32cfce.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L32cfd4.  return @kind void;
}
procedure `void` `setCloseIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cfe8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32cfec.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32cff2.  v2:= temp @kind object;
  #L32cff4.  call `setCloseIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32cffa.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d070.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d074.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32d07a.  v0:= temp @kind object;
  #L32d07c.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L32d082.  v2:= temp;
  #L32d084.  call `setCloseIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L32d08a.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d00c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L32d010.  if v0 == v2 then goto L32d05c;
  #L32d014.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32d01a.  v0:= temp;
  #L32d01c.  v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L32d020.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32d026.  v2:= temp;
  #L32d028.  if v0 == v2 then goto L32d030;
  #L32d02c.  v0:= 1I;
  #L32d02e.  goto L32d032;
  #L32d030.  v0:= 0I;
  #L32d032.  if v0 == 0 then goto L32d05c;
  #L32d036.  if v2 == 0 then goto L32d046;
  #L32d03a.  v2:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32d03e.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32d044.  goto L32d050;
  #L32d046.  v2:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32d04a.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32d050.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32d056.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32d05c.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d09c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L32d0a0.  if v0 == v2 then goto L32d0ae;
  #L32d0a4.  v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L32d0a8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32d0ae.  return @kind void;
}
procedure `void` `setDelegate`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `com.google.android.material.chip.ChipDrawable$Delegate` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setDelegate:(Lcom/google/android/material/chip/ChipDrawable$Delegate;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d0c0.  v0:= new `java.lang.ref.WeakReference`;
  #L32d0c4.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L32d0ca.  v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L32d0ce.  return @kind void;
}
procedure `void` `setEllipsize`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.text.TextUtils$TruncateAt` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @AccessFlag PUBLIC {
    temp;

  #L32d0e0.  v0.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` := v1 @kind object;
  #L32d0e4.  return @kind void;
}
procedure `void` `setHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L32d0f8.  v0.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L32d0fc.  return @kind void;
}
procedure `void` `setHideMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d110.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d114.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L32d11a.  v2:= temp @kind object;
  #L32d11c.  call `setHideMotionSpec`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L32d122.  return @kind void;
}
procedure `void` `setIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d134.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L32d138.  v0:= fcmpl(v0, v2);
  #L32d13c.  if v0 == 0 then goto L32d168;
  #L32d140.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32d146.  v0:= temp;
  #L32d148.  v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float` := v2;
  #L32d14c.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32d152.  v2:= temp;
  #L32d154.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32d15a.  v2:= fcmpl(v0, v2);
  #L32d15e.  if v2 == 0 then goto L32d168;
  #L32d162.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32d168.  return @kind void;
}
procedure `void` `setIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d17c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d180.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32d186.  v0:= temp @kind object;
  #L32d188.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32d18e.  v2:= temp;
  #L32d190.  call `setIconEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L32d196.  return @kind void;
}
procedure `void` `setIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d1a8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L32d1ac.  v0:= fcmpl(v0, v2);
  #L32d1b0.  if v0 == 0 then goto L32d1dc;
  #L32d1b4.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32d1ba.  v0:= temp;
  #L32d1bc.  v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float` := v2;
  #L32d1c0.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32d1c6.  v2:= temp;
  #L32d1c8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32d1ce.  v2:= fcmpl(v0, v2);
  #L32d1d2.  if v2 == 0 then goto L32d1dc;
  #L32d1d6.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32d1dc.  return @kind void;
}
procedure `void` `setIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d1f0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d1f4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32d1fa.  v0:= temp @kind object;
  #L32d1fc.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32d202.  v2:= temp;
  #L32d204.  call `setIconStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L32d20a.  return @kind void;
}
procedure `void` `setMaxWidth`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @AccessFlag PUBLIC {
    temp;

  #L32d21c.  v0.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int` := v1;
  #L32d220.  return @kind void;
}
procedure `void` `setRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d234.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L32d238.  if v0 == v2 then goto L32d254;
  #L32d23c.  v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L32d240.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L32d246.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32d24c.  v2:= temp @kind object;
  #L32d24e.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L32d254.  return @kind void;
}
procedure `void` `setRippleColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d268.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d26c.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L32d272.  v2:= temp @kind object;
  #L32d274.  call `setRippleColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32d27a.  return @kind void;
}
procedure `void` `setShouldDrawText`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShouldDrawText:(Z)V` @AccessFlag  {
    temp;

  #L32d28c.  v0.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v1 @kind boolean;
  #L32d290.  return @kind void;
}
procedure `void` `setShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L32d2a4.  v0.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L32d2a8.  return @kind void;
}
procedure `void` `setShowMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d2bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d2c0.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L32d2c6.  v2:= temp @kind object;
  #L32d2c8.  call `setShowMotionSpec`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L32d2ce.  return @kind void;
}
procedure `void` `setText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d2e0.  if v2 != 0 then goto L32d2e8;
  #L32d2e4.  v2:= "" @kind object;
  #L32d2e8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rawText` @type ^`java.lang.CharSequence` @kind object;
  #L32d2ec.  if v0 == v2 then goto L32d31a;
  #L32d2f0.  v1.`com.google.android.material.chip.ChipDrawable.rawText` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L32d2f4.  call temp:= `getInstance`() @signature `Landroidx/core/text/BidiFormatter;.getInstance:()Landroidx/core/text/BidiFormatter;` @kind static;
  #L32d2fa.  v0:= temp @kind object;
  #L32d2fc.  call temp:= `unicodeWrap`(v0, v2) @signature `Landroidx/core/text/BidiFormatter;.unicodeWrap:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind virtual;
  #L32d302.  v2:= temp @kind object;
  #L32d304.  v1.`com.google.android.material.chip.ChipDrawable.unicodeWrappedText` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L32d308.  v2:= 1I;
  #L32d30a.  v1.`com.google.android.material.chip.ChipDrawable.textWidthDirty` @type ^`boolean` := v2 @kind boolean;
  #L32d30e.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32d314.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32d31a.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `com.google.android.material.resources.TextAppearance` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32d32c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.textAppearance` @type ^`com.google.android.material.resources.TextAppearance` @kind object;
  #L32d330.  if v0 == v4 then goto L32d368;
  #L32d334.  v3.`com.google.android.material.chip.ChipDrawable.textAppearance` @type ^`com.google.android.material.resources.TextAppearance` := v4 @kind object;
  #L32d338.  if v4 == 0 then goto L32d354;
  #L32d33c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d340.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textPaint` @type ^`android.text.TextPaint` @kind object;
  #L32d344.  v2:= v3.`com.google.android.material.chip.ChipDrawable.fontCallback` @type ^`androidx.core.content.res.ResourcesCompat$FontCallback` @kind object;
  #L32d348.  call `updateMeasureState`(v4, v0, v1, v2) @signature `Lcom/google/android/material/resources/TextAppearance;.updateMeasureState:(Landroid/content/Context;Landroid/text/TextPaint;Landroidx/core/content/res/ResourcesCompat$FontCallback;)V` @kind virtual;
  #L32d34e.  v4:= 1I;
  #L32d350.  v3.`com.google.android.material.chip.ChipDrawable.textWidthDirty` @type ^`boolean` := v4 @kind boolean;
  #L32d354.  call temp:= `getState`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32d35a.  v4:= temp @kind object;
  #L32d35c.  call temp:= `onStateChange`(v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L32d362.  call `onSizeChange`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32d368.  return @kind void;
}
procedure `void` `setTextAppearanceResource`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearanceResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32d37c.  v0:= new `com.google.android.material.resources.TextAppearance`;
  #L32d380.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d384.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.<init>:(Landroid/content/Context;I)V` @kind direct;
  #L32d38a.  call `setTextAppearance`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L32d390.  return @kind void;
}
procedure `void` `setTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d3a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L32d3a8.  v0:= fcmpl(v0, v2);
  #L32d3ac.  if v0 == 0 then goto L32d3c0;
  #L32d3b0.  v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float` := v2;
  #L32d3b4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32d3ba.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32d3c0.  return @kind void;
}
procedure `void` `setTextEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d3d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d3d8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32d3de.  v0:= temp @kind object;
  #L32d3e0.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32d3e6.  v2:= temp;
  #L32d3e8.  call `setTextEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L32d3ee.  return @kind void;
}
procedure `void` `setTextResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d400.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d404.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32d40a.  v0:= temp @kind object;
  #L32d40c.  call temp:= `getString`(v0, v2) @signature `Landroid/content/res/Resources;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L32d412.  v2:= temp @kind object;
  #L32d414.  call `setText`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L32d41a.  return @kind void;
}
procedure `void` `setTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d42c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L32d430.  v0:= fcmpl(v0, v2);
  #L32d434.  if v0 == 0 then goto L32d448;
  #L32d438.  v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float` := v2;
  #L32d43c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32d442.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L32d448.  return @kind void;
}
procedure `void` `setTextStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d45c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L32d460.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32d466.  v0:= temp @kind object;
  #L32d468.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L32d46e.  v2:= temp;
  #L32d470.  call `setTextStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L32d476.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d488.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32d48c.  if v0 == v2 then goto L32d4a2;
  #L32d490.  v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L32d494.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32d49a.  v2:= temp @kind object;
  #L32d49c.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L32d4a2.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d4b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L32d4b8.  if v0 == v2 then goto L32d4d6;
  #L32d4bc.  v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v2 @kind object;
  #L32d4c0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L32d4c4.  call temp:= `updateTintFilter`(v1, v0, v2) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L32d4ca.  v2:= temp @kind object;
  #L32d4cc.  v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L32d4d0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32d4d6.  return @kind void;
}
procedure `void` `setUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setUseCompatRipple:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d4e8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L32d4ec.  if v0 == v2 then goto L32d508;
  #L32d4f0.  v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` := v2 @kind boolean;
  #L32d4f4.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L32d4fa.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32d500.  v2:= temp @kind object;
  #L32d502.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L32d508.  return @kind void;
}
procedure `boolean` `setVisible`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `boolean` v3 , `boolean` v4 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32b284.  call temp:= `setVisible`(v2, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind super;
  #L32b28a.  v0:= temp;
  #L32b28c.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L32b292.  v1:= temp;
  #L32b294.  if v1 == 0 then goto L32b2a6;
  #L32b298.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b29c.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L32b2a2.  v1:= temp;
  #L32b2a4.  v0:= v0 ^| v1 @kind int;
  #L32b2a6.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L32b2ac.  v1:= temp;
  #L32b2ae.  if v1 == 0 then goto L32b2c0;
  #L32b2b2.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b2b6.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L32b2bc.  v1:= temp;
  #L32b2be.  v0:= v0 ^| v1 @kind int;
  #L32b2c0.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L32b2c6.  v1:= temp;
  #L32b2c8.  if v1 == 0 then goto L32b2da;
  #L32b2cc.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L32b2d0.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L32b2d6.  v3:= temp;
  #L32b2d8.  v0:= v0 ^| v3 @kind int;
  #L32b2da.  if v0 == 0 then goto L32b2e4;
  #L32b2de.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L32b2e4.  return v0;
}
procedure `boolean` `shouldDrawText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.shouldDrawText:()Z` @AccessFlag  {
    temp;
    v0;

  #L32b2f8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L32b2fc.  return v0;
}
procedure `void` `unscheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L32d53c.  call temp:= `getCallback`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L32d542.  v1:= temp @kind object;
  #L32d544.  if v1 == 0 then goto L32d54e;
  #L32d548.  call `unscheduleDrawable`(v1, v0, v2) @signature `Landroid/graphics/drawable/Drawable$Callback;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @kind interface;
  #L32d54e.  return @kind void;
}
