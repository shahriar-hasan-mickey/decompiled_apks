record `com.google.android.material.chip.Chip` @kind class @AccessFlag PUBLIC extends `androidx.appcompat.widget.AppCompatCheckBox` @kind class, `com.google.android.material.chip.ChipDrawable$Delegate` @kind interface {
  `com.google.android.material.chip.ChipDrawable` `com.google.android.material.chip.Chip.chipDrawable` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.Chip.closeIconFocused` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.Chip.closeIconHovered` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.Chip.closeIconPressed` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.Chip.deferredCheckedValue` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.Chip.focusedVirtualView` @AccessFlag PRIVATE;
  `androidx.core.content.res.ResourcesCompat$FontCallback` `com.google.android.material.chip.Chip.fontCallback` @AccessFlag PRIVATE_FINAL;
  `android.widget.CompoundButton$OnCheckedChangeListener` `com.google.android.material.chip.Chip.onCheckedChangeListenerInternal` @AccessFlag PRIVATE;
  `android.view.View$OnClickListener` `com.google.android.material.chip.Chip.onCloseIconClickListener` @AccessFlag PRIVATE;
  `android.graphics.Rect` `com.google.android.material.chip.Chip.rect` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.chip.Chip.rectF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.drawable.RippleDrawable` `com.google.android.material.chip.Chip.ripple` @AccessFlag PRIVATE;
  `com.google.android.material.chip.Chip$ChipTouchHelper` `com.google.android.material.chip.Chip.touchHelper` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.android.material.chip.Chip.CLOSE_ICON_VIRTUAL_ID` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Rect` `@@com.google.android.material.chip.Chip.EMPTY_BOUNDS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.chip.Chip.NAMESPACE_ANDROID` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.android.material.chip.Chip.SELECTED_STATE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.chip.Chip.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/Chip;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32ea58.  v0:= new `android.graphics.Rect`;
  #L32ea5c.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L32ea62.  `@@com.google.android.material.chip.Chip.EMPTY_BOUNDS` @type ^`android.graphics.Rect` := v0 @kind object;
  #L32ea66.  v0:= 1I;
  #L32ea68.  v0:= new `int`[v0];
  #L32ea6c.  v1:= 0I;
  #L32ea6e.  v2:= 16842913I;
  #L32ea74.  v0[v1]:= v2;
  #L32ea78.  `@@com.google.android.material.chip.Chip.SELECTED_STATE` @type ^`int`[] := v0 @kind object;
  #L32ea7c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.Chip` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32ea90.  v0:= 0I;
  #L32ea92.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/chip/Chip;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L32ea98.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.Chip` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/chip/Chip;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32eaac.  v0:= `@@com.google.android.material.R$attr.chipStyle` @type ^`int`;
  #L32eab0.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/chip/Chip;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L32eab6.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.Chip` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `int` v4 ) @signature `Lcom/google/android/material/chip/Chip;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32eac8.  call `<init>`(v1, v2, v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L32eace.  v0:= -2147483648I;
  #L32ead2.  v1.`com.google.android.material.chip.Chip.focusedVirtualView` @type ^`int` := v0;
  #L32ead6.  v0:= new `android.graphics.Rect`;
  #L32eada.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L32eae0.  v1.`com.google.android.material.chip.Chip.rect` @type ^`android.graphics.Rect` := v0 @kind object;
  #L32eae4.  v0:= new `android.graphics.RectF`;
  #L32eae8.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L32eaee.  v1.`com.google.android.material.chip.Chip.rectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L32eaf2.  v0:= new `com.google.android.material.chip.Chip$1`;
  #L32eaf6.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/chip/Chip$1;.<init>:(Lcom/google/android/material/chip/Chip;)V` @kind direct;
  #L32eafc.  v1.`com.google.android.material.chip.Chip.fontCallback` @type ^`androidx.core.content.res.ResourcesCompat$FontCallback` := v0 @kind object;
  #L32eb00.  call `validateAttributes`(v1, v3) @signature `Lcom/google/android/material/chip/Chip;.validateAttributes:(Landroid/util/AttributeSet;)V` @kind direct;
  #L32eb06.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Chip_Action` @type ^`int`;
  #L32eb0a.  call temp:= `createFromAttributes`(v2, v3, v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @kind static;
  #L32eb10.  v2:= temp @kind object;
  #L32eb12.  call `setChipDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/Chip;.setChipDrawable:(Lcom/google/android/material/chip/ChipDrawable;)V` @kind virtual;
  #L32eb18.  v3:= new `com.google.android.material.chip.Chip$ChipTouchHelper`;
  #L32eb1c.  call `<init>`(v3, v1, v1) @signature `Lcom/google/android/material/chip/Chip$ChipTouchHelper;.<init>:(Lcom/google/android/material/chip/Chip;Lcom/google/android/material/chip/Chip;)V` @kind direct;
  #L32eb22.  v1.`com.google.android.material.chip.Chip.touchHelper` @type ^`com.google.android.material.chip.Chip$ChipTouchHelper` := v3 @kind object;
  #L32eb26.  v3:= v1.`com.google.android.material.chip.Chip.touchHelper` @type ^`com.google.android.material.chip.Chip$ChipTouchHelper` @kind object;
  #L32eb2a.  call `setAccessibilityDelegate`(v1, v3) @signature `Landroidx/core/view/ViewCompat;.setAccessibilityDelegate:(Landroid/view/View;Landroidx/core/view/AccessibilityDelegateCompat;)V` @kind static;
  #L32eb30.  call `initOutlineProvider`(v1) @signature `Lcom/google/android/material/chip/Chip;.initOutlineProvider:()V` @kind direct;
  #L32eb36.  v3:= v1.`com.google.android.material.chip.Chip.deferredCheckedValue` @type ^`boolean` @kind boolean;
  #L32eb3a.  call `setChecked`(v1, v3) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @kind virtual;
  #L32eb40.  v3:= 0I;
  #L32eb42.  call `setShouldDrawText`(v2, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShouldDrawText:(Z)V` @kind virtual;
  #L32eb48.  call temp:= `getText`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L32eb4e.  v4:= temp @kind object;
  #L32eb50.  call `setText`(v1, v4) @signature `Lcom/google/android/material/chip/Chip;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L32eb56.  call temp:= `getEllipsize`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getEllipsize:()Landroid/text/TextUtils$TruncateAt;` @kind virtual;
  #L32eb5c.  v2:= temp @kind object;
  #L32eb5e.  call `setEllipsize`(v1, v2) @signature `Lcom/google/android/material/chip/Chip;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L32eb64.  call `setIncludeFontPadding`(v1, v3) @signature `Lcom/google/android/material/chip/Chip;.setIncludeFontPadding:(Z)V` @kind virtual;
  #L32eb6a.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32eb70.  v2:= temp @kind object;
  #L32eb72.  if v2 == 0 then goto L32eb84;
  #L32eb76.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32eb7c.  v2:= temp @kind object;
  #L32eb7e.  call `updateTextPaintDrawState`(v1, v2) @signature `Lcom/google/android/material/chip/Chip;.updateTextPaintDrawState:(Lcom/google/android/material/resources/TextAppearance;)V` @kind direct;
  #L32eb84.  call `setSingleLine`(v1) @signature `Lcom/google/android/material/chip/Chip;.setSingleLine:()V` @kind virtual;
  #L32eb8a.  v2:= 8388627I;
  #L32eb90.  call `setGravity`(v1, v2) @signature `Lcom/google/android/material/chip/Chip;.setGravity:(I)V` @kind virtual;
  #L32eb96.  call `updatePaddingInternal`(v1) @signature `Lcom/google/android/material/chip/Chip;.updatePaddingInternal:()V` @kind direct;
  #L32eb9c.  return @kind void;
}
procedure `com.google.android.material.chip.ChipDrawable` `access$000`(`com.google.android.material.chip.Chip` v0 @kind object) @signature `Lcom/google/android/material/chip/Chip;.access$000:(Lcom/google/android/material/chip/Chip;)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32e660.  v0:= v0.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e664.  return v0 @kind object;
}
procedure `boolean` `access$100`(`com.google.android.material.chip.Chip` v0 @kind object) @signature `Lcom/google/android/material/chip/Chip;.access$100:(Lcom/google/android/material/chip/Chip;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32e0c8.  call temp:= `hasCloseIcon`(v0) @signature `Lcom/google/android/material/chip/Chip;.hasCloseIcon:()Z` @kind direct;
  #L32e0ce.  v0:= temp;
  #L32e0d0.  return v0;
}
procedure `android.graphics.RectF` `access$200`(`com.google.android.material.chip.Chip` v0 @kind object) @signature `Lcom/google/android/material/chip/Chip;.access$200:(Lcom/google/android/material/chip/Chip;)Landroid/graphics/RectF;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32df5c.  call temp:= `getCloseIconTouchBounds`(v0) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTouchBounds:()Landroid/graphics/RectF;` @kind direct;
  #L32df62.  v0:= temp @kind object;
  #L32df64.  return v0 @kind object;
}
procedure `android.graphics.Rect` `access$300`(`com.google.android.material.chip.Chip` v0 @kind object) @signature `Lcom/google/android/material/chip/Chip;.access$300:(Lcom/google/android/material/chip/Chip;)Landroid/graphics/Rect;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32dee8.  call temp:= `getCloseIconTouchBoundsInt`(v0) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTouchBoundsInt:()Landroid/graphics/Rect;` @kind direct;
  #L32deee.  v0:= temp @kind object;
  #L32def0.  return v0 @kind object;
}
procedure `android.graphics.Rect` `access$400`() @signature `Lcom/google/android/material/chip/Chip;.access$400:()Landroid/graphics/Rect;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L32df04.  v0:= `@@com.google.android.material.chip.Chip.EMPTY_BOUNDS` @type ^`android.graphics.Rect` @kind object;
  #L32df08.  return v0 @kind object;
}
procedure `void` `applyChipDrawable`(`com.google.android.material.chip.Chip` v0 @kind this, `com.google.android.material.chip.ChipDrawable` v1 @kind object) @signature `Lcom/google/android/material/chip/Chip;.applyChipDrawable:(Lcom/google/android/material/chip/ChipDrawable;)V` @AccessFlag PRIVATE {
    temp;

  #L32ebb0.  call `setDelegate`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setDelegate:(Lcom/google/android/material/chip/ChipDrawable$Delegate;)V` @kind virtual;
  #L32ebb6.  return @kind void;
}
procedure `float` `calculateTextOffsetFromStart`(`com.google.android.material.chip.Chip` v1 @kind this, `com.google.android.material.chip.ChipDrawable` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.calculateTextOffsetFromStart:(Lcom/google/android/material/chip/ChipDrawable;)F` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32e6a0.  call temp:= `getChipStartPadding`(v1) @signature `Lcom/google/android/material/chip/Chip;.getChipStartPadding:()F` @kind virtual;
  #L32e6a6.  v0:= temp;
  #L32e6a8.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L32e6ae.  v2:= temp;
  #L32e6b0.  v0:= v0 + v2 @kind float;
  #L32e6b2.  call temp:= `getTextStartPadding`(v1) @signature `Lcom/google/android/material/chip/Chip;.getTextStartPadding:()F` @kind virtual;
  #L32e6b8.  v2:= temp;
  #L32e6ba.  v0:= v0 + v2 @kind float;
  #L32e6bc.  call temp:= `getLayoutDirection`(v1) @signature `Landroidx/core/view/ViewCompat;.getLayoutDirection:(Landroid/view/View;)I` @kind static;
  #L32e6c2.  v2:= temp;
  #L32e6c4.  if v2 != 0 then goto L32e6ca;
  #L32e6c8.  return v0;
  #L32e6ca.  v2:= -v0 @kind float;
  #L32e6cc.  return v2;
}
procedure `int`[] `createCloseIconDrawableState`(`com.google.android.material.chip.Chip` v4 @kind this) @signature `Lcom/google/android/material/chip/Chip;.createCloseIconDrawableState:()[I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32e8e8.  call temp:= `isEnabled`(v4) @signature `Lcom/google/android/material/chip/Chip;.isEnabled:()Z` @kind virtual;
  #L32e8ee.  v0:= temp;
  #L32e8f0.  v1:= 0I;
  #L32e8f2.  v2:= 1I;
  #L32e8f4.  if v0 == 0 then goto L32e8fc;
  #L32e8f8.  v0:= 1I;
  #L32e8fa.  goto L32e8fe;
  #L32e8fc.  v0:= 0I;
  #L32e8fe.  v3:= v4.`com.google.android.material.chip.Chip.closeIconFocused` @type ^`boolean` @kind boolean;
  #L32e902.  if v3 == 0 then goto L32e90a;
  #L32e906.  v0:= v0 + 1;
  #L32e90a.  v3:= v4.`com.google.android.material.chip.Chip.closeIconHovered` @type ^`boolean` @kind boolean;
  #L32e90e.  if v3 == 0 then goto L32e916;
  #L32e912.  v0:= v0 + 1;
  #L32e916.  v3:= v4.`com.google.android.material.chip.Chip.closeIconPressed` @type ^`boolean` @kind boolean;
  #L32e91a.  if v3 == 0 then goto L32e922;
  #L32e91e.  v0:= v0 + 1;
  #L32e922.  call temp:= `isChecked`(v4) @signature `Lcom/google/android/material/chip/Chip;.isChecked:()Z` @kind virtual;
  #L32e928.  v3:= temp;
  #L32e92a.  if v3 == 0 then goto L32e932;
  #L32e92e.  v0:= v0 + 1;
  #L32e932.  v0:= new `int`[v0];
  #L32e936.  call temp:= `isEnabled`(v4) @signature `Lcom/google/android/material/chip/Chip;.isEnabled:()Z` @kind virtual;
  #L32e93c.  v3:= temp;
  #L32e93e.  if v3 == 0 then goto L32e94e;
  #L32e942.  v3:= 16842910I;
  #L32e948.  v0[v1]:= v3;
  #L32e94c.  v1:= 1I;
  #L32e94e.  v2:= v4.`com.google.android.material.chip.Chip.closeIconFocused` @type ^`boolean` @kind boolean;
  #L32e952.  if v2 == 0 then goto L32e964;
  #L32e956.  v2:= 16842908I;
  #L32e95c.  v0[v1]:= v2;
  #L32e960.  v1:= v1 + 1;
  #L32e964.  v2:= v4.`com.google.android.material.chip.Chip.closeIconHovered` @type ^`boolean` @kind boolean;
  #L32e968.  if v2 == 0 then goto L32e97a;
  #L32e96c.  v2:= 16843623I;
  #L32e972.  v0[v1]:= v2;
  #L32e976.  v1:= v1 + 1;
  #L32e97a.  v2:= v4.`com.google.android.material.chip.Chip.closeIconPressed` @type ^`boolean` @kind boolean;
  #L32e97e.  if v2 == 0 then goto L32e990;
  #L32e982.  v2:= 16842919I;
  #L32e988.  v0[v1]:= v2;
  #L32e98c.  v1:= v1 + 1;
  #L32e990.  call temp:= `isChecked`(v4) @signature `Lcom/google/android/material/chip/Chip;.isChecked:()Z` @kind virtual;
  #L32e996.  v2:= temp;
  #L32e998.  if v2 == 0 then goto L32e9a6;
  #L32e99c.  v2:= 16842913I;
  #L32e9a2.  v0[v1]:= v2;
  #L32e9a6.  return v0 @kind object;
}
procedure `void` `ensureFocus`(`com.google.android.material.chip.Chip` v2 @kind this) @signature `Lcom/google/android/material/chip/Chip;.ensureFocus:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32ec18.  v0:= v2.`com.google.android.material.chip.Chip.focusedVirtualView` @type ^`int`;
  #L32ec1c.  v1:= -2147483648I;
  #L32ec20.  if v0 != v1 then goto L32ec2c;
  #L32ec24.  v0:= -1I;
  #L32ec26.  call `setFocusedVirtualView`(v2, v0) @signature `Lcom/google/android/material/chip/Chip;.setFocusedVirtualView:(I)V` @kind direct;
  #L32ec2c.  return @kind void;
}
procedure `android.graphics.RectF` `getCloseIconTouchBounds`(`com.google.android.material.chip.Chip` v2 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTouchBounds:()Landroid/graphics/RectF;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32df78.  v0:= v2.`com.google.android.material.chip.Chip.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32df7c.  call `setEmpty`(v0) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L32df82.  call temp:= `hasCloseIcon`(v2) @signature `Lcom/google/android/material/chip/Chip;.hasCloseIcon:()Z` @kind direct;
  #L32df88.  v0:= temp;
  #L32df8a.  if v0 == 0 then goto L32df9c;
  #L32df8e.  v0:= v2.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32df92.  v1:= v2.`com.google.android.material.chip.Chip.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32df96.  call `getCloseIconTouchBounds`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTouchBounds:(Landroid/graphics/RectF;)V` @kind virtual;
  #L32df9c.  v0:= v2.`com.google.android.material.chip.Chip.rectF` @type ^`android.graphics.RectF` @kind object;
  #L32dfa0.  return v0 @kind object;
}
procedure `android.graphics.Rect` `getCloseIconTouchBoundsInt`(`com.google.android.material.chip.Chip` v5 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTouchBoundsInt:()Landroid/graphics/Rect;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32df1c.  call temp:= `getCloseIconTouchBounds`(v5) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTouchBounds:()Landroid/graphics/RectF;` @kind direct;
  #L32df22.  v0:= temp @kind object;
  #L32df24.  v1:= v5.`com.google.android.material.chip.Chip.rect` @type ^`android.graphics.Rect` @kind object;
  #L32df28.  v2:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L32df2c.  v2:= (`int`) v2 @kind f2i;
  #L32df2e.  v3:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L32df32.  v3:= (`int`) v3 @kind f2i;
  #L32df34.  v4:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L32df38.  v4:= (`int`) v4 @kind f2i;
  #L32df3a.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L32df3e.  v0:= (`int`) v0 @kind f2i;
  #L32df40.  call `set`(v1, v2, v3, v4, v0) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L32df46.  v0:= v5.`com.google.android.material.chip.Chip.rect` @type ^`android.graphics.Rect` @kind object;
  #L32df4a.  return v0 @kind object;
}
procedure `com.google.android.material.resources.TextAppearance` `getTextAppearance`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32e678.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e67c.  if v0 == 0 then goto L32e68a;
  #L32e680.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L32e686.  v0:= temp @kind object;
  #L32e688.  goto L32e68c;
  #L32e68a.  v0:= 0I;
  #L32e68c.  return v0 @kind object;
}
procedure `boolean` `handleAccessibilityExit`(`com.google.android.material.chip.Chip` v8 @kind this, `android.view.MotionEvent` v9 @kind object) @signature `Lcom/google/android/material/chip/Chip;.handleAccessibilityExit:(Landroid/view/MotionEvent;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L32e160.  v0:= "Unable to send Accessibility Exit event" @kind object;
  #L32e164.  v1:= "Chip" @kind object;
  #L32e168.  call temp:= `getAction`(v9) @signature `Landroid/view/MotionEvent;.getAction:()I` @kind virtual;
  #L32e16e.  v9:= temp;
  #L32e170.  v2:= 0I;
  #L32e172.  v3:= 10I;
  #L32e176.  if v9 != v3 then goto L32e216;
  #L32e17a.  v9:= constclass @type ^`androidx.customview.widget.ExploreByTouchHelper` @kind object;
  #L32e17e.  v3:= "mHoveredVirtualViewId" @kind object;
  #L32e182.  call temp:= `getDeclaredField`(v9, v3) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L32e188.  v9:= temp @kind object;
  #L32e18a.  v3:= 1I;
  #L32e18c.  call `setAccessible`(v9, v3) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L32e192.  v4:= v8.`com.google.android.material.chip.Chip.touchHelper` @type ^`com.google.android.material.chip.Chip$ChipTouchHelper` @kind object;
  #L32e196.  call temp:= `get`(v9, v4) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32e19c.  v9:= temp @kind object;
  #L32e19e.  v9:= (`java.lang.Integer`) v9 @kind object;
  #L32e1a2.  call temp:= `intValue`(v9) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32e1a8.  v9:= temp;
  #L32e1aa.  v4:= -2147483648I;
  #L32e1ae.  if v9 == v4 then goto L32e216;
  #L32e1b2.  v9:= constclass @type ^`androidx.customview.widget.ExploreByTouchHelper` @kind object;
  #L32e1b6.  v5:= "updateHoveredVirtualView" @kind object;
  #L32e1ba.  v6:= new `java.lang.Class`[v3];
  #L32e1be.  v7:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L32e1c2.  v6[v2]:= v7 @kind object;
  #L32e1c6.  call temp:= `getDeclaredMethod`(v9, v5, v6) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L32e1cc.  v9:= temp @kind object;
  #L32e1ce.  call `setAccessible`(v9, v3) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L32e1d4.  v5:= v8.`com.google.android.material.chip.Chip.touchHelper` @type ^`com.google.android.material.chip.Chip$ChipTouchHelper` @kind object;
  #L32e1d8.  v6:= new `java.lang.Object`[v3];
  #L32e1dc.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32e1e2.  v4:= temp @kind object;
  #L32e1e4.  v6[v2]:= v4 @kind object;
  #L32e1e8.  call temp:= `invoke`(v9, v5, v6) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32e1ee.  return v3;
  #L32e1f0.  v9:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L32e1f2.  call temp:= `e`(v1, v0, v9) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L32e1f8.  goto L32e216;
  #L32e1fa.  v9:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L32e1fc.  call temp:= `e`(v1, v0, v9) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L32e202.  goto L32e216;
  #L32e204.  v9:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L32e206.  call temp:= `e`(v1, v0, v9) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L32e20c.  goto L32e216;
  #L32e20e.  v9:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L32e210.  call temp:= `e`(v1, v0, v9) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L32e216.  return v2;
  catch `java.lang.NoSuchMethodException` @[L32e17a..L32e1ee] goto L32e20e;
  catch `java.lang.IllegalAccessException` @[L32e17a..L32e1ee] goto L32e204;
  catch `java.lang.reflect.InvocationTargetException` @[L32e17a..L32e1ee] goto L32e1fa;
  catch `java.lang.NoSuchFieldException` @[L32e17a..L32e1ee] goto L32e1f0;
}
procedure `boolean` `hasCloseIcon`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.hasCloseIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32e240.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e244.  if v0 == 0 then goto L32e258;
  #L32e248.  call temp:= `getCloseIcon`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32e24e.  v0:= temp @kind object;
  #L32e250.  if v0 == 0 then goto L32e258;
  #L32e254.  v0:= 1I;
  #L32e256.  goto L32e25a;
  #L32e258.  v0:= 0I;
  #L32e25a.  return v0;
}
procedure `void` `initOutlineProvider`(`com.google.android.material.chip.Chip` v2 @kind this) @signature `Lcom/google/android/material/chip/Chip;.initOutlineProvider:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32ec70.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32ec74.  v1:= 21I;
  #L32ec78.  if v0 < v1 then goto L32ec8c;
  #L32ec7c.  v0:= new `com.google.android.material.chip.Chip$2`;
  #L32ec80.  call `<init>`(v0, v2) @signature `Lcom/google/android/material/chip/Chip$2;.<init>:(Lcom/google/android/material/chip/Chip;)V` @kind direct;
  #L32ec86.  call `setOutlineProvider`(v2, v0) @signature `Lcom/google/android/material/chip/Chip;.setOutlineProvider:(Landroid/view/ViewOutlineProvider;)V` @kind virtual;
  #L32ec8c.  return @kind void;
}
procedure `boolean` `moveFocus`(`com.google.android.material.chip.Chip` v3 @kind this, `boolean` v4 ) @signature `Lcom/google/android/material/chip/Chip;.moveFocus:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32e370.  call `ensureFocus`(v3) @signature `Lcom/google/android/material/chip/Chip;.ensureFocus:()V` @kind direct;
  #L32e376.  v0:= 1I;
  #L32e378.  v1:= -1I;
  #L32e37a.  v2:= 0I;
  #L32e37c.  if v4 == 0 then goto L32e390;
  #L32e380.  v4:= v3.`com.google.android.material.chip.Chip.focusedVirtualView` @type ^`int`;
  #L32e384.  if v4 != v1 then goto L32e3a0;
  #L32e388.  call `setFocusedVirtualView`(v3, v2) @signature `Lcom/google/android/material/chip/Chip;.setFocusedVirtualView:(I)V` @kind direct;
  #L32e38e.  goto L32e3a2;
  #L32e390.  v4:= v3.`com.google.android.material.chip.Chip.focusedVirtualView` @type ^`int`;
  #L32e394.  if v4 != 0 then goto L32e3a0;
  #L32e398.  call `setFocusedVirtualView`(v3, v1) @signature `Lcom/google/android/material/chip/Chip;.setFocusedVirtualView:(I)V` @kind direct;
  #L32e39e.  goto L32e3a2;
  #L32e3a0.  v0:= 0I;
  #L32e3a2.  return v0;
}
procedure `void` `setCloseIconFocused`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconFocused:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32f41c.  v0:= v1.`com.google.android.material.chip.Chip.closeIconFocused` @type ^`boolean` @kind boolean;
  #L32f420.  if v0 == v2 then goto L32f42e;
  #L32f424.  v1.`com.google.android.material.chip.Chip.closeIconFocused` @type ^`boolean` := v2 @kind boolean;
  #L32f428.  call `refreshDrawableState`(v1) @signature `Lcom/google/android/material/chip/Chip;.refreshDrawableState:()V` @kind virtual;
  #L32f42e.  return @kind void;
}
procedure `void` `setCloseIconHovered`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconHovered:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32f440.  v0:= v1.`com.google.android.material.chip.Chip.closeIconHovered` @type ^`boolean` @kind boolean;
  #L32f444.  if v0 == v2 then goto L32f452;
  #L32f448.  v1.`com.google.android.material.chip.Chip.closeIconHovered` @type ^`boolean` := v2 @kind boolean;
  #L32f44c.  call `refreshDrawableState`(v1) @signature `Lcom/google/android/material/chip/Chip;.refreshDrawableState:()V` @kind virtual;
  #L32f452.  return @kind void;
}
procedure `void` `setCloseIconPressed`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconPressed:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32f464.  v0:= v1.`com.google.android.material.chip.Chip.closeIconPressed` @type ^`boolean` @kind boolean;
  #L32f468.  if v0 == v2 then goto L32f476;
  #L32f46c.  v1.`com.google.android.material.chip.Chip.closeIconPressed` @type ^`boolean` := v2 @kind boolean;
  #L32f470.  call `refreshDrawableState`(v1) @signature `Lcom/google/android/material/chip/Chip;.refreshDrawableState:()V` @kind virtual;
  #L32f476.  return @kind void;
}
procedure `void` `setFocusedVirtualView`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setFocusedVirtualView:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32f770.  v0:= v1.`com.google.android.material.chip.Chip.focusedVirtualView` @type ^`int`;
  #L32f774.  if v0 == v2 then goto L32f794;
  #L32f778.  if v0 != 0 then goto L32f784;
  #L32f77c.  v0:= 0I;
  #L32f77e.  call `setCloseIconFocused`(v1, v0) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconFocused:(Z)V` @kind direct;
  #L32f784.  v1.`com.google.android.material.chip.Chip.focusedVirtualView` @type ^`int` := v2;
  #L32f788.  if v2 != 0 then goto L32f794;
  #L32f78c.  v2:= 1I;
  #L32f78e.  call `setCloseIconFocused`(v1, v2) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconFocused:(Z)V` @kind direct;
  #L32f794.  return @kind void;
}
procedure `void` `unapplyChipDrawable`(`com.google.android.material.chip.Chip` v1 @kind this, `com.google.android.material.chip.ChipDrawable` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.unapplyChipDrawable:(Lcom/google/android/material/chip/ChipDrawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32fc50.  if v2 == 0 then goto L32fc5c;
  #L32fc54.  v0:= 0I;
  #L32fc56.  call `setDelegate`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setDelegate:(Lcom/google/android/material/chip/ChipDrawable$Delegate;)V` @kind virtual;
  #L32fc5c.  return @kind void;
}
procedure `void` `updatePaddingInternal`(`com.google.android.material.chip.Chip` v4 @kind this) @signature `Lcom/google/android/material/chip/Chip;.updatePaddingInternal:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32fc70.  call temp:= `getText`(v4) @signature `Lcom/google/android/material/chip/Chip;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L32fc76.  v0:= temp @kind object;
  #L32fc78.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L32fc7e.  v0:= temp;
  #L32fc80.  if v0 != 0 then goto L32fdb4;
  #L32fc84.  v0:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fc88.  if v0 != 0 then goto L32fc90;
  #L32fc8c.  goto L32fdb4;
  #L32fc90.  call temp:= `getChipStartPadding`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStartPadding:()F` @kind virtual;
  #L32fc96.  v0:= temp;
  #L32fc98.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fc9c.  call temp:= `getChipEndPadding`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipEndPadding:()F` @kind virtual;
  #L32fca2.  v1:= temp;
  #L32fca4.  v0:= v0 + v1 @kind float;
  #L32fca6.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fcaa.  call temp:= `getTextStartPadding`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextStartPadding:()F` @kind virtual;
  #L32fcb0.  v1:= temp;
  #L32fcb2.  v0:= v0 + v1 @kind float;
  #L32fcb4.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fcb8.  call temp:= `getTextEndPadding`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextEndPadding:()F` @kind virtual;
  #L32fcbe.  v1:= temp;
  #L32fcc0.  v0:= v0 + v1 @kind float;
  #L32fcc2.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fcc6.  call temp:= `isChipIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @kind virtual;
  #L32fccc.  v1:= temp;
  #L32fcce.  if v1 == 0 then goto L32fce2;
  #L32fcd2.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fcd6.  call temp:= `getChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32fcdc.  v1:= temp @kind object;
  #L32fcde.  if v1 != 0 then goto L32fd0e;
  #L32fce2.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fce6.  call temp:= `getCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32fcec.  v1:= temp @kind object;
  #L32fcee.  if v1 == 0 then goto L32fd38;
  #L32fcf2.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fcf6.  call temp:= `isCheckedIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @kind virtual;
  #L32fcfc.  v1:= temp;
  #L32fcfe.  if v1 == 0 then goto L32fd38;
  #L32fd02.  call temp:= `isChecked`(v4) @signature `Lcom/google/android/material/chip/Chip;.isChecked:()Z` @kind virtual;
  #L32fd08.  v1:= temp;
  #L32fd0a.  if v1 == 0 then goto L32fd38;
  #L32fd0e.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fd12.  call temp:= `getIconStartPadding`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconStartPadding:()F` @kind virtual;
  #L32fd18.  v1:= temp;
  #L32fd1a.  v2:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fd1e.  call temp:= `getIconEndPadding`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconEndPadding:()F` @kind virtual;
  #L32fd24.  v2:= temp;
  #L32fd26.  v1:= v1 + v2 @kind float;
  #L32fd28.  v2:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fd2c.  call temp:= `getChipIconSize`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconSize:()F` @kind virtual;
  #L32fd32.  v2:= temp;
  #L32fd34.  v1:= v1 + v2 @kind float;
  #L32fd36.  v0:= v0 + v1 @kind float;
  #L32fd38.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fd3c.  call temp:= `isCloseIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @kind virtual;
  #L32fd42.  v1:= temp;
  #L32fd44.  if v1 == 0 then goto L32fd82;
  #L32fd48.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fd4c.  call temp:= `getCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32fd52.  v1:= temp @kind object;
  #L32fd54.  if v1 == 0 then goto L32fd82;
  #L32fd58.  v1:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fd5c.  call temp:= `getCloseIconStartPadding`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconStartPadding:()F` @kind virtual;
  #L32fd62.  v1:= temp;
  #L32fd64.  v2:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fd68.  call temp:= `getCloseIconEndPadding`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconEndPadding:()F` @kind virtual;
  #L32fd6e.  v2:= temp;
  #L32fd70.  v1:= v1 + v2 @kind float;
  #L32fd72.  v2:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fd76.  call temp:= `getCloseIconSize`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconSize:()F` @kind virtual;
  #L32fd7c.  v2:= temp;
  #L32fd7e.  v1:= v1 + v2 @kind float;
  #L32fd80.  v0:= v0 + v1 @kind float;
  #L32fd82.  call temp:= `getPaddingEnd`(v4) @signature `Landroidx/core/view/ViewCompat;.getPaddingEnd:(Landroid/view/View;)I` @kind static;
  #L32fd88.  v1:= temp;
  #L32fd8a.  v1:= (`float`) v1 @kind i2f;
  #L32fd8c.  v1:= fcmpl(v1, v0);
  #L32fd90.  if v1 == 0 then goto L32fdb4;
  #L32fd94.  call temp:= `getPaddingStart`(v4) @signature `Landroidx/core/view/ViewCompat;.getPaddingStart:(Landroid/view/View;)I` @kind static;
  #L32fd9a.  v1:= temp;
  #L32fd9c.  call temp:= `getPaddingTop`(v4) @signature `Lcom/google/android/material/chip/Chip;.getPaddingTop:()I` @kind virtual;
  #L32fda2.  v2:= temp;
  #L32fda4.  v0:= (`int`) v0 @kind f2i;
  #L32fda6.  call temp:= `getPaddingBottom`(v4) @signature `Lcom/google/android/material/chip/Chip;.getPaddingBottom:()I` @kind virtual;
  #L32fdac.  v3:= temp;
  #L32fdae.  call `setPaddingRelative`(v4, v1, v2, v0, v3) @signature `Landroidx/core/view/ViewCompat;.setPaddingRelative:(Landroid/view/View;IIII)V` @kind static;
  #L32fdb4.  return @kind void;
}
procedure `void` `updateTextPaintDrawState`(`com.google.android.material.chip.Chip` v3 @kind this, `com.google.android.material.resources.TextAppearance` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.updateTextPaintDrawState:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32fdc8.  call temp:= `getPaint`(v3) @signature `Lcom/google/android/material/chip/Chip;.getPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L32fdce.  v0:= temp @kind object;
  #L32fdd0.  v1:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fdd4.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L32fdda.  v1:= temp @kind object;
  #L32fddc.  v0.`android.text.TextPaint.drawableState` @type ^`int`[] := v1 @kind object;
  #L32fde0.  call temp:= `getContext`(v3) @signature `Lcom/google/android/material/chip/Chip;.getContext:()Landroid/content/Context;` @kind virtual;
  #L32fde6.  v1:= temp @kind object;
  #L32fde8.  v2:= v3.`com.google.android.material.chip.Chip.fontCallback` @type ^`androidx.core.content.res.ResourcesCompat$FontCallback` @kind object;
  #L32fdec.  call `updateDrawState`(v4, v1, v0, v2) @signature `Lcom/google/android/material/resources/TextAppearance;.updateDrawState:(Landroid/content/Context;Landroid/text/TextPaint;Landroidx/core/content/res/ResourcesCompat$FontCallback;)V` @kind virtual;
  #L32fdf2.  return @kind void;
}
procedure `void` `validateAttributes`(`com.google.android.material.chip.Chip` v3 @kind this, `android.util.AttributeSet` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.validateAttributes:(Landroid/util/AttributeSet;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32fe04.  if v4 != 0 then goto L32fe0a;
  #L32fe08.  return @kind void;
  #L32fe0a.  v0:= "http://schemas.android.com/apk/res/android" @kind object;
  #L32fe0e.  v1:= "background" @kind object;
  #L32fe12.  call temp:= `getAttributeValue`(v4, v0, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32fe18.  v1:= temp @kind object;
  #L32fe1a.  if v1 != 0 then goto L32ff12;
  #L32fe1e.  v1:= "drawableLeft" @kind object;
  #L32fe22.  call temp:= `getAttributeValue`(v4, v0, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32fe28.  v1:= temp @kind object;
  #L32fe2a.  if v1 != 0 then goto L32ff02;
  #L32fe2e.  v1:= "drawableStart" @kind object;
  #L32fe32.  call temp:= `getAttributeValue`(v4, v0, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32fe38.  v1:= temp @kind object;
  #L32fe3a.  if v1 != 0 then goto L32fef2;
  #L32fe3e.  v1:= "drawableEnd" @kind object;
  #L32fe42.  call temp:= `getAttributeValue`(v4, v0, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32fe48.  v1:= temp @kind object;
  #L32fe4a.  v2:= "Please set end drawable using R.attr#closeIcon." @kind object;
  #L32fe4e.  if v1 != 0 then goto L32fee6;
  #L32fe52.  v1:= "drawableRight" @kind object;
  #L32fe56.  call temp:= `getAttributeValue`(v4, v0, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32fe5c.  v1:= temp @kind object;
  #L32fe5e.  if v1 != 0 then goto L32feda;
  #L32fe62.  v1:= 1I;
  #L32fe64.  v2:= "singleLine" @kind object;
  #L32fe68.  call temp:= `getAttributeBooleanValue`(v4, v0, v2, v1) @signature `Landroid/util/AttributeSet;.getAttributeBooleanValue:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind interface;
  #L32fe6e.  v2:= temp;
  #L32fe70.  if v2 == 0 then goto L32feca;
  #L32fe74.  v2:= "lines" @kind object;
  #L32fe78.  call temp:= `getAttributeIntValue`(v4, v0, v2, v1) @signature `Landroid/util/AttributeSet;.getAttributeIntValue:(Ljava/lang/String;Ljava/lang/String;I)I` @kind interface;
  #L32fe7e.  v2:= temp;
  #L32fe80.  if v2 != v1 then goto L32feca;
  #L32fe84.  v2:= "minLines" @kind object;
  #L32fe88.  call temp:= `getAttributeIntValue`(v4, v0, v2, v1) @signature `Landroid/util/AttributeSet;.getAttributeIntValue:(Ljava/lang/String;Ljava/lang/String;I)I` @kind interface;
  #L32fe8e.  v2:= temp;
  #L32fe90.  if v2 != v1 then goto L32feca;
  #L32fe94.  v2:= "maxLines" @kind object;
  #L32fe98.  call temp:= `getAttributeIntValue`(v4, v0, v2, v1) @signature `Landroid/util/AttributeSet;.getAttributeIntValue:(Ljava/lang/String;Ljava/lang/String;I)I` @kind interface;
  #L32fe9e.  v2:= temp;
  #L32fea0.  if v2 != v1 then goto L32feca;
  #L32fea4.  v1:= 8388627I;
  #L32feaa.  v2:= "gravity" @kind object;
  #L32feae.  call temp:= `getAttributeIntValue`(v4, v0, v2, v1) @signature `Landroid/util/AttributeSet;.getAttributeIntValue:(Ljava/lang/String;Ljava/lang/String;I)I` @kind interface;
  #L32feb4.  v4:= temp;
  #L32feb6.  if v4 == v1 then goto L32fec8;
  #L32feba.  v4:= "Chip" @kind object;
  #L32febe.  v0:= "Chip text must be vertically center and start aligned" @kind object;
  #L32fec2.  call temp:= `w`(v4, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L32fec8.  return @kind void;
  #L32feca.  v4:= new `java.lang.UnsupportedOperationException`;
  #L32fece.  v0:= "Chip does not support multi-line text" @kind object;
  #L32fed2.  call `<init>`(v4, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32fed8.  throw v4;
  #L32feda.  v4:= new `java.lang.UnsupportedOperationException`;
  #L32fede.  call `<init>`(v4, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32fee4.  throw v4;
  #L32fee6.  v4:= new `java.lang.UnsupportedOperationException`;
  #L32feea.  call `<init>`(v4, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32fef0.  throw v4;
  #L32fef2.  v4:= new `java.lang.UnsupportedOperationException`;
  #L32fef6.  v0:= "Please set start drawable using R.attr#chipIcon." @kind object;
  #L32fefa.  call `<init>`(v4, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ff00.  throw v4;
  #L32ff02.  v4:= new `java.lang.UnsupportedOperationException`;
  #L32ff06.  v0:= "Please set left drawable using R.attr#chipIcon." @kind object;
  #L32ff0a.  call `<init>`(v4, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ff10.  throw v4;
  #L32ff12.  v4:= new `java.lang.UnsupportedOperationException`;
  #L32ff16.  v0:= "Do not set the background; Chip manages its own background drawable." @kind object;
  #L32ff1a.  call `<init>`(v4, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ff20.  throw v4;
}
procedure `boolean` `dispatchHoverEvent`(`com.google.android.material.chip.Chip` v1 @kind this, `android.view.MotionEvent` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32e0e4.  call temp:= `handleAccessibilityExit`(v1, v2) @signature `Lcom/google/android/material/chip/Chip;.handleAccessibilityExit:(Landroid/view/MotionEvent;)Z` @kind direct;
  #L32e0ea.  v0:= temp;
  #L32e0ec.  if v0 != 0 then goto L32e112;
  #L32e0f0.  v0:= v1.`com.google.android.material.chip.Chip.touchHelper` @type ^`com.google.android.material.chip.Chip$ChipTouchHelper` @kind object;
  #L32e0f4.  call temp:= `dispatchHoverEvent`(v0, v2) @signature `Lcom/google/android/material/chip/Chip$ChipTouchHelper;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L32e0fa.  v0:= temp;
  #L32e0fc.  if v0 != 0 then goto L32e112;
  #L32e100.  call temp:= `dispatchHoverEvent`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L32e106.  v2:= temp;
  #L32e108.  if v2 == 0 then goto L32e10e;
  #L32e10c.  goto L32e112;
  #L32e10e.  v2:= 0I;
  #L32e110.  goto L32e114;
  #L32e112.  v2:= 1I;
  #L32e114.  return v2;
}
procedure `boolean` `dispatchKeyEvent`(`com.google.android.material.chip.Chip` v1 @kind this, `android.view.KeyEvent` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.dispatchKeyEvent:(Landroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e128.  v0:= v1.`com.google.android.material.chip.Chip.touchHelper` @type ^`com.google.android.material.chip.Chip$ChipTouchHelper` @kind object;
  #L32e12c.  call temp:= `dispatchKeyEvent`(v0, v2) @signature `Lcom/google/android/material/chip/Chip$ChipTouchHelper;.dispatchKeyEvent:(Landroid/view/KeyEvent;)Z` @kind virtual;
  #L32e132.  v0:= temp;
  #L32e134.  if v0 != 0 then goto L32e14a;
  #L32e138.  call temp:= `dispatchKeyEvent`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.dispatchKeyEvent:(Landroid/view/KeyEvent;)Z` @kind super;
  #L32e13e.  v2:= temp;
  #L32e140.  if v2 == 0 then goto L32e146;
  #L32e144.  goto L32e14a;
  #L32e146.  v2:= 0I;
  #L32e148.  goto L32e14c;
  #L32e14a.  v2:= 1I;
  #L32e14c.  return v2;
}
procedure `void` `drawableStateChanged`(`com.google.android.material.chip.Chip` v2 @kind this) @signature `Lcom/google/android/material/chip/Chip;.drawableStateChanged:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L32ebc8.  call `drawableStateChanged`(v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.drawableStateChanged:()V` @kind super;
  #L32ebce.  v0:= v2.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ebd2.  if v0 == 0 then goto L32ebf8;
  #L32ebd6.  call temp:= `isCloseIconStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconStateful:()Z` @kind virtual;
  #L32ebdc.  v0:= temp;
  #L32ebde.  if v0 == 0 then goto L32ebf8;
  #L32ebe2.  v0:= v2.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ebe6.  call temp:= `createCloseIconDrawableState`(v2) @signature `Lcom/google/android/material/chip/Chip;.createCloseIconDrawableState:()[I` @kind direct;
  #L32ebec.  v1:= temp @kind object;
  #L32ebee.  call temp:= `setCloseIconState`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @kind virtual;
  #L32ebf4.  v0:= temp;
  #L32ebf6.  goto L32ebfa;
  #L32ebf8.  v0:= 0I;
  #L32ebfa.  if v0 == 0 then goto L32ec04;
  #L32ebfe.  call `invalidate`(v2) @signature `Lcom/google/android/material/chip/Chip;.invalidate:()V` @kind virtual;
  #L32ec04.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `getCheckedIcon`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getCheckedIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32dfb4.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32dfb8.  if v0 == 0 then goto L32dfc6;
  #L32dfbc.  call temp:= `getCheckedIcon`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32dfc2.  v0:= temp @kind object;
  #L32dfc4.  goto L32dfc8;
  #L32dfc6.  v0:= 0I;
  #L32dfc8.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getChipBackgroundColor`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipBackgroundColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32de20.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32de24.  if v0 == 0 then goto L32de32;
  #L32de28.  call temp:= `getChipBackgroundColor`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipBackgroundColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L32de2e.  v0:= temp @kind object;
  #L32de30.  goto L32de34;
  #L32de32.  v0:= 0I;
  #L32de34.  return v0 @kind object;
}
procedure `float` `getChipCornerRadius`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipCornerRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e6e0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e6e4.  if v0 == 0 then goto L32e6f2;
  #L32e6e8.  call temp:= `getChipCornerRadius`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L32e6ee.  v0:= temp;
  #L32e6f0.  goto L32e6f4;
  #L32e6f2.  v0:= 0I;
  #L32e6f4.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getChipDrawable`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32dfdc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32dfe0.  return v0 @kind object;
}
procedure `float` `getChipEndPadding`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e708.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e70c.  if v0 == 0 then goto L32e71a;
  #L32e710.  call temp:= `getChipEndPadding`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipEndPadding:()F` @kind virtual;
  #L32e716.  v0:= temp;
  #L32e718.  goto L32e71c;
  #L32e71a.  v0:= 0I;
  #L32e71c.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getChipIcon`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32dff4.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32dff8.  if v0 == 0 then goto L32e006;
  #L32dffc.  call temp:= `getChipIcon`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32e002.  v0:= temp @kind object;
  #L32e004.  goto L32e008;
  #L32e006.  v0:= 0I;
  #L32e008.  return v0 @kind object;
}
procedure `float` `getChipIconSize`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e730.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e734.  if v0 == 0 then goto L32e742;
  #L32e738.  call temp:= `getChipIconSize`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconSize:()F` @kind virtual;
  #L32e73e.  v0:= temp;
  #L32e740.  goto L32e744;
  #L32e742.  v0:= 0I;
  #L32e744.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipIconTint`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32de48.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32de4c.  if v0 == 0 then goto L32de5a;
  #L32de50.  call temp:= `getChipIconTint`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconTint:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L32de56.  v0:= temp @kind object;
  #L32de58.  goto L32de5c;
  #L32de5a.  v0:= 0I;
  #L32de5c.  return v0 @kind object;
}
procedure `float` `getChipMinHeight`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipMinHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e758.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e75c.  if v0 == 0 then goto L32e76a;
  #L32e760.  call temp:= `getChipMinHeight`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipMinHeight:()F` @kind virtual;
  #L32e766.  v0:= temp;
  #L32e768.  goto L32e76c;
  #L32e76a.  v0:= 0I;
  #L32e76c.  return v0;
}
procedure `float` `getChipStartPadding`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e780.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e784.  if v0 == 0 then goto L32e792;
  #L32e788.  call temp:= `getChipStartPadding`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStartPadding:()F` @kind virtual;
  #L32e78e.  v0:= temp;
  #L32e790.  goto L32e794;
  #L32e792.  v0:= 0I;
  #L32e794.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipStrokeColor`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32de70.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32de74.  if v0 == 0 then goto L32de82;
  #L32de78.  call temp:= `getChipStrokeColor`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L32de7e.  v0:= temp @kind object;
  #L32de80.  goto L32de84;
  #L32de82.  v0:= 0I;
  #L32de84.  return v0 @kind object;
}
procedure `float` `getChipStrokeWidth`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e7a8.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e7ac.  if v0 == 0 then goto L32e7ba;
  #L32e7b0.  call temp:= `getChipStrokeWidth`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeWidth:()F` @kind virtual;
  #L32e7b6.  v0:= temp;
  #L32e7b8.  goto L32e7bc;
  #L32e7ba.  v0:= 0I;
  #L32e7bc.  return v0;
}
procedure `java.lang.CharSequence` `getChipText`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getChipText:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e9ec.  call temp:= `getText`(v1) @signature `Lcom/google/android/material/chip/Chip;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L32e9f2.  v0:= temp @kind object;
  #L32e9f4.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `getCloseIcon`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e01c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e020.  if v0 == 0 then goto L32e02e;
  #L32e024.  call temp:= `getCloseIcon`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L32e02a.  v0:= temp @kind object;
  #L32e02c.  goto L32e030;
  #L32e02e.  v0:= 0I;
  #L32e030.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getCloseIconContentDescription`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconContentDescription:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ea08.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ea0c.  if v0 == 0 then goto L32ea1a;
  #L32ea10.  call temp:= `getCloseIconContentDescription`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconContentDescription:()Ljava/lang/CharSequence;` @kind virtual;
  #L32ea16.  v0:= temp @kind object;
  #L32ea18.  goto L32ea1c;
  #L32ea1a.  v0:= 0I;
  #L32ea1c.  return v0 @kind object;
}
procedure `float` `getCloseIconEndPadding`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e7d0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e7d4.  if v0 == 0 then goto L32e7e2;
  #L32e7d8.  call temp:= `getCloseIconEndPadding`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconEndPadding:()F` @kind virtual;
  #L32e7de.  v0:= temp;
  #L32e7e0.  goto L32e7e4;
  #L32e7e2.  v0:= 0I;
  #L32e7e4.  return v0;
}
procedure `float` `getCloseIconSize`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e7f8.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e7fc.  if v0 == 0 then goto L32e80a;
  #L32e800.  call temp:= `getCloseIconSize`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconSize:()F` @kind virtual;
  #L32e806.  v0:= temp;
  #L32e808.  goto L32e80c;
  #L32e80a.  v0:= 0I;
  #L32e80c.  return v0;
}
procedure `float` `getCloseIconStartPadding`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e820.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e824.  if v0 == 0 then goto L32e832;
  #L32e828.  call temp:= `getCloseIconStartPadding`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconStartPadding:()F` @kind virtual;
  #L32e82e.  v0:= temp;
  #L32e830.  goto L32e834;
  #L32e832.  v0:= 0I;
  #L32e834.  return v0;
}
procedure `android.content.res.ColorStateList` `getCloseIconTint`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32de98.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32de9c.  if v0 == 0 then goto L32deaa;
  #L32dea0.  call temp:= `getCloseIconTint`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTint:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L32dea6.  v0:= temp @kind object;
  #L32dea8.  goto L32deac;
  #L32deaa.  v0:= 0I;
  #L32deac.  return v0 @kind object;
}
procedure `android.text.TextUtils$TruncateAt` `getEllipsize`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getEllipsize:()Landroid/text/TextUtils$TruncateAt;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e044.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e048.  if v0 == 0 then goto L32e056;
  #L32e04c.  call temp:= `getEllipsize`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getEllipsize:()Landroid/text/TextUtils$TruncateAt;` @kind virtual;
  #L32e052.  v0:= temp @kind object;
  #L32e054.  goto L32e058;
  #L32e056.  v0:= 0I;
  #L32e058.  return v0 @kind object;
}
procedure `void` `getFocusedRect`(`com.google.android.material.chip.Chip` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.getFocusedRect:(Landroid/graphics/Rect;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ec40.  v0:= v1.`com.google.android.material.chip.Chip.focusedVirtualView` @type ^`int`;
  #L32ec44.  if v0 != 0 then goto L32ec58;
  #L32ec48.  call temp:= `getCloseIconTouchBoundsInt`(v1) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTouchBoundsInt:()Landroid/graphics/Rect;` @kind direct;
  #L32ec4e.  v0:= temp @kind object;
  #L32ec50.  call `set`(v2, v0) @signature `Landroid/graphics/Rect;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L32ec56.  goto L32ec5e;
  #L32ec58.  call `getFocusedRect`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.getFocusedRect:(Landroid/graphics/Rect;)V` @kind super;
  #L32ec5e.  return @kind void;
}
procedure `com.google.android.material.animation.MotionSpec` `getHideMotionSpec`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getHideMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e610.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e614.  if v0 == 0 then goto L32e622;
  #L32e618.  call temp:= `getHideMotionSpec`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getHideMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @kind virtual;
  #L32e61e.  v0:= temp @kind object;
  #L32e620.  goto L32e624;
  #L32e622.  v0:= 0I;
  #L32e624.  return v0 @kind object;
}
procedure `float` `getIconEndPadding`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e848.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e84c.  if v0 == 0 then goto L32e85a;
  #L32e850.  call temp:= `getIconEndPadding`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconEndPadding:()F` @kind virtual;
  #L32e856.  v0:= temp;
  #L32e858.  goto L32e85c;
  #L32e85a.  v0:= 0I;
  #L32e85c.  return v0;
}
procedure `float` `getIconStartPadding`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e870.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e874.  if v0 == 0 then goto L32e882;
  #L32e878.  call temp:= `getIconStartPadding`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconStartPadding:()F` @kind virtual;
  #L32e87e.  v0:= temp;
  #L32e880.  goto L32e884;
  #L32e882.  v0:= 0I;
  #L32e884.  return v0;
}
procedure `android.content.res.ColorStateList` `getRippleColor`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getRippleColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32dec0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32dec4.  if v0 == 0 then goto L32ded2;
  #L32dec8.  call temp:= `getRippleColor`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L32dece.  v0:= temp @kind object;
  #L32ded0.  goto L32ded4;
  #L32ded2.  v0:= 0I;
  #L32ded4.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getShowMotionSpec`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getShowMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e638.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e63c.  if v0 == 0 then goto L32e64a;
  #L32e640.  call temp:= `getShowMotionSpec`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getShowMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @kind virtual;
  #L32e646.  v0:= temp @kind object;
  #L32e648.  goto L32e64c;
  #L32e64a.  v0:= 0I;
  #L32e64c.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getText`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getText:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ea30.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ea34.  if v0 == 0 then goto L32ea42;
  #L32ea38.  call temp:= `getText`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L32ea3e.  v0:= temp @kind object;
  #L32ea40.  goto L32ea46;
  #L32ea42.  v0:= "" @kind object;
  #L32ea46.  return v0 @kind object;
}
procedure `float` `getTextEndPadding`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getTextEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e898.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e89c.  if v0 == 0 then goto L32e8aa;
  #L32e8a0.  call temp:= `getTextEndPadding`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextEndPadding:()F` @kind virtual;
  #L32e8a6.  v0:= temp;
  #L32e8a8.  goto L32e8ac;
  #L32e8aa.  v0:= 0I;
  #L32e8ac.  return v0;
}
procedure `float` `getTextStartPadding`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.getTextStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e8c0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e8c4.  if v0 == 0 then goto L32e8d2;
  #L32e8c8.  call temp:= `getTextStartPadding`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextStartPadding:()F` @kind virtual;
  #L32e8ce.  v0:= temp;
  #L32e8d0.  goto L32e8d4;
  #L32e8d2.  v0:= 0I;
  #L32e8d4.  return v0;
}
procedure `boolean` `isCheckable`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.isCheckable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e26c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e270.  if v0 == 0 then goto L32e284;
  #L32e274.  call temp:= `isCheckable`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckable:()Z` @kind virtual;
  #L32e27a.  v0:= temp;
  #L32e27c.  if v0 == 0 then goto L32e284;
  #L32e280.  v0:= 1I;
  #L32e282.  goto L32e286;
  #L32e284.  v0:= 0I;
  #L32e286.  return v0;
}
procedure `boolean` `isCheckedIconEnabled`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.isCheckedIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e298.  call temp:= `isCheckedIconVisible`(v1) @signature `Lcom/google/android/material/chip/Chip;.isCheckedIconVisible:()Z` @kind virtual;
  #L32e29e.  v0:= temp;
  #L32e2a0.  return v0;
}
procedure `boolean` `isCheckedIconVisible`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.isCheckedIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e2b4.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e2b8.  if v0 == 0 then goto L32e2cc;
  #L32e2bc.  call temp:= `isCheckedIconVisible`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @kind virtual;
  #L32e2c2.  v0:= temp;
  #L32e2c4.  if v0 == 0 then goto L32e2cc;
  #L32e2c8.  v0:= 1I;
  #L32e2ca.  goto L32e2ce;
  #L32e2cc.  v0:= 0I;
  #L32e2ce.  return v0;
}
procedure `boolean` `isChipIconEnabled`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.isChipIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e2e0.  call temp:= `isChipIconVisible`(v1) @signature `Lcom/google/android/material/chip/Chip;.isChipIconVisible:()Z` @kind virtual;
  #L32e2e6.  v0:= temp;
  #L32e2e8.  return v0;
}
procedure `boolean` `isChipIconVisible`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.isChipIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e2fc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e300.  if v0 == 0 then goto L32e314;
  #L32e304.  call temp:= `isChipIconVisible`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @kind virtual;
  #L32e30a.  v0:= temp;
  #L32e30c.  if v0 == 0 then goto L32e314;
  #L32e310.  v0:= 1I;
  #L32e312.  goto L32e316;
  #L32e314.  v0:= 0I;
  #L32e316.  return v0;
}
procedure `boolean` `isCloseIconEnabled`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.isCloseIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e328.  call temp:= `isCloseIconVisible`(v1) @signature `Lcom/google/android/material/chip/Chip;.isCloseIconVisible:()Z` @kind virtual;
  #L32e32e.  v0:= temp;
  #L32e330.  return v0;
}
procedure `boolean` `isCloseIconVisible`(`com.google.android.material.chip.Chip` v1 @kind this) @signature `Lcom/google/android/material/chip/Chip;.isCloseIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e344.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32e348.  if v0 == 0 then goto L32e35c;
  #L32e34c.  call temp:= `isCloseIconVisible`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @kind virtual;
  #L32e352.  v0:= temp;
  #L32e354.  if v0 == 0 then goto L32e35c;
  #L32e358.  v0:= 1I;
  #L32e35a.  goto L32e35e;
  #L32e35c.  v0:= 0I;
  #L32e35e.  return v0;
}
procedure `void` `onChipDrawableSizeChange`(`com.google.android.material.chip.Chip` v2 @kind this) @signature `Lcom/google/android/material/chip/Chip;.onChipDrawableSizeChange:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32eca0.  call `updatePaddingInternal`(v2) @signature `Lcom/google/android/material/chip/Chip;.updatePaddingInternal:()V` @kind direct;
  #L32eca6.  call `requestLayout`(v2) @signature `Lcom/google/android/material/chip/Chip;.requestLayout:()V` @kind virtual;
  #L32ecac.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32ecb0.  v1:= 21I;
  #L32ecb4.  if v0 < v1 then goto L32ecbe;
  #L32ecb8.  call `invalidateOutline`(v2) @signature `Lcom/google/android/material/chip/Chip;.invalidateOutline:()V` @kind virtual;
  #L32ecbe.  return @kind void;
}
procedure `int`[] `onCreateDrawableState`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.onCreateDrawableState:(I)[I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32e9b8.  v2:= v2 + 1;
  #L32e9bc.  call temp:= `onCreateDrawableState`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.onCreateDrawableState:(I)[I` @kind super;
  #L32e9c2.  v2:= temp @kind object;
  #L32e9c4.  call temp:= `isChecked`(v1) @signature `Lcom/google/android/material/chip/Chip;.isChecked:()Z` @kind virtual;
  #L32e9ca.  v0:= temp;
  #L32e9cc.  if v0 == 0 then goto L32e9da;
  #L32e9d0.  v0:= `@@com.google.android.material.chip.Chip.SELECTED_STATE` @type ^`int`[] @kind object;
  #L32e9d4.  call temp:= `mergeDrawableStates`(v2, v0) @signature `Lcom/google/android/material/chip/Chip;.mergeDrawableStates:([I[I)[I` @kind static;
  #L32e9da.  return v2 @kind object;
}
procedure `void` `onDraw`(`com.google.android.material.chip.Chip` v3 @kind this, `android.graphics.Canvas` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L32ecd0.  call temp:= `getText`(v3) @signature `Lcom/google/android/material/chip/Chip;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L32ecd6.  v0:= temp @kind object;
  #L32ecd8.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L32ecde.  v0:= temp;
  #L32ece0.  if v0 != 0 then goto L32ed24;
  #L32ece4.  v0:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ece8.  if v0 == 0 then goto L32ed24;
  #L32ecec.  call temp:= `shouldDrawText`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.shouldDrawText:()Z` @kind virtual;
  #L32ecf2.  v0:= temp;
  #L32ecf4.  if v0 == 0 then goto L32ecfa;
  #L32ecf8.  goto L32ed24;
  #L32ecfa.  call temp:= `save`(v4) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L32ed00.  v0:= temp;
  #L32ed02.  v1:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ed06.  call temp:= `calculateTextOffsetFromStart`(v3, v1) @signature `Lcom/google/android/material/chip/Chip;.calculateTextOffsetFromStart:(Lcom/google/android/material/chip/ChipDrawable;)F` @kind direct;
  #L32ed0c.  v1:= temp;
  #L32ed0e.  v2:= 0I;
  #L32ed10.  call `translate`(v4, v1, v2) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L32ed16.  call `onDraw`(v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L32ed1c.  call `restoreToCount`(v4, v0) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L32ed22.  return @kind void;
  #L32ed24.  call `onDraw`(v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L32ed2a.  return @kind void;
}
procedure `void` `onFocusChanged`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 , `int` v3 , `android.graphics.Rect` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.onFocusChanged:(ZILandroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32ed3c.  if v2 == 0 then goto L32ed4a;
  #L32ed40.  v0:= -1I;
  #L32ed42.  call `setFocusedVirtualView`(v1, v0) @signature `Lcom/google/android/material/chip/Chip;.setFocusedVirtualView:(I)V` @kind direct;
  #L32ed48.  goto L32ed54;
  #L32ed4a.  v0:= -2147483648I;
  #L32ed4e.  call `setFocusedVirtualView`(v1, v0) @signature `Lcom/google/android/material/chip/Chip;.setFocusedVirtualView:(I)V` @kind direct;
  #L32ed54.  call `invalidate`(v1) @signature `Lcom/google/android/material/chip/Chip;.invalidate:()V` @kind virtual;
  #L32ed5a.  call `onFocusChanged`(v1, v2, v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.onFocusChanged:(ZILandroid/graphics/Rect;)V` @kind super;
  #L32ed60.  v0:= v1.`com.google.android.material.chip.Chip.touchHelper` @type ^`com.google.android.material.chip.Chip$ChipTouchHelper` @kind object;
  #L32ed64.  call `onFocusChanged`(v0, v2, v3, v4) @signature `Lcom/google/android/material/chip/Chip$ChipTouchHelper;.onFocusChanged:(ZILandroid/graphics/Rect;)V` @kind virtual;
  #L32ed6a.  return @kind void;
}
procedure `boolean` `onHoverEvent`(`com.google.android.material.chip.Chip` v3 @kind this, `android.view.MotionEvent` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.onHoverEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32e3b4.  call temp:= `getActionMasked`(v4) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L32e3ba.  v0:= temp;
  #L32e3bc.  v1:= 7I;
  #L32e3be.  if v0 == v1 then goto L32e3d6;
  #L32e3c2.  v1:= 10I;
  #L32e3c6.  if v0 == v1 then goto L32e3cc;
  #L32e3ca.  goto L32e3fc;
  #L32e3cc.  v0:= 0I;
  #L32e3ce.  call `setCloseIconHovered`(v3, v0) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconHovered:(Z)V` @kind direct;
  #L32e3d4.  goto L32e3fc;
  #L32e3d6.  call temp:= `getCloseIconTouchBounds`(v3) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTouchBounds:()Landroid/graphics/RectF;` @kind direct;
  #L32e3dc.  v0:= temp @kind object;
  #L32e3de.  call temp:= `getX`(v4) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L32e3e4.  v1:= temp;
  #L32e3e6.  call temp:= `getY`(v4) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L32e3ec.  v2:= temp;
  #L32e3ee.  call temp:= `contains`(v0, v1, v2) @signature `Landroid/graphics/RectF;.contains:(FF)Z` @kind virtual;
  #L32e3f4.  v0:= temp;
  #L32e3f6.  call `setCloseIconHovered`(v3, v0) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconHovered:(Z)V` @kind direct;
  #L32e3fc.  call temp:= `onHoverEvent`(v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.onHoverEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L32e402.  v4:= temp;
  #L32e404.  return v4;
}
procedure `boolean` `onKeyDown`(`com.google.android.material.chip.Chip` v6 @kind this, `int` v7 , `android.view.KeyEvent` v8 @kind object) @signature `Lcom/google/android/material/chip/Chip;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32e418.  call temp:= `getKeyCode`(v8) @signature `Landroid/view/KeyEvent;.getKeyCode:()I` @kind virtual;
  #L32e41e.  v0:= temp;
  #L32e420.  v1:= 61I;
  #L32e424.  v2:= 0I;
  #L32e426.  v3:= 1I;
  #L32e428.  if v0 == v1 then goto L32e49a;
  #L32e42c.  v1:= 66I;
  #L32e430.  if v0 == v1 then goto L32e47a;
  #L32e434.  goto L32e508;
  #L32e43a.  goto L32e4f2;
  #L32e43c.  call temp:= `hasNoModifiers`(v8) @signature `Landroid/view/KeyEvent;.hasNoModifiers:()Z` @kind virtual;
  #L32e442.  v0:= temp;
  #L32e444.  if v0 == 0 then goto L32e4f2;
  #L32e448.  call temp:= `isLayoutRtl`(v6) @signature `Lcom/google/android/material/internal/ViewUtils;.isLayoutRtl:(Landroid/view/View;)Z` @kind static;
  #L32e44e.  v0:= temp;
  #L32e450.  v0:= v0 ^~ v3 @kind int;
  #L32e452.  call temp:= `moveFocus`(v6, v0) @signature `Lcom/google/android/material/chip/Chip;.moveFocus:(Z)Z` @kind direct;
  #L32e458.  v2:= temp;
  #L32e45a.  goto L32e4f2;
  #L32e45c.  call temp:= `hasNoModifiers`(v8) @signature `Landroid/view/KeyEvent;.hasNoModifiers:()Z` @kind virtual;
  #L32e462.  v0:= temp;
  #L32e464.  if v0 == 0 then goto L32e4f2;
  #L32e468.  call temp:= `isLayoutRtl`(v6) @signature `Lcom/google/android/material/internal/ViewUtils;.isLayoutRtl:(Landroid/view/View;)Z` @kind static;
  #L32e46e.  v0:= temp;
  #L32e470.  call temp:= `moveFocus`(v6, v0) @signature `Lcom/google/android/material/chip/Chip;.moveFocus:(Z)Z` @kind direct;
  #L32e476.  v2:= temp;
  #L32e478.  goto L32e4f2;
  #L32e47a.  v0:= v6.`com.google.android.material.chip.Chip.focusedVirtualView` @type ^`int`;
  #L32e47e.  v1:= -1I;
  #L32e480.  if v0 == v1 then goto L32e492;
  #L32e484.  if v0 == 0 then goto L32e48a;
  #L32e488.  goto L32e4f2;
  #L32e48a.  call temp:= `performCloseIconClick`(v6) @signature `Lcom/google/android/material/chip/Chip;.performCloseIconClick:()Z` @kind virtual;
  #L32e490.  return v3;
  #L32e492.  call temp:= `performClick`(v6) @signature `Lcom/google/android/material/chip/Chip;.performClick:()Z` @kind virtual;
  #L32e498.  return v3;
  #L32e49a.  call temp:= `hasNoModifiers`(v8) @signature `Landroid/view/KeyEvent;.hasNoModifiers:()Z` @kind virtual;
  #L32e4a0.  v0:= temp;
  #L32e4a2.  if v0 == 0 then goto L32e4aa;
  #L32e4a6.  v0:= 2I;
  #L32e4a8.  goto L32e4bc;
  #L32e4aa.  call temp:= `hasModifiers`(v8, v3) @signature `Landroid/view/KeyEvent;.hasModifiers:(I)Z` @kind virtual;
  #L32e4b0.  v0:= temp;
  #L32e4b2.  if v0 == 0 then goto L32e4ba;
  #L32e4b6.  v0:= 1I;
  #L32e4b8.  goto L32e4bc;
  #L32e4ba.  v0:= 0I;
  #L32e4bc.  if v0 == 0 then goto L32e4f2;
  #L32e4c0.  call temp:= `getParent`(v6) @signature `Lcom/google/android/material/chip/Chip;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L32e4c6.  v1:= temp @kind object;
  #L32e4c8.  v4:= v6 @kind object;
  #L32e4ca.  call temp:= `focusSearch`(v4, v0) @signature `Landroid/view/View;.focusSearch:(I)Landroid/view/View;` @kind virtual;
  #L32e4d0.  v4:= temp @kind object;
  #L32e4d2.  if v4 == 0 then goto L32e4e6;
  #L32e4d6.  if v4 == v6 then goto L32e4e6;
  #L32e4da.  call temp:= `getParent`(v4) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L32e4e0.  v5:= temp @kind object;
  #L32e4e2.  if v5 == v1 then goto L32e4ca;
  #L32e4e6.  if v4 == 0 then goto L32e4f2;
  #L32e4ea.  call temp:= `requestFocus`(v4) @signature `Landroid/view/View;.requestFocus:()Z` @kind virtual;
  #L32e4f0.  return v3;
  #L32e4f2.  if v2 == 0 then goto L32e4fe;
  #L32e4f6.  call `invalidate`(v6) @signature `Lcom/google/android/material/chip/Chip;.invalidate:()V` @kind virtual;
  #L32e4fc.  return v3;
  #L32e4fe.  call temp:= `onKeyDown`(v6, v7, v8) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L32e504.  v7:= temp;
  #L32e506.  return v7;
  #L32e508.  switch v0
                  | 21 => goto L32e45c
                  | 22 => goto L32e43c
                  | 23 => goto L32e47a
                  | else => goto L32e43a;
}
procedure `android.view.PointerIcon` `onResolvePointerIcon`(`com.google.android.material.chip.Chip` v1 @kind this, `android.view.MotionEvent` v2 @kind object, `int` v3 ) @signature `Lcom/google/android/material/chip/Chip;.onResolvePointerIcon:(Landroid/view/MotionEvent;I)Landroid/view/PointerIcon;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e06c.  call temp:= `getCloseIconTouchBounds`(v1) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTouchBounds:()Landroid/graphics/RectF;` @kind direct;
  #L32e072.  v3:= temp @kind object;
  #L32e074.  call temp:= `getX`(v2) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L32e07a.  v0:= temp;
  #L32e07c.  call temp:= `getY`(v2) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L32e082.  v2:= temp;
  #L32e084.  call temp:= `contains`(v3, v0, v2) @signature `Landroid/graphics/RectF;.contains:(FF)Z` @kind virtual;
  #L32e08a.  v2:= temp;
  #L32e08c.  if v2 == 0 then goto L32e0b2;
  #L32e090.  call temp:= `isEnabled`(v1) @signature `Lcom/google/android/material/chip/Chip;.isEnabled:()Z` @kind virtual;
  #L32e096.  v2:= temp;
  #L32e098.  if v2 == 0 then goto L32e0b2;
  #L32e09c.  call temp:= `getContext`(v1) @signature `Lcom/google/android/material/chip/Chip;.getContext:()Landroid/content/Context;` @kind virtual;
  #L32e0a2.  v2:= temp @kind object;
  #L32e0a4.  v3:= 1002I;
  #L32e0a8.  call temp:= `getSystemIcon`(v2, v3) @signature `Landroid/view/PointerIcon;.getSystemIcon:(Landroid/content/Context;I)Landroid/view/PointerIcon;` @kind static;
  #L32e0ae.  v2:= temp @kind object;
  #L32e0b0.  return v2 @kind object;
  #L32e0b2.  v2:= 0I;
  #L32e0b4.  return v2 @kind object;
}
procedure `boolean` `onTouchEvent`(`com.google.android.material.chip.Chip` v5 @kind this, `android.view.MotionEvent` v6 @kind object) @signature `Lcom/google/android/material/chip/Chip;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32e52c.  call temp:= `getActionMasked`(v6) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L32e532.  v0:= temp;
  #L32e534.  call temp:= `getCloseIconTouchBounds`(v5) @signature `Lcom/google/android/material/chip/Chip;.getCloseIconTouchBounds:()Landroid/graphics/RectF;` @kind direct;
  #L32e53a.  v1:= temp @kind object;
  #L32e53c.  call temp:= `getX`(v6) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L32e542.  v2:= temp;
  #L32e544.  call temp:= `getY`(v6) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L32e54a.  v3:= temp;
  #L32e54c.  call temp:= `contains`(v1, v2, v3) @signature `Landroid/graphics/RectF;.contains:(FF)Z` @kind virtual;
  #L32e552.  v1:= temp;
  #L32e554.  v2:= 0I;
  #L32e556.  v3:= 1I;
  #L32e558.  if v0 == 0 then goto L32e59e;
  #L32e55c.  if v0 == v3 then goto L32e582;
  #L32e560.  v4:= 2I;
  #L32e562.  if v0 == v4 then goto L32e56e;
  #L32e566.  v1:= 3I;
  #L32e568.  if v0 == v1 then goto L32e594;
  #L32e56c.  goto L32e5ac;
  #L32e56e.  v0:= v5.`com.google.android.material.chip.Chip.closeIconPressed` @type ^`boolean` @kind boolean;
  #L32e572.  if v0 == 0 then goto L32e5ac;
  #L32e576.  if v1 != 0 then goto L32e5a8;
  #L32e57a.  call `setCloseIconPressed`(v5, v2) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconPressed:(Z)V` @kind direct;
  #L32e580.  goto L32e5a8;
  #L32e582.  v0:= v5.`com.google.android.material.chip.Chip.closeIconPressed` @type ^`boolean` @kind boolean;
  #L32e586.  if v0 == 0 then goto L32e594;
  #L32e58a.  call temp:= `performCloseIconClick`(v5) @signature `Lcom/google/android/material/chip/Chip;.performCloseIconClick:()Z` @kind virtual;
  #L32e590.  v0:= 1I;
  #L32e592.  goto L32e596;
  #L32e594.  v0:= 0I;
  #L32e596.  call `setCloseIconPressed`(v5, v2) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconPressed:(Z)V` @kind direct;
  #L32e59c.  goto L32e5ae;
  #L32e59e.  if v1 == 0 then goto L32e5ac;
  #L32e5a2.  call `setCloseIconPressed`(v5, v3) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconPressed:(Z)V` @kind direct;
  #L32e5a8.  v0:= 1I;
  #L32e5aa.  goto L32e5ae;
  #L32e5ac.  v0:= 0I;
  #L32e5ae.  if v0 != 0 then goto L32e5be;
  #L32e5b2.  call temp:= `onTouchEvent`(v5, v6) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L32e5b8.  v6:= temp;
  #L32e5ba.  if v6 == 0 then goto L32e5c0;
  #L32e5be.  v2:= 1I;
  #L32e5c0.  return v2;
}
procedure `boolean` `performCloseIconClick`(`com.google.android.material.chip.Chip` v4 @kind this) @signature `Lcom/google/android/material/chip/Chip;.performCloseIconClick:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32e5d4.  v0:= 0I;
  #L32e5d6.  call `playSoundEffect`(v4, v0) @signature `Lcom/google/android/material/chip/Chip;.playSoundEffect:(I)V` @kind virtual;
  #L32e5dc.  v1:= v4.`com.google.android.material.chip.Chip.onCloseIconClickListener` @type ^`android.view.View$OnClickListener` @kind object;
  #L32e5e0.  v2:= 1I;
  #L32e5e2.  if v1 == 0 then goto L32e5f0;
  #L32e5e6.  call `onClick`(v1, v4) @signature `Landroid/view/View$OnClickListener;.onClick:(Landroid/view/View;)V` @kind interface;
  #L32e5ec.  v1:= 1I;
  #L32e5ee.  goto L32e5f2;
  #L32e5f0.  v1:= 0I;
  #L32e5f2.  v3:= v4.`com.google.android.material.chip.Chip.touchHelper` @type ^`com.google.android.material.chip.Chip$ChipTouchHelper` @kind object;
  #L32e5f6.  call temp:= `sendEventForVirtualView`(v3, v0, v2) @signature `Lcom/google/android/material/chip/Chip$ChipTouchHelper;.sendEventForVirtualView:(II)Z` @kind virtual;
  #L32e5fc.  return v1;
}
procedure `void` `setBackground`(`com.google.android.material.chip.Chip` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setBackground:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ed7c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ed80.  if v2 == v0 then goto L32ed9e;
  #L32ed84.  v0:= v1.`com.google.android.material.chip.Chip.ripple` @type ^`android.graphics.drawable.RippleDrawable` @kind object;
  #L32ed88.  if v2 != v0 then goto L32ed8e;
  #L32ed8c.  goto L32ed9e;
  #L32ed8e.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32ed92.  v0:= "Do not set the background; Chip manages its own background drawable." @kind object;
  #L32ed96.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ed9c.  throw v2;
  #L32ed9e.  call `setBackground`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setBackground:(Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L32eda4.  return @kind void;
}
procedure `void` `setBackgroundColor`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setBackgroundColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32edb8.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32edbc.  v0:= "Do not set the background color; Chip manages its own background drawable." @kind object;
  #L32edc0.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32edc6.  throw v2;
}
procedure `void` `setBackgroundDrawable`(`com.google.android.material.chip.Chip` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setBackgroundDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32edd8.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32eddc.  if v2 == v0 then goto L32edfa;
  #L32ede0.  v0:= v1.`com.google.android.material.chip.Chip.ripple` @type ^`android.graphics.drawable.RippleDrawable` @kind object;
  #L32ede4.  if v2 != v0 then goto L32edea;
  #L32ede8.  goto L32edfa;
  #L32edea.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32edee.  v0:= "Do not set the background drawable; Chip manages its own background drawable." @kind object;
  #L32edf2.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32edf8.  throw v2;
  #L32edfa.  call `setBackgroundDrawable`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setBackgroundDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L32ee00.  return @kind void;
}
procedure `void` `setBackgroundResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setBackgroundResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ee14.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32ee18.  v0:= "Do not set the background resource; Chip manages its own background drawable." @kind object;
  #L32ee1c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ee22.  throw v2;
}
procedure `void` `setBackgroundTintList`(`com.google.android.material.chip.Chip` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setBackgroundTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ee34.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32ee38.  v0:= "Do not set the background tint list; Chip manages its own background drawable." @kind object;
  #L32ee3c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ee42.  throw v2;
}
procedure `void` `setBackgroundTintMode`(`com.google.android.material.chip.Chip` v1 @kind this, `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setBackgroundTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ee54.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32ee58.  v0:= "Do not set the background tint mode; Chip manages its own background drawable." @kind object;
  #L32ee5c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ee62.  throw v2;
}
procedure `void` `setCheckable`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCheckable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ee74.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ee78.  if v0 == 0 then goto L32ee82;
  #L32ee7c.  call `setCheckable`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L32ee82.  return @kind void;
}
procedure `void` `setCheckableResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCheckableResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ee94.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ee98.  if v0 == 0 then goto L32eea2;
  #L32ee9c.  call `setCheckableResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckableResource:(I)V` @kind virtual;
  #L32eea2.  return @kind void;
}
procedure `void` `setChecked`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32eeb4.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32eeb8.  if v0 != 0 then goto L32eec2;
  #L32eebc.  v1.`com.google.android.material.chip.Chip.deferredCheckedValue` @type ^`boolean` := v2 @kind boolean;
  #L32eec0.  goto L32eeee;
  #L32eec2.  call temp:= `isCheckable`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckable:()Z` @kind virtual;
  #L32eec8.  v0:= temp;
  #L32eeca.  if v0 == 0 then goto L32eeee;
  #L32eece.  call temp:= `isChecked`(v1) @signature `Lcom/google/android/material/chip/Chip;.isChecked:()Z` @kind virtual;
  #L32eed4.  v0:= temp;
  #L32eed6.  call `setChecked`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setChecked:(Z)V` @kind super;
  #L32eedc.  if v0 == v2 then goto L32eeee;
  #L32eee0.  v0:= v1.`com.google.android.material.chip.Chip.onCheckedChangeListenerInternal` @type ^`android.widget.CompoundButton$OnCheckedChangeListener` @kind object;
  #L32eee4.  if v0 == 0 then goto L32eeee;
  #L32eee8.  call `onCheckedChanged`(v0, v1, v2) @signature `Landroid/widget/CompoundButton$OnCheckedChangeListener;.onCheckedChanged:(Landroid/widget/CompoundButton;Z)V` @kind interface;
  #L32eeee.  return @kind void;
}
procedure `void` `setCheckedIcon`(`com.google.android.material.chip.Chip` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ef00.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ef04.  if v0 == 0 then goto L32ef0e;
  #L32ef08.  call `setCheckedIcon`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L32ef0e.  return @kind void;
}
procedure `void` `setCheckedIconEnabled`(`com.google.android.material.chip.Chip` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/Chip;.setCheckedIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32ef20.  call `setCheckedIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/Chip;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L32ef26.  return @kind void;
}
procedure `void` `setCheckedIconEnabledResource`(`com.google.android.material.chip.Chip` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/Chip;.setCheckedIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L32ef38.  call `setCheckedIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/Chip;.setCheckedIconVisible:(I)V` @kind virtual;
  #L32ef3e.  return @kind void;
}
procedure `void` `setCheckedIconResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCheckedIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ef50.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ef54.  if v0 == 0 then goto L32ef5e;
  #L32ef58.  call `setCheckedIconResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconResource:(I)V` @kind virtual;
  #L32ef5e.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCheckedIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ef90.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ef94.  if v0 == 0 then goto L32ef9e;
  #L32ef98.  call `setCheckedIconVisible`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(I)V` @kind virtual;
  #L32ef9e.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCheckedIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ef70.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32ef74.  if v0 == 0 then goto L32ef7e;
  #L32ef78.  call `setCheckedIconVisible`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L32ef7e.  return @kind void;
}
procedure `void` `setChipBackgroundColor`(`com.google.android.material.chip.Chip` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32efb0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32efb4.  if v0 == 0 then goto L32efbe;
  #L32efb8.  call `setChipBackgroundColor`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32efbe.  return @kind void;
}
procedure `void` `setChipBackgroundColorResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipBackgroundColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32efd0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32efd4.  if v0 == 0 then goto L32efde;
  #L32efd8.  call `setChipBackgroundColorResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColorResource:(I)V` @kind virtual;
  #L32efde.  return @kind void;
}
procedure `void` `setChipCornerRadius`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipCornerRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32eff0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32eff4.  if v0 == 0 then goto L32effe;
  #L32eff8.  call `setChipCornerRadius`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L32effe.  return @kind void;
}
procedure `void` `setChipCornerRadiusResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipCornerRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f010.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f014.  if v0 == 0 then goto L32f01e;
  #L32f018.  call `setChipCornerRadiusResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadiusResource:(I)V` @kind virtual;
  #L32f01e.  return @kind void;
}
procedure `void` `setChipDrawable`(`com.google.android.material.chip.Chip` v3 @kind this, `com.google.android.material.chip.ChipDrawable` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setChipDrawable:(Lcom/google/android/material/chip/ChipDrawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32f030.  v0:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f034.  if v0 == v4 then goto L32f0aa;
  #L32f038.  call `unapplyChipDrawable`(v3, v0) @signature `Lcom/google/android/material/chip/Chip;.unapplyChipDrawable:(Lcom/google/android/material/chip/ChipDrawable;)V` @kind direct;
  #L32f03e.  v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` := v4 @kind object;
  #L32f042.  v4:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f046.  call `applyChipDrawable`(v3, v4) @signature `Lcom/google/android/material/chip/Chip;.applyChipDrawable:(Lcom/google/android/material/chip/ChipDrawable;)V` @kind direct;
  #L32f04c.  v4:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L32f050.  if v4 == 0 then goto L32f094;
  #L32f054.  v4:= new `android.graphics.drawable.RippleDrawable`;
  #L32f058.  v0:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f05c.  call temp:= `getRippleColor`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L32f062.  v0:= temp @kind object;
  #L32f064.  call temp:= `convertToRippleDrawableColor`(v0) @signature `Lcom/google/android/material/ripple/RippleUtils;.convertToRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L32f06a.  v0:= temp @kind object;
  #L32f06c.  v1:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f070.  v2:= 0I;
  #L32f072.  call `<init>`(v4, v0, v1, v2) @signature `Landroid/graphics/drawable/RippleDrawable;.<init>:(Landroid/content/res/ColorStateList;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L32f078.  v3.`com.google.android.material.chip.Chip.ripple` @type ^`android.graphics.drawable.RippleDrawable` := v4 @kind object;
  #L32f07c.  v4:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f080.  v0:= 0I;
  #L32f082.  call `setUseCompatRipple`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setUseCompatRipple:(Z)V` @kind virtual;
  #L32f088.  v4:= v3.`com.google.android.material.chip.Chip.ripple` @type ^`android.graphics.drawable.RippleDrawable` @kind object;
  #L32f08c.  call `setBackground`(v3, v4) @signature `Landroidx/core/view/ViewCompat;.setBackground:(Landroid/view/View;Landroid/graphics/drawable/Drawable;)V` @kind static;
  #L32f092.  goto L32f0aa;
  #L32f094.  v4:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f098.  v0:= 1I;
  #L32f09a.  call `setUseCompatRipple`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setUseCompatRipple:(Z)V` @kind virtual;
  #L32f0a0.  v4:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f0a4.  call `setBackground`(v3, v4) @signature `Landroidx/core/view/ViewCompat;.setBackground:(Landroid/view/View;Landroid/graphics/drawable/Drawable;)V` @kind static;
  #L32f0aa.  return @kind void;
}
procedure `void` `setChipEndPadding`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f0bc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f0c0.  if v0 == 0 then goto L32f0ca;
  #L32f0c4.  call `setChipEndPadding`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L32f0ca.  return @kind void;
}
procedure `void` `setChipEndPaddingResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f0dc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f0e0.  if v0 == 0 then goto L32f0ea;
  #L32f0e4.  call `setChipEndPaddingResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPaddingResource:(I)V` @kind virtual;
  #L32f0ea.  return @kind void;
}
procedure `void` `setChipIcon`(`com.google.android.material.chip.Chip` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f0fc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f100.  if v0 == 0 then goto L32f10a;
  #L32f104.  call `setChipIcon`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L32f10a.  return @kind void;
}
procedure `void` `setChipIconEnabled`(`com.google.android.material.chip.Chip` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/Chip;.setChipIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32f11c.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/Chip;.setChipIconVisible:(Z)V` @kind virtual;
  #L32f122.  return @kind void;
}
procedure `void` `setChipIconEnabledResource`(`com.google.android.material.chip.Chip` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/Chip;.setChipIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L32f134.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/Chip;.setChipIconVisible:(I)V` @kind virtual;
  #L32f13a.  return @kind void;
}
procedure `void` `setChipIconResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f14c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f150.  if v0 == 0 then goto L32f15a;
  #L32f154.  call `setChipIconResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconResource:(I)V` @kind virtual;
  #L32f15a.  return @kind void;
}
procedure `void` `setChipIconSize`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f16c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f170.  if v0 == 0 then goto L32f17a;
  #L32f174.  call `setChipIconSize`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L32f17a.  return @kind void;
}
procedure `void` `setChipIconSizeResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f18c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f190.  if v0 == 0 then goto L32f19a;
  #L32f194.  call `setChipIconSizeResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSizeResource:(I)V` @kind virtual;
  #L32f19a.  return @kind void;
}
procedure `void` `setChipIconTint`(`com.google.android.material.chip.Chip` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f1ac.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f1b0.  if v0 == 0 then goto L32f1ba;
  #L32f1b4.  call `setChipIconTint`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32f1ba.  return @kind void;
}
procedure `void` `setChipIconTintResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f1cc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f1d0.  if v0 == 0 then goto L32f1da;
  #L32f1d4.  call `setChipIconTintResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTintResource:(I)V` @kind virtual;
  #L32f1da.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f20c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f210.  if v0 == 0 then goto L32f21a;
  #L32f214.  call `setChipIconVisible`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @kind virtual;
  #L32f21a.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f1ec.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f1f0.  if v0 == 0 then goto L32f1fa;
  #L32f1f4.  call `setChipIconVisible`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L32f1fa.  return @kind void;
}
procedure `void` `setChipMinHeight`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipMinHeight:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f22c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f230.  if v0 == 0 then goto L32f23a;
  #L32f234.  call `setChipMinHeight`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L32f23a.  return @kind void;
}
procedure `void` `setChipMinHeightResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipMinHeightResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f24c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f250.  if v0 == 0 then goto L32f25a;
  #L32f254.  call `setChipMinHeightResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeightResource:(I)V` @kind virtual;
  #L32f25a.  return @kind void;
}
procedure `void` `setChipStartPadding`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f26c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f270.  if v0 == 0 then goto L32f27a;
  #L32f274.  call `setChipStartPadding`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L32f27a.  return @kind void;
}
procedure `void` `setChipStartPaddingResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f28c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f290.  if v0 == 0 then goto L32f29a;
  #L32f294.  call `setChipStartPaddingResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPaddingResource:(I)V` @kind virtual;
  #L32f29a.  return @kind void;
}
procedure `void` `setChipStrokeColor`(`com.google.android.material.chip.Chip` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f2ac.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f2b0.  if v0 == 0 then goto L32f2ba;
  #L32f2b4.  call `setChipStrokeColor`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32f2ba.  return @kind void;
}
procedure `void` `setChipStrokeColorResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f2cc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f2d0.  if v0 == 0 then goto L32f2da;
  #L32f2d4.  call `setChipStrokeColorResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColorResource:(I)V` @kind virtual;
  #L32f2da.  return @kind void;
}
procedure `void` `setChipStrokeWidth`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f2ec.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f2f0.  if v0 == 0 then goto L32f2fa;
  #L32f2f4.  call `setChipStrokeWidth`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L32f2fa.  return @kind void;
}
procedure `void` `setChipStrokeWidthResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f30c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f310.  if v0 == 0 then goto L32f31a;
  #L32f314.  call `setChipStrokeWidthResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidthResource:(I)V` @kind virtual;
  #L32f31a.  return @kind void;
}
procedure `void` `setChipText`(`com.google.android.material.chip.Chip` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setChipText:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;

  #L32f32c.  call `setText`(v0, v1) @signature `Lcom/google/android/material/chip/Chip;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L32f332.  return @kind void;
}
procedure `void` `setChipTextResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setChipTextResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f344.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/chip/Chip;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L32f34a.  v0:= temp @kind object;
  #L32f34c.  call temp:= `getString`(v0, v2) @signature `Landroid/content/res/Resources;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L32f352.  v2:= temp @kind object;
  #L32f354.  call `setText`(v1, v2) @signature `Lcom/google/android/material/chip/Chip;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L32f35a.  return @kind void;
}
procedure `void` `setCloseIcon`(`com.google.android.material.chip.Chip` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f36c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f370.  if v0 == 0 then goto L32f37a;
  #L32f374.  call `setCloseIcon`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L32f37a.  return @kind void;
}
procedure `void` `setCloseIconContentDescription`(`com.google.android.material.chip.Chip` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconContentDescription:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f38c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f390.  if v0 == 0 then goto L32f39a;
  #L32f394.  call `setCloseIconContentDescription`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconContentDescription:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L32f39a.  return @kind void;
}
procedure `void` `setCloseIconEnabled`(`com.google.android.material.chip.Chip` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32f3ac.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconVisible:(Z)V` @kind virtual;
  #L32f3b2.  return @kind void;
}
procedure `void` `setCloseIconEnabledResource`(`com.google.android.material.chip.Chip` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L32f3c4.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconVisible:(I)V` @kind virtual;
  #L32f3ca.  return @kind void;
}
procedure `void` `setCloseIconEndPadding`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f3dc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f3e0.  if v0 == 0 then goto L32f3ea;
  #L32f3e4.  call `setCloseIconEndPadding`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L32f3ea.  return @kind void;
}
procedure `void` `setCloseIconEndPaddingResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f3fc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f400.  if v0 == 0 then goto L32f40a;
  #L32f404.  call `setCloseIconEndPaddingResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPaddingResource:(I)V` @kind virtual;
  #L32f40a.  return @kind void;
}
procedure `void` `setCloseIconResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f488.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f48c.  if v0 == 0 then goto L32f496;
  #L32f490.  call `setCloseIconResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconResource:(I)V` @kind virtual;
  #L32f496.  return @kind void;
}
procedure `void` `setCloseIconSize`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f4a8.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f4ac.  if v0 == 0 then goto L32f4b6;
  #L32f4b0.  call `setCloseIconSize`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L32f4b6.  return @kind void;
}
procedure `void` `setCloseIconSizeResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f4c8.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f4cc.  if v0 == 0 then goto L32f4d6;
  #L32f4d0.  call `setCloseIconSizeResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSizeResource:(I)V` @kind virtual;
  #L32f4d6.  return @kind void;
}
procedure `void` `setCloseIconStartPadding`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f4e8.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f4ec.  if v0 == 0 then goto L32f4f6;
  #L32f4f0.  call `setCloseIconStartPadding`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L32f4f6.  return @kind void;
}
procedure `void` `setCloseIconStartPaddingResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f508.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f50c.  if v0 == 0 then goto L32f516;
  #L32f510.  call `setCloseIconStartPaddingResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPaddingResource:(I)V` @kind virtual;
  #L32f516.  return @kind void;
}
procedure `void` `setCloseIconTint`(`com.google.android.material.chip.Chip` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f528.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f52c.  if v0 == 0 then goto L32f536;
  #L32f530.  call `setCloseIconTint`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32f536.  return @kind void;
}
procedure `void` `setCloseIconTintResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f548.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f54c.  if v0 == 0 then goto L32f556;
  #L32f550.  call `setCloseIconTintResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTintResource:(I)V` @kind virtual;
  #L32f556.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f588.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f58c.  if v0 == 0 then goto L32f596;
  #L32f590.  call `setCloseIconVisible`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @kind virtual;
  #L32f596.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setCloseIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f568.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f56c.  if v0 == 0 then goto L32f576;
  #L32f570.  call `setCloseIconVisible`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L32f576.  return @kind void;
}
procedure `void` `setCompoundDrawables`(`com.google.android.material.chip.Chip` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `android.graphics.drawable.Drawable` v2 @kind object, `android.graphics.drawable.Drawable` v3 @kind object, `android.graphics.drawable.Drawable` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setCompoundDrawables:(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L32f5a8.  if v1 != 0 then goto L32f5c8;
  #L32f5ac.  if v3 != 0 then goto L32f5b8;
  #L32f5b0.  call `setCompoundDrawables`(v0, v1, v2, v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setCompoundDrawables:(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L32f5b6.  return @kind void;
  #L32f5b8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f5bc.  v2:= "Please set end drawable using R.attr#closeIcon." @kind object;
  #L32f5c0.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f5c6.  throw v1;
  #L32f5c8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f5cc.  v2:= "Please set start drawable using R.attr#chipIcon." @kind object;
  #L32f5d0.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f5d6.  throw v1;
}
procedure `void` `setCompoundDrawablesRelative`(`com.google.android.material.chip.Chip` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `android.graphics.drawable.Drawable` v2 @kind object, `android.graphics.drawable.Drawable` v3 @kind object, `android.graphics.drawable.Drawable` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setCompoundDrawablesRelative:(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L32f5e8.  if v1 != 0 then goto L32f608;
  #L32f5ec.  if v3 != 0 then goto L32f5f8;
  #L32f5f0.  call `setCompoundDrawablesRelative`(v0, v1, v2, v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setCompoundDrawablesRelative:(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L32f5f6.  return @kind void;
  #L32f5f8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f5fc.  v2:= "Please set end drawable using R.attr#closeIcon." @kind object;
  #L32f600.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f606.  throw v1;
  #L32f608.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f60c.  v2:= "Please set start drawable using R.attr#chipIcon." @kind object;
  #L32f610.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f616.  throw v1;
}
procedure `void` `setCompoundDrawablesRelativeWithIntrinsicBounds`(`com.google.android.material.chip.Chip` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/chip/Chip;.setCompoundDrawablesRelativeWithIntrinsicBounds:(IIII)V` @AccessFlag PUBLIC {
    temp;

  #L32f668.  if v1 != 0 then goto L32f688;
  #L32f66c.  if v3 != 0 then goto L32f678;
  #L32f670.  call `setCompoundDrawablesRelativeWithIntrinsicBounds`(v0, v1, v2, v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setCompoundDrawablesRelativeWithIntrinsicBounds:(IIII)V` @kind super;
  #L32f676.  return @kind void;
  #L32f678.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f67c.  v2:= "Please set end drawable using R.attr#closeIcon." @kind object;
  #L32f680.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f686.  throw v1;
  #L32f688.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f68c.  v2:= "Please set start drawable using R.attr#chipIcon." @kind object;
  #L32f690.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f696.  throw v1;
}
procedure `void` `setCompoundDrawablesRelativeWithIntrinsicBounds`(`com.google.android.material.chip.Chip` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `android.graphics.drawable.Drawable` v2 @kind object, `android.graphics.drawable.Drawable` v3 @kind object, `android.graphics.drawable.Drawable` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setCompoundDrawablesRelativeWithIntrinsicBounds:(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L32f628.  if v1 != 0 then goto L32f648;
  #L32f62c.  if v3 != 0 then goto L32f638;
  #L32f630.  call `setCompoundDrawablesRelativeWithIntrinsicBounds`(v0, v1, v2, v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setCompoundDrawablesRelativeWithIntrinsicBounds:(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L32f636.  return @kind void;
  #L32f638.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f63c.  v2:= "Please set end drawable using R.attr#closeIcon." @kind object;
  #L32f640.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f646.  throw v1;
  #L32f648.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f64c.  v2:= "Please set start drawable using R.attr#chipIcon." @kind object;
  #L32f650.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f656.  throw v1;
}
procedure `void` `setCompoundDrawablesWithIntrinsicBounds`(`com.google.android.material.chip.Chip` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/chip/Chip;.setCompoundDrawablesWithIntrinsicBounds:(IIII)V` @AccessFlag PUBLIC {
    temp;

  #L32f6e8.  if v1 != 0 then goto L32f708;
  #L32f6ec.  if v3 != 0 then goto L32f6f8;
  #L32f6f0.  call `setCompoundDrawablesWithIntrinsicBounds`(v0, v1, v2, v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setCompoundDrawablesWithIntrinsicBounds:(IIII)V` @kind super;
  #L32f6f6.  return @kind void;
  #L32f6f8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f6fc.  v2:= "Please set end drawable using R.attr#closeIcon." @kind object;
  #L32f700.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f706.  throw v1;
  #L32f708.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f70c.  v2:= "Please set start drawable using R.attr#chipIcon." @kind object;
  #L32f710.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f716.  throw v1;
}
procedure `void` `setCompoundDrawablesWithIntrinsicBounds`(`com.google.android.material.chip.Chip` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `android.graphics.drawable.Drawable` v2 @kind object, `android.graphics.drawable.Drawable` v3 @kind object, `android.graphics.drawable.Drawable` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setCompoundDrawablesWithIntrinsicBounds:(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L32f6a8.  if v1 != 0 then goto L32f6c8;
  #L32f6ac.  if v3 != 0 then goto L32f6b8;
  #L32f6b0.  call `setCompoundDrawablesWithIntrinsicBounds`(v0, v1, v2, v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setCompoundDrawablesWithIntrinsicBounds:(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L32f6b6.  return @kind void;
  #L32f6b8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f6bc.  v2:= "Please set right drawable using R.attr#closeIcon." @kind object;
  #L32f6c0.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f6c6.  throw v1;
  #L32f6c8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32f6cc.  v2:= "Please set left drawable using R.attr#chipIcon." @kind object;
  #L32f6d0.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f6d6.  throw v1;
}
procedure `void` `setEllipsize`(`com.google.android.material.chip.Chip` v1 @kind this, `android.text.TextUtils$TruncateAt` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f728.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f72c.  if v0 != 0 then goto L32f732;
  #L32f730.  return @kind void;
  #L32f732.  v0:= `@@android.text.TextUtils$TruncateAt.MARQUEE` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L32f736.  if v2 == v0 then goto L32f750;
  #L32f73a.  call `setEllipsize`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind super;
  #L32f740.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f744.  if v0 == 0 then goto L32f74e;
  #L32f748.  call `setEllipsize`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L32f74e.  return @kind void;
  #L32f750.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32f754.  v0:= "Text within a chip are not allowed to scroll." @kind object;
  #L32f758.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f75e.  throw v2;
}
procedure `void` `setGravity`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setGravity:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f7a8.  v0:= 8388627I;
  #L32f7ae.  if v2 == v0 then goto L32f7c2;
  #L32f7b2.  v2:= "Chip" @kind object;
  #L32f7b6.  v0:= "Chip text must be vertically center and start aligned" @kind object;
  #L32f7ba.  call temp:= `w`(v2, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L32f7c0.  goto L32f7c8;
  #L32f7c2.  call `setGravity`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setGravity:(I)V` @kind super;
  #L32f7c8.  return @kind void;
}
procedure `void` `setHideMotionSpec`(`com.google.android.material.chip.Chip` v1 @kind this, `com.google.android.material.animation.MotionSpec` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f7dc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f7e0.  if v0 == 0 then goto L32f7ea;
  #L32f7e4.  call `setHideMotionSpec`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L32f7ea.  return @kind void;
}
procedure `void` `setHideMotionSpecResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setHideMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f7fc.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f800.  if v0 == 0 then goto L32f80a;
  #L32f804.  call `setHideMotionSpecResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpecResource:(I)V` @kind virtual;
  #L32f80a.  return @kind void;
}
procedure `void` `setIconEndPadding`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f81c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f820.  if v0 == 0 then goto L32f82a;
  #L32f824.  call `setIconEndPadding`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L32f82a.  return @kind void;
}
procedure `void` `setIconEndPaddingResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f83c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f840.  if v0 == 0 then goto L32f84a;
  #L32f844.  call `setIconEndPaddingResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPaddingResource:(I)V` @kind virtual;
  #L32f84a.  return @kind void;
}
procedure `void` `setIconStartPadding`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f85c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f860.  if v0 == 0 then goto L32f86a;
  #L32f864.  call `setIconStartPadding`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L32f86a.  return @kind void;
}
procedure `void` `setIconStartPaddingResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f87c.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f880.  if v0 == 0 then goto L32f88a;
  #L32f884.  call `setIconStartPaddingResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPaddingResource:(I)V` @kind virtual;
  #L32f88a.  return @kind void;
}
procedure `void` `setLines`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setLines:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f89c.  v0:= 1I;
  #L32f89e.  if v2 > v0 then goto L32f8aa;
  #L32f8a2.  call `setLines`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setLines:(I)V` @kind super;
  #L32f8a8.  return @kind void;
  #L32f8aa.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32f8ae.  v0:= "Chip does not support multi-line text" @kind object;
  #L32f8b2.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f8b8.  throw v2;
}
procedure `void` `setMaxLines`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setMaxLines:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f8cc.  v0:= 1I;
  #L32f8ce.  if v2 > v0 then goto L32f8da;
  #L32f8d2.  call `setMaxLines`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setMaxLines:(I)V` @kind super;
  #L32f8d8.  return @kind void;
  #L32f8da.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32f8de.  v0:= "Chip does not support multi-line text" @kind object;
  #L32f8e2.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f8e8.  throw v2;
}
procedure `void` `setMaxWidth`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setMaxWidth:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f8fc.  call `setMaxWidth`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setMaxWidth:(I)V` @kind super;
  #L32f902.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f906.  if v0 == 0 then goto L32f910;
  #L32f90a.  call `setMaxWidth`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @kind virtual;
  #L32f910.  return @kind void;
}
procedure `void` `setMinLines`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setMinLines:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f924.  v0:= 1I;
  #L32f926.  if v2 > v0 then goto L32f932;
  #L32f92a.  call `setMinLines`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setMinLines:(I)V` @kind super;
  #L32f930.  return @kind void;
  #L32f932.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32f936.  v0:= "Chip does not support multi-line text" @kind object;
  #L32f93a.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f940.  throw v2;
}
procedure `void` `setOnCheckedChangeListenerInternal`(`com.google.android.material.chip.Chip` v0 @kind this, `android.widget.CompoundButton$OnCheckedChangeListener` v1 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setOnCheckedChangeListenerInternal:(Landroid/widget/CompoundButton$OnCheckedChangeListener;)V` @AccessFlag  {
    temp;

  #L32f954.  v0.`com.google.android.material.chip.Chip.onCheckedChangeListenerInternal` @type ^`android.widget.CompoundButton$OnCheckedChangeListener` := v1 @kind object;
  #L32f958.  return @kind void;
}
procedure `void` `setOnCloseIconClickListener`(`com.google.android.material.chip.Chip` v0 @kind this, `android.view.View$OnClickListener` v1 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setOnCloseIconClickListener:(Landroid/view/View$OnClickListener;)V` @AccessFlag PUBLIC {
    temp;

  #L32f96c.  v0.`com.google.android.material.chip.Chip.onCloseIconClickListener` @type ^`android.view.View$OnClickListener` := v1 @kind object;
  #L32f970.  return @kind void;
}
procedure `void` `setRippleColor`(`com.google.android.material.chip.Chip` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f984.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f988.  if v0 == 0 then goto L32f992;
  #L32f98c.  call `setRippleColor`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L32f992.  return @kind void;
}
procedure `void` `setRippleColorResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setRippleColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f9a4.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f9a8.  if v0 == 0 then goto L32f9b2;
  #L32f9ac.  call `setRippleColorResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColorResource:(I)V` @kind virtual;
  #L32f9b2.  return @kind void;
}
procedure `void` `setShowMotionSpec`(`com.google.android.material.chip.Chip` v1 @kind this, `com.google.android.material.animation.MotionSpec` v2 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f9c4.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f9c8.  if v0 == 0 then goto L32f9d2;
  #L32f9cc.  call `setShowMotionSpec`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L32f9d2.  return @kind void;
}
procedure `void` `setShowMotionSpecResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setShowMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f9e4.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32f9e8.  if v0 == 0 then goto L32f9f2;
  #L32f9ec.  call `setShowMotionSpecResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpecResource:(I)V` @kind virtual;
  #L32f9f2.  return @kind void;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.Chip` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setSingleLine:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fa04.  if v2 == 0 then goto L32fa10;
  #L32fa08.  call `setSingleLine`(v1, v2) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setSingleLine:(Z)V` @kind super;
  #L32fa0e.  return @kind void;
  #L32fa10.  v2:= new `java.lang.UnsupportedOperationException`;
  #L32fa14.  v0:= "Chip does not support multi-line text" @kind object;
  #L32fa18.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32fa1e.  throw v2;
}
procedure `void` `setText`(`com.google.android.material.chip.Chip` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `android.widget.TextView$BufferType` v4 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setText:(Ljava/lang/CharSequence;Landroid/widget/TextView$BufferType;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32fa30.  v0:= v2.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fa34.  if v0 != 0 then goto L32fa3a;
  #L32fa38.  return @kind void;
  #L32fa3a.  if v3 != 0 then goto L32fa42;
  #L32fa3e.  v3:= "" @kind object;
  #L32fa42.  call temp:= `getInstance`() @signature `Landroidx/core/text/BidiFormatter;.getInstance:()Landroidx/core/text/BidiFormatter;` @kind static;
  #L32fa48.  v0:= temp @kind object;
  #L32fa4a.  call temp:= `unicodeWrap`(v0, v3) @signature `Landroidx/core/text/BidiFormatter;.unicodeWrap:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind virtual;
  #L32fa50.  v0:= temp @kind object;
  #L32fa52.  v1:= v2.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fa56.  call temp:= `shouldDrawText`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.shouldDrawText:()Z` @kind virtual;
  #L32fa5c.  v1:= temp;
  #L32fa5e.  if v1 == 0 then goto L32fa64;
  #L32fa62.  v0:= 0I;
  #L32fa64.  call `setText`(v2, v0, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setText:(Ljava/lang/CharSequence;Landroid/widget/TextView$BufferType;)V` @kind super;
  #L32fa6a.  v4:= v2.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fa6e.  if v4 == 0 then goto L32fa78;
  #L32fa72.  call `setText`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L32fa78.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.chip.Chip` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/chip/Chip;.setTextAppearance:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32fb3c.  call `setTextAppearance`(v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setTextAppearance:(I)V` @kind super;
  #L32fb42.  v0:= v3.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fb46.  if v0 == 0 then goto L32fb50;
  #L32fb4a.  call `setTextAppearanceResource`(v0, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearanceResource:(I)V` @kind virtual;
  #L32fb50.  call temp:= `getTextAppearance`(v3) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32fb56.  v4:= temp @kind object;
  #L32fb58.  if v4 == 0 then goto L32fb8c;
  #L32fb5c.  call temp:= `getTextAppearance`(v3) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32fb62.  v4:= temp @kind object;
  #L32fb64.  call temp:= `getContext`(v3) @signature `Lcom/google/android/material/chip/Chip;.getContext:()Landroid/content/Context;` @kind virtual;
  #L32fb6a.  v0:= temp @kind object;
  #L32fb6c.  call temp:= `getPaint`(v3) @signature `Lcom/google/android/material/chip/Chip;.getPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L32fb72.  v1:= temp @kind object;
  #L32fb74.  v2:= v3.`com.google.android.material.chip.Chip.fontCallback` @type ^`androidx.core.content.res.ResourcesCompat$FontCallback` @kind object;
  #L32fb78.  call `updateMeasureState`(v4, v0, v1, v2) @signature `Lcom/google/android/material/resources/TextAppearance;.updateMeasureState:(Landroid/content/Context;Landroid/text/TextPaint;Landroidx/core/content/res/ResourcesCompat$FontCallback;)V` @kind virtual;
  #L32fb7e.  call temp:= `getTextAppearance`(v3) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32fb84.  v4:= temp @kind object;
  #L32fb86.  call `updateTextPaintDrawState`(v3, v4) @signature `Lcom/google/android/material/chip/Chip;.updateTextPaintDrawState:(Lcom/google/android/material/resources/TextAppearance;)V` @kind direct;
  #L32fb8c.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.chip.Chip` v2 @kind this, `android.content.Context` v3 @kind object, `int` v4 ) @signature `Lcom/google/android/material/chip/Chip;.setTextAppearance:(Landroid/content/Context;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32fa8c.  call `setTextAppearance`(v2, v3, v4) @signature `Landroidx/appcompat/widget/AppCompatCheckBox;.setTextAppearance:(Landroid/content/Context;I)V` @kind super;
  #L32fa92.  v0:= v2.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fa96.  if v0 == 0 then goto L32faa0;
  #L32fa9a.  call `setTextAppearanceResource`(v0, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearanceResource:(I)V` @kind virtual;
  #L32faa0.  call temp:= `getTextAppearance`(v2) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32faa6.  v4:= temp @kind object;
  #L32faa8.  if v4 == 0 then goto L32fad4;
  #L32faac.  call temp:= `getTextAppearance`(v2) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32fab2.  v4:= temp @kind object;
  #L32fab4.  call temp:= `getPaint`(v2) @signature `Lcom/google/android/material/chip/Chip;.getPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L32faba.  v0:= temp @kind object;
  #L32fabc.  v1:= v2.`com.google.android.material.chip.Chip.fontCallback` @type ^`androidx.core.content.res.ResourcesCompat$FontCallback` @kind object;
  #L32fac0.  call `updateMeasureState`(v4, v3, v0, v1) @signature `Lcom/google/android/material/resources/TextAppearance;.updateMeasureState:(Landroid/content/Context;Landroid/text/TextPaint;Landroidx/core/content/res/ResourcesCompat$FontCallback;)V` @kind virtual;
  #L32fac6.  call temp:= `getTextAppearance`(v2) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32facc.  v3:= temp @kind object;
  #L32face.  call `updateTextPaintDrawState`(v2, v3) @signature `Lcom/google/android/material/chip/Chip;.updateTextPaintDrawState:(Lcom/google/android/material/resources/TextAppearance;)V` @kind direct;
  #L32fad4.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.chip.Chip` v4 @kind this, `com.google.android.material.resources.TextAppearance` v5 @kind object) @signature `Lcom/google/android/material/chip/Chip;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32fae8.  v0:= v4.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32faec.  if v0 == 0 then goto L32faf6;
  #L32faf0.  call `setTextAppearance`(v0, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L32faf6.  call temp:= `getTextAppearance`(v4) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32fafc.  v0:= temp @kind object;
  #L32fafe.  if v0 == 0 then goto L32fb2a;
  #L32fb02.  call temp:= `getTextAppearance`(v4) @signature `Lcom/google/android/material/chip/Chip;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind direct;
  #L32fb08.  v0:= temp @kind object;
  #L32fb0a.  call temp:= `getContext`(v4) @signature `Lcom/google/android/material/chip/Chip;.getContext:()Landroid/content/Context;` @kind virtual;
  #L32fb10.  v1:= temp @kind object;
  #L32fb12.  call temp:= `getPaint`(v4) @signature `Lcom/google/android/material/chip/Chip;.getPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L32fb18.  v2:= temp @kind object;
  #L32fb1a.  v3:= v4.`com.google.android.material.chip.Chip.fontCallback` @type ^`androidx.core.content.res.ResourcesCompat$FontCallback` @kind object;
  #L32fb1e.  call `updateMeasureState`(v0, v1, v2, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.updateMeasureState:(Landroid/content/Context;Landroid/text/TextPaint;Landroidx/core/content/res/ResourcesCompat$FontCallback;)V` @kind virtual;
  #L32fb24.  call `updateTextPaintDrawState`(v4, v5) @signature `Lcom/google/android/material/chip/Chip;.updateTextPaintDrawState:(Lcom/google/android/material/resources/TextAppearance;)V` @kind direct;
  #L32fb2a.  return @kind void;
}
procedure `void` `setTextAppearanceResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setTextAppearanceResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fba0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fba4.  if v0 == 0 then goto L32fbae;
  #L32fba8.  call `setTextAppearanceResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearanceResource:(I)V` @kind virtual;
  #L32fbae.  call temp:= `getContext`(v1) @signature `Lcom/google/android/material/chip/Chip;.getContext:()Landroid/content/Context;` @kind virtual;
  #L32fbb4.  v0:= temp @kind object;
  #L32fbb6.  call `setTextAppearance`(v1, v0, v2) @signature `Lcom/google/android/material/chip/Chip;.setTextAppearance:(Landroid/content/Context;I)V` @kind virtual;
  #L32fbbc.  return @kind void;
}
procedure `void` `setTextEndPadding`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setTextEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fbd0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fbd4.  if v0 == 0 then goto L32fbde;
  #L32fbd8.  call `setTextEndPadding`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L32fbde.  return @kind void;
}
procedure `void` `setTextEndPaddingResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setTextEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fbf0.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fbf4.  if v0 == 0 then goto L32fbfe;
  #L32fbf8.  call `setTextEndPaddingResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPaddingResource:(I)V` @kind virtual;
  #L32fbfe.  return @kind void;
}
procedure `void` `setTextStartPadding`(`com.google.android.material.chip.Chip` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setTextStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fc10.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fc14.  if v0 == 0 then goto L32fc1e;
  #L32fc18.  call `setTextStartPadding`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L32fc1e.  return @kind void;
}
procedure `void` `setTextStartPaddingResource`(`com.google.android.material.chip.Chip` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/Chip;.setTextStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fc30.  v0:= v1.`com.google.android.material.chip.Chip.chipDrawable` @type ^`com.google.android.material.chip.ChipDrawable` @kind object;
  #L32fc34.  if v0 == 0 then goto L32fc3e;
  #L32fc38.  call `setTextStartPaddingResource`(v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPaddingResource:(I)V` @kind virtual;
  #L32fc3e.  return @kind void;
}
