record `com.jaredrummler.materialspinner.MaterialSpinner$3` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.jaredrummler.materialspinner.MaterialSpinner` `com.jaredrummler.materialspinner.MaterialSpinner$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.jaredrummler.materialspinner.MaterialSpinner$3` v0 @kind this, `com.jaredrummler.materialspinner.MaterialSpinner` v1 @kind object) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinner$3;.<init>:(Lcom/jaredrummler/materialspinner/MaterialSpinner;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35f140.  v0.`com.jaredrummler.materialspinner.MaterialSpinner$3.this$0` @type ^`com.jaredrummler.materialspinner.MaterialSpinner` := v1 @kind object;
  #L35f144.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35f14a.  return @kind void;
}
procedure `void` `run`(`com.jaredrummler.materialspinner.MaterialSpinner$3` v1 @kind this) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinner$3;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35f15c.  v0:= v1.`com.jaredrummler.materialspinner.MaterialSpinner$3.this$0` @type ^`com.jaredrummler.materialspinner.MaterialSpinner` @kind object;
  #L35f160.  call `expand`(v0) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinner;.expand:()V` @kind virtual;
  #L35f166.  return @kind void;
}
