record `com.jaredrummler.materialspinner.MaterialSpinnerAdapter` @kind class @AccessFlag PUBLIC extends `com.jaredrummler.materialspinner.MaterialSpinnerBaseAdapter` @kind class {
  `java.util.List` `com.jaredrummler.materialspinner.MaterialSpinnerAdapter.items` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.jaredrummler.materialspinner.MaterialSpinnerAdapter` v0 @kind this, `android.content.Context` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinnerAdapter;.<init>:(Landroid/content/Context;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L35f300.  call `<init>`(v0, v1) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinnerBaseAdapter;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L35f306.  v0.`com.jaredrummler.materialspinner.MaterialSpinnerAdapter.items` @type ^`java.util.List` := v2 @kind object;
  #L35f30a.  return @kind void;
}
procedure `java.lang.Object` `get`(`com.jaredrummler.materialspinner.MaterialSpinnerAdapter` v1 @kind this, `int` v2 ) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinnerAdapter;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35f27c.  v0:= v1.`com.jaredrummler.materialspinner.MaterialSpinnerAdapter.items` @type ^`java.util.List` @kind object;
  #L35f280.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35f286.  v2:= temp @kind object;
  #L35f288.  return v2 @kind object;
}
procedure `int` `getCount`(`com.jaredrummler.materialspinner.MaterialSpinnerAdapter` v2 @kind this) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinnerAdapter;.getCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35f254.  v0:= v2.`com.jaredrummler.materialspinner.MaterialSpinnerAdapter.items` @type ^`java.util.List` @kind object;
  #L35f258.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35f25e.  v0:= temp;
  #L35f260.  v1:= 1I;
  #L35f262.  if v0 != v1 then goto L35f268;
  #L35f266.  return v0;
  #L35f268.  v0:= v0 - v1 @kind int;
  #L35f26a.  return v0;
}
procedure `java.lang.Object` `getItem`(`com.jaredrummler.materialspinner.MaterialSpinnerAdapter` v2 @kind this, `int` v3 ) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinnerAdapter;.getItem:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35f29c.  call temp:= `getSelectedIndex`(v2) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinnerAdapter;.getSelectedIndex:()I` @kind virtual;
  #L35f2a2.  v0:= temp;
  #L35f2a4.  if v3 < v0 then goto L35f2ca;
  #L35f2a8.  v0:= v2.`com.jaredrummler.materialspinner.MaterialSpinnerAdapter.items` @type ^`java.util.List` @kind object;
  #L35f2ac.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35f2b2.  v0:= temp;
  #L35f2b4.  v1:= 1I;
  #L35f2b6.  if v0 == v1 then goto L35f2ca;
  #L35f2ba.  v0:= v2.`com.jaredrummler.materialspinner.MaterialSpinnerAdapter.items` @type ^`java.util.List` @kind object;
  #L35f2be.  v3:= v3 + v1 @kind int;
  #L35f2c0.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35f2c6.  v3:= temp @kind object;
  #L35f2c8.  return v3 @kind object;
  #L35f2ca.  v0:= v2.`com.jaredrummler.materialspinner.MaterialSpinnerAdapter.items` @type ^`java.util.List` @kind object;
  #L35f2ce.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35f2d4.  v3:= temp @kind object;
  #L35f2d6.  return v3 @kind object;
}
procedure `java.util.List` `getItems`(`com.jaredrummler.materialspinner.MaterialSpinnerAdapter` v1 @kind this) @signature `Lcom/jaredrummler/materialspinner/MaterialSpinnerAdapter;.getItems:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35f2e8.  v0:= v1.`com.jaredrummler.materialspinner.MaterialSpinnerAdapter.items` @type ^`java.util.List` @kind object;
  #L35f2ec.  return v0 @kind object;
}
