record `com.arasthel.asyncjob.AsyncJob$3` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `com.arasthel.asyncjob.AsyncJob$OnBackgroundJob` `com.arasthel.asyncjob.AsyncJob$3.val$onBackgroundJob` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.arasthel.asyncjob.AsyncJob$3` v0 @kind this, `com.arasthel.asyncjob.AsyncJob$OnBackgroundJob` v1 @kind object) @signature `Lcom/arasthel/asyncjob/AsyncJob$3;.<init>:(Lcom/arasthel/asyncjob/AsyncJob$OnBackgroundJob;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ad5e8.  v0.`com.arasthel.asyncjob.AsyncJob$3.val$onBackgroundJob` @type ^`com.arasthel.asyncjob.AsyncJob$OnBackgroundJob` := v1 @kind object;
  #L2ad5ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ad5f2.  return @kind void;
}
procedure `void` `run`(`com.arasthel.asyncjob.AsyncJob$3` v1 @kind this) @signature `Lcom/arasthel/asyncjob/AsyncJob$3;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ad604.  v0:= v1.`com.arasthel.asyncjob.AsyncJob$3.val$onBackgroundJob` @type ^`com.arasthel.asyncjob.AsyncJob$OnBackgroundJob` @kind object;
  #L2ad608.  call `doOnBackground`(v0) @signature `Lcom/arasthel/asyncjob/AsyncJob$OnBackgroundJob;.doOnBackground:()V` @kind interface;
  #L2ad60e.  return @kind void;
}
