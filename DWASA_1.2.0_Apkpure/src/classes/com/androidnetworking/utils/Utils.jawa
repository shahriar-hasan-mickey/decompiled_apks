record `com.androidnetworking.utils.Utils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.androidnetworking.utils.Utils` v0 @kind this) @signature `Lcom/androidnetworking/utils/Utils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ad040.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ad046.  return @kind void;
}
procedure `com.androidnetworking.common.ANResponse` `decodeBitmap`(`okhttp3.Response` v5 @kind object, `int` v6 , `int` v7 , `android.graphics.Bitmap$Config` v8 @kind object, `android.graphics.BitmapFactory$Options` v9 @kind object, `android.widget.ImageView$ScaleType` v10 @kind object) @signature `Lcom/androidnetworking/utils/Utils;.decodeBitmap:(Lokhttp3/Response;IILandroid/graphics/Bitmap$Config;Landroid/graphics/BitmapFactory$Options;Landroid/widget/ImageView$ScaleType;)Lcom/androidnetworking/common/ANResponse;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2acd14.  v0:= 0I;
  #L2acd16.  v1:= new `byte`[v0];
  #L2acd1a.  call temp:= `body`(v5) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2acd20.  v2:= temp @kind object;
  #L2acd22.  call temp:= `source`(v2) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L2acd28.  v2:= temp @kind object;
  #L2acd2a.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L2acd30.  v2:= temp @kind object;
  #L2acd32.  call temp:= `readByteArray`(v2) @signature `Lokio/BufferedSource;.readByteArray:()[B` @kind interface;
  #L2acd38.  v1:= temp @kind object;
  #L2acd3a.  goto L2acd44;
  #L2acd3c.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L2acd3e.  call `printStackTrace`(v2) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L2acd44.  if v6 != 0 then goto L2acd5c;
  #L2acd48.  if v7 != 0 then goto L2acd5c;
  #L2acd4c.  v9.`android.graphics.BitmapFactory$Options.inPreferredConfig` @type ^`android.graphics.Bitmap$Config` := v8 @kind object;
  #L2acd50.  v6:= length @variable v1;
  #L2acd52.  call temp:= `decodeByteArray`(v1, v0, v6, v9) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2acd58.  v6:= temp @kind object;
  #L2acd5a.  goto L2acdca;
  #L2acd5c.  v8:= 1I;
  #L2acd5e.  v9.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v8 @kind boolean;
  #L2acd62.  v2:= length @variable v1;
  #L2acd64.  call temp:= `decodeByteArray`(v1, v0, v2, v9) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2acd6a.  v2:= v9.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L2acd6e.  v3:= v9.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L2acd72.  call temp:= `getResizedDimension`(v6, v7, v2, v3, v10) @signature `Lcom/androidnetworking/utils/Utils;.getResizedDimension:(IIIILandroid/widget/ImageView$ScaleType;)I` @kind static;
  #L2acd78.  v4:= temp;
  #L2acd7a.  call temp:= `getResizedDimension`(v7, v6, v3, v2, v10) @signature `Lcom/androidnetworking/utils/Utils;.getResizedDimension:(IIIILandroid/widget/ImageView$ScaleType;)I` @kind static;
  #L2acd80.  v6:= temp;
  #L2acd82.  v9.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v0 @kind boolean;
  #L2acd86.  call temp:= `findBestSampleSize`(v2, v3, v4, v6) @signature `Lcom/androidnetworking/utils/Utils;.findBestSampleSize:(IIII)I` @kind static;
  #L2acd8c.  v7:= temp;
  #L2acd8e.  v9.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v7;
  #L2acd92.  v7:= length @variable v1;
  #L2acd94.  call temp:= `decodeByteArray`(v1, v0, v7, v9) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2acd9a.  v7:= temp @kind object;
  #L2acd9c.  if v7 == 0 then goto L2acdc8;
  #L2acda0.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2acda6.  v9:= temp;
  #L2acda8.  if v9 > v4 then goto L2acdb8;
  #L2acdac.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2acdb2.  v9:= temp;
  #L2acdb4.  if v9 <= v6 then goto L2acdc8;
  #L2acdb8.  call temp:= `createScaledBitmap`(v7, v4, v6, v8) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L2acdbe.  v6:= temp @kind object;
  #L2acdc0.  call `recycle`(v7) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2acdc6.  goto L2acdca;
  #L2acdc8.  v6:= v7 @kind object;
  #L2acdca.  if v6 != 0 then goto L2acdea;
  #L2acdce.  v6:= new `com.androidnetworking.error.ANError`;
  #L2acdd2.  call `<init>`(v6, v5) @signature `Lcom/androidnetworking/error/ANError;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L2acdd8.  call temp:= `getErrorForParse`(v6) @signature `Lcom/androidnetworking/utils/Utils;.getErrorForParse:(Lcom/androidnetworking/error/ANError;)Lcom/androidnetworking/error/ANError;` @kind static;
  #L2acdde.  v5:= temp @kind object;
  #L2acde0.  call temp:= `failed`(v5) @signature `Lcom/androidnetworking/common/ANResponse;.failed:(Lcom/androidnetworking/error/ANError;)Lcom/androidnetworking/common/ANResponse;` @kind static;
  #L2acde6.  v5:= temp @kind object;
  #L2acde8.  return v5 @kind object;
  #L2acdea.  call temp:= `success`(v6) @signature `Lcom/androidnetworking/common/ANResponse;.success:(Ljava/lang/Object;)Lcom/androidnetworking/common/ANResponse;` @kind static;
  #L2acdf0.  v5:= temp @kind object;
  #L2acdf2.  return v5 @kind object;
  catch `java.io.IOException` @[L2acd1a..L2acd3a] goto L2acd3c;
}
procedure `com.androidnetworking.common.ANResponse` `decodeBitmap`(`okhttp3.Response` v6 @kind object, `int` v7 , `int` v8 , `android.graphics.Bitmap$Config` v9 @kind object, `android.widget.ImageView$ScaleType` v10 @kind object) @signature `Lcom/androidnetworking/utils/Utils;.decodeBitmap:(Lokhttp3/Response;IILandroid/graphics/Bitmap$Config;Landroid/widget/ImageView$ScaleType;)Lcom/androidnetworking/common/ANResponse;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ace14.  v4:= new `android.graphics.BitmapFactory$Options`;
  #L2ace18.  call `<init>`(v4) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2ace1e.  v0:= v6 @kind object;
  #L2ace20.  v1:= v7;
  #L2ace22.  v2:= v8;
  #L2ace24.  v3:= v9 @kind object;
  #L2ace26.  v5:= v10 @kind object;
  #L2ace28.  call temp:= `decodeBitmap`(v0, v1, v2, v3, v4, v5) @signature `Lcom/androidnetworking/utils/Utils;.decodeBitmap:(Lokhttp3/Response;IILandroid/graphics/Bitmap$Config;Landroid/graphics/BitmapFactory$Options;Landroid/widget/ImageView$ScaleType;)Lcom/androidnetworking/common/ANResponse;` @kind static;
  #L2ace2e.  v6:= temp @kind object;
  #L2ace30.  return v6 @kind object;
}
procedure `int` `findBestSampleSize`(`int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lcom/androidnetworking/utils/Utils;.findBestSampleSize:(IIII)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2aceb8.  v0:= (`double`) v4 @kind i2d;
  #L2aceba.  v2:= (`double`) v6 @kind i2d;
  #L2acebc.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acec2.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acec8.  v0:= v0 / v2 @kind double;
  #L2aceca.  v4:= (`double`) v5 @kind i2d;
  #L2acecc.  v6:= (`double`) v7 @kind i2d;
  #L2acece.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2aced4.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2aceda.  v4:= v4 / v6 @kind double;
  #L2acedc.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(DD)D` @kind static;
  #L2acee2.  v4:= temp @kind wide;
  #L2acee4.  v6:= 1.0F;
  #L2acee8.  v7:= 2.0F;
  #L2aceec.  v7:= v7 * v6 @kind float;
  #L2acef0.  v0:= (`double`) v7 @kind f2d;
  #L2acef2.  v2:= dcmpg(v0, v4);
  #L2acef6.  if v2 > 0 then goto L2acefe;
  #L2acefa.  v6:= v7;
  #L2acefc.  goto L2acee8;
  #L2acefe.  v4:= (`int`) v6 @kind f2i;
  #L2acf00.  return v4;
}
procedure `okhttp3.Cache` `getCache`(`android.content.Context` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/androidnetworking/utils/Utils;.getCache:(Landroid/content/Context;ILjava/lang/String;)Lokhttp3/Cache;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ad018.  v0:= new `okhttp3.Cache`;
  #L2ad01c.  call temp:= `getDiskCacheDir`(v1, v3) @signature `Lcom/androidnetworking/utils/Utils;.getDiskCacheDir:(Landroid/content/Context;Ljava/lang/String;)Ljava/io/File;` @kind static;
  #L2ad022.  v1:= temp @kind object;
  #L2ad024.  v2:= (`long`) v2 @kind i2l;
  #L2ad026.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;J)V` @kind direct;
  #L2ad02c.  return v0 @kind object;
}
procedure `java.io.File` `getDiskCacheDir`(`android.content.Context` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/androidnetworking/utils/Utils;.getDiskCacheDir:(Landroid/content/Context;Ljava/lang/String;)Ljava/io/File;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2acfc8.  v0:= new `java.io.File`;
  #L2acfcc.  call temp:= `getCacheDir`(v1) @signature `Landroid/content/Context;.getCacheDir:()Ljava/io/File;` @kind virtual;
  #L2acfd2.  v1:= temp @kind object;
  #L2acfd4.  call `<init>`(v0, v1, v2) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L2acfda.  return v0 @kind object;
}
procedure `com.androidnetworking.error.ANError` `getErrorForConnection`(`com.androidnetworking.error.ANError` v1 @kind object) @signature `Lcom/androidnetworking/utils/Utils;.getErrorForConnection:(Lcom/androidnetworking/error/ANError;)Lcom/androidnetworking/error/ANError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ace44.  v0:= "connectionError" @kind object;
  #L2ace48.  call `setErrorDetail`(v1, v0) @signature `Lcom/androidnetworking/error/ANError;.setErrorDetail:(Ljava/lang/String;)V` @kind virtual;
  #L2ace4e.  v0:= 0I;
  #L2ace50.  call `setErrorCode`(v1, v0) @signature `Lcom/androidnetworking/error/ANError;.setErrorCode:(I)V` @kind virtual;
  #L2ace56.  return v1 @kind object;
}
procedure `com.androidnetworking.error.ANError` `getErrorForParse`(`com.androidnetworking.error.ANError` v1 @kind object) @signature `Lcom/androidnetworking/utils/Utils;.getErrorForParse:(Lcom/androidnetworking/error/ANError;)Lcom/androidnetworking/error/ANError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ace68.  v0:= 0I;
  #L2ace6a.  call `setErrorCode`(v1, v0) @signature `Lcom/androidnetworking/error/ANError;.setErrorCode:(I)V` @kind virtual;
  #L2ace70.  v0:= "parseError" @kind object;
  #L2ace74.  call `setErrorDetail`(v1, v0) @signature `Lcom/androidnetworking/error/ANError;.setErrorDetail:(Ljava/lang/String;)V` @kind virtual;
  #L2ace7a.  return v1 @kind object;
}
procedure `com.androidnetworking.error.ANError` `getErrorForServerResponse`(`com.androidnetworking.error.ANError` v0 @kind object, `com.androidnetworking.common.ANRequest` v1 @kind object, `int` v2 ) @signature `Lcom/androidnetworking/utils/Utils;.getErrorForServerResponse:(Lcom/androidnetworking/error/ANError;Lcom/androidnetworking/common/ANRequest;I)Lcom/androidnetworking/error/ANError;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2ace8c.  call temp:= `parseNetworkError`(v1, v0) @signature `Lcom/androidnetworking/common/ANRequest;.parseNetworkError:(Lcom/androidnetworking/error/ANError;)Lcom/androidnetworking/error/ANError;` @kind virtual;
  #L2ace92.  v0:= temp @kind object;
  #L2ace94.  call `setErrorCode`(v0, v2) @signature `Lcom/androidnetworking/error/ANError;.setErrorCode:(I)V` @kind virtual;
  #L2ace9a.  v1:= "responseFromServerError" @kind object;
  #L2ace9e.  call `setErrorDetail`(v0, v1) @signature `Lcom/androidnetworking/error/ANError;.setErrorDetail:(Ljava/lang/String;)V` @kind virtual;
  #L2acea4.  return v0 @kind object;
}
procedure `java.lang.String` `getMimeType`(`java.lang.String` v1 @kind object) @signature `Lcom/androidnetworking/utils/Utils;.getMimeType:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2acfec.  call temp:= `getFileNameMap`() @signature `Ljava/net/URLConnection;.getFileNameMap:()Ljava/net/FileNameMap;` @kind static;
  #L2acff2.  v0:= temp @kind object;
  #L2acff4.  call temp:= `getContentTypeFor`(v0, v1) @signature `Ljava/net/FileNameMap;.getContentTypeFor:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L2acffa.  v1:= temp @kind object;
  #L2acffc.  if v1 != 0 then goto L2ad004;
  #L2ad000.  v1:= "application/octet-stream" @kind object;
  #L2ad004.  return v1 @kind object;
}
procedure `int` `getResizedDimension`(`int` v4 , `int` v5 , `int` v6 , `int` v7 , `android.widget.ImageView$ScaleType` v8 @kind object) @signature `Lcom/androidnetworking/utils/Utils;.getResizedDimension:(IIIILandroid/widget/ImageView$ScaleType;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2acf14.  if v4 != 0 then goto L2acf1e;
  #L2acf18.  if v5 != 0 then goto L2acf1e;
  #L2acf1c.  return v6;
  #L2acf1e.  v0:= `@@android.widget.ImageView$ScaleType.FIT_XY` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L2acf22.  if v8 != v0 then goto L2acf2e;
  #L2acf26.  if v4 != 0 then goto L2acf2c;
  #L2acf2a.  return v6;
  #L2acf2c.  return v4;
  #L2acf2e.  if v4 != 0 then goto L2acf54;
  #L2acf32.  v4:= (`double`) v5 @kind i2d;
  #L2acf34.  v7:= (`double`) v7 @kind i2d;
  #L2acf36.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acf3c.  call temp:= `isNaN`(v7) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acf42.  v4:= v4 / v7 @kind double;
  #L2acf44.  v6:= (`double`) v6 @kind i2d;
  #L2acf46.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acf4c.  v6:= v6 * v4 @kind double;
  #L2acf50.  v4:= (`int`) v6 @kind d2i;
  #L2acf52.  return v4;
  #L2acf54.  if v5 != 0 then goto L2acf5a;
  #L2acf58.  return v4;
  #L2acf5a.  v0:= (`double`) v7 @kind i2d;
  #L2acf5c.  v6:= (`double`) v6 @kind i2d;
  #L2acf5e.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acf64.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acf6a.  v0:= v0 / v6 @kind double;
  #L2acf6c.  v6:= `@@android.widget.ImageView$ScaleType.CENTER_CROP` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L2acf70.  if v8 != v6 then goto L2acf96;
  #L2acf74.  v6:= (`double`) v4 @kind i2d;
  #L2acf76.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acf7c.  v6:= v6 * v0 @kind double;
  #L2acf80.  v2:= (`double`) v5 @kind i2d;
  #L2acf82.  v5:= dcmpg(v6, v2);
  #L2acf86.  if v5 >= 0 then goto L2acf94;
  #L2acf8a.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acf90.  v2:= v2 / v0 @kind double;
  #L2acf92.  v4:= (`int`) v2 @kind d2i;
  #L2acf94.  return v4;
  #L2acf96.  v6:= (`double`) v4 @kind i2d;
  #L2acf98.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acf9e.  v6:= v6 * v0 @kind double;
  #L2acfa2.  v2:= (`double`) v5 @kind i2d;
  #L2acfa4.  v5:= dcmpl(v6, v2);
  #L2acfa8.  if v5 <= 0 then goto L2acfb6;
  #L2acfac.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2acfb2.  v2:= v2 / v0 @kind double;
  #L2acfb4.  v4:= (`int`) v2 @kind d2i;
  #L2acfb6.  return v4;
}
procedure `void` `saveFile`(`okhttp3.Response` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/androidnetworking/utils/Utils;.saveFile:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2ad058.  v0:= 2048I;
  #L2ad05c.  v0:= new `byte`[v0];
  #L2ad060.  v1:= 0I;
  #L2ad062.  call temp:= `body`(v3) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2ad068.  v3:= temp @kind object;
  #L2ad06a.  call temp:= `byteStream`(v3) @signature `Lokhttp3/ResponseBody;.byteStream:()Ljava/io/InputStream;` @kind virtual;
  #L2ad070.  v3:= temp @kind object;
  #L2ad072.  v2:= new `java.io.File`;
  #L2ad076.  call `<init>`(v2, v4) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ad07c.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L2ad082.  v4:= temp;
  #L2ad084.  if v4 != 0 then goto L2ad08e;
  #L2ad088.  call temp:= `mkdirs`(v2) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L2ad08e.  v4:= new `java.io.File`;
  #L2ad092.  call `<init>`(v4, v2, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L2ad098.  v5:= new `java.io.FileOutputStream`;
  #L2ad09c.  call `<init>`(v5, v4) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L2ad0a2.  call temp:= `read`(v3, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L2ad0a8.  v4:= temp;
  #L2ad0aa.  v1:= -1I;
  #L2ad0ac.  if v4 == v1 then goto L2ad0ba;
  #L2ad0b0.  v1:= 0I;
  #L2ad0b2.  call `write`(v5, v0, v1, v4) @signature `Ljava/io/FileOutputStream;.write:([BII)V` @kind virtual;
  #L2ad0b8.  goto L2ad0a2;
  #L2ad0ba.  call `flush`(v5) @signature `Ljava/io/FileOutputStream;.flush:()V` @kind virtual;
  #L2ad0c0.  if v3 == 0 then goto L2ad0d4;
  #L2ad0c4.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2ad0ca.  goto L2ad0d4;
  #L2ad0cc.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L2ad0ce.  call `printStackTrace`(v3) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L2ad0d4.  call `close`(v5) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L2ad0da.  goto L2ad0e4;
  #L2ad0dc.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L2ad0de.  call `printStackTrace`(v3) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L2ad0e4.  return @kind void;
  #L2ad0e6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ad0e8.  v1:= v5 @kind object;
  #L2ad0ea.  goto L2ad0f4;
  #L2ad0ec.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ad0ee.  goto L2ad0f4;
  #L2ad0f0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ad0f2.  v3:= v1 @kind object;
  #L2ad0f4.  if v3 == 0 then goto L2ad108;
  #L2ad0f8.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2ad0fe.  goto L2ad108;
  #L2ad100.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L2ad102.  call `printStackTrace`(v3) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L2ad108.  if v1 == 0 then goto L2ad11c;
  #L2ad10c.  call `close`(v1) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L2ad112.  goto L2ad11c;
  #L2ad114.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L2ad116.  call `printStackTrace`(v3) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L2ad11c.  goto L2ad120;
  #L2ad11e.  throw v4;
  #L2ad120.  goto L2ad11e;
  catch `java.lang.Throwable` @[L2ad062..L2ad072] goto L2ad0f0;
  catch `java.lang.Throwable` @[L2ad072..L2ad0a2] goto L2ad0ec;
  catch `java.lang.Throwable` @[L2ad0a2..L2ad0c0] goto L2ad0e6;
  catch `java.io.IOException` @[L2ad0c4..L2ad0ca] goto L2ad0cc;
  catch `java.io.IOException` @[L2ad0d4..L2ad0da] goto L2ad0dc;
  catch `java.io.IOException` @[L2ad0f8..L2ad0fe] goto L2ad100;
  catch `java.io.IOException` @[L2ad10c..L2ad112] goto L2ad114;
}
procedure `void` `sendAnalytics`(`com.androidnetworking.interfaces.AnalyticsListener` v11 @kind object, `long` v12 , `long` v14 , `long` v16 , `boolean` v18 ) @signature `Lcom/androidnetworking/utils/Utils;.sendAnalytics:(Lcom/androidnetworking/interfaces/AnalyticsListener;JJJZ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2ad184.  call temp:= `getInstance`() @signature `Lcom/androidnetworking/core/Core;.getInstance:()Lcom/androidnetworking/core/Core;` @kind static;
  #L2ad18a.  v0:= temp @kind object;
  #L2ad18c.  call temp:= `getExecutorSupplier`(v0) @signature `Lcom/androidnetworking/core/Core;.getExecutorSupplier:()Lcom/androidnetworking/core/ExecutorSupplier;` @kind virtual;
  #L2ad192.  v0:= temp @kind object;
  #L2ad194.  call temp:= `forMainThreadTasks`(v0) @signature `Lcom/androidnetworking/core/ExecutorSupplier;.forMainThreadTasks:()Ljava/util/concurrent/Executor;` @kind interface;
  #L2ad19a.  v0:= temp @kind object;
  #L2ad19c.  v10:= new `com.androidnetworking.utils.Utils$1`;
  #L2ad1a0.  v1:= v10 @kind object;
  #L2ad1a2.  v2:= v11 @kind object;
  #L2ad1a4.  v3:= v12 @kind wide;
  #L2ad1a6.  v5:= v14 @kind wide;
  #L2ad1a8.  v7:= v16 @kind wide;
  #L2ad1ac.  v9:= v18;
  #L2ad1b0.  call `<init>`(v1, v2, v3, v5, v7, v9) @signature `Lcom/androidnetworking/utils/Utils$1;.<init>:(Lcom/androidnetworking/interfaces/AnalyticsListener;JJJZ)V` @kind direct;
  #L2ad1b6.  call `execute`(v0, v10) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2ad1bc.  return @kind void;
}
