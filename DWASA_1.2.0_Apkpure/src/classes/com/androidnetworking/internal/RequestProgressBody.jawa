record `com.androidnetworking.internal.RequestProgressBody` @kind class @AccessFlag PUBLIC extends `okhttp3.RequestBody` @kind class {
  `okio.BufferedSink` `com.androidnetworking.internal.RequestProgressBody.bufferedSink` @AccessFlag PRIVATE;
  `okhttp3.RequestBody` `com.androidnetworking.internal.RequestProgressBody.requestBody` @AccessFlag PRIVATE_FINAL;
  `com.androidnetworking.internal.UploadProgressHandler` `com.androidnetworking.internal.RequestProgressBody.uploadProgressHandler` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.androidnetworking.internal.RequestProgressBody` v0 @kind this, `okhttp3.RequestBody` v1 @kind object, `com.androidnetworking.interfaces.UploadProgressListener` v2 @kind object) @signature `Lcom/androidnetworking/internal/RequestProgressBody;.<init>:(Lokhttp3/RequestBody;Lcom/androidnetworking/interfaces/UploadProgressListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ac51c.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L2ac522.  v0.`com.androidnetworking.internal.RequestProgressBody.requestBody` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L2ac526.  if v2 == 0 then goto L2ac538;
  #L2ac52a.  v1:= new `com.androidnetworking.internal.UploadProgressHandler`;
  #L2ac52e.  call `<init>`(v1, v2) @signature `Lcom/androidnetworking/internal/UploadProgressHandler;.<init>:(Lcom/androidnetworking/interfaces/UploadProgressListener;)V` @kind direct;
  #L2ac534.  v0.`com.androidnetworking.internal.RequestProgressBody.uploadProgressHandler` @type ^`com.androidnetworking.internal.UploadProgressHandler` := v1 @kind object;
  #L2ac538.  return @kind void;
}
procedure `com.androidnetworking.internal.UploadProgressHandler` `access$000`(`com.androidnetworking.internal.RequestProgressBody` v0 @kind object) @signature `Lcom/androidnetworking/internal/RequestProgressBody;.access$000:(Lcom/androidnetworking/internal/RequestProgressBody;)Lcom/androidnetworking/internal/UploadProgressHandler;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2ac4a8.  v0:= v0.`com.androidnetworking.internal.RequestProgressBody.uploadProgressHandler` @type ^`com.androidnetworking.internal.UploadProgressHandler` @kind object;
  #L2ac4ac.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`com.androidnetworking.internal.RequestProgressBody` v1 @kind this, `okio.Sink` v2 @kind object) @signature `Lcom/androidnetworking/internal/RequestProgressBody;.sink:(Lokio/Sink;)Lokio/Sink;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2ac500.  v0:= new `com.androidnetworking.internal.RequestProgressBody$1`;
  #L2ac504.  call `<init>`(v0, v1, v2) @signature `Lcom/androidnetworking/internal/RequestProgressBody$1;.<init>:(Lcom/androidnetworking/internal/RequestProgressBody;Lokio/Sink;)V` @kind direct;
  #L2ac50a.  return v0 @kind object;
}
procedure `long` `contentLength`(`com.androidnetworking.internal.RequestProgressBody` v2 @kind this) @signature `Lcom/androidnetworking/internal/RequestProgressBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ac4c0.  v0:= v2.`com.androidnetworking.internal.RequestProgressBody.requestBody` @type ^`okhttp3.RequestBody` @kind object;
  #L2ac4c4.  call temp:= `contentLength`(v0) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L2ac4ca.  v0:= temp @kind wide;
  #L2ac4cc.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`com.androidnetworking.internal.RequestProgressBody` v1 @kind this) @signature `Lcom/androidnetworking/internal/RequestProgressBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ac4e0.  v0:= v1.`com.androidnetworking.internal.RequestProgressBody.requestBody` @type ^`okhttp3.RequestBody` @kind object;
  #L2ac4e4.  call temp:= `contentType`(v0) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L2ac4ea.  v0:= temp @kind object;
  #L2ac4ec.  return v0 @kind object;
}
procedure `void` `writeTo`(`com.androidnetworking.internal.RequestProgressBody` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lcom/androidnetworking/internal/RequestProgressBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ac54c.  v0:= v1.`com.androidnetworking.internal.RequestProgressBody.bufferedSink` @type ^`okio.BufferedSink` @kind object;
  #L2ac550.  if v0 != 0 then goto L2ac568;
  #L2ac554.  call temp:= `sink`(v1, v2) @signature `Lcom/androidnetworking/internal/RequestProgressBody;.sink:(Lokio/Sink;)Lokio/Sink;` @kind direct;
  #L2ac55a.  v2:= temp @kind object;
  #L2ac55c.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L2ac562.  v2:= temp @kind object;
  #L2ac564.  v1.`com.androidnetworking.internal.RequestProgressBody.bufferedSink` @type ^`okio.BufferedSink` := v2 @kind object;
  #L2ac568.  v2:= v1.`com.androidnetworking.internal.RequestProgressBody.requestBody` @type ^`okhttp3.RequestBody` @kind object;
  #L2ac56c.  v0:= v1.`com.androidnetworking.internal.RequestProgressBody.bufferedSink` @type ^`okio.BufferedSink` @kind object;
  #L2ac570.  call `writeTo`(v2, v0) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L2ac576.  v2:= v1.`com.androidnetworking.internal.RequestProgressBody.bufferedSink` @type ^`okio.BufferedSink` @kind object;
  #L2ac57a.  call `flush`(v2) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L2ac580.  return @kind void;
}
