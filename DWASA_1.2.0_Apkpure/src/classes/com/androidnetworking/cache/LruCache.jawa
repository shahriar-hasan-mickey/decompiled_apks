record `com.androidnetworking.cache.LruCache` @kind class @AccessFlag PUBLIC {
  `int` `com.androidnetworking.cache.LruCache.createCount` @AccessFlag PRIVATE;
  `int` `com.androidnetworking.cache.LruCache.evictionCount` @AccessFlag PRIVATE;
  `int` `com.androidnetworking.cache.LruCache.hitCount` @AccessFlag PRIVATE;
  `java.util.LinkedHashMap` `com.androidnetworking.cache.LruCache.map` @AccessFlag PRIVATE_FINAL;
  `int` `com.androidnetworking.cache.LruCache.maxSize` @AccessFlag PRIVATE;
  `int` `com.androidnetworking.cache.LruCache.missCount` @AccessFlag PRIVATE;
  `int` `com.androidnetworking.cache.LruCache.putCount` @AccessFlag PRIVATE;
  `int` `com.androidnetworking.cache.LruCache.size` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.androidnetworking.cache.LruCache` v3 @kind this, `int` v4 ) @signature `Lcom/androidnetworking/cache/LruCache;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2a4664.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a466a.  if v4 <= 0 then goto L2a468a;
  #L2a466e.  v3.`com.androidnetworking.cache.LruCache.maxSize` @type ^`int` := v4;
  #L2a4672.  v4:= new `java.util.LinkedHashMap`;
  #L2a4676.  v0:= 0I;
  #L2a4678.  v1:= 0.75F;
  #L2a467c.  v2:= 1I;
  #L2a467e.  call `<init>`(v4, v0, v1, v2) @signature `Ljava/util/LinkedHashMap;.<init>:(IFZ)V` @kind direct;
  #L2a4684.  v3.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` := v4 @kind object;
  #L2a4688.  return @kind void;
  #L2a468a.  v4:= new `java.lang.IllegalArgumentException`;
  #L2a468e.  v0:= "maxSize <= 0" @kind object;
  #L2a4692.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a4698.  throw v4;
}
procedure `int` `safeSizeOf`(`com.androidnetworking.cache.LruCache` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/androidnetworking/cache/LruCache;.safeSizeOf:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2a42dc.  call temp:= `sizeOf`(v3, v4, v5) @signature `Lcom/androidnetworking/cache/LruCache;.sizeOf:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind virtual;
  #L2a42e2.  v0:= temp;
  #L2a42e4.  if v0 < 0 then goto L2a42ea;
  #L2a42e8.  return v0;
  #L2a42ea.  v0:= new `java.lang.IllegalStateException`;
  #L2a42ee.  v1:= new `java.lang.StringBuilder`;
  #L2a42f2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a42f8.  v2:= "Negative size: " @kind object;
  #L2a42fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4302.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4308.  v4:= "=" @kind object;
  #L2a430c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4312.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4318.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a431e.  v4:= temp @kind object;
  #L2a4320.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a4326.  throw v0;
}
procedure `java.lang.Object` `create`(`com.androidnetworking.cache.LruCache` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/androidnetworking/cache/LruCache;.create:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L2a4378.  v1:= 0I;
  #L2a437a.  return v1 @kind object;
}
procedure `int` `createCount`(`com.androidnetworking.cache.LruCache` v1 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.createCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a41d4.  @monitorenter v1
  #L2a41d6.  v0:= v1.`com.androidnetworking.cache.LruCache.createCount` @type ^`int`;
  #L2a41da.  @monitorexit v1
  #L2a41dc.  return v0;
  #L2a41de.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a41e0.  @monitorexit v1
  #L2a41e2.  throw v0;
  catch `java.lang.Throwable` @[L2a41d6..L2a41da] goto L2a41de;
}
procedure `void` `entryRemoved`(`com.androidnetworking.cache.LruCache` v0 @kind this, `boolean` v1 , `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/androidnetworking/cache/LruCache;.entryRemoved:(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L2a46ac.  return @kind void;
}
procedure `void` `evictAll`(`com.androidnetworking.cache.LruCache` v1 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.evictAll:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a46c0.  v0:= -1I;
  #L2a46c2.  call `trimToSize`(v1, v0) @signature `Lcom/androidnetworking/cache/LruCache;.trimToSize:(I)V` @kind virtual;
  #L2a46c8.  return @kind void;
}
procedure `int` `evictionCount`(`com.androidnetworking.cache.LruCache` v1 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.evictionCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a4200.  @monitorenter v1
  #L2a4202.  v0:= v1.`com.androidnetworking.cache.LruCache.evictionCount` @type ^`int`;
  #L2a4206.  @monitorexit v1
  #L2a4208.  return v0;
  #L2a420a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a420c.  @monitorexit v1
  #L2a420e.  throw v0;
  catch `java.lang.Throwable` @[L2a4202..L2a4206] goto L2a420a;
}
procedure `java.lang.Object` `get`(`com.androidnetworking.cache.LruCache` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/androidnetworking/cache/LruCache;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a438c.  if v5 == 0 then goto L2a4434;
  #L2a4390.  @monitorenter v4
  #L2a4392.  v0:= v4.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a4396.  call temp:= `get`(v0, v5) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a439c.  v0:= temp @kind object;
  #L2a439e.  if v0 == 0 then goto L2a43b2;
  #L2a43a2.  v5:= v4.`com.androidnetworking.cache.LruCache.hitCount` @type ^`int`;
  #L2a43a6.  v5:= v5 + 1;
  #L2a43aa.  v4.`com.androidnetworking.cache.LruCache.hitCount` @type ^`int` := v5;
  #L2a43ae.  @monitorexit v4
  #L2a43b0.  return v0 @kind object;
  #L2a43b2.  v0:= v4.`com.androidnetworking.cache.LruCache.missCount` @type ^`int`;
  #L2a43b6.  v0:= v0 + 1;
  #L2a43ba.  v4.`com.androidnetworking.cache.LruCache.missCount` @type ^`int` := v0;
  #L2a43be.  @monitorexit v4
  #L2a43c0.  call temp:= `create`(v4, v5) @signature `Lcom/androidnetworking/cache/LruCache;.create:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a43c6.  v0:= temp @kind object;
  #L2a43c8.  if v0 != 0 then goto L2a43d0;
  #L2a43cc.  v5:= 0I;
  #L2a43ce.  return v5 @kind object;
  #L2a43d0.  @monitorenter v4
  #L2a43d2.  v1:= v4.`com.androidnetworking.cache.LruCache.createCount` @type ^`int`;
  #L2a43d6.  v1:= v1 + 1;
  #L2a43da.  v4.`com.androidnetworking.cache.LruCache.createCount` @type ^`int` := v1;
  #L2a43de.  v1:= v4.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a43e2.  call temp:= `put`(v1, v5, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a43e8.  v1:= temp @kind object;
  #L2a43ea.  if v1 == 0 then goto L2a43fa;
  #L2a43ee.  v2:= v4.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a43f2.  call temp:= `put`(v2, v5, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a43f8.  goto L2a440c;
  #L2a43fa.  v2:= v4.`com.androidnetworking.cache.LruCache.size` @type ^`int`;
  #L2a43fe.  call temp:= `safeSizeOf`(v4, v5, v0) @signature `Lcom/androidnetworking/cache/LruCache;.safeSizeOf:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind direct;
  #L2a4404.  v3:= temp;
  #L2a4406.  v2:= v2 + v3 @kind int;
  #L2a4408.  v4.`com.androidnetworking.cache.LruCache.size` @type ^`int` := v2;
  #L2a440c.  @monitorexit v4
  #L2a440e.  if v1 == 0 then goto L2a441c;
  #L2a4412.  v2:= 0I;
  #L2a4414.  call `entryRemoved`(v4, v2, v5, v0, v1) @signature `Lcom/androidnetworking/cache/LruCache;.entryRemoved:(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L2a441a.  return v1 @kind object;
  #L2a441c.  v5:= v4.`com.androidnetworking.cache.LruCache.maxSize` @type ^`int`;
  #L2a4420.  call `trimToSize`(v4, v5) @signature `Lcom/androidnetworking/cache/LruCache;.trimToSize:(I)V` @kind virtual;
  #L2a4426.  return v0 @kind object;
  #L2a4428.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a442a.  @monitorexit v4
  #L2a442c.  throw v5;
  #L2a442e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4430.  @monitorexit v4
  #L2a4432.  throw v5;
  #L2a4434.  v5:= new `java.lang.NullPointerException`;
  #L2a4438.  v0:= "key == null" @kind object;
  #L2a443c.  call `<init>`(v5, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a4442.  throw v5;
  catch `java.lang.Throwable` @[L2a4392..L2a43c0] goto L2a442e;
  catch `java.lang.Throwable` @[L2a43d2..L2a440e] goto L2a4428;
  catch `java.lang.Throwable` @[L2a442a..L2a442c] goto L2a4428;
  catch `java.lang.Throwable` @[L2a4430..L2a4432] goto L2a442e;
}
procedure `int` `hitCount`(`com.androidnetworking.cache.LruCache` v1 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.hitCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a422c.  @monitorenter v1
  #L2a422e.  v0:= v1.`com.androidnetworking.cache.LruCache.hitCount` @type ^`int`;
  #L2a4232.  @monitorexit v1
  #L2a4234.  return v0;
  #L2a4236.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4238.  @monitorexit v1
  #L2a423a.  throw v0;
  catch `java.lang.Throwable` @[L2a422e..L2a4232] goto L2a4236;
}
procedure `int` `maxSize`(`com.androidnetworking.cache.LruCache` v1 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.maxSize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a4258.  @monitorenter v1
  #L2a425a.  v0:= v1.`com.androidnetworking.cache.LruCache.maxSize` @type ^`int`;
  #L2a425e.  @monitorexit v1
  #L2a4260.  return v0;
  #L2a4262.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4264.  @monitorexit v1
  #L2a4266.  throw v0;
  catch `java.lang.Throwable` @[L2a425a..L2a425e] goto L2a4262;
}
procedure `int` `missCount`(`com.androidnetworking.cache.LruCache` v1 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.missCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a4284.  @monitorenter v1
  #L2a4286.  v0:= v1.`com.androidnetworking.cache.LruCache.missCount` @type ^`int`;
  #L2a428a.  @monitorexit v1
  #L2a428c.  return v0;
  #L2a428e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4290.  @monitorexit v1
  #L2a4292.  throw v0;
  catch `java.lang.Throwable` @[L2a4286..L2a428a] goto L2a428e;
}
procedure `java.lang.Object` `put`(`com.androidnetworking.cache.LruCache` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/androidnetworking/cache/LruCache;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2a447c.  if v4 == 0 then goto L2a44e6;
  #L2a4480.  if v5 == 0 then goto L2a44e6;
  #L2a4484.  @monitorenter v3
  #L2a4486.  v0:= v3.`com.androidnetworking.cache.LruCache.putCount` @type ^`int`;
  #L2a448a.  v0:= v0 + 1;
  #L2a448e.  v3.`com.androidnetworking.cache.LruCache.putCount` @type ^`int` := v0;
  #L2a4492.  v0:= v3.`com.androidnetworking.cache.LruCache.size` @type ^`int`;
  #L2a4496.  call temp:= `safeSizeOf`(v3, v4, v5) @signature `Lcom/androidnetworking/cache/LruCache;.safeSizeOf:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind direct;
  #L2a449c.  v1:= temp;
  #L2a449e.  v0:= v0 + v1 @kind int;
  #L2a44a0.  v3.`com.androidnetworking.cache.LruCache.size` @type ^`int` := v0;
  #L2a44a4.  v0:= v3.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a44a8.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a44ae.  v0:= temp @kind object;
  #L2a44b0.  if v0 == 0 then goto L2a44c6;
  #L2a44b4.  v1:= v3.`com.androidnetworking.cache.LruCache.size` @type ^`int`;
  #L2a44b8.  call temp:= `safeSizeOf`(v3, v4, v0) @signature `Lcom/androidnetworking/cache/LruCache;.safeSizeOf:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind direct;
  #L2a44be.  v2:= temp;
  #L2a44c0.  v1:= v1 - v2 @kind int;
  #L2a44c2.  v3.`com.androidnetworking.cache.LruCache.size` @type ^`int` := v1;
  #L2a44c6.  @monitorexit v3
  #L2a44c8.  if v0 == 0 then goto L2a44d4;
  #L2a44cc.  v1:= 0I;
  #L2a44ce.  call `entryRemoved`(v3, v1, v4, v0, v5) @signature `Lcom/androidnetworking/cache/LruCache;.entryRemoved:(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L2a44d4.  v4:= v3.`com.androidnetworking.cache.LruCache.maxSize` @type ^`int`;
  #L2a44d8.  call `trimToSize`(v3, v4) @signature `Lcom/androidnetworking/cache/LruCache;.trimToSize:(I)V` @kind virtual;
  #L2a44de.  return v0 @kind object;
  #L2a44e0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a44e2.  @monitorexit v3
  #L2a44e4.  throw v4;
  #L2a44e6.  v4:= new `java.lang.NullPointerException`;
  #L2a44ea.  v5:= "key == null || value == null" @kind object;
  #L2a44ee.  call `<init>`(v4, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a44f4.  throw v4;
  catch `java.lang.Throwable` @[L2a4486..L2a44c8] goto L2a44e0;
  catch `java.lang.Throwable` @[L2a44e2..L2a44e4] goto L2a44e0;
}
procedure `int` `putCount`(`com.androidnetworking.cache.LruCache` v1 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.putCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a42b0.  @monitorenter v1
  #L2a42b2.  v0:= v1.`com.androidnetworking.cache.LruCache.putCount` @type ^`int`;
  #L2a42b6.  @monitorexit v1
  #L2a42b8.  return v0;
  #L2a42ba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a42bc.  @monitorexit v1
  #L2a42be.  throw v0;
  catch `java.lang.Throwable` @[L2a42b2..L2a42b6] goto L2a42ba;
}
procedure `java.lang.Object` `remove`(`com.androidnetworking.cache.LruCache` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/androidnetworking/cache/LruCache;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2a451c.  if v4 == 0 then goto L2a455c;
  #L2a4520.  @monitorenter v3
  #L2a4522.  v0:= v3.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a4526.  call temp:= `remove`(v0, v4) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a452c.  v0:= temp @kind object;
  #L2a452e.  if v0 == 0 then goto L2a4544;
  #L2a4532.  v1:= v3.`com.androidnetworking.cache.LruCache.size` @type ^`int`;
  #L2a4536.  call temp:= `safeSizeOf`(v3, v4, v0) @signature `Lcom/androidnetworking/cache/LruCache;.safeSizeOf:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind direct;
  #L2a453c.  v2:= temp;
  #L2a453e.  v1:= v1 - v2 @kind int;
  #L2a4540.  v3.`com.androidnetworking.cache.LruCache.size` @type ^`int` := v1;
  #L2a4544.  @monitorexit v3
  #L2a4546.  if v0 == 0 then goto L2a4554;
  #L2a454a.  v1:= 0I;
  #L2a454c.  v2:= 0I;
  #L2a454e.  call `entryRemoved`(v3, v1, v4, v0, v2) @signature `Lcom/androidnetworking/cache/LruCache;.entryRemoved:(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L2a4554.  return v0 @kind object;
  #L2a4556.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4558.  @monitorexit v3
  #L2a455a.  throw v4;
  #L2a455c.  v4:= new `java.lang.NullPointerException`;
  #L2a4560.  v0:= "key == null" @kind object;
  #L2a4564.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a456a.  throw v4;
  catch `java.lang.Throwable` @[L2a4522..L2a4546] goto L2a4556;
  catch `java.lang.Throwable` @[L2a4558..L2a455a] goto L2a4556;
}
procedure `void` `resize`(`com.androidnetworking.cache.LruCache` v1 @kind this, `int` v2 ) @signature `Lcom/androidnetworking/cache/LruCache;.resize:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a46dc.  if v2 <= 0 then goto L2a46f6;
  #L2a46e0.  @monitorenter v1
  #L2a46e2.  v1.`com.androidnetworking.cache.LruCache.maxSize` @type ^`int` := v2;
  #L2a46e6.  @monitorexit v1
  #L2a46e8.  call `trimToSize`(v1, v2) @signature `Lcom/androidnetworking/cache/LruCache;.trimToSize:(I)V` @kind virtual;
  #L2a46ee.  return @kind void;
  #L2a46f0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a46f2.  @monitorexit v1
  #L2a46f4.  throw v2;
  #L2a46f6.  v2:= new `java.lang.IllegalArgumentException`;
  #L2a46fa.  v0:= "maxSize <= 0" @kind object;
  #L2a46fe.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a4704.  throw v2;
  catch `java.lang.Throwable` @[L2a46e2..L2a46e8] goto L2a46f0;
  catch `java.lang.Throwable` @[L2a46f2..L2a46f4] goto L2a46f0;
}
procedure `int` `size`(`com.androidnetworking.cache.LruCache` v1 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a4338.  @monitorenter v1
  #L2a433a.  v0:= v1.`com.androidnetworking.cache.LruCache.size` @type ^`int`;
  #L2a433e.  @monitorexit v1
  #L2a4340.  return v0;
  #L2a4342.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4344.  @monitorexit v1
  #L2a4346.  throw v0;
  catch `java.lang.Throwable` @[L2a433a..L2a433e] goto L2a4342;
}
procedure `int` `sizeOf`(`com.androidnetworking.cache.LruCache` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/androidnetworking/cache/LruCache;.sizeOf:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;

  #L2a4364.  v1:= 1I;
  #L2a4366.  return v1;
}
procedure `java.util.Map` `snapshot`(`com.androidnetworking.cache.LruCache` v2 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.snapshot:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2a462c.  @monitorenter v2
  #L2a462e.  v0:= new `java.util.LinkedHashMap`;
  #L2a4632.  v1:= v2.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a4636.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2a463c.  @monitorexit v2
  #L2a463e.  return v0 @kind object;
  #L2a4640.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4642.  @monitorexit v2
  #L2a4644.  throw v0;
  catch `java.lang.Throwable` @[L2a462e..L2a463c] goto L2a4640;
}
procedure `java.lang.String` `toString`(`com.androidnetworking.cache.LruCache` v5 @kind this) @signature `Lcom/androidnetworking/cache/LruCache;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a4590.  @monitorenter v5
  #L2a4592.  v0:= v5.`com.androidnetworking.cache.LruCache.hitCount` @type ^`int`;
  #L2a4596.  v1:= v5.`com.androidnetworking.cache.LruCache.missCount` @type ^`int`;
  #L2a459a.  v0:= v0 + v1 @kind int;
  #L2a459c.  v1:= 0I;
  #L2a459e.  if v0 == 0 then goto L2a45b0;
  #L2a45a2.  v2:= v5.`com.androidnetworking.cache.LruCache.hitCount` @type ^`int`;
  #L2a45a6.  v2:= v2 * 100;
  #L2a45aa.  v0:= v2 / v0 @kind int;
  #L2a45ae.  goto L2a45b2;
  #L2a45b0.  v0:= 0I;
  #L2a45b2.  v2:= "LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]" @kind object;
  #L2a45b6.  v3:= 4I;
  #L2a45b8.  v3:= new `java.lang.Object`[v3];
  #L2a45bc.  v4:= v5.`com.androidnetworking.cache.LruCache.maxSize` @type ^`int`;
  #L2a45c0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2a45c6.  v4:= temp @kind object;
  #L2a45c8.  v3[v1]:= v4 @kind object;
  #L2a45cc.  v1:= 1I;
  #L2a45ce.  v4:= v5.`com.androidnetworking.cache.LruCache.hitCount` @type ^`int`;
  #L2a45d2.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2a45d8.  v4:= temp @kind object;
  #L2a45da.  v3[v1]:= v4 @kind object;
  #L2a45de.  v1:= 2I;
  #L2a45e0.  v4:= v5.`com.androidnetworking.cache.LruCache.missCount` @type ^`int`;
  #L2a45e4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2a45ea.  v4:= temp @kind object;
  #L2a45ec.  v3[v1]:= v4 @kind object;
  #L2a45f0.  v1:= 3I;
  #L2a45f2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2a45f8.  v0:= temp @kind object;
  #L2a45fa.  v3[v1]:= v0 @kind object;
  #L2a45fe.  call temp:= `format`(v2, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2a4604.  v0:= temp @kind object;
  #L2a4606.  @monitorexit v5
  #L2a4608.  return v0 @kind object;
  #L2a460a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a460c.  @monitorexit v5
  #L2a460e.  throw v0;
  catch `java.lang.Throwable` @[L2a4592..L2a4606] goto L2a460a;
}
procedure `void` `trimToSize`(`com.androidnetworking.cache.LruCache` v4 @kind this, `int` v5 ) @signature `Lcom/androidnetworking/cache/LruCache;.trimToSize:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a472c.  @monitorenter v4
  #L2a472e.  v0:= v4.`com.androidnetworking.cache.LruCache.size` @type ^`int`;
  #L2a4732.  if v0 < 0 then goto L2a47d0;
  #L2a4736.  v0:= v4.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a473a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L2a4740.  v0:= temp;
  #L2a4742.  if v0 == 0 then goto L2a474e;
  #L2a4746.  v0:= v4.`com.androidnetworking.cache.LruCache.size` @type ^`int`;
  #L2a474a.  if v0 != 0 then goto L2a47d0;
  #L2a474e.  v0:= v4.`com.androidnetworking.cache.LruCache.size` @type ^`int`;
  #L2a4752.  if v0 <= v5 then goto L2a47cc;
  #L2a4756.  v0:= v4.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a475a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L2a4760.  v0:= temp;
  #L2a4762.  if v0 == 0 then goto L2a4768;
  #L2a4766.  goto L2a47cc;
  #L2a4768.  v0:= v4.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a476c.  call temp:= `entrySet`(v0) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L2a4772.  v0:= temp @kind object;
  #L2a4774.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a477a.  v0:= temp @kind object;
  #L2a477c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a4782.  v0:= temp @kind object;
  #L2a4784.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2a4788.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2a478e.  v1:= temp @kind object;
  #L2a4790.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2a4796.  v0:= temp @kind object;
  #L2a4798.  v2:= v4.`com.androidnetworking.cache.LruCache.map` @type ^`java.util.LinkedHashMap` @kind object;
  #L2a479c.  call temp:= `remove`(v2, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a47a2.  v2:= v4.`com.androidnetworking.cache.LruCache.size` @type ^`int`;
  #L2a47a6.  call temp:= `safeSizeOf`(v4, v1, v0) @signature `Lcom/androidnetworking/cache/LruCache;.safeSizeOf:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind direct;
  #L2a47ac.  v3:= temp;
  #L2a47ae.  v2:= v2 - v3 @kind int;
  #L2a47b0.  v4.`com.androidnetworking.cache.LruCache.size` @type ^`int` := v2;
  #L2a47b4.  v2:= v4.`com.androidnetworking.cache.LruCache.evictionCount` @type ^`int`;
  #L2a47b8.  v3:= 1I;
  #L2a47ba.  v2:= v2 + v3 @kind int;
  #L2a47bc.  v4.`com.androidnetworking.cache.LruCache.evictionCount` @type ^`int` := v2;
  #L2a47c0.  @monitorexit v4
  #L2a47c2.  v2:= 0I;
  #L2a47c4.  call `entryRemoved`(v4, v3, v1, v0, v2) @signature `Lcom/androidnetworking/cache/LruCache;.entryRemoved:(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L2a47ca.  goto L2a472c;
  #L2a47cc.  @monitorexit v4
  #L2a47ce.  return @kind void;
  #L2a47d0.  v5:= new `java.lang.IllegalStateException`;
  #L2a47d4.  v0:= new `java.lang.StringBuilder`;
  #L2a47d8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a47de.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2a47e4.  v1:= temp @kind object;
  #L2a47e6.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2a47ec.  v1:= temp @kind object;
  #L2a47ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a47f4.  v1:= ".sizeOf() is reporting inconsistent results!" @kind object;
  #L2a47f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a47fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a4804.  v0:= temp @kind object;
  #L2a4806.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a480c.  throw v5;
  #L2a480e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4810.  @monitorexit v4
  #L2a4812.  goto L2a4816;
  #L2a4814.  throw v5;
  #L2a4816.  goto L2a4814;
  catch `java.lang.Throwable` @[L2a472e..L2a47c2] goto L2a480e;
  catch `java.lang.Throwable` @[L2a47cc..L2a4812] goto L2a480e;
}
