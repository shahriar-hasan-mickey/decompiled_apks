record `com.androidnetworking.gsonparserfactory.GsonRequestBodyParser` @kind class @AccessFlag FINAL extends `com.androidnetworking.interfaces.Parser` @kind interface {
  `com.google.gson.TypeAdapter` `com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.adapter` @AccessFlag PRIVATE_FINAL;
  `com.google.gson.Gson` `com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.gson` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.MEDIA_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.UTF_8` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/androidnetworking/gsonparserfactory/GsonRequestBodyParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a9ae0.  v0:= "application/json; charset=UTF-8" @kind object;
  #L2a9ae4.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L2a9aea.  v0:= temp @kind object;
  #L2a9aec.  `@@com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.MEDIA_TYPE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L2a9af0.  v0:= "UTF-8" @kind object;
  #L2a9af4.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2a9afa.  v0:= temp @kind object;
  #L2a9afc.  `@@com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2a9b00.  return @kind void;
}
procedure `void` `<init>`(`com.androidnetworking.gsonparserfactory.GsonRequestBodyParser` v0 @kind this, `com.google.gson.Gson` v1 @kind object, `com.google.gson.TypeAdapter` v2 @kind object) @signature `Lcom/androidnetworking/gsonparserfactory/GsonRequestBodyParser;.<init>:(Lcom/google/gson/Gson;Lcom/google/gson/TypeAdapter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a9b14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a9b1a.  v0.`com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.gson` @type ^`com.google.gson.Gson` := v1 @kind object;
  #L2a9b1e.  v0.`com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.adapter` @type ^`com.google.gson.TypeAdapter` := v2 @kind object;
  #L2a9b22.  return @kind void;
}
procedure `java.lang.Object` `convert`(`com.androidnetworking.gsonparserfactory.GsonRequestBodyParser` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/androidnetworking/gsonparserfactory/GsonRequestBodyParser;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a9a60.  call temp:= `convert`(v0, v1) @signature `Lcom/androidnetworking/gsonparserfactory/GsonRequestBodyParser;.convert:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @kind virtual;
  #L2a9a66.  v1:= temp @kind object;
  #L2a9a68.  return v1 @kind object;
}
procedure `okhttp3.RequestBody` `convert`(`com.androidnetworking.gsonparserfactory.GsonRequestBodyParser` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/androidnetworking/gsonparserfactory/GsonRequestBodyParser;.convert:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a9a7c.  v0:= new `okio.Buffer`;
  #L2a9a80.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2a9a86.  v1:= new `java.io.OutputStreamWriter`;
  #L2a9a8a.  call temp:= `outputStream`(v0) @signature `Lokio/Buffer;.outputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L2a9a90.  v2:= temp @kind object;
  #L2a9a92.  v3:= `@@com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L2a9a96.  call `<init>`(v1, v2, v3) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L2a9a9c.  v2:= v4.`com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.gson` @type ^`com.google.gson.Gson` @kind object;
  #L2a9aa0.  call temp:= `newJsonWriter`(v2, v1) @signature `Lcom/google/gson/Gson;.newJsonWriter:(Ljava/io/Writer;)Lcom/google/gson/stream/JsonWriter;` @kind virtual;
  #L2a9aa6.  v1:= temp @kind object;
  #L2a9aa8.  v2:= v4.`com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.adapter` @type ^`com.google.gson.TypeAdapter` @kind object;
  #L2a9aac.  call `write`(v2, v1, v5) @signature `Lcom/google/gson/TypeAdapter;.write:(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V` @kind virtual;
  #L2a9ab2.  call `close`(v1) @signature `Lcom/google/gson/stream/JsonWriter;.close:()V` @kind virtual;
  #L2a9ab8.  v5:= `@@com.androidnetworking.gsonparserfactory.GsonRequestBodyParser.MEDIA_TYPE` @type ^`okhttp3.MediaType` @kind object;
  #L2a9abc.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L2a9ac2.  v0:= temp @kind object;
  #L2a9ac4.  call temp:= `create`(v5, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;` @kind static;
  #L2a9aca.  v5:= temp @kind object;
  #L2a9acc.  return v5 @kind object;
}
