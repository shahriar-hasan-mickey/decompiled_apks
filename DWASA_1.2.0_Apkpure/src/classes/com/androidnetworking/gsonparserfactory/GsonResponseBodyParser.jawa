record `com.androidnetworking.gsonparserfactory.GsonResponseBodyParser` @kind class @AccessFlag FINAL extends `com.androidnetworking.interfaces.Parser` @kind interface {
  `com.google.gson.TypeAdapter` `com.androidnetworking.gsonparserfactory.GsonResponseBodyParser.adapter` @AccessFlag PRIVATE_FINAL;
  `com.google.gson.Gson` `com.androidnetworking.gsonparserfactory.GsonResponseBodyParser.gson` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.androidnetworking.gsonparserfactory.GsonResponseBodyParser` v0 @kind this, `com.google.gson.Gson` v1 @kind object, `com.google.gson.TypeAdapter` v2 @kind object) @signature `Lcom/androidnetworking/gsonparserfactory/GsonResponseBodyParser;.<init>:(Lcom/google/gson/Gson;Lcom/google/gson/TypeAdapter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a9ba4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a9baa.  v0.`com.androidnetworking.gsonparserfactory.GsonResponseBodyParser.gson` @type ^`com.google.gson.Gson` := v1 @kind object;
  #L2a9bae.  v0.`com.androidnetworking.gsonparserfactory.GsonResponseBodyParser.adapter` @type ^`com.google.gson.TypeAdapter` := v2 @kind object;
  #L2a9bb2.  return @kind void;
}
procedure `java.lang.Object` `convert`(`com.androidnetworking.gsonparserfactory.GsonResponseBodyParser` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/androidnetworking/gsonparserfactory/GsonResponseBodyParser;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a9b34.  v1:= (`okhttp3.ResponseBody`) v1 @kind object;
  #L2a9b38.  call temp:= `convert`(v0, v1) @signature `Lcom/androidnetworking/gsonparserfactory/GsonResponseBodyParser;.convert:(Lokhttp3/ResponseBody;)Ljava/lang/Object;` @kind virtual;
  #L2a9b3e.  v1:= temp @kind object;
  #L2a9b40.  return v1 @kind object;
}
procedure `java.lang.Object` `convert`(`com.androidnetworking.gsonparserfactory.GsonResponseBodyParser` v2 @kind this, `okhttp3.ResponseBody` v3 @kind object) @signature `Lcom/androidnetworking/gsonparserfactory/GsonResponseBodyParser;.convert:(Lokhttp3/ResponseBody;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a9b54.  v0:= v2.`com.androidnetworking.gsonparserfactory.GsonResponseBodyParser.gson` @type ^`com.google.gson.Gson` @kind object;
  #L2a9b58.  call temp:= `charStream`(v3) @signature `Lokhttp3/ResponseBody;.charStream:()Ljava/io/Reader;` @kind virtual;
  #L2a9b5e.  v1:= temp @kind object;
  #L2a9b60.  call temp:= `newJsonReader`(v0, v1) @signature `Lcom/google/gson/Gson;.newJsonReader:(Ljava/io/Reader;)Lcom/google/gson/stream/JsonReader;` @kind virtual;
  #L2a9b66.  v0:= temp @kind object;
  #L2a9b68.  v1:= v2.`com.androidnetworking.gsonparserfactory.GsonResponseBodyParser.adapter` @type ^`com.google.gson.TypeAdapter` @kind object;
  #L2a9b6c.  call temp:= `read`(v1, v0) @signature `Lcom/google/gson/TypeAdapter;.read:(Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object;` @kind virtual;
  #L2a9b72.  v0:= temp @kind object;
  #L2a9b74.  call `close`(v3) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L2a9b7a.  return v0 @kind object;
  #L2a9b7c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a9b7e.  call `close`(v3) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L2a9b84.  throw v0;
  catch `java.lang.Throwable` @[L2a9b68..L2a9b74] goto L2a9b7c;
}
