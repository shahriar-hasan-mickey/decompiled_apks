record `com.androidnetworking.interceptors.GzipRequestInterceptor$2` @kind class @AccessFlag  extends `okhttp3.RequestBody` @kind class {
  `com.androidnetworking.interceptors.GzipRequestInterceptor` `com.androidnetworking.interceptors.GzipRequestInterceptor$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.RequestBody` `com.androidnetworking.interceptors.GzipRequestInterceptor$2.val$body` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.androidnetworking.interceptors.GzipRequestInterceptor$2` v0 @kind this, `com.androidnetworking.interceptors.GzipRequestInterceptor` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lcom/androidnetworking/interceptors/GzipRequestInterceptor$2;.<init>:(Lcom/androidnetworking/interceptors/GzipRequestInterceptor;Lokhttp3/RequestBody;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a9c84.  v0.`com.androidnetworking.interceptors.GzipRequestInterceptor$2.this$0` @type ^`com.androidnetworking.interceptors.GzipRequestInterceptor` := v1 @kind object;
  #L2a9c88.  v0.`com.androidnetworking.interceptors.GzipRequestInterceptor$2.val$body` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L2a9c8c.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L2a9c92.  return @kind void;
}
procedure `long` `contentLength`(`com.androidnetworking.interceptors.GzipRequestInterceptor$2` v2 @kind this) @signature `Lcom/androidnetworking/interceptors/GzipRequestInterceptor$2;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a9c4c.  v0:= -1L;
  #L2a9c50.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`com.androidnetworking.interceptors.GzipRequestInterceptor$2` v1 @kind this) @signature `Lcom/androidnetworking/interceptors/GzipRequestInterceptor$2;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9c64.  v0:= v1.`com.androidnetworking.interceptors.GzipRequestInterceptor$2.val$body` @type ^`okhttp3.RequestBody` @kind object;
  #L2a9c68.  call temp:= `contentType`(v0) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L2a9c6e.  v0:= temp @kind object;
  #L2a9c70.  return v0 @kind object;
}
procedure `void` `writeTo`(`com.androidnetworking.interceptors.GzipRequestInterceptor$2` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lcom/androidnetworking/interceptors/GzipRequestInterceptor$2;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9ca4.  v0:= new `okio.GzipSink`;
  #L2a9ca8.  call `<init>`(v0, v2) @signature `Lokio/GzipSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L2a9cae.  call temp:= `buffer`(v0) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L2a9cb4.  v2:= temp @kind object;
  #L2a9cb6.  v0:= v1.`com.androidnetworking.interceptors.GzipRequestInterceptor$2.val$body` @type ^`okhttp3.RequestBody` @kind object;
  #L2a9cba.  call `writeTo`(v0, v2) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L2a9cc0.  call `close`(v2) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L2a9cc6.  return @kind void;
}
