record `com.androidnetworking.interceptors.GzipRequestInterceptor$1` @kind class @AccessFlag  extends `okhttp3.RequestBody` @kind class {
  `com.androidnetworking.interceptors.GzipRequestInterceptor` `com.androidnetworking.interceptors.GzipRequestInterceptor$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.Buffer` `com.androidnetworking.interceptors.GzipRequestInterceptor$1.val$buffer` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.RequestBody` `com.androidnetworking.interceptors.GzipRequestInterceptor$1.val$requestBody` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.androidnetworking.interceptors.GzipRequestInterceptor$1` v0 @kind this, `com.androidnetworking.interceptors.GzipRequestInterceptor` v1 @kind object, `okhttp3.RequestBody` v2 @kind object, `okio.Buffer` v3 @kind object) @signature `Lcom/androidnetworking/interceptors/GzipRequestInterceptor$1;.<init>:(Lcom/androidnetworking/interceptors/GzipRequestInterceptor;Lokhttp3/RequestBody;Lokio/Buffer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a9c04.  v0.`com.androidnetworking.interceptors.GzipRequestInterceptor$1.this$0` @type ^`com.androidnetworking.interceptors.GzipRequestInterceptor` := v1 @kind object;
  #L2a9c08.  v0.`com.androidnetworking.interceptors.GzipRequestInterceptor$1.val$requestBody` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L2a9c0c.  v0.`com.androidnetworking.interceptors.GzipRequestInterceptor$1.val$buffer` @type ^`okio.Buffer` := v3 @kind object;
  #L2a9c10.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L2a9c16.  return @kind void;
}
procedure `long` `contentLength`(`com.androidnetworking.interceptors.GzipRequestInterceptor$1` v2 @kind this) @signature `Lcom/androidnetworking/interceptors/GzipRequestInterceptor$1;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a9bc4.  v0:= v2.`com.androidnetworking.interceptors.GzipRequestInterceptor$1.val$buffer` @type ^`okio.Buffer` @kind object;
  #L2a9bc8.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2a9bce.  v0:= temp @kind wide;
  #L2a9bd0.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`com.androidnetworking.interceptors.GzipRequestInterceptor$1` v1 @kind this) @signature `Lcom/androidnetworking/interceptors/GzipRequestInterceptor$1;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9be4.  v0:= v1.`com.androidnetworking.interceptors.GzipRequestInterceptor$1.val$requestBody` @type ^`okhttp3.RequestBody` @kind object;
  #L2a9be8.  call temp:= `contentType`(v0) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L2a9bee.  v0:= temp @kind object;
  #L2a9bf0.  return v0 @kind object;
}
procedure `void` `writeTo`(`com.androidnetworking.interceptors.GzipRequestInterceptor$1` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lcom/androidnetworking/interceptors/GzipRequestInterceptor$1;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9c28.  v0:= v1.`com.androidnetworking.interceptors.GzipRequestInterceptor$1.val$buffer` @type ^`okio.Buffer` @kind object;
  #L2a9c2c.  call temp:= `snapshot`(v0) @signature `Lokio/Buffer;.snapshot:()Lokio/ByteString;` @kind virtual;
  #L2a9c32.  v0:= temp @kind object;
  #L2a9c34.  call temp:= `write`(v2, v0) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L2a9c3a.  return @kind void;
}
