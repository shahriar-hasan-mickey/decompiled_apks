record `com.androidnetworking.common.ConnectionClassManager` @kind class @AccessFlag PUBLIC {
  `com.androidnetworking.interfaces.ConnectionQualityChangeListener` `com.androidnetworking.common.ConnectionClassManager.mConnectionQualityChangeListener` @AccessFlag PRIVATE;
  `int` `com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidth` @AccessFlag PRIVATE;
  `int` `com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @AccessFlag PRIVATE;
  `com.androidnetworking.common.ConnectionQuality` `com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @AccessFlag PRIVATE;
  `int` `com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @AccessFlag PRIVATE;
}
global `long` `@@com.androidnetworking.common.ConnectionClassManager.BANDWIDTH_LOWER_BOUND` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.androidnetworking.common.ConnectionClassManager.BYTES_TO_BITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.androidnetworking.common.ConnectionClassManager.DEFAULT_GOOD_BANDWIDTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.androidnetworking.common.ConnectionClassManager.DEFAULT_MODERATE_BANDWIDTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.androidnetworking.common.ConnectionClassManager.DEFAULT_POOR_BANDWIDTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.androidnetworking.common.ConnectionClassManager.DEFAULT_SAMPLES_TO_QUALITY_CHANGE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.androidnetworking.common.ConnectionClassManager.MINIMUM_SAMPLES_TO_DECIDE_QUALITY` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.androidnetworking.common.ConnectionClassManager` `@@com.androidnetworking.common.ConnectionClassManager.sInstance` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`com.androidnetworking.common.ConnectionClassManager` v1 @kind this) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a8cdc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a8ce2.  v0:= `@@com.androidnetworking.common.ConnectionQuality.UNKNOWN` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8ce6.  v1.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` := v0 @kind object;
  #L2a8cea.  v0:= 0I;
  #L2a8cec.  v1.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int` := v0;
  #L2a8cf0.  v1.`com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @type ^`int` := v0;
  #L2a8cf4.  v1.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidth` @type ^`int` := v0;
  #L2a8cf8.  return @kind void;
}
procedure `com.androidnetworking.common.ConnectionQuality` `access$000`(`com.androidnetworking.common.ConnectionClassManager` v0 @kind object) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.access$000:(Lcom/androidnetworking/common/ConnectionClassManager;)Lcom/androidnetworking/common/ConnectionQuality;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2a8c64.  v0:= v0.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8c68.  return v0 @kind object;
}
procedure `int` `access$100`(`com.androidnetworking.common.ConnectionClassManager` v0 @kind object) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.access$100:(Lcom/androidnetworking/common/ConnectionClassManager;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2a8cac.  v0:= v0.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidth` @type ^`int`;
  #L2a8cb0.  return v0;
}
procedure `com.androidnetworking.interfaces.ConnectionQualityChangeListener` `access$200`(`com.androidnetworking.common.ConnectionClassManager` v0 @kind object) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.access$200:(Lcom/androidnetworking/common/ConnectionClassManager;)Lcom/androidnetworking/interfaces/ConnectionQualityChangeListener;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2a8c94.  v0:= v0.`com.androidnetworking.common.ConnectionClassManager.mConnectionQualityChangeListener` @type ^`com.androidnetworking.interfaces.ConnectionQualityChangeListener` @kind object;
  #L2a8c98.  return v0 @kind object;
}
procedure `com.androidnetworking.common.ConnectionClassManager` `getInstance`() @signature `Lcom/androidnetworking/common/ConnectionClassManager;.getInstance:()Lcom/androidnetworking/common/ConnectionClassManager;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2a8c14.  v0:= `@@com.androidnetworking.common.ConnectionClassManager.sInstance` @type ^`com.androidnetworking.common.ConnectionClassManager` @kind object;
  #L2a8c18.  if v0 != 0 then goto L2a8c42;
  #L2a8c1c.  v0:= constclass @type ^`com.androidnetworking.common.ConnectionClassManager` @kind object;
  #L2a8c20.  @monitorenter v0
  #L2a8c22.  v1:= `@@com.androidnetworking.common.ConnectionClassManager.sInstance` @type ^`com.androidnetworking.common.ConnectionClassManager` @kind object;
  #L2a8c26.  if v1 != 0 then goto L2a8c38;
  #L2a8c2a.  v1:= new `com.androidnetworking.common.ConnectionClassManager`;
  #L2a8c2e.  call `<init>`(v1) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.<init>:()V` @kind direct;
  #L2a8c34.  `@@com.androidnetworking.common.ConnectionClassManager.sInstance` @type ^`com.androidnetworking.common.ConnectionClassManager` := v1 @kind object;
  #L2a8c38.  @monitorexit v0
  #L2a8c3a.  goto L2a8c42;
  #L2a8c3c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8c3e.  @monitorexit v0
  #L2a8c40.  throw v1;
  #L2a8c42.  v0:= `@@com.androidnetworking.common.ConnectionClassManager.sInstance` @type ^`com.androidnetworking.common.ConnectionClassManager` @kind object;
  #L2a8c46.  return v0 @kind object;
  catch `java.lang.Throwable` @[L2a8c22..L2a8c40] goto L2a8c3c;
}
procedure `void` `shutDown`() @signature `Lcom/androidnetworking/common/ConnectionClassManager;.shutDown:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a8d3c.  v0:= `@@com.androidnetworking.common.ConnectionClassManager.sInstance` @type ^`com.androidnetworking.common.ConnectionClassManager` @kind object;
  #L2a8d40.  if v0 == 0 then goto L2a8d4a;
  #L2a8d44.  v0:= 0I;
  #L2a8d46.  `@@com.androidnetworking.common.ConnectionClassManager.sInstance` @type ^`com.androidnetworking.common.ConnectionClassManager` := v0 @kind object;
  #L2a8d4a.  return @kind void;
}
procedure `int` `getCurrentBandwidth`(`com.androidnetworking.common.ConnectionClassManager` v1 @kind this) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.getCurrentBandwidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8cc4.  v0:= v1.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidth` @type ^`int`;
  #L2a8cc8.  return v0;
}
procedure `com.androidnetworking.common.ConnectionQuality` `getCurrentConnectionQuality`(`com.androidnetworking.common.ConnectionClassManager` v1 @kind this) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.getCurrentConnectionQuality:()Lcom/androidnetworking/common/ConnectionQuality;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8c7c.  v0:= v1.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8c80.  return v0 @kind object;
}
procedure `void` `removeListener`(`com.androidnetworking.common.ConnectionClassManager` v1 @kind this) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.removeListener:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8d0c.  v0:= 0I;
  #L2a8d0e.  v1.`com.androidnetworking.common.ConnectionClassManager.mConnectionQualityChangeListener` @type ^`com.androidnetworking.interfaces.ConnectionQualityChangeListener` := v0 @kind object;
  #L2a8d12.  return @kind void;
}
procedure `void` `setListener`(`com.androidnetworking.common.ConnectionClassManager` v0 @kind this, `com.androidnetworking.interfaces.ConnectionQualityChangeListener` v1 @kind object) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.setListener:(Lcom/androidnetworking/interfaces/ConnectionQualityChangeListener;)V` @AccessFlag PUBLIC {
    temp;

  #L2a8d24.  v0.`com.androidnetworking.common.ConnectionClassManager.mConnectionQualityChangeListener` @type ^`com.androidnetworking.interfaces.ConnectionQualityChangeListener` := v1 @kind object;
  #L2a8d28.  return @kind void;
}
procedure `void` `updateBandwidth`(`com.androidnetworking.common.ConnectionClassManager` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lcom/androidnetworking/common/ConnectionClassManager;.updateBandwidth:(JJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a8d5c.  @monitorenter v3
  #L2a8d5e.  v0:= 0L;
  #L2a8d62.  v2:= lcmp(v6, v0);
  #L2a8d66.  if v2 == 0 then goto L2a8ec6;
  #L2a8d6a.  v0:= 20000L;
  #L2a8d6e.  v2:= lcmp(v4, v0);
  #L2a8d72.  if v2 < 0 then goto L2a8ec6;
  #L2a8d76.  v4:= (`double`) v4 @kind l2d;
  #L2a8d78.  v0:= 1.0D;
  #L2a8d7c.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2a8d82.  v4:= v4 * v0 @kind double;
  #L2a8d86.  v6:= (`double`) v6 @kind l2d;
  #L2a8d88.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2a8d8e.  v4:= v4 / v6 @kind double;
  #L2a8d90.  v6:= 8.0D;
  #L2a8d94.  v4:= v4 * v6 @kind double;
  #L2a8d98.  v6:= 10.0D;
  #L2a8d9c.  v0:= dcmpg(v4, v6);
  #L2a8da0.  if v0 >= 0 then goto L2a8da8;
  #L2a8da4.  goto L2a8ec6;
  #L2a8da8.  v6:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int`;
  #L2a8dac.  v7:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @type ^`int`;
  #L2a8db0.  v6:= v6 * v7 @kind int;
  #L2a8db4.  v6:= (`double`) v6 @kind i2d;
  #L2a8db6.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2a8dbc.  v6:= v6 + v4 @kind double;
  #L2a8dbe.  v4:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @type ^`int`;
  #L2a8dc2.  v4:= v4 + 1;
  #L2a8dc6.  v4:= (`double`) v4 @kind i2d;
  #L2a8dc8.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2a8dce.  v6:= v6 / v4 @kind double;
  #L2a8dd0.  v4:= (`int`) v6 @kind d2i;
  #L2a8dd2.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int` := v4;
  #L2a8dd6.  v4:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @type ^`int`;
  #L2a8dda.  v4:= v4 + 1;
  #L2a8dde.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @type ^`int` := v4;
  #L2a8de2.  v4:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @type ^`int`;
  #L2a8de6.  v5:= 5I;
  #L2a8de8.  if v4 == v5 then goto L2a8e02;
  #L2a8dec.  v4:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8df0.  v6:= `@@com.androidnetworking.common.ConnectionQuality.UNKNOWN` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8df4.  if v4 != v6 then goto L2a8ebc;
  #L2a8df8.  v4:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @type ^`int`;
  #L2a8dfc.  v6:= 2I;
  #L2a8dfe.  if v4 != v6 then goto L2a8ebc;
  #L2a8e02.  v4:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8e06.  v6:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int`;
  #L2a8e0a.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidth` @type ^`int` := v6;
  #L2a8e0e.  v6:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int`;
  #L2a8e12.  if v6 > 0 then goto L2a8e20;
  #L2a8e16.  v6:= `@@com.androidnetworking.common.ConnectionQuality.UNKNOWN` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8e1a.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` := v6 @kind object;
  #L2a8e1e.  goto L2a8e72;
  #L2a8e20.  v6:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int`;
  #L2a8e24.  v7:= 150I;
  #L2a8e28.  if v6 >= v7 then goto L2a8e36;
  #L2a8e2c.  v6:= `@@com.androidnetworking.common.ConnectionQuality.POOR` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8e30.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` := v6 @kind object;
  #L2a8e34.  goto L2a8e72;
  #L2a8e36.  v6:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int`;
  #L2a8e3a.  v7:= 550I;
  #L2a8e3e.  if v6 >= v7 then goto L2a8e4c;
  #L2a8e42.  v6:= `@@com.androidnetworking.common.ConnectionQuality.MODERATE` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8e46.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` := v6 @kind object;
  #L2a8e4a.  goto L2a8e72;
  #L2a8e4c.  v6:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int`;
  #L2a8e50.  v7:= 2000I;
  #L2a8e54.  if v6 >= v7 then goto L2a8e62;
  #L2a8e58.  v6:= `@@com.androidnetworking.common.ConnectionQuality.GOOD` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8e5c.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` := v6 @kind object;
  #L2a8e60.  goto L2a8e72;
  #L2a8e62.  v6:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int`;
  #L2a8e66.  if v6 <= v7 then goto L2a8e72;
  #L2a8e6a.  v6:= `@@com.androidnetworking.common.ConnectionQuality.EXCELLENT` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8e6e.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` := v6 @kind object;
  #L2a8e72.  v6:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @type ^`int`;
  #L2a8e76.  if v6 != v5 then goto L2a8e84;
  #L2a8e7a.  v5:= 0I;
  #L2a8e7c.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentBandwidthForSampling` @type ^`int` := v5;
  #L2a8e80.  v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentNumberOfSample` @type ^`int` := v5;
  #L2a8e84.  v5:= v3.`com.androidnetworking.common.ConnectionClassManager.mCurrentConnectionQuality` @type ^`com.androidnetworking.common.ConnectionQuality` @kind object;
  #L2a8e88.  if v5 == v4 then goto L2a8ebc;
  #L2a8e8c.  v4:= v3.`com.androidnetworking.common.ConnectionClassManager.mConnectionQualityChangeListener` @type ^`com.androidnetworking.interfaces.ConnectionQualityChangeListener` @kind object;
  #L2a8e90.  if v4 == 0 then goto L2a8ebc;
  #L2a8e94.  call temp:= `getInstance`() @signature `Lcom/androidnetworking/core/Core;.getInstance:()Lcom/androidnetworking/core/Core;` @kind static;
  #L2a8e9a.  v4:= temp @kind object;
  #L2a8e9c.  call temp:= `getExecutorSupplier`(v4) @signature `Lcom/androidnetworking/core/Core;.getExecutorSupplier:()Lcom/androidnetworking/core/ExecutorSupplier;` @kind virtual;
  #L2a8ea2.  v4:= temp @kind object;
  #L2a8ea4.  call temp:= `forMainThreadTasks`(v4) @signature `Lcom/androidnetworking/core/ExecutorSupplier;.forMainThreadTasks:()Ljava/util/concurrent/Executor;` @kind interface;
  #L2a8eaa.  v4:= temp @kind object;
  #L2a8eac.  v5:= new `com.androidnetworking.common.ConnectionClassManager$1`;
  #L2a8eb0.  call `<init>`(v5, v3) @signature `Lcom/androidnetworking/common/ConnectionClassManager$1;.<init>:(Lcom/androidnetworking/common/ConnectionClassManager;)V` @kind direct;
  #L2a8eb6.  call `execute`(v4, v5) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2a8ebc.  @monitorexit v3
  #L2a8ebe.  return @kind void;
  #L2a8ec0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8ec2.  @monitorexit v3
  #L2a8ec4.  throw v4;
  #L2a8ec6.  @monitorexit v3
  #L2a8ec8.  return @kind void;
  catch `java.lang.Throwable` @[L2a8da8..L2a8db0] goto L2a8ec0;
  catch `java.lang.Throwable` @[L2a8dbe..L2a8dc2] goto L2a8ec0;
  catch `java.lang.Throwable` @[L2a8dd2..L2a8ebc] goto L2a8ec0;
}
