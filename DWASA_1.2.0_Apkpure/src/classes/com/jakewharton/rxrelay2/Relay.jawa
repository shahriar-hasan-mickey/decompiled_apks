record `com.jakewharton.rxrelay2.Relay` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.Observable` @kind class, `io.reactivex.functions.Consumer` @kind interface {
}
procedure `void` `<init>`(`com.jakewharton.rxrelay2.Relay` v0 @kind this) @signature `Lcom/jakewharton/rxrelay2/Relay;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L35e24c.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L35e252.  return @kind void;
}
procedure `void` `accept`(`java.lang.Object` v0 @kind object) @signature `Lcom/jakewharton/rxrelay2/Relay;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasObservers`() @signature `Lcom/jakewharton/rxrelay2/Relay;.hasObservers:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.jakewharton.rxrelay2.Relay` `toSerialized`(`com.jakewharton.rxrelay2.Relay` v1 @kind this) @signature `Lcom/jakewharton/rxrelay2/Relay;.toSerialized:()Lcom/jakewharton/rxrelay2/Relay;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L35e224.  v0:= instanceof @variable v1 @type ^`com.jakewharton.rxrelay2.SerializedRelay` @kind boolean;
  #L35e228.  if v0 == 0 then goto L35e22e;
  #L35e22c.  return v1 @kind object;
  #L35e22e.  v0:= new `com.jakewharton.rxrelay2.SerializedRelay`;
  #L35e232.  call `<init>`(v0, v1) @signature `Lcom/jakewharton/rxrelay2/SerializedRelay;.<init>:(Lcom/jakewharton/rxrelay2/Relay;)V` @kind direct;
  #L35e238.  return v0 @kind object;
}
