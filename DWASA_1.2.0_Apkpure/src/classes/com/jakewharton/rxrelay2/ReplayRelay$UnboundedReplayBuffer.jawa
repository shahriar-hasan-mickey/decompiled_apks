record `com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `com.jakewharton.rxrelay2.ReplayRelay$ReplayBuffer` @kind interface {
  `java.util.List` `com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.buffer` @AccessFlag FINAL;
  `int` `com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.size` @AccessFlag VOLATILE;
}
global `long` `@@com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer` v1 @kind this, `int` v2 ) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$UnboundedReplayBuffer;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L35e978.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L35e97e.  if v2 <= 0 then goto L35e992;
  #L35e982.  v0:= new `java.util.ArrayList`;
  #L35e986.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L35e98c.  v1.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.buffer` @type ^`java.util.List` := v0 @kind object;
  #L35e990.  return @kind void;
  #L35e992.  v2:= new `java.lang.IllegalArgumentException`;
  #L35e996.  v0:= "capacityHint <= 0" @kind object;
  #L35e99a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35e9a0.  throw v2;
}
procedure `void` `add`(`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$UnboundedReplayBuffer;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e9b4.  v0:= v1.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.buffer` @type ^`java.util.List` @kind object;
  #L35e9b8.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L35e9be.  v2:= v1.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.size` @type ^`int`;
  #L35e9c2.  v2:= v2 + 1;
  #L35e9c6.  v1.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.size` @type ^`int` := v2;
  #L35e9ca.  return @kind void;
}
procedure `java.lang.Object` `getValue`(`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer` v2 @kind this) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$UnboundedReplayBuffer;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35e8d4.  v0:= v2.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.size` @type ^`int`;
  #L35e8d8.  if v0 == 0 then goto L35e8ee;
  #L35e8dc.  v1:= v2.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.buffer` @type ^`java.util.List` @kind object;
  #L35e8e0.  v0:= v0 + -1;
  #L35e8e4.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35e8ea.  v0:= temp @kind object;
  #L35e8ec.  return v0 @kind object;
  #L35e8ee.  v0:= 0I;
  #L35e8f0.  return v0 @kind object;
}
procedure `java.lang.Object`[] `getValues`(`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer` v5 @kind this, `java.lang.Object`[] v6 @kind object) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$UnboundedReplayBuffer;.getValues:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35e904.  v0:= v5.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.size` @type ^`int`;
  #L35e908.  v1:= 0I;
  #L35e90a.  v2:= 0I;
  #L35e90c.  if v0 != 0 then goto L35e91c;
  #L35e910.  v0:= length @variable v6;
  #L35e912.  if v0 == 0 then goto L35e91a;
  #L35e916.  v6[v2]:= v1 @kind object;
  #L35e91a.  return v6 @kind object;
  #L35e91c.  v3:= length @variable v6;
  #L35e91e.  if v3 >= v0 then goto L35e942;
  #L35e922.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L35e928.  v6:= temp @kind object;
  #L35e92a.  call temp:= `getComponentType`(v6) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L35e930.  v6:= temp @kind object;
  #L35e932.  call temp:= `newInstance`(v6, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L35e938.  v6:= temp @kind object;
  #L35e93a.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L35e93e.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L35e942.  v3:= v5.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.buffer` @type ^`java.util.List` @kind object;
  #L35e946.  if v2 >= v0 then goto L35e95c;
  #L35e94a.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35e950.  v4:= temp @kind object;
  #L35e952.  v6[v2]:= v4 @kind object;
  #L35e956.  v2:= v2 + 1;
  #L35e95a.  goto L35e946;
  #L35e95c.  v2:= length @variable v6;
  #L35e95e.  if v2 <= v0 then goto L35e966;
  #L35e962.  v6[v0]:= v1 @kind object;
  #L35e966.  return v6 @kind object;
}
procedure `void` `replay`(`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer` v7 @kind this, `com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable` v8 @kind object) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$UnboundedReplayBuffer;.replay:(Lcom/jakewharton/rxrelay2/ReplayRelay$ReplayDisposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L35e9dc.  call temp:= `getAndIncrement`(v8) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$ReplayDisposable;.getAndIncrement:()I` @kind virtual;
  #L35e9e2.  v0:= temp;
  #L35e9e4.  if v0 == 0 then goto L35e9ea;
  #L35e9e8.  return @kind void;
  #L35e9ea.  v0:= v7.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.buffer` @type ^`java.util.List` @kind object;
  #L35e9ee.  v1:= v8.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.actual` @type ^`io.reactivex.Observer` @kind object;
  #L35e9f2.  v2:= v8.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.index` @type ^`java.lang.Object` @kind object;
  #L35e9f6.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L35e9fa.  v3:= 0I;
  #L35e9fc.  v4:= 1I;
  #L35e9fe.  if v2 == 0 then goto L35ea0c;
  #L35ea02.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L35ea08.  v3:= temp;
  #L35ea0a.  goto L35ea18;
  #L35ea0c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L35ea12.  v2:= temp @kind object;
  #L35ea14.  v8.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.index` @type ^`java.lang.Object` := v2 @kind object;
  #L35ea18.  v2:= v8.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35ea1c.  v5:= 0I;
  #L35ea1e.  if v2 == 0 then goto L35ea28;
  #L35ea22.  v8.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.index` @type ^`java.lang.Object` := v5 @kind object;
  #L35ea26.  return @kind void;
  #L35ea28.  v2:= v7.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.size` @type ^`int`;
  #L35ea2c.  if v2 == v3 then goto L35ea52;
  #L35ea30.  v6:= v8.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35ea34.  if v6 == 0 then goto L35ea3e;
  #L35ea38.  v8.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.index` @type ^`java.lang.Object` := v5 @kind object;
  #L35ea3c.  return @kind void;
  #L35ea3e.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35ea44.  v6:= temp @kind object;
  #L35ea46.  call `onNext`(v1, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L35ea4c.  v3:= v3 + 1;
  #L35ea50.  goto L35ea2c;
  #L35ea52.  v2:= v7.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.size` @type ^`int`;
  #L35ea56.  if v3 == v2 then goto L35ea5c;
  #L35ea5a.  goto L35ea18;
  #L35ea5c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L35ea62.  v2:= temp @kind object;
  #L35ea64.  v8.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.index` @type ^`java.lang.Object` := v2 @kind object;
  #L35ea68.  v2:= -v4 @kind int;
  #L35ea6a.  call temp:= `addAndGet`(v8, v2) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$ReplayDisposable;.addAndGet:(I)I` @kind virtual;
  #L35ea70.  v4:= temp;
  #L35ea72.  if v4 != 0 then goto L35ea18;
  #L35ea76.  return @kind void;
}
procedure `int` `size`(`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer` v1 @kind this) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$UnboundedReplayBuffer;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e8b4.  v0:= v1.`com.jakewharton.rxrelay2.ReplayRelay$UnboundedReplayBuffer.size` @type ^`int`;
  #L35e8b8.  if v0 == 0 then goto L35e8be;
  #L35e8bc.  goto L35e8c0;
  #L35e8be.  v0:= 0I;
  #L35e8c0.  return v0;
}
