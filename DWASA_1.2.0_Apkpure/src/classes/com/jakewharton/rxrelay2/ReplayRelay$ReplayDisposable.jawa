record `com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.actual` @AccessFlag FINAL;
  `boolean` `com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.cancelled` @AccessFlag VOLATILE;
  `java.lang.Object` `com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.index` @AccessFlag ;
  `com.jakewharton.rxrelay2.ReplayRelay` `com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.state` @AccessFlag FINAL;
}
global `long` `@@com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `com.jakewharton.rxrelay2.ReplayRelay` v2 @kind object) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$ReplayDisposable;.<init>:(Lio/reactivex/Observer;Lcom/jakewharton/rxrelay2/ReplayRelay;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35e298.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L35e29e.  v0.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.actual` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L35e2a2.  v0.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.state` @type ^`com.jakewharton.rxrelay2.ReplayRelay` := v2 @kind object;
  #L35e2a6.  return @kind void;
}
procedure `void` `dispose`(`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable` v1 @kind this) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$ReplayDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e2b8.  v0:= v1.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35e2bc.  if v0 != 0 then goto L35e2d0;
  #L35e2c0.  v0:= 1I;
  #L35e2c2.  v1.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L35e2c6.  v0:= v1.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.state` @type ^`com.jakewharton.rxrelay2.ReplayRelay` @kind object;
  #L35e2ca.  call `remove`(v0, v1) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay;.remove:(Lcom/jakewharton/rxrelay2/ReplayRelay$ReplayDisposable;)V` @kind virtual;
  #L35e2d0.  return @kind void;
}
procedure `boolean` `isDisposed`(`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable` v1 @kind this) @signature `Lcom/jakewharton/rxrelay2/ReplayRelay$ReplayDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e280.  v0:= v1.`com.jakewharton.rxrelay2.ReplayRelay$ReplayDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35e284.  return v0;
}
