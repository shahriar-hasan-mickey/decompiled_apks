record `com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable` @kind class @AccessFlag FINAL extends `io.reactivex.disposables.Disposable` @kind interface, `com.jakewharton.rxrelay2.AppendOnlyLinkedArrayList$NonThrowingPredicate` @kind interface {
  `io.reactivex.Observer` `com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.actual` @AccessFlag FINAL;
  `boolean` `com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @AccessFlag VOLATILE;
  `boolean` `com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.emitting` @AccessFlag ;
  `boolean` `com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.fastPath` @AccessFlag ;
  `long` `com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.index` @AccessFlag ;
  `boolean` `com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.next` @AccessFlag ;
  `com.jakewharton.rxrelay2.AppendOnlyLinkedArrayList` `com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.queue` @AccessFlag ;
  `com.jakewharton.rxrelay2.BehaviorRelay` `com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.state` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `com.jakewharton.rxrelay2.BehaviorRelay` v2 @kind object) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.<init>:(Lio/reactivex/Observer;Lcom/jakewharton/rxrelay2/BehaviorRelay;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35d9c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35d9ca.  v0.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.actual` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L35d9ce.  v0.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.state` @type ^`com.jakewharton.rxrelay2.BehaviorRelay` := v2 @kind object;
  #L35d9d2.  return @kind void;
}
procedure `void` `dispose`(`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable` v1 @kind this) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35d9e4.  v0:= v1.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35d9e8.  if v0 != 0 then goto L35d9fc;
  #L35d9ec.  v0:= 1I;
  #L35d9ee.  v1.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L35d9f2.  v0:= v1.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.state` @type ^`com.jakewharton.rxrelay2.BehaviorRelay` @kind object;
  #L35d9f6.  call `remove`(v0, v1) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay;.remove:(Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;)V` @kind virtual;
  #L35d9fc.  return @kind void;
}
procedure `void` `emitFirst`(`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable` v4 @kind this) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.emitFirst:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35da10.  v0:= v4.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35da14.  if v0 == 0 then goto L35da1a;
  #L35da18.  return @kind void;
  #L35da1a.  @monitorenter v4
  #L35da1c.  v0:= v4.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35da20.  if v0 == 0 then goto L35da28;
  #L35da24.  @monitorexit v4
  #L35da26.  return @kind void;
  #L35da28.  v0:= v4.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.next` @type ^`boolean` @kind boolean;
  #L35da2c.  if v0 == 0 then goto L35da34;
  #L35da30.  @monitorexit v4
  #L35da32.  return @kind void;
  #L35da34.  v0:= v4.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.state` @type ^`com.jakewharton.rxrelay2.BehaviorRelay` @kind object;
  #L35da38.  v1:= v0.`com.jakewharton.rxrelay2.BehaviorRelay.readLock` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L35da3c.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L35da42.  v2:= v0.`com.jakewharton.rxrelay2.BehaviorRelay.index` @type ^`long` @kind wide;
  #L35da46.  v4.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.index` @type ^`long` := v2 @kind wide;
  #L35da4a.  v0:= v0.`com.jakewharton.rxrelay2.BehaviorRelay.value` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L35da4e.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L35da54.  v0:= temp @kind object;
  #L35da56.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L35da5c.  v1:= 1I;
  #L35da5e.  if v0 == 0 then goto L35da66;
  #L35da62.  v2:= 1I;
  #L35da64.  goto L35da68;
  #L35da66.  v2:= 0I;
  #L35da68.  v4.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.emitting` @type ^`boolean` := v2 @kind boolean;
  #L35da6c.  v4.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.next` @type ^`boolean` := v1 @kind boolean;
  #L35da70.  @monitorexit v4
  #L35da72.  if v0 == 0 then goto L35da82;
  #L35da76.  call temp:= `test`(v4, v0) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.test:(Ljava/lang/Object;)Z` @kind virtual;
  #L35da7c.  call `emitLoop`(v4) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.emitLoop:()V` @kind virtual;
  #L35da82.  return @kind void;
  #L35da84.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35da86.  @monitorexit v4
  #L35da88.  throw v0;
  catch `java.lang.Throwable` @[L35da1c..L35da72] goto L35da84;
  catch `java.lang.Throwable` @[L35da86..L35da88] goto L35da84;
}
procedure `void` `emitLoop`(`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable` v2 @kind this) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.emitLoop:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L35dab0.  v0:= v2.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35dab4.  if v0 == 0 then goto L35daba;
  #L35dab8.  return @kind void;
  #L35daba.  @monitorenter v2
  #L35dabc.  v0:= v2.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.queue` @type ^`com.jakewharton.rxrelay2.AppendOnlyLinkedArrayList` @kind object;
  #L35dac0.  if v0 != 0 then goto L35dace;
  #L35dac4.  v0:= 0I;
  #L35dac6.  v2.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.emitting` @type ^`boolean` := v0 @kind boolean;
  #L35daca.  @monitorexit v2
  #L35dacc.  return @kind void;
  #L35dace.  v1:= 0I;
  #L35dad0.  v2.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.queue` @type ^`com.jakewharton.rxrelay2.AppendOnlyLinkedArrayList` := v1 @kind object;
  #L35dad4.  @monitorexit v2
  #L35dad6.  call `forEachWhile`(v0, v2) @signature `Lcom/jakewharton/rxrelay2/AppendOnlyLinkedArrayList;.forEachWhile:(Lcom/jakewharton/rxrelay2/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V` @kind virtual;
  #L35dadc.  goto L35dab0;
  #L35dade.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35dae0.  @monitorexit v2
  #L35dae2.  goto L35dae6;
  #L35dae4.  throw v0;
  #L35dae6.  goto L35dae4;
  catch `java.lang.Throwable` @[L35dabc..L35dad6] goto L35dade;
  catch `java.lang.Throwable` @[L35dae0..L35dae2] goto L35dade;
}
procedure `void` `emitNext`(`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable` v3 @kind this, `java.lang.Object` v4 @kind object, `long` v5 ) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.emitNext:(Ljava/lang/Object;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L35db0c.  v0:= v3.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35db10.  if v0 == 0 then goto L35db16;
  #L35db14.  return @kind void;
  #L35db16.  v0:= v3.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.fastPath` @type ^`boolean` @kind boolean;
  #L35db1a.  if v0 != 0 then goto L35db7a;
  #L35db1e.  @monitorenter v3
  #L35db20.  v0:= v3.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35db24.  if v0 == 0 then goto L35db2c;
  #L35db28.  @monitorexit v3
  #L35db2a.  return @kind void;
  #L35db2c.  v0:= v3.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.index` @type ^`long` @kind wide;
  #L35db30.  v2:= lcmp(v0, v5);
  #L35db34.  if v2 != 0 then goto L35db3c;
  #L35db38.  @monitorexit v3
  #L35db3a.  return @kind void;
  #L35db3c.  v5:= v3.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.emitting` @type ^`boolean` @kind boolean;
  #L35db40.  if v5 == 0 then goto L35db66;
  #L35db44.  v5:= v3.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.queue` @type ^`com.jakewharton.rxrelay2.AppendOnlyLinkedArrayList` @kind object;
  #L35db48.  if v5 != 0 then goto L35db5c;
  #L35db4c.  v5:= new `com.jakewharton.rxrelay2.AppendOnlyLinkedArrayList`;
  #L35db50.  v6:= 4I;
  #L35db52.  call `<init>`(v5, v6) @signature `Lcom/jakewharton/rxrelay2/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L35db58.  v3.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.queue` @type ^`com.jakewharton.rxrelay2.AppendOnlyLinkedArrayList` := v5 @kind object;
  #L35db5c.  call `add`(v5, v4) @signature `Lcom/jakewharton/rxrelay2/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L35db62.  @monitorexit v3
  #L35db64.  return @kind void;
  #L35db66.  v5:= 1I;
  #L35db68.  v3.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.next` @type ^`boolean` := v5 @kind boolean;
  #L35db6c.  @monitorexit v3
  #L35db6e.  v3.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.fastPath` @type ^`boolean` := v5 @kind boolean;
  #L35db72.  goto L35db7a;
  #L35db74.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35db76.  @monitorexit v3
  #L35db78.  throw v4;
  #L35db7a.  call temp:= `test`(v3, v4) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.test:(Ljava/lang/Object;)Z` @kind virtual;
  #L35db80.  return @kind void;
  catch `java.lang.Throwable` @[L35db20..L35db6e] goto L35db74;
  catch `java.lang.Throwable` @[L35db76..L35db78] goto L35db74;
}
procedure `boolean` `isDisposed`(`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable` v1 @kind this) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35d984.  v0:= v1.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35d988.  return v0;
}
procedure `boolean` `test`(`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/jakewharton/rxrelay2/BehaviorRelay$BehaviorDisposable;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35d99c.  v0:= v1.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.cancelled` @type ^`boolean` @kind boolean;
  #L35d9a0.  if v0 != 0 then goto L35d9ae;
  #L35d9a4.  v0:= v1.`com.jakewharton.rxrelay2.BehaviorRelay$BehaviorDisposable.actual` @type ^`io.reactivex.Observer` @kind object;
  #L35d9a8.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L35d9ae.  v2:= 0I;
  #L35d9b0.  return v2;
}
