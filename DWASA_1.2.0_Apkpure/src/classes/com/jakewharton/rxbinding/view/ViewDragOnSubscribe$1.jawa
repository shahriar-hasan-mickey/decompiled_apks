record `com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1` @kind class @AccessFlag  extends `android.view.View$OnDragListener` @kind interface {
  `com.jakewharton.rxbinding.view.ViewDragOnSubscribe` `com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1.val$subscriber` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1` v0 @kind this, `com.jakewharton.rxbinding.view.ViewDragOnSubscribe` v1 @kind object, `rx.Subscriber` v2 @kind object) @signature `Lcom/jakewharton/rxbinding/view/ViewDragOnSubscribe$1;.<init>:(Lcom/jakewharton/rxbinding/view/ViewDragOnSubscribe;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L358d70.  v0.`com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1.this$0` @type ^`com.jakewharton.rxbinding.view.ViewDragOnSubscribe` := v1 @kind object;
  #L358d74.  v0.`com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1.val$subscriber` @type ^`rx.Subscriber` := v2 @kind object;
  #L358d78.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L358d7e.  return @kind void;
}
procedure `boolean` `onDrag`(`com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1` v0 @kind this, `android.view.View` v1 @kind object, `android.view.DragEvent` v2 @kind object) @signature `Lcom/jakewharton/rxbinding/view/ViewDragOnSubscribe$1;.onDrag:(Landroid/view/View;Landroid/view/DragEvent;)Z` @AccessFlag PUBLIC {
    temp;

  #L358d18.  v1:= v0.`com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1.this$0` @type ^`com.jakewharton.rxbinding.view.ViewDragOnSubscribe` @kind object;
  #L358d1c.  call temp:= `access$000`(v1) @signature `Lcom/jakewharton/rxbinding/view/ViewDragOnSubscribe;.access$000:(Lcom/jakewharton/rxbinding/view/ViewDragOnSubscribe;)Lrx/functions/Func1;` @kind static;
  #L358d22.  v1:= temp @kind object;
  #L358d24.  call temp:= `call`(v1, v2) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L358d2a.  v1:= temp @kind object;
  #L358d2c.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L358d30.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L358d36.  v1:= temp;
  #L358d38.  if v1 == 0 then goto L358d5a;
  #L358d3c.  v1:= v0.`com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L358d40.  call temp:= `isUnsubscribed`(v1) @signature `Lrx/Subscriber;.isUnsubscribed:()Z` @kind virtual;
  #L358d46.  v1:= temp;
  #L358d48.  if v1 != 0 then goto L358d56;
  #L358d4c.  v1:= v0.`com.jakewharton.rxbinding.view.ViewDragOnSubscribe$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L358d50.  call `onNext`(v1, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L358d56.  v1:= 1I;
  #L358d58.  return v1;
  #L358d5a.  v1:= 0I;
  #L358d5c.  return v1;
}
