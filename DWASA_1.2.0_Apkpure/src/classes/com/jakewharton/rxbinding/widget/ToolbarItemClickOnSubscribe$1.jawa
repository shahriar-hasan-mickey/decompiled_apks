record `com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe$1` @kind class @AccessFlag  extends `android.widget.Toolbar$OnMenuItemClickListener` @kind interface {
  `com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe` `com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe$1.val$subscriber` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe$1` v0 @kind this, `com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe` v1 @kind object, `rx.Subscriber` v2 @kind object) @signature `Lcom/jakewharton/rxbinding/widget/ToolbarItemClickOnSubscribe$1;.<init>:(Lcom/jakewharton/rxbinding/widget/ToolbarItemClickOnSubscribe;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35d788.  v0.`com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe$1.this$0` @type ^`com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe` := v1 @kind object;
  #L35d78c.  v0.`com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe$1.val$subscriber` @type ^`rx.Subscriber` := v2 @kind object;
  #L35d790.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35d796.  return @kind void;
}
procedure `boolean` `onMenuItemClick`(`com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe$1` v1 @kind this, `android.view.MenuItem` v2 @kind object) @signature `Lcom/jakewharton/rxbinding/widget/ToolbarItemClickOnSubscribe$1;.onMenuItemClick:(Landroid/view/MenuItem;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35d758.  v0:= v1.`com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L35d75c.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/Subscriber;.isUnsubscribed:()Z` @kind virtual;
  #L35d762.  v0:= temp;
  #L35d764.  if v0 != 0 then goto L35d772;
  #L35d768.  v0:= v1.`com.jakewharton.rxbinding.widget.ToolbarItemClickOnSubscribe$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L35d76c.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L35d772.  v2:= 1I;
  #L35d774.  return v2;
}
