record `com.jakewharton.rxbinding.internal.Functions` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.jakewharton.rxbinding.internal.Functions$Always` `@@com.jakewharton.rxbinding.internal.Functions.ALWAYS_TRUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `rx.functions.Func0` `@@com.jakewharton.rxbinding.internal.Functions.FUNC0_ALWAYS_TRUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `rx.functions.Func1` `@@com.jakewharton.rxbinding.internal.Functions.FUNC1_ALWAYS_TRUE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/jakewharton/rxbinding/internal/Functions;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3579c4.  v0:= new `com.jakewharton.rxbinding.internal.Functions$Always`;
  #L3579c8.  v1:= 1I;
  #L3579ca.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3579d0.  v1:= temp @kind object;
  #L3579d2.  v2:= 0I;
  #L3579d4.  call `<init>`(v0, v1, v2) @signature `Lcom/jakewharton/rxbinding/internal/Functions$Always;.<init>:(Ljava/lang/Object;Lcom/jakewharton/rxbinding/internal/Functions$1;)V` @kind direct;
  #L3579da.  `@@com.jakewharton.rxbinding.internal.Functions.ALWAYS_TRUE` @type ^`com.jakewharton.rxbinding.internal.Functions$Always` := v0 @kind object;
  #L3579de.  v0:= `@@com.jakewharton.rxbinding.internal.Functions.ALWAYS_TRUE` @type ^`com.jakewharton.rxbinding.internal.Functions$Always` @kind object;
  #L3579e2.  `@@com.jakewharton.rxbinding.internal.Functions.FUNC0_ALWAYS_TRUE` @type ^`rx.functions.Func0` := v0 @kind object;
  #L3579e6.  `@@com.jakewharton.rxbinding.internal.Functions.FUNC1_ALWAYS_TRUE` @type ^`rx.functions.Func1` := v0 @kind object;
  #L3579ea.  return @kind void;
}
procedure `void` `<init>`(`com.jakewharton.rxbinding.internal.Functions` v2 @kind this) @signature `Lcom/jakewharton/rxbinding/internal/Functions;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3579fc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L357a02.  v0:= new `java.lang.AssertionError`;
  #L357a06.  v1:= "No instances." @kind object;
  #L357a0a.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L357a10.  throw v0;
}
