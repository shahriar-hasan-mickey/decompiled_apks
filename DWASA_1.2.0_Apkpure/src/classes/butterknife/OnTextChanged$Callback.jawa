record `butterknife.OnTextChanged$Callback` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `butterknife.OnTextChanged$Callback`[] `@@butterknife.OnTextChanged$Callback.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `butterknife.OnTextChanged$Callback` `@@butterknife.OnTextChanged$Callback.AFTER_TEXT_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `butterknife.OnTextChanged$Callback` `@@butterknife.OnTextChanged$Callback.BEFORE_TEXT_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `butterknife.OnTextChanged$Callback` `@@butterknife.OnTextChanged$Callback.TEXT_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lbutterknife/OnTextChanged$Callback;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29c2fc.  v0:= new `butterknife.OnTextChanged$Callback`;
  #L29c300.  v1:= 0I;
  #L29c302.  v2:= "TEXT_CHANGED" @kind object;
  #L29c306.  call `<init>`(v0, v2, v1) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L29c30c.  `@@butterknife.OnTextChanged$Callback.TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` := v0 @kind object;
  #L29c310.  v0:= new `butterknife.OnTextChanged$Callback`;
  #L29c314.  v2:= 1I;
  #L29c316.  v3:= "BEFORE_TEXT_CHANGED" @kind object;
  #L29c31a.  call `<init>`(v0, v3, v2) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L29c320.  `@@butterknife.OnTextChanged$Callback.BEFORE_TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` := v0 @kind object;
  #L29c324.  v0:= new `butterknife.OnTextChanged$Callback`;
  #L29c328.  v3:= 2I;
  #L29c32a.  v4:= "AFTER_TEXT_CHANGED" @kind object;
  #L29c32e.  call `<init>`(v0, v4, v3) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L29c334.  `@@butterknife.OnTextChanged$Callback.AFTER_TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` := v0 @kind object;
  #L29c338.  v0:= 3I;
  #L29c33a.  v0:= new `butterknife.OnTextChanged$Callback`[v0];
  #L29c33e.  v4:= `@@butterknife.OnTextChanged$Callback.TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` @kind object;
  #L29c342.  v0[v1]:= v4 @kind object;
  #L29c346.  v1:= `@@butterknife.OnTextChanged$Callback.BEFORE_TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` @kind object;
  #L29c34a.  v0[v2]:= v1 @kind object;
  #L29c34e.  v1:= `@@butterknife.OnTextChanged$Callback.AFTER_TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` @kind object;
  #L29c352.  v0[v3]:= v1 @kind object;
  #L29c356.  `@@butterknife.OnTextChanged$Callback.$VALUES` @type ^`butterknife.OnTextChanged$Callback`[] := v0 @kind object;
  #L29c35a.  return @kind void;
}
procedure `void` `<init>`(`butterknife.OnTextChanged$Callback` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L29c36c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L29c372.  return @kind void;
}
procedure `butterknife.OnTextChanged$Callback` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lbutterknife/OnTextChanged$Callback;.valueOf:(Ljava/lang/String;)Lbutterknife/OnTextChanged$Callback;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29c2b4.  v0:= constclass @type ^`butterknife.OnTextChanged$Callback` @kind object;
  #L29c2b8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L29c2be.  v1:= temp @kind object;
  #L29c2c0.  v1:= (`butterknife.OnTextChanged$Callback`) v1 @kind object;
  #L29c2c4.  return v1 @kind object;
}
procedure `butterknife.OnTextChanged$Callback`[] `values`() @signature `Lbutterknife/OnTextChanged$Callback;.values:()[Lbutterknife/OnTextChanged$Callback;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29c2d8.  v0:= `@@butterknife.OnTextChanged$Callback.$VALUES` @type ^`butterknife.OnTextChanged$Callback`[] @kind object;
  #L29c2dc.  call temp:= `clone`(v0) @signature `[Lbutterknife/OnTextChanged$Callback;.clone:()Ljava/lang/Object;` @kind virtual;
  #L29c2e2.  v0:= temp @kind object;
  #L29c2e4.  v0:= (`butterknife.OnTextChanged$Callback`[]) v0 @kind object;
  #L29c2e8.  return v0 @kind object;
}
