record `okhttp3.Request$Builder` @kind class @AccessFlag PUBLIC {
  `okhttp3.RequestBody` `okhttp3.Request$Builder.body` @AccessFlag ;
  `okhttp3.Headers$Builder` `okhttp3.Request$Builder.headers` @AccessFlag ;
  `java.lang.String` `okhttp3.Request$Builder.method` @AccessFlag ;
  `java.lang.Object` `okhttp3.Request$Builder.tag` @AccessFlag ;
  `okhttp3.HttpUrl` `okhttp3.Request$Builder.url` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L460bec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L460bf2.  v0:= "GET" @kind object;
  #L460bf6.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L460bfa.  v0:= new `okhttp3.Headers$Builder`;
  #L460bfe.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L460c04.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L460c08.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L460c1c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L460c22.  v0:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L460c26.  v1.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L460c2a.  v0:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L460c2e.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L460c32.  v0:= v2.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L460c36.  v1.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L460c3a.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L460c3e.  v1.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L460c42.  v2:= v2.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L460c46.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L460c4c.  v2:= temp @kind object;
  #L460c4e.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L460c52.  return @kind void;
}
procedure `okhttp3.Request$Builder` `addHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4607dc.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L4607e0.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L4607e6.  return v1 @kind object;
}
procedure `okhttp3.Request` `build`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4607a8.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L4607ac.  if v0 == 0 then goto L4607bc;
  #L4607b0.  v0:= new `okhttp3.Request`;
  #L4607b4.  call `<init>`(v0, v2) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @kind direct;
  #L4607ba.  return v0 @kind object;
  #L4607bc.  v0:= new `java.lang.IllegalStateException`;
  #L4607c0.  v1:= "url == null" @kind object;
  #L4607c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4607ca.  throw v0;
}
procedure `okhttp3.Request$Builder` `cacheControl`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.CacheControl` v3 @kind object) @signature `Lokhttp3/Request$Builder;.cacheControl:(Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4607f8.  call temp:= `toString`(v3) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @kind virtual;
  #L4607fe.  v3:= temp @kind object;
  #L460800.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L460806.  v0:= temp;
  #L460808.  v1:= "Cache-Control" @kind object;
  #L46080c.  if v0 == 0 then goto L46081a;
  #L460810.  call temp:= `removeHeader`(v2, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L460816.  v3:= temp @kind object;
  #L460818.  return v3 @kind object;
  #L46081a.  call temp:= `header`(v2, v1, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L460820.  v3:= temp @kind object;
  #L460822.  return v3 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.delete:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460834.  v0:= `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` @kind object;
  #L460838.  call temp:= `delete`(v1, v0) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L46083e.  v0:= temp @kind object;
  #L460840.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460854.  v0:= "DELETE" @kind object;
  #L460858.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L46085e.  v2:= temp @kind object;
  #L460860.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `get`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.get:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L460874.  v0:= "GET" @kind object;
  #L460878.  v1:= 0I;
  #L46087a.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L460880.  v0:= temp @kind object;
  #L460882.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `head`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.head:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L460894.  v0:= "HEAD" @kind object;
  #L460898.  v1:= 0I;
  #L46089a.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4608a0.  v0:= temp @kind object;
  #L4608a2.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `header`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4608b4.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L4608b8.  call temp:= `set`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L4608be.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `headers`(`okhttp3.Request$Builder` v0 @kind this, `okhttp3.Headers` v1 @kind object) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;

  #L4608d0.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L4608d6.  v1:= temp @kind object;
  #L4608d8.  v0.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v1 @kind object;
  #L4608dc.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `method`(`okhttp3.Request$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `okhttp3.RequestBody` v4 @kind object) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4608f0.  if v3 == 0 then goto L4609aa;
  #L4608f4.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4608fa.  v0:= temp;
  #L4608fc.  if v0 == 0 then goto L46099a;
  #L460900.  v0:= "method " @kind object;
  #L460904.  if v4 == 0 then goto L46094a;
  #L460908.  call temp:= `permitsRequestBody`(v3) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L46090e.  v1:= temp;
  #L460910.  if v1 == 0 then goto L460916;
  #L460914.  goto L46094a;
  #L460916.  v4:= new `java.lang.IllegalArgumentException`;
  #L46091a.  v1:= new `java.lang.StringBuilder`;
  #L46091e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L460924.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46092a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460930.  v3:= " must not have a request body." @kind object;
  #L460934.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46093a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L460940.  v3:= temp @kind object;
  #L460942.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460948.  throw v4;
  #L46094a.  if v4 != 0 then goto L460990;
  #L46094e.  call temp:= `requiresRequestBody`(v3) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L460954.  v1:= temp;
  #L460956.  if v1 != 0 then goto L46095c;
  #L46095a.  goto L460990;
  #L46095c.  v4:= new `java.lang.IllegalArgumentException`;
  #L460960.  v1:= new `java.lang.StringBuilder`;
  #L460964.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46096a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460970.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460976.  v3:= " must have a request body." @kind object;
  #L46097a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460980.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L460986.  v3:= temp @kind object;
  #L460988.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46098e.  throw v4;
  #L460990.  v2.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v3 @kind object;
  #L460994.  v2.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v4 @kind object;
  #L460998.  return v2 @kind object;
  #L46099a.  v3:= new `java.lang.IllegalArgumentException`;
  #L46099e.  v4:= "method.length() == 0" @kind object;
  #L4609a2.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4609a8.  throw v3;
  #L4609aa.  v3:= new `java.lang.NullPointerException`;
  #L4609ae.  v4:= "method == null" @kind object;
  #L4609b2.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4609b8.  throw v3;
}
procedure `okhttp3.Request$Builder` `patch`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.patch:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4609cc.  v0:= "PATCH" @kind object;
  #L4609d0.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4609d6.  v2:= temp @kind object;
  #L4609d8.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `post`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.post:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4609ec.  v0:= "POST" @kind object;
  #L4609f0.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4609f6.  v2:= temp @kind object;
  #L4609f8.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `put`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.put:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460a0c.  v0:= "PUT" @kind object;
  #L460a10.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L460a16.  v2:= temp @kind object;
  #L460a18.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `removeHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460a2c.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L460a30.  call temp:= `removeAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L460a36.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;

  #L460a48.  v0.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v1 @kind object;
  #L460a4c.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L460a60.  if v7 == 0 then goto L460b36;
  #L460a64.  v1:= 1I;
  #L460a66.  v2:= 0I;
  #L460a68.  v4:= 0I;
  #L460a6a.  v5:= 3I;
  #L460a6c.  v3:= "ws:" @kind object;
  #L460a70.  v0:= v7 @kind object;
  #L460a72.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L460a78.  v0:= temp;
  #L460a7a.  if v0 == 0 then goto L460aac;
  #L460a7e.  v0:= new `java.lang.StringBuilder`;
  #L460a82.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L460a88.  v1:= "http:" @kind object;
  #L460a8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460a92.  v1:= 3I;
  #L460a94.  call temp:= `substring`(v7, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L460a9a.  v7:= temp @kind object;
  #L460a9c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460aa2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L460aa8.  v7:= temp @kind object;
  #L460aaa.  goto L460af2;
  #L460aac.  v1:= 1I;
  #L460aae.  v2:= 0I;
  #L460ab0.  v4:= 0I;
  #L460ab2.  v5:= 4I;
  #L460ab4.  v3:= "wss:" @kind object;
  #L460ab8.  v0:= v7 @kind object;
  #L460aba.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L460ac0.  v0:= temp;
  #L460ac2.  if v0 == 0 then goto L460af2;
  #L460ac6.  v0:= new `java.lang.StringBuilder`;
  #L460aca.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L460ad0.  v1:= "https:" @kind object;
  #L460ad4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460ada.  v1:= 4I;
  #L460adc.  call temp:= `substring`(v7, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L460ae2.  v7:= temp @kind object;
  #L460ae4.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460aea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L460af0.  v7:= temp @kind object;
  #L460af2.  call temp:= `parse`(v7) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L460af8.  v0:= temp @kind object;
  #L460afa.  if v0 == 0 then goto L460b08;
  #L460afe.  call temp:= `url`(v6, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L460b04.  v7:= temp @kind object;
  #L460b06.  return v7 @kind object;
  #L460b08.  v0:= new `java.lang.IllegalArgumentException`;
  #L460b0c.  v1:= new `java.lang.StringBuilder`;
  #L460b10.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L460b16.  v2:= "unexpected url: " @kind object;
  #L460b1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460b20.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460b26.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L460b2c.  v7:= temp @kind object;
  #L460b2e.  call `<init>`(v0, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460b34.  throw v0;
  #L460b36.  v7:= new `java.lang.NullPointerException`;
  #L460b3a.  v0:= "url == null" @kind object;
  #L460b3e.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460b44.  throw v7;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v3 @kind this, `java.net.URL` v4 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Ljava/net/URL;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L460b58.  if v4 == 0 then goto L460ba0;
  #L460b5c.  call temp:= `get`(v4) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @kind static;
  #L460b62.  v0:= temp @kind object;
  #L460b64.  if v0 == 0 then goto L460b72;
  #L460b68.  call temp:= `url`(v3, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L460b6e.  v4:= temp @kind object;
  #L460b70.  return v4 @kind object;
  #L460b72.  v0:= new `java.lang.IllegalArgumentException`;
  #L460b76.  v1:= new `java.lang.StringBuilder`;
  #L460b7a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L460b80.  v2:= "unexpected url: " @kind object;
  #L460b84.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460b8a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460b90.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L460b96.  v4:= temp @kind object;
  #L460b98.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460b9e.  throw v0;
  #L460ba0.  v4:= new `java.lang.NullPointerException`;
  #L460ba4.  v0:= "url == null" @kind object;
  #L460ba8.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460bae.  throw v4;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460bc0.  if v2 == 0 then goto L460bca;
  #L460bc4.  v1.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v2 @kind object;
  #L460bc8.  return v1 @kind object;
  #L460bca.  v2:= new `java.lang.NullPointerException`;
  #L460bce.  v0:= "url == null" @kind object;
  #L460bd2.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460bd8.  throw v2;
}
