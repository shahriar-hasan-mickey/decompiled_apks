record `okhttp3.MultipartBody$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okio.ByteString` `okhttp3.MultipartBody$Builder.boundary` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody$Builder.parts` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody$Builder.type` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45ea0c.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L45ea12.  v0:= temp @kind object;
  #L45ea14.  call temp:= `toString`(v0) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L45ea1a.  v0:= temp @kind object;
  #L45ea1c.  call `<init>`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ea22.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45ea34.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45ea3a.  v0:= `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` @kind object;
  #L45ea3e.  v1.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L45ea42.  v0:= new `java.util.ArrayList`;
  #L45ea46.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45ea4c.  v1.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` := v0 @kind object;
  #L45ea50.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L45ea56.  v2:= temp @kind object;
  #L45ea58.  v1.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` := v2 @kind object;
  #L45ea5c.  return @kind void;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L45e8dc.  call temp:= `createFormData`(v1, v2) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L45e8e2.  v1:= temp @kind object;
  #L45e8e4.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L45e8ea.  v1:= temp @kind object;
  #L45e8ec.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `okhttp3.RequestBody` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L45e900.  call temp:= `createFormData`(v1, v2, v3) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L45e906.  v1:= temp @kind object;
  #L45e908.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L45e90e.  v1:= temp @kind object;
  #L45e910.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L45e924.  call temp:= `create`(v1, v2) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L45e92a.  v1:= temp @kind object;
  #L45e92c.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L45e932.  v1:= temp @kind object;
  #L45e934.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.MultipartBody$Part` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e948.  if v2 == 0 then goto L45e958;
  #L45e94c.  v0:= v1.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L45e950.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45e956.  return v1 @kind object;
  #L45e958.  v2:= new `java.lang.NullPointerException`;
  #L45e95c.  v0:= "part == null" @kind object;
  #L45e960.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45e966.  throw v2;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `okhttp3.RequestBody` v1 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L45e978.  call temp:= `create`(v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L45e97e.  v1:= temp @kind object;
  #L45e980.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L45e986.  v1:= temp @kind object;
  #L45e988.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody` `build`(`okhttp3.MultipartBody$Builder` v4 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45e894.  v0:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L45e898.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L45e89e.  v0:= temp;
  #L45e8a0.  if v0 != 0 then goto L45e8bc;
  #L45e8a4.  v0:= new `okhttp3.MultipartBody`;
  #L45e8a8.  v1:= v4.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` @kind object;
  #L45e8ac.  v2:= v4.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` @kind object;
  #L45e8b0.  v3:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L45e8b4.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @kind direct;
  #L45e8ba.  return v0 @kind object;
  #L45e8bc.  v0:= new `java.lang.IllegalStateException`;
  #L45e8c0.  v1:= "Multipart body must have at least one part." @kind object;
  #L45e8c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45e8ca.  throw v0;
}
procedure `okhttp3.MultipartBody$Builder` `setType`(`okhttp3.MultipartBody$Builder` v3 @kind this, `okhttp3.MediaType` v4 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45e99c.  if v4 == 0 then goto L45e9ec;
  #L45e9a0.  call temp:= `type`(v4) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @kind virtual;
  #L45e9a6.  v0:= temp @kind object;
  #L45e9a8.  v1:= "multipart" @kind object;
  #L45e9ac.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45e9b2.  v0:= temp;
  #L45e9b4.  if v0 == 0 then goto L45e9be;
  #L45e9b8.  v3.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v4 @kind object;
  #L45e9bc.  return v3 @kind object;
  #L45e9be.  v0:= new `java.lang.IllegalArgumentException`;
  #L45e9c2.  v1:= new `java.lang.StringBuilder`;
  #L45e9c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45e9cc.  v2:= "multipart != " @kind object;
  #L45e9d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e9d6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e9dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45e9e2.  v4:= temp @kind object;
  #L45e9e4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45e9ea.  throw v0;
  #L45e9ec.  v4:= new `java.lang.NullPointerException`;
  #L45e9f0.  v0:= "type == null" @kind object;
  #L45e9f4.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45e9fa.  throw v4;
}
