record `okhttp3.Cache$2` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `boolean` `okhttp3.Cache$2.canRemove` @AccessFlag ;
  `java.util.Iterator` `okhttp3.Cache$2.delegate` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Cache$2.nextUrl` @AccessFlag ;
  `okhttp3.Cache` `okhttp3.Cache$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$2` v0 @kind this, `okhttp3.Cache` v1 @kind object) @signature `Lokhttp3/Cache$2;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L455cac.  v0.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` := v1 @kind object;
  #L455cb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L455cb6.  v1:= v0.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` @kind object;
  #L455cba.  v1:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L455cbe.  call temp:= `snapshots`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.snapshots:()Ljava/util/Iterator;` @kind virtual;
  #L455cc4.  v1:= temp @kind object;
  #L455cc6.  v0.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` := v1 @kind object;
  #L455cca.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.Cache$2` v4 @kind this) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L455bc8.  v0:= v4.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L455bcc.  v1:= 1I;
  #L455bce.  if v0 == 0 then goto L455bd4;
  #L455bd2.  return v1;
  #L455bd4.  v0:= 0I;
  #L455bd6.  v4.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v0 @kind boolean;
  #L455bda.  v2:= v4.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L455bde.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L455be4.  v2:= temp;
  #L455be6.  if v2 == 0 then goto L455c30;
  #L455bea.  v2:= v4.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L455bee.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L455bf4.  v2:= temp @kind object;
  #L455bf6.  v2:= (`okhttp3.internal.cache.DiskLruCache$Snapshot`) v2 @kind object;
  #L455bfa.  call temp:= `getSource`(v2, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L455c00.  v3:= temp @kind object;
  #L455c02.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L455c08.  v3:= temp @kind object;
  #L455c0a.  call temp:= `readUtf8LineStrict`(v3) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L455c10.  v3:= temp @kind object;
  #L455c12.  v4.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v3 @kind object;
  #L455c16.  call `close`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L455c1c.  return v1;
  #L455c1e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L455c20.  call `close`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L455c26.  throw v0;
  #L455c28.  call `close`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L455c2e.  goto L455bda;
  #L455c30.  return v0;
  catch `java.io.IOException` @[L455bfa..L455c16] goto L455c28;
  catch `java.lang.Throwable` @[L455bfa..L455c16] goto L455c1e;
}
procedure `java.lang.Object` `next`(`okhttp3.Cache$2` v1 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L455c54.  call temp:= `next`(v1) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @kind virtual;
  #L455c5a.  v0:= temp @kind object;
  #L455c5c.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L455c70.  call temp:= `hasNext`(v2) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @kind virtual;
  #L455c76.  v0:= temp;
  #L455c78.  if v0 == 0 then goto L455c8e;
  #L455c7c.  v0:= v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L455c80.  v1:= 0I;
  #L455c82.  v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v1 @kind object;
  #L455c86.  v1:= 1I;
  #L455c88.  v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v1 @kind boolean;
  #L455c8c.  return v0 @kind object;
  #L455c8e.  v0:= new `java.util.NoSuchElementException`;
  #L455c92.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L455c98.  throw v0;
}
procedure `void` `remove`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L455cdc.  v0:= v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` @kind boolean;
  #L455ce0.  if v0 == 0 then goto L455cf0;
  #L455ce4.  v0:= v2.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L455ce8.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L455cee.  return @kind void;
  #L455cf0.  v0:= new `java.lang.IllegalStateException`;
  #L455cf4.  v1:= "remove() before next()" @kind object;
  #L455cf8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L455cfe.  throw v0;
}
