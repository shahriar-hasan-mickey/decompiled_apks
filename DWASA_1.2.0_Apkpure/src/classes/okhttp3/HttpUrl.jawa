record `okhttp3.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl.fragment` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.host` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.password` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.pathSegments` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.HttpUrl.port` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl.queryNamesAndValues` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.scheme` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.url` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.username` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.HttpUrl.FORM_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `char`[] `@@okhttp3.HttpUrl.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PASSWORD_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.USERNAME_ENCODE_SET` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L45e284.  v0:= 16I;
  #L45e288.  v0:= new `char`[v0];
  #L45e28c.  goto L45e298;
  #L45e292.  `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L45e296.  return @kind void;
  #L45e298.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L45e2bf.  goto L45e292;
}
procedure `void` `<init>`(`okhttp3.HttpUrl` v4 @kind this, `okhttp3.HttpUrl$Builder` v5 @kind object) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45e2d0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45e2d6.  v0:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L45e2da.  v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L45e2de.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L45e2e2.  v1:= 0I;
  #L45e2e4.  call temp:= `percentDecode`(v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L45e2ea.  v0:= temp @kind object;
  #L45e2ec.  v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` := v0 @kind object;
  #L45e2f0.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L45e2f4.  call temp:= `percentDecode`(v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L45e2fa.  v0:= temp @kind object;
  #L45e2fc.  v4.`okhttp3.HttpUrl.password` @type ^`java.lang.String` := v0 @kind object;
  #L45e300.  v0:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L45e304.  v4.`okhttp3.HttpUrl.host` @type ^`java.lang.String` := v0 @kind object;
  #L45e308.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L45e30e.  v0:= temp;
  #L45e310.  v4.`okhttp3.HttpUrl.port` @type ^`int` := v0;
  #L45e314.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45e318.  call temp:= `percentDecode`(v4, v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L45e31e.  v0:= temp @kind object;
  #L45e320.  v4.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` := v0 @kind object;
  #L45e324.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45e328.  v2:= 0I;
  #L45e32a.  if v0 == 0 then goto L45e33e;
  #L45e32e.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45e332.  v3:= 1I;
  #L45e334.  call temp:= `percentDecode`(v4, v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L45e33a.  v0:= temp @kind object;
  #L45e33c.  goto L45e340;
  #L45e33e.  v0:= v2 @kind object;
  #L45e340.  v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L45e344.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L45e348.  if v0 == 0 then goto L45e358;
  #L45e34c.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L45e350.  call temp:= `percentDecode`(v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L45e356.  v2:= temp @kind object;
  #L45e358.  v4.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` := v2 @kind object;
  #L45e35c.  call temp:= `toString`(v5) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45e362.  v5:= temp @kind object;
  #L45e364.  v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` := v5 @kind object;
  #L45e368.  return @kind void;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 , `java.lang.String` v14 @kind object, `boolean` v15 , `boolean` v16 , `boolean` v17 , `boolean` v18 , `java.nio.charset.Charset` v19 @kind object) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L45d7a0.  v1:= v11 @kind object;
  #L45d7a2.  v3:= v13;
  #L45d7a4.  v2:= v12;
  #L45d7a6.  if v2 >= v3 then goto L45d852;
  #L45d7aa.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L45d7b0.  v0:= temp;
  #L45d7b2.  v4:= 32I;
  #L45d7b6.  if v0 < v4 then goto L45d814;
  #L45d7ba.  v4:= 127I;
  #L45d7be.  if v0 == v4 then goto L45d814;
  #L45d7c2.  v4:= 128I;
  #L45d7c6.  if v0 < v4 then goto L45d7ce;
  #L45d7ca.  if v18 != 0 then goto L45d814;
  #L45d7ce.  v4:= v14 @kind object;
  #L45d7d0.  call temp:= `indexOf`(v14, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L45d7d6.  v5:= temp;
  #L45d7d8.  v6:= -1I;
  #L45d7da.  if v5 != v6 then goto L45d816;
  #L45d7de.  v5:= 37I;
  #L45d7e2.  if v0 != v5 then goto L45d7fa;
  #L45d7e6.  if v15 == 0 then goto L45d816;
  #L45d7ea.  if v16 == 0 then goto L45d7fa;
  #L45d7ee.  call temp:= `percentEncoded`(v11, v2, v13) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L45d7f4.  v5:= temp;
  #L45d7f6.  if v5 == 0 then goto L45d816;
  #L45d7fa.  v5:= 43I;
  #L45d7fe.  if v0 != v5 then goto L45d808;
  #L45d802.  if v17 == 0 then goto L45d808;
  #L45d806.  goto L45d816;
  #L45d808.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L45d80e.  v0:= temp;
  #L45d810.  v2:= v2 + v0 @kind int;
  #L45d812.  goto L45d7a6;
  #L45d814.  v4:= v14 @kind object;
  #L45d816.  v10:= new `okio.Buffer`;
  #L45d81a.  call `<init>`(v10) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L45d820.  v0:= v12;
  #L45d822.  call temp:= `writeUtf8`(v10, v11, v12, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L45d828.  v0:= v10 @kind object;
  #L45d82a.  v1:= v11 @kind object;
  #L45d82c.  v3:= v13;
  #L45d82e.  v4:= v14 @kind object;
  #L45d830.  v5:= v15;
  #L45d832.  v6:= v16;
  #L45d836.  v7:= v17;
  #L45d83a.  v8:= v18;
  #L45d83e.  v9:= v19 @kind object;
  #L45d842.  call `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L45d848.  call temp:= `readUtf8`(v10) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L45d84e.  v0:= temp @kind object;
  #L45d850.  return v0 @kind object;
  #L45d852.  v0:= v12;
  #L45d854.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45d85a.  v0:= temp @kind object;
  #L45d85c.  return v0 @kind object;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L45d870.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45d876.  v2:= temp;
  #L45d878.  v1:= 0I;
  #L45d87a.  v8:= 0I;
  #L45d87c.  v0:= v9 @kind object;
  #L45d87e.  v3:= v10 @kind object;
  #L45d880.  v4:= v11;
  #L45d882.  v5:= v12;
  #L45d884.  v6:= v13;
  #L45d886.  v7:= v14;
  #L45d888.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45d88e.  v9:= temp @kind object;
  #L45d890.  return v9 @kind object;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L45d8a4.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45d8aa.  v2:= temp;
  #L45d8ac.  v1:= 0I;
  #L45d8ae.  v0:= v9 @kind object;
  #L45d8b0.  v3:= v10 @kind object;
  #L45d8b2.  v4:= v11;
  #L45d8b4.  v5:= v12;
  #L45d8b6.  v6:= v13;
  #L45d8b8.  v7:= v14;
  #L45d8ba.  v8:= v15 @kind object;
  #L45d8bc.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45d8c2.  v9:= temp @kind object;
  #L45d8c4.  return v9 @kind object;
}
procedure `void` `canonicalize`(`okio.Buffer` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45e37c.  v0:= 0I;
  #L45e37e.  if v8 >= v9 then goto L45e4b8;
  #L45e382.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L45e388.  v1:= temp;
  #L45e38a.  if v11 == 0 then goto L45e3b2;
  #L45e38e.  v2:= 9I;
  #L45e392.  if v1 == v2 then goto L45e4aa;
  #L45e396.  v2:= 10I;
  #L45e39a.  if v1 == v2 then goto L45e4aa;
  #L45e39e.  v2:= 12I;
  #L45e3a2.  if v1 == v2 then goto L45e4aa;
  #L45e3a6.  v2:= 13I;
  #L45e3aa.  if v1 != v2 then goto L45e3b2;
  #L45e3ae.  goto L45e4aa;
  #L45e3b2.  v2:= 43I;
  #L45e3b6.  if v1 != v2 then goto L45e3d6;
  #L45e3ba.  if v13 == 0 then goto L45e3d6;
  #L45e3be.  if v11 == 0 then goto L45e3c8;
  #L45e3c2.  v2:= "+" @kind object;
  #L45e3c6.  goto L45e3cc;
  #L45e3c8.  v2:= "%2B" @kind object;
  #L45e3cc.  call temp:= `writeUtf8`(v6, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L45e3d2.  goto L45e4aa;
  #L45e3d6.  v2:= 32I;
  #L45e3da.  v3:= 37I;
  #L45e3de.  if v1 < v2 then goto L45e426;
  #L45e3e2.  v2:= 127I;
  #L45e3e6.  if v1 == v2 then goto L45e426;
  #L45e3ea.  v2:= 128I;
  #L45e3ee.  if v1 < v2 then goto L45e3f6;
  #L45e3f2.  if v14 != 0 then goto L45e426;
  #L45e3f6.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L45e3fc.  v2:= temp;
  #L45e3fe.  v4:= -1I;
  #L45e400.  if v2 != v4 then goto L45e426;
  #L45e404.  if v1 != v3 then goto L45e41e;
  #L45e408.  if v11 == 0 then goto L45e426;
  #L45e40c.  if v12 == 0 then goto L45e41e;
  #L45e410.  call temp:= `percentEncoded`(v7, v8, v9) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L45e416.  v2:= temp;
  #L45e418.  if v2 != 0 then goto L45e41e;
  #L45e41c.  goto L45e426;
  #L45e41e.  call temp:= `writeUtf8CodePoint`(v6, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L45e424.  goto L45e4aa;
  #L45e426.  if v0 != 0 then goto L45e434;
  #L45e42a.  v0:= new `okio.Buffer`;
  #L45e42e.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L45e434.  if v15 == 0 then goto L45e45c;
  #L45e438.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L45e43c.  call temp:= `equals`(v15, v2) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45e442.  v2:= temp;
  #L45e444.  if v2 == 0 then goto L45e44a;
  #L45e448.  goto L45e45c;
  #L45e44a.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L45e450.  v2:= temp;
  #L45e452.  v2:= v2 + v8 @kind int;
  #L45e454.  call temp:= `writeString`(v0, v7, v8, v2, v15) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L45e45a.  goto L45e462;
  #L45e45c.  call temp:= `writeUtf8CodePoint`(v0, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L45e462.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L45e468.  v2:= temp;
  #L45e46a.  if v2 != 0 then goto L45e4aa;
  #L45e46e.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L45e474.  v2:= temp;
  #L45e476.  v2:= v2 ^& 255;
  #L45e47a.  call temp:= `writeByte`(v6, v3) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L45e480.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L45e484.  v5:= v2 ^> 4;
  #L45e488.  v5:= v5 ^& 15;
  #L45e48c.  v4:= v4[v5] @kind char;
  #L45e490.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L45e496.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L45e49a.  v2:= v2 ^& 15;
  #L45e49e.  v2:= v4[v2] @kind char;
  #L45e4a2.  call temp:= `writeByte`(v6, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L45e4a8.  goto L45e462;
  #L45e4aa.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L45e4b0.  v1:= temp;
  #L45e4b2.  v8:= v8 + v1 @kind int;
  #L45e4b4.  goto L45e37e;
  #L45e4b8.  return @kind void;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45d6dc.  v0:= "http" @kind object;
  #L45d6e0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45d6e6.  v0:= temp;
  #L45d6e8.  if v0 == 0 then goto L45d6f2;
  #L45d6ec.  v1:= 80I;
  #L45d6f0.  return v1;
  #L45d6f2.  v0:= "https" @kind object;
  #L45d6f6.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45d6fc.  v1:= temp;
  #L45d6fe.  if v1 == 0 then goto L45d708;
  #L45d702.  v1:= 443I;
  #L45d706.  return v1;
  #L45d708.  v1:= -1I;
  #L45d70a.  return v1;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URI` v0 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45e054.  call temp:= `toString`(v0) @signature `Ljava/net/URI;.toString:()Ljava/lang/String;` @kind virtual;
  #L45e05a.  v0:= temp @kind object;
  #L45e05c.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L45e062.  v0:= temp @kind object;
  #L45e064.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URL` v0 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45e078.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L45e07e.  v0:= temp @kind object;
  #L45e080.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L45e086.  v0:= temp @kind object;
  #L45e088.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `getChecked`(`java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl;.getChecked:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45e09c.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L45e0a0.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L45e0a6.  v1:= 0I;
  #L45e0a8.  call temp:= `parse`(v0, v1, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L45e0ae.  v1:= temp @kind object;
  #L45e0b0.  v2:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L45e0b4.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L45e0ba.  v3:= temp;
  #L45e0bc.  v2:= v2[v3];
  #L45e0c0.  v3:= 1I;
  #L45e0c2.  if v2 == v3 then goto L45e138;
  #L45e0c6.  v0:= 2I;
  #L45e0c8.  if v2 == v0 then goto L45e10a;
  #L45e0cc.  v0:= new `java.net.MalformedURLException`;
  #L45e0d0.  v2:= new `java.lang.StringBuilder`;
  #L45e0d4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45e0da.  v3:= "Invalid URL: " @kind object;
  #L45e0de.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e0e4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e0ea.  v1:= " for " @kind object;
  #L45e0ee.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e0f4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e0fa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45e100.  v4:= temp @kind object;
  #L45e102.  call `<init>`(v0, v4) @signature `Ljava/net/MalformedURLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45e108.  throw v0;
  #L45e10a.  v0:= new `java.net.UnknownHostException`;
  #L45e10e.  v1:= new `java.lang.StringBuilder`;
  #L45e112.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45e118.  v2:= "Invalid host: " @kind object;
  #L45e11c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e122.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e128.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45e12e.  v4:= temp @kind object;
  #L45e130.  call `<init>`(v0, v4) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45e136.  throw v0;
  #L45e138.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L45e13e.  v4:= temp @kind object;
  #L45e140.  return v4 @kind object;
}
procedure `void` `namesAndValuesToQueryString`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45e4cc.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45e4d2.  v0:= temp;
  #L45e4d4.  v1:= 0I;
  #L45e4d6.  if v1 >= v0 then goto L45e524;
  #L45e4da.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45e4e0.  v2:= temp @kind object;
  #L45e4e2.  v2:= (`java.lang.String`) v2 @kind object;
  #L45e4e6.  v3:= v1 + 1;
  #L45e4ea.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45e4f0.  v3:= temp @kind object;
  #L45e4f2.  v3:= (`java.lang.String`) v3 @kind object;
  #L45e4f6.  if v1 <= 0 then goto L45e504;
  #L45e4fa.  v4:= 38I;
  #L45e4fe.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e504.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e50a.  if v3 == 0 then goto L45e51e;
  #L45e50e.  v2:= 61I;
  #L45e512.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e518.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e51e.  v1:= v1 + 2;
  #L45e522.  goto L45e4d6;
  #L45e524.  return @kind void;
}
procedure `okhttp3.HttpUrl` `parse`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45e154.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L45e158.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L45e15e.  v1:= 0I;
  #L45e160.  call temp:= `parse`(v0, v1, v3) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L45e166.  v3:= temp @kind object;
  #L45e168.  v2:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45e16c.  if v3 != v2 then goto L45e178;
  #L45e170.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L45e176.  v1:= temp @kind object;
  #L45e178.  return v1 @kind object;
}
procedure `void` `pathSegmentsToString`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45e538.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45e53e.  v0:= temp;
  #L45e540.  v1:= 0I;
  #L45e542.  if v1 >= v0 then goto L45e568;
  #L45e546.  v2:= 47I;
  #L45e54a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e550.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45e556.  v2:= temp @kind object;
  #L45e558.  v2:= (`java.lang.String`) v2 @kind object;
  #L45e55c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e562.  v1:= v1 + 1;
  #L45e566.  goto L45e542;
  #L45e568.  return @kind void;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45daf8.  v0:= v4;
  #L45dafa.  if v0 >= v5 then goto L45db42;
  #L45dafe.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45db04.  v1:= temp;
  #L45db06.  v2:= 37I;
  #L45db0a.  if v1 == v2 then goto L45db22;
  #L45db0e.  v2:= 43I;
  #L45db12.  if v1 != v2 then goto L45db1c;
  #L45db16.  if v6 == 0 then goto L45db1c;
  #L45db1a.  goto L45db22;
  #L45db1c.  v0:= v0 + 1;
  #L45db20.  goto L45dafa;
  #L45db22.  v1:= new `okio.Buffer`;
  #L45db26.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L45db2c.  call temp:= `writeUtf8`(v1, v3, v4, v0) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L45db32.  call `percentDecode`(v1, v3, v0, v5, v6) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L45db38.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L45db3e.  v3:= temp @kind object;
  #L45db40.  return v3 @kind object;
  #L45db42.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45db48.  v3:= temp @kind object;
  #L45db4a.  return v3 @kind object;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L45dad4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45dada.  v0:= temp;
  #L45dadc.  v1:= 0I;
  #L45dade.  call temp:= `percentDecode`(v2, v1, v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L45dae4.  v2:= temp @kind object;
  #L45dae6.  return v2 @kind object;
}
procedure `java.util.List` `percentDecode`(`okhttp3.HttpUrl` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45de84.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45de8a.  v0:= temp;
  #L45de8c.  v1:= new `java.util.ArrayList`;
  #L45de90.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L45de96.  v2:= 0I;
  #L45de98.  if v2 >= v0 then goto L45dec4;
  #L45de9c.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45dea2.  v3:= temp @kind object;
  #L45dea4.  v3:= (`java.lang.String`) v3 @kind object;
  #L45dea8.  if v3 == 0 then goto L45deb6;
  #L45deac.  call temp:= `percentDecode`(v3, v6) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L45deb2.  v3:= temp @kind object;
  #L45deb4.  goto L45deb8;
  #L45deb6.  v3:= 0I;
  #L45deb8.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45debe.  v2:= v2 + 1;
  #L45dec2.  goto L45de98;
  #L45dec4.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L45deca.  v5:= temp @kind object;
  #L45decc.  return v5 @kind object;
}
procedure `void` `percentDecode`(`okio.Buffer` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45e57c.  if v7 >= v8 then goto L45e600;
  #L45e580.  call temp:= `codePointAt`(v6, v7) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L45e586.  v0:= temp;
  #L45e588.  v1:= 37I;
  #L45e58c.  if v0 != v1 then goto L45e5d6;
  #L45e590.  v1:= v7 + 2;
  #L45e594.  if v1 >= v8 then goto L45e5d6;
  #L45e598.  v2:= v7 + 1;
  #L45e59c.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45e5a2.  v2:= temp;
  #L45e5a4.  call temp:= `decodeHexDigit`(v2) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L45e5aa.  v2:= temp;
  #L45e5ac.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45e5b2.  v3:= temp;
  #L45e5b4.  call temp:= `decodeHexDigit`(v3) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L45e5ba.  v3:= temp;
  #L45e5bc.  v4:= -1I;
  #L45e5be.  if v2 == v4 then goto L45e5ee;
  #L45e5c2.  if v3 == v4 then goto L45e5ee;
  #L45e5c6.  v7:= v2 ^< 4;
  #L45e5ca.  v7:= v7 + v3 @kind int;
  #L45e5cc.  call temp:= `writeByte`(v5, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L45e5d2.  v7:= v1;
  #L45e5d4.  goto L45e5f4;
  #L45e5d6.  v1:= 43I;
  #L45e5da.  if v0 != v1 then goto L45e5ee;
  #L45e5de.  if v9 == 0 then goto L45e5ee;
  #L45e5e2.  v1:= 32I;
  #L45e5e6.  call temp:= `writeByte`(v5, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L45e5ec.  goto L45e5f4;
  #L45e5ee.  call temp:= `writeUtf8CodePoint`(v5, v0) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L45e5f4.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L45e5fa.  v0:= temp;
  #L45e5fc.  v7:= v7 + v0 @kind int;
  #L45e5fe.  goto L45e57c;
  #L45e600.  return @kind void;
}
procedure `boolean` `percentEncoded`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45d680.  v0:= v4 + 2;
  #L45d684.  v1:= 1I;
  #L45d686.  if v0 >= v5 then goto L45d6c8;
  #L45d68a.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45d690.  v5:= temp;
  #L45d692.  v2:= 37I;
  #L45d696.  if v5 != v2 then goto L45d6c8;
  #L45d69a.  v4:= v4 + v1 @kind int;
  #L45d69c.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45d6a2.  v4:= temp;
  #L45d6a4.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L45d6aa.  v4:= temp;
  #L45d6ac.  v5:= -1I;
  #L45d6ae.  if v4 == v5 then goto L45d6c8;
  #L45d6b2.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45d6b8.  v3:= temp;
  #L45d6ba.  call temp:= `decodeHexDigit`(v3) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L45d6c0.  v3:= temp;
  #L45d6c2.  if v3 == v5 then goto L45d6c8;
  #L45d6c6.  goto L45d6ca;
  #L45d6c8.  v1:= 0I;
  #L45d6ca.  return v1;
}
procedure `java.util.List` `queryStringToNamesAndValues`(`java.lang.String` v5 @kind object) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45df5c.  v0:= new `java.util.ArrayList`;
  #L45df60.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45df66.  v1:= 0I;
  #L45df68.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45df6e.  v2:= temp;
  #L45df70.  if v1 > v2 then goto L45dfe2;
  #L45df74.  v2:= 38I;
  #L45df78.  call temp:= `indexOf`(v5, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L45df7e.  v2:= temp;
  #L45df80.  v3:= -1I;
  #L45df82.  if v2 != v3 then goto L45df8e;
  #L45df86.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45df8c.  v2:= temp;
  #L45df8e.  v4:= 61I;
  #L45df92.  call temp:= `indexOf`(v5, v4, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L45df98.  v4:= temp;
  #L45df9a.  if v4 == v3 then goto L45dfc6;
  #L45df9e.  if v4 <= v2 then goto L45dfa4;
  #L45dfa2.  goto L45dfc6;
  #L45dfa4.  call temp:= `substring`(v5, v1, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45dfaa.  v1:= temp @kind object;
  #L45dfac.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45dfb2.  v4:= v4 + 1;
  #L45dfb6.  call temp:= `substring`(v5, v4, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45dfbc.  v1:= temp @kind object;
  #L45dfbe.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45dfc4.  goto L45dfdc;
  #L45dfc6.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45dfcc.  v1:= temp @kind object;
  #L45dfce.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45dfd4.  v1:= 0I;
  #L45dfd6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45dfdc.  v1:= v2 + 1;
  #L45dfe0.  goto L45df68;
  #L45dfe2.  return v0 @kind object;
}
procedure `java.lang.String` `encodedFragment`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45d8d8.  v0:= v2.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L45d8dc.  if v0 != 0 then goto L45d8e4;
  #L45d8e0.  v0:= 0I;
  #L45d8e2.  return v0 @kind object;
  #L45d8e4.  v0:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d8e8.  v1:= 35I;
  #L45d8ec.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L45d8f2.  v0:= temp;
  #L45d8f4.  v0:= v0 + 1;
  #L45d8f8.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d8fc.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L45d902.  v0:= temp @kind object;
  #L45d904.  return v0 @kind object;
}
procedure `java.lang.String` `encodedPassword`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45d918.  v0:= v3.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L45d91c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L45d922.  v0:= temp;
  #L45d924.  if v0 == 0 then goto L45d92e;
  #L45d928.  v0:= "" @kind object;
  #L45d92c.  return v0 @kind object;
  #L45d92e.  v0:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d932.  v1:= 58I;
  #L45d936.  v2:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45d93a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45d940.  v2:= temp;
  #L45d942.  v2:= v2 + 3;
  #L45d946.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L45d94c.  v0:= temp;
  #L45d94e.  v0:= v0 + 1;
  #L45d952.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d956.  v2:= 64I;
  #L45d95a.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L45d960.  v1:= temp;
  #L45d962.  v2:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d966.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45d96c.  v0:= temp @kind object;
  #L45d96e.  return v0 @kind object;
}
procedure `java.lang.String` `encodedPath`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45d980.  v0:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d984.  v1:= v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45d988.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45d98e.  v1:= temp;
  #L45d990.  v1:= v1 + 3;
  #L45d994.  v2:= 47I;
  #L45d998.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L45d99e.  v0:= temp;
  #L45d9a0.  v1:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d9a4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45d9aa.  v2:= temp;
  #L45d9ac.  v3:= "?#" @kind object;
  #L45d9b0.  call temp:= `delimiterOffset`(v1, v0, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L45d9b6.  v1:= temp;
  #L45d9b8.  v2:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d9bc.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45d9c2.  v0:= temp @kind object;
  #L45d9c4.  return v0 @kind object;
}
procedure `java.util.List` `encodedPathSegments`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45ddec.  v0:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45ddf0.  v1:= v6.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45ddf4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45ddfa.  v1:= temp;
  #L45ddfc.  v1:= v1 + 3;
  #L45de00.  v2:= 47I;
  #L45de04.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L45de0a.  v0:= temp;
  #L45de0c.  v1:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45de10.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45de16.  v3:= temp;
  #L45de18.  v4:= "?#" @kind object;
  #L45de1c.  call temp:= `delimiterOffset`(v1, v0, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L45de22.  v1:= temp;
  #L45de24.  v3:= new `java.util.ArrayList`;
  #L45de28.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45de2e.  if v0 >= v1 then goto L45de58;
  #L45de32.  v0:= v0 + 1;
  #L45de36.  v4:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45de3a.  call temp:= `delimiterOffset`(v4, v0, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L45de40.  v4:= temp;
  #L45de42.  v5:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45de46.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45de4c.  v0:= temp @kind object;
  #L45de4e.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45de54.  v0:= v4;
  #L45de56.  goto L45de2e;
  #L45de58.  return v3 @kind object;
}
procedure `java.lang.String` `encodedQuery`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45d9d8.  v0:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45d9dc.  if v0 != 0 then goto L45d9e4;
  #L45d9e0.  v0:= 0I;
  #L45d9e2.  return v0 @kind object;
  #L45d9e4.  v0:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d9e8.  v1:= 63I;
  #L45d9ec.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L45d9f2.  v0:= temp;
  #L45d9f4.  v0:= v0 + 1;
  #L45d9f8.  v1:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d9fc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45da02.  v2:= temp;
  #L45da04.  v3:= 35I;
  #L45da08.  call temp:= `delimiterOffset`(v1, v0, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L45da0e.  v1:= temp;
  #L45da10.  v2:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45da14.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45da1a.  v0:= temp @kind object;
  #L45da1c.  return v0 @kind object;
}
procedure `java.lang.String` `encodedUsername`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45da30.  v0:= v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L45da34.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L45da3a.  v0:= temp;
  #L45da3c.  if v0 == 0 then goto L45da46;
  #L45da40.  v0:= "" @kind object;
  #L45da44.  return v0 @kind object;
  #L45da46.  v0:= v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45da4a.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45da50.  v0:= temp;
  #L45da52.  v0:= v0 + 3;
  #L45da56.  v1:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45da5a.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45da60.  v2:= temp;
  #L45da62.  v3:= ":@" @kind object;
  #L45da66.  call temp:= `delimiterOffset`(v1, v0, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L45da6c.  v1:= temp;
  #L45da6e.  v2:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45da72.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45da78.  v0:= temp @kind object;
  #L45da7a.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d624.  v0:= instanceof @variable v2 @type ^`okhttp3.HttpUrl` @kind boolean;
  #L45d628.  if v0 == 0 then goto L45d648;
  #L45d62c.  v2:= (`okhttp3.HttpUrl`) v2 @kind object;
  #L45d630.  v2:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d634.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d638.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45d63e.  v2:= temp;
  #L45d640.  if v2 == 0 then goto L45d648;
  #L45d644.  v2:= 1I;
  #L45d646.  goto L45d64a;
  #L45d648.  v2:= 0I;
  #L45d64a.  return v2;
}
procedure `java.lang.String` `fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45da8c.  v0:= v1.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L45da90.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d71c.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45d720.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L45d726.  v0:= temp;
  #L45d728.  return v0;
}
procedure `java.lang.String` `host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45daa4.  v0:= v1.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L45daa8.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45d65c.  v0:= v2.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45d660.  v1:= "https" @kind object;
  #L45d664.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45d66a.  v0:= temp;
  #L45d66c.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45e1b8.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L45e1bc.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L45e1c2.  v1:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45e1c6.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v1 @kind object;
  #L45e1ca.  call temp:= `encodedUsername`(v3) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L45e1d0.  v1:= temp @kind object;
  #L45e1d2.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v1 @kind object;
  #L45e1d6.  call temp:= `encodedPassword`(v3) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L45e1dc.  v1:= temp @kind object;
  #L45e1de.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L45e1e2.  v1:= v3.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L45e1e6.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L45e1ea.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L45e1ee.  v2:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45e1f2.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L45e1f8.  v2:= temp;
  #L45e1fa.  if v1 == v2 then goto L45e204;
  #L45e1fe.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L45e202.  goto L45e206;
  #L45e204.  v1:= -1I;
  #L45e206.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L45e20a.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45e20e.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L45e214.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45e218.  call temp:= `encodedPathSegments`(v3) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L45e21e.  v2:= temp @kind object;
  #L45e220.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L45e226.  call temp:= `encodedQuery`(v3) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L45e22c.  v1:= temp @kind object;
  #L45e22e.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45e234.  call temp:= `encodedFragment`(v3) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L45e23a.  v1:= temp @kind object;
  #L45e23c.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L45e240.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45e254.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L45e258.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L45e25e.  call temp:= `parse`(v0, v2, v3) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L45e264.  v3:= temp @kind object;
  #L45e266.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45e26a.  if v3 != v1 then goto L45e270;
  #L45e26e.  goto L45e272;
  #L45e270.  v0:= 0I;
  #L45e272.  return v0 @kind object;
}
procedure `java.lang.String` `password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45dabc.  v0:= v1.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L45dac0.  return v0 @kind object;
}
procedure `java.util.List` `pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45de6c.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L45de70.  return v0 @kind object;
}
procedure `int` `pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d73c.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L45d740.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45d746.  v0:= temp;
  #L45d748.  return v0;
}
procedure `int` `port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.port:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d75c.  v0:= v1.`okhttp3.HttpUrl.port` @type ^`int`;
  #L45d760.  return v0;
}
procedure `java.lang.String` `query`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45db5c.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45db60.  if v0 != 0 then goto L45db68;
  #L45db64.  v0:= 0I;
  #L45db66.  return v0 @kind object;
  #L45db68.  v0:= new `java.lang.StringBuilder`;
  #L45db6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45db72.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45db76.  call `namesAndValuesToQueryString`(v0, v1) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L45db7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45db82.  v0:= temp @kind object;
  #L45db84.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameter`(`okhttp3.HttpUrl` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45db98.  v0:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45db9c.  v1:= 0I;
  #L45db9e.  if v0 != 0 then goto L45dba4;
  #L45dba2.  return v1 @kind object;
  #L45dba4.  v2:= 0I;
  #L45dba6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45dbac.  v0:= temp;
  #L45dbae.  if v2 >= v0 then goto L45dbe6;
  #L45dbb2.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45dbb6.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45dbbc.  v3:= temp @kind object;
  #L45dbbe.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45dbc4.  v3:= temp;
  #L45dbc6.  if v3 == 0 then goto L45dbe0;
  #L45dbca.  v5:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45dbce.  v2:= v2 + 1;
  #L45dbd2.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45dbd8.  v5:= temp @kind object;
  #L45dbda.  v5:= (`java.lang.String`) v5 @kind object;
  #L45dbde.  return v5 @kind object;
  #L45dbe0.  v2:= v2 + 2;
  #L45dbe4.  goto L45dbae;
  #L45dbe6.  return v1 @kind object;
}
procedure `java.lang.String` `queryParameterName`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45dbf8.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45dbfc.  if v0 == 0 then goto L45dc12;
  #L45dc00.  v2:= v2 * 2;
  #L45dc04.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45dc0a.  v2:= temp @kind object;
  #L45dc0c.  v2:= (`java.lang.String`) v2 @kind object;
  #L45dc10.  return v2 @kind object;
  #L45dc12.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L45dc16.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L45dc1c.  throw v2;
}
procedure `java.util.Set` `queryParameterNames`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45dff4.  v0:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45dff8.  if v0 != 0 then goto L45e006;
  #L45dffc.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L45e002.  v0:= temp @kind object;
  #L45e004.  return v0 @kind object;
  #L45e006.  v0:= new `java.util.LinkedHashSet`;
  #L45e00a.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L45e010.  v1:= 0I;
  #L45e012.  v2:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45e016.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45e01c.  v2:= temp;
  #L45e01e.  if v1 >= v2 then goto L45e03a;
  #L45e022.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45e026.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45e02c.  v3:= temp @kind object;
  #L45e02e.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45e034.  v1:= v1 + 2;
  #L45e038.  goto L45e01e;
  #L45e03a.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L45e040.  v0:= temp @kind object;
  #L45e042.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameterValue`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45dc30.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45dc34.  if v0 == 0 then goto L45dc4e;
  #L45dc38.  v2:= v2 * 2;
  #L45dc3c.  v2:= v2 + 1;
  #L45dc40.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45dc46.  v2:= temp @kind object;
  #L45dc48.  v2:= (`java.lang.String`) v2 @kind object;
  #L45dc4c.  return v2 @kind object;
  #L45dc4e.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L45dc52.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L45dc58.  throw v2;
}
procedure `java.util.List` `queryParameterValues`(`okhttp3.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45dee0.  v0:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45dee4.  if v0 != 0 then goto L45def2;
  #L45dee8.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L45deee.  v6:= temp @kind object;
  #L45def0.  return v6 @kind object;
  #L45def2.  v0:= new `java.util.ArrayList`;
  #L45def6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45defc.  v1:= 0I;
  #L45defe.  v2:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45df02.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45df08.  v2:= temp;
  #L45df0a.  if v1 >= v2 then goto L45df42;
  #L45df0e.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45df12.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45df18.  v3:= temp @kind object;
  #L45df1a.  call temp:= `equals`(v6, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45df20.  v3:= temp;
  #L45df22.  if v3 == 0 then goto L45df3c;
  #L45df26.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45df2a.  v4:= v1 + 1;
  #L45df2e.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45df34.  v3:= temp @kind object;
  #L45df36.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45df3c.  v1:= v1 + 2;
  #L45df40.  goto L45df0a;
  #L45df42.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L45df48.  v6:= temp @kind object;
  #L45df4a.  return v6 @kind object;
}
procedure `int` `querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.querySize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d774.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45d778.  if v0 == 0 then goto L45d78a;
  #L45d77c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45d782.  v0:= temp;
  #L45d784.  v0:= v0 / 2;
  #L45d788.  goto L45d78c;
  #L45d78a.  v0:= 0I;
  #L45d78c.  return v0;
}
procedure `java.lang.String` `redact`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45dc6c.  v0:= "/..." @kind object;
  #L45dc70.  call temp:= `newBuilder`(v2, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45dc76.  v0:= temp @kind object;
  #L45dc78.  v1:= "" @kind object;
  #L45dc7c.  call temp:= `username`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45dc82.  v0:= temp @kind object;
  #L45dc84.  call temp:= `password`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45dc8a.  v0:= temp @kind object;
  #L45dc8c.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L45dc92.  v0:= temp @kind object;
  #L45dc94.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L45dc9a.  v0:= temp @kind object;
  #L45dc9c.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `resolve`(`okhttp3.HttpUrl` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;

  #L45e18c.  call temp:= `newBuilder`(v0, v1) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45e192.  v1:= temp @kind object;
  #L45e194.  if v1 == 0 then goto L45e1a2;
  #L45e198.  call temp:= `build`(v1) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L45e19e.  v1:= temp @kind object;
  #L45e1a0.  goto L45e1a4;
  #L45e1a2.  v1:= 0I;
  #L45e1a4.  return v1 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45dcb0.  v0:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45dcb4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45dcc8.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45dccc.  return v0 @kind object;
}
procedure `java.lang.String` `topPrivateDomain`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.topPrivateDomain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45dce0.  v0:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L45dce4.  call temp:= `verifyAsIpAddress`(v0) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L45dcea.  v0:= temp;
  #L45dcec.  if v0 == 0 then goto L45dcf4;
  #L45dcf0.  v0:= 0I;
  #L45dcf2.  return v0 @kind object;
  #L45dcf4.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L45dcfa.  v0:= temp @kind object;
  #L45dcfc.  v1:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L45dd00.  call temp:= `getEffectiveTldPlusOne`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L45dd06.  v0:= temp @kind object;
  #L45dd08.  return v0 @kind object;
}
procedure `java.net.URI` `uri`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45dd34.  call temp:= `newBuilder`(v4) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45dd3a.  v0:= temp @kind object;
  #L45dd3c.  call temp:= `reencodeForUri`(v0) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45dd42.  v0:= temp @kind object;
  #L45dd44.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45dd4a.  v0:= temp @kind object;
  #L45dd4c.  v1:= new `java.net.URI`;
  #L45dd50.  call `<init>`(v1, v0) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45dd56.  return v1 @kind object;
  #L45dd58.  v1:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L45dd5a.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L45dd5e.  v3:= "" @kind object;
  #L45dd62.  call temp:= `replaceAll`(v0, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L45dd68.  v0:= temp @kind object;
  #L45dd6a.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L45dd70.  v0:= temp @kind object;
  #L45dd72.  return v0 @kind object;
  #L45dd74.  v0:= new `java.lang.RuntimeException`;
  #L45dd78.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L45dd7e.  throw v0;
  catch `java.net.URISyntaxException` @[L45dd4c..L45dd56] goto L45dd58;
  catch `java.lang.Exception` @[L45dd5a..L45dd72] goto L45dd74;
}
procedure `java.net.URL` `url`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45ddac.  v0:= new `java.net.URL`;
  #L45ddb0.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L45ddb4.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ddba.  return v0 @kind object;
  #L45ddbc.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L45ddbe.  v1:= new `java.lang.RuntimeException`;
  #L45ddc2.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L45ddc8.  throw v1;
  catch `java.net.MalformedURLException` @[L45ddac..L45ddba] goto L45ddbc;
}
procedure `java.lang.String` `username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45dd1c.  v0:= v1.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L45dd20.  return v0 @kind object;
}
