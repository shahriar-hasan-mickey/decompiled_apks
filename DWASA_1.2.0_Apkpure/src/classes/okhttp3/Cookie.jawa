record `okhttp3.Cookie` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie.domain` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cookie.expiresAt` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.hostOnly` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.httpOnly` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.name` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.path` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.persistent` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.secure` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.value` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.TIME_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.YEAR_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cookie;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L45a600.  v0:= "(\\d{2,4})[^\\d]*" @kind object;
  #L45a604.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L45a60a.  v0:= temp @kind object;
  #L45a60c.  `@@okhttp3.Cookie.YEAR_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L45a610.  v0:= "(?i)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).*" @kind object;
  #L45a614.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L45a61a.  v0:= temp @kind object;
  #L45a61c.  `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L45a620.  v0:= "(\\d{1,2})[^\\d]*" @kind object;
  #L45a624.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L45a62a.  v0:= temp @kind object;
  #L45a62c.  `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L45a630.  v0:= "(\\d{1,2}):(\\d{1,2}):(\\d{1,2})[^\\d]*" @kind object;
  #L45a634.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L45a63a.  v0:= temp @kind object;
  #L45a63c.  `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L45a640.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cookie` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `boolean` v7 , `boolean` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lokhttp3/Cookie;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L45a654.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45a65a.  v0.`okhttp3.Cookie.name` @type ^`java.lang.String` := v1 @kind object;
  #L45a65e.  v0.`okhttp3.Cookie.value` @type ^`java.lang.String` := v2 @kind object;
  #L45a662.  v0.`okhttp3.Cookie.expiresAt` @type ^`long` := v3 @kind wide;
  #L45a666.  v0.`okhttp3.Cookie.domain` @type ^`java.lang.String` := v5 @kind object;
  #L45a66a.  v0.`okhttp3.Cookie.path` @type ^`java.lang.String` := v6 @kind object;
  #L45a66e.  v0.`okhttp3.Cookie.secure` @type ^`boolean` := v7 @kind boolean;
  #L45a672.  v0.`okhttp3.Cookie.httpOnly` @type ^`boolean` := v8 @kind boolean;
  #L45a676.  v0.`okhttp3.Cookie.hostOnly` @type ^`boolean` := v9 @kind boolean;
  #L45a67a.  v0.`okhttp3.Cookie.persistent` @type ^`boolean` := v10 @kind boolean;
  #L45a67e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cookie` v2 @kind this, `okhttp3.Cookie$Builder` v3 @kind object) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L45a690.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45a696.  v0:= v3.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` @kind object;
  #L45a69a.  if v0 == 0 then goto L45a718;
  #L45a69e.  v0:= v3.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` @kind object;
  #L45a6a2.  if v0 == 0 then goto L45a708;
  #L45a6a6.  v0:= v3.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` @kind object;
  #L45a6aa.  if v0 == 0 then goto L45a6f8;
  #L45a6ae.  v0:= v3.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` @kind object;
  #L45a6b2.  v2.`okhttp3.Cookie.name` @type ^`java.lang.String` := v0 @kind object;
  #L45a6b6.  v0:= v3.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` @kind object;
  #L45a6ba.  v2.`okhttp3.Cookie.value` @type ^`java.lang.String` := v0 @kind object;
  #L45a6be.  v0:= v3.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` @kind wide;
  #L45a6c2.  v2.`okhttp3.Cookie.expiresAt` @type ^`long` := v0 @kind wide;
  #L45a6c6.  v0:= v3.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` @kind object;
  #L45a6ca.  v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` := v0 @kind object;
  #L45a6ce.  v0:= v3.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` @kind object;
  #L45a6d2.  v2.`okhttp3.Cookie.path` @type ^`java.lang.String` := v0 @kind object;
  #L45a6d6.  v0:= v3.`okhttp3.Cookie$Builder.secure` @type ^`boolean` @kind boolean;
  #L45a6da.  v2.`okhttp3.Cookie.secure` @type ^`boolean` := v0 @kind boolean;
  #L45a6de.  v0:= v3.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` @kind boolean;
  #L45a6e2.  v2.`okhttp3.Cookie.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L45a6e6.  v0:= v3.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` @kind boolean;
  #L45a6ea.  v2.`okhttp3.Cookie.persistent` @type ^`boolean` := v0 @kind boolean;
  #L45a6ee.  v3:= v3.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` @kind boolean;
  #L45a6f2.  v2.`okhttp3.Cookie.hostOnly` @type ^`boolean` := v3 @kind boolean;
  #L45a6f6.  return @kind void;
  #L45a6f8.  v3:= new `java.lang.NullPointerException`;
  #L45a6fc.  v0:= "builder.domain == null" @kind object;
  #L45a700.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45a706.  throw v3;
  #L45a708.  v3:= new `java.lang.NullPointerException`;
  #L45a70c.  v0:= "builder.value == null" @kind object;
  #L45a710.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45a716.  throw v3;
  #L45a718.  v3:= new `java.lang.NullPointerException`;
  #L45a71c.  v0:= "builder.name == null" @kind object;
  #L45a720.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45a726.  throw v3;
}
procedure `int` `dateCharacterOffset`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L459cbc.  if v4 >= v5 then goto L459d32;
  #L459cc0.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L459cc6.  v0:= temp;
  #L459cc8.  v1:= 32I;
  #L459ccc.  v2:= 1I;
  #L459cce.  if v0 >= v1 then goto L459cda;
  #L459cd2.  v1:= 9I;
  #L459cd6.  if v0 != v1 then goto L459d20;
  #L459cda.  v1:= 127I;
  #L459cde.  if v0 >= v1 then goto L459d20;
  #L459ce2.  v1:= 48I;
  #L459ce6.  if v0 < v1 then goto L459cf2;
  #L459cea.  v1:= 57I;
  #L459cee.  if v0 <= v1 then goto L459d20;
  #L459cf2.  v1:= 97I;
  #L459cf6.  if v0 < v1 then goto L459d02;
  #L459cfa.  v1:= 122I;
  #L459cfe.  if v0 <= v1 then goto L459d20;
  #L459d02.  v1:= 65I;
  #L459d06.  if v0 < v1 then goto L459d12;
  #L459d0a.  v1:= 90I;
  #L459d0e.  if v0 <= v1 then goto L459d20;
  #L459d12.  v1:= 58I;
  #L459d16.  if v0 != v1 then goto L459d1c;
  #L459d1a.  goto L459d20;
  #L459d1c.  v0:= 0I;
  #L459d1e.  goto L459d22;
  #L459d20.  v0:= 1I;
  #L459d22.  v1:= v6 ^~ 1;
  #L459d26.  if v0 != v1 then goto L459d2c;
  #L459d2a.  return v4;
  #L459d2c.  v4:= v4 + 1;
  #L459d30.  goto L459cbc;
  #L459d32.  return v5;
}
procedure `boolean` `domainMatch`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L459a68.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L459a6e.  v0:= temp;
  #L459a70.  v1:= 1I;
  #L459a72.  if v0 == 0 then goto L459a78;
  #L459a76.  return v1;
  #L459a78.  call temp:= `endsWith`(v2, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L459a7e.  v0:= temp;
  #L459a80.  if v0 == 0 then goto L459ab6;
  #L459a84.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L459a8a.  v0:= temp;
  #L459a8c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L459a92.  v3:= temp;
  #L459a94.  v0:= v0 - v3 @kind int;
  #L459a96.  v0:= v0 - v1 @kind int;
  #L459a98.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L459a9e.  v3:= temp;
  #L459aa0.  v0:= 46I;
  #L459aa4.  if v3 != v0 then goto L459ab6;
  #L459aa8.  call temp:= `verifyAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L459aae.  v2:= temp;
  #L459ab0.  if v2 != 0 then goto L459ab6;
  #L459ab4.  return v1;
  #L459ab6.  v2:= 0I;
  #L459ab8.  return v2;
}
procedure `okhttp3.Cookie` `parse`(`long` v24 , `okhttp3.HttpUrl` v26 @kind object, `java.lang.String` v27 @kind object) @signature `Lokhttp3/Cookie;.parse:(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L45a318.  v0:= v27 @kind object;
  #L45a31c.  call temp:= `length`(v27) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45a322.  v1:= temp;
  #L45a324.  v2:= 59I;
  #L45a328.  v3:= 0I;
  #L45a32a.  call temp:= `delimiterOffset`(v0, v3, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L45a330.  v4:= temp;
  #L45a332.  v5:= 61I;
  #L45a336.  call temp:= `delimiterOffset`(v0, v3, v4, v5) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L45a33c.  v6:= temp;
  #L45a33e.  v7:= 0I;
  #L45a340.  if v6 != v4 then goto L45a346;
  #L45a344.  return v7 @kind object;
  #L45a346.  call temp:= `trimSubstring`(v0, v3, v6) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L45a34c.  v9:= temp @kind object;
  #L45a34e.  call temp:= `isEmpty`(v9) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L45a354.  v8:= temp;
  #L45a356.  if v8 != 0 then goto L45a5a4;
  #L45a35a.  call temp:= `indexOfControlOrNonAscii`(v9) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @kind static;
  #L45a360.  v8:= temp;
  #L45a362.  v10:= -1I;
  #L45a364.  if v8 == v10 then goto L45a36c;
  #L45a368.  goto L45a5a4;
  #L45a36c.  v8:= 1I;
  #L45a36e.  v6:= v6 + v8 @kind int;
  #L45a370.  call temp:= `trimSubstring`(v0, v6, v4) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L45a376.  v6:= temp @kind object;
  #L45a378.  call temp:= `indexOfControlOrNonAscii`(v6) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @kind static;
  #L45a37e.  v11:= temp;
  #L45a380.  if v11 == v10 then goto L45a386;
  #L45a384.  return v7 @kind object;
  #L45a386.  v4:= v4 + v8 @kind int;
  #L45a388.  v10:= -1L;
  #L45a38c.  v12:= 253402300799999L;
  #L45a396.  v8:= v7 @kind object;
  #L45a398.  v19:= v8 @kind object;
  #L45a39c.  v14:= v10 @kind wide;
  #L45a39e.  v21:= v12 @kind wide;
  #L45a3a2.  v17:= 0I;
  #L45a3a6.  v18:= 0I;
  #L45a3aa.  v20:= 1I;
  #L45a3ae.  v23:= 0I;
  #L45a3b2.  if v4 >= v1 then goto L45a49a;
  #L45a3b6.  call temp:= `delimiterOffset`(v0, v4, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L45a3bc.  v7:= temp;
  #L45a3be.  call temp:= `delimiterOffset`(v0, v4, v7, v5) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L45a3c4.  v2:= temp;
  #L45a3c6.  call temp:= `trimSubstring`(v0, v4, v2) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L45a3cc.  v4:= temp @kind object;
  #L45a3ce.  if v2 >= v7 then goto L45a3e0;
  #L45a3d2.  v2:= v2 + 1;
  #L45a3d6.  call temp:= `trimSubstring`(v0, v2, v7) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L45a3dc.  v2:= temp @kind object;
  #L45a3de.  goto L45a3e4;
  #L45a3e0.  v2:= "" @kind object;
  #L45a3e4.  v5:= "expires" @kind object;
  #L45a3e8.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45a3ee.  v5:= temp;
  #L45a3f0.  if v5 == 0 then goto L45a40a;
  #L45a3f4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45a3fa.  v4:= temp;
  #L45a3fc.  call temp:= `parseExpires`(v2, v3, v4) @signature `Lokhttp3/Cookie;.parseExpires:(Ljava/lang/String;II)J` @kind static;
  #L45a402.  v4:= temp @kind wide;
  #L45a404.  v21:= v4 @kind wide;
  #L45a408.  goto L45a424;
  #L45a40a.  v5:= "max-age" @kind object;
  #L45a40e.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45a414.  v5:= temp;
  #L45a416.  if v5 == 0 then goto L45a42a;
  #L45a41a.  call temp:= `parseMaxAge`(v2) @signature `Lokhttp3/Cookie;.parseMaxAge:(Ljava/lang/String;)J` @kind static;
  #L45a420.  v4:= temp @kind wide;
  #L45a422.  v14:= v4 @kind wide;
  #L45a424.  v23:= 1I;
  #L45a428.  goto L45a48a;
  #L45a42a.  v5:= "domain" @kind object;
  #L45a42e.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45a434.  v5:= temp;
  #L45a436.  if v5 == 0 then goto L45a44a;
  #L45a43a.  call temp:= `parseDomain`(v2) @signature `Lokhttp3/Cookie;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L45a440.  v2:= temp @kind object;
  #L45a442.  v8:= v2 @kind object;
  #L45a444.  v20:= 0I;
  #L45a448.  goto L45a48a;
  #L45a44a.  v5:= "path" @kind object;
  #L45a44e.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45a454.  v5:= temp;
  #L45a456.  if v5 == 0 then goto L45a460;
  #L45a45a.  v19:= v2 @kind object;
  #L45a45e.  goto L45a48a;
  #L45a460.  v2:= "secure" @kind object;
  #L45a464.  call temp:= `equalsIgnoreCase`(v4, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45a46a.  v2:= temp;
  #L45a46c.  if v2 == 0 then goto L45a476;
  #L45a470.  v17:= 1I;
  #L45a474.  goto L45a48a;
  #L45a476.  v2:= "httponly" @kind object;
  #L45a47a.  call temp:= `equalsIgnoreCase`(v4, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45a480.  v2:= temp;
  #L45a482.  if v2 == 0 then goto L45a48a;
  #L45a486.  v18:= 1I;
  #L45a48a.  v4:= v7 + 1;
  #L45a48e.  v2:= 59I;
  #L45a492.  v5:= 61I;
  #L45a496.  v7:= 0I;
  #L45a498.  goto L45a3b2;
  #L45a49a.  v0:= -9223372036854775808L;
  #L45a49e.  v2:= lcmp(v14, v0);
  #L45a4a2.  if v2 != 0 then goto L45a4aa;
  #L45a4a6.  v11:= v0 @kind wide;
  #L45a4a8.  goto L45a4f4;
  #L45a4aa.  v0:= lcmp(v14, v10);
  #L45a4ae.  if v0 == 0 then goto L45a4f0;
  #L45a4b2.  v0:= 9223372036854775L;
  #L45a4bc.  v2:= lcmp(v14, v0);
  #L45a4c0.  if v2 > 0 then goto L45a4ce;
  #L45a4c4.  v0:= 1000L;
  #L45a4c8.  v14:= v14 * v0 @kind long;
  #L45a4cc.  goto L45a4d8;
  #L45a4ce.  v14:= 9223372036854775807L;
  #L45a4d8.  v0:= v24 + v14 @kind long;
  #L45a4dc.  v2:= lcmp(v0, v24);
  #L45a4e0.  if v2 < 0 then goto L45a4ec;
  #L45a4e4.  v2:= lcmp(v0, v12);
  #L45a4e8.  if v2 <= 0 then goto L45a4a6;
  #L45a4ec.  v11:= v12 @kind wide;
  #L45a4ee.  goto L45a4f4;
  #L45a4f0.  v11:= v21 @kind wide;
  #L45a4f4.  call temp:= `host`(v26) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L45a4fa.  v0:= temp @kind object;
  #L45a4fc.  if v8 != 0 then goto L45a506;
  #L45a500.  v13:= v0 @kind object;
  #L45a502.  v1:= 0I;
  #L45a504.  goto L45a51a;
  #L45a506.  call temp:= `domainMatch`(v0, v8) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L45a50c.  v1:= temp;
  #L45a50e.  if v1 != 0 then goto L45a516;
  #L45a512.  v1:= 0I;
  #L45a514.  return v1 @kind object;
  #L45a516.  v1:= 0I;
  #L45a518.  v13:= v8 @kind object;
  #L45a51a.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45a520.  v0:= temp;
  #L45a522.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45a528.  v2:= temp;
  #L45a52a.  if v0 == v2 then goto L45a544;
  #L45a52e.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L45a534.  v0:= temp @kind object;
  #L45a536.  call temp:= `getEffectiveTldPlusOne`(v0, v13) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L45a53c.  v0:= temp @kind object;
  #L45a53e.  if v0 != 0 then goto L45a544;
  #L45a542.  return v1 @kind object;
  #L45a544.  v0:= "/" @kind object;
  #L45a548.  v7:= v19 @kind object;
  #L45a54c.  if v7 == 0 then goto L45a562;
  #L45a550.  call temp:= `startsWith`(v7, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L45a556.  v1:= temp;
  #L45a558.  if v1 != 0 then goto L45a55e;
  #L45a55c.  goto L45a562;
  #L45a55e.  v14:= v7 @kind object;
  #L45a560.  goto L45a584;
  #L45a562.  call temp:= `encodedPath`(v26) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L45a568.  v1:= temp @kind object;
  #L45a56a.  v2:= 47I;
  #L45a56e.  call temp:= `lastIndexOf`(v1, v2) @signature `Ljava/lang/String;.lastIndexOf:(I)I` @kind virtual;
  #L45a574.  v2:= temp;
  #L45a576.  if v2 == 0 then goto L45a582;
  #L45a57a.  call temp:= `substring`(v1, v3, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45a580.  v0:= temp @kind object;
  #L45a582.  v14:= v0 @kind object;
  #L45a584.  v0:= new `okhttp3.Cookie`;
  #L45a588.  v8:= v0 @kind object;
  #L45a58a.  v10:= v6 @kind object;
  #L45a58c.  v15:= v17;
  #L45a590.  v16:= v18;
  #L45a594.  v17:= v20;
  #L45a598.  v18:= v23;
  #L45a59c.  call `<init>`(v8, v9, v10, v11, v13, v14, v15, v16, v17, v18) @signature `Lokhttp3/Cookie;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @kind direct;
  #L45a5a2.  return v0 @kind object;
  #L45a5a4.  v0:= v7 @kind object;
  #L45a5a6.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L45a3f4..L45a404] goto L45a48a;
  catch `java.lang.NumberFormatException` @[L45a41a..L45a422] goto L45a48a;
  catch `java.lang.IllegalArgumentException` @[L45a43a..L45a442] goto L45a48a;
}
procedure `okhttp3.Cookie` `parse`(`okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45a5dc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L45a5e2.  v0:= temp @kind wide;
  #L45a5e4.  call temp:= `parse`(v0, v2, v3) @signature `Lokhttp3/Cookie;.parse:(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @kind static;
  #L45a5ea.  v2:= temp @kind object;
  #L45a5ec.  return v2 @kind object;
}
procedure `java.util.List` `parseAll`(`okhttp3.HttpUrl` v4 @kind object, `okhttp3.Headers` v5 @kind object) @signature `Lokhttp3/Cookie;.parseAll:(Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L459fb4.  v0:= "Set-Cookie" @kind object;
  #L459fb8.  call temp:= `values`(v5, v0) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L459fbe.  v5:= temp @kind object;
  #L459fc0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L459fc6.  v0:= temp;
  #L459fc8.  v1:= 0I;
  #L459fca.  v2:= 0I;
  #L459fcc.  if v2 >= v0 then goto L45a004;
  #L459fd0.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L459fd6.  v3:= temp @kind object;
  #L459fd8.  v3:= (`java.lang.String`) v3 @kind object;
  #L459fdc.  call temp:= `parse`(v4, v3) @signature `Lokhttp3/Cookie;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @kind static;
  #L459fe2.  v3:= temp @kind object;
  #L459fe4.  if v3 != 0 then goto L459fea;
  #L459fe8.  goto L459ffe;
  #L459fea.  if v1 != 0 then goto L459ff8;
  #L459fee.  v1:= new `java.util.ArrayList`;
  #L459ff2.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L459ff8.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L459ffe.  v2:= v2 + 1;
  #L45a002.  goto L459fcc;
  #L45a004.  if v1 == 0 then goto L45a012;
  #L45a008.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L45a00e.  v4:= temp @kind object;
  #L45a010.  goto L45a01a;
  #L45a012.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L45a018.  v4:= temp @kind object;
  #L45a01a.  return v4 @kind object;
}
procedure `java.lang.String` `parseDomain`(`java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L459e1c.  v0:= "." @kind object;
  #L459e20.  call temp:= `endsWith`(v2, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L459e26.  v1:= temp;
  #L459e28.  if v1 != 0 then goto L459e5c;
  #L459e2c.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L459e32.  v0:= temp;
  #L459e34.  if v0 == 0 then goto L459e42;
  #L459e38.  v0:= 1I;
  #L459e3a.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L459e40.  v2:= temp @kind object;
  #L459e42.  call temp:= `canonicalizeHost`(v2) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L459e48.  v2:= temp @kind object;
  #L459e4a.  if v2 == 0 then goto L459e50;
  #L459e4e.  return v2 @kind object;
  #L459e50.  v2:= new `java.lang.IllegalArgumentException`;
  #L459e54.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L459e5a.  throw v2;
  #L459e5c.  v2:= new `java.lang.IllegalArgumentException`;
  #L459e60.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L459e66.  throw v2;
}
procedure `long` `parseExpires`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lokhttp3/Cookie;.parseExpires:(Ljava/lang/String;II)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L45a044.  v0:= 0I;
  #L45a046.  call temp:= `dateCharacterOffset`(v12, v13, v14, v0) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L45a04c.  v13:= temp;
  #L45a04e.  v1:= `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L45a052.  call temp:= `matcher`(v1, v12) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L45a058.  v1:= temp @kind object;
  #L45a05a.  v2:= -1I;
  #L45a05c.  v3:= -1I;
  #L45a05e.  v4:= -1I;
  #L45a060.  v5:= -1I;
  #L45a062.  v6:= -1I;
  #L45a064.  v7:= -1I;
  #L45a066.  v8:= -1I;
  #L45a068.  v9:= 2I;
  #L45a06a.  v10:= 1I;
  #L45a06c.  if v13 >= v14 then goto L45a192;
  #L45a070.  v11:= v13 + 1;
  #L45a074.  call temp:= `dateCharacterOffset`(v12, v11, v14, v10) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L45a07a.  v11:= temp;
  #L45a07c.  call temp:= `region`(v1, v13, v11) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L45a082.  if v4 != v2 then goto L45a0d8;
  #L45a086.  v13:= `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L45a08a.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L45a090.  v13:= temp @kind object;
  #L45a092.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L45a098.  v13:= temp;
  #L45a09a.  if v13 == 0 then goto L45a0d8;
  #L45a09e.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45a0a4.  v13:= temp @kind object;
  #L45a0a6.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L45a0ac.  v13:= temp;
  #L45a0ae.  call temp:= `group`(v1, v9) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45a0b4.  v4:= temp @kind object;
  #L45a0b6.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L45a0bc.  v4:= temp;
  #L45a0be.  v7:= 3I;
  #L45a0c0.  call temp:= `group`(v1, v7) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45a0c6.  v7:= temp @kind object;
  #L45a0c8.  call temp:= `parseInt`(v7) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L45a0ce.  v7:= temp;
  #L45a0d0.  v8:= v7;
  #L45a0d2.  v7:= v4;
  #L45a0d4.  v4:= v13;
  #L45a0d6.  goto L45a182;
  #L45a0d8.  if v5 != v2 then goto L45a108;
  #L45a0dc.  v13:= `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L45a0e0.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L45a0e6.  v13:= temp @kind object;
  #L45a0e8.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L45a0ee.  v13:= temp;
  #L45a0f0.  if v13 == 0 then goto L45a108;
  #L45a0f4.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45a0fa.  v13:= temp @kind object;
  #L45a0fc.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L45a102.  v13:= temp;
  #L45a104.  v5:= v13;
  #L45a106.  goto L45a182;
  #L45a108.  if v6 != v2 then goto L45a154;
  #L45a10c.  v13:= `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L45a110.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L45a116.  v13:= temp @kind object;
  #L45a118.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L45a11e.  v13:= temp;
  #L45a120.  if v13 == 0 then goto L45a154;
  #L45a124.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45a12a.  v13:= temp @kind object;
  #L45a12c.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L45a130.  call temp:= `toLowerCase`(v13, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L45a136.  v13:= temp @kind object;
  #L45a138.  v6:= `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L45a13c.  call temp:= `pattern`(v6) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L45a142.  v6:= temp @kind object;
  #L45a144.  call temp:= `indexOf`(v6, v13) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L45a14a.  v13:= temp;
  #L45a14c.  v13:= v13 / 4;
  #L45a150.  v6:= v13;
  #L45a152.  goto L45a182;
  #L45a154.  if v3 != v2 then goto L45a182;
  #L45a158.  v13:= `@@okhttp3.Cookie.YEAR_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L45a15c.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L45a162.  v13:= temp @kind object;
  #L45a164.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L45a16a.  v13:= temp;
  #L45a16c.  if v13 == 0 then goto L45a182;
  #L45a170.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45a176.  v13:= temp @kind object;
  #L45a178.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L45a17e.  v13:= temp;
  #L45a180.  v3:= v13;
  #L45a182.  v11:= v11 + 1;
  #L45a186.  call temp:= `dateCharacterOffset`(v12, v11, v14, v0) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L45a18c.  v13:= temp;
  #L45a18e.  goto L45a068;
  #L45a192.  v12:= 70I;
  #L45a196.  if v3 < v12 then goto L45a1a6;
  #L45a19a.  v12:= 99I;
  #L45a19e.  if v3 > v12 then goto L45a1a6;
  #L45a1a2.  v3:= v3 + 1900;
  #L45a1a6.  if v3 < 0 then goto L45a1b6;
  #L45a1aa.  v12:= 69I;
  #L45a1ae.  if v3 > v12 then goto L45a1b6;
  #L45a1b2.  v3:= v3 + 2000;
  #L45a1b6.  v12:= 1601I;
  #L45a1ba.  if v3 < v12 then goto L45a286;
  #L45a1be.  if v6 == v2 then goto L45a27a;
  #L45a1c2.  if v5 < v10 then goto L45a26e;
  #L45a1c6.  v12:= 31I;
  #L45a1ca.  if v5 > v12 then goto L45a26e;
  #L45a1ce.  if v4 < 0 then goto L45a262;
  #L45a1d2.  v12:= 23I;
  #L45a1d6.  if v4 > v12 then goto L45a262;
  #L45a1da.  if v7 < 0 then goto L45a256;
  #L45a1de.  v12:= 59I;
  #L45a1e2.  if v7 > v12 then goto L45a256;
  #L45a1e6.  if v8 < 0 then goto L45a24a;
  #L45a1ea.  if v8 > v12 then goto L45a24a;
  #L45a1ee.  v12:= new `java.util.GregorianCalendar`;
  #L45a1f2.  v13:= `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` @kind object;
  #L45a1f6.  call `<init>`(v12, v13) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L45a1fc.  call `setLenient`(v12, v0) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L45a202.  call `set`(v12, v10, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L45a208.  v6:= v6 - v10 @kind int;
  #L45a20a.  call `set`(v12, v9, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L45a210.  v13:= 5I;
  #L45a212.  call `set`(v12, v13, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L45a218.  v13:= 11I;
  #L45a21c.  call `set`(v12, v13, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L45a222.  v13:= 12I;
  #L45a226.  call `set`(v12, v13, v7) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L45a22c.  v13:= 13I;
  #L45a230.  call `set`(v12, v13, v8) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L45a236.  v13:= 14I;
  #L45a23a.  call `set`(v12, v13, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L45a240.  call temp:= `getTimeInMillis`(v12) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L45a246.  v12:= temp @kind wide;
  #L45a248.  return v12 @kind wide;
  #L45a24a.  v12:= new `java.lang.IllegalArgumentException`;
  #L45a24e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L45a254.  throw v12;
  #L45a256.  v12:= new `java.lang.IllegalArgumentException`;
  #L45a25a.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L45a260.  throw v12;
  #L45a262.  v12:= new `java.lang.IllegalArgumentException`;
  #L45a266.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L45a26c.  throw v12;
  #L45a26e.  v12:= new `java.lang.IllegalArgumentException`;
  #L45a272.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L45a278.  throw v12;
  #L45a27a.  v12:= new `java.lang.IllegalArgumentException`;
  #L45a27e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L45a284.  throw v12;
  #L45a286.  v12:= new `java.lang.IllegalArgumentException`;
  #L45a28a.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L45a290.  goto L45a294;
  #L45a292.  throw v12;
  #L45a294.  goto L45a292;
}
procedure `long` `parseMaxAge`(`java.lang.String` v6 @kind object) @signature `Lokhttp3/Cookie;.parseMaxAge:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45a2a8.  v0:= -9223372036854775808L;
  #L45a2ac.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L45a2b2.  v2:= temp @kind wide;
  #L45a2b4.  v4:= 0L;
  #L45a2b8.  v6:= lcmp(v2, v4);
  #L45a2bc.  if v6 > 0 then goto L45a2c2;
  #L45a2c0.  goto L45a2c4;
  #L45a2c2.  v0:= v2 @kind wide;
  #L45a2c4.  return v0 @kind wide;
  #L45a2c6.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L45a2c8.  v3:= "-?\\d+" @kind object;
  #L45a2cc.  call temp:= `matches`(v6, v3) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L45a2d2.  v3:= temp;
  #L45a2d4.  if v3 == 0 then goto L45a2f6;
  #L45a2d8.  v2:= "-" @kind object;
  #L45a2dc.  call temp:= `startsWith`(v6, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L45a2e2.  v6:= temp;
  #L45a2e4.  if v6 == 0 then goto L45a2ea;
  #L45a2e8.  goto L45a2f4;
  #L45a2ea.  v0:= 9223372036854775807L;
  #L45a2f4.  return v0 @kind wide;
  #L45a2f6.  throw v2;
  catch `java.lang.NumberFormatException` @[L45a2ac..L45a2b4] goto L45a2c6;
}
procedure `boolean` `pathMatch`(`okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.pathMatch:(Lokhttp3/HttpUrl;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L459c28.  call temp:= `encodedPath`(v2) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L459c2e.  v2:= temp @kind object;
  #L459c30.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L459c36.  v0:= temp;
  #L459c38.  v1:= 1I;
  #L459c3a.  if v0 == 0 then goto L459c40;
  #L459c3e.  return v1;
  #L459c40.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L459c46.  v0:= temp;
  #L459c48.  if v0 == 0 then goto L459c78;
  #L459c4c.  v0:= "/" @kind object;
  #L459c50.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L459c56.  v0:= temp;
  #L459c58.  if v0 == 0 then goto L459c5e;
  #L459c5c.  return v1;
  #L459c5e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L459c64.  v3:= temp;
  #L459c66.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L459c6c.  v2:= temp;
  #L459c6e.  v3:= 47I;
  #L459c72.  if v2 != v3 then goto L459c78;
  #L459c76.  return v1;
  #L459c78.  v2:= 0I;
  #L459c7a.  return v2;
}
procedure `java.lang.String` `domain`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.domain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459dec.  v0:= v1.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L459df0.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Cookie` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lokhttp3/Cookie;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L459acc.  v0:= instanceof @variable v7 @type ^`okhttp3.Cookie` @kind boolean;
  #L459ad0.  v1:= 0I;
  #L459ad2.  if v0 != 0 then goto L459ad8;
  #L459ad6.  return v1;
  #L459ad8.  v7:= (`okhttp3.Cookie`) v7 @kind object;
  #L459adc.  v0:= v7.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L459ae0.  v2:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L459ae4.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L459aea.  v0:= temp;
  #L459aec.  if v0 == 0 then goto L459b6e;
  #L459af0.  v0:= v7.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L459af4.  v2:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L459af8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L459afe.  v0:= temp;
  #L459b00.  if v0 == 0 then goto L459b6e;
  #L459b04.  v0:= v7.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L459b08.  v2:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L459b0c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L459b12.  v0:= temp;
  #L459b14.  if v0 == 0 then goto L459b6e;
  #L459b18.  v0:= v7.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L459b1c.  v2:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L459b20.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L459b26.  v0:= temp;
  #L459b28.  if v0 == 0 then goto L459b6e;
  #L459b2c.  v2:= v7.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L459b30.  v4:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L459b34.  v0:= lcmp(v2, v4);
  #L459b38.  if v0 != 0 then goto L459b6e;
  #L459b3c.  v0:= v7.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L459b40.  v2:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L459b44.  if v0 != v2 then goto L459b6e;
  #L459b48.  v0:= v7.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L459b4c.  v2:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L459b50.  if v0 != v2 then goto L459b6e;
  #L459b54.  v0:= v7.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L459b58.  v2:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L459b5c.  if v0 != v2 then goto L459b6e;
  #L459b60.  v7:= v7.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L459b64.  v0:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L459b68.  if v7 != v0 then goto L459b6e;
  #L459b6c.  v1:= 1I;
  #L459b6e.  return v1;
}
procedure `long` `expiresAt`(`okhttp3.Cookie` v2 @kind this) @signature `Lokhttp3/Cookie;.expiresAt:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45a02c.  v0:= v2.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L45a030.  return v0 @kind wide;
}
procedure `int` `hashCode`(`okhttp3.Cookie` v6 @kind this) @signature `Lokhttp3/Cookie;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L459d44.  v0:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L459d48.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L459d4e.  v0:= temp;
  #L459d50.  v1:= 527I;
  #L459d54.  v1:= v1 + v0 @kind int;
  #L459d56.  v1:= v1 * 31;
  #L459d5a.  v0:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L459d5e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L459d64.  v0:= temp;
  #L459d66.  v1:= v1 + v0 @kind int;
  #L459d68.  v1:= v1 * 31;
  #L459d6c.  v0:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L459d70.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L459d76.  v0:= temp;
  #L459d78.  v1:= v1 + v0 @kind int;
  #L459d7a.  v1:= v1 * 31;
  #L459d7e.  v0:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L459d82.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L459d88.  v0:= temp;
  #L459d8a.  v1:= v1 + v0 @kind int;
  #L459d8c.  v1:= v1 * 31;
  #L459d90.  v2:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L459d94.  v0:= 32I;
  #L459d98.  v4:= v2 ^>> v0 @kind long;
  #L459d9c.  v2:= v2 ^~ v4 @kind long;
  #L459d9e.  v0:= (`int`) v2 @kind l2i;
  #L459da0.  v1:= v1 + v0 @kind int;
  #L459da2.  v1:= v1 * 31;
  #L459da6.  v0:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L459daa.  v0:= v0 ^~ 1;
  #L459dae.  v1:= v1 + v0 @kind int;
  #L459db0.  v1:= v1 * 31;
  #L459db4.  v0:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L459db8.  v0:= v0 ^~ 1;
  #L459dbc.  v1:= v1 + v0 @kind int;
  #L459dbe.  v1:= v1 * 31;
  #L459dc2.  v0:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L459dc6.  v0:= v0 ^~ 1;
  #L459dca.  v1:= v1 + v0 @kind int;
  #L459dcc.  v1:= v1 * 31;
  #L459dd0.  v0:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L459dd4.  v0:= v0 ^~ 1;
  #L459dd8.  v1:= v1 + v0 @kind int;
  #L459dda.  return v1;
}
procedure `boolean` `hostOnly`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.hostOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459b80.  v0:= v1.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L459b84.  return v0;
}
procedure `boolean` `httpOnly`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.httpOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459b98.  v0:= v1.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L459b9c.  return v0;
}
procedure `boolean` `matches`(`okhttp3.Cookie` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object) @signature `Lokhttp3/Cookie;.matches:(Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L459bb0.  v0:= v2.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L459bb4.  if v0 == 0 then goto L459bce;
  #L459bb8.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L459bbe.  v0:= temp @kind object;
  #L459bc0.  v1:= v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L459bc4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L459bca.  v0:= temp;
  #L459bcc.  goto L459be2;
  #L459bce.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L459bd4.  v0:= temp @kind object;
  #L459bd6.  v1:= v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L459bda.  call temp:= `domainMatch`(v0, v1) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L459be0.  v0:= temp;
  #L459be2.  v1:= 0I;
  #L459be4.  if v0 != 0 then goto L459bea;
  #L459be8.  return v1;
  #L459bea.  v0:= v2.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L459bee.  call temp:= `pathMatch`(v3, v0) @signature `Lokhttp3/Cookie;.pathMatch:(Lokhttp3/HttpUrl;Ljava/lang/String;)Z` @kind static;
  #L459bf4.  v0:= temp;
  #L459bf6.  if v0 != 0 then goto L459bfc;
  #L459bfa.  return v1;
  #L459bfc.  v0:= v2.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L459c00.  if v0 == 0 then goto L459c12;
  #L459c04.  call temp:= `isHttps`(v3) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L459c0a.  v3:= temp;
  #L459c0c.  if v3 != 0 then goto L459c12;
  #L459c10.  return v1;
  #L459c12.  v3:= 1I;
  #L459c14.  return v3;
}
procedure `java.lang.String` `name`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.name:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459e04.  v0:= v1.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L459e08.  return v0 @kind object;
}
procedure `java.lang.String` `path`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.path:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459e78.  v0:= v1.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L459e7c.  return v0 @kind object;
}
procedure `boolean` `persistent`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.persistent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459c8c.  v0:= v1.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L459c90.  return v0;
}
procedure `boolean` `secure`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.secure:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459ca4.  v0:= v1.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L459ca8.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459e90.  v0:= 0I;
  #L459e92.  call temp:= `toString`(v1, v0) @signature `Lokhttp3/Cookie;.toString:(Z)Ljava/lang/String;` @kind virtual;
  #L459e98.  v0:= temp @kind object;
  #L459e9a.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Cookie` v6 @kind this, `boolean` v7 ) @signature `Lokhttp3/Cookie;.toString:(Z)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L459eac.  v0:= new `java.lang.StringBuilder`;
  #L459eb0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L459eb6.  v1:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L459eba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459ec0.  v1:= 61I;
  #L459ec4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L459eca.  v1:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L459ece.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459ed4.  v1:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L459ed8.  if v1 == 0 then goto L459f1e;
  #L459edc.  v1:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L459ee0.  v3:= -9223372036854775808L;
  #L459ee4.  v5:= lcmp(v1, v3);
  #L459ee8.  if v5 != 0 then goto L459ef8;
  #L459eec.  v1:= "; max-age=0" @kind object;
  #L459ef0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459ef6.  goto L459f1e;
  #L459ef8.  v1:= "; expires=" @kind object;
  #L459efc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459f02.  v1:= new `java.util.Date`;
  #L459f06.  v2:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L459f0a.  call `<init>`(v1, v2) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L459f10.  call temp:= `format`(v1) @signature `Lokhttp3/internal/http/HttpDate;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L459f16.  v1:= temp @kind object;
  #L459f18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459f1e.  v1:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L459f22.  if v1 != 0 then goto L459f48;
  #L459f26.  v1:= "; domain=" @kind object;
  #L459f2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459f30.  if v7 == 0 then goto L459f3e;
  #L459f34.  v7:= "." @kind object;
  #L459f38.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459f3e.  v7:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L459f42.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459f48.  v7:= "; path=" @kind object;
  #L459f4c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459f52.  v7:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L459f56.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459f5c.  v7:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L459f60.  if v7 == 0 then goto L459f6e;
  #L459f64.  v7:= "; secure" @kind object;
  #L459f68.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459f6e.  v7:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L459f72.  if v7 == 0 then goto L459f80;
  #L459f76.  v7:= "; httponly" @kind object;
  #L459f7a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459f80.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L459f86.  v7:= temp @kind object;
  #L459f88.  return v7 @kind object;
}
procedure `java.lang.String` `value`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.value:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459f9c.  v0:= v1.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L459fa0.  return v0 @kind object;
}
