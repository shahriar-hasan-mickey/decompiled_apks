record `okhttp3.Cache$CacheResponseBody` @kind class @AccessFlag  extends `okhttp3.ResponseBody` @kind class {
  `okio.BufferedSource` `okhttp3.Cache$CacheResponseBody.bodySource` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$CacheResponseBody.contentLength` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$CacheResponseBody.contentType` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.Cache$CacheResponseBody.snapshot` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Cache$CacheResponseBody` v0 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L455f34.  call `<init>`(v0) @signature `Lokhttp3/ResponseBody;.<init>:()V` @kind direct;
  #L455f3a.  v0.`okhttp3.Cache$CacheResponseBody.snapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L455f3e.  v0.`okhttp3.Cache$CacheResponseBody.contentType` @type ^`java.lang.String` := v2 @kind object;
  #L455f42.  v0.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` := v3 @kind object;
  #L455f46.  v2:= 1I;
  #L455f48.  call temp:= `getSource`(v1, v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L455f4e.  v2:= temp @kind object;
  #L455f50.  v3:= new `okhttp3.Cache$CacheResponseBody$1`;
  #L455f54.  call `<init>`(v3, v0, v2, v1) @signature `Lokhttp3/Cache$CacheResponseBody$1;.<init>:(Lokhttp3/Cache$CacheResponseBody;Lokio/Source;Lokhttp3/internal/cache/DiskLruCache$Snapshot;)V` @kind direct;
  #L455f5a.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L455f60.  v1:= temp @kind object;
  #L455f62.  v0.`okhttp3.Cache$CacheResponseBody.bodySource` @type ^`okio.BufferedSource` := v1 @kind object;
  #L455f66.  return @kind void;
}
procedure `long` `contentLength`(`okhttp3.Cache$CacheResponseBody` v3 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L455eb8.  v0:= -1L;
  #L455ebc.  v2:= v3.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` @kind object;
  #L455ec0.  if v2 == 0 then goto L455ed0;
  #L455ec4.  v2:= v3.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` @kind object;
  #L455ec8.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L455ece.  v0:= temp @kind wide;
  #L455ed0.  return v0 @kind wide;
  catch `java.lang.NumberFormatException` @[L455ebc..L455ed0] goto L455ed0;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.Cache$CacheResponseBody` v1 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455ef4.  v0:= v1.`okhttp3.Cache$CacheResponseBody.contentType` @type ^`java.lang.String` @kind object;
  #L455ef8.  if v0 == 0 then goto L455f06;
  #L455efc.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L455f02.  v0:= temp @kind object;
  #L455f04.  goto L455f08;
  #L455f06.  v0:= 0I;
  #L455f08.  return v0 @kind object;
}
procedure `okio.BufferedSource` `source`(`okhttp3.Cache$CacheResponseBody` v1 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.source:()Lokio/BufferedSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455f1c.  v0:= v1.`okhttp3.Cache$CacheResponseBody.bodySource` @type ^`okio.BufferedSource` @kind object;
  #L455f20.  return v0 @kind object;
}
