record `okhttp3.HttpUrl$1` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L45c158.  call temp:= `values`() @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.values:()[Lokhttp3/HttpUrl$Builder$ParseResult;` @kind static;
  #L45c15e.  v0:= temp @kind object;
  #L45c160.  v0:= length @variable v0;
  #L45c162.  v0:= new `int`[v0];
  #L45c166.  `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] := v0 @kind object;
  #L45c16a.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L45c16e.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c172.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L45c178.  v1:= temp;
  #L45c17a.  v2:= 1I;
  #L45c17c.  v0[v1]:= v2;
  #L45c180.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L45c184.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c188.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L45c18e.  v1:= temp;
  #L45c190.  v2:= 2I;
  #L45c192.  v0[v1]:= v2;
  #L45c196.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L45c19a.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c19e.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L45c1a4.  v1:= temp;
  #L45c1a6.  v2:= 3I;
  #L45c1a8.  v0[v1]:= v2;
  #L45c1ac.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L45c1b0.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c1b4.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L45c1ba.  v1:= temp;
  #L45c1bc.  v2:= 4I;
  #L45c1be.  v0[v1]:= v2;
  #L45c1c2.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L45c1c6.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c1ca.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L45c1d0.  v1:= temp;
  #L45c1d2.  v2:= 5I;
  #L45c1d4.  v0[v1]:= v2;
  #L45c1d8.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L45c16a..L45c180] goto L45c180;
  catch `java.lang.NoSuchFieldError` @[L45c180..L45c196] goto L45c196;
  catch `java.lang.NoSuchFieldError` @[L45c196..L45c1ac] goto L45c1ac;
  catch `java.lang.NoSuchFieldError` @[L45c1ac..L45c1c2] goto L45c1c2;
  catch `java.lang.NoSuchFieldError` @[L45c1c2..L45c1d8] goto L45c1d8;
}
