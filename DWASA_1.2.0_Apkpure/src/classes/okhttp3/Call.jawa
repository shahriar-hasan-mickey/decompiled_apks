record `okhttp3.Call` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.lang.Cloneable` @kind interface {
}
procedure `void` `cancel`() @signature `Lokhttp3/Call;.cancel:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.Call` `clone`() @signature `Lokhttp3/Call;.clone:()Lokhttp3/Call;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `enqueue`(`okhttp3.Callback` v0 @kind object) @signature `Lokhttp3/Call;.enqueue:(Lokhttp3/Callback;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.Response` `execute`() @signature `Lokhttp3/Call;.execute:()Lokhttp3/Response;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isCanceled`() @signature `Lokhttp3/Call;.isCanceled:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isExecuted`() @signature `Lokhttp3/Call;.isExecuted:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.Request` `request`() @signature `Lokhttp3/Call;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
