record `okhttp3.internal.http1.Http1Codec$UnknownLengthSource` @kind class @AccessFlag  extends `okhttp3.internal.http1.Http1Codec$AbstractSource` @kind class {
  `boolean` `okhttp3.internal.http1.Http1Codec$UnknownLengthSource.inputExhausted` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$UnknownLengthSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$UnknownLengthSource` v1 @kind this, `okhttp3.internal.http1.Http1Codec` v2 @kind object) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L46b348.  v1.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v2 @kind object;
  #L46b34c.  v0:= 0I;
  #L46b34e.  call `<init>`(v1, v2, v0) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;Lokhttp3/internal/http1/Http1Codec$1;)V` @kind direct;
  #L46b354.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$UnknownLengthSource` v2 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46b368.  v0:= v2.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.closed` @type ^`boolean` @kind boolean;
  #L46b36c.  if v0 == 0 then goto L46b372;
  #L46b370.  return @kind void;
  #L46b372.  v0:= v2.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.inputExhausted` @type ^`boolean` @kind boolean;
  #L46b376.  if v0 != 0 then goto L46b384;
  #L46b37a.  v0:= 0I;
  #L46b37c.  v1:= 0I;
  #L46b37e.  call `endOfInput`(v2, v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L46b384.  v0:= 1I;
  #L46b386.  v2.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L46b38a.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1Codec$UnknownLengthSource` v3 @kind this, `okio.Buffer` v4 @kind object, `long` v5 ) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46b2b4.  v0:= 0L;
  #L46b2b8.  v2:= lcmp(v5, v0);
  #L46b2bc.  if v2 < 0 then goto L46b308;
  #L46b2c0.  v0:= v3.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.closed` @type ^`boolean` @kind boolean;
  #L46b2c4.  if v0 != 0 then goto L46b2f8;
  #L46b2c8.  v0:= v3.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.inputExhausted` @type ^`boolean` @kind boolean;
  #L46b2cc.  v1:= -1L;
  #L46b2d0.  if v0 == 0 then goto L46b2d6;
  #L46b2d4.  return v1 @kind wide;
  #L46b2d6.  call temp:= `read`(v3, v4, v5) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.read:(Lokio/Buffer;J)J` @kind super;
  #L46b2dc.  v4:= temp @kind wide;
  #L46b2de.  v6:= lcmp(v4, v1);
  #L46b2e2.  if v6 != 0 then goto L46b2f6;
  #L46b2e6.  v4:= 1I;
  #L46b2e8.  v3.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.inputExhausted` @type ^`boolean` := v4 @kind boolean;
  #L46b2ec.  v5:= 0I;
  #L46b2ee.  call `endOfInput`(v3, v4, v5) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L46b2f4.  return v1 @kind wide;
  #L46b2f6.  return v4 @kind wide;
  #L46b2f8.  v4:= new `java.lang.IllegalStateException`;
  #L46b2fc.  v5:= "closed" @kind object;
  #L46b300.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46b306.  throw v4;
  #L46b308.  v4:= new `java.lang.IllegalArgumentException`;
  #L46b30c.  v0:= new `java.lang.StringBuilder`;
  #L46b310.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46b316.  v1:= "byteCount < 0: " @kind object;
  #L46b31a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b320.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b326.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46b32c.  v5:= temp @kind object;
  #L46b32e.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46b334.  throw v4;
}
