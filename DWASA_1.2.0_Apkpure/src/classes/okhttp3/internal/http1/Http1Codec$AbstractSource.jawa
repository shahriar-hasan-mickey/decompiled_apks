record `okhttp3.internal.http1.Http1Codec$AbstractSource` @kind class @AccessFlag ABSTRACT extends `okio.Source` @kind interface {
  `long` `okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @AccessFlag PROTECTED;
  `boolean` `okhttp3.internal.http1.Http1Codec$AbstractSource.closed` @AccessFlag PROTECTED;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.ForwardingTimeout` `okhttp3.internal.http1.Http1Codec$AbstractSource.timeout` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v2 @kind this, `okhttp3.internal.http1.Http1Codec` v3 @kind object) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L46aad8.  v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v3 @kind object;
  #L46aadc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46aae2.  v3:= new `okio.ForwardingTimeout`;
  #L46aae6.  v0:= v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46aaea.  v0:= v0.`okhttp3.internal.http1.Http1Codec.source` @type ^`okio.BufferedSource` @kind object;
  #L46aaee.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L46aaf4.  v0:= temp @kind object;
  #L46aaf6.  call `<init>`(v3, v0) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L46aafc.  v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.timeout` @type ^`okio.ForwardingTimeout` := v3 @kind object;
  #L46ab00.  v0:= 0L;
  #L46ab04.  v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @type ^`long` := v0 @kind wide;
  #L46ab08.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v0 @kind this, `okhttp3.internal.http1.Http1Codec` v1 @kind object, `okhttp3.internal.http1.Http1Codec$1` v2 @kind object) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;Lokhttp3/internal/http1/Http1Codec$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L46ab1c.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;)V` @kind direct;
  #L46ab22.  return @kind void;
}
procedure `void` `endOfInput`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v7 @kind this, `boolean` v8 , `java.io.IOException` v9 @kind object) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.endOfInput:(ZLjava/io/IOException;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46ab34.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ab38.  v0:= v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int`;
  #L46ab3c.  v1:= 6I;
  #L46ab3e.  if v0 != v1 then goto L46ab44;
  #L46ab42.  return @kind void;
  #L46ab44.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ab48.  v0:= v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int`;
  #L46ab4c.  v2:= 5I;
  #L46ab4e.  if v0 != v2 then goto L46ab8e;
  #L46ab52.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ab56.  v2:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L46ab5a.  call `detachTimeout`(v0, v2) @signature `Lokhttp3/internal/http1/Http1Codec;.detachTimeout:(Lokio/ForwardingTimeout;)V` @kind virtual;
  #L46ab60.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ab64.  v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int` := v1;
  #L46ab68.  v0:= v0.`okhttp3.internal.http1.Http1Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L46ab6c.  if v0 == 0 then goto L46ab8c;
  #L46ab70.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ab74.  v1:= v0.`okhttp3.internal.http1.Http1Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L46ab78.  v2:= v8 ^~ 1;
  #L46ab7c.  v3:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ab80.  v4:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @type ^`long` @kind wide;
  #L46ab84.  v6:= v9 @kind object;
  #L46ab86.  call `streamFinished`(v1, v2, v3, v4, v6) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFinished:(ZLokhttp3/internal/http/HttpCodec;JLjava/io/IOException;)V` @kind virtual;
  #L46ab8c.  return @kind void;
  #L46ab8e.  v8:= new `java.lang.IllegalStateException`;
  #L46ab92.  v9:= new `java.lang.StringBuilder`;
  #L46ab96.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46ab9c.  v0:= "state: " @kind object;
  #L46aba0.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46aba6.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46abaa.  v0:= v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int`;
  #L46abae.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L46abb4.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46abba.  v9:= temp @kind object;
  #L46abbc.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46abc2.  throw v8;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v2 @kind this, `okio.Buffer` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46aa6c.  v0:= v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46aa70.  v0:= v0.`okhttp3.internal.http1.Http1Codec.source` @type ^`okio.BufferedSource` @kind object;
  #L46aa74.  call temp:= `read`(v0, v3, v4) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L46aa7a.  v3:= temp @kind wide;
  #L46aa7c.  v0:= 0L;
  #L46aa80.  v5:= lcmp(v3, v0);
  #L46aa84.  if v5 <= 0 then goto L46aa92;
  #L46aa88.  v0:= v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @type ^`long` @kind wide;
  #L46aa8c.  v0:= v0 + v3 @kind long;
  #L46aa8e.  v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @type ^`long` := v0 @kind wide;
  #L46aa92.  return v3 @kind wide;
  #L46aa94.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L46aa96.  v4:= 0I;
  #L46aa98.  call `endOfInput`(v2, v4, v3) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L46aa9e.  throw v3;
  catch `java.io.IOException` @[L46aa6c..L46aa92] goto L46aa94;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46aac0.  v0:= v1.`okhttp3.internal.http1.Http1Codec$AbstractSource.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L46aac4.  return v0 @kind object;
}
