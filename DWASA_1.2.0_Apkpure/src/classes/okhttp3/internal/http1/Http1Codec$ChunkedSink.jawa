record `okhttp3.internal.http1.Http1Codec$ChunkedSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.ForwardingTimeout` `okhttp3.internal.http1.Http1Codec$ChunkedSink.timeout` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v1 @kind this, `okhttp3.internal.http1.Http1Codec` v2 @kind object) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.<init>:(Lokhttp3/internal/http1/Http1Codec;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L46abec.  v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v2 @kind object;
  #L46abf0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46abf6.  v2:= new `okio.ForwardingTimeout`;
  #L46abfa.  v0:= v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46abfe.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L46ac02.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L46ac08.  v0:= temp @kind object;
  #L46ac0a.  call `<init>`(v2, v0) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L46ac10.  v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.timeout` @type ^`okio.ForwardingTimeout` := v2 @kind object;
  #L46ac14.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v2 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46ac28.  @monitorenter v2
  #L46ac2a.  v0:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @type ^`boolean` @kind boolean;
  #L46ac2e.  if v0 == 0 then goto L46ac36;
  #L46ac32.  @monitorexit v2
  #L46ac34.  return @kind void;
  #L46ac36.  v0:= 1I;
  #L46ac38.  v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L46ac3c.  v0:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ac40.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L46ac44.  v1:= "0\r\n\r\n" @kind object;
  #L46ac48.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L46ac4e.  v0:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ac52.  v1:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L46ac56.  call `detachTimeout`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.detachTimeout:(Lokio/ForwardingTimeout;)V` @kind virtual;
  #L46ac5c.  v0:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ac60.  v1:= 3I;
  #L46ac62.  v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int` := v1;
  #L46ac66.  @monitorexit v2
  #L46ac68.  return @kind void;
  #L46ac6a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46ac6c.  @monitorexit v2
  #L46ac6e.  throw v0;
  catch `java.lang.Throwable` @[L46ac2a..L46ac2e] goto L46ac6a;
  catch `java.lang.Throwable` @[L46ac38..L46ac66] goto L46ac6a;
}
procedure `void` `flush`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ac94.  @monitorenter v1
  #L46ac96.  v0:= v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @type ^`boolean` @kind boolean;
  #L46ac9a.  if v0 == 0 then goto L46aca2;
  #L46ac9e.  @monitorexit v1
  #L46aca0.  return @kind void;
  #L46aca2.  v0:= v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46aca6.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L46acaa.  call `flush`(v0) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L46acb0.  @monitorexit v1
  #L46acb2.  return @kind void;
  #L46acb4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46acb6.  @monitorexit v1
  #L46acb8.  throw v0;
  catch `java.lang.Throwable` @[L46ac96..L46ac9a] goto L46acb4;
  catch `java.lang.Throwable` @[L46aca2..L46acb0] goto L46acb4;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46abd4.  v0:= v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L46abd8.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v3 @kind this, `okio.Buffer` v4 @kind object, `long` v5 ) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46ace0.  v0:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @type ^`boolean` @kind boolean;
  #L46ace4.  if v0 != 0 then goto L46ad34;
  #L46ace8.  v0:= 0L;
  #L46acec.  v2:= lcmp(v5, v0);
  #L46acf0.  if v2 != 0 then goto L46acf6;
  #L46acf4.  return @kind void;
  #L46acf6.  v0:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46acfa.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L46acfe.  call temp:= `writeHexadecimalUnsignedLong`(v0, v5) @signature `Lokio/BufferedSink;.writeHexadecimalUnsignedLong:(J)Lokio/BufferedSink;` @kind interface;
  #L46ad04.  v0:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ad08.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L46ad0c.  v1:= "\r\n" @kind object;
  #L46ad10.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L46ad16.  v0:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ad1a.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L46ad1e.  call `write`(v0, v4, v5) @signature `Lokio/BufferedSink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L46ad24.  v4:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L46ad28.  v4:= v4.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L46ad2c.  call temp:= `writeUtf8`(v4, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L46ad32.  return @kind void;
  #L46ad34.  v4:= new `java.lang.IllegalStateException`;
  #L46ad38.  v5:= "closed" @kind object;
  #L46ad3c.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46ad42.  throw v4;
}
