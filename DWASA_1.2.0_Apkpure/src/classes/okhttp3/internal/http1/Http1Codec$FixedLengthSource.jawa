record `okhttp3.internal.http1.Http1Codec$FixedLengthSource` @kind class @AccessFlag  extends `okhttp3.internal.http1.Http1Codec$AbstractSource` @kind class {
  `long` `okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$FixedLengthSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v3 @kind this, `okhttp3.internal.http1.Http1Codec` v4 @kind object, `long` v5 ) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L46b228.  v3.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v4 @kind object;
  #L46b22c.  v0:= 0I;
  #L46b22e.  call `<init>`(v3, v4, v0) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;Lokhttp3/internal/http1/Http1Codec$1;)V` @kind direct;
  #L46b234.  v3.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` := v5 @kind wide;
  #L46b238.  v4:= v3.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L46b23c.  v1:= 0L;
  #L46b240.  v6:= lcmp(v4, v1);
  #L46b244.  if v6 != 0 then goto L46b250;
  #L46b248.  v4:= 1I;
  #L46b24a.  call `endOfInput`(v3, v4, v0) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L46b250.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v5 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46b264.  v0:= v5.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.closed` @type ^`boolean` @kind boolean;
  #L46b268.  if v0 == 0 then goto L46b26e;
  #L46b26c.  return @kind void;
  #L46b26e.  v0:= v5.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L46b272.  v2:= 0L;
  #L46b276.  v4:= lcmp(v0, v2);
  #L46b27a.  if v4 == 0 then goto L46b29c;
  #L46b27e.  v0:= 100I;
  #L46b282.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L46b286.  call temp:= `discard`(v5, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L46b28c.  v0:= temp;
  #L46b28e.  if v0 != 0 then goto L46b29c;
  #L46b292.  v0:= 0I;
  #L46b294.  v1:= 0I;
  #L46b296.  call `endOfInput`(v5, v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L46b29c.  v0:= 1I;
  #L46b29e.  v5.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L46b2a2.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46b160.  v0:= 0L;
  #L46b164.  v2:= lcmp(v9, v0);
  #L46b168.  if v2 < 0 then goto L46b1e8;
  #L46b16c.  v2:= v7.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.closed` @type ^`boolean` @kind boolean;
  #L46b170.  if v2 != 0 then goto L46b1d8;
  #L46b174.  v2:= v7.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L46b178.  v4:= -1L;
  #L46b17c.  v6:= lcmp(v2, v0);
  #L46b180.  if v6 != 0 then goto L46b186;
  #L46b184.  return v4 @kind wide;
  #L46b186.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L46b18c.  v9:= temp @kind wide;
  #L46b18e.  call temp:= `read`(v7, v8, v9) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.read:(Lokio/Buffer;J)J` @kind super;
  #L46b194.  v8:= temp @kind wide;
  #L46b196.  v10:= lcmp(v8, v4);
  #L46b19a.  if v10 == 0 then goto L46b1c0;
  #L46b19e.  v2:= v7.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L46b1a2.  v2:= v2 - v8 @kind long;
  #L46b1a4.  v7.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` := v2 @kind wide;
  #L46b1a8.  v2:= v7.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L46b1ac.  v10:= lcmp(v2, v0);
  #L46b1b0.  if v10 != 0 then goto L46b1be;
  #L46b1b4.  v10:= 1I;
  #L46b1b6.  v0:= 0I;
  #L46b1b8.  call `endOfInput`(v7, v10, v0) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L46b1be.  return v8 @kind wide;
  #L46b1c0.  v8:= new `java.net.ProtocolException`;
  #L46b1c4.  v9:= "unexpected end of stream" @kind object;
  #L46b1c8.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46b1ce.  v9:= 0I;
  #L46b1d0.  call `endOfInput`(v7, v9, v8) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L46b1d6.  throw v8;
  #L46b1d8.  v8:= new `java.lang.IllegalStateException`;
  #L46b1dc.  v9:= "closed" @kind object;
  #L46b1e0.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46b1e6.  throw v8;
  #L46b1e8.  v8:= new `java.lang.IllegalArgumentException`;
  #L46b1ec.  v0:= new `java.lang.StringBuilder`;
  #L46b1f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46b1f6.  v1:= "byteCount < 0: " @kind object;
  #L46b1fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b200.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L46b206.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46b20c.  v9:= temp @kind object;
  #L46b20e.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46b214.  throw v8;
}
