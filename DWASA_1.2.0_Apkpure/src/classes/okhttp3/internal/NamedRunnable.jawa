record `okhttp3.internal.NamedRunnable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `okhttp3.internal.NamedRunnable.name` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.NamedRunnable` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L462288.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46228e.  call temp:= `format`(v1, v2) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L462294.  v1:= temp @kind object;
  #L462296.  v0.`okhttp3.internal.NamedRunnable.name` @type ^`java.lang.String` := v1 @kind object;
  #L46229a.  return @kind void;
}
procedure `void` `execute`() @signature `Lokhttp3/internal/NamedRunnable;.execute:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `run`(`okhttp3.internal.NamedRunnable` v3 @kind this) @signature `Lokhttp3/internal/NamedRunnable;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4622ac.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4622b2.  v0:= temp @kind object;
  #L4622b4.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L4622ba.  v0:= temp @kind object;
  #L4622bc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4622c2.  v1:= temp @kind object;
  #L4622c4.  v2:= v3.`okhttp3.internal.NamedRunnable.name` @type ^`java.lang.String` @kind object;
  #L4622c8.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L4622ce.  call `execute`(v3) @signature `Lokhttp3/internal/NamedRunnable;.execute:()V` @kind virtual;
  #L4622d4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4622da.  v1:= temp @kind object;
  #L4622dc.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L4622e2.  return @kind void;
  #L4622e4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4622e6.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4622ec.  v2:= temp @kind object;
  #L4622ee.  call `setName`(v2, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L4622f4.  throw v1;
  catch `java.lang.Throwable` @[L4622ce..L4622d4] goto L4622e4;
}
