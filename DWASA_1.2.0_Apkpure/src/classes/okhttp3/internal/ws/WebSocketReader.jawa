record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketReader.closed` @AccessFlag ;
  `long` `okhttp3.internal.ws.WebSocketReader.frameBytesRead` @AccessFlag ;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.frameCallback` @AccessFlag FINAL;
  `long` `okhttp3.internal.ws.WebSocketReader.frameLength` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isClient` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isControlFrame` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isFinalFrame` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isMasked` @AccessFlag ;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.maskBuffer` @AccessFlag FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.maskKey` @AccessFlag FINAL;
  `int` `okhttp3.internal.ws.WebSocketReader.opcode` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.ws.WebSocketReader.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this, `boolean` v2 , `okio.BufferedSource` v3 @kind object, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v4 @kind object) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4766dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4766e2.  v0:= 4I;
  #L4766e4.  v0:= new `byte`[v0];
  #L4766e8.  v1.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] := v0 @kind object;
  #L4766ec.  v0:= 8192I;
  #L4766f0.  v0:= new `byte`[v0];
  #L4766f4.  v1.`okhttp3.internal.ws.WebSocketReader.maskBuffer` @type ^`byte`[] := v0 @kind object;
  #L4766f8.  if v3 == 0 then goto L47671e;
  #L4766fc.  if v4 == 0 then goto L47670e;
  #L476700.  v1.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` := v2 @kind boolean;
  #L476704.  v1.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` := v3 @kind object;
  #L476708.  v1.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v4 @kind object;
  #L47670c.  return @kind void;
  #L47670e.  v2:= new `java.lang.NullPointerException`;
  #L476712.  v3:= "frameCallback == null" @kind object;
  #L476716.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47671c.  throw v2;
  #L47671e.  v2:= new `java.lang.NullPointerException`;
  #L476722.  v3:= "source == null" @kind object;
  #L476726.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47672c.  throw v2;
}
procedure `void` `readControlFrame`(`okhttp3.internal.ws.WebSocketReader` v11 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L476770.  v0:= new `okio.Buffer`;
  #L476774.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L47677a.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` @kind wide;
  #L47677e.  v3:= v11.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L476782.  v5:= lcmp(v1, v3);
  #L476786.  if v5 >= 0 then goto L476812;
  #L47678a.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L47678e.  if v1 == 0 then goto L47679e;
  #L476792.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L476796.  call `readFully`(v1, v0, v3) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L47679c.  goto L476812;
  #L47679e.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` @kind wide;
  #L4767a2.  v3:= v11.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L4767a6.  v5:= lcmp(v1, v3);
  #L4767aa.  if v5 >= 0 then goto L476812;
  #L4767ae.  v3:= v3 - v1 @kind long;
  #L4767b0.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.maskBuffer` @type ^`byte`[] @kind object;
  #L4767b4.  v1:= length @variable v1;
  #L4767b6.  v1:= (`long`) v1 @kind i2l;
  #L4767b8.  call temp:= `min`(v3, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L4767be.  v1:= temp @kind wide;
  #L4767c0.  v2:= (`int`) v1 @kind l2i;
  #L4767c2.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L4767c6.  v3:= v11.`okhttp3.internal.ws.WebSocketReader.maskBuffer` @type ^`byte`[] @kind object;
  #L4767ca.  v4:= 0I;
  #L4767cc.  call temp:= `read`(v1, v3, v4, v2) @signature `Lokio/BufferedSource;.read:([BII)I` @kind interface;
  #L4767d2.  v1:= temp;
  #L4767d4.  v2:= -1I;
  #L4767d6.  if v1 == v2 then goto L476806;
  #L4767da.  v5:= v11.`okhttp3.internal.ws.WebSocketReader.maskBuffer` @type ^`byte`[] @kind object;
  #L4767de.  v2:= (`long`) v1 @kind i2l;
  #L4767e0.  v8:= v11.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L4767e4.  v9:= v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` @kind wide;
  #L4767e8.  v6:= v2 @kind wide;
  #L4767ea.  call `toggleMask`(v5, v6, v8, v9) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:([BJ[BJ)V` @kind static;
  #L4767f0.  v5:= v11.`okhttp3.internal.ws.WebSocketReader.maskBuffer` @type ^`byte`[] @kind object;
  #L4767f4.  call temp:= `write`(v0, v5, v4, v1) @signature `Lokio/Buffer;.write:([BII)Lokio/Buffer;` @kind virtual;
  #L4767fa.  v4:= v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` @kind wide;
  #L4767fe.  v4:= v4 + v2 @kind long;
  #L476800.  v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` := v4 @kind wide;
  #L476804.  goto L47679e;
  #L476806.  v0:= new `java.io.EOFException`;
  #L47680a.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L476810.  throw v0;
  #L476812.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L476816.  goto L4768f8;
  #L47681c.  v0:= new `java.net.ProtocolException`;
  #L476820.  v1:= new `java.lang.StringBuilder`;
  #L476824.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47682a.  v2:= "Unknown control opcode: " @kind object;
  #L47682e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476834.  v2:= v11.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L476838.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L47683e.  v2:= temp @kind object;
  #L476840.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476846.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47684c.  v1:= temp @kind object;
  #L47684e.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476854.  throw v0;
  #L476856.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L47685a.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L476860.  v0:= temp @kind object;
  #L476862.  call `onReadPong`(v1, v0) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L476868.  goto L4768e0;
  #L47686a.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L47686e.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L476874.  v0:= temp @kind object;
  #L476876.  call `onReadPing`(v1, v0) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L47687c.  goto L4768e0;
  #L47687e.  v1:= 1005I;
  #L476882.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L476888.  v2:= temp @kind wide;
  #L47688a.  v4:= 1L;
  #L47688e.  v6:= lcmp(v2, v4);
  #L476892.  if v6 == 0 then goto L4768e2;
  #L476896.  v4:= 0L;
  #L47689a.  v6:= lcmp(v2, v4);
  #L47689e.  if v6 == 0 then goto L4768cc;
  #L4768a2.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L4768a8.  v1:= temp;
  #L4768aa.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L4768b0.  v0:= temp @kind object;
  #L4768b2.  call temp:= `closeCodeExceptionMessage`(v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind static;
  #L4768b8.  v2:= temp @kind object;
  #L4768ba.  if v2 != 0 then goto L4768c0;
  #L4768be.  goto L4768d0;
  #L4768c0.  v0:= new `java.net.ProtocolException`;
  #L4768c4.  call `<init>`(v0, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4768ca.  throw v0;
  #L4768cc.  v0:= "" @kind object;
  #L4768d0.  v2:= v11.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L4768d4.  call `onReadClose`(v2, v1, v0) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L4768da.  v0:= 1I;
  #L4768dc.  v11.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` := v0 @kind boolean;
  #L4768e0.  return @kind void;
  #L4768e2.  v0:= new `java.net.ProtocolException`;
  #L4768e6.  v1:= "Malformed close payload length of 1." @kind object;
  #L4768ea.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4768f0.  goto L4768f4;
  #L4768f2.  throw v0;
  #L4768f4.  goto L4768f2;
  #L4768f6.  
  #L4768f8.  switch v1
                  | 8 => goto L47687e
                  | 9 => goto L47686a
                  | 10 => goto L476856
                  | else => goto L47681c;
}
procedure `void` `readHeader`(`okhttp3.internal.ws.WebSocketReader` v7 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47691c.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L476920.  if v0 != 0 then goto L476b56;
  #L476924.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L476928.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L47692e.  v0:= temp @kind object;
  #L476930.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L476936.  v0:= temp @kind wide;
  #L476938.  v2:= v7.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L47693c.  call temp:= `timeout`(v2) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L476942.  v2:= temp @kind object;
  #L476944.  call temp:= `clearTimeout`(v2) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #L47694a.  v2:= v7.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L47694e.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L476954.  v2:= temp;
  #L476956.  v2:= v2 ^& 255;
  #L47695a.  v3:= v7.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L47695e.  call temp:= `timeout`(v3) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L476964.  v3:= temp @kind object;
  #L476966.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L47696a.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L476970.  v0:= v2 ^& 15;
  #L476974.  v7.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int` := v0;
  #L476978.  v0:= v2 ^& 128;
  #L47697c.  v1:= 1I;
  #L47697e.  v3:= 0I;
  #L476980.  if v0 == 0 then goto L476988;
  #L476984.  v0:= 1I;
  #L476986.  goto L47698a;
  #L476988.  v0:= 0I;
  #L47698a.  v7.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` := v0 @kind boolean;
  #L47698e.  v0:= v2 ^& 8;
  #L476992.  if v0 == 0 then goto L47699a;
  #L476996.  v0:= 1I;
  #L476998.  goto L47699c;
  #L47699a.  v0:= 0I;
  #L47699c.  v7.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` := v0 @kind boolean;
  #L4769a0.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L4769a4.  if v0 == 0 then goto L4769c2;
  #L4769a8.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L4769ac.  if v0 == 0 then goto L4769b2;
  #L4769b0.  goto L4769c2;
  #L4769b2.  v0:= new `java.net.ProtocolException`;
  #L4769b6.  v1:= "Control frames must be final." @kind object;
  #L4769ba.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4769c0.  throw v0;
  #L4769c2.  v0:= v2 ^& 64;
  #L4769c6.  if v0 == 0 then goto L4769ce;
  #L4769ca.  v0:= 1I;
  #L4769cc.  goto L4769d0;
  #L4769ce.  v0:= 0I;
  #L4769d0.  v4:= v2 ^& 32;
  #L4769d4.  if v4 == 0 then goto L4769dc;
  #L4769d8.  v4:= 1I;
  #L4769da.  goto L4769de;
  #L4769dc.  v4:= 0I;
  #L4769de.  v2:= v2 ^& 16;
  #L4769e2.  if v2 == 0 then goto L4769ea;
  #L4769e6.  v2:= 1I;
  #L4769e8.  goto L4769ec;
  #L4769ea.  v2:= 0I;
  #L4769ec.  if v0 != 0 then goto L476b2c;
  #L4769f0.  if v4 != 0 then goto L476b2c;
  #L4769f4.  if v2 != 0 then goto L476b2c;
  #L4769f8.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L4769fc.  call temp:= `readByte`(v0) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L476a02.  v0:= temp;
  #L476a04.  v0:= v0 ^& 255;
  #L476a08.  v2:= v0 ^& 128;
  #L476a0c.  if v2 == 0 then goto L476a12;
  #L476a10.  goto L476a14;
  #L476a12.  v1:= 0I;
  #L476a14.  v7.`okhttp3.internal.ws.WebSocketReader.isMasked` @type ^`boolean` := v1 @kind boolean;
  #L476a18.  v1:= v7.`okhttp3.internal.ws.WebSocketReader.isMasked` @type ^`boolean` @kind boolean;
  #L476a1c.  v2:= v7.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L476a20.  if v1 != v2 then goto L476a3e;
  #L476a24.  v0:= new `java.net.ProtocolException`;
  #L476a28.  if v2 == 0 then goto L476a32;
  #L476a2c.  v1:= "Server-sent frames must not be masked." @kind object;
  #L476a30.  goto L476a36;
  #L476a32.  v1:= "Client-sent frames must be masked." @kind object;
  #L476a36.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476a3c.  throw v0;
  #L476a3e.  v0:= v0 ^& 127;
  #L476a42.  v0:= (`long`) v0 @kind i2l;
  #L476a44.  v7.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v0 @kind wide;
  #L476a48.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L476a4c.  v2:= 126L;
  #L476a50.  v4:= 0L;
  #L476a54.  v6:= lcmp(v0, v2);
  #L476a58.  if v6 != 0 then goto L476a78;
  #L476a5c.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L476a60.  call temp:= `readShort`(v0) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L476a66.  v0:= temp;
  #L476a68.  v0:= (`long`) v0 @kind i2l;
  #L476a6a.  v2:= 65535L;
  #L476a70.  v0:= v0 ^& v2 @kind long;
  #L476a72.  v7.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v0 @kind wide;
  #L476a76.  goto L476ae6;
  #L476a78.  v2:= 127L;
  #L476a7c.  v6:= lcmp(v0, v2);
  #L476a80.  if v6 != 0 then goto L476ae6;
  #L476a84.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L476a88.  call temp:= `readLong`(v0) @signature `Lokio/BufferedSource;.readLong:()J` @kind interface;
  #L476a8e.  v0:= temp @kind wide;
  #L476a90.  v7.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v0 @kind wide;
  #L476a94.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L476a98.  v2:= lcmp(v0, v4);
  #L476a9c.  if v2 < 0 then goto L476aa2;
  #L476aa0.  goto L476ae6;
  #L476aa2.  v0:= new `java.net.ProtocolException`;
  #L476aa6.  v1:= new `java.lang.StringBuilder`;
  #L476aaa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L476ab0.  v2:= "Frame length 0x" @kind object;
  #L476ab4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476aba.  v2:= v7.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L476abe.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L476ac4.  v2:= temp @kind object;
  #L476ac6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476acc.  v2:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L476ad0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476ad6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L476adc.  v1:= temp @kind object;
  #L476ade.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476ae4.  throw v0;
  #L476ae6.  v7.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` := v4 @kind wide;
  #L476aea.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L476aee.  if v0 == 0 then goto L476b14;
  #L476af2.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L476af6.  v2:= 125L;
  #L476afa.  v4:= lcmp(v0, v2);
  #L476afe.  if v4 > 0 then goto L476b04;
  #L476b02.  goto L476b14;
  #L476b04.  v0:= new `java.net.ProtocolException`;
  #L476b08.  v1:= "Control frame must be less than 125B." @kind object;
  #L476b0c.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476b12.  throw v0;
  #L476b14.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.isMasked` @type ^`boolean` @kind boolean;
  #L476b18.  if v0 == 0 then goto L476b2a;
  #L476b1c.  v0:= v7.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L476b20.  v1:= v7.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L476b24.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L476b2a.  return @kind void;
  #L476b2c.  v0:= new `java.net.ProtocolException`;
  #L476b30.  v1:= "Reserved flags are unsupported." @kind object;
  #L476b34.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476b3a.  throw v0;
  #L476b3c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L476b3e.  v3:= v7.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L476b42.  call temp:= `timeout`(v3) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L476b48.  v3:= temp @kind object;
  #L476b4a.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L476b4e.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L476b54.  throw v2;
  #L476b56.  v0:= new `java.io.IOException`;
  #L476b5a.  v1:= "closed" @kind object;
  #L476b5e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476b64.  throw v0;
  catch `java.lang.Throwable` @[L47694a..L476956] goto L476b3c;
}
procedure `void` `readMessage`(`okhttp3.internal.ws.WebSocketReader` v11 @kind this, `okio.Buffer` v12 @kind object) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:(Lokio/Buffer;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L476b84.  v0:= v11.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L476b88.  if v0 != 0 then goto L476ca8;
  #L476b8c.  v0:= v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` @kind wide;
  #L476b90.  v2:= v11.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L476b94.  v4:= lcmp(v0, v2);
  #L476b98.  if v4 != 0 then goto L476c08;
  #L476b9c.  v0:= v11.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L476ba0.  if v0 == 0 then goto L476ba6;
  #L476ba4.  return @kind void;
  #L476ba6.  call `readUntilNonControlFrame`(v11) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @kind virtual;
  #L476bac.  v0:= v11.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L476bb0.  if v0 != 0 then goto L476bce;
  #L476bb4.  v0:= v11.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L476bb8.  if v0 == 0 then goto L476c08;
  #L476bbc.  v0:= v11.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L476bc0.  v2:= 0L;
  #L476bc4.  v4:= lcmp(v0, v2);
  #L476bc8.  if v4 != 0 then goto L476c08;
  #L476bcc.  return @kind void;
  #L476bce.  v12:= new `java.net.ProtocolException`;
  #L476bd2.  v0:= new `java.lang.StringBuilder`;
  #L476bd6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L476bdc.  v1:= "Expected continuation opcode. Got: " @kind object;
  #L476be0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476be6.  v1:= v11.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L476bea.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L476bf0.  v1:= temp @kind object;
  #L476bf2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476bf8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L476bfe.  v0:= temp @kind object;
  #L476c00.  call `<init>`(v12, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476c06.  throw v12;
  #L476c08.  v0:= v11.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L476c0c.  v2:= v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` @kind wide;
  #L476c10.  v0:= v0 - v2 @kind long;
  #L476c12.  v2:= v11.`okhttp3.internal.ws.WebSocketReader.isMasked` @type ^`boolean` @kind boolean;
  #L476c16.  v3:= -1L;
  #L476c1a.  if v2 == 0 then goto L476c7a;
  #L476c1e.  v2:= v11.`okhttp3.internal.ws.WebSocketReader.maskBuffer` @type ^`byte`[] @kind object;
  #L476c22.  v2:= length @variable v2;
  #L476c24.  v5:= (`long`) v2 @kind i2l;
  #L476c26.  call temp:= `min`(v0, v5) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L476c2c.  v0:= temp @kind wide;
  #L476c2e.  v2:= v11.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L476c32.  v5:= v11.`okhttp3.internal.ws.WebSocketReader.maskBuffer` @type ^`byte`[] @kind object;
  #L476c36.  v1:= (`int`) v0 @kind l2i;
  #L476c38.  v0:= 0I;
  #L476c3a.  call temp:= `read`(v2, v5, v0, v1) @signature `Lokio/BufferedSource;.read:([BII)I` @kind interface;
  #L476c40.  v1:= temp;
  #L476c42.  v1:= (`long`) v1 @kind i2l;
  #L476c44.  v5:= lcmp(v1, v3);
  #L476c48.  if v5 == 0 then goto L476c6e;
  #L476c4c.  v5:= v11.`okhttp3.internal.ws.WebSocketReader.maskBuffer` @type ^`byte`[] @kind object;
  #L476c50.  v8:= v11.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L476c54.  v9:= v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` @kind wide;
  #L476c58.  v6:= v1 @kind wide;
  #L476c5a.  call `toggleMask`(v5, v6, v8, v9) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:([BJ[BJ)V` @kind static;
  #L476c60.  v3:= v11.`okhttp3.internal.ws.WebSocketReader.maskBuffer` @type ^`byte`[] @kind object;
  #L476c64.  v4:= (`int`) v1 @kind l2i;
  #L476c66.  call temp:= `write`(v12, v3, v0, v4) @signature `Lokio/Buffer;.write:([BII)Lokio/Buffer;` @kind virtual;
  #L476c6c.  goto L476c8e;
  #L476c6e.  v12:= new `java.io.EOFException`;
  #L476c72.  call `<init>`(v12) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L476c78.  throw v12;
  #L476c7a.  v2:= v11.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L476c7e.  call temp:= `read`(v2, v12, v0) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L476c84.  v1:= temp @kind wide;
  #L476c86.  v0:= lcmp(v1, v3);
  #L476c8a.  if v0 == 0 then goto L476c9c;
  #L476c8e.  v3:= v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` @kind wide;
  #L476c92.  v3:= v3 + v1 @kind long;
  #L476c94.  v11.`okhttp3.internal.ws.WebSocketReader.frameBytesRead` @type ^`long` := v3 @kind wide;
  #L476c98.  goto L476b84;
  #L476c9c.  v12:= new `java.io.EOFException`;
  #L476ca0.  call `<init>`(v12) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L476ca6.  throw v12;
  #L476ca8.  v12:= new `java.io.IOException`;
  #L476cac.  v0:= "closed" @kind object;
  #L476cb0.  call `<init>`(v12, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476cb6.  goto L476cba;
  #L476cb8.  throw v12;
  #L476cba.  goto L476cb8;
}
procedure `void` `readMessageFrame`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L476ccc.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L476cd0.  v1:= 1I;
  #L476cd2.  if v0 == v1 then goto L476d14;
  #L476cd6.  v2:= 2I;
  #L476cd8.  if v0 != v2 then goto L476cde;
  #L476cdc.  goto L476d14;
  #L476cde.  v1:= new `java.net.ProtocolException`;
  #L476ce2.  v2:= new `java.lang.StringBuilder`;
  #L476ce6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L476cec.  v3:= "Unknown opcode: " @kind object;
  #L476cf0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476cf6.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L476cfc.  v0:= temp @kind object;
  #L476cfe.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476d04.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L476d0a.  v0:= temp @kind object;
  #L476d0c.  call `<init>`(v1, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476d12.  throw v1;
  #L476d14.  v2:= new `okio.Buffer`;
  #L476d18.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L476d1e.  call `readMessage`(v4, v2) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:(Lokio/Buffer;)V` @kind direct;
  #L476d24.  if v0 != v1 then goto L476d3c;
  #L476d28.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L476d2c.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L476d32.  v1:= temp @kind object;
  #L476d34.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L476d3a.  goto L476d4e;
  #L476d3c.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L476d40.  call temp:= `readByteString`(v2) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L476d46.  v1:= temp @kind object;
  #L476d48.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L476d4e.  return @kind void;
}
procedure `void` `processNextFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @AccessFlag  {
    temp;
    v0;

  #L476740.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L476746.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L47674a.  if v0 == 0 then goto L476756;
  #L47674e.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L476754.  goto L47675c;
  #L476756.  call `readMessageFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @kind direct;
  #L47675c.  return @kind void;
}
procedure `void` `readUntilNonControlFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @AccessFlag  {
    temp;
    v0;

  #L476d60.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L476d64.  if v0 != 0 then goto L476d80;
  #L476d68.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L476d6e.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L476d72.  if v0 != 0 then goto L476d78;
  #L476d76.  goto L476d80;
  #L476d78.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L476d7e.  goto L476d60;
  #L476d80.  return @kind void;
}
