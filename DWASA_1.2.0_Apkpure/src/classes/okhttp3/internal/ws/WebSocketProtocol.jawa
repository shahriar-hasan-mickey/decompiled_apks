record `okhttp3.internal.ws.WebSocketProtocol` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@okhttp3.internal.ws.WebSocketProtocol.ACCEPT_MAGIC` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_FIN` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV1` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV2` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV3` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_MASK_OPCODE` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B1_FLAG_MASK` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B1_MASK_LENGTH` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_ABNORMAL_TERMINATION` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_CLIENT_GOING_AWAY` @AccessFlag STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_MESSAGE_MAX` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_NO_STATUS_CODE` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_PROTOCOL_EXCEPTION` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_BINARY` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTINUATION` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_CLOSE` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_PING` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_PONG` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_FLAG_CONTROL` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_TEXT` @AccessFlag STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_BYTE_MAX` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_LONG` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_SHORT` @AccessFlag STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_SHORT_MAX` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketProtocol` v2 @kind this) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L476644.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47664a.  v0:= new `java.lang.AssertionError`;
  #L47664e.  v1:= "No instances." @kind object;
  #L476652.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L476658.  throw v0;
}
procedure `java.lang.String` `acceptHeader`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.acceptHeader:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476560.  v0:= new `java.lang.StringBuilder`;
  #L476564.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47656a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476570.  v1:= "258EAFA5-E914-47DA-95CA-C5AB0DC85B11" @kind object;
  #L476574.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47657a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L476580.  v1:= temp @kind object;
  #L476582.  call temp:= `encodeUtf8`(v1) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L476588.  v1:= temp @kind object;
  #L47658a.  call temp:= `sha1`(v1) @signature `Lokio/ByteString;.sha1:()Lokio/ByteString;` @kind virtual;
  #L476590.  v1:= temp @kind object;
  #L476592.  call temp:= `base64`(v1) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L476598.  v1:= temp @kind object;
  #L47659a.  return v1 @kind object;
}
procedure `java.lang.String` `closeCodeExceptionMessage`(`int` v2 ) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4765ac.  v0:= 1000I;
  #L4765b0.  if v2 < v0 then goto L476610;
  #L4765b4.  v0:= 5000I;
  #L4765b8.  if v2 < v0 then goto L4765be;
  #L4765bc.  goto L476610;
  #L4765be.  v0:= 1004I;
  #L4765c2.  if v2 < v0 then goto L4765ce;
  #L4765c6.  v0:= 1006I;
  #L4765ca.  if v2 <= v0 then goto L4765de;
  #L4765ce.  v0:= 1012I;
  #L4765d2.  if v2 < v0 then goto L47660c;
  #L4765d6.  v0:= 2999I;
  #L4765da.  if v2 > v0 then goto L47660c;
  #L4765de.  v0:= new `java.lang.StringBuilder`;
  #L4765e2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4765e8.  v1:= "Code " @kind object;
  #L4765ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4765f2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4765f8.  v2:= " is reserved and may not be used." @kind object;
  #L4765fc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476602.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L476608.  v2:= temp @kind object;
  #L47660a.  return v2 @kind object;
  #L47660c.  v2:= 0I;
  #L47660e.  return v2 @kind object;
  #L476610.  v0:= new `java.lang.StringBuilder`;
  #L476614.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47661a.  v1:= "Code must be in range [1000,5000): " @kind object;
  #L47661e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L476624.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47662a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L476630.  v2:= temp @kind object;
  #L476632.  return v2 @kind object;
}
procedure `void` `toggleMask`(`byte`[] v5 @kind object, `long` v6 , `byte`[] v8 @kind object, `long` v9 ) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:([BJ[BJ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47666c.  v0:= length @variable v8;
  #L47666e.  v1:= 0I;
  #L476670.  v2:= (`long`) v1 @kind i2l;
  #L476672.  v4:= lcmp(v2, v6);
  #L476676.  if v4 >= 0 then goto L47669e;
  #L47667a.  v2:= (`long`) v0 @kind i2l;
  #L47667c.  v2:= v9 %% v2 @kind long;
  #L476680.  v3:= (`int`) v2 @kind l2i;
  #L476682.  v2:= v5[v1] @kind byte;
  #L476686.  v3:= v8[v3] @kind byte;
  #L47668a.  v2:= v2 ^~ v3 @kind int;
  #L47668c.  v2:= (`byte`) v2 @kind i2b;
  #L47668e.  v5[v1]:= v2 @kind byte;
  #L476692.  v1:= v1 + 1;
  #L476696.  v2:= 1L;
  #L47669a.  v9:= v9 + v2 @kind long;
  #L47669c.  goto L476670;
  #L47669e.  return @kind void;
}
procedure `void` `validateCloseCode`(`int` v1 ) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @AccessFlag STATIC {
    temp;
    v0;

  #L4766b0.  call temp:= `closeCodeExceptionMessage`(v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind static;
  #L4766b6.  v1:= temp @kind object;
  #L4766b8.  if v1 != 0 then goto L4766be;
  #L4766bc.  return @kind void;
  #L4766be.  v0:= new `java.lang.IllegalArgumentException`;
  #L4766c2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4766c8.  throw v0;
}
