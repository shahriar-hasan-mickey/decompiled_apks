record `okhttp3.internal.ws.WebSocketWriter` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketWriter.activeWriter` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.buffer` @AccessFlag FINAL;
  `okhttp3.internal.ws.WebSocketWriter$FrameSink` `okhttp3.internal.ws.WebSocketWriter.frameSink` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.isClient` @AccessFlag FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.maskBuffer` @AccessFlag FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.maskKey` @AccessFlag FINAL;
  `java.util.Random` `okhttp3.internal.ws.WebSocketWriter.random` @AccessFlag FINAL;
  `okio.BufferedSink` `okhttp3.internal.ws.WebSocketWriter.sink` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.writerClosed` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `boolean` v2 , `okio.BufferedSink` v3 @kind object, `java.util.Random` v4 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/BufferedSink;Ljava/util/Random;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L476f7c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L476f82.  v0:= new `okio.Buffer`;
  #L476f86.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L476f8c.  v1.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L476f90.  v0:= new `okhttp3.internal.ws.WebSocketWriter$FrameSink`;
  #L476f94.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @kind direct;
  #L476f9a.  v1.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` := v0 @kind object;
  #L476f9e.  if v3 == 0 then goto L476fe8;
  #L476fa2.  if v4 == 0 then goto L476fd8;
  #L476fa6.  v1.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` := v2 @kind boolean;
  #L476faa.  v1.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` := v3 @kind object;
  #L476fae.  v1.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` := v4 @kind object;
  #L476fb2.  v3:= 0I;
  #L476fb4.  if v2 == 0 then goto L476fc0;
  #L476fb8.  v4:= 4I;
  #L476fba.  v4:= new `byte`[v4];
  #L476fbe.  goto L476fc2;
  #L476fc0.  v4:= v3 @kind object;
  #L476fc2.  v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] := v4 @kind object;
  #L476fc6.  if v2 == 0 then goto L476fd2;
  #L476fca.  v2:= 8192I;
  #L476fce.  v3:= new `byte`[v2];
  #L476fd2.  v1.`okhttp3.internal.ws.WebSocketWriter.maskBuffer` @type ^`byte`[] := v3 @kind object;
  #L476fd6.  return @kind void;
  #L476fd8.  v2:= new `java.lang.NullPointerException`;
  #L476fdc.  v3:= "random == null" @kind object;
  #L476fe0.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476fe6.  throw v2;
  #L476fe8.  v2:= new `java.lang.NullPointerException`;
  #L476fec.  v3:= "sink == null" @kind object;
  #L476ff0.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476ff6.  throw v2;
}
procedure `void` `writeControlFrame`(`okhttp3.internal.ws.WebSocketWriter` v7 @kind this, `int` v8 , `okio.ByteString` v9 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L477078.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L47707c.  if v0 != 0 then goto L47712e;
  #L477080.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L477086.  v0:= temp;
  #L477088.  v1:= (`long`) v0 @kind i2l;
  #L47708a.  v3:= 125L;
  #L47708e.  v5:= lcmp(v1, v3);
  #L477092.  if v5 > 0 then goto L47711e;
  #L477096.  v8:= v8 ^| 128;
  #L47709a.  v1:= v7.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L47709e.  call temp:= `writeByte`(v1, v8) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4770a4.  v8:= v7.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L4770a8.  if v8 == 0 then goto L4770fe;
  #L4770ac.  v8:= v0 ^| 128;
  #L4770b0.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L4770b4.  call temp:= `writeByte`(v0, v8) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4770ba.  v8:= v7.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L4770be.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L4770c2.  call `nextBytes`(v8, v0) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L4770c8.  v8:= v7.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L4770cc.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L4770d0.  call temp:= `write`(v8, v0) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L4770d6.  call temp:= `toByteArray`(v9) @signature `Lokio/ByteString;.toByteArray:()[B` @kind virtual;
  #L4770dc.  v8:= temp @kind object;
  #L4770de.  v9:= length @variable v8;
  #L4770e0.  v2:= (`long`) v9 @kind i2l;
  #L4770e2.  v4:= v7.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L4770e6.  v5:= 0L;
  #L4770ea.  v1:= v8 @kind object;
  #L4770ec.  call `toggleMask`(v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:([BJ[BJ)V` @kind static;
  #L4770f2.  v9:= v7.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L4770f6.  call temp:= `write`(v9, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L4770fc.  goto L477112;
  #L4770fe.  v8:= v7.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L477102.  call temp:= `writeByte`(v8, v0) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L477108.  v8:= v7.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L47710c.  call temp:= `write`(v8, v9) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L477112.  v8:= v7.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L477116.  call `flush`(v8) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L47711c.  return @kind void;
  #L47711e.  v8:= new `java.lang.IllegalArgumentException`;
  #L477122.  v9:= "Payload size must be less than or equal to 125" @kind object;
  #L477126.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47712c.  throw v8;
  #L47712e.  v8:= new `java.io.IOException`;
  #L477132.  v9:= "closed" @kind object;
  #L477136.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47713c.  throw v8;
}
procedure `okio.Sink` `newMessageSink`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `int` v3 , `long` v4 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.newMessageSink:(IJ)Lokio/Sink;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L476f34.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` @kind boolean;
  #L476f38.  if v0 != 0 then goto L476f5a;
  #L476f3c.  v0:= 1I;
  #L476f3e.  v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v0 @kind boolean;
  #L476f42.  v1:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L476f46.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int` := v3;
  #L476f4a.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` := v4 @kind wide;
  #L476f4e.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v0 @kind boolean;
  #L476f52.  v3:= 0I;
  #L476f54.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v3 @kind boolean;
  #L476f58.  return v1 @kind object;
  #L476f5a.  v3:= new `java.lang.IllegalStateException`;
  #L476f5e.  v4:= "Another message writer is active. Did you call close()?" @kind object;
  #L476f62.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476f68.  throw v3;
}
procedure `void` `writeClose`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeClose:(ILokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L477008.  v0:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L47700c.  if v2 != 0 then goto L477014;
  #L477010.  if v3 == 0 then goto L477040;
  #L477014.  if v2 == 0 then goto L47701e;
  #L477018.  call `validateCloseCode`(v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @kind static;
  #L47701e.  v0:= new `okio.Buffer`;
  #L477022.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L477028.  call temp:= `writeShort`(v0, v2) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L47702e.  if v3 == 0 then goto L477038;
  #L477032.  call temp:= `write`(v0, v3) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L477038.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L47703e.  v0:= temp @kind object;
  #L477040.  v2:= 8I;
  #L477044.  v3:= 1I;
  #L477046.  call `writeControlFrame`(v1, v2, v0) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L47704c.  v1.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L477050.  return @kind void;
  #L477052.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L477054.  v1.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L477058.  throw v2;
  catch `java.lang.Throwable` @[L477046..L47704c] goto L477052;
}
procedure `void` `writeMessageFrame`(`okhttp3.internal.ws.WebSocketWriter` v9 @kind this, `int` v10 , `long` v11 , `boolean` v13 , `boolean` v14 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L477150.  v0:= v9.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L477154.  if v0 != 0 then goto L477286;
  #L477158.  v0:= 0I;
  #L47715a.  if v13 == 0 then goto L477160;
  #L47715e.  goto L477162;
  #L477160.  v10:= 0I;
  #L477162.  if v14 == 0 then goto L47716a;
  #L477166.  v10:= v10 ^| 128;
  #L47716a.  v13:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L47716e.  call temp:= `writeByte`(v13, v10) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L477174.  v10:= v9.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L477178.  if v10 == 0 then goto L477182;
  #L47717c.  v10:= 128I;
  #L477180.  goto L477184;
  #L477182.  v10:= 0I;
  #L477184.  v13:= 125L;
  #L477188.  v1:= lcmp(v11, v13);
  #L47718c.  if v1 > 0 then goto L4771a0;
  #L477190.  v13:= (`int`) v11 @kind l2i;
  #L477192.  v10:= v10 ^| v13 @kind int;
  #L477194.  v13:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L477198.  call temp:= `writeByte`(v13, v10) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L47719e.  goto L4771e2;
  #L4771a0.  v13:= 65535L;
  #L4771a6.  v1:= lcmp(v11, v13);
  #L4771aa.  if v1 > 0 then goto L4771ca;
  #L4771ae.  v10:= v10 ^| 126;
  #L4771b2.  v13:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L4771b6.  call temp:= `writeByte`(v13, v10) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4771bc.  v10:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L4771c0.  v13:= (`int`) v11 @kind l2i;
  #L4771c2.  call temp:= `writeShort`(v10, v13) @signature `Lokio/BufferedSink;.writeShort:(I)Lokio/BufferedSink;` @kind interface;
  #L4771c8.  goto L4771e2;
  #L4771ca.  v10:= v10 ^| 127;
  #L4771ce.  v13:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L4771d2.  call temp:= `writeByte`(v13, v10) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4771d8.  v10:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L4771dc.  call temp:= `writeLong`(v10, v11) @signature `Lokio/BufferedSink;.writeLong:(J)Lokio/BufferedSink;` @kind interface;
  #L4771e2.  v10:= v9.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L4771e6.  if v10 == 0 then goto L47726c;
  #L4771ea.  v10:= v9.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L4771ee.  v13:= v9.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L4771f2.  call `nextBytes`(v10, v13) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L4771f8.  v10:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L4771fc.  v13:= v9.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L477200.  call temp:= `write`(v10, v13) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L477206.  v13:= 0L;
  #L47720a.  v10:= lcmp(v13, v11);
  #L47720e.  if v10 >= 0 then goto L47727a;
  #L477212.  v10:= v9.`okhttp3.internal.ws.WebSocketWriter.maskBuffer` @type ^`byte`[] @kind object;
  #L477216.  v10:= length @variable v10;
  #L477218.  v1:= (`long`) v10 @kind i2l;
  #L47721a.  call temp:= `min`(v11, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L477220.  v1:= temp @kind wide;
  #L477222.  v10:= (`int`) v1 @kind l2i;
  #L477224.  v1:= v9.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L477228.  v2:= v9.`okhttp3.internal.ws.WebSocketWriter.maskBuffer` @type ^`byte`[] @kind object;
  #L47722c.  call temp:= `read`(v1, v2, v0, v10) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L477232.  v10:= temp;
  #L477234.  v1:= -1I;
  #L477236.  if v10 == v1 then goto L477260;
  #L47723a.  v1:= v9.`okhttp3.internal.ws.WebSocketWriter.maskBuffer` @type ^`byte`[] @kind object;
  #L47723e.  v7:= (`long`) v10 @kind i2l;
  #L477240.  v4:= v9.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L477244.  v2:= v7 @kind wide;
  #L477246.  v5:= v13 @kind wide;
  #L477248.  call `toggleMask`(v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:([BJ[BJ)V` @kind static;
  #L47724e.  v1:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L477252.  v2:= v9.`okhttp3.internal.ws.WebSocketWriter.maskBuffer` @type ^`byte`[] @kind object;
  #L477256.  call temp:= `write`(v1, v2, v0, v10) @signature `Lokio/BufferedSink;.write:([BII)Lokio/BufferedSink;` @kind interface;
  #L47725c.  v13:= v13 + v7 @kind long;
  #L47725e.  goto L47720a;
  #L477260.  v10:= new `java.lang.AssertionError`;
  #L477264.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L47726a.  throw v10;
  #L47726c.  v10:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L477270.  v13:= v9.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L477274.  call `write`(v10, v13, v11) @signature `Lokio/BufferedSink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L47727a.  v10:= v9.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L47727e.  call temp:= `emit`(v10) @signature `Lokio/BufferedSink;.emit:()Lokio/BufferedSink;` @kind interface;
  #L477284.  return @kind void;
  #L477286.  v10:= new `java.io.IOException`;
  #L47728a.  v11:= "closed" @kind object;
  #L47728e.  call `<init>`(v10, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L477294.  goto L477298;
  #L477296.  throw v10;
  #L477298.  goto L477296;
}
procedure `void` `writePing`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePing:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L4772ac.  v0:= 9I;
  #L4772b0.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L4772b6.  return @kind void;
}
procedure `void` `writePong`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePong:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L4772c8.  v0:= 10I;
  #L4772cc.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L4772d2.  return @kind void;
}
