record `okhttp3.internal.http2.Http2Stream$FramingSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.closed` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.finished` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `boolean` `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `long` `@@okhttp3.internal.http2.Http2Stream$FramingSink.EMIT_BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L46fbe8.  v0:= constclass @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fbec.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind this, `okhttp3.internal.http2.Http2Stream` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46fc00.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` := v1 @kind object;
  #L46fc04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46fc0a.  v1:= new `okio.Buffer`;
  #L46fc0e.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L46fc14.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` := v1 @kind object;
  #L46fc18.  return @kind void;
}
procedure `void` `emitFrame`(`okhttp3.internal.http2.Http2Stream$FramingSink` v11 @kind this, `boolean` v12 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L46fd14.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fd18.  @monitorenter v0
  #L46fd1a.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fd1e.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L46fd22.  call `enter`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #L46fd28.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fd2c.  v1:= v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L46fd30.  v3:= 0L;
  #L46fd34.  v5:= lcmp(v1, v3);
  #L46fd38.  if v5 > 0 then goto L46fd64;
  #L46fd3c.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L46fd40.  if v1 != 0 then goto L46fd64;
  #L46fd44.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L46fd48.  if v1 != 0 then goto L46fd64;
  #L46fd4c.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fd50.  v1:= v1.`okhttp3.internal.http2.Http2Stream.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46fd54.  if v1 != 0 then goto L46fd64;
  #L46fd58.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fd5c.  call `waitForIo`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.waitForIo:()V` @kind virtual;
  #L46fd62.  goto L46fd28;
  #L46fd64.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fd68.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L46fd6c.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L46fd72.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fd76.  call `checkOutNotClosed`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L46fd7c.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fd80.  v1:= v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L46fd84.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L46fd88.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L46fd8e.  v3:= temp @kind wide;
  #L46fd90.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L46fd96.  v9:= temp @kind wide;
  #L46fd98.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fd9c.  v2:= v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L46fda0.  v2:= v2 - v9 @kind long;
  #L46fda2.  v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` := v2 @kind wide;
  #L46fda6.  @monitorexit v0
  #L46fda8.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fdac.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L46fdb0.  call `enter`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #L46fdb6.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fdba.  v5:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46fdbe.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fdc2.  v6:= v0.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L46fdc6.  if v12 == 0 then goto L46fde4;
  #L46fdca.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L46fdce.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L46fdd4.  v0:= temp @kind wide;
  #L46fdd6.  v12:= lcmp(v9, v0);
  #L46fdda.  if v12 != 0 then goto L46fde4;
  #L46fdde.  v12:= 1I;
  #L46fde0.  v7:= 1I;
  #L46fde2.  goto L46fde8;
  #L46fde4.  v12:= 0I;
  #L46fde6.  v7:= 0I;
  #L46fde8.  v8:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L46fdec.  call `writeData`(v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L46fdf2.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fdf6.  v12:= v12.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L46fdfa.  call `exitAndThrowIfTimedOut`(v12) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L46fe00.  return @kind void;
  #L46fe02.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46fe04.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fe08.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L46fe0c.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L46fe12.  throw v12;
  #L46fe14.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46fe16.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fe1a.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L46fe1e.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L46fe24.  throw v12;
  #L46fe26.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46fe28.  @monitorexit v0
  #L46fe2a.  goto L46fe2e;
  #L46fe2c.  throw v12;
  #L46fe2e.  goto L46fe2c;
  catch `java.lang.Throwable` @[L46fd1a..L46fd28] goto L46fe26;
  catch `java.lang.Throwable` @[L46fd28..L46fd62] goto L46fe14;
  catch `java.lang.Throwable` @[L46fd64..L46fda8] goto L46fe26;
  catch `java.lang.Throwable` @[L46fdb6..L46fdf2] goto L46fe02;
  catch `java.lang.Throwable` @[L46fe16..L46fe2a] goto L46fe26;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSink` v8 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46fc2c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fc30.  @monitorenter v0
  #L46fc32.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L46fc36.  if v1 == 0 then goto L46fc3e;
  #L46fc3a.  @monitorexit v0
  #L46fc3c.  return @kind void;
  #L46fc3e.  @monitorexit v0
  #L46fc40.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fc44.  v0:= v0.`okhttp3.internal.http2.Http2Stream.sink` @type ^`okhttp3.internal.http2.Http2Stream$FramingSink` @kind object;
  #L46fc48.  v0:= v0.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L46fc4c.  v1:= 1I;
  #L46fc4e.  if v0 != 0 then goto L46fca4;
  #L46fc52.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L46fc56.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L46fc5c.  v2:= temp @kind wide;
  #L46fc5e.  v4:= 0L;
  #L46fc62.  v0:= lcmp(v2, v4);
  #L46fc66.  if v0 <= 0 then goto L46fc86;
  #L46fc6a.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L46fc6e.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L46fc74.  v2:= temp @kind wide;
  #L46fc76.  v0:= lcmp(v2, v4);
  #L46fc7a.  if v0 <= 0 then goto L46fca4;
  #L46fc7e.  call `emitFrame`(v8, v1) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L46fc84.  goto L46fc6a;
  #L46fc86.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fc8a.  v2:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46fc8e.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fc92.  v3:= v0.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L46fc96.  v4:= 1I;
  #L46fc98.  v5:= 0I;
  #L46fc9a.  v6:= 0L;
  #L46fc9e.  call `writeData`(v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L46fca4.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fca8.  @monitorenter v2
  #L46fcaa.  v8.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` := v1 @kind boolean;
  #L46fcae.  @monitorexit v2
  #L46fcb0.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fcb4.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46fcb8.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L46fcbe.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fcc2.  call `cancelStreamIfNecessary`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.cancelStreamIfNecessary:()V` @kind virtual;
  #L46fcc8.  return @kind void;
  #L46fcca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46fccc.  @monitorexit v2
  #L46fcce.  throw v0;
  #L46fcd0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46fcd2.  @monitorexit v0
  #L46fcd4.  goto L46fcd8;
  #L46fcd6.  throw v1;
  #L46fcd8.  goto L46fcd6;
  catch `java.lang.Throwable` @[L46fc32..L46fc40] goto L46fcd0;
  catch `java.lang.Throwable` @[L46fcaa..L46fcb0] goto L46fcca;
  catch `java.lang.Throwable` @[L46fccc..L46fcce] goto L46fcca;
  catch `java.lang.Throwable` @[L46fcd2..L46fcd4] goto L46fcd0;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Stream$FramingSink` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46fe74.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fe78.  @monitorenter v0
  #L46fe7a.  v1:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fe7e.  call `checkOutNotClosed`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L46fe84.  @monitorexit v0
  #L46fe86.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L46fe8a.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L46fe90.  v0:= temp @kind wide;
  #L46fe92.  v2:= 0L;
  #L46fe96.  v4:= lcmp(v0, v2);
  #L46fe9a.  if v4 <= 0 then goto L46feb6;
  #L46fe9e.  v0:= 0I;
  #L46fea0.  call `emitFrame`(v5, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L46fea6.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46feaa.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46feae.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L46feb4.  goto L46fe86;
  #L46feb6.  return @kind void;
  #L46feb8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46feba.  @monitorexit v0
  #L46febc.  goto L46fec0;
  #L46febe.  throw v1;
  #L46fec0.  goto L46febe;
  catch `java.lang.Throwable` @[L46fe7a..L46fe86] goto L46feb8;
  catch `java.lang.Throwable` @[L46feba..L46febc] goto L46feb8;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46fbcc.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L46fbd0.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L46fbd4.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http2.Http2Stream$FramingSink` v2 @kind this, `okio.Buffer` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46fee8.  v0:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L46feec.  call `write`(v0, v3, v4) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L46fef2.  v3:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L46fef6.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L46fefc.  v3:= temp @kind wide;
  #L46fefe.  v0:= 16384L;
  #L46ff02.  v5:= lcmp(v3, v0);
  #L46ff06.  if v5 < 0 then goto L46ff14;
  #L46ff0a.  v3:= 0I;
  #L46ff0c.  call `emitFrame`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L46ff12.  goto L46fef2;
  #L46ff14.  return @kind void;
}
