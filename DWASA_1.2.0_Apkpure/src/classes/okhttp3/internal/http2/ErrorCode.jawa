record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.httpCode` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CANCEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46bafc.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L46bb00.  v1:= 0I;
  #L46bb02.  v2:= "NO_ERROR" @kind object;
  #L46bb06.  call `<init>`(v0, v2, v1, v1) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L46bb0c.  `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L46bb10.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L46bb14.  v2:= 1I;
  #L46bb16.  v3:= "PROTOCOL_ERROR" @kind object;
  #L46bb1a.  call `<init>`(v0, v3, v2, v2) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L46bb20.  `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L46bb24.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L46bb28.  v3:= 2I;
  #L46bb2a.  v4:= "INTERNAL_ERROR" @kind object;
  #L46bb2e.  call `<init>`(v0, v4, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L46bb34.  `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L46bb38.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L46bb3c.  v4:= 3I;
  #L46bb3e.  v5:= "FLOW_CONTROL_ERROR" @kind object;
  #L46bb42.  call `<init>`(v0, v5, v4, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L46bb48.  `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L46bb4c.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L46bb50.  v5:= 4I;
  #L46bb52.  v6:= "REFUSED_STREAM" @kind object;
  #L46bb56.  v7:= 7I;
  #L46bb58.  call `<init>`(v0, v6, v5, v7) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L46bb5e.  `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L46bb62.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L46bb66.  v6:= 5I;
  #L46bb68.  v7:= "CANCEL" @kind object;
  #L46bb6c.  v8:= 8I;
  #L46bb70.  call `<init>`(v0, v7, v6, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L46bb76.  `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L46bb7a.  v0:= 6I;
  #L46bb7c.  v0:= new `okhttp3.internal.http2.ErrorCode`[v0];
  #L46bb80.  v7:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46bb84.  v0[v1]:= v7 @kind object;
  #L46bb88.  v1:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46bb8c.  v0[v2]:= v1 @kind object;
  #L46bb90.  v1:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46bb94.  v0[v3]:= v1 @kind object;
  #L46bb98.  v1:= `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46bb9c.  v0[v4]:= v1 @kind object;
  #L46bba0.  v1:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46bba4.  v0[v5]:= v1 @kind object;
  #L46bba8.  v1:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46bbac.  v0[v6]:= v1 @kind object;
  #L46bbb0.  `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] := v0 @kind object;
  #L46bbb4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L46bbc8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L46bbce.  v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int` := v3;
  #L46bbd2.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `fromHttp2`(`int` v5 ) @signature `Lokhttp3/internal/http2/ErrorCode;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46ba7c.  call temp:= `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @kind static;
  #L46ba82.  v0:= temp @kind object;
  #L46ba84.  v1:= length @variable v0;
  #L46ba86.  v2:= 0I;
  #L46ba88.  if v2 >= v1 then goto L46baa0;
  #L46ba8c.  v3:= v0[v2] @kind object;
  #L46ba90.  v4:= v3.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L46ba94.  if v4 != v5 then goto L46ba9a;
  #L46ba98.  return v3 @kind object;
  #L46ba9a.  v2:= v2 + 1;
  #L46ba9e.  goto L46ba88;
  #L46baa0.  v5:= 0I;
  #L46baa2.  return v5 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46bab4.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46bab8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L46babe.  v1:= temp @kind object;
  #L46bac0.  v1:= (`okhttp3.internal.http2.ErrorCode`) v1 @kind object;
  #L46bac4.  return v1 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46bad8.  v0:= `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L46badc.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L46bae2.  v0:= temp @kind object;
  #L46bae4.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L46bae8.  return v0 @kind object;
}
