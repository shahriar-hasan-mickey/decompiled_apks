record `okhttp3.internal.http2.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http2.Header.hpackSize` @AccessFlag FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.name` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.value` @AccessFlag PUBLIC_FINAL;
}
global `okio.ByteString` `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_METHOD` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_PATH` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Header;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L46bcb0.  v0:= ":" @kind object;
  #L46bcb4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L46bcba.  v0:= temp @kind object;
  #L46bcbc.  `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @type ^`okio.ByteString` := v0 @kind object;
  #L46bcc0.  v0:= ":status" @kind object;
  #L46bcc4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L46bcca.  v0:= temp @kind object;
  #L46bccc.  `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @type ^`okio.ByteString` := v0 @kind object;
  #L46bcd0.  v0:= ":method" @kind object;
  #L46bcd4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L46bcda.  v0:= temp @kind object;
  #L46bcdc.  `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` := v0 @kind object;
  #L46bce0.  v0:= ":path" @kind object;
  #L46bce4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L46bcea.  v0:= temp @kind object;
  #L46bcec.  `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` := v0 @kind object;
  #L46bcf0.  v0:= ":scheme" @kind object;
  #L46bcf4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L46bcfa.  v0:= temp @kind object;
  #L46bcfc.  `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` := v0 @kind object;
  #L46bd00.  v0:= ":authority" @kind object;
  #L46bd04.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L46bd0a.  v0:= temp @kind object;
  #L46bd0c.  `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` := v0 @kind object;
  #L46bd10.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46bd24.  call temp:= `encodeUtf8`(v1) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L46bd2a.  v1:= temp @kind object;
  #L46bd2c.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L46bd32.  v2:= temp @kind object;
  #L46bd34.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L46bd3a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `okio.ByteString` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46bd4c.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L46bd52.  v2:= temp @kind object;
  #L46bd54.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L46bd5a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `okio.ByteString` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46bd6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46bd72.  v0.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` := v1 @kind object;
  #L46bd76.  v0.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` := v2 @kind object;
  #L46bd7a.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L46bd80.  v1:= temp;
  #L46bd82.  v1:= v1 + 32;
  #L46bd86.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L46bd8c.  v2:= temp;
  #L46bd8e.  v1:= v1 + v2 @kind int;
  #L46bd90.  v0.`okhttp3.internal.http2.Header.hpackSize` @type ^`int` := v1;
  #L46bd94.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.internal.http2.Header` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/http2/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46bbe4.  v0:= instanceof @variable v4 @type ^`okhttp3.internal.http2.Header` @kind boolean;
  #L46bbe8.  v1:= 0I;
  #L46bbea.  if v0 == 0 then goto L46bc1c;
  #L46bbee.  v4:= (`okhttp3.internal.http2.Header`) v4 @kind object;
  #L46bbf2.  v0:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L46bbf6.  v2:= v4.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L46bbfa.  call temp:= `equals`(v0, v2) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46bc00.  v0:= temp;
  #L46bc02.  if v0 == 0 then goto L46bc1c;
  #L46bc06.  v0:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L46bc0a.  v4:= v4.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L46bc0e.  call temp:= `equals`(v0, v4) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46bc14.  v4:= temp;
  #L46bc16.  if v4 == 0 then goto L46bc1c;
  #L46bc1a.  v1:= 1I;
  #L46bc1c.  return v1;
}
procedure `int` `hashCode`(`okhttp3.internal.http2.Header` v2 @kind this) @signature `Lokhttp3/internal/http2/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46bc30.  v0:= v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L46bc34.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L46bc3a.  v0:= temp;
  #L46bc3c.  v1:= 527I;
  #L46bc40.  v1:= v1 + v0 @kind int;
  #L46bc42.  v1:= v1 * 31;
  #L46bc46.  v0:= v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L46bc4a.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L46bc50.  v0:= temp;
  #L46bc52.  v1:= v1 + v0 @kind int;
  #L46bc54.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http2.Header` v3 @kind this) @signature `Lokhttp3/internal/http2/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46bc68.  v0:= 2I;
  #L46bc6a.  v0:= new `java.lang.Object`[v0];
  #L46bc6e.  v1:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L46bc72.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L46bc78.  v1:= temp @kind object;
  #L46bc7a.  v2:= 0I;
  #L46bc7c.  v0[v2]:= v1 @kind object;
  #L46bc80.  v1:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L46bc84.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L46bc8a.  v1:= temp @kind object;
  #L46bc8c.  v2:= 1I;
  #L46bc8e.  v0[v2]:= v1 @kind object;
  #L46bc92.  v1:= "%s: %s" @kind object;
  #L46bc96.  call temp:= `format`(v1, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L46bc9c.  v0:= temp @kind object;
  #L46bc9e.  return v0 @kind object;
}
