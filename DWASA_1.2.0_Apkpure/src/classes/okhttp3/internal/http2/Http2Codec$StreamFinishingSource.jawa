record `okhttp3.internal.http2.Http2Codec$StreamFinishingSource` @kind class @AccessFlag  extends `okio.ForwardingSource` @kind class {
  `long` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @AccessFlag ;
  `okhttp3.internal.http2.Http2Codec` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v0 @kind this, `okhttp3.internal.http2.Http2Codec` v1 @kind object, `okio.Source` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.<init>:(Lokhttp3/internal/http2/Http2Codec;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46d088.  v0.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @type ^`okhttp3.internal.http2.Http2Codec` := v1 @kind object;
  #L46d08c.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L46d092.  v1:= 0I;
  #L46d094.  v0.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @type ^`boolean` := v1 @kind boolean;
  #L46d098.  v1:= 0L;
  #L46d09c.  v0.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` := v1 @kind wide;
  #L46d0a0.  return @kind void;
}
procedure `void` `endOfInput`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v7 @kind this, `java.io.IOException` v8 @kind object) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46d0d4.  v0:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @type ^`boolean` @kind boolean;
  #L46d0d8.  if v0 == 0 then goto L46d0de;
  #L46d0dc.  return @kind void;
  #L46d0de.  v0:= 1I;
  #L46d0e0.  v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @type ^`boolean` := v0 @kind boolean;
  #L46d0e4.  v0:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @type ^`okhttp3.internal.http2.Http2Codec` @kind object;
  #L46d0e8.  v1:= v0.`okhttp3.internal.http2.Http2Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L46d0ec.  v2:= 0I;
  #L46d0ee.  v3:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @type ^`okhttp3.internal.http2.Http2Codec` @kind object;
  #L46d0f2.  v4:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` @kind wide;
  #L46d0f6.  v6:= v8 @kind object;
  #L46d0f8.  call `streamFinished`(v1, v2, v3, v4, v6) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFinished:(ZLokhttp3/internal/http/HttpCodec;JLjava/io/IOException;)V` @kind virtual;
  #L46d0fe.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46d0b4.  call `close`(v1) @signature `Lokio/ForwardingSource;.close:()V` @kind super;
  #L46d0ba.  v0:= 0I;
  #L46d0bc.  call `endOfInput`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @kind direct;
  #L46d0c2.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v2 @kind this, `okio.Buffer` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46d034.  call temp:= `delegate`(v2) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.delegate:()Lokio/Source;` @kind virtual;
  #L46d03a.  v0:= temp @kind object;
  #L46d03c.  call temp:= `read`(v0, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L46d042.  v3:= temp @kind wide;
  #L46d044.  v0:= 0L;
  #L46d048.  v5:= lcmp(v3, v0);
  #L46d04c.  if v5 <= 0 then goto L46d05a;
  #L46d050.  v0:= v2.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` @kind wide;
  #L46d054.  v0:= v0 + v3 @kind long;
  #L46d056.  v2.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` := v0 @kind wide;
  #L46d05a.  return v3 @kind wide;
  #L46d05c.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L46d05e.  call `endOfInput`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @kind direct;
  #L46d064.  throw v3;
  catch `java.io.IOException` @[L46d034..L46d05a] goto L46d05c;
}
