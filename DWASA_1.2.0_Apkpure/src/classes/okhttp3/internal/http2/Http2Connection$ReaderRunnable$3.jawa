record `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection$ReaderRunnable` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Settings` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.val$peerSettings` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` v0 @kind this, `okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `okhttp3.internal.http2.Settings` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Settings;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46dcf8.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` := v1 @kind object;
  #L46dcfc.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.val$peerSettings` @type ^`okhttp3.internal.http2.Settings` := v4 @kind object;
  #L46dd00.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L46dd06.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46dd18.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L46dd1c.  v0:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46dd20.  v0:= v0.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L46dd24.  v1:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.val$peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L46dd28.  call `applyAndAckSettings`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Writer;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L46dd2e.  return @kind void;
  catch `java.io.IOException` @[L46dd18..L46dd2e] goto L46dd2e;
}
