record `okhttp3.internal.http2.Http2Connection$5` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$5.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$5.val$inFinished` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `okhttp3.internal.http2.Http2Connection$5.val$requestHeaders` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$5.val$streamId` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$5` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$5;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46d878.  v0.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L46d87c.  v0.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int` := v4;
  #L46d880.  v0.`okhttp3.internal.http2.Http2Connection$5.val$requestHeaders` @type ^`java.util.List` := v5 @kind object;
  #L46d884.  v0.`okhttp3.internal.http2.Http2Connection$5.val$inFinished` @type ^`boolean` := v6 @kind boolean;
  #L46d888.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L46d88e.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$5` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$5;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46d8a0.  v0:= v4.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46d8a4.  v0:= v0.`okhttp3.internal.http2.Http2Connection.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L46d8a8.  v1:= v4.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int`;
  #L46d8ac.  v2:= v4.`okhttp3.internal.http2.Http2Connection$5.val$requestHeaders` @type ^`java.util.List` @kind object;
  #L46d8b0.  v3:= v4.`okhttp3.internal.http2.Http2Connection$5.val$inFinished` @type ^`boolean` @kind boolean;
  #L46d8b4.  call temp:= `onHeaders`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/PushObserver;.onHeaders:(ILjava/util/List;Z)Z` @kind interface;
  #L46d8ba.  v0:= temp;
  #L46d8bc.  if v0 == 0 then goto L46d8d6;
  #L46d8c0.  v1:= v4.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46d8c4.  v1:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L46d8c8.  v2:= v4.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int`;
  #L46d8cc.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46d8d0.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L46d8d6.  if v0 != 0 then goto L46d8e2;
  #L46d8da.  v0:= v4.`okhttp3.internal.http2.Http2Connection$5.val$inFinished` @type ^`boolean` @kind boolean;
  #L46d8de.  if v0 == 0 then goto L46d90c;
  #L46d8e2.  v0:= v4.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46d8e6.  @monitorenter v0
  #L46d8e8.  v1:= v4.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46d8ec.  v1:= v1.`okhttp3.internal.http2.Http2Connection.currentPushRequests` @type ^`java.util.Set` @kind object;
  #L46d8f0.  v2:= v4.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int`;
  #L46d8f4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L46d8fa.  v2:= temp @kind object;
  #L46d8fc.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L46d902.  @monitorexit v0
  #L46d904.  goto L46d90c;
  #L46d906.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46d908.  @monitorexit v0
  #L46d90a.  throw v1;
  #L46d90c.  return @kind void;
  catch `java.io.IOException` @[L46d8c0..L46d8e8] goto L46d90c;
  catch `java.lang.Throwable` @[L46d8e8..L46d90a] goto L46d906;
  catch `java.io.IOException` @[L46d90a..L46d90c] goto L46d90c;
}
