record `okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class, `okhttp3.internal.http2.Http2Reader$Handler` @kind interface {
  `okhttp3.internal.http2.Http2Reader` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @AccessFlag FINAL;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v2 @kind this, `okhttp3.internal.http2.Http2Connection` v3 @kind object, `okhttp3.internal.http2.Http2Reader` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L46dd50.  v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v3 @kind object;
  #L46dd54.  v0:= 1I;
  #L46dd56.  v0:= new `java.lang.Object`[v0];
  #L46dd5a.  v3:= v3.`okhttp3.internal.http2.Http2Connection.hostname` @type ^`java.lang.String` @kind object;
  #L46dd5e.  v1:= 0I;
  #L46dd60.  v0[v1]:= v3 @kind object;
  #L46dd64.  v3:= "OkHttp %s" @kind object;
  #L46dd68.  call `<init>`(v2, v3, v0) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L46dd6e.  v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` := v4 @kind object;
  #L46dd72.  return @kind void;
}
procedure `void` `applyAndAckSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v5 @kind this, `okhttp3.internal.http2.Settings` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46ddac.  v0:= `@@okhttp3.internal.http2.Http2Connection.executor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L46ddb0.  v1:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3`;
  #L46ddb4.  v2:= 1I;
  #L46ddb6.  v2:= new `java.lang.Object`[v2];
  #L46ddba.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46ddbe.  v3:= v3.`okhttp3.internal.http2.Http2Connection.hostname` @type ^`java.lang.String` @kind object;
  #L46ddc2.  v4:= 0I;
  #L46ddc4.  v2[v4]:= v3 @kind object;
  #L46ddc8.  v3:= "OkHttp %s ACK Settings" @kind object;
  #L46ddcc.  call `<init>`(v1, v5, v3, v2, v6) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Settings;)V` @kind direct;
  #L46ddd2.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L46ddd8.  return @kind void;
}
procedure `void` `ackSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ackSettings:()V` @AccessFlag PUBLIC {
    temp;

  #L46dd84.  return @kind void;
}
procedure `void` `alternateService`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `okio.ByteString` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `long` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.alternateService:(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V` @AccessFlag PUBLIC {
    temp;

  #L46dd98.  return @kind void;
}
procedure `void` `data`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this, `boolean` v2 , `int` v3 , `okio.BufferedSource` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.data:(ZILokio/BufferedSource;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ddec.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46ddf0.  call temp:= `pushedStream`(v0, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream:(I)Z` @kind virtual;
  #L46ddf6.  v0:= temp;
  #L46ddf8.  if v0 == 0 then goto L46de08;
  #L46ddfc.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46de00.  call `pushDataLater`(v0, v3, v4, v5, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.pushDataLater:(ILokio/BufferedSource;IZ)V` @kind virtual;
  #L46de06.  return @kind void;
  #L46de08.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46de0c.  call temp:= `getStream`(v0, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L46de12.  v0:= temp @kind object;
  #L46de14.  if v0 != 0 then goto L46de30;
  #L46de18.  v2:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46de1c.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46de20.  call `writeSynResetLater`(v2, v3, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.writeSynResetLater:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L46de26.  v2:= (`long`) v5 @kind i2l;
  #L46de28.  call `skip`(v4, v2) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L46de2e.  return @kind void;
  #L46de30.  call `receiveData`(v0, v4, v5) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveData:(Lokio/BufferedSource;I)V` @kind virtual;
  #L46de36.  if v2 == 0 then goto L46de40;
  #L46de3a.  call `receiveFin`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveFin:()V` @kind virtual;
  #L46de40.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46de54.  v0:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46de58.  v1:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46de5c.  v2:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L46de60.  call `readConnectionPreface`(v2, v4) @signature `Lokhttp3/internal/http2/Http2Reader;.readConnectionPreface:(Lokhttp3/internal/http2/Http2Reader$Handler;)V` @kind virtual;
  #L46de66.  v2:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L46de6a.  v3:= 0I;
  #L46de6c.  call temp:= `nextFrame`(v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @kind virtual;
  #L46de72.  v2:= temp;
  #L46de74.  if v2 == 0 then goto L46de7a;
  #L46de78.  goto L46de66;
  #L46de7a.  v0:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46de7e.  v1:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46de82.  v2:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46de86.  goto L46de98;
  #L46de88.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46de8a.  goto L46deaa;
  #L46de8c.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46de90.  v1:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46de94.  v2:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46de98.  call `close`(v2, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L46de9e.  v0:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L46dea2.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L46dea8.  return @kind void;
  #L46deaa.  v3:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46deae.  call `close`(v3, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L46deb4.  v0:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L46deb8.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L46debe.  goto L46dec2;
  #L46dec0.  throw v2;
  #L46dec2.  goto L46dec0;
  catch `java.io.IOException` @[L46de5c..L46de82] goto L46de8c;
  catch `java.lang.Throwable` @[L46de5c..L46de82] goto L46de88;
  catch `java.io.IOException` @[L46de82..L46de86] goto L46de9e;
  catch `java.lang.Throwable` @[L46de8c..L46de94] goto L46de88;
  catch `java.io.IOException` @[L46de94..L46de9e] goto L46de9e;
  catch `java.io.IOException` @[L46deaa..L46deb4] goto L46deb4;
}
procedure `void` `goAway`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `okhttp3.internal.http2.ErrorCode` v5 @kind object, `okio.ByteString` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.goAway:(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46df0c.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L46df12.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46df16.  @monitorenter v5
  #L46df18.  v6:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46df1c.  v6:= v6.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L46df20.  call temp:= `values`(v6) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L46df26.  v6:= temp @kind object;
  #L46df28.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46df2c.  v0:= v0.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L46df30.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L46df36.  v0:= temp;
  #L46df38.  v0:= new `okhttp3.internal.http2.Http2Stream`[v0];
  #L46df3c.  call temp:= `toArray`(v6, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L46df42.  v6:= temp @kind object;
  #L46df44.  v6:= (`okhttp3.internal.http2.Http2Stream`[]) v6 @kind object;
  #L46df48.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46df4c.  v1:= 1I;
  #L46df4e.  v0.`okhttp3.internal.http2.Http2Connection.shutdown` @type ^`boolean` := v1 @kind boolean;
  #L46df52.  @monitorexit v5
  #L46df54.  v5:= length @variable v6;
  #L46df56.  v0:= 0I;
  #L46df58.  if v0 >= v5 then goto L46df9a;
  #L46df5c.  v1:= v6[v0] @kind object;
  #L46df60.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L46df66.  v2:= temp;
  #L46df68.  if v2 <= v4 then goto L46df94;
  #L46df6c.  call temp:= `isLocallyInitiated`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.isLocallyInitiated:()Z` @kind virtual;
  #L46df72.  v2:= temp;
  #L46df74.  if v2 == 0 then goto L46df94;
  #L46df78.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46df7c.  call `receiveRstStream`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L46df82.  v2:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46df86.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L46df8c.  v1:= temp;
  #L46df8e.  call temp:= `removeStream`(v2, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L46df94.  v0:= v0 + 1;
  #L46df98.  goto L46df58;
  #L46df9a.  return @kind void;
  #L46df9c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46df9e.  @monitorexit v5
  #L46dfa0.  goto L46dfa4;
  #L46dfa2.  throw v4;
  #L46dfa4.  goto L46dfa2;
  catch `java.lang.Throwable` @[L46df18..L46df54] goto L46df9c;
  catch `java.lang.Throwable` @[L46df9e..L46dfa0] goto L46df9c;
}
procedure `void` `headers`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v9 @kind this, `boolean` v10 , `int` v11 , `int` v12 , `java.util.List` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.headers:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46dfcc.  v12:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46dfd0.  call temp:= `pushedStream`(v12, v11) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream:(I)Z` @kind virtual;
  #L46dfd6.  v12:= temp;
  #L46dfd8.  if v12 == 0 then goto L46dfe8;
  #L46dfdc.  v12:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46dfe0.  call `pushHeadersLater`(v12, v11, v13, v10) @signature `Lokhttp3/internal/http2/Http2Connection;.pushHeadersLater:(ILjava/util/List;Z)V` @kind virtual;
  #L46dfe6.  return @kind void;
  #L46dfe8.  v12:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46dfec.  @monitorenter v12
  #L46dfee.  v0:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46dff2.  call temp:= `getStream`(v0, v11) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L46dff8.  v0:= temp @kind object;
  #L46dffa.  if v0 != 0 then goto L46e0a8;
  #L46dffe.  v0:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e002.  v0:= v0.`okhttp3.internal.http2.Http2Connection.shutdown` @type ^`boolean` @kind boolean;
  #L46e006.  if v0 == 0 then goto L46e00e;
  #L46e00a.  @monitorexit v12
  #L46e00c.  return @kind void;
  #L46e00e.  v0:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e012.  v0:= v0.`okhttp3.internal.http2.Http2Connection.lastGoodStreamId` @type ^`int`;
  #L46e016.  if v11 > v0 then goto L46e01e;
  #L46e01a.  @monitorexit v12
  #L46e01c.  return @kind void;
  #L46e01e.  v0:= v11 %% 2;
  #L46e022.  v1:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e026.  v1:= v1.`okhttp3.internal.http2.Http2Connection.nextStreamId` @type ^`int`;
  #L46e02a.  v2:= 2I;
  #L46e02c.  v1:= v1 %% v2 @kind int;
  #L46e02e.  if v0 != v1 then goto L46e036;
  #L46e032.  @monitorexit v12
  #L46e034.  return @kind void;
  #L46e036.  v0:= new `okhttp3.internal.http2.Http2Stream`;
  #L46e03a.  v5:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e03e.  v6:= 0I;
  #L46e040.  v3:= v0 @kind object;
  #L46e042.  v4:= v11;
  #L46e044.  v7:= v10;
  #L46e046.  v8:= v13 @kind object;
  #L46e048.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/http2/Http2Stream;.<init>:(ILokhttp3/internal/http2/Http2Connection;ZZLjava/util/List;)V` @kind direct;
  #L46e04e.  v10:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e052.  v10.`okhttp3.internal.http2.Http2Connection.lastGoodStreamId` @type ^`int` := v11;
  #L46e056.  v10:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e05a.  v10:= v10.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L46e05e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L46e064.  v13:= temp @kind object;
  #L46e066.  call temp:= `put`(v10, v13, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L46e06c.  v10:= `@@okhttp3.internal.http2.Http2Connection.executor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L46e070.  v13:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$1`;
  #L46e074.  v1:= "OkHttp %s stream %d" @kind object;
  #L46e078.  v2:= new `java.lang.Object`[v2];
  #L46e07c.  v3:= 0I;
  #L46e07e.  v4:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e082.  v4:= v4.`okhttp3.internal.http2.Http2Connection.hostname` @type ^`java.lang.String` @kind object;
  #L46e086.  v2[v3]:= v4 @kind object;
  #L46e08a.  v3:= 1I;
  #L46e08c.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L46e092.  v11:= temp @kind object;
  #L46e094.  v2[v3]:= v11 @kind object;
  #L46e098.  call `<init>`(v13, v9, v1, v2, v0) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$1;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Stream;)V` @kind direct;
  #L46e09e.  call `execute`(v10, v13) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L46e0a4.  @monitorexit v12
  #L46e0a6.  return @kind void;
  #L46e0a8.  @monitorexit v12
  #L46e0aa.  call `receiveHeaders`(v0, v13) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveHeaders:(Ljava/util/List;)V` @kind virtual;
  #L46e0b0.  if v10 == 0 then goto L46e0ba;
  #L46e0b4.  call `receiveFin`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveFin:()V` @kind virtual;
  #L46e0ba.  return @kind void;
  #L46e0bc.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46e0be.  @monitorexit v12
  #L46e0c0.  throw v10;
  catch `java.lang.Throwable` @[L46dfee..L46e0aa] goto L46e0bc;
  catch `java.lang.Throwable` @[L46e0be..L46e0c0] goto L46e0bc;
}
procedure `void` `ping`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v2 @kind this, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ping:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46e0e8.  if v3 == 0 then goto L46e104;
  #L46e0ec.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e0f0.  call temp:= `removePing`(v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.removePing:(I)Lokhttp3/internal/http2/Ping;` @kind virtual;
  #L46e0f6.  v3:= temp @kind object;
  #L46e0f8.  if v3 == 0 then goto L46e112;
  #L46e0fc.  call `receive`(v3) @signature `Lokhttp3/internal/http2/Ping;.receive:()V` @kind virtual;
  #L46e102.  goto L46e112;
  #L46e104.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e108.  v0:= 1I;
  #L46e10a.  v1:= 0I;
  #L46e10c.  call `writePingLater`(v3, v0, v4, v5, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.writePingLater:(ZIILokhttp3/internal/http2/Ping;)V` @kind virtual;
  #L46e112.  return @kind void;
}
procedure `void` `priority`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.priority:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L46e124.  return @kind void;
}
procedure `void` `pushPromise`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.pushPromise:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L46e138.  v1:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e13c.  call `pushRequestLater`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushRequestLater:(ILjava/util/List;)V` @kind virtual;
  #L46e142.  return @kind void;
}
procedure `void` `rstStream`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this, `int` v2 , `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e154.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e158.  call temp:= `pushedStream`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream:(I)Z` @kind virtual;
  #L46e15e.  v0:= temp;
  #L46e160.  if v0 == 0 then goto L46e170;
  #L46e164.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e168.  call `pushResetLater`(v0, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushResetLater:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L46e16e.  return @kind void;
  #L46e170.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e174.  call temp:= `removeStream`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L46e17a.  v2:= temp @kind object;
  #L46e17c.  if v2 == 0 then goto L46e186;
  #L46e180.  call `receiveRstStream`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L46e186.  return @kind void;
}
procedure `void` `settings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v10 @kind this, `boolean` v11 , `okhttp3.internal.http2.Settings` v12 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.settings:(ZLokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L46e198.  v0:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e19c.  @monitorenter v0
  #L46e19e.  v1:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e1a2.  v1:= v1.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L46e1a6.  call temp:= `getInitialWindowSize`(v1) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L46e1ac.  v1:= temp;
  #L46e1ae.  if v11 == 0 then goto L46e1c0;
  #L46e1b2.  v11:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e1b6.  v11:= v11.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L46e1ba.  call `clear`(v11) @signature `Lokhttp3/internal/http2/Settings;.clear:()V` @kind virtual;
  #L46e1c0.  v11:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e1c4.  v11:= v11.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L46e1c8.  call `merge`(v11, v12) @signature `Lokhttp3/internal/http2/Settings;.merge:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L46e1ce.  call `applyAndAckSettings`(v10, v12) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @kind direct;
  #L46e1d4.  v11:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e1d8.  v11:= v11.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L46e1dc.  call temp:= `getInitialWindowSize`(v11) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L46e1e2.  v11:= temp;
  #L46e1e4.  v12:= -1I;
  #L46e1e6.  v2:= 0L;
  #L46e1ea.  v4:= 1I;
  #L46e1ec.  v5:= 0I;
  #L46e1ee.  if v11 == v12 then goto L46e260;
  #L46e1f2.  if v11 == v1 then goto L46e260;
  #L46e1f6.  v11:= v11 - v1 @kind int;
  #L46e1f8.  v11:= (`long`) v11 @kind i2l;
  #L46e1fa.  v1:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e1fe.  v1:= v1.`okhttp3.internal.http2.Http2Connection.receivedInitialPeerSettings` @type ^`boolean` @kind boolean;
  #L46e202.  if v1 != 0 then goto L46e218;
  #L46e206.  v1:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e20a.  call `addBytesToWriteWindow`(v1, v11) @signature `Lokhttp3/internal/http2/Http2Connection;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L46e210.  v1:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e214.  v1.`okhttp3.internal.http2.Http2Connection.receivedInitialPeerSettings` @type ^`boolean` := v4 @kind boolean;
  #L46e218.  v1:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e21c.  v1:= v1.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L46e220.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L46e226.  v1:= temp;
  #L46e228.  if v1 != 0 then goto L46e262;
  #L46e22c.  v1:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e230.  v1:= v1.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L46e234.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L46e23a.  v1:= temp @kind object;
  #L46e23c.  v5:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e240.  v5:= v5.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L46e244.  call temp:= `size`(v5) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L46e24a.  v5:= temp;
  #L46e24c.  v5:= new `okhttp3.internal.http2.Http2Stream`[v5];
  #L46e250.  call temp:= `toArray`(v1, v5) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L46e256.  v1:= temp @kind object;
  #L46e258.  v5:= v1 @kind object;
  #L46e25a.  v5:= (`okhttp3.internal.http2.Http2Stream`[]) v5 @kind object;
  #L46e25e.  goto L46e262;
  #L46e260.  v11:= v2 @kind wide;
  #L46e262.  v1:= `@@okhttp3.internal.http2.Http2Connection.executor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L46e266.  v6:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$2`;
  #L46e26a.  v7:= "OkHttp %s settings" @kind object;
  #L46e26e.  v4:= new `java.lang.Object`[v4];
  #L46e272.  v8:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e276.  v8:= v8.`okhttp3.internal.http2.Http2Connection.hostname` @type ^`java.lang.String` @kind object;
  #L46e27a.  v9:= 0I;
  #L46e27c.  v4[v9]:= v8 @kind object;
  #L46e280.  call `<init>`(v6, v10, v7, v4) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$2;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L46e286.  call `execute`(v1, v6) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L46e28c.  @monitorexit v0
  #L46e28e.  if v5 == 0 then goto L46e2ba;
  #L46e292.  v0:= lcmp(v11, v2);
  #L46e296.  if v0 == 0 then goto L46e2ba;
  #L46e29a.  v0:= length @variable v5;
  #L46e29c.  if v9 >= v0 then goto L46e2ba;
  #L46e2a0.  v1:= v5[v9] @kind object;
  #L46e2a4.  @monitorenter v1
  #L46e2a6.  call `addBytesToWriteWindow`(v1, v11) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L46e2ac.  @monitorexit v1
  #L46e2ae.  v9:= v9 + 1;
  #L46e2b2.  goto L46e29c;
  #L46e2b4.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46e2b6.  @monitorexit v1
  #L46e2b8.  throw v11;
  #L46e2ba.  return @kind void;
  #L46e2bc.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46e2be.  @monitorexit v0
  #L46e2c0.  goto L46e2c4;
  #L46e2c2.  throw v11;
  #L46e2c4.  goto L46e2c2;
  catch `java.lang.Throwable` @[L46e19e..L46e28e] goto L46e2bc;
  catch `java.lang.Throwable` @[L46e2a6..L46e2b8] goto L46e2b4;
  catch `java.lang.Throwable` @[L46e2be..L46e2c0] goto L46e2bc;
}
procedure `void` `windowUpdate`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.windowUpdate:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46e2f8.  if v4 != 0 then goto L46e324;
  #L46e2fc.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e300.  @monitorenter v0
  #L46e302.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e306.  v1:= v4.`okhttp3.internal.http2.Http2Connection.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L46e30a.  v1:= v1 + v5 @kind long;
  #L46e30c.  v4.`okhttp3.internal.http2.Http2Connection.bytesLeftInWriteWindow` @type ^`long` := v1 @kind wide;
  #L46e310.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e314.  call `notifyAll`(v4) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L46e31a.  @monitorexit v0
  #L46e31c.  goto L46e346;
  #L46e31e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46e320.  @monitorexit v0
  #L46e322.  throw v4;
  #L46e324.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L46e328.  call temp:= `getStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L46e32e.  v4:= temp @kind object;
  #L46e330.  if v4 == 0 then goto L46e346;
  #L46e334.  @monitorenter v4
  #L46e336.  call `addBytesToWriteWindow`(v4, v5) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L46e33c.  @monitorexit v4
  #L46e33e.  goto L46e346;
  #L46e340.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46e342.  @monitorexit v4
  #L46e344.  throw v5;
  #L46e346.  return @kind void;
  catch `java.lang.Throwable` @[L46e302..L46e322] goto L46e31e;
  catch `java.lang.Throwable` @[L46e336..L46e344] goto L46e340;
}
