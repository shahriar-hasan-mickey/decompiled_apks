record `okhttp3.internal.platform.Platform` @kind class @AccessFlag PUBLIC {
}
global `int` `@@okhttp3.internal.platform.Platform.INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.platform.Platform` `@@okhttp3.internal.platform.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.platform.Platform.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L473d68.  call temp:= `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L473d6e.  v0:= temp @kind object;
  #L473d70.  `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L473d74.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L473d78.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L473d7e.  v0:= temp @kind object;
  #L473d80.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L473d86.  v0:= temp @kind object;
  #L473d88.  `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L473d8c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Platform` v0 @kind this) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L473da0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L473da6.  return @kind void;
}
procedure `java.util.List` `alpnProtocolNames`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L473b98.  v0:= new `java.util.ArrayList`;
  #L473b9c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L473ba2.  v1:= temp;
  #L473ba4.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L473baa.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L473bb0.  v1:= temp;
  #L473bb2.  v2:= 0I;
  #L473bb4.  if v2 >= v1 then goto L473be2;
  #L473bb8.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L473bbe.  v3:= temp @kind object;
  #L473bc0.  v3:= (`okhttp3.Protocol`) v3 @kind object;
  #L473bc4.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L473bc8.  if v3 != v4 then goto L473bce;
  #L473bcc.  goto L473bdc;
  #L473bce.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L473bd4.  v3:= temp @kind object;
  #L473bd6.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L473bdc.  v2:= v2 + 1;
  #L473be0.  goto L473bb4;
  #L473be2.  return v0 @kind object;
}
procedure `byte`[] `concatLengthPrefixed`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.concatLengthPrefixed:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L473a18.  v0:= new `okio.Buffer`;
  #L473a1c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L473a22.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L473a28.  v1:= temp;
  #L473a2a.  v2:= 0I;
  #L473a2c.  if v2 >= v1 then goto L473a70;
  #L473a30.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L473a36.  v3:= temp @kind object;
  #L473a38.  v3:= (`okhttp3.Protocol`) v3 @kind object;
  #L473a3c.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L473a40.  if v3 != v4 then goto L473a46;
  #L473a44.  goto L473a6a;
  #L473a46.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L473a4c.  v4:= temp @kind object;
  #L473a4e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L473a54.  v4:= temp;
  #L473a56.  call temp:= `writeByte`(v0, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L473a5c.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L473a62.  v3:= temp @kind object;
  #L473a64.  call temp:= `writeUtf8`(v0, v3) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L473a6a.  v2:= v2 + 1;
  #L473a6e.  goto L473a2c;
  #L473a70.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L473a76.  v5:= temp @kind object;
  #L473a78.  return v5 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L473c4c.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L473c52.  v0:= temp @kind object;
  #L473c54.  if v0 == 0 then goto L473c5a;
  #L473c58.  return v0 @kind object;
  #L473c5a.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @kind static;
  #L473c60.  v0:= temp @kind object;
  #L473c62.  if v0 == 0 then goto L473c68;
  #L473c66.  return v0 @kind object;
  #L473c68.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L473c6e.  v0:= temp @kind object;
  #L473c70.  if v0 == 0 then goto L473c76;
  #L473c74.  return v0 @kind object;
  #L473c76.  v0:= new `okhttp3.internal.platform.Platform`;
  #L473c7a.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L473c80.  return v0 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L473c94.  v0:= `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L473c98.  return v0 @kind object;
}
procedure `java.lang.Object` `readFieldOrNull`(`java.lang.Object` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L473ac0.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L473ac6.  v0:= temp @kind object;
  #L473ac8.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L473acc.  v2:= 0I;
  #L473ace.  if v0 == v1 then goto L473b1e;
  #L473ad2.  call temp:= `getDeclaredField`(v0, v6) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L473ad8.  v1:= temp @kind object;
  #L473ada.  v3:= 1I;
  #L473adc.  call `setAccessible`(v1, v3) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L473ae2.  call temp:= `get`(v1, v4) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L473ae8.  v1:= temp @kind object;
  #L473aea.  if v1 == 0 then goto L473b06;
  #L473aee.  call temp:= `isInstance`(v5, v1) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L473af4.  v3:= temp;
  #L473af6.  if v3 != 0 then goto L473afc;
  #L473afa.  goto L473b06;
  #L473afc.  call temp:= `cast`(v5, v1) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L473b02.  v4:= temp @kind object;
  #L473b04.  return v4 @kind object;
  #L473b06.  return v2 @kind object;
  #L473b08.  v4:= new `java.lang.AssertionError`;
  #L473b0c.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L473b12.  throw v4;
  #L473b14.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L473b1a.  v0:= temp @kind object;
  #L473b1c.  goto L473ac8;
  #L473b1e.  v0:= "delegate" @kind object;
  #L473b22.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L473b28.  v1:= temp;
  #L473b2a.  if v1 != 0 then goto L473b48;
  #L473b2e.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L473b32.  call temp:= `readFieldOrNull`(v4, v1, v0) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473b38.  v4:= temp @kind object;
  #L473b3a.  if v4 == 0 then goto L473b48;
  #L473b3e.  call temp:= `readFieldOrNull`(v4, v5, v6) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473b44.  v4:= temp @kind object;
  #L473b46.  return v4 @kind object;
  #L473b48.  return v2 @kind object;
  catch `java.lang.NoSuchFieldException` @[L473ad2..L473b04] goto L473b14;
  catch `java.lang.IllegalAccessException` @[L473ad2..L473b04] goto L473b08;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L473db8.  return @kind void;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L473cac.  call temp:= `trustManager`(v3, v4) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind virtual;
  #L473cb2.  v0:= temp @kind object;
  #L473cb4.  if v0 == 0 then goto L473cc2;
  #L473cb8.  call temp:= `buildCertificateChainCleaner`(v3, v0) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L473cbe.  v4:= temp @kind object;
  #L473cc0.  return v4 @kind object;
  #L473cc2.  v0:= new `java.lang.IllegalStateException`;
  #L473cc6.  v1:= new `java.lang.StringBuilder`;
  #L473cca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473cd0.  v2:= "Unable to extract the trust manager on " @kind object;
  #L473cd4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473cda.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L473ce0.  v2:= temp @kind object;
  #L473ce2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473ce8.  v2:= ", sslSocketFactory is " @kind object;
  #L473cec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473cf2.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L473cf8.  v4:= temp @kind object;
  #L473cfa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473d00.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L473d06.  v4:= temp @kind object;
  #L473d08.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L473d0e.  throw v0;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473d20.  v0:= new `okhttp3.internal.tls.BasicCertificateChainCleaner`;
  #L473d24.  call temp:= `buildTrustRootIndex`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind virtual;
  #L473d2a.  v2:= temp @kind object;
  #L473d2c.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @kind direct;
  #L473d32.  return v0 @kind object;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473d44.  v0:= new `okhttp3.internal.tls.BasicTrustRootIndex`;
  #L473d48.  call temp:= `getAcceptedIssuers`(v2) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L473d4e.  v2:= temp @kind object;
  #L473d50.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L473d56.  return v0 @kind object;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L473dcc.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L473de0.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L473de6.  return @kind void;
}
procedure `java.lang.String` `getPrefix`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473b6c.  v0:= "OkHttp" @kind object;
  #L473b70.  return v0 @kind object;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L473b84.  v1:= 0I;
  #L473b86.  return v1 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L473a8c.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L473a90.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L473a94.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L473a9a.  v0:= temp;
  #L473a9c.  if v0 == 0 then goto L473aac;
  #L473aa0.  v0:= new `java.lang.Throwable`;
  #L473aa4.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L473aaa.  return v0 @kind object;
  #L473aac.  v3:= 0I;
  #L473aae.  return v3 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L473a04.  v1:= 1I;
  #L473a06.  return v1;
}
procedure `void` `log`(`okhttp3.internal.platform.Platform` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473df8.  v0:= 5I;
  #L473dfa.  if v2 != v0 then goto L473e04;
  #L473dfe.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L473e02.  goto L473e08;
  #L473e04.  v2:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L473e08.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L473e0c.  call `log`(v0, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L473e12.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473e24.  if v3 != 0 then goto L473e4a;
  #L473e28.  v0:= new `java.lang.StringBuilder`;
  #L473e2c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473e32.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473e38.  v2:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L473e3c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473e42.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L473e48.  v2:= temp @kind object;
  #L473e4a.  v0:= 5I;
  #L473e4c.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L473e50.  call `log`(v1, v0, v2, v3) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L473e56.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L473bf4.  v0:= 0I;
  #L473bf6.  v1:= "sun.security.ssl.SSLContextImpl" @kind object;
  #L473bfa.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L473c00.  v1:= temp @kind object;
  #L473c02.  v2:= "context" @kind object;
  #L473c06.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473c0c.  v4:= temp @kind object;
  #L473c0e.  if v4 != 0 then goto L473c14;
  #L473c12.  return v0 @kind object;
  #L473c14.  v1:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L473c18.  v2:= "trustManager" @kind object;
  #L473c1c.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L473c22.  v4:= temp @kind object;
  #L473c24.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L473c28.  return v4 @kind object;
  #L473c2a.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L473bf6..L473c28] goto L473c2a;
}
