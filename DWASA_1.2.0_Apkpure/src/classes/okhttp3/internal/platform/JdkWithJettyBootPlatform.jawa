record `okhttp3.internal.platform.JdkWithJettyBootPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L473664.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L47366a.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L47366e.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L473672.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L473676.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` := v4 @kind object;
  #L47367a.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` := v5 @kind object;
  #L47367e.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L473554.  v0:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L473558.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L47355e.  v1:= temp @kind object;
  #L473560.  v2:= new `java.lang.StringBuilder`;
  #L473564.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47356a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473570.  v3:= "$Provider" @kind object;
  #L473574.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47357a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L473580.  v2:= temp @kind object;
  #L473582.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L473588.  v2:= temp @kind object;
  #L47358a.  v3:= new `java.lang.StringBuilder`;
  #L47358e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473594.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47359a.  v4:= "$ClientProvider" @kind object;
  #L47359e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4735a4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4735aa.  v3:= temp @kind object;
  #L4735ac.  call temp:= `forName`(v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L4735b2.  v8:= temp @kind object;
  #L4735b4.  v3:= new `java.lang.StringBuilder`;
  #L4735b8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4735be.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4735c4.  v0:= "$ServerProvider" @kind object;
  #L4735c8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4735ce.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4735d4.  v0:= temp @kind object;
  #L4735d6.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L4735dc.  v9:= temp @kind object;
  #L4735de.  v0:= "put" @kind object;
  #L4735e2.  v3:= 2I;
  #L4735e4.  v3:= new `java.lang.Class`[v3];
  #L4735e8.  v4:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L4735ec.  v5:= 0I;
  #L4735ee.  v3[v5]:= v4 @kind object;
  #L4735f2.  v4:= 1I;
  #L4735f4.  v3[v4]:= v2 @kind object;
  #L4735f8.  call temp:= `getMethod`(v1, v0, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L4735fe.  v0:= temp @kind object;
  #L473600.  v2:= "get" @kind object;
  #L473604.  v3:= new `java.lang.Class`[v4];
  #L473608.  v6:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L47360c.  v3[v5]:= v6 @kind object;
  #L473610.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L473616.  v6:= temp @kind object;
  #L473618.  v2:= "remove" @kind object;
  #L47361c.  v3:= new `java.lang.Class`[v4];
  #L473620.  v4:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L473624.  v3[v5]:= v4 @kind object;
  #L473628.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L47362e.  v7:= temp @kind object;
  #L473630.  v1:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform`;
  #L473634.  v4:= v1 @kind object;
  #L473636.  v5:= v0 @kind object;
  #L473638.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L47363e.  return v1 @kind object;
  #L473640.  v0:= 0I;
  #L473642.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L473554..L47363e] goto L473640;
  catch `java.lang.NoSuchMethodException` @[L473554..L47363e] goto L473640;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L473690.  v0:= v4.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L473694.  v1:= 0I;
  #L473696.  v2:= 1I;
  #L473698.  v2:= new `java.lang.Object`[v2];
  #L47369c.  v3:= 0I;
  #L47369e.  v2[v3]:= v5 @kind object;
  #L4736a2.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4736a8.  return @kind void;
  #L4736aa.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L4736ac.  goto L4736b0;
  #L4736ae.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L4736b0.  v0:= "unable to remove alpn" @kind object;
  #L4736b4.  call temp:= `assertionError`(v0, v5) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L4736ba.  v5:= temp @kind object;
  #L4736bc.  throw v5;
  catch `java.lang.IllegalAccessException` @[L473690..L4736a8] goto L4736ae;
  catch `java.lang.reflect.InvocationTargetException` @[L473690..L4736a8] goto L4736aa;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4736e0.  call temp:= `alpnProtocolNames`(v8) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4736e6.  v7:= temp @kind object;
  #L4736e8.  v8:= constclass @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L4736ec.  call temp:= `getClassLoader`(v8) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L4736f2.  v8:= temp @kind object;
  #L4736f4.  v0:= 2I;
  #L4736f6.  v1:= new `java.lang.Class`[v0];
  #L4736fa.  v2:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` @kind object;
  #L4736fe.  v3:= 0I;
  #L473700.  v1[v3]:= v2 @kind object;
  #L473704.  v2:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` @kind object;
  #L473708.  v4:= 1I;
  #L47370a.  v1[v4]:= v2 @kind object;
  #L47370e.  v2:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`;
  #L473712.  call `<init>`(v2, v7) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform$JettyNegoProvider;.<init>:(Ljava/util/List;)V` @kind direct;
  #L473718.  call temp:= `newProxyInstance`(v8, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L47371e.  v7:= temp @kind object;
  #L473720.  v8:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L473724.  v1:= 0I;
  #L473726.  v0:= new `java.lang.Object`[v0];
  #L47372a.  v0[v3]:= v6 @kind object;
  #L47372e.  v0[v4]:= v7 @kind object;
  #L473732.  call temp:= `invoke`(v8, v1, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L473738.  return @kind void;
  #L47373a.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L47373c.  goto L473740;
  #L47373e.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L473740.  v7:= "unable to set alpn" @kind object;
  #L473744.  call temp:= `assertionError`(v7, v6) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L47374a.  v6:= temp @kind object;
  #L47374c.  throw v6;
  catch `java.lang.reflect.InvocationTargetException` @[L4736e8..L473738] goto L47373e;
  catch `java.lang.IllegalAccessException` @[L4736e8..L473738] goto L47373a;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4734c4.  v0:= v3.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L4734c8.  v1:= 1I;
  #L4734ca.  v1:= new `java.lang.Object`[v1];
  #L4734ce.  v2:= 0I;
  #L4734d0.  v1[v2]:= v4 @kind object;
  #L4734d4.  v4:= 0I;
  #L4734d6.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4734dc.  v0:= temp @kind object;
  #L4734de.  call temp:= `getInvocationHandler`(v0) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L4734e4.  v0:= temp @kind object;
  #L4734e6.  v0:= (`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`) v0 @kind object;
  #L4734ea.  v1:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L4734ee.  if v1 != 0 then goto L473510;
  #L4734f2.  v1:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #L4734f6.  if v1 != 0 then goto L473510;
  #L4734fa.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L473500.  v0:= temp @kind object;
  #L473502.  v1:= 4I;
  #L473504.  v2:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L473508.  call `log`(v0, v1, v2, v4) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L47350e.  return v4 @kind object;
  #L473510.  v1:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L473514.  if v1 == 0 then goto L47351a;
  #L473518.  goto L47351e;
  #L47351a.  v4:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #L47351e.  return v4 @kind object;
  #L473520.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L473522.  goto L473526;
  #L473524.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L473526.  v0:= "unable to get selected protocol" @kind object;
  #L47352a.  call temp:= `assertionError`(v0, v4) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L473530.  v4:= temp @kind object;
  #L473532.  throw v4;
  catch `java.lang.reflect.InvocationTargetException` @[L4734c4..L47351e] goto L473524;
  catch `java.lang.IllegalAccessException` @[L4734c4..L47351e] goto L473520;
}
