record `okhttp3.internal.connection.RouteDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.internal.connection.RouteDatabase.failedRoutes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L467868.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46786e.  v0:= new `java.util.LinkedHashSet`;
  #L467872.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L467878.  v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` := v0 @kind object;
  #L46787c.  return @kind void;
}
procedure `void` `connected`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L467890.  @monitorenter v1
  #L467892.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L467896.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L46789c.  @monitorexit v1
  #L46789e.  return @kind void;
  #L4678a0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4678a2.  @monitorexit v1
  #L4678a4.  throw v2;
  catch `java.lang.Throwable` @[L467892..L46789c] goto L4678a0;
}
procedure `void` `failed`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4678c4.  @monitorenter v1
  #L4678c6.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L4678ca.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4678d0.  @monitorexit v1
  #L4678d2.  return @kind void;
  #L4678d4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4678d6.  @monitorexit v1
  #L4678d8.  throw v2;
  catch `java.lang.Throwable` @[L4678c6..L4678d0] goto L4678d4;
}
procedure `boolean` `shouldPostpone`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L467834.  @monitorenter v1
  #L467836.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L46783a.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L467840.  v2:= temp;
  #L467842.  @monitorexit v1
  #L467844.  return v2;
  #L467846.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L467848.  @monitorexit v1
  #L46784a.  throw v2;
  catch `java.lang.Throwable` @[L467836..L467842] goto L467846;
}
