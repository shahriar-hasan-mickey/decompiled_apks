record `okhttp3.internal.connection.RouteSelector$Selection` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector$Selection.routes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector$Selection` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L467a68.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L467a6e.  v0:= 0I;
  #L467a70.  v1.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int` := v0;
  #L467a74.  v1.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` := v2 @kind object;
  #L467a78.  return @kind void;
}
procedure `java.util.List` `getAll`(`okhttp3.internal.connection.RouteSelector$Selection` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.getAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L467a00.  v0:= new `java.util.ArrayList`;
  #L467a04.  v1:= v2.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` @kind object;
  #L467a08.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L467a0e.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector$Selection` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4679d4.  v0:= v2.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int`;
  #L4679d8.  v1:= v2.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` @kind object;
  #L4679dc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4679e2.  v1:= temp;
  #L4679e4.  if v0 >= v1 then goto L4679ec;
  #L4679e8.  v0:= 1I;
  #L4679ea.  goto L4679ee;
  #L4679ec.  v0:= 0I;
  #L4679ee.  return v0;
}
procedure `okhttp3.Route` `next`(`okhttp3.internal.connection.RouteSelector$Selection` v3 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L467a20.  call temp:= `hasNext`(v3) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L467a26.  v0:= temp;
  #L467a28.  if v0 == 0 then goto L467a4a;
  #L467a2c.  v0:= v3.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` @kind object;
  #L467a30.  v1:= v3.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int`;
  #L467a34.  v2:= v1 + 1;
  #L467a38.  v3.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int` := v2;
  #L467a3c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L467a42.  v0:= temp @kind object;
  #L467a44.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L467a48.  return v0 @kind object;
  #L467a4a.  v0:= new `java.util.NoSuchElementException`;
  #L467a4e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L467a54.  throw v0;
}
