record `okhttp3.internal.connection.RealConnection` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http2.Http2Connection$Listener` @kind class, `okhttp3.Connection` @kind interface {
  `int` `okhttp3.internal.connection.RealConnection.allocationLimit` @AccessFlag PUBLIC;
  `java.util.List` `okhttp3.internal.connection.RealConnection.allocations` @AccessFlag PUBLIC_FINAL;
  `okhttp3.ConnectionPool` `okhttp3.internal.connection.RealConnection.connectionPool` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.internal.connection.RealConnection.handshake` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.connection.RealConnection.http2Connection` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.connection.RealConnection.idleAtNanos` @AccessFlag PUBLIC;
  `boolean` `okhttp3.internal.connection.RealConnection.noNewStreams` @AccessFlag PUBLIC;
  `okhttp3.Protocol` `okhttp3.internal.connection.RealConnection.protocol` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.rawSocket` @AccessFlag PRIVATE;
  `okhttp3.Route` `okhttp3.internal.connection.RealConnection.route` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSink` `okhttp3.internal.connection.RealConnection.sink` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.socket` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okhttp3.internal.connection.RealConnection.source` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.successCount` @AccessFlag PUBLIC;
}
global `int` `@@okhttp3.internal.connection.RealConnection.MAX_TUNNEL_ATTEMPTS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.connection.RealConnection.NPE_THROW_WITH_NULL` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnection` v2 @kind this, `okhttp3.ConnectionPool` v3 @kind object, `okhttp3.Route` v4 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/ConnectionPool;Lokhttp3/Route;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L466fac.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.<init>:()V` @kind direct;
  #L466fb2.  v0:= 1I;
  #L466fb4.  v2.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int` := v0;
  #L466fb8.  v0:= new `java.util.ArrayList`;
  #L466fbc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L466fc2.  v2.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` := v0 @kind object;
  #L466fc6.  v0:= 9223372036854775807L;
  #L466fd0.  v2.`okhttp3.internal.connection.RealConnection.idleAtNanos` @type ^`long` := v0 @kind wide;
  #L466fd4.  v2.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.ConnectionPool` := v3 @kind object;
  #L466fd8.  v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` := v4 @kind object;
  #L466fdc.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `int` v5 , `int` v6 , `okhttp3.Call` v7 @kind object, `okhttp3.EventListener` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectSocket:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4672ac.  v0:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L4672b0.  call temp:= `proxy`(v0) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L4672b6.  v0:= temp @kind object;
  #L4672b8.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L4672bc.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L4672c2.  v1:= temp @kind object;
  #L4672c4.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L4672ca.  v2:= temp @kind object;
  #L4672cc.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L4672d0.  if v2 == v3 then goto L4672f2;
  #L4672d4.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L4672da.  v2:= temp @kind object;
  #L4672dc.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L4672e0.  if v2 != v3 then goto L4672e6;
  #L4672e4.  goto L4672f2;
  #L4672e6.  v1:= new `java.net.Socket`;
  #L4672ea.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L4672f0.  goto L467302;
  #L4672f2.  call temp:= `socketFactory`(v1) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L4672f8.  v1:= temp @kind object;
  #L4672fa.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L467300.  v1:= temp @kind object;
  #L467302.  v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` := v1 @kind object;
  #L467306.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L46730a.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L467310.  v1:= temp @kind object;
  #L467312.  call `connectStart`(v8, v7, v1, v0) @signature `Lokhttp3/EventListener;.connectStart:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L467318.  v7:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L46731c.  call `setSoTimeout`(v7, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L467322.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L467328.  v6:= temp @kind object;
  #L46732a.  v7:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L46732e.  v8:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L467332.  call temp:= `socketAddress`(v8) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L467338.  v8:= temp @kind object;
  #L46733a.  call `connectSocket`(v6, v7, v8, v5) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L467340.  v5:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L467344.  call temp:= `source`(v5) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L46734a.  v5:= temp @kind object;
  #L46734c.  call temp:= `buffer`(v5) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L467352.  v5:= temp @kind object;
  #L467354.  v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` := v5 @kind object;
  #L467358.  v5:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L46735c.  call temp:= `sink`(v5) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L467362.  v5:= temp @kind object;
  #L467364.  call temp:= `buffer`(v5) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L46736a.  v5:= temp @kind object;
  #L46736c.  v4.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` := v5 @kind object;
  #L467370.  goto L46738c;
  #L467372.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L467374.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L46737a.  v6:= temp @kind object;
  #L46737c.  v7:= "throw with null exception" @kind object;
  #L467380.  call temp:= `equals`(v7, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L467386.  v6:= temp;
  #L467388.  if v6 != 0 then goto L46738e;
  #L46738c.  return @kind void;
  #L46738e.  v6:= new `java.io.IOException`;
  #L467392.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L467398.  throw v6;
  #L46739a.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L46739c.  v6:= new `java.net.ConnectException`;
  #L4673a0.  v7:= new `java.lang.StringBuilder`;
  #L4673a4.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4673aa.  v8:= "Failed to connect to " @kind object;
  #L4673ae.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4673b4.  v8:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L4673b8.  call temp:= `socketAddress`(v8) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L4673be.  v8:= temp @kind object;
  #L4673c0.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4673c6.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4673cc.  v7:= temp @kind object;
  #L4673ce.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4673d4.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L4673da.  throw v6;
  catch `java.net.ConnectException` @[L467322..L467340] goto L46739a;
  catch `java.lang.NullPointerException` @[L467340..L467370] goto L467372;
}
procedure `void` `connectTls`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectTls:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L467408.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L46740c.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L467412.  v0:= temp @kind object;
  #L467414.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L46741a.  v1:= temp @kind object;
  #L46741c.  v2:= 0I;
  #L46741e.  v3:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L467422.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467428.  v4:= temp @kind object;
  #L46742a.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L467430.  v4:= temp @kind object;
  #L467432.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467438.  v5:= temp @kind object;
  #L46743a.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L467440.  v5:= temp;
  #L467442.  v6:= 1I;
  #L467444.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L46744a.  v1:= temp @kind object;
  #L46744c.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L467450.  call temp:= `configureSecureSocket`(v8, v1) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.configureSecureSocket:(Ljavax/net/ssl/SSLSocket;)Lokhttp3/ConnectionSpec;` @kind virtual;
  #L467456.  v8:= temp @kind object;
  #L467458.  call temp:= `supportsTlsExtensions`(v8) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L46745e.  v3:= temp;
  #L467460.  if v3 == 0 then goto L46748a;
  #L467464.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L46746a.  v3:= temp @kind object;
  #L46746c.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467472.  v4:= temp @kind object;
  #L467474.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L46747a.  v4:= temp @kind object;
  #L46747c.  call temp:= `protocols`(v0) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L467482.  v5:= temp @kind object;
  #L467484.  call `configureTlsExtensions`(v3, v1, v4, v5) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L46748a.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L467490.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L467496.  v3:= temp @kind object;
  #L467498.  call temp:= `get`(v3) @signature `Lokhttp3/Handshake;.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @kind static;
  #L46749e.  v3:= temp @kind object;
  #L4674a0.  call temp:= `hostnameVerifier`(v0) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L4674a6.  v4:= temp @kind object;
  #L4674a8.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4674ae.  v5:= temp @kind object;
  #L4674b0.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L4674b6.  v5:= temp @kind object;
  #L4674b8.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L4674be.  v6:= temp @kind object;
  #L4674c0.  call temp:= `verify`(v4, v5, v6) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L4674c6.  v4:= temp;
  #L4674c8.  if v4 == 0 then goto L467570;
  #L4674cc.  call temp:= `certificatePinner`(v0) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L4674d2.  v4:= temp @kind object;
  #L4674d4.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4674da.  v0:= temp @kind object;
  #L4674dc.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L4674e2.  v0:= temp @kind object;
  #L4674e4.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L4674ea.  v5:= temp @kind object;
  #L4674ec.  call `check`(v4, v0, v5) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L4674f2.  call temp:= `supportsTlsExtensions`(v8) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L4674f8.  v8:= temp;
  #L4674fa.  if v8 == 0 then goto L46750e;
  #L4674fe.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L467504.  v8:= temp @kind object;
  #L467506.  call temp:= `getSelectedProtocol`(v8, v1) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L46750c.  v2:= temp @kind object;
  #L46750e.  v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v1 @kind object;
  #L467512.  v8:= v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L467516.  call temp:= `source`(v8) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L46751c.  v8:= temp @kind object;
  #L46751e.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L467524.  v8:= temp @kind object;
  #L467526.  v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` := v8 @kind object;
  #L46752a.  v8:= v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L46752e.  call temp:= `sink`(v8) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L467534.  v8:= temp @kind object;
  #L467536.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L46753c.  v8:= temp @kind object;
  #L46753e.  v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` := v8 @kind object;
  #L467542.  v7.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` := v3 @kind object;
  #L467546.  if v2 == 0 then goto L467554;
  #L46754a.  call temp:= `get`(v2) @signature `Lokhttp3/Protocol;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @kind static;
  #L467550.  v8:= temp @kind object;
  #L467552.  goto L467558;
  #L467554.  v8:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L467558.  v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v8 @kind object;
  #L46755c.  if v1 == 0 then goto L46756e;
  #L467560.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L467566.  v8:= temp @kind object;
  #L467568.  call `afterHandshake`(v8, v1) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L46756e.  return @kind void;
  #L467570.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L467576.  v8:= temp @kind object;
  #L467578.  v2:= 0I;
  #L46757a.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L467580.  v8:= temp @kind object;
  #L467582.  v8:= (`java.security.cert.X509Certificate`) v8 @kind object;
  #L467586.  v2:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L46758a.  v3:= new `java.lang.StringBuilder`;
  #L46758e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L467594.  v4:= "Hostname " @kind object;
  #L467598.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46759e.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4675a4.  v0:= temp @kind object;
  #L4675a6.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L4675ac.  v0:= temp @kind object;
  #L4675ae.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4675b4.  v0:= " not verified:\n    certificate: " @kind object;
  #L4675b8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4675be.  call temp:= `pin`(v8) @signature `Lokhttp3/CertificatePinner;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L4675c4.  v0:= temp @kind object;
  #L4675c6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4675cc.  v0:= "\n    DN: " @kind object;
  #L4675d0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4675d6.  call temp:= `getSubjectDN`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L4675dc.  v0:= temp @kind object;
  #L4675de.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L4675e4.  v0:= temp @kind object;
  #L4675e6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4675ec.  v0:= "\n    subjectAltNames: " @kind object;
  #L4675f0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4675f6.  call temp:= `allSubjectAltNames`(v8) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L4675fc.  v8:= temp @kind object;
  #L4675fe.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467604.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46760a.  v8:= temp @kind object;
  #L46760c.  call `<init>`(v2, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L467612.  throw v2;
  #L467614.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L467616.  goto L467640;
  #L467618.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L46761a.  v2:= v1 @kind object;
  #L46761c.  goto L467626;
  #L46761e.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L467620.  v1:= v2 @kind object;
  #L467622.  goto L467640;
  #L467624.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L467626.  call temp:= `isAndroidGetsocknameError`(v8) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L46762c.  v0:= temp;
  #L46762e.  if v0 == 0 then goto L46763e;
  #L467632.  v0:= new `java.io.IOException`;
  #L467636.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L46763c.  throw v0;
  #L46763e.  throw v8;
  #L467640.  if v1 == 0 then goto L467652;
  #L467644.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L46764a.  v0:= temp @kind object;
  #L46764c.  call `afterHandshake`(v0, v1) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L467652.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L467658.  throw v8;
  catch `java.lang.AssertionError` @[L46741e..L467450] goto L467624;
  catch `java.lang.Throwable` @[L46741e..L467450] goto L46761e;
  catch `java.lang.AssertionError` @[L467450..L46755c] goto L467618;
  catch `java.lang.Throwable` @[L467450..L46755c] goto L467614;
  catch `java.lang.AssertionError` @[L467570..L467614] goto L467618;
  catch `java.lang.Throwable` @[L467570..L467614] goto L467614;
  catch `java.lang.Throwable` @[L467626..L467640] goto L46761e;
}
procedure `void` `connectTunnel`(`okhttp3.internal.connection.RealConnection` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `okhttp3.Call` v10 @kind object, `okhttp3.EventListener` v11 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectTunnel:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4676a0.  call temp:= `createTunnelRequest`(v6) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnelRequest:()Lokhttp3/Request;` @kind direct;
  #L4676a6.  v0:= temp @kind object;
  #L4676a8.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4676ae.  v1:= temp @kind object;
  #L4676b0.  v2:= 0I;
  #L4676b2.  v3:= 21I;
  #L4676b6.  if v2 >= v3 then goto L46770a;
  #L4676ba.  call `connectSocket`(v6, v7, v8, v10, v11) @signature `Lokhttp3/internal/connection/RealConnection;.connectSocket:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L4676c0.  call temp:= `createTunnel`(v6, v8, v9, v0, v1) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnel:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @kind direct;
  #L4676c6.  v0:= temp @kind object;
  #L4676c8.  if v0 != 0 then goto L4676ce;
  #L4676cc.  goto L46770a;
  #L4676ce.  v3:= v6.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L4676d2.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L4676d8.  v3:= 0I;
  #L4676da.  v6.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` := v3 @kind object;
  #L4676de.  v6.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` := v3 @kind object;
  #L4676e2.  v6.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` := v3 @kind object;
  #L4676e6.  v4:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L4676ea.  call temp:= `socketAddress`(v4) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L4676f0.  v4:= temp @kind object;
  #L4676f2.  v5:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L4676f6.  call temp:= `proxy`(v5) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L4676fc.  v5:= temp @kind object;
  #L4676fe.  call `connectEnd`(v11, v10, v4, v5, v3) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L467704.  v2:= v2 + 1;
  #L467708.  goto L4676b2;
  #L46770a.  return @kind void;
}
procedure `okhttp3.Request` `createTunnel`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `int` v8 , `int` v9 , `okhttp3.Request` v10 @kind object, `okhttp3.HttpUrl` v11 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnel:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L466c4c.  v0:= new `java.lang.StringBuilder`;
  #L466c50.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L466c56.  v1:= "CONNECT " @kind object;
  #L466c5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466c60.  v1:= 1I;
  #L466c62.  call temp:= `hostHeader`(v11, v1) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L466c68.  v11:= temp @kind object;
  #L466c6a.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466c70.  v11:= " HTTP/1.1" @kind object;
  #L466c74.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466c7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L466c80.  v11:= temp @kind object;
  #L466c82.  v0:= new `okhttp3.internal.http1.Http1Codec`;
  #L466c86.  v1:= v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L466c8a.  v2:= v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L466c8e.  v3:= 0I;
  #L466c90.  call `<init>`(v0, v3, v3, v1, v2) @signature `Lokhttp3/internal/http1/Http1Codec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L466c96.  v1:= v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L466c9a.  call temp:= `timeout`(v1) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L466ca0.  v1:= temp @kind object;
  #L466ca2.  v4:= (`long`) v8 @kind i2l;
  #L466ca4.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L466ca8.  call temp:= `timeout`(v1, v4, v2) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L466cae.  v1:= v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L466cb2.  call temp:= `timeout`(v1) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L466cb8.  v1:= temp @kind object;
  #L466cba.  v4:= (`long`) v9 @kind i2l;
  #L466cbc.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L466cc0.  call temp:= `timeout`(v1, v4, v2) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L466cc6.  call temp:= `headers`(v10) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L466ccc.  v1:= temp @kind object;
  #L466cce.  call `writeRequest`(v0, v1, v11) @signature `Lokhttp3/internal/http1/Http1Codec;.writeRequest:(Lokhttp3/Headers;Ljava/lang/String;)V` @kind virtual;
  #L466cd4.  call `finishRequest`(v0) @signature `Lokhttp3/internal/http1/Http1Codec;.finishRequest:()V` @kind virtual;
  #L466cda.  v1:= 0I;
  #L466cdc.  call temp:= `readResponseHeaders`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind virtual;
  #L466ce2.  v1:= temp @kind object;
  #L466ce4.  call temp:= `request`(v1, v10) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L466cea.  v10:= temp @kind object;
  #L466cec.  call temp:= `build`(v10) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L466cf2.  v10:= temp @kind object;
  #L466cf4.  call temp:= `contentLength`(v10) @signature `Lokhttp3/internal/http/HttpHeaders;.contentLength:(Lokhttp3/Response;)J` @kind static;
  #L466cfa.  v1:= temp @kind wide;
  #L466cfc.  v4:= -1L;
  #L466d00.  v6:= lcmp(v1, v4);
  #L466d04.  if v6 != 0 then goto L466d0c;
  #L466d08.  v1:= 0L;
  #L466d0c.  call temp:= `newFixedLengthSource`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.newFixedLengthSource:(J)Lokio/Source;` @kind virtual;
  #L466d12.  v0:= temp @kind object;
  #L466d14.  v1:= 2147483647I;
  #L466d1a.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L466d1e.  call temp:= `skipAll`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L466d24.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L466d2a.  call temp:= `code`(v10) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L466d30.  v0:= temp;
  #L466d32.  v1:= 200I;
  #L466d36.  if v0 == v1 then goto L466dd0;
  #L466d3a.  v1:= 407I;
  #L466d3e.  if v0 != v1 then goto L466d9a;
  #L466d42.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466d46.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L466d4c.  v0:= temp @kind object;
  #L466d4e.  call temp:= `proxyAuthenticator`(v0) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L466d54.  v0:= temp @kind object;
  #L466d56.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466d5a.  call temp:= `authenticate`(v0, v1, v10) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L466d60.  v0:= temp @kind object;
  #L466d62.  if v0 == 0 then goto L466d8a;
  #L466d66.  v1:= "Connection" @kind object;
  #L466d6a.  call temp:= `header`(v10, v1) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L466d70.  v10:= temp @kind object;
  #L466d72.  v1:= "close" @kind object;
  #L466d76.  call temp:= `equalsIgnoreCase`(v1, v10) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L466d7c.  v10:= temp;
  #L466d7e.  if v10 == 0 then goto L466d84;
  #L466d82.  return v0 @kind object;
  #L466d84.  v10:= v0 @kind object;
  #L466d86.  goto L466c82;
  #L466d8a.  v8:= new `java.io.IOException`;
  #L466d8e.  v9:= "Failed to authenticate with proxy" @kind object;
  #L466d92.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L466d98.  throw v8;
  #L466d9a.  v8:= new `java.io.IOException`;
  #L466d9e.  v9:= new `java.lang.StringBuilder`;
  #L466da2.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L466da8.  v11:= "Unexpected response code for CONNECT: " @kind object;
  #L466dac.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466db2.  call temp:= `code`(v10) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L466db8.  v10:= temp;
  #L466dba.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L466dc0.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L466dc6.  v9:= temp @kind object;
  #L466dc8.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L466dce.  throw v8;
  #L466dd0.  v8:= v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L466dd4.  call temp:= `buffer`(v8) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L466dda.  v8:= temp @kind object;
  #L466ddc.  call temp:= `exhausted`(v8) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L466de2.  v8:= temp;
  #L466de4.  if v8 == 0 then goto L466e02;
  #L466de8.  v8:= v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L466dec.  call temp:= `buffer`(v8) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L466df2.  v8:= temp @kind object;
  #L466df4.  call temp:= `exhausted`(v8) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L466dfa.  v8:= temp;
  #L466dfc.  if v8 == 0 then goto L466e02;
  #L466e00.  return v3 @kind object;
  #L466e02.  v8:= new `java.io.IOException`;
  #L466e06.  v9:= "TLS tunnel buffered too many bytes!" @kind object;
  #L466e0a.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L466e10.  goto L466e14;
  #L466e12.  throw v8;
  #L466e14.  goto L466e12;
}
procedure `okhttp3.Request` `createTunnelRequest`(`okhttp3.internal.connection.RealConnection` v3 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnelRequest:()Lokhttp3/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L466e28.  v0:= new `okhttp3.Request$Builder`;
  #L466e2c.  call `<init>`(v0) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L466e32.  v1:= v3.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466e36.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L466e3c.  v1:= temp @kind object;
  #L466e3e.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L466e44.  v1:= temp @kind object;
  #L466e46.  call temp:= `url`(v0, v1) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L466e4c.  v0:= temp @kind object;
  #L466e4e.  v1:= v3.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466e52.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L466e58.  v1:= temp @kind object;
  #L466e5a.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L466e60.  v1:= temp @kind object;
  #L466e62.  v2:= 1I;
  #L466e64.  call temp:= `hostHeader`(v1, v2) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L466e6a.  v1:= temp @kind object;
  #L466e6c.  v2:= "Host" @kind object;
  #L466e70.  call temp:= `header`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L466e76.  v0:= temp @kind object;
  #L466e78.  v1:= "Proxy-Connection" @kind object;
  #L466e7c.  v2:= "Keep-Alive" @kind object;
  #L466e80.  call temp:= `header`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L466e86.  v0:= temp @kind object;
  #L466e88.  call temp:= `userAgent`() @signature `Lokhttp3/internal/Version;.userAgent:()Ljava/lang/String;` @kind static;
  #L466e8e.  v1:= temp @kind object;
  #L466e90.  v2:= "User-Agent" @kind object;
  #L466e94.  call temp:= `header`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L466e9a.  v0:= temp @kind object;
  #L466e9c.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L466ea2.  v0:= temp @kind object;
  #L466ea4.  return v0 @kind object;
}
procedure `void` `establishProtocol`(`okhttp3.internal.connection.RealConnection` v2 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v3 @kind object, `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.establishProtocol:(Lokhttp3/internal/connection/ConnectionSpecSelector;Lokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46771c.  v0:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L467720.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L467726.  v0:= temp @kind object;
  #L467728.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L46772e.  v0:= temp @kind object;
  #L467730.  if v0 != 0 then goto L467746;
  #L467734.  v3:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L467738.  v2.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v3 @kind object;
  #L46773c.  v3:= v2.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L467740.  v2.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v3 @kind object;
  #L467744.  return @kind void;
  #L467746.  call `secureConnectStart`(v5, v4) @signature `Lokhttp3/EventListener;.secureConnectStart:(Lokhttp3/Call;)V` @kind virtual;
  #L46774c.  call `connectTls`(v2, v3) @signature `Lokhttp3/internal/connection/RealConnection;.connectTls:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @kind direct;
  #L467752.  v3:= v2.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L467756.  call `secureConnectEnd`(v5, v4, v3) @signature `Lokhttp3/EventListener;.secureConnectEnd:(Lokhttp3/Call;Lokhttp3/Handshake;)V` @kind virtual;
  #L46775c.  v3:= v2.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L467760.  v4:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L467764.  if v3 != v4 then goto L4677ce;
  #L467768.  v3:= v2.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L46776c.  v4:= 0I;
  #L46776e.  call `setSoTimeout`(v3, v4) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L467774.  v3:= new `okhttp3.internal.http2.Http2Connection$Builder`;
  #L467778.  v4:= 1I;
  #L46777a.  call `<init>`(v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.<init>:(Z)V` @kind direct;
  #L467780.  v4:= v2.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L467784.  v5:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L467788.  call temp:= `address`(v5) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L46778e.  v5:= temp @kind object;
  #L467790.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467796.  v5:= temp @kind object;
  #L467798.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L46779e.  v5:= temp @kind object;
  #L4677a0.  v0:= v2.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L4677a4.  v1:= v2.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L4677a8.  call temp:= `socket`(v3, v4, v5, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L4677ae.  v3:= temp @kind object;
  #L4677b0.  call temp:= `listener`(v3, v2) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.listener:(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L4677b6.  v3:= temp @kind object;
  #L4677b8.  call temp:= `build`(v3) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.build:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L4677be.  v3:= temp @kind object;
  #L4677c0.  v2.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` := v3 @kind object;
  #L4677c4.  v3:= v2.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L4677c8.  call `start`(v3) @signature `Lokhttp3/internal/http2/Http2Connection;.start:()V` @kind virtual;
  #L4677ce.  return @kind void;
}
procedure `okhttp3.internal.connection.RealConnection` `testConnection`(`okhttp3.ConnectionPool` v1 @kind object, `okhttp3.Route` v2 @kind object, `java.net.Socket` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/connection/RealConnection;.testConnection:(Lokhttp3/ConnectionPool;Lokhttp3/Route;Ljava/net/Socket;J)Lokhttp3/internal/connection/RealConnection;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L466ed0.  v0:= new `okhttp3.internal.connection.RealConnection`;
  #L466ed4.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/ConnectionPool;Lokhttp3/Route;)V` @kind direct;
  #L466eda.  v0.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v3 @kind object;
  #L466ede.  v0.`okhttp3.internal.connection.RealConnection.idleAtNanos` @type ^`long` := v4 @kind wide;
  #L466ee2.  return v0 @kind object;
}
procedure `void` `cancel`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466ff0.  v0:= v1.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L466ff4.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L466ffa.  return @kind void;
}
procedure `void` `connect`(`okhttp3.internal.connection.RealConnection` v15 @kind this, `int` v16 , `int` v17 , `int` v18 , `boolean` v19 , `okhttp3.Call` v20 @kind object, `okhttp3.EventListener` v21 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connect:(IIIZLokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L46700c.  v7:= v15 @kind object;
  #L46700e.  v8:= v20 @kind object;
  #L467012.  v9:= v21 @kind object;
  #L467016.  v0:= v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L46701a.  if v0 != 0 then goto L467260;
  #L46701e.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L467022.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L467028.  v0:= temp @kind object;
  #L46702a.  call temp:= `connectionSpecs`(v0) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @kind virtual;
  #L467030.  v0:= temp @kind object;
  #L467032.  v10:= new `okhttp3.internal.connection.ConnectionSpecSelector`;
  #L467036.  call `<init>`(v10, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.<init>:(Ljava/util/List;)V` @kind direct;
  #L46703c.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L467040.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L467046.  v1:= temp @kind object;
  #L467048.  call temp:= `sslSocketFactory`(v1) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L46704e.  v1:= temp @kind object;
  #L467050.  if v1 != 0 then goto L4670f2;
  #L467054.  v1:= `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L467058.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L46705e.  v0:= temp;
  #L467060.  if v0 == 0 then goto L4670d8;
  #L467064.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L467068.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L46706e.  v0:= temp @kind object;
  #L467070.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467076.  v0:= temp @kind object;
  #L467078.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L46707e.  v0:= temp @kind object;
  #L467080.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L467086.  v1:= temp @kind object;
  #L467088.  call temp:= `isCleartextTrafficPermitted`(v1, v0) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind virtual;
  #L46708e.  v1:= temp;
  #L467090.  if v1 == 0 then goto L467096;
  #L467094.  goto L4670f2;
  #L467096.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L46709a.  v2:= new `java.net.UnknownServiceException`;
  #L46709e.  v3:= new `java.lang.StringBuilder`;
  #L4670a2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4670a8.  v4:= "CLEARTEXT communication to " @kind object;
  #L4670ac.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4670b2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4670b8.  v0:= " not permitted by network security policy" @kind object;
  #L4670bc.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4670c2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4670c8.  v0:= temp @kind object;
  #L4670ca.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4670d0.  call `<init>`(v1, v2) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L4670d6.  throw v1;
  #L4670d8.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L4670dc.  v1:= new `java.net.UnknownServiceException`;
  #L4670e0.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L4670e4.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4670ea.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L4670f0.  throw v0;
  #L4670f2.  v11:= 0I;
  #L4670f4.  v12:= v11 @kind object;
  #L4670f6.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L4670fa.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L467100.  v0:= temp;
  #L467102.  if v0 == 0 then goto L467136;
  #L467106.  v1:= v15 @kind object;
  #L467108.  v2:= v16;
  #L46710c.  v3:= v17;
  #L467110.  v4:= v18;
  #L467114.  v5:= v20 @kind object;
  #L467118.  v6:= v21 @kind object;
  #L46711c.  call `connectTunnel`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/connection/RealConnection;.connectTunnel:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L467122.  v0:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L467126.  if v0 != 0 then goto L46712c;
  #L46712a.  goto L46716c;
  #L46712c.  v13:= v16;
  #L467130.  v14:= v17;
  #L467134.  goto L467144;
  #L467136.  v13:= v16;
  #L46713a.  v14:= v17;
  #L46713e.  call `connectSocket`(v15, v13, v14, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.connectSocket:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L467144.  call `establishProtocol`(v15, v10, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.establishProtocol:(Lokhttp3/internal/connection/ConnectionSpecSelector;Lokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L46714a.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L46714e.  call temp:= `socketAddress`(v0) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L467154.  v0:= temp @kind object;
  #L467156.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L46715a.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L467160.  v1:= temp @kind object;
  #L467162.  v2:= v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L467166.  call `connectEnd`(v9, v8, v0, v1, v2) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L46716c.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L467170.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L467176.  v0:= temp;
  #L467178.  if v0 == 0 then goto L4671a0;
  #L46717c.  v0:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L467180.  if v0 == 0 then goto L467186;
  #L467184.  goto L4671a0;
  #L467186.  v0:= new `java.net.ProtocolException`;
  #L46718a.  v1:= "Too many tunnel connections attempted: 21" @kind object;
  #L46718e.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L467194.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L467198.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L46719e.  throw v1;
  #L4671a0.  v0:= v7.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L4671a4.  if v0 == 0 then goto L4671c8;
  #L4671a8.  v1:= v7.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L4671ac.  @monitorenter v1
  #L4671ae.  v0:= v7.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L4671b2.  call temp:= `maxConcurrentStreams`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.maxConcurrentStreams:()I` @kind virtual;
  #L4671b8.  v0:= temp;
  #L4671ba.  v7.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int` := v0;
  #L4671be.  @monitorexit v1
  #L4671c0.  goto L4671c8;
  #L4671c2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4671c4.  @monitorexit v1
  #L4671c6.  throw v0;
  #L4671c8.  return @kind void;
  #L4671ca.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L4671cc.  goto L4671d8;
  #L4671ce.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L4671d0.  v13:= v16;
  #L4671d4.  v14:= v17;
  #L4671d8.  v1:= v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L4671dc.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L4671e2.  v1:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L4671e6.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L4671ec.  v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v11 @kind object;
  #L4671f0.  v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` := v11 @kind object;
  #L4671f4.  v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` := v11 @kind object;
  #L4671f8.  v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` := v11 @kind object;
  #L4671fc.  v7.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` := v11 @kind object;
  #L467200.  v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v11 @kind object;
  #L467204.  v7.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` := v11 @kind object;
  #L467208.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L46720c.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L467212.  v3:= temp @kind object;
  #L467214.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L467218.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L46721e.  v4:= temp @kind object;
  #L467220.  v5:= 0I;
  #L467222.  v1:= v21 @kind object;
  #L467226.  v2:= v20 @kind object;
  #L46722a.  v6:= v0 @kind object;
  #L46722c.  call `connectFailed`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/EventListener;.connectFailed:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;Ljava/io/IOException;)V` @kind virtual;
  #L467232.  if v12 != 0 then goto L467244;
  #L467236.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L46723a.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L467240.  v12:= v1 @kind object;
  #L467242.  goto L46724a;
  #L467244.  call `addConnectException`(v12, v0) @signature `Lokhttp3/internal/connection/RouteException;.addConnectException:(Ljava/io/IOException;)V` @kind virtual;
  #L46724a.  if v19 == 0 then goto L46725e;
  #L46724e.  call temp:= `connectionFailed`(v10, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.connectionFailed:(Ljava/io/IOException;)Z` @kind virtual;
  #L467254.  v0:= temp;
  #L467256.  if v0 == 0 then goto L46725e;
  #L46725a.  goto L4670f6;
  #L46725e.  throw v12;
  #L467260.  v0:= new `java.lang.IllegalStateException`;
  #L467264.  v1:= "already connected" @kind object;
  #L467268.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46726e.  goto L467272;
  #L467270.  throw v0;
  #L467272.  goto L467270;
  catch `java.io.IOException` @[L4670f6..L467126] goto L4671ce;
  catch `java.io.IOException` @[L46713e..L46716c] goto L4671ca;
  catch `java.lang.Throwable` @[L4671ae..L4671c6] goto L4671c2;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466c1c.  v0:= v1.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L466c20.  return v0 @kind object;
}
procedure `boolean` `isEligible`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.Address` v5 @kind object, `okhttp3.Route` v6 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.isEligible:(Lokhttp3/Address;Lokhttp3/Route;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L466800.  v0:= v4.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L466804.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L46680a.  v0:= temp;
  #L46680c.  v1:= v4.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int`;
  #L466810.  v2:= 0I;
  #L466812.  if v0 >= v1 then goto L46694a;
  #L466816.  v0:= v4.`okhttp3.internal.connection.RealConnection.noNewStreams` @type ^`boolean` @kind boolean;
  #L46681a.  if v0 == 0 then goto L466822;
  #L46681e.  goto L46694a;
  #L466822.  v0:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L466826.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L46682a.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L466830.  v1:= temp @kind object;
  #L466832.  call temp:= `equalsNonHost`(v0, v1, v5) @signature `Lokhttp3/internal/Internal;.equalsNonHost:(Lokhttp3/Address;Lokhttp3/Address;)Z` @kind virtual;
  #L466838.  v0:= temp;
  #L46683a.  if v0 != 0 then goto L466840;
  #L46683e.  return v2;
  #L466840.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L466846.  v0:= temp @kind object;
  #L466848.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L46684e.  v0:= temp @kind object;
  #L466850.  call temp:= `route`(v4) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L466856.  v1:= temp @kind object;
  #L466858.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L46685e.  v1:= temp @kind object;
  #L466860.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L466866.  v1:= temp @kind object;
  #L466868.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L46686e.  v1:= temp @kind object;
  #L466870.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L466876.  v0:= temp;
  #L466878.  v1:= 1I;
  #L46687a.  if v0 == 0 then goto L466880;
  #L46687e.  return v1;
  #L466880.  v0:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L466884.  if v0 != 0 then goto L46688a;
  #L466888.  return v2;
  #L46688a.  if v6 != 0 then goto L466890;
  #L46688e.  return v2;
  #L466890.  call temp:= `proxy`(v6) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L466896.  v0:= temp @kind object;
  #L466898.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L46689e.  v0:= temp @kind object;
  #L4668a0.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L4668a4.  if v0 == v3 then goto L4668aa;
  #L4668a8.  return v2;
  #L4668aa.  v0:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L4668ae.  call temp:= `proxy`(v0) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L4668b4.  v0:= temp @kind object;
  #L4668b6.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L4668bc.  v0:= temp @kind object;
  #L4668be.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L4668c2.  if v0 == v3 then goto L4668c8;
  #L4668c6.  return v2;
  #L4668c8.  v0:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L4668cc.  call temp:= `socketAddress`(v0) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L4668d2.  v0:= temp @kind object;
  #L4668d4.  call temp:= `socketAddress`(v6) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L4668da.  v3:= temp @kind object;
  #L4668dc.  call temp:= `equals`(v0, v3) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4668e2.  v0:= temp;
  #L4668e4.  if v0 != 0 then goto L4668ea;
  #L4668e8.  return v2;
  #L4668ea.  call temp:= `address`(v6) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L4668f0.  v6:= temp @kind object;
  #L4668f2.  call temp:= `hostnameVerifier`(v6) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L4668f8.  v6:= temp @kind object;
  #L4668fa.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L4668fe.  if v6 == v0 then goto L466904;
  #L466902.  return v2;
  #L466904.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L46690a.  v6:= temp @kind object;
  #L46690c.  call temp:= `supportsUrl`(v4, v6) @signature `Lokhttp3/internal/connection/RealConnection;.supportsUrl:(Lokhttp3/HttpUrl;)Z` @kind virtual;
  #L466912.  v6:= temp;
  #L466914.  if v6 != 0 then goto L46691a;
  #L466918.  return v2;
  #L46691a.  call temp:= `certificatePinner`(v5) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L466920.  v6:= temp @kind object;
  #L466922.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L466928.  v5:= temp @kind object;
  #L46692a.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L466930.  v5:= temp @kind object;
  #L466932.  call temp:= `handshake`(v4) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L466938.  v0:= temp @kind object;
  #L46693a.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L466940.  v0:= temp @kind object;
  #L466942.  call `check`(v6, v5, v0) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L466948.  return v1;
  #L46694a.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L46691a..L466948] goto L46694a;
}
procedure `boolean` `isHealthy`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `boolean` v5 ) @signature `Lokhttp3/internal/connection/RealConnection;.isHealthy:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46696c.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L466970.  call temp:= `isClosed`(v0) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L466976.  v0:= temp;
  #L466978.  v1:= 0I;
  #L46697a.  if v0 != 0 then goto L466a0a;
  #L46697e.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L466982.  call temp:= `isInputShutdown`(v0) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L466988.  v0:= temp;
  #L46698a.  if v0 != 0 then goto L466a0a;
  #L46698e.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L466992.  call temp:= `isOutputShutdown`(v0) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L466998.  v0:= temp;
  #L46699a.  if v0 == 0 then goto L4669a0;
  #L46699e.  goto L466a0a;
  #L4669a0.  v0:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L4669a4.  v2:= 1I;
  #L4669a6.  if v0 == 0 then goto L4669b6;
  #L4669aa.  call temp:= `isShutdown`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.isShutdown:()Z` @kind virtual;
  #L4669b0.  v5:= temp;
  #L4669b2.  v5:= v5 ^~ v2 @kind int;
  #L4669b4.  return v5;
  #L4669b6.  if v5 == 0 then goto L466a08;
  #L4669ba.  v5:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L4669be.  call temp:= `getSoTimeout`(v5) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L4669c4.  v5:= temp;
  #L4669c6.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L4669ca.  call `setSoTimeout`(v0, v2) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L4669d0.  v0:= v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L4669d4.  call temp:= `exhausted`(v0) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L4669da.  v0:= temp;
  #L4669dc.  if v0 == 0 then goto L4669ec;
  #L4669e0.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L4669e4.  call `setSoTimeout`(v0, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L4669ea.  return v1;
  #L4669ec.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L4669f0.  call `setSoTimeout`(v0, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L4669f6.  return v2;
  #L4669f8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4669fa.  v3:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L4669fe.  call `setSoTimeout`(v3, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L466a04.  throw v0;
  #L466a06.  return v1;
  #L466a08.  return v2;
  #L466a0a.  return v1;
  catch `java.net.SocketTimeoutException` @[L4669ba..L4669c6] goto L466a08;
  catch `java.io.IOException` @[L4669ba..L4669c6] goto L466a06;
  catch `java.lang.Throwable` @[L4669c6..L4669dc] goto L4669f8;
  catch `java.net.SocketTimeoutException` @[L4669e0..L466a06] goto L466a08;
  catch `java.io.IOException` @[L4669e0..L466a06] goto L466a06;
}
procedure `boolean` `isMultiplexed`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466a40.  v0:= v1.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L466a44.  if v0 == 0 then goto L466a4c;
  #L466a48.  v0:= 1I;
  #L466a4a.  goto L466a4e;
  #L466a4c.  v0:= 0I;
  #L466a4e.  return v0;
}
procedure `okhttp3.internal.http.HttpCodec` `newCodec`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.OkHttpClient` v5 @kind object, `okhttp3.Interceptor$Chain` v6 @kind object, `okhttp3.internal.connection.StreamAllocation` v7 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newCodec:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/http/HttpCodec;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L466ef4.  v0:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L466ef8.  if v0 == 0 then goto L466f08;
  #L466efc.  v1:= new `okhttp3.internal.http2.Http2Codec`;
  #L466f00.  call `<init>`(v1, v5, v6, v7, v0) @signature `Lokhttp3/internal/http2/Http2Codec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http2/Http2Connection;)V` @kind direct;
  #L466f06.  return v1 @kind object;
  #L466f08.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L466f0c.  call temp:= `readTimeoutMillis`(v6) @signature `Lokhttp3/Interceptor$Chain;.readTimeoutMillis:()I` @kind interface;
  #L466f12.  v1:= temp;
  #L466f14.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L466f1a.  v0:= v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L466f1e.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L466f24.  v0:= temp @kind object;
  #L466f26.  call temp:= `readTimeoutMillis`(v6) @signature `Lokhttp3/Interceptor$Chain;.readTimeoutMillis:()I` @kind interface;
  #L466f2c.  v1:= temp;
  #L466f2e.  v1:= (`long`) v1 @kind i2l;
  #L466f30.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L466f34.  call temp:= `timeout`(v0, v1, v3) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L466f3a.  v0:= v4.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L466f3e.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L466f44.  v0:= temp @kind object;
  #L466f46.  call temp:= `writeTimeoutMillis`(v6) @signature `Lokhttp3/Interceptor$Chain;.writeTimeoutMillis:()I` @kind interface;
  #L466f4c.  v6:= temp;
  #L466f4e.  v1:= (`long`) v6 @kind i2l;
  #L466f50.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L466f54.  call temp:= `timeout`(v0, v1, v6) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L466f5a.  v6:= new `okhttp3.internal.http1.Http1Codec`;
  #L466f5e.  v0:= v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L466f62.  v1:= v4.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L466f66.  call `<init>`(v6, v5, v7, v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L466f6c.  return v6 @kind object;
}
procedure `okhttp3.internal.ws.RealWebSocket$Streams` `newWebSocketStreams`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `okhttp3.internal.connection.StreamAllocation` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newWebSocketStreams:(Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/ws/RealWebSocket$Streams;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L466f80.  v6:= new `okhttp3.internal.connection.RealConnection$1`;
  #L466f84.  v3:= v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L466f88.  v4:= v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L466f8c.  v2:= 1I;
  #L466f8e.  v0:= v6 @kind object;
  #L466f90.  v1:= v7 @kind object;
  #L466f92.  v5:= v8 @kind object;
  #L466f94.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/connection/RealConnection$1;.<init>:(Lokhttp3/internal/connection/RealConnection;ZLokio/BufferedSource;Lokio/BufferedSink;Lokhttp3/internal/connection/StreamAllocation;)V` @kind direct;
  #L466f9a.  return v6 @kind object;
}
procedure `void` `onSettings`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.http2.Http2Connection` v2 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onSettings:(Lokhttp3/internal/http2/Http2Connection;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4677e0.  v0:= v1.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L4677e4.  @monitorenter v0
  #L4677e6.  call temp:= `maxConcurrentStreams`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.maxConcurrentStreams:()I` @kind virtual;
  #L4677ec.  v2:= temp;
  #L4677ee.  v1.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int` := v2;
  #L4677f2.  @monitorexit v0
  #L4677f4.  return @kind void;
  #L4677f6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4677f8.  @monitorexit v0
  #L4677fa.  throw v2;
  catch `java.lang.Throwable` @[L4677e6..L4677fa] goto L4677f6;
}
procedure `void` `onStream`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.http2.Http2Stream` v2 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onStream:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L467818.  v0:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L46781c.  call `close`(v2, v0) @signature `Lokhttp3/internal/http2/Http2Stream;.close:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L467822.  return @kind void;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466c34.  v0:= v1.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L466c38.  return v0 @kind object;
}
procedure `okhttp3.Route` `route`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466eb8.  v0:= v1.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466ebc.  return v0 @kind object;
}
procedure `java.net.Socket` `socket`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466c04.  v0:= v1.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L466c08.  return v0 @kind object;
}
procedure `boolean` `supportsUrl`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.HttpUrl` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.supportsUrl:(Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L466a60.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L466a66.  v0:= temp;
  #L466a68.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466a6c.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L466a72.  v1:= temp @kind object;
  #L466a74.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L466a7a.  v1:= temp @kind object;
  #L466a7c.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L466a82.  v1:= temp;
  #L466a84.  v2:= 0I;
  #L466a86.  if v0 == v1 then goto L466a8c;
  #L466a8a.  return v2;
  #L466a8c.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L466a92.  v0:= temp @kind object;
  #L466a94.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466a98.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L466a9e.  v1:= temp @kind object;
  #L466aa0.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L466aa6.  v1:= temp @kind object;
  #L466aa8.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L466aae.  v1:= temp @kind object;
  #L466ab0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L466ab6.  v0:= temp;
  #L466ab8.  v1:= 1I;
  #L466aba.  if v0 != 0 then goto L466afa;
  #L466abe.  v0:= v4.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L466ac2.  if v0 == 0 then goto L466af8;
  #L466ac6.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L466aca.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L466ad0.  v5:= temp @kind object;
  #L466ad2.  v3:= v4.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L466ad6.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L466adc.  v3:= temp @kind object;
  #L466ade.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L466ae4.  v3:= temp @kind object;
  #L466ae6.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L466aea.  call temp:= `verify`(v0, v5, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L466af0.  v5:= temp;
  #L466af2.  if v5 == 0 then goto L466af8;
  #L466af6.  goto L466afa;
  #L466af8.  v1:= 0I;
  #L466afa.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.connection.RealConnection` v2 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L466b0c.  v0:= new `java.lang.StringBuilder`;
  #L466b10.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L466b16.  v1:= "Connection{" @kind object;
  #L466b1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466b20.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466b24.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L466b2a.  v1:= temp @kind object;
  #L466b2c.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L466b32.  v1:= temp @kind object;
  #L466b34.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L466b3a.  v1:= temp @kind object;
  #L466b3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466b42.  v1:= ":" @kind object;
  #L466b46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466b4c.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466b50.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L466b56.  v1:= temp @kind object;
  #L466b58.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L466b5e.  v1:= temp @kind object;
  #L466b60.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L466b66.  v1:= temp;
  #L466b68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L466b6e.  v1:= ", proxy=" @kind object;
  #L466b72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466b78.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466b7c.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L466b82.  v1:= temp @kind object;
  #L466b84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466b8a.  v1:= " hostAddress=" @kind object;
  #L466b8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466b94.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L466b98.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L466b9e.  v1:= temp @kind object;
  #L466ba0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466ba6.  v1:= " cipherSuite=" @kind object;
  #L466baa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466bb0.  v1:= v2.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L466bb4.  if v1 == 0 then goto L466bc2;
  #L466bb8.  call temp:= `cipherSuite`(v1) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L466bbe.  v1:= temp @kind object;
  #L466bc0.  goto L466bc6;
  #L466bc2.  v1:= "none" @kind object;
  #L466bc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466bcc.  v1:= " protocol=" @kind object;
  #L466bd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466bd6.  v1:= v2.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L466bda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466be0.  v1:= 125I;
  #L466be4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L466bea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L466bf0.  v0:= temp @kind object;
  #L466bf2.  return v0 @kind object;
}
