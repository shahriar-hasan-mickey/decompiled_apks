record `okhttp3.internal.connection.RouteSelector` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.internal.connection.RouteSelector.address` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Call` `okhttp3.internal.connection.RouteSelector.call` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.RouteSelector.eventListener` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RouteSelector.nextProxyIndex` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.postponedRoutes` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.proxies` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteDatabase` `okhttp3.internal.connection.RouteSelector.routeDatabase` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector` v1 @kind this, `okhttp3.Address` v2 @kind object, `okhttp3.internal.connection.RouteDatabase` v3 @kind object, `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L467c94.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L467c9a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L467ca0.  v0:= temp @kind object;
  #L467ca2.  v1.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v0 @kind object;
  #L467ca6.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L467cac.  v0:= temp @kind object;
  #L467cae.  v1.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v0 @kind object;
  #L467cb2.  v0:= new `java.util.ArrayList`;
  #L467cb6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L467cbc.  v1.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` := v0 @kind object;
  #L467cc0.  v1.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` := v2 @kind object;
  #L467cc4.  v1.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` := v3 @kind object;
  #L467cc8.  v1.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` := v4 @kind object;
  #L467ccc.  v1.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` := v5 @kind object;
  #L467cd0.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467cd6.  v3:= temp @kind object;
  #L467cd8.  call temp:= `proxy`(v2) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L467cde.  v2:= temp @kind object;
  #L467ce0.  call `resetNextProxy`(v1, v3, v2) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @kind direct;
  #L467ce6.  return @kind void;
}
procedure `java.lang.String` `getHostString`(`java.net.InetSocketAddress` v1 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L467af0.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L467af6.  v0:= temp @kind object;
  #L467af8.  if v0 != 0 then goto L467b06;
  #L467afc.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L467b02.  v1:= temp @kind object;
  #L467b04.  return v1 @kind object;
  #L467b06.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L467b0c.  v1:= temp @kind object;
  #L467b0e.  return v1 @kind object;
}
procedure `boolean` `hasNextProxy`(`okhttp3.internal.connection.RouteSelector` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L467ac4.  v0:= v2.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L467ac8.  v1:= v2.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L467acc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L467ad2.  v1:= temp;
  #L467ad4.  if v0 >= v1 then goto L467adc;
  #L467ad8.  v0:= 1I;
  #L467ada.  goto L467ade;
  #L467adc.  v0:= 0I;
  #L467ade.  return v0;
}
procedure `java.net.Proxy` `nextProxy`(`okhttp3.internal.connection.RouteSelector` v3 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L467b20.  call temp:= `hasNextProxy`(v3) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L467b26.  v0:= temp;
  #L467b28.  if v0 == 0 then goto L467b50;
  #L467b2c.  v0:= v3.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L467b30.  v1:= v3.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L467b34.  v2:= v1 + 1;
  #L467b38.  v3.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v2;
  #L467b3c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L467b42.  v0:= temp @kind object;
  #L467b44.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L467b48.  call `resetNextInetSocketAddress`(v3, v0) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @kind direct;
  #L467b4e.  return v0 @kind object;
  #L467b50.  v0:= new `java.net.SocketException`;
  #L467b54.  v1:= new `java.lang.StringBuilder`;
  #L467b58.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L467b5e.  v2:= "No route to " @kind object;
  #L467b62.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467b68.  v2:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467b6c.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467b72.  v2:= temp @kind object;
  #L467b74.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L467b7a.  v2:= temp @kind object;
  #L467b7c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467b82.  v2:= "; exhausted proxy configurations: " @kind object;
  #L467b86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467b8c.  v2:= v3.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L467b90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467b96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L467b9c.  v1:= temp @kind object;
  #L467b9e.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L467ba4.  throw v0;
}
procedure `void` `resetNextInetSocketAddress`(`okhttp3.internal.connection.RouteSelector` v6 @kind this, `java.net.Proxy` v7 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L467d74.  v0:= new `java.util.ArrayList`;
  #L467d78.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L467d7e.  v6.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v0 @kind object;
  #L467d82.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L467d88.  v0:= temp @kind object;
  #L467d8a.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L467d8e.  if v0 == v1 then goto L467e00;
  #L467d92.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L467d98.  v0:= temp @kind object;
  #L467d9a.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L467d9e.  if v0 != v1 then goto L467da4;
  #L467da2.  goto L467e00;
  #L467da4.  call temp:= `address`(v7) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L467daa.  v0:= temp @kind object;
  #L467dac.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L467db0.  if v1 == 0 then goto L467dca;
  #L467db4.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L467db8.  call temp:= `getHostString`(v0) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L467dbe.  v1:= temp @kind object;
  #L467dc0.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L467dc6.  v0:= temp;
  #L467dc8.  goto L467e28;
  #L467dca.  v7:= new `java.lang.IllegalArgumentException`;
  #L467dce.  v1:= new `java.lang.StringBuilder`;
  #L467dd2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L467dd8.  v2:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L467ddc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467de2.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L467de8.  v0:= temp @kind object;
  #L467dea.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467df0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L467df6.  v0:= temp @kind object;
  #L467df8.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L467dfe.  throw v7;
  #L467e00.  v0:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467e04.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467e0a.  v0:= temp @kind object;
  #L467e0c.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L467e12.  v1:= temp @kind object;
  #L467e14.  v0:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467e18.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467e1e.  v0:= temp @kind object;
  #L467e20.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L467e26.  v0:= temp;
  #L467e28.  v2:= 1I;
  #L467e2a.  if v0 < v2 then goto L467f0e;
  #L467e2e.  v2:= 65535I;
  #L467e34.  if v0 > v2 then goto L467f0e;
  #L467e38.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L467e3e.  v7:= temp @kind object;
  #L467e40.  v2:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L467e44.  if v7 != v2 then goto L467e5c;
  #L467e48.  v7:= v6.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L467e4c.  call temp:= `createUnresolved`(v1, v0) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L467e52.  v0:= temp @kind object;
  #L467e54.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L467e5a.  goto L467ecc;
  #L467e5c.  v7:= v6.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L467e60.  v2:= v6.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L467e64.  call `dnsStart`(v7, v2, v1) @signature `Lokhttp3/EventListener;.dnsStart:(Lokhttp3/Call;Ljava/lang/String;)V` @kind virtual;
  #L467e6a.  v7:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467e6e.  call temp:= `dns`(v7) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L467e74.  v7:= temp @kind object;
  #L467e76.  call temp:= `lookup`(v7, v1) @signature `Lokhttp3/Dns;.lookup:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L467e7c.  v7:= temp @kind object;
  #L467e7e.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L467e84.  v2:= temp;
  #L467e86.  if v2 != 0 then goto L467ece;
  #L467e8a.  v2:= v6.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L467e8e.  v3:= v6.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L467e92.  call `dnsEnd`(v2, v3, v1, v7) @signature `Lokhttp3/EventListener;.dnsEnd:(Lokhttp3/Call;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L467e98.  v1:= 0I;
  #L467e9a.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L467ea0.  v2:= temp;
  #L467ea2.  if v1 >= v2 then goto L467ecc;
  #L467ea6.  call temp:= `get`(v7, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L467eac.  v3:= temp @kind object;
  #L467eae.  v3:= (`java.net.InetAddress`) v3 @kind object;
  #L467eb2.  v4:= v6.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L467eb6.  v5:= new `java.net.InetSocketAddress`;
  #L467eba.  call `<init>`(v5, v3, v0) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L467ec0.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L467ec6.  v1:= v1 + 1;
  #L467eca.  goto L467ea2;
  #L467ecc.  return @kind void;
  #L467ece.  v7:= new `java.net.UnknownHostException`;
  #L467ed2.  v0:= new `java.lang.StringBuilder`;
  #L467ed6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L467edc.  v2:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467ee0.  call temp:= `dns`(v2) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L467ee6.  v2:= temp @kind object;
  #L467ee8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467eee.  v2:= " returned no addresses for " @kind object;
  #L467ef2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467ef8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467efe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L467f04.  v0:= temp @kind object;
  #L467f06.  call `<init>`(v7, v0) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L467f0c.  throw v7;
  #L467f0e.  v7:= new `java.net.SocketException`;
  #L467f12.  v2:= new `java.lang.StringBuilder`;
  #L467f16.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L467f1c.  v3:= "No route to " @kind object;
  #L467f20.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467f26.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467f2c.  v1:= ":" @kind object;
  #L467f30.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467f36.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L467f3c.  v0:= "; port is out of range" @kind object;
  #L467f40.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L467f46.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L467f4c.  v0:= temp @kind object;
  #L467f4e.  call `<init>`(v7, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L467f54.  goto L467f58;
  #L467f56.  throw v7;
  #L467f58.  goto L467f56;
}
procedure `void` `resetNextProxy`(`okhttp3.internal.connection.RouteSelector` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object, `java.net.Proxy` v3 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L467f6c.  v0:= 0I;
  #L467f6e.  if v3 == 0 then goto L467f80;
  #L467f72.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L467f78.  v2:= temp @kind object;
  #L467f7a.  v1.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v2 @kind object;
  #L467f7e.  goto L467fd0;
  #L467f80.  v3:= v1.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467f84.  call temp:= `proxySelector`(v3) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L467f8a.  v3:= temp @kind object;
  #L467f8c.  call temp:= `uri`(v2) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L467f92.  v2:= temp @kind object;
  #L467f94.  call temp:= `select`(v3, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L467f9a.  v2:= temp @kind object;
  #L467f9c.  if v2 == 0 then goto L467fb6;
  #L467fa0.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L467fa6.  v3:= temp;
  #L467fa8.  if v3 != 0 then goto L467fb6;
  #L467fac.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L467fb2.  v2:= temp @kind object;
  #L467fb4.  goto L467fcc;
  #L467fb6.  v2:= 1I;
  #L467fb8.  v2:= new `java.net.Proxy`[v2];
  #L467fbc.  v3:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L467fc0.  v2[v0]:= v3 @kind object;
  #L467fc4.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L467fca.  v2:= temp @kind object;
  #L467fcc.  v1.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v2 @kind object;
  #L467fd0.  v1.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v0;
  #L467fd4.  return @kind void;
}
procedure `void` `connectFailed`(`okhttp3.internal.connection.RouteSelector` v3 @kind this, `okhttp3.Route` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.connectFailed:(Lokhttp3/Route;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L467cf8.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L467cfe.  v0:= temp @kind object;
  #L467d00.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L467d06.  v0:= temp @kind object;
  #L467d08.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L467d0c.  if v0 == v1 then goto L467d56;
  #L467d10.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467d14.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L467d1a.  v0:= temp @kind object;
  #L467d1c.  if v0 == 0 then goto L467d56;
  #L467d20.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467d24.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L467d2a.  v0:= temp @kind object;
  #L467d2c.  v1:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467d30.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L467d36.  v1:= temp @kind object;
  #L467d38.  call temp:= `uri`(v1) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L467d3e.  v1:= temp @kind object;
  #L467d40.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L467d46.  v2:= temp @kind object;
  #L467d48.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L467d4e.  v2:= temp @kind object;
  #L467d50.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L467d56.  v5:= v3.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L467d5a.  call `failed`(v5, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @kind virtual;
  #L467d60.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L467a8c.  call temp:= `hasNextProxy`(v1) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L467a92.  v0:= temp;
  #L467a94.  if v0 != 0 then goto L467aae;
  #L467a98.  v0:= v1.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L467a9c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L467aa2.  v0:= temp;
  #L467aa4.  if v0 != 0 then goto L467aaa;
  #L467aa8.  goto L467aae;
  #L467aaa.  v0:= 0I;
  #L467aac.  goto L467ab0;
  #L467aae.  v0:= 1I;
  #L467ab0.  return v0;
}
procedure `okhttp3.internal.connection.RouteSelector$Selection` `next`(`okhttp3.internal.connection.RouteSelector` v7 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L467bb8.  call temp:= `hasNext`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L467bbe.  v0:= temp;
  #L467bc0.  if v0 == 0 then goto L467c72;
  #L467bc4.  v0:= new `java.util.ArrayList`;
  #L467bc8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L467bce.  call temp:= `hasNextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L467bd4.  v1:= temp;
  #L467bd6.  if v1 == 0 then goto L467c46;
  #L467bda.  call temp:= `nextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @kind direct;
  #L467be0.  v1:= temp @kind object;
  #L467be2.  v2:= 0I;
  #L467be4.  v3:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L467be8.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L467bee.  v3:= temp;
  #L467bf0.  if v2 >= v3 then goto L467c3a;
  #L467bf4.  v4:= new `okhttp3.Route`;
  #L467bf8.  v5:= v7.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L467bfc.  v6:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L467c00.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L467c06.  v6:= temp @kind object;
  #L467c08.  v6:= (`java.net.InetSocketAddress`) v6 @kind object;
  #L467c0c.  call `<init>`(v4, v5, v1, v6) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L467c12.  v5:= v7.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L467c16.  call temp:= `shouldPostpone`(v5, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @kind virtual;
  #L467c1c.  v5:= temp;
  #L467c1e.  if v5 == 0 then goto L467c2e;
  #L467c22.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L467c26.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L467c2c.  goto L467c34;
  #L467c2e.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L467c34.  v2:= v2 + 1;
  #L467c38.  goto L467bf0;
  #L467c3a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L467c40.  v1:= temp;
  #L467c42.  if v1 != 0 then goto L467bce;
  #L467c46.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L467c4c.  v1:= temp;
  #L467c4e.  if v1 == 0 then goto L467c66;
  #L467c52.  v1:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L467c56.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L467c5c.  v1:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L467c60.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L467c66.  v1:= new `okhttp3.internal.connection.RouteSelector$Selection`;
  #L467c6a.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @kind direct;
  #L467c70.  return v1 @kind object;
  #L467c72.  v0:= new `java.util.NoSuchElementException`;
  #L467c76.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L467c7c.  goto L467c80;
  #L467c7e.  throw v0;
  #L467c80.  goto L467c7e;
}
