record `okhttp3.internal.http.BridgeInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.CookieJar` `okhttp3.internal.http.BridgeInterceptor.cookieJar` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.BridgeInterceptor` v0 @kind this, `okhttp3.CookieJar` v1 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.<init>:(Lokhttp3/CookieJar;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L468cb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L468cbe.  v0.`okhttp3.internal.http.BridgeInterceptor.cookieJar` @type ^`okhttp3.CookieJar` := v1 @kind object;
  #L468cc2.  return @kind void;
}
procedure `java.lang.String` `cookieHeader`(`okhttp3.internal.http.BridgeInterceptor` v5 @kind this, `java.util.List` v6 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.cookieHeader:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L468a20.  v0:= new `java.lang.StringBuilder`;
  #L468a24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L468a2a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L468a30.  v1:= temp;
  #L468a32.  v2:= 0I;
  #L468a34.  if v2 >= v1 then goto L468a7e;
  #L468a38.  if v2 <= 0 then goto L468a46;
  #L468a3c.  v3:= "; " @kind object;
  #L468a40.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L468a46.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L468a4c.  v3:= temp @kind object;
  #L468a4e.  v3:= (`okhttp3.Cookie`) v3 @kind object;
  #L468a52.  call temp:= `name`(v3) @signature `Lokhttp3/Cookie;.name:()Ljava/lang/String;` @kind virtual;
  #L468a58.  v4:= temp @kind object;
  #L468a5a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L468a60.  v4:= 61I;
  #L468a64.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L468a6a.  call temp:= `value`(v3) @signature `Lokhttp3/Cookie;.value:()Ljava/lang/String;` @kind virtual;
  #L468a70.  v3:= temp @kind object;
  #L468a72.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L468a78.  v2:= v2 + 1;
  #L468a7c.  goto L468a34;
  #L468a7e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L468a84.  v6:= temp @kind object;
  #L468a86.  return v6 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.BridgeInterceptor` v10 @kind this, `okhttp3.Interceptor$Chain` v11 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L468a98.  call temp:= `request`(v11) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L468a9e.  v0:= temp @kind object;
  #L468aa0.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L468aa6.  v1:= temp @kind object;
  #L468aa8.  call temp:= `body`(v0) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L468aae.  v2:= temp @kind object;
  #L468ab0.  v3:= "Content-Type" @kind object;
  #L468ab4.  v4:= -1L;
  #L468ab8.  v6:= "Content-Length" @kind object;
  #L468abc.  if v2 == 0 then goto L468b14;
  #L468ac0.  call temp:= `contentType`(v2) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L468ac6.  v7:= temp @kind object;
  #L468ac8.  if v7 == 0 then goto L468ada;
  #L468acc.  call temp:= `toString`(v7) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L468ad2.  v7:= temp @kind object;
  #L468ad4.  call temp:= `header`(v1, v3, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468ada.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L468ae0.  v7:= temp @kind wide;
  #L468ae2.  v2:= "Transfer-Encoding" @kind object;
  #L468ae6.  v9:= lcmp(v7, v4);
  #L468aea.  if v9 == 0 then goto L468b04;
  #L468aee.  call temp:= `toString`(v7) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L468af4.  v7:= temp @kind object;
  #L468af6.  call temp:= `header`(v1, v6, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468afc.  call temp:= `removeHeader`(v1, v2) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468b02.  goto L468b14;
  #L468b04.  v7:= "chunked" @kind object;
  #L468b08.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468b0e.  call temp:= `removeHeader`(v1, v6) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468b14.  v2:= "Host" @kind object;
  #L468b18.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468b1e.  v7:= temp @kind object;
  #L468b20.  v8:= 0I;
  #L468b22.  if v7 != 0 then goto L468b3c;
  #L468b26.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L468b2c.  v7:= temp @kind object;
  #L468b2e.  call temp:= `hostHeader`(v7, v8) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L468b34.  v7:= temp @kind object;
  #L468b36.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468b3c.  v2:= "Connection" @kind object;
  #L468b40.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468b46.  v7:= temp @kind object;
  #L468b48.  if v7 != 0 then goto L468b56;
  #L468b4c.  v7:= "Keep-Alive" @kind object;
  #L468b50.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468b56.  v2:= "Accept-Encoding" @kind object;
  #L468b5a.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468b60.  v7:= temp @kind object;
  #L468b62.  v9:= "gzip" @kind object;
  #L468b66.  if v7 != 0 then goto L468b82;
  #L468b6a.  v7:= "Range" @kind object;
  #L468b6e.  call temp:= `header`(v0, v7) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468b74.  v7:= temp @kind object;
  #L468b76.  if v7 != 0 then goto L468b82;
  #L468b7a.  v8:= 1I;
  #L468b7c.  call temp:= `header`(v1, v2, v9) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468b82.  v2:= v10.`okhttp3.internal.http.BridgeInterceptor.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L468b86.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L468b8c.  v7:= temp @kind object;
  #L468b8e.  call temp:= `loadForRequest`(v2, v7) @signature `Lokhttp3/CookieJar;.loadForRequest:(Lokhttp3/HttpUrl;)Ljava/util/List;` @kind interface;
  #L468b94.  v2:= temp @kind object;
  #L468b96.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L468b9c.  v7:= temp;
  #L468b9e.  if v7 != 0 then goto L468bb4;
  #L468ba2.  call temp:= `cookieHeader`(v10, v2) @signature `Lokhttp3/internal/http/BridgeInterceptor;.cookieHeader:(Ljava/util/List;)Ljava/lang/String;` @kind direct;
  #L468ba8.  v2:= temp @kind object;
  #L468baa.  v7:= "Cookie" @kind object;
  #L468bae.  call temp:= `header`(v1, v7, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468bb4.  v2:= "User-Agent" @kind object;
  #L468bb8.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468bbe.  v7:= temp @kind object;
  #L468bc0.  if v7 != 0 then goto L468bd2;
  #L468bc4.  call temp:= `userAgent`() @signature `Lokhttp3/internal/Version;.userAgent:()Ljava/lang/String;` @kind static;
  #L468bca.  v7:= temp @kind object;
  #L468bcc.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L468bd2.  call temp:= `build`(v1) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L468bd8.  v1:= temp @kind object;
  #L468bda.  call temp:= `proceed`(v11, v1) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L468be0.  v11:= temp @kind object;
  #L468be2.  v1:= v10.`okhttp3.internal.http.BridgeInterceptor.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L468be6.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L468bec.  v2:= temp @kind object;
  #L468bee.  call temp:= `headers`(v11) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L468bf4.  v7:= temp @kind object;
  #L468bf6.  call `receiveHeaders`(v1, v2, v7) @signature `Lokhttp3/internal/http/HttpHeaders;.receiveHeaders:(Lokhttp3/CookieJar;Lokhttp3/HttpUrl;Lokhttp3/Headers;)V` @kind static;
  #L468bfc.  call temp:= `newBuilder`(v11) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L468c02.  v1:= temp @kind object;
  #L468c04.  call temp:= `request`(v1, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L468c0a.  v0:= temp @kind object;
  #L468c0c.  if v8 == 0 then goto L468c9c;
  #L468c10.  v1:= "Content-Encoding" @kind object;
  #L468c14.  call temp:= `header`(v11, v1) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468c1a.  v2:= temp @kind object;
  #L468c1c.  call temp:= `equalsIgnoreCase`(v9, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L468c22.  v2:= temp;
  #L468c24.  if v2 == 0 then goto L468c9c;
  #L468c28.  call temp:= `hasBody`(v11) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @kind static;
  #L468c2e.  v2:= temp;
  #L468c30.  if v2 == 0 then goto L468c9c;
  #L468c34.  v2:= new `okio.GzipSource`;
  #L468c38.  call temp:= `body`(v11) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L468c3e.  v7:= temp @kind object;
  #L468c40.  call temp:= `source`(v7) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L468c46.  v7:= temp @kind object;
  #L468c48.  call `<init>`(v2, v7) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L468c4e.  call temp:= `headers`(v11) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L468c54.  v7:= temp @kind object;
  #L468c56.  call temp:= `newBuilder`(v7) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L468c5c.  v7:= temp @kind object;
  #L468c5e.  call temp:= `removeAll`(v7, v1) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L468c64.  v1:= temp @kind object;
  #L468c66.  call temp:= `removeAll`(v1, v6) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L468c6c.  v1:= temp @kind object;
  #L468c6e.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L468c74.  v1:= temp @kind object;
  #L468c76.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L468c7c.  call temp:= `header`(v11, v3) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468c82.  v11:= temp @kind object;
  #L468c84.  v1:= new `okhttp3.internal.http.RealResponseBody`;
  #L468c88.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L468c8e.  v2:= temp @kind object;
  #L468c90.  call `<init>`(v1, v11, v4, v2) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L468c96.  call temp:= `body`(v0, v1) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L468c9c.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L468ca2.  v11:= temp @kind object;
  #L468ca4.  return v11 @kind object;
}
