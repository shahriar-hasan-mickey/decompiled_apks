record `okhttp3.internal.http.CallServerInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `boolean` `okhttp3.internal.http.CallServerInterceptor.forWebSocket` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.CallServerInterceptor` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/http/CallServerInterceptor;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L468ffc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L469002.  v0.`okhttp3.internal.http.CallServerInterceptor.forWebSocket` @type ^`boolean` := v1 @kind boolean;
  #L469006.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.CallServerInterceptor` v11 @kind this, `okhttp3.Interceptor$Chain` v12 @kind object) @signature `Lokhttp3/internal/http/CallServerInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L468d10.  v12:= (`okhttp3.internal.http.RealInterceptorChain`) v12 @kind object;
  #L468d14.  call temp:= `httpStream`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.httpStream:()Lokhttp3/internal/http/HttpCodec;` @kind virtual;
  #L468d1a.  v0:= temp @kind object;
  #L468d1c.  call temp:= `streamAllocation`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.streamAllocation:()Lokhttp3/internal/connection/StreamAllocation;` @kind virtual;
  #L468d22.  v1:= temp @kind object;
  #L468d24.  call temp:= `connection`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.connection:()Lokhttp3/Connection;` @kind virtual;
  #L468d2a.  v2:= temp @kind object;
  #L468d2c.  v2:= (`okhttp3.internal.connection.RealConnection`) v2 @kind object;
  #L468d30.  call temp:= `request`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.request:()Lokhttp3/Request;` @kind virtual;
  #L468d36.  v3:= temp @kind object;
  #L468d38.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L468d3e.  v4:= temp @kind wide;
  #L468d40.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L468d46.  v6:= temp @kind object;
  #L468d48.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L468d4e.  v7:= temp @kind object;
  #L468d50.  call `requestHeadersStart`(v6, v7) @signature `Lokhttp3/EventListener;.requestHeadersStart:(Lokhttp3/Call;)V` @kind virtual;
  #L468d56.  call `writeRequestHeaders`(v0, v3) @signature `Lokhttp3/internal/http/HttpCodec;.writeRequestHeaders:(Lokhttp3/Request;)V` @kind interface;
  #L468d5c.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L468d62.  v6:= temp @kind object;
  #L468d64.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L468d6a.  v7:= temp @kind object;
  #L468d6c.  call `requestHeadersEnd`(v6, v7, v3) @signature `Lokhttp3/EventListener;.requestHeadersEnd:(Lokhttp3/Call;Lokhttp3/Request;)V` @kind virtual;
  #L468d72.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L468d78.  v6:= temp @kind object;
  #L468d7a.  call temp:= `permitsRequestBody`(v6) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L468d80.  v6:= temp;
  #L468d82.  v7:= 0I;
  #L468d84.  if v6 == 0 then goto L468e5c;
  #L468d88.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L468d8e.  v6:= temp @kind object;
  #L468d90.  if v6 == 0 then goto L468e5c;
  #L468d94.  v6:= "Expect" @kind object;
  #L468d98.  call temp:= `header`(v3, v6) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468d9e.  v6:= temp @kind object;
  #L468da0.  v8:= "100-continue" @kind object;
  #L468da4.  call temp:= `equalsIgnoreCase`(v8, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L468daa.  v6:= temp;
  #L468dac.  if v6 == 0 then goto L468dd6;
  #L468db0.  call `flushRequest`(v0) @signature `Lokhttp3/internal/http/HttpCodec;.flushRequest:()V` @kind interface;
  #L468db6.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L468dbc.  v6:= temp @kind object;
  #L468dbe.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L468dc4.  v7:= temp @kind object;
  #L468dc6.  call `responseHeadersStart`(v6, v7) @signature `Lokhttp3/EventListener;.responseHeadersStart:(Lokhttp3/Call;)V` @kind virtual;
  #L468dcc.  v6:= 1I;
  #L468dce.  call temp:= `readResponseHeaders`(v0, v6) @signature `Lokhttp3/internal/http/HttpCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind interface;
  #L468dd4.  v7:= temp @kind object;
  #L468dd6.  if v7 != 0 then goto L468e4a;
  #L468dda.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L468de0.  v2:= temp @kind object;
  #L468de2.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L468de8.  v6:= temp @kind object;
  #L468dea.  call `requestBodyStart`(v2, v6) @signature `Lokhttp3/EventListener;.requestBodyStart:(Lokhttp3/Call;)V` @kind virtual;
  #L468df0.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L468df6.  v2:= temp @kind object;
  #L468df8.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L468dfe.  v8:= temp @kind wide;
  #L468e00.  v2:= new `okhttp3.internal.http.CallServerInterceptor$CountingSink`;
  #L468e04.  call temp:= `createRequestBody`(v0, v3, v8) @signature `Lokhttp3/internal/http/HttpCodec;.createRequestBody:(Lokhttp3/Request;J)Lokio/Sink;` @kind interface;
  #L468e0a.  v6:= temp @kind object;
  #L468e0c.  call `<init>`(v2, v6) @signature `Lokhttp3/internal/http/CallServerInterceptor$CountingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L468e12.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L468e18.  v6:= temp @kind object;
  #L468e1a.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L468e20.  v8:= temp @kind object;
  #L468e22.  call `writeTo`(v8, v6) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L468e28.  call `close`(v6) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L468e2e.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L468e34.  v6:= temp @kind object;
  #L468e36.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L468e3c.  v8:= temp @kind object;
  #L468e3e.  v9:= v2.`okhttp3.internal.http.CallServerInterceptor$CountingSink.successfulCount` @type ^`long` @kind wide;
  #L468e42.  call `requestBodyEnd`(v6, v8, v9) @signature `Lokhttp3/EventListener;.requestBodyEnd:(Lokhttp3/Call;J)V` @kind virtual;
  #L468e48.  goto L468e5c;
  #L468e4a.  call temp:= `isMultiplexed`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @kind virtual;
  #L468e50.  v2:= temp;
  #L468e52.  if v2 != 0 then goto L468e5c;
  #L468e56.  call `noNewStreams`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.noNewStreams:()V` @kind virtual;
  #L468e5c.  call `finishRequest`(v0) @signature `Lokhttp3/internal/http/HttpCodec;.finishRequest:()V` @kind interface;
  #L468e62.  if v7 != 0 then goto L468e86;
  #L468e66.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L468e6c.  v2:= temp @kind object;
  #L468e6e.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L468e74.  v6:= temp @kind object;
  #L468e76.  call `responseHeadersStart`(v2, v6) @signature `Lokhttp3/EventListener;.responseHeadersStart:(Lokhttp3/Call;)V` @kind virtual;
  #L468e7c.  v2:= 0I;
  #L468e7e.  call temp:= `readResponseHeaders`(v0, v2) @signature `Lokhttp3/internal/http/HttpCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind interface;
  #L468e84.  v7:= temp @kind object;
  #L468e86.  call temp:= `request`(v7, v3) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L468e8c.  v2:= temp @kind object;
  #L468e8e.  call temp:= `connection`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L468e94.  v3:= temp @kind object;
  #L468e96.  call temp:= `handshake`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L468e9c.  v3:= temp @kind object;
  #L468e9e.  call temp:= `handshake`(v2, v3) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L468ea4.  v2:= temp @kind object;
  #L468ea6.  call temp:= `sentRequestAtMillis`(v2, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L468eac.  v2:= temp @kind object;
  #L468eae.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L468eb4.  v3:= temp @kind wide;
  #L468eb6.  call temp:= `receivedResponseAtMillis`(v2, v3) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L468ebc.  v2:= temp @kind object;
  #L468ebe.  call temp:= `build`(v2) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L468ec4.  v2:= temp @kind object;
  #L468ec6.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L468ecc.  v3:= temp @kind object;
  #L468ece.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L468ed4.  v12:= temp @kind object;
  #L468ed6.  call `responseHeadersEnd`(v3, v12, v2) @signature `Lokhttp3/EventListener;.responseHeadersEnd:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind virtual;
  #L468edc.  call temp:= `code`(v2) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L468ee2.  v12:= temp;
  #L468ee4.  v3:= v11.`okhttp3.internal.http.CallServerInterceptor.forWebSocket` @type ^`boolean` @kind boolean;
  #L468ee8.  if v3 == 0 then goto L468f12;
  #L468eec.  v3:= 101I;
  #L468ef0.  if v12 != v3 then goto L468f12;
  #L468ef4.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L468efa.  v0:= temp @kind object;
  #L468efc.  v2:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L468f00.  call temp:= `body`(v0, v2) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L468f06.  v0:= temp @kind object;
  #L468f08.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L468f0e.  v0:= temp @kind object;
  #L468f10.  goto L468f32;
  #L468f12.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L468f18.  v3:= temp @kind object;
  #L468f1a.  call temp:= `openResponseBody`(v0, v2) @signature `Lokhttp3/internal/http/HttpCodec;.openResponseBody:(Lokhttp3/Response;)Lokhttp3/ResponseBody;` @kind interface;
  #L468f20.  v0:= temp @kind object;
  #L468f22.  call temp:= `body`(v3, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L468f28.  v0:= temp @kind object;
  #L468f2a.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L468f30.  v0:= temp @kind object;
  #L468f32.  call temp:= `request`(v0) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L468f38.  v2:= temp @kind object;
  #L468f3a.  v3:= "Connection" @kind object;
  #L468f3e.  call temp:= `header`(v2, v3) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468f44.  v2:= temp @kind object;
  #L468f46.  v4:= "close" @kind object;
  #L468f4a.  call temp:= `equalsIgnoreCase`(v4, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L468f50.  v2:= temp;
  #L468f52.  if v2 != 0 then goto L468f6a;
  #L468f56.  call temp:= `header`(v0, v3) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L468f5c.  v2:= temp @kind object;
  #L468f5e.  call temp:= `equalsIgnoreCase`(v4, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L468f64.  v2:= temp;
  #L468f66.  if v2 == 0 then goto L468f70;
  #L468f6a.  call `noNewStreams`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.noNewStreams:()V` @kind virtual;
  #L468f70.  v1:= 204I;
  #L468f74.  if v12 == v1 then goto L468f80;
  #L468f78.  v1:= 205I;
  #L468f7c.  if v12 != v1 then goto L468f9c;
  #L468f80.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L468f86.  v1:= temp @kind object;
  #L468f88.  call temp:= `contentLength`(v1) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L468f8e.  v1:= temp @kind wide;
  #L468f90.  v3:= 0L;
  #L468f94.  v5:= lcmp(v1, v3);
  #L468f98.  if v5 > 0 then goto L468f9e;
  #L468f9c.  return v0 @kind object;
  #L468f9e.  v1:= new `java.net.ProtocolException`;
  #L468fa2.  v2:= new `java.lang.StringBuilder`;
  #L468fa6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L468fac.  v3:= "HTTP " @kind object;
  #L468fb0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L468fb6.  call temp:= `append`(v2, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L468fbc.  v12:= " had non-zero Content-Length: " @kind object;
  #L468fc0.  call temp:= `append`(v2, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L468fc6.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L468fcc.  v12:= temp @kind object;
  #L468fce.  call temp:= `contentLength`(v12) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L468fd4.  v3:= temp @kind wide;
  #L468fd6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L468fdc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L468fe2.  v12:= temp @kind object;
  #L468fe4.  call `<init>`(v1, v12) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L468fea.  throw v1;
}
