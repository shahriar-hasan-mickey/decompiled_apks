record `okhttp3.internal.http.StatusLine` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http.StatusLine.code` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `okhttp3.internal.http.StatusLine.message` @AccessFlag PUBLIC_FINAL;
  `okhttp3.Protocol` `okhttp3.internal.http.StatusLine.protocol` @AccessFlag PUBLIC_FINAL;
}
global `int` `@@okhttp3.internal.http.StatusLine.HTTP_CONTINUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http.StatusLine.HTTP_PERM_REDIRECT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http.StatusLine.HTTP_TEMP_REDIRECT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.http.StatusLine` v0 @kind this, `okhttp3.Protocol` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46aa48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46aa4e.  v0.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L46aa52.  v0.`okhttp3.internal.http.StatusLine.code` @type ^`int` := v2;
  #L46aa56.  v0.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` := v3 @kind object;
  #L46aa5a.  return @kind void;
}
procedure `okhttp3.internal.http.StatusLine` `get`(`okhttp3.Response` v3 @kind object) @signature `Lokhttp3/internal/http/StatusLine;.get:(Lokhttp3/Response;)Lokhttp3/internal/http/StatusLine;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L46a830.  v0:= new `okhttp3.internal.http.StatusLine`;
  #L46a834.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L46a83a.  v1:= temp @kind object;
  #L46a83c.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L46a842.  v2:= temp;
  #L46a844.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L46a84a.  v3:= temp @kind object;
  #L46a84c.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L46a852.  return v0 @kind object;
}
procedure `okhttp3.internal.http.StatusLine` `parse`(`java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a864.  v0:= "HTTP/1." @kind object;
  #L46a868.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L46a86e.  v0:= temp;
  #L46a870.  v1:= 32I;
  #L46a874.  v2:= 4I;
  #L46a876.  v3:= 9I;
  #L46a87a.  v4:= "Unexpected status line: " @kind object;
  #L46a87e.  if v0 == 0 then goto L46a916;
  #L46a882.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L46a888.  v0:= temp;
  #L46a88a.  if v0 < v3 then goto L46a8ec;
  #L46a88e.  v0:= 8I;
  #L46a892.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L46a898.  v0:= temp;
  #L46a89a.  if v0 != v1 then goto L46a8ec;
  #L46a89e.  v0:= 7I;
  #L46a8a0.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L46a8a6.  v0:= temp;
  #L46a8a8.  v0:= v0 + -48;
  #L46a8ac.  if v0 != 0 then goto L46a8b6;
  #L46a8b0.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L46a8b4.  goto L46a92c;
  #L46a8b6.  v5:= 1I;
  #L46a8b8.  if v0 != v5 then goto L46a8c2;
  #L46a8bc.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L46a8c0.  goto L46a92c;
  #L46a8c2.  v0:= new `java.net.ProtocolException`;
  #L46a8c6.  v1:= new `java.lang.StringBuilder`;
  #L46a8ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46a8d0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a8d6.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a8dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46a8e2.  v8:= temp @kind object;
  #L46a8e4.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46a8ea.  throw v0;
  #L46a8ec.  v0:= new `java.net.ProtocolException`;
  #L46a8f0.  v1:= new `java.lang.StringBuilder`;
  #L46a8f4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46a8fa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a900.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a906.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46a90c.  v8:= temp @kind object;
  #L46a90e.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46a914.  throw v0;
  #L46a916.  v0:= "ICY " @kind object;
  #L46a91a.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L46a920.  v0:= temp;
  #L46a922.  if v0 == 0 then goto L46a9fe;
  #L46a926.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L46a92a.  v3:= 4I;
  #L46a92c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L46a932.  v5:= temp;
  #L46a934.  v6:= v3 + 3;
  #L46a938.  if v5 < v6 then goto L46a9d4;
  #L46a93c.  call temp:= `substring`(v8, v3, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L46a942.  v5:= temp @kind object;
  #L46a944.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L46a94a.  v5:= temp;
  #L46a94c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L46a952.  v7:= temp;
  #L46a954.  if v7 <= v6 then goto L46a99a;
  #L46a958.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L46a95e.  v6:= temp;
  #L46a960.  if v6 != v1 then goto L46a970;
  #L46a964.  v3:= v3 + v2 @kind int;
  #L46a966.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L46a96c.  v8:= temp @kind object;
  #L46a96e.  goto L46a99e;
  #L46a970.  v0:= new `java.net.ProtocolException`;
  #L46a974.  v1:= new `java.lang.StringBuilder`;
  #L46a978.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46a97e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a984.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a98a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46a990.  v8:= temp @kind object;
  #L46a992.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46a998.  throw v0;
  #L46a99a.  v8:= "" @kind object;
  #L46a99e.  v1:= new `okhttp3.internal.http.StatusLine`;
  #L46a9a2.  call `<init>`(v1, v0, v5, v8) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L46a9a8.  return v1 @kind object;
  #L46a9aa.  v0:= new `java.net.ProtocolException`;
  #L46a9ae.  v1:= new `java.lang.StringBuilder`;
  #L46a9b2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46a9b8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a9be.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a9c4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46a9ca.  v8:= temp @kind object;
  #L46a9cc.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46a9d2.  throw v0;
  #L46a9d4.  v0:= new `java.net.ProtocolException`;
  #L46a9d8.  v1:= new `java.lang.StringBuilder`;
  #L46a9dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46a9e2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a9e8.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a9ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46a9f4.  v8:= temp @kind object;
  #L46a9f6.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46a9fc.  throw v0;
  #L46a9fe.  v0:= new `java.net.ProtocolException`;
  #L46aa02.  v1:= new `java.lang.StringBuilder`;
  #L46aa06.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46aa0c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46aa12.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46aa18.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46aa1e.  v8:= temp @kind object;
  #L46aa20.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46aa26.  throw v0;
  catch `java.lang.NumberFormatException` @[L46a93c..L46a94c] goto L46a9aa;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http.StatusLine` v3 @kind this) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46a7c4.  v0:= new `java.lang.StringBuilder`;
  #L46a7c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46a7ce.  v1:= v3.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L46a7d2.  v2:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L46a7d6.  if v1 != v2 then goto L46a7e0;
  #L46a7da.  v1:= "HTTP/1.0" @kind object;
  #L46a7de.  goto L46a7e4;
  #L46a7e0.  v1:= "HTTP/1.1" @kind object;
  #L46a7e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a7ea.  v1:= 32I;
  #L46a7ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a7f4.  v2:= v3.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L46a7f8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a7fe.  v2:= v3.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L46a802.  if v2 == 0 then goto L46a816;
  #L46a806.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a80c.  v1:= v3.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L46a810.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46a816.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46a81c.  v0:= temp @kind object;
  #L46a81e.  return v0 @kind object;
}
