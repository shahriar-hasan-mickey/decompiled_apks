record `okhttp3.internal.http.RequestLine` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.http.RequestLine` v0 @kind this) @signature `Lokhttp3/internal/http/RequestLine;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L469fe8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L469fee.  return @kind void;
}
procedure `java.lang.String` `get`(`okhttp3.Request` v2 @kind object, `java.net.Proxy$Type` v3 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.get:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L469f20.  v0:= new `java.lang.StringBuilder`;
  #L469f24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L469f2a.  call temp:= `method`(v2) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L469f30.  v1:= temp @kind object;
  #L469f32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L469f38.  v1:= 32I;
  #L469f3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L469f42.  call temp:= `includeAuthorityInRequestLine`(v2, v3) @signature `Lokhttp3/internal/http/RequestLine;.includeAuthorityInRequestLine:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Z` @kind static;
  #L469f48.  v3:= temp;
  #L469f4a.  if v3 == 0 then goto L469f5e;
  #L469f4e.  call temp:= `url`(v2) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L469f54.  v2:= temp @kind object;
  #L469f56.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L469f5c.  goto L469f74;
  #L469f5e.  call temp:= `url`(v2) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L469f64.  v2:= temp @kind object;
  #L469f66.  call temp:= `requestPath`(v2) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind static;
  #L469f6c.  v2:= temp @kind object;
  #L469f6e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L469f74.  v2:= " HTTP/1.1" @kind object;
  #L469f78.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L469f7e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L469f84.  v2:= temp @kind object;
  #L469f86.  return v2 @kind object;
}
procedure `boolean` `includeAuthorityInRequestLine`(`okhttp3.Request` v0 @kind object, `java.net.Proxy$Type` v1 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.includeAuthorityInRequestLine:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L469ef4.  call temp:= `isHttps`(v0) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L469efa.  v0:= temp;
  #L469efc.  if v0 != 0 then goto L469f0c;
  #L469f00.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L469f04.  if v1 != v0 then goto L469f0c;
  #L469f08.  v0:= 1I;
  #L469f0a.  goto L469f0e;
  #L469f0c.  v0:= 0I;
  #L469f0e.  return v0;
}
procedure `java.lang.String` `requestPath`(`okhttp3.HttpUrl` v2 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L469f98.  call temp:= `encodedPath`(v2) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L469f9e.  v0:= temp @kind object;
  #L469fa0.  call temp:= `encodedQuery`(v2) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L469fa6.  v2:= temp @kind object;
  #L469fa8.  if v2 == 0 then goto L469fd4;
  #L469fac.  v1:= new `java.lang.StringBuilder`;
  #L469fb0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L469fb6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L469fbc.  v0:= 63I;
  #L469fc0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L469fc6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L469fcc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L469fd2.  v0:= temp @kind object;
  #L469fd4.  return v0 @kind object;
}
