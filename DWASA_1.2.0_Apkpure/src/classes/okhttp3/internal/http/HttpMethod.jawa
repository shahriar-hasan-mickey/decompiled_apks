record `okhttp3.internal.http.HttpMethod` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.http.HttpMethod` v0 @kind this) @signature `Lokhttp3/internal/http/HttpMethod;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4699c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4699ce.  return @kind void;
}
procedure `boolean` `invalidatesCache`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L469834.  v0:= "POST" @kind object;
  #L469838.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46983e.  v0:= temp;
  #L469840.  if v0 != 0 then goto L46988a;
  #L469844.  v0:= "PATCH" @kind object;
  #L469848.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46984e.  v0:= temp;
  #L469850.  if v0 != 0 then goto L46988a;
  #L469854.  v0:= "PUT" @kind object;
  #L469858.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46985e.  v0:= temp;
  #L469860.  if v0 != 0 then goto L46988a;
  #L469864.  v0:= "DELETE" @kind object;
  #L469868.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46986e.  v0:= temp;
  #L469870.  if v0 != 0 then goto L46988a;
  #L469874.  v0:= "MOVE" @kind object;
  #L469878.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46987e.  v1:= temp;
  #L469880.  if v1 == 0 then goto L469886;
  #L469884.  goto L46988a;
  #L469886.  v1:= 0I;
  #L469888.  goto L46988c;
  #L46988a.  v1:= 1I;
  #L46988c.  return v1;
}
procedure `boolean` `permitsRequestBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4698a0.  call temp:= `requiresRequestBody`(v1) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L4698a6.  v0:= temp;
  #L4698a8.  if v0 != 0 then goto L469902;
  #L4698ac.  v0:= "OPTIONS" @kind object;
  #L4698b0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4698b6.  v0:= temp;
  #L4698b8.  if v0 != 0 then goto L469902;
  #L4698bc.  v0:= "DELETE" @kind object;
  #L4698c0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4698c6.  v0:= temp;
  #L4698c8.  if v0 != 0 then goto L469902;
  #L4698cc.  v0:= "PROPFIND" @kind object;
  #L4698d0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4698d6.  v0:= temp;
  #L4698d8.  if v0 != 0 then goto L469902;
  #L4698dc.  v0:= "MKCOL" @kind object;
  #L4698e0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4698e6.  v0:= temp;
  #L4698e8.  if v0 != 0 then goto L469902;
  #L4698ec.  v0:= "LOCK" @kind object;
  #L4698f0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4698f6.  v1:= temp;
  #L4698f8.  if v1 == 0 then goto L4698fe;
  #L4698fc.  goto L469902;
  #L4698fe.  v1:= 0I;
  #L469900.  goto L469904;
  #L469902.  v1:= 1I;
  #L469904.  return v1;
}
procedure `boolean` `redirectsToGet`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsToGet:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L469918.  v0:= "PROPFIND" @kind object;
  #L46991c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L469922.  v1:= temp;
  #L469924.  v1:= v1 ^~ 1;
  #L469928.  return v1;
}
procedure `boolean` `redirectsWithBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsWithBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46993c.  v0:= "PROPFIND" @kind object;
  #L469940.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L469946.  v1:= temp;
  #L469948.  return v1;
}
procedure `boolean` `requiresRequestBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46995c.  v0:= "POST" @kind object;
  #L469960.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L469966.  v0:= temp;
  #L469968.  if v0 != 0 then goto L4699b2;
  #L46996c.  v0:= "PUT" @kind object;
  #L469970.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L469976.  v0:= temp;
  #L469978.  if v0 != 0 then goto L4699b2;
  #L46997c.  v0:= "PATCH" @kind object;
  #L469980.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L469986.  v0:= temp;
  #L469988.  if v0 != 0 then goto L4699b2;
  #L46998c.  v0:= "PROPPATCH" @kind object;
  #L469990.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L469996.  v0:= temp;
  #L469998.  if v0 != 0 then goto L4699b2;
  #L46999c.  v0:= "REPORT" @kind object;
  #L4699a0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4699a6.  v1:= temp;
  #L4699a8.  if v1 == 0 then goto L4699ae;
  #L4699ac.  goto L4699b2;
  #L4699ae.  v1:= 0I;
  #L4699b0.  goto L4699b4;
  #L4699b2.  v1:= 1I;
  #L4699b4.  return v1;
}
