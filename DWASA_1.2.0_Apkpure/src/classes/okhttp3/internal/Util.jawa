record `okhttp3.internal.Util` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.RequestBody` `@@okhttp3.internal.Util.EMPTY_REQUEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ResponseBody` `@@okhttp3.internal.Util.EMPTY_RESPONSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.ISO_8859_1` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@okhttp3.internal.Util.NATURAL_ORDER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@okhttp3.internal.Util.UTC` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_8_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4630a8.  v0:= 0I;
  #L4630aa.  v1:= new `byte`[v0];
  #L4630ae.  `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] := v1 @kind object;
  #L4630b2.  v0:= new `java.lang.String`[v0];
  #L4630b6.  `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @type ^`java.lang.String`[] := v0 @kind object;
  #L4630ba.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L4630be.  v1:= 0I;
  #L4630c0.  call temp:= `create`(v1, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @kind static;
  #L4630c6.  v0:= temp @kind object;
  #L4630c8.  `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L4630cc.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L4630d0.  call temp:= `create`(v1, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L4630d6.  v0:= temp @kind object;
  #L4630d8.  `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L4630dc.  v0:= "efbbbf" @kind object;
  #L4630e0.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L4630e6.  v0:= temp @kind object;
  #L4630e8.  `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L4630ec.  v0:= "feff" @kind object;
  #L4630f0.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L4630f6.  v0:= temp @kind object;
  #L4630f8.  `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L4630fc.  v0:= "fffe" @kind object;
  #L463100.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L463106.  v0:= temp @kind object;
  #L463108.  `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L46310c.  v0:= "0000ffff" @kind object;
  #L463110.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L463116.  v0:= temp @kind object;
  #L463118.  `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L46311c.  v0:= "ffff0000" @kind object;
  #L463120.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L463126.  v0:= temp @kind object;
  #L463128.  `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L46312c.  v0:= "UTF-8" @kind object;
  #L463130.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L463136.  v0:= temp @kind object;
  #L463138.  `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L46313c.  v0:= "ISO-8859-1" @kind object;
  #L463140.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L463146.  v0:= temp @kind object;
  #L463148.  `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L46314c.  v0:= "UTF-16BE" @kind object;
  #L463150.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L463156.  v0:= temp @kind object;
  #L463158.  `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L46315c.  v0:= "UTF-16LE" @kind object;
  #L463160.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L463166.  v0:= temp @kind object;
  #L463168.  `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L46316c.  v0:= "UTF-32BE" @kind object;
  #L463170.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L463176.  v0:= temp @kind object;
  #L463178.  `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L46317c.  v0:= "UTF-32LE" @kind object;
  #L463180.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L463186.  v0:= temp @kind object;
  #L463188.  `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L46318c.  v0:= "GMT" @kind object;
  #L463190.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L463196.  v0:= temp @kind object;
  #L463198.  `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` := v0 @kind object;
  #L46319c.  v0:= new `okhttp3.internal.Util$1`;
  #L4631a0.  call `<init>`(v0) @signature `Lokhttp3/internal/Util$1;.<init>:()V` @kind direct;
  #L4631a6.  `@@okhttp3.internal.Util.NATURAL_ORDER` @type ^`java.util.Comparator` := v0 @kind object;
  #L4631aa.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L4631ae.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L4631b4.  v0:= temp @kind object;
  #L4631b6.  `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L4631ba.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.Util` v0 @kind this) @signature `Lokhttp3/internal/Util;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4631cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4631d2.  return @kind void;
}
procedure `java.lang.AssertionError` `assertionError`(`java.lang.String` v1 @kind object, `java.lang.Exception` v2 @kind object) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4629d8.  v0:= new `java.lang.AssertionError`;
  #L4629dc.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4629e2.  call temp:= `initCause`(v0, v2) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L4629e8.  v1:= temp @kind object;
  #L4629ea.  v1:= (`java.lang.AssertionError`) v1 @kind object;
  #L4629ee.  return v1 @kind object;
}
procedure `java.nio.charset.Charset` `bomAwareCharset`(`okio.BufferedSource` v3 @kind object, `java.nio.charset.Charset` v4 @kind object) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L462f50.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L462f54.  v1:= 0L;
  #L462f58.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L462f5e.  v0:= temp;
  #L462f60.  if v0 == 0 then goto L462f7e;
  #L462f64.  v4:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L462f68.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L462f6e.  v4:= temp;
  #L462f70.  v0:= (`long`) v4 @kind i2l;
  #L462f72.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L462f78.  v3:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L462f7c.  return v3 @kind object;
  #L462f7e.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L462f82.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L462f88.  v0:= temp;
  #L462f8a.  if v0 == 0 then goto L462fa8;
  #L462f8e.  v4:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L462f92.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L462f98.  v4:= temp;
  #L462f9a.  v0:= (`long`) v4 @kind i2l;
  #L462f9c.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L462fa2.  v3:= `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L462fa6.  return v3 @kind object;
  #L462fa8.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L462fac.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L462fb2.  v0:= temp;
  #L462fb4.  if v0 == 0 then goto L462fd2;
  #L462fb8.  v4:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L462fbc.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L462fc2.  v4:= temp;
  #L462fc4.  v0:= (`long`) v4 @kind i2l;
  #L462fc6.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L462fcc.  v3:= `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L462fd0.  return v3 @kind object;
  #L462fd2.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L462fd6.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L462fdc.  v0:= temp;
  #L462fde.  if v0 == 0 then goto L462ffc;
  #L462fe2.  v4:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L462fe6.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L462fec.  v4:= temp;
  #L462fee.  v0:= (`long`) v4 @kind i2l;
  #L462ff0.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L462ff6.  v3:= `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L462ffa.  return v3 @kind object;
  #L462ffc.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L463000.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L463006.  v0:= temp;
  #L463008.  if v0 == 0 then goto L463026;
  #L46300c.  v4:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L463010.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L463016.  v4:= temp;
  #L463018.  v0:= (`long`) v4 @kind i2l;
  #L46301a.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L463020.  v3:= `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L463024.  return v3 @kind object;
  #L463026.  return v4 @kind object;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L462a00.  v0:= ":" @kind object;
  #L462a04.  call temp:= `contains`(v3, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L462a0a.  v0:= temp;
  #L462a0c.  v1:= 0I;
  #L462a0e.  if v0 == 0 then goto L462ab4;
  #L462a12.  v0:= "[" @kind object;
  #L462a16.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L462a1c.  v0:= temp;
  #L462a1e.  if v0 == 0 then goto L462a48;
  #L462a22.  v0:= "]" @kind object;
  #L462a26.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L462a2c.  v0:= temp;
  #L462a2e.  if v0 == 0 then goto L462a48;
  #L462a32.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L462a38.  v0:= temp;
  #L462a3a.  v2:= 1I;
  #L462a3c.  v0:= v0 - v2 @kind int;
  #L462a3e.  call temp:= `decodeIpv6`(v3, v2, v0) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L462a44.  v0:= temp @kind object;
  #L462a46.  goto L462a5a;
  #L462a48.  v0:= 0I;
  #L462a4a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L462a50.  v2:= temp;
  #L462a52.  call temp:= `decodeIpv6`(v3, v0, v2) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L462a58.  v0:= temp @kind object;
  #L462a5a.  if v0 != 0 then goto L462a60;
  #L462a5e.  return v1 @kind object;
  #L462a60.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L462a66.  v0:= temp @kind object;
  #L462a68.  v1:= length @variable v0;
  #L462a6a.  v2:= 16I;
  #L462a6e.  if v1 != v2 then goto L462a7c;
  #L462a72.  call temp:= `inet6AddressToAscii`(v0) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @kind static;
  #L462a78.  v3:= temp @kind object;
  #L462a7a.  return v3 @kind object;
  #L462a7c.  v0:= new `java.lang.AssertionError`;
  #L462a80.  v1:= new `java.lang.StringBuilder`;
  #L462a84.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L462a8a.  v2:= "Invalid IPv6 address: '" @kind object;
  #L462a8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462a94.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462a9a.  v3:= "'" @kind object;
  #L462a9e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462aa4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L462aaa.  v3:= temp @kind object;
  #L462aac.  call `<init>`(v0, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L462ab2.  throw v0;
  #L462ab4.  call temp:= `toASCII`(v3) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L462aba.  v3:= temp @kind object;
  #L462abc.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L462ac0.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L462ac6.  v3:= temp @kind object;
  #L462ac8.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L462ace.  v0:= temp;
  #L462ad0.  if v0 == 0 then goto L462ad6;
  #L462ad4.  return v1 @kind object;
  #L462ad6.  call temp:= `containsInvalidHostnameAsciiCodes`(v3) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @kind static;
  #L462adc.  v0:= temp;
  #L462ade.  if v0 == 0 then goto L462ae4;
  #L462ae2.  return v1 @kind object;
  #L462ae4.  return v3 @kind object;
  #L462ae6.  return v1 @kind object;
  catch `java.lang.IllegalArgumentException` @[L462ab4..L462ade] goto L462ae6;
}
procedure `int` `checkDuration`(`java.lang.String` v6 @kind object, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46271c.  v0:= 0L;
  #L462720.  v2:= lcmp(v7, v0);
  #L462724.  if v2 < 0 then goto L4627c4;
  #L462728.  if v9 == 0 then goto L4627b4;
  #L46272c.  call temp:= `toMillis`(v9, v7) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L462732.  v2:= temp @kind wide;
  #L462734.  v4:= 2147483647L;
  #L46273a.  v9:= lcmp(v2, v4);
  #L46273e.  if v9 > 0 then goto L462786;
  #L462742.  v9:= lcmp(v2, v0);
  #L462746.  if v9 != 0 then goto L462782;
  #L46274a.  v9:= lcmp(v7, v0);
  #L46274e.  if v9 > 0 then goto L462754;
  #L462752.  goto L462782;
  #L462754.  v7:= new `java.lang.IllegalArgumentException`;
  #L462758.  v8:= new `java.lang.StringBuilder`;
  #L46275c.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L462762.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462768.  v6:= " too small." @kind object;
  #L46276c.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462772.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L462778.  v6:= temp @kind object;
  #L46277a.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L462780.  throw v7;
  #L462782.  v6:= (`int`) v2 @kind l2i;
  #L462784.  return v6;
  #L462786.  v7:= new `java.lang.IllegalArgumentException`;
  #L46278a.  v8:= new `java.lang.StringBuilder`;
  #L46278e.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L462794.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46279a.  v6:= " too large." @kind object;
  #L46279e.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4627a4.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4627aa.  v6:= temp @kind object;
  #L4627ac.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4627b2.  throw v7;
  #L4627b4.  v6:= new `java.lang.NullPointerException`;
  #L4627b8.  v7:= "unit == null" @kind object;
  #L4627bc.  call `<init>`(v6, v7) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4627c2.  throw v6;
  #L4627c4.  v7:= new `java.lang.IllegalArgumentException`;
  #L4627c8.  v8:= new `java.lang.StringBuilder`;
  #L4627cc.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4627d2.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4627d8.  v6:= " < 0" @kind object;
  #L4627dc.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4627e2.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4627e8.  v6:= temp @kind object;
  #L4627ea.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4627f0.  throw v7;
}
procedure `void` `checkOffsetAndCount`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4631e4.  v0:= v7 ^| v9 @kind long;
  #L4631e8.  v2:= 0L;
  #L4631ec.  v4:= lcmp(v0, v2);
  #L4631f0.  if v4 < 0 then goto L463208;
  #L4631f4.  v0:= lcmp(v7, v5);
  #L4631f8.  if v0 > 0 then goto L463208;
  #L4631fc.  v5:= v5 - v7 @kind long;
  #L4631fe.  v7:= lcmp(v5, v9);
  #L463202.  if v7 < 0 then goto L463208;
  #L463206.  return @kind void;
  #L463208.  v5:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L46320c.  call `<init>`(v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L463212.  throw v5;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v0 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L463224.  if v0 == 0 then goto L463234;
  #L463228.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L46322e.  goto L463234;
  #L463230.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L463232.  throw v0;
  #L463234.  return @kind void;
  catch `java.lang.RuntimeException` @[L463228..L46322e] goto L463230;
  catch `java.lang.Exception` @[L463228..L46322e] goto L463234;
}
procedure `void` `closeQuietly`(`java.net.ServerSocket` v0 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/ServerSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L463258.  if v0 == 0 then goto L463268;
  #L46325c.  call `close`(v0) @signature `Ljava/net/ServerSocket;.close:()V` @kind virtual;
  #L463262.  goto L463268;
  #L463264.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L463266.  throw v0;
  #L463268.  return @kind void;
  catch `java.lang.RuntimeException` @[L46325c..L463262] goto L463264;
  catch `java.lang.Exception` @[L46325c..L463262] goto L463268;
}
procedure `void` `closeQuietly`(`java.net.Socket` v1 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46328c.  if v1 == 0 then goto L4632ae;
  #L463290.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L463296.  goto L4632ae;
  #L463298.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L46329a.  throw v1;
  #L46329c.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L46329e.  call temp:= `isAndroidGetsocknameError`(v1) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L4632a4.  v0:= temp;
  #L4632a6.  if v0 == 0 then goto L4632ac;
  #L4632aa.  goto L4632ae;
  #L4632ac.  throw v1;
  #L4632ae.  return @kind void;
  catch `java.lang.AssertionError` @[L463290..L463296] goto L46329c;
  catch `java.lang.RuntimeException` @[L463290..L463296] goto L463298;
  catch `java.lang.Exception` @[L463290..L463296] goto L4632ae;
}
procedure `java.lang.String`[] `concat`(`java.lang.String`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L462d58.  v0:= length @variable v3;
  #L462d5a.  v0:= v0 + 1;
  #L462d5e.  v0:= new `java.lang.String`[v0];
  #L462d62.  v1:= length @variable v3;
  #L462d64.  v2:= 0I;
  #L462d66.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L462d6c.  v3:= length @variable v0;
  #L462d6e.  v3:= v3 + -1;
  #L462d72.  v0[v3]:= v4 @kind object;
  #L462d76.  return v0 @kind object;
}
procedure `boolean` `containsInvalidHostnameAsciiCodes`(`java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4623b8.  v0:= 0I;
  #L4623ba.  v1:= 0I;
  #L4623bc.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4623c2.  v2:= temp;
  #L4623c4.  if v1 >= v2 then goto L462400;
  #L4623c8.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4623ce.  v2:= temp;
  #L4623d0.  v3:= 31I;
  #L4623d4.  v4:= 1I;
  #L4623d6.  if v2 <= v3 then goto L4623fe;
  #L4623da.  v3:= 127I;
  #L4623de.  if v2 < v3 then goto L4623e4;
  #L4623e2.  goto L4623fe;
  #L4623e4.  v3:= " #%/:?@[\\]" @kind object;
  #L4623e8.  call temp:= `indexOf`(v3, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4623ee.  v2:= temp;
  #L4623f0.  v3:= -1I;
  #L4623f2.  if v2 == v3 then goto L4623f8;
  #L4623f6.  return v4;
  #L4623f8.  v1:= v1 + 1;
  #L4623fc.  goto L4623bc;
  #L4623fe.  return v4;
  #L462400.  return v0;
}
procedure `int` `decodeHexDigit`(`char` v2 ) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L462804.  v0:= 48I;
  #L462808.  if v2 < v0 then goto L462818;
  #L46280c.  v1:= 57I;
  #L462810.  if v2 > v1 then goto L462818;
  #L462814.  v2:= v2 - v0 @kind int;
  #L462816.  return v2;
  #L462818.  v0:= 97I;
  #L46281c.  if v2 < v0 then goto L462830;
  #L462820.  v1:= 102I;
  #L462824.  if v2 > v1 then goto L462830;
  #L462828.  v2:= v2 - v0 @kind int;
  #L46282a.  v2:= v2 + 10;
  #L46282e.  return v2;
  #L462830.  v0:= 65I;
  #L462834.  if v2 < v0 then goto L462842;
  #L462838.  v1:= 70I;
  #L46283c.  if v2 > v1 then goto L462842;
  #L462840.  goto L462828;
  #L462842.  v2:= -1I;
  #L462844.  return v2;
}
procedure `boolean` `decodeIpv4Suffix`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L462414.  v0:= v11;
  #L462416.  v1:= 0I;
  #L462418.  if v8 >= v9 then goto L46249c;
  #L46241c.  v2:= length @variable v10;
  #L46241e.  if v0 != v2 then goto L462424;
  #L462422.  return v1;
  #L462424.  if v0 == v11 then goto L46243e;
  #L462428.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L46242e.  v2:= temp;
  #L462430.  v3:= 46I;
  #L462434.  if v2 == v3 then goto L46243a;
  #L462438.  return v1;
  #L46243a.  v8:= v8 + 1;
  #L46243e.  v2:= v8;
  #L462440.  v3:= 0I;
  #L462442.  if v2 >= v9 then goto L462482;
  #L462446.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L46244c.  v4:= temp;
  #L46244e.  v5:= 48I;
  #L462452.  if v4 < v5 then goto L462482;
  #L462456.  v6:= 57I;
  #L46245a.  if v4 <= v6 then goto L462460;
  #L46245e.  goto L462482;
  #L462460.  if v3 != 0 then goto L46246a;
  #L462464.  if v8 == v2 then goto L46246a;
  #L462468.  return v1;
  #L46246a.  v3:= v3 * 10;
  #L46246e.  v3:= v3 + v4 @kind int;
  #L462470.  v3:= v3 - v5 @kind int;
  #L462472.  v4:= 255I;
  #L462476.  if v3 <= v4 then goto L46247c;
  #L46247a.  return v1;
  #L46247c.  v2:= v2 + 1;
  #L462480.  goto L462442;
  #L462482.  v8:= v2 - v8 @kind int;
  #L462486.  if v8 != 0 then goto L46248c;
  #L46248a.  return v1;
  #L46248c.  v8:= v0 + 1;
  #L462490.  v1:= (`byte`) v3 @kind i2b;
  #L462492.  v10[v0]:= v1 @kind byte;
  #L462496.  v0:= v8;
  #L462498.  v8:= v2;
  #L46249a.  goto L462416;
  #L46249c.  v11:= v11 + 4;
  #L4624a0.  if v0 == v11 then goto L4624a6;
  #L4624a4.  return v1;
  #L4624a6.  v7:= 1I;
  #L4624a8.  return v7;
}
procedure `java.net.InetAddress` `decodeIpv6`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L462df8.  v0:= 16I;
  #L462dfc.  v0:= new `byte`[v0];
  #L462e00.  v1:= -1I;
  #L462e02.  v2:= 0I;
  #L462e04.  v3:= 0I;
  #L462e06.  v4:= -1I;
  #L462e08.  v5:= -1I;
  #L462e0a.  v6:= 0I;
  #L462e0c.  if v11 >= v12 then goto L462eee;
  #L462e10.  v7:= length @variable v0;
  #L462e12.  if v3 != v7 then goto L462e18;
  #L462e16.  return v6 @kind object;
  #L462e18.  v7:= v11 + 2;
  #L462e1c.  if v7 > v12 then goto L462e48;
  #L462e20.  v8:= 2I;
  #L462e22.  v9:= "::" @kind object;
  #L462e26.  call temp:= `regionMatches`(v10, v11, v9, v2, v8) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L462e2c.  v8:= temp;
  #L462e2e.  if v8 == 0 then goto L462e48;
  #L462e32.  if v4 == v1 then goto L462e38;
  #L462e36.  return v6 @kind object;
  #L462e38.  v3:= v3 + 2;
  #L462e3c.  v4:= v3;
  #L462e3e.  if v7 != v12 then goto L462e44;
  #L462e42.  goto L462eee;
  #L462e44.  v5:= v7;
  #L462e46.  goto L462e90;
  #L462e48.  if v3 == 0 then goto L462e8e;
  #L462e4c.  v7:= 1I;
  #L462e4e.  v8:= ":" @kind object;
  #L462e52.  call temp:= `regionMatches`(v10, v11, v8, v2, v7) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L462e58.  v8:= temp;
  #L462e5a.  if v8 == 0 then goto L462e64;
  #L462e5e.  v11:= v11 + 1;
  #L462e62.  goto L462e8e;
  #L462e64.  v8:= "." @kind object;
  #L462e68.  call temp:= `regionMatches`(v10, v11, v8, v2, v7) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L462e6e.  v11:= temp;
  #L462e70.  if v11 == 0 then goto L462e8c;
  #L462e74.  v11:= v3 + -2;
  #L462e78.  call temp:= `decodeIpv4Suffix`(v10, v5, v12, v0, v11) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @kind static;
  #L462e7e.  v10:= temp;
  #L462e80.  if v10 != 0 then goto L462e86;
  #L462e84.  return v6 @kind object;
  #L462e86.  v3:= v3 + 2;
  #L462e8a.  goto L462eee;
  #L462e8c.  return v6 @kind object;
  #L462e8e.  v5:= v11;
  #L462e90.  v11:= v5;
  #L462e92.  v7:= 0I;
  #L462e94.  if v11 >= v12 then goto L462eba;
  #L462e98.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L462e9e.  v8:= temp;
  #L462ea0.  call temp:= `decodeHexDigit`(v8) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L462ea6.  v8:= temp;
  #L462ea8.  if v8 != v1 then goto L462eae;
  #L462eac.  goto L462eba;
  #L462eae.  v7:= v7 ^< 4;
  #L462eb2.  v7:= v7 + v8 @kind int;
  #L462eb4.  v11:= v11 + 1;
  #L462eb8.  goto L462e94;
  #L462eba.  v8:= v11 - v5 @kind int;
  #L462ebe.  if v8 == 0 then goto L462eec;
  #L462ec2.  v9:= 4I;
  #L462ec4.  if v8 <= v9 then goto L462eca;
  #L462ec8.  goto L462eec;
  #L462eca.  v6:= v3 + 1;
  #L462ece.  v8:= v7 ^>> 8;
  #L462ed2.  v8:= v8 ^& 255;
  #L462ed6.  v8:= (`byte`) v8 @kind i2b;
  #L462ed8.  v0[v3]:= v8 @kind byte;
  #L462edc.  v3:= v6 + 1;
  #L462ee0.  v7:= v7 ^& 255;
  #L462ee4.  v7:= (`byte`) v7 @kind i2b;
  #L462ee6.  v0[v6]:= v7 @kind byte;
  #L462eea.  goto L462e0a;
  #L462eec.  return v6 @kind object;
  #L462eee.  v10:= length @variable v0;
  #L462ef0.  if v3 == v10 then goto L462f14;
  #L462ef4.  if v4 != v1 then goto L462efa;
  #L462ef8.  return v6 @kind object;
  #L462efa.  v10:= length @variable v0;
  #L462efc.  v11:= v3 - v4 @kind int;
  #L462f00.  v10:= v10 - v11 @kind int;
  #L462f02.  call `arraycopy`(v0, v4, v0, v10, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L462f08.  v10:= length @variable v0;
  #L462f0a.  v10:= v10 - v3 @kind int;
  #L462f0c.  v10:= v10 + v4 @kind int;
  #L462f0e.  call `fill`(v0, v4, v10, v2) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L462f14.  call temp:= `getByAddress`(v0) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #L462f1a.  v10:= temp @kind object;
  #L462f1c.  return v10 @kind object;
  #L462f1e.  v10:= new `java.lang.AssertionError`;
  #L462f22.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L462f28.  goto L462f2c;
  #L462f2a.  throw v10;
  #L462f2c.  goto L462f2a;
  catch `java.net.UnknownHostException` @[L462f14..L462f1c] goto L462f1e;
}
procedure `int` `delimiterOffset`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `char` v4 ) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L462858.  if v2 >= v3 then goto L462870;
  #L46285c.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L462862.  v0:= temp;
  #L462864.  if v0 != v4 then goto L46286a;
  #L462868.  return v2;
  #L46286a.  v2:= v2 + 1;
  #L46286e.  goto L462858;
  #L462870.  return v3;
}
procedure `int` `delimiterOffset`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L462884.  if v3 >= v4 then goto L4628a6;
  #L462888.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L46288e.  v0:= temp;
  #L462890.  call temp:= `indexOf`(v5, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L462896.  v0:= temp;
  #L462898.  v1:= -1I;
  #L46289a.  if v0 == v1 then goto L4628a0;
  #L46289e.  return v3;
  #L4628a0.  v3:= v3 + 1;
  #L4628a4.  goto L462884;
  #L4628a6.  return v4;
}
procedure `boolean` `discard`(`okio.Source` v0 @kind object, `int` v1 , `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4624bc.  call temp:= `skipAll`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L4624c2.  v0:= temp;
  #L4624c4.  return v0;
  #L4624c6.  v0:= 0I;
  #L4624c8.  return v0;
  catch `java.io.IOException` @[L4624bc..L4624c4] goto L4624c6;
}
procedure `boolean` `equal`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4624ec.  if v0 == v1 then goto L462506;
  #L4624f0.  if v0 == 0 then goto L462502;
  #L4624f4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4624fa.  v0:= temp;
  #L4624fc.  if v0 == 0 then goto L462502;
  #L462500.  goto L462506;
  #L462502.  v0:= 0I;
  #L462504.  goto L462508;
  #L462506.  v0:= 1I;
  #L462508.  return v0;
}
procedure `java.lang.String` `format`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L462b08.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L462b0c.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L462b12.  v1:= temp @kind object;
  #L462b14.  return v1 @kind object;
}
procedure `java.lang.String` `hostHeader`(`okhttp3.HttpUrl` v3 @kind object, `boolean` v4 ) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L462b28.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L462b2e.  v0:= temp @kind object;
  #L462b30.  v1:= ":" @kind object;
  #L462b34.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L462b3a.  v0:= temp;
  #L462b3c.  if v0 == 0 then goto L462b76;
  #L462b40.  v0:= new `java.lang.StringBuilder`;
  #L462b44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L462b4a.  v2:= "[" @kind object;
  #L462b4e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462b54.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L462b5a.  v2:= temp @kind object;
  #L462b5c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462b62.  v2:= "]" @kind object;
  #L462b66.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462b6c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L462b72.  v0:= temp @kind object;
  #L462b74.  goto L462b7e;
  #L462b76.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L462b7c.  v0:= temp @kind object;
  #L462b7e.  if v4 != 0 then goto L462b9e;
  #L462b82.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L462b88.  v4:= temp;
  #L462b8a.  call temp:= `scheme`(v3) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L462b90.  v2:= temp @kind object;
  #L462b92.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L462b98.  v2:= temp;
  #L462b9a.  if v4 == v2 then goto L462bca;
  #L462b9e.  v4:= new `java.lang.StringBuilder`;
  #L462ba2.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L462ba8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462bae.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462bb4.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L462bba.  v3:= temp;
  #L462bbc.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L462bc2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L462bc8.  v0:= temp @kind object;
  #L462bca.  return v0 @kind object;
}
procedure `java.util.List` `immutableList`(`java.util.List` v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L463068.  v0:= new `java.util.ArrayList`;
  #L46306c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L463072.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L463078.  v1:= temp @kind object;
  #L46307a.  return v1 @kind object;
}
procedure `java.util.List` `immutableList`(`java.lang.Object`[] v0 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L463038.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L46303e.  v0:= temp @kind object;
  #L463040.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L463044.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L46304a.  v0:= temp @kind object;
  #L46304c.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L463052.  v0:= temp @kind object;
  #L463054.  return v0 @kind object;
}
procedure `int` `indexOf`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/Util;.indexOf:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4628b8.  v0:= length @variable v4;
  #L4628ba.  v1:= 0I;
  #L4628bc.  if v1 >= v0 then goto L4628d8;
  #L4628c0.  v2:= v4[v1] @kind object;
  #L4628c4.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L4628ca.  v2:= temp;
  #L4628cc.  if v2 != 0 then goto L4628d2;
  #L4628d0.  return v1;
  #L4628d2.  v1:= v1 + 1;
  #L4628d6.  goto L4628bc;
  #L4628d8.  v3:= -1I;
  #L4628da.  return v3;
}
procedure `int` `indexOfControlOrNonAscii`(`java.lang.String` v4 @kind object) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4628ec.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4628f2.  v0:= temp;
  #L4628f4.  v1:= 0I;
  #L4628f6.  if v1 >= v0 then goto L46291c;
  #L4628fa.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L462900.  v2:= temp;
  #L462902.  v3:= 31I;
  #L462906.  if v2 <= v3 then goto L46291a;
  #L46290a.  v3:= 127I;
  #L46290e.  if v2 < v3 then goto L462914;
  #L462912.  goto L46291a;
  #L462914.  v1:= v1 + 1;
  #L462918.  goto L4628f6;
  #L46291a.  return v1;
  #L46291c.  v4:= -1I;
  #L46291e.  return v4;
}
procedure `java.lang.String` `inet6AddressToAscii`(`byte`[] v8 @kind object) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L462bdc.  v0:= 0I;
  #L462bde.  v1:= -1I;
  #L462be0.  v1:= 0I;
  #L462be2.  v2:= -1I;
  #L462be4.  v3:= 0I;
  #L462be6.  v4:= length @variable v8;
  #L462be8.  v5:= 16I;
  #L462bec.  if v1 >= v4 then goto L462c28;
  #L462bf0.  v4:= v1;
  #L462bf2.  if v4 >= v5 then goto L462c10;
  #L462bf6.  v6:= v8[v4] @kind byte;
  #L462bfa.  if v6 != 0 then goto L462c10;
  #L462bfe.  v6:= v4 + 1;
  #L462c02.  v6:= v8[v6] @kind byte;
  #L462c06.  if v6 != 0 then goto L462c10;
  #L462c0a.  v4:= v4 + 2;
  #L462c0e.  goto L462bf2;
  #L462c10.  v5:= v4 - v1 @kind int;
  #L462c14.  if v5 <= v3 then goto L462c22;
  #L462c18.  v6:= 4I;
  #L462c1a.  if v5 < v6 then goto L462c22;
  #L462c1e.  v2:= v1;
  #L462c20.  v3:= v5;
  #L462c22.  v1:= v4 + 2;
  #L462c26.  goto L462be6;
  #L462c28.  v1:= new `okio.Buffer`;
  #L462c2c.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L462c32.  v4:= length @variable v8;
  #L462c34.  if v0 >= v4 then goto L462c86;
  #L462c38.  v4:= 58I;
  #L462c3c.  if v0 != v2 then goto L462c54;
  #L462c40.  call temp:= `writeByte`(v1, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L462c46.  v0:= v0 + v3 @kind int;
  #L462c48.  if v0 != v5 then goto L462c32;
  #L462c4c.  call temp:= `writeByte`(v1, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L462c52.  goto L462c32;
  #L462c54.  if v0 <= 0 then goto L462c5e;
  #L462c58.  call temp:= `writeByte`(v1, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L462c5e.  v4:= v8[v0] @kind byte;
  #L462c62.  v4:= v4 ^& 255;
  #L462c66.  v4:= v4 ^< 8;
  #L462c6a.  v6:= v0 + 1;
  #L462c6e.  v6:= v8[v6] @kind byte;
  #L462c72.  v6:= v6 ^& 255;
  #L462c76.  v4:= v4 ^| v6 @kind int;
  #L462c78.  v6:= (`long`) v4 @kind i2l;
  #L462c7a.  call temp:= `writeHexadecimalUnsignedLong`(v1, v6) @signature `Lokio/Buffer;.writeHexadecimalUnsignedLong:(J)Lokio/Buffer;` @kind virtual;
  #L462c80.  v0:= v0 + 2;
  #L462c84.  goto L462c32;
  #L462c86.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L462c8c.  v8:= temp @kind object;
  #L462c8e.  return v8 @kind object;
}
procedure `java.lang.String`[] `intersect`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object, `java.lang.String`[] v10 @kind object) @signature `Lokhttp3/internal/Util;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L462d88.  v0:= new `java.util.ArrayList`;
  #L462d8c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L462d92.  v1:= length @variable v9;
  #L462d94.  v2:= 0I;
  #L462d96.  v3:= 0I;
  #L462d98.  if v3 >= v1 then goto L462dcc;
  #L462d9c.  v4:= v9[v3] @kind object;
  #L462da0.  v5:= length @variable v10;
  #L462da2.  v6:= 0I;
  #L462da4.  if v6 >= v5 then goto L462dc6;
  #L462da8.  v7:= v10[v6] @kind object;
  #L462dac.  call temp:= `compare`(v8, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L462db2.  v7:= temp;
  #L462db4.  if v7 != 0 then goto L462dc0;
  #L462db8.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L462dbe.  goto L462dc6;
  #L462dc0.  v6:= v6 + 1;
  #L462dc4.  goto L462da4;
  #L462dc6.  v3:= v3 + 1;
  #L462dca.  goto L462d98;
  #L462dcc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L462dd2.  v8:= temp;
  #L462dd4.  v8:= new `java.lang.String`[v8];
  #L462dd8.  call temp:= `toArray`(v0, v8) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L462dde.  v8:= temp @kind object;
  #L462de0.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L462de4.  return v8 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v1 @kind object) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46251c.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L462522.  v0:= temp @kind object;
  #L462524.  if v0 == 0 then goto L462550;
  #L462528.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L46252e.  v0:= temp @kind object;
  #L462530.  if v0 == 0 then goto L462550;
  #L462534.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L46253a.  v1:= temp @kind object;
  #L46253c.  v0:= "getsockname failed" @kind object;
  #L462540.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L462546.  v1:= temp;
  #L462548.  if v1 == 0 then goto L462550;
  #L46254c.  v1:= 1I;
  #L46254e.  goto L462552;
  #L462550.  v1:= 0I;
  #L462552.  return v1;
}
procedure `boolean` `nonEmptyIntersection`(`java.util.Comparator` v7 @kind object, `java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object) @signature `Lokhttp3/internal/Util;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L462564.  v0:= 0I;
  #L462566.  if v8 == 0 then goto L4625b0;
  #L46256a.  if v9 == 0 then goto L4625b0;
  #L46256e.  v1:= length @variable v8;
  #L462570.  if v1 == 0 then goto L4625b0;
  #L462574.  v1:= length @variable v9;
  #L462576.  if v1 != 0 then goto L46257c;
  #L46257a.  goto L4625b0;
  #L46257c.  v1:= length @variable v8;
  #L46257e.  v2:= 0I;
  #L462580.  if v2 >= v1 then goto L4625b0;
  #L462584.  v3:= v8[v2] @kind object;
  #L462588.  v4:= length @variable v9;
  #L46258a.  v5:= 0I;
  #L46258c.  if v5 >= v4 then goto L4625aa;
  #L462590.  v6:= v9[v5] @kind object;
  #L462594.  call temp:= `compare`(v7, v3, v6) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L46259a.  v6:= temp;
  #L46259c.  if v6 != 0 then goto L4625a4;
  #L4625a0.  v7:= 1I;
  #L4625a2.  return v7;
  #L4625a4.  v5:= v5 + 1;
  #L4625a8.  goto L46258c;
  #L4625aa.  v2:= v2 + 1;
  #L4625ae.  goto L462580;
  #L4625b0.  return v0;
}
procedure `boolean` `skipAll`(`okio.Source` v11 @kind object, `int` v12 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4625c4.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L4625ca.  v0:= temp @kind wide;
  #L4625cc.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L4625d2.  v2:= temp @kind object;
  #L4625d4.  call temp:= `hasDeadline`(v2) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L4625da.  v2:= temp;
  #L4625dc.  v3:= 9223372036854775807L;
  #L4625e6.  if v2 == 0 then goto L4625fe;
  #L4625ea.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L4625f0.  v2:= temp @kind object;
  #L4625f2.  call temp:= `deadlineNanoTime`(v2) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L4625f8.  v5:= temp @kind wide;
  #L4625fa.  v5:= v5 - v0 @kind long;
  #L4625fc.  goto L462600;
  #L4625fe.  v5:= v3 @kind wide;
  #L462600.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L462606.  v2:= temp @kind object;
  #L462608.  v7:= (`long`) v12 @kind i2l;
  #L46260a.  call temp:= `toNanos`(v13, v7) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L462610.  v12:= temp @kind wide;
  #L462612.  call temp:= `min`(v5, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L462618.  v12:= temp @kind wide;
  #L46261a.  v12:= v12 + v0 @kind long;
  #L46261c.  call temp:= `deadlineNanoTime`(v2, v12) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L462622.  v12:= new `okio.Buffer`;
  #L462626.  call `<init>`(v12) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L46262c.  v7:= 8192L;
  #L462630.  call temp:= `read`(v11, v12, v7) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L462636.  v7:= temp @kind wide;
  #L462638.  v9:= -1L;
  #L46263c.  v13:= lcmp(v7, v9);
  #L462640.  if v13 == 0 then goto L46264c;
  #L462644.  call `clear`(v12) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L46264a.  goto L46262c;
  #L46264c.  v12:= 1I;
  #L46264e.  v13:= lcmp(v5, v3);
  #L462652.  if v13 != 0 then goto L462666;
  #L462656.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L46265c.  v11:= temp @kind object;
  #L46265e.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L462664.  goto L462676;
  #L462666.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L46266c.  v11:= temp @kind object;
  #L46266e.  v0:= v0 + v5 @kind long;
  #L462670.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L462676.  return v12;
  #L462678.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46267a.  v13:= lcmp(v5, v3);
  #L46267e.  if v13 != 0 then goto L462692;
  #L462682.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L462688.  v11:= temp @kind object;
  #L46268a.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L462690.  goto L4626a2;
  #L462692.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L462698.  v11:= temp @kind object;
  #L46269a.  v0:= v0 + v5 @kind long;
  #L46269c.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L4626a2.  throw v12;
  #L4626a4.  
  #L4626a6.  v12:= 0I;
  #L4626a8.  v13:= lcmp(v5, v3);
  #L4626ac.  if v13 != 0 then goto L4626c0;
  #L4626b0.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L4626b6.  v11:= temp @kind object;
  #L4626b8.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L4626be.  goto L4626d0;
  #L4626c0.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L4626c6.  v11:= temp @kind object;
  #L4626c8.  v0:= v0 + v5 @kind long;
  #L4626ca.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L4626d0.  return v12;
  catch `java.io.InterruptedIOException` @[L462622..L46264a] goto L4626a4;
  catch `java.lang.Throwable` @[L462622..L46264a] goto L462678;
}
procedure `int` `skipLeadingAsciiWhitespace`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L462930.  if v3 >= v4 then goto L46296c;
  #L462934.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L46293a.  v0:= temp;
  #L46293c.  v1:= 9I;
  #L462940.  if v0 == v1 then goto L462966;
  #L462944.  v1:= 10I;
  #L462948.  if v0 == v1 then goto L462966;
  #L46294c.  v1:= 12I;
  #L462950.  if v0 == v1 then goto L462966;
  #L462954.  v1:= 13I;
  #L462958.  if v0 == v1 then goto L462966;
  #L46295c.  v1:= 32I;
  #L462960.  if v0 == v1 then goto L462966;
  #L462964.  return v3;
  #L462966.  v3:= v3 + 1;
  #L46296a.  goto L462930;
  #L46296c.  return v4;
}
procedure `int` `skipTrailingAsciiWhitespace`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L462980.  v4:= v4 + -1;
  #L462984.  if v4 < v3 then goto L4629c4;
  #L462988.  call temp:= `charAt`(v2, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L46298e.  v0:= temp;
  #L462990.  v1:= 9I;
  #L462994.  if v0 == v1 then goto L4629be;
  #L462998.  v1:= 10I;
  #L46299c.  if v0 == v1 then goto L4629be;
  #L4629a0.  v1:= 12I;
  #L4629a4.  if v0 == v1 then goto L4629be;
  #L4629a8.  v1:= 13I;
  #L4629ac.  if v0 == v1 then goto L4629be;
  #L4629b0.  v1:= 32I;
  #L4629b4.  if v0 == v1 then goto L4629be;
  #L4629b8.  v4:= v4 + 1;
  #L4629bc.  return v4;
  #L4629be.  v4:= v4 + -1;
  #L4629c2.  goto L462984;
  #L4629c4.  return v3;
}
procedure `java.util.concurrent.ThreadFactory` `threadFactory`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46308c.  v0:= new `okhttp3.internal.Util$2`;
  #L463090.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/Util$2;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L463096.  return v0 @kind object;
}
procedure `java.lang.String` `toHumanReadableAscii`(`java.lang.String` v7 @kind object) @signature `Lokhttp3/internal/Util;.toHumanReadableAscii:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L462ca0.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L462ca6.  v0:= temp;
  #L462ca8.  v1:= 0I;
  #L462caa.  v2:= 0I;
  #L462cac.  if v2 >= v0 then goto L462d1a;
  #L462cb0.  call temp:= `codePointAt`(v7, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L462cb6.  v3:= temp;
  #L462cb8.  v4:= 127I;
  #L462cbc.  v5:= 31I;
  #L462cc0.  if v3 <= v5 then goto L462cd4;
  #L462cc4.  if v3 >= v4 then goto L462cd4;
  #L462cc8.  call temp:= `charCount`(v3) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L462cce.  v3:= temp;
  #L462cd0.  v2:= v2 + v3 @kind int;
  #L462cd2.  goto L462cac;
  #L462cd4.  v3:= new `okio.Buffer`;
  #L462cd8.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L462cde.  call temp:= `writeUtf8`(v3, v7, v1, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L462ce4.  if v2 >= v0 then goto L462d12;
  #L462ce8.  call temp:= `codePointAt`(v7, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L462cee.  v1:= temp;
  #L462cf0.  if v1 <= v5 then goto L462cfc;
  #L462cf4.  if v1 >= v4 then goto L462cfc;
  #L462cf8.  v6:= v1;
  #L462cfa.  goto L462d00;
  #L462cfc.  v6:= 63I;
  #L462d00.  call temp:= `writeUtf8CodePoint`(v3, v6) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L462d06.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L462d0c.  v1:= temp;
  #L462d0e.  v2:= v2 + v1 @kind int;
  #L462d10.  goto L462ce4;
  #L462d12.  call temp:= `readUtf8`(v3) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L462d18.  v7:= temp @kind object;
  #L462d1a.  return v7 @kind object;
}
procedure `java.lang.String` `trimSubstring`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L462d2c.  call temp:= `skipLeadingAsciiWhitespace`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L462d32.  v1:= temp;
  #L462d34.  call temp:= `skipTrailingAsciiWhitespace`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L462d3a.  v2:= temp;
  #L462d3c.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L462d42.  v0:= temp @kind object;
  #L462d44.  return v0 @kind object;
}
procedure `boolean` `verifyAsIpAddress`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4626f4.  v0:= `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` @kind object;
  #L4626f8.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4626fe.  v1:= temp @kind object;
  #L462700.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L462706.  v1:= temp;
  #L462708.  return v1;
}
