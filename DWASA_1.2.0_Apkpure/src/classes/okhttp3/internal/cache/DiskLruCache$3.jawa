record `okhttp3.internal.cache.DiskLruCache$3` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `okhttp3.internal.cache.DiskLruCache$3.delegate` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this, `okhttp3.internal.cache.DiskLruCache` v2 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.<init>:(Lokhttp3/internal/cache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L464200.  v1.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v2 @kind object;
  #L464204.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46420a.  v2:= new `java.util.ArrayList`;
  #L46420e.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L464212.  v0:= v0.`okhttp3.internal.cache.DiskLruCache.lruEntries` @type ^`java.util.LinkedHashMap` @kind object;
  #L464216.  call temp:= `values`(v0) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L46421c.  v0:= temp @kind object;
  #L46421e.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L464224.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L46422a.  v2:= temp @kind object;
  #L46422c.  v1.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` := v2 @kind object;
  #L464230.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.cache.DiskLruCache$3` v4 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L464124.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L464128.  v1:= 1I;
  #L46412a.  if v0 == 0 then goto L464130;
  #L46412e.  return v1;
  #L464130.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L464134.  @monitorenter v0
  #L464136.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L46413a.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.closed` @type ^`boolean` @kind boolean;
  #L46413e.  v3:= 0I;
  #L464140.  if v2 == 0 then goto L464148;
  #L464144.  @monitorexit v0
  #L464146.  return v3;
  #L464148.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L46414c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L464152.  v2:= temp;
  #L464154.  if v2 == 0 then goto L46417e;
  #L464158.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L46415c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L464162.  v2:= temp @kind object;
  #L464164.  v2:= (`okhttp3.internal.cache.DiskLruCache$Entry`) v2 @kind object;
  #L464168.  call temp:= `snapshot`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L46416e.  v2:= temp @kind object;
  #L464170.  if v2 != 0 then goto L464176;
  #L464174.  goto L464148;
  #L464176.  v4.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L46417a.  @monitorexit v0
  #L46417c.  return v1;
  #L46417e.  @monitorexit v0
  #L464180.  return v3;
  #L464182.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L464184.  @monitorexit v0
  #L464186.  goto L46418a;
  #L464188.  throw v1;
  #L46418a.  goto L464188;
  catch `java.lang.Throwable` @[L464136..L464186] goto L464182;
}
procedure `java.lang.Object` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4641a8.  call temp:= `next`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L4641ae.  v0:= temp @kind object;
  #L4641b0.  return v0 @kind object;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4641c4.  call temp:= `hasNext`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @kind virtual;
  #L4641ca.  v0:= temp;
  #L4641cc.  if v0 == 0 then goto L4641e4;
  #L4641d0.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L4641d4.  v1.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L4641d8.  v0:= 0I;
  #L4641da.  v1.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L4641de.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L4641e2.  return v0 @kind object;
  #L4641e4.  v0:= new `java.util.NoSuchElementException`;
  #L4641e8.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4641ee.  throw v0;
}
procedure `void` `remove`(`okhttp3.internal.cache.DiskLruCache$3` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L464244.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L464248.  if v0 == 0 then goto L464270;
  #L46424c.  v1:= 0I;
  #L46424e.  v2:= v3.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L464252.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.access$000:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Ljava/lang/String;` @kind static;
  #L464258.  v0:= temp @kind object;
  #L46425a.  call temp:= `remove`(v2, v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L464260.  goto L46426a;
  #L464262.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L464264.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L464268.  throw v0;
  #L46426a.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L46426e.  return @kind void;
  #L464270.  v0:= new `java.lang.IllegalStateException`;
  #L464274.  v1:= "remove() before next()" @kind object;
  #L464278.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46427e.  throw v0;
  catch `java.io.IOException` @[L46424e..L464260] goto L46426a;
  catch `java.lang.Throwable` @[L46424e..L464260] goto L464262;
}
