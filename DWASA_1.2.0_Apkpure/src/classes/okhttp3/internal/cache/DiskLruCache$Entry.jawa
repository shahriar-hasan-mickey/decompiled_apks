record `okhttp3.internal.cache.DiskLruCache$Entry` @kind class @AccessFlag FINAL {
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @AccessFlag ;
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.DiskLruCache$Entry.key` @AccessFlag FINAL;
  `long`[] `okhttp3.internal.cache.DiskLruCache$Entry.lengths` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.cache.DiskLruCache$Entry.readable` @AccessFlag ;
  `long` `okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Entry.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `okhttp3.internal.cache.DiskLruCache` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L464730.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v7 @kind object;
  #L464734.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46473a.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` := v8 @kind object;
  #L46473e.  v0:= v7.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L464742.  v0:= new `long`[v0];
  #L464746.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] := v0 @kind object;
  #L46474a.  v0:= v7.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L46474e.  v0:= new `java.io.File`[v0];
  #L464752.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] := v0 @kind object;
  #L464756.  v0:= v7.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L46475a.  v0:= new `java.io.File`[v0];
  #L46475e.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] := v0 @kind object;
  #L464762.  v0:= new `java.lang.StringBuilder`;
  #L464766.  call `<init>`(v0, v8) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46476c.  v8:= 46I;
  #L464770.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L464776.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L46477c.  v8:= temp;
  #L46477e.  v1:= 0I;
  #L464780.  v2:= v7.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L464784.  if v1 >= v2 then goto L4647e0;
  #L464788.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L46478e.  v2:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L464792.  v3:= new `java.io.File`;
  #L464796.  v4:= v7.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L46479a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4647a0.  v5:= temp @kind object;
  #L4647a2.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4647a8.  v2[v1]:= v3 @kind object;
  #L4647ac.  v2:= ".tmp" @kind object;
  #L4647b0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4647b6.  v2:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L4647ba.  v3:= new `java.io.File`;
  #L4647be.  v4:= v7.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L4647c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4647c8.  v5:= temp @kind object;
  #L4647ca.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4647d0.  v2[v1]:= v3 @kind object;
  #L4647d4.  call `setLength`(v0, v8) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L4647da.  v1:= v1 + 1;
  #L4647de.  goto L464780;
  #L4647e0.  return @kind void;
}
procedure `java.io.IOException` `invalidLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v3 @kind this, `java.lang.String`[] v4 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4645fc.  v0:= new `java.io.IOException`;
  #L464600.  v1:= new `java.lang.StringBuilder`;
  #L464604.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46460a.  v2:= "unexpected journal line: " @kind object;
  #L46460e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L464614.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L46461a.  v4:= temp @kind object;
  #L46461c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L464622.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L464628.  v4:= temp @kind object;
  #L46462a.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L464630.  throw v0;
}
procedure `void` `setLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v4 @kind this, `java.lang.String`[] v5 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.setLengths:([Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4647f4.  v0:= length @variable v5;
  #L4647f6.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4647fa.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L4647fe.  if v0 != v1 then goto L464830;
  #L464802.  v0:= 0I;
  #L464804.  v1:= length @variable v5;
  #L464806.  if v0 >= v1 then goto L464824;
  #L46480a.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L46480e.  v2:= v5[v0] @kind object;
  #L464812.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L464818.  v2:= temp @kind wide;
  #L46481a.  v1[v0]:= v2 @kind wide;
  #L46481e.  v0:= v0 + 1;
  #L464822.  goto L464804;
  #L464824.  return @kind void;
  #L464826.  call temp:= `invalidLengths`(v4, v5) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L46482c.  v5:= temp @kind object;
  #L46482e.  throw v5;
  #L464830.  call temp:= `invalidLengths`(v4, v5) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L464836.  v5:= temp @kind object;
  #L464838.  goto L46483c;
  #L46483a.  throw v5;
  #L46483c.  goto L46483a;
  catch `java.lang.NumberFormatException` @[L464804..L46481e] goto L464826;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `snapshot`(`okhttp3.internal.cache.DiskLruCache$Entry` v10 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L464644.  v0:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L464648.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L46464e.  v0:= temp;
  #L464650.  if v0 == 0 then goto L4646f4;
  #L464654.  v0:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L464658.  v0:= v0.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L46465c.  v0:= new `okio.Source`[v0];
  #L464660.  v1:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L464664.  call temp:= `clone`(v1) @signature `[J.clone:()Ljava/lang/Object;` @kind virtual;
  #L46466a.  v1:= temp @kind object;
  #L46466c.  v7:= v1 @kind object;
  #L46466e.  v7:= (`long`[]) v7 @kind object;
  #L464672.  v8:= 0I;
  #L464674.  v1:= 0I;
  #L464676.  v2:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L46467a.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L46467e.  if v1 >= v2 then goto L4646a4;
  #L464682.  v2:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L464686.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L46468a.  v3:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L46468e.  v3:= v3[v1] @kind object;
  #L464692.  call temp:= `source`(v2, v3) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #L464698.  v2:= temp @kind object;
  #L46469a.  v0[v1]:= v2 @kind object;
  #L46469e.  v1:= v1 + 1;
  #L4646a2.  goto L464676;
  #L4646a4.  v9:= new `okhttp3.internal.cache.DiskLruCache$Snapshot`;
  #L4646a8.  v2:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4646ac.  v3:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` @kind object;
  #L4646b0.  v4:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @type ^`long` @kind wide;
  #L4646b4.  v1:= v9 @kind object;
  #L4646b6.  v6:= v0 @kind object;
  #L4646b8.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;J[Lokio/Source;[J)V` @kind direct;
  #L4646be.  return v9 @kind object;
  #L4646c0.  
  #L4646c2.  v1:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4646c6.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L4646ca.  if v8 >= v1 then goto L4646e6;
  #L4646ce.  v1:= v0[v8] @kind object;
  #L4646d2.  if v1 == 0 then goto L4646e6;
  #L4646d6.  v1:= v0[v8] @kind object;
  #L4646da.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L4646e0.  v8:= v8 + 1;
  #L4646e4.  goto L4646c2;
  #L4646e6.  v0:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4646ea.  call temp:= `removeEntry`(v0, v10) @signature `Lokhttp3/internal/cache/DiskLruCache;.removeEntry:(Lokhttp3/internal/cache/DiskLruCache$Entry;)Z` @kind virtual;
  #L4646f0.  v0:= 0I;
  #L4646f2.  return v0 @kind object;
  #L4646f4.  v0:= new `java.lang.AssertionError`;
  #L4646f8.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L4646fe.  goto L464702;
  #L464700.  throw v0;
  #L464702.  goto L464700;
  catch `java.io.FileNotFoundException` @[L464676..L4646be] goto L4646c0;
  catch `java.io.IOException` @[L4646e6..L4646f0] goto L4646f0;
}
procedure `void` `writeLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `okio.BufferedSink` v7 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.writeLengths:(Lokio/BufferedSink;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L464860.  v0:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L464864.  v1:= length @variable v0;
  #L464866.  v2:= 0I;
  #L464868.  if v2 >= v1 then goto L464888;
  #L46486c.  v3:= v0[v2] @kind wide;
  #L464870.  v5:= 32I;
  #L464874.  call temp:= `writeByte`(v7, v5) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L46487a.  v5:= temp @kind object;
  #L46487c.  call temp:= `writeDecimalLong`(v5, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L464882.  v2:= v2 + 1;
  #L464886.  goto L464868;
  #L464888.  return @kind void;
}
