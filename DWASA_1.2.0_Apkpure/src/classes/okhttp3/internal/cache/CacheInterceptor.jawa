record `okhttp3.internal.cache.CacheInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.internal.cache.InternalCache` `okhttp3.internal.cache.CacheInterceptor.cache` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor` v0 @kind this, `okhttp3.internal.cache.InternalCache` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.<init>:(Lokhttp3/internal/cache/InternalCache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L463910.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L463916.  v0.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` := v1 @kind object;
  #L46391a.  return @kind void;
}
procedure `okhttp3.Response` `cacheWritingResponse`(`okhttp3.internal.cache.CacheInterceptor` v4 @kind this, `okhttp3.internal.cache.CacheRequest` v5 @kind object, `okhttp3.Response` v6 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4635a0.  if v5 != 0 then goto L4635a6;
  #L4635a4.  return v6 @kind object;
  #L4635a6.  call temp:= `body`(v5) @signature `Lokhttp3/internal/cache/CacheRequest;.body:()Lokio/Sink;` @kind interface;
  #L4635ac.  v0:= temp @kind object;
  #L4635ae.  if v0 != 0 then goto L4635b4;
  #L4635b2.  return v6 @kind object;
  #L4635b4.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L4635ba.  v1:= temp @kind object;
  #L4635bc.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L4635c2.  v1:= temp @kind object;
  #L4635c4.  call temp:= `buffer`(v0) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L4635ca.  v0:= temp @kind object;
  #L4635cc.  v2:= new `okhttp3.internal.cache.CacheInterceptor$1`;
  #L4635d0.  call `<init>`(v2, v4, v1, v5, v0) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.<init>:(Lokhttp3/internal/cache/CacheInterceptor;Lokio/BufferedSource;Lokhttp3/internal/cache/CacheRequest;Lokio/BufferedSink;)V` @kind direct;
  #L4635d6.  v5:= "Content-Type" @kind object;
  #L4635da.  call temp:= `header`(v6, v5) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4635e0.  v5:= temp @kind object;
  #L4635e2.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L4635e8.  v0:= temp @kind object;
  #L4635ea.  call temp:= `contentLength`(v0) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L4635f0.  v0:= temp @kind wide;
  #L4635f2.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L4635f8.  v6:= temp @kind object;
  #L4635fa.  v3:= new `okhttp3.internal.http.RealResponseBody`;
  #L4635fe.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L463604.  v2:= temp @kind object;
  #L463606.  call `<init>`(v3, v5, v0, v2) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L46360c.  call temp:= `body`(v6, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L463612.  v5:= temp @kind object;
  #L463614.  call temp:= `build`(v5) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L46361a.  v5:= temp @kind object;
  #L46361c.  return v5 @kind object;
}
procedure `okhttp3.Headers` `combine`(`okhttp3.Headers` v7 @kind object, `okhttp3.Headers` v8 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4634c8.  v0:= new `okhttp3.Headers$Builder`;
  #L4634cc.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L4634d2.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4634d8.  v1:= temp;
  #L4634da.  v2:= 0I;
  #L4634dc.  v3:= 0I;
  #L4634de.  if v3 >= v1 then goto L46353c;
  #L4634e2.  call temp:= `name`(v7, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L4634e8.  v4:= temp @kind object;
  #L4634ea.  call temp:= `value`(v7, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L4634f0.  v5:= temp @kind object;
  #L4634f2.  v6:= "Warning" @kind object;
  #L4634f6.  call temp:= `equalsIgnoreCase`(v6, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4634fc.  v6:= temp;
  #L4634fe.  if v6 == 0 then goto L463514;
  #L463502.  v6:= "1" @kind object;
  #L463506.  call temp:= `startsWith`(v5, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L46350c.  v6:= temp;
  #L46350e.  if v6 == 0 then goto L463514;
  #L463512.  goto L463536;
  #L463514.  call temp:= `isEndToEnd`(v4) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @kind static;
  #L46351a.  v6:= temp;
  #L46351c.  if v6 == 0 then goto L46352c;
  #L463520.  call temp:= `get`(v8, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L463526.  v6:= temp @kind object;
  #L463528.  if v6 != 0 then goto L463536;
  #L46352c.  v6:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L463530.  call `addLenient`(v6, v0, v4, v5) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L463536.  v3:= v3 + 1;
  #L46353a.  goto L4634de;
  #L46353c.  call temp:= `size`(v8) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L463542.  v7:= temp;
  #L463544.  if v2 >= v7 then goto L463586;
  #L463548.  call temp:= `name`(v8, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L46354e.  v1:= temp @kind object;
  #L463550.  v3:= "Content-Length" @kind object;
  #L463554.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L46355a.  v3:= temp;
  #L46355c.  if v3 == 0 then goto L463562;
  #L463560.  goto L463580;
  #L463562.  call temp:= `isEndToEnd`(v1) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @kind static;
  #L463568.  v3:= temp;
  #L46356a.  if v3 == 0 then goto L463580;
  #L46356e.  v3:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L463572.  call temp:= `value`(v8, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L463578.  v4:= temp @kind object;
  #L46357a.  call `addLenient`(v3, v0, v1, v4) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L463580.  v2:= v2 + 1;
  #L463584.  goto L463544;
  #L463586.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L46358c.  v7:= temp @kind object;
  #L46358e.  return v7 @kind object;
}
procedure `boolean` `isEndToEnd`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L463430.  v0:= "Connection" @kind object;
  #L463434.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L46343a.  v0:= temp;
  #L46343c.  if v0 != 0 then goto L4634b4;
  #L463440.  v0:= "Keep-Alive" @kind object;
  #L463444.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L46344a.  v0:= temp;
  #L46344c.  if v0 != 0 then goto L4634b4;
  #L463450.  v0:= "Proxy-Authenticate" @kind object;
  #L463454.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L46345a.  v0:= temp;
  #L46345c.  if v0 != 0 then goto L4634b4;
  #L463460.  v0:= "Proxy-Authorization" @kind object;
  #L463464.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L46346a.  v0:= temp;
  #L46346c.  if v0 != 0 then goto L4634b4;
  #L463470.  v0:= "TE" @kind object;
  #L463474.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L46347a.  v0:= temp;
  #L46347c.  if v0 != 0 then goto L4634b4;
  #L463480.  v0:= "Trailers" @kind object;
  #L463484.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L46348a.  v0:= temp;
  #L46348c.  if v0 != 0 then goto L4634b4;
  #L463490.  v0:= "Transfer-Encoding" @kind object;
  #L463494.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L46349a.  v0:= temp;
  #L46349c.  if v0 != 0 then goto L4634b4;
  #L4634a0.  v0:= "Upgrade" @kind object;
  #L4634a4.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4634aa.  v1:= temp;
  #L4634ac.  if v1 != 0 then goto L4634b4;
  #L4634b0.  v1:= 1I;
  #L4634b2.  goto L4634b6;
  #L4634b4.  v1:= 0I;
  #L4634b6.  return v1;
}
procedure `okhttp3.Response` `stripBody`(`okhttp3.Response` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4638d4.  if v1 == 0 then goto L4638fe;
  #L4638d8.  call temp:= `body`(v1) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L4638de.  v0:= temp @kind object;
  #L4638e0.  if v0 == 0 then goto L4638fe;
  #L4638e4.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L4638ea.  v1:= temp @kind object;
  #L4638ec.  v0:= 0I;
  #L4638ee.  call temp:= `body`(v1, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4638f4.  v1:= temp @kind object;
  #L4638f6.  call temp:= `build`(v1) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L4638fc.  v1:= temp @kind object;
  #L4638fe.  return v1 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.cache.CacheInterceptor` v5 @kind this, `okhttp3.Interceptor$Chain` v6 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L463630.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L463634.  if v0 == 0 then goto L46364a;
  #L463638.  call temp:= `request`(v6) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L46363e.  v1:= temp @kind object;
  #L463640.  call temp:= `get`(v0, v1) @signature `Lokhttp3/internal/cache/InternalCache;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L463646.  v0:= temp @kind object;
  #L463648.  goto L46364c;
  #L46364a.  v0:= 0I;
  #L46364c.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L463652.  v1:= temp @kind wide;
  #L463654.  v3:= new `okhttp3.internal.cache.CacheStrategy$Factory`;
  #L463658.  call temp:= `request`(v6) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L46365e.  v4:= temp @kind object;
  #L463660.  call `<init>`(v3, v1, v4, v0) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L463666.  call temp:= `get`(v3) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @kind virtual;
  #L46366c.  v1:= temp @kind object;
  #L46366e.  v2:= v1.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L463672.  v3:= v1.`okhttp3.internal.cache.CacheStrategy.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L463676.  v4:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L46367a.  if v4 == 0 then goto L463684;
  #L46367e.  call `trackResponse`(v4, v1) @signature `Lokhttp3/internal/cache/InternalCache;.trackResponse:(Lokhttp3/internal/cache/CacheStrategy;)V` @kind interface;
  #L463684.  if v0 == 0 then goto L46369a;
  #L463688.  if v3 != 0 then goto L46369a;
  #L46368c.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L463692.  v1:= temp @kind object;
  #L463694.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L46369a.  if v2 != 0 then goto L463712;
  #L46369e.  if v3 != 0 then goto L463712;
  #L4636a2.  v0:= new `okhttp3.Response$Builder`;
  #L4636a6.  call `<init>`(v0) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L4636ac.  call temp:= `request`(v6) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L4636b2.  v6:= temp @kind object;
  #L4636b4.  call temp:= `request`(v0, v6) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4636ba.  v6:= temp @kind object;
  #L4636bc.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L4636c0.  call temp:= `protocol`(v6, v0) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4636c6.  v6:= temp @kind object;
  #L4636c8.  v0:= 504I;
  #L4636cc.  call temp:= `code`(v6, v0) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L4636d2.  v6:= temp @kind object;
  #L4636d4.  v0:= "Unsatisfiable Request (only-if-cached)" @kind object;
  #L4636d8.  call temp:= `message`(v6, v0) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4636de.  v6:= temp @kind object;
  #L4636e0.  v0:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L4636e4.  call temp:= `body`(v6, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4636ea.  v6:= temp @kind object;
  #L4636ec.  v0:= -1L;
  #L4636f0.  call temp:= `sentRequestAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L4636f6.  v6:= temp @kind object;
  #L4636f8.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L4636fe.  v0:= temp @kind wide;
  #L463700.  call temp:= `receivedResponseAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L463706.  v6:= temp @kind object;
  #L463708.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L46370e.  v6:= temp @kind object;
  #L463710.  return v6 @kind object;
  #L463712.  if v2 != 0 then goto L463738;
  #L463716.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L46371c.  v6:= temp @kind object;
  #L46371e.  call temp:= `stripBody`(v3) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L463724.  v0:= temp @kind object;
  #L463726.  call temp:= `cacheResponse`(v6, v0) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L46372c.  v6:= temp @kind object;
  #L46372e.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L463734.  v6:= temp @kind object;
  #L463736.  return v6 @kind object;
  #L463738.  call temp:= `proceed`(v6, v2) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L46373e.  v6:= temp @kind object;
  #L463740.  if v6 != 0 then goto L463756;
  #L463744.  if v0 == 0 then goto L463756;
  #L463748.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L46374e.  v0:= temp @kind object;
  #L463750.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L463756.  if v3 == 0 then goto L46380c;
  #L46375a.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L463760.  v0:= temp;
  #L463762.  v1:= 304I;
  #L463766.  if v0 != v1 then goto L4637fe;
  #L46376a.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L463770.  v0:= temp @kind object;
  #L463772.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L463778.  v1:= temp @kind object;
  #L46377a.  call temp:= `headers`(v6) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L463780.  v2:= temp @kind object;
  #L463782.  call temp:= `combine`(v1, v2) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind static;
  #L463788.  v1:= temp @kind object;
  #L46378a.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L463790.  v0:= temp @kind object;
  #L463792.  call temp:= `sentRequestAtMillis`(v6) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L463798.  v1:= temp @kind wide;
  #L46379a.  call temp:= `sentRequestAtMillis`(v0, v1) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L4637a0.  v0:= temp @kind object;
  #L4637a2.  call temp:= `receivedResponseAtMillis`(v6) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L4637a8.  v1:= temp @kind wide;
  #L4637aa.  call temp:= `receivedResponseAtMillis`(v0, v1) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L4637b0.  v0:= temp @kind object;
  #L4637b2.  call temp:= `stripBody`(v3) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L4637b8.  v1:= temp @kind object;
  #L4637ba.  call temp:= `cacheResponse`(v0, v1) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4637c0.  v0:= temp @kind object;
  #L4637c2.  call temp:= `stripBody`(v6) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L4637c8.  v1:= temp @kind object;
  #L4637ca.  call temp:= `networkResponse`(v0, v1) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4637d0.  v0:= temp @kind object;
  #L4637d2.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L4637d8.  v0:= temp @kind object;
  #L4637da.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L4637e0.  v6:= temp @kind object;
  #L4637e2.  call `close`(v6) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L4637e8.  v6:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L4637ec.  call `trackConditionalCacheHit`(v6) @signature `Lokhttp3/internal/cache/InternalCache;.trackConditionalCacheHit:()V` @kind interface;
  #L4637f2.  v6:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L4637f6.  call `update`(v6, v3, v0) @signature `Lokhttp3/internal/cache/InternalCache;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @kind interface;
  #L4637fc.  return v0 @kind object;
  #L4637fe.  call temp:= `body`(v3) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L463804.  v0:= temp @kind object;
  #L463806.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L46380c.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L463812.  v0:= temp @kind object;
  #L463814.  call temp:= `stripBody`(v3) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L46381a.  v1:= temp @kind object;
  #L46381c.  call temp:= `cacheResponse`(v0, v1) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L463822.  v0:= temp @kind object;
  #L463824.  call temp:= `stripBody`(v6) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L46382a.  v6:= temp @kind object;
  #L46382c.  call temp:= `networkResponse`(v0, v6) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L463832.  v6:= temp @kind object;
  #L463834.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L46383a.  v6:= temp @kind object;
  #L46383c.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L463840.  if v0 == 0 then goto L463890;
  #L463844.  call temp:= `hasBody`(v6) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @kind static;
  #L46384a.  v0:= temp;
  #L46384c.  if v0 == 0 then goto L463872;
  #L463850.  call temp:= `isCacheable`(v6, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L463856.  v0:= temp;
  #L463858.  if v0 == 0 then goto L463872;
  #L46385c.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L463860.  call temp:= `put`(v0, v6) @signature `Lokhttp3/internal/cache/InternalCache;.put:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @kind interface;
  #L463866.  v0:= temp @kind object;
  #L463868.  call temp:= `cacheWritingResponse`(v5, v0, v6) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @kind direct;
  #L46386e.  v6:= temp @kind object;
  #L463870.  return v6 @kind object;
  #L463872.  call temp:= `method`(v2) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L463878.  v0:= temp @kind object;
  #L46387a.  call temp:= `invalidatesCache`(v0) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind static;
  #L463880.  v0:= temp;
  #L463882.  if v0 == 0 then goto L463890;
  #L463886.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L46388a.  call `remove`(v0, v2) @signature `Lokhttp3/internal/cache/InternalCache;.remove:(Lokhttp3/Request;)V` @kind interface;
  #L463890.  return v6 @kind object;
  #L463892.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L463894.  if v0 == 0 then goto L4638a6;
  #L463898.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L46389e.  v0:= temp @kind object;
  #L4638a0.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L4638a6.  throw v6;
  catch `java.lang.Throwable` @[L463738..L463740] goto L463892;
  catch `java.io.IOException` @[L463886..L463890] goto L463890;
}
