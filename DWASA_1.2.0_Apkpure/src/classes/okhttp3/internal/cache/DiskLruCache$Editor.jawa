record `okhttp3.internal.cache.DiskLruCache$Editor` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.internal.cache.DiskLruCache$Editor.done` @AccessFlag PRIVATE;
  `okhttp3.internal.cache.DiskLruCache$Entry` `okhttp3.internal.cache.DiskLruCache$Editor.entry` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Editor.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean`[] `okhttp3.internal.cache.DiskLruCache$Editor.written` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Editor` v0 @kind this, `okhttp3.internal.cache.DiskLruCache` v1 @kind object, `okhttp3.internal.cache.DiskLruCache$Entry` v2 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Lokhttp3/internal/cache/DiskLruCache$Entry;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L464440.  v0.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v1 @kind object;
  #L464444.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46444a.  v0.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` := v2 @kind object;
  #L46444e.  v2:= v2.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L464452.  if v2 == 0 then goto L46445a;
  #L464456.  v1:= 0I;
  #L464458.  goto L464462;
  #L46445a.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L46445e.  v1:= new `boolean`[v1];
  #L464462.  v0.`okhttp3.internal.cache.DiskLruCache$Editor.written` @type ^`boolean`[] := v1 @kind object;
  #L464466.  return @kind void;
}
procedure `void` `abort`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abort:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L464478.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L46447c.  @monitorenter v0
  #L46447e.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L464482.  if v1 != 0 then goto L4644a8;
  #L464486.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L46448a.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L46448e.  if v1 != v3 then goto L46449e;
  #L464492.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L464496.  v2:= 0I;
  #L464498.  call `completeEdit`(v1, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L46449e.  v1:= 1I;
  #L4644a0.  v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` := v1 @kind boolean;
  #L4644a4.  @monitorexit v0
  #L4644a6.  return @kind void;
  #L4644a8.  v1:= new `java.lang.IllegalStateException`;
  #L4644ac.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L4644b2.  throw v1;
  #L4644b4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4644b6.  @monitorexit v0
  #L4644b8.  throw v1;
  catch `java.lang.Throwable` @[L46447e..L4644b8] goto L4644b4;
}
procedure `void` `abortUnlessCommitted`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abortUnlessCommitted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4644d8.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4644dc.  @monitorenter v0
  #L4644de.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L4644e2.  if v1 != 0 then goto L4644fe;
  #L4644e6.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L4644ea.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L4644ee.  if v1 != v3 then goto L4644fe;
  #L4644f2.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4644f6.  v2:= 0I;
  #L4644f8.  call `completeEdit`(v1, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L4644fe.  @monitorexit v0
  #L464500.  return @kind void;
  #L464502.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L464504.  @monitorexit v0
  #L464506.  throw v1;
  catch `java.lang.Throwable` @[L4644de..L4644ee] goto L464502;
  catch `java.io.IOException` @[L4644f2..L4644fe] goto L4644fe;
  catch `java.lang.Throwable` @[L4644f2..L4644fe] goto L464502;
  catch `java.lang.Throwable` @[L4644fe..L464506] goto L464502;
}
procedure `void` `commit`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L464538.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L46453c.  @monitorenter v0
  #L46453e.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L464542.  if v1 != 0 then goto L464566;
  #L464546.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L46454a.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L46454e.  v2:= 1I;
  #L464550.  if v1 != v3 then goto L46455e;
  #L464554.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L464558.  call `completeEdit`(v1, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L46455e.  v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` := v2 @kind boolean;
  #L464562.  @monitorexit v0
  #L464564.  return @kind void;
  #L464566.  v1:= new `java.lang.IllegalStateException`;
  #L46456a.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L464570.  throw v1;
  #L464572.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L464574.  @monitorexit v0
  #L464576.  throw v1;
  catch `java.lang.Throwable` @[L46453e..L464576] goto L464572;
}
procedure `void` `detach`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.detach:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L464594.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L464598.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L46459c.  if v0 != v3 then goto L4645d8;
  #L4645a0.  v0:= 0I;
  #L4645a2.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4645a6.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L4645aa.  if v0 >= v1 then goto L4645ce;
  #L4645ae.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4645b2.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L4645b6.  v2:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L4645ba.  v2:= v2.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L4645be.  v2:= v2[v0] @kind object;
  #L4645c2.  call `delete`(v1, v2) @signature `Lokhttp3/internal/io/FileSystem;.delete:(Ljava/io/File;)V` @kind interface;
  #L4645c8.  v0:= v0 + 1;
  #L4645cc.  goto L4645a2;
  #L4645ce.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L4645d2.  v1:= 0I;
  #L4645d4.  v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` := v1 @kind object;
  #L4645d8.  return @kind void;
  catch `java.io.IOException` @[L4645ae..L4645c8] goto L4645c8;
}
procedure `okio.Sink` `newSink`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this, `int` v4 ) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4642f8.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4642fc.  @monitorenter v0
  #L4642fe.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L464302.  if v1 != 0 then goto L46436a;
  #L464306.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L46430a.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L46430e.  if v1 == v3 then goto L46431e;
  #L464312.  call temp:= `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @kind static;
  #L464318.  v4:= temp @kind object;
  #L46431a.  @monitorexit v0
  #L46431c.  return v4 @kind object;
  #L46431e.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L464322.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L464326.  if v1 != 0 then goto L464334;
  #L46432a.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.written` @type ^`boolean`[] @kind object;
  #L46432e.  v2:= 1I;
  #L464330.  v1[v4]:= v2 @kind boolean;
  #L464334.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L464338.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L46433c.  v4:= v1[v4] @kind object;
  #L464340.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L464344.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L464348.  call temp:= `sink`(v1, v4) @signature `Lokhttp3/internal/io/FileSystem;.sink:(Ljava/io/File;)Lokio/Sink;` @kind interface;
  #L46434e.  v4:= temp @kind object;
  #L464350.  v1:= new `okhttp3.internal.cache.DiskLruCache$Editor$1`;
  #L464354.  call `<init>`(v1, v3, v4) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor$1;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Editor;Lokio/Sink;)V` @kind direct;
  #L46435a.  @monitorexit v0
  #L46435c.  return v1 @kind object;
  #L46435e.  call temp:= `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @kind static;
  #L464364.  v4:= temp @kind object;
  #L464366.  @monitorexit v0
  #L464368.  return v4 @kind object;
  #L46436a.  v4:= new `java.lang.IllegalStateException`;
  #L46436e.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L464374.  throw v4;
  #L464376.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L464378.  @monitorexit v0
  #L46437a.  throw v4;
  catch `java.lang.Throwable` @[L4642fe..L464340] goto L464376;
  catch `java.io.FileNotFoundException` @[L464340..L464350] goto L46435e;
  catch `java.lang.Throwable` @[L464340..L464350] goto L464376;
  catch `java.lang.Throwable` @[L464350..L46437a] goto L464376;
}
procedure `okio.Source` `newSource`(`okhttp3.internal.cache.DiskLruCache$Editor` v4 @kind this, `int` v5 ) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSource:(I)Lokio/Source;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4643ac.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4643b0.  @monitorenter v0
  #L4643b2.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L4643b6.  if v1 != 0 then goto L4643fe;
  #L4643ba.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L4643be.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L4643c2.  v2:= 0I;
  #L4643c4.  if v1 == 0 then goto L4643fa;
  #L4643c8.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L4643cc.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L4643d0.  if v1 == v4 then goto L4643d6;
  #L4643d4.  goto L4643fa;
  #L4643d6.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L4643da.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L4643de.  v3:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L4643e2.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L4643e6.  v5:= v3[v5] @kind object;
  #L4643ea.  call temp:= `source`(v1, v5) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #L4643f0.  v5:= temp @kind object;
  #L4643f2.  @monitorexit v0
  #L4643f4.  return v5 @kind object;
  #L4643f6.  @monitorexit v0
  #L4643f8.  return v2 @kind object;
  #L4643fa.  @monitorexit v0
  #L4643fc.  return v2 @kind object;
  #L4643fe.  v5:= new `java.lang.IllegalStateException`;
  #L464402.  call `<init>`(v5) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L464408.  throw v5;
  #L46440a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46440c.  @monitorexit v0
  #L46440e.  throw v5;
  catch `java.lang.Throwable` @[L4643b2..L4643d0] goto L46440a;
  catch `java.io.FileNotFoundException` @[L4643d6..L4643f2] goto L4643f6;
  catch `java.lang.Throwable` @[L4643d6..L4643f2] goto L46440a;
  catch `java.lang.Throwable` @[L4643f2..L46440e] goto L46440a;
}
