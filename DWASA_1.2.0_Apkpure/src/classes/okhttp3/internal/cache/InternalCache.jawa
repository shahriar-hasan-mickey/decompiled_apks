record `okhttp3.internal.cache.InternalCache` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `okhttp3.Response` `get`(`okhttp3.Request` v0 @kind object) @signature `Lokhttp3/internal/cache/InternalCache;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.internal.cache.CacheRequest` `put`(`okhttp3.Response` v0 @kind object) @signature `Lokhttp3/internal/cache/InternalCache;.put:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `remove`(`okhttp3.Request` v0 @kind object) @signature `Lokhttp3/internal/cache/InternalCache;.remove:(Lokhttp3/Request;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `trackConditionalCacheHit`() @signature `Lokhttp3/internal/cache/InternalCache;.trackConditionalCacheHit:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `trackResponse`(`okhttp3.internal.cache.CacheStrategy` v0 @kind object) @signature `Lokhttp3/internal/cache/InternalCache;.trackResponse:(Lokhttp3/internal/cache/CacheStrategy;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `update`(`okhttp3.Response` v0 @kind object, `okhttp3.Response` v1 @kind object) @signature `Lokhttp3/internal/cache/InternalCache;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
