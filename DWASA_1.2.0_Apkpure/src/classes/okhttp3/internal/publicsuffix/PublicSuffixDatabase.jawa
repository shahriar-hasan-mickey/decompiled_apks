record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @AccessFlag PRIVATE;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EXCEPTION_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PUBLIC_SUFFIX_RESOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47422c.  v0:= 1I;
  #L47422e.  v1:= new `byte`[v0];
  #L474232.  v2:= 0I;
  #L474234.  v3:= 42I;
  #L474238.  v1[v2]:= v3 @kind byte;
  #L47423c.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] := v1 @kind object;
  #L474240.  v1:= new `java.lang.String`[v2];
  #L474244.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] := v1 @kind object;
  #L474248.  v0:= new `java.lang.String`[v0];
  #L47424c.  v1:= "*" @kind object;
  #L474250.  v0[v2]:= v1 @kind object;
  #L474254.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L474258.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L47425c.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L474262.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L474266.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L474278.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47427e.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L474282.  v1:= 0I;
  #L474284.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L47428a.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L47428e.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L474292.  v1:= 1I;
  #L474294.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L47429a.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L47429e.  return @kind void;
}
procedure `java.lang.String` `binarySearchBytes`(`byte`[] v16 @kind object, `byte`[][] v17 @kind object, `int` v18 ) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L473e68.  v0:= v16 @kind object;
  #L473e6c.  v1:= v17 @kind object;
  #L473e70.  v2:= length @variable v0;
  #L473e72.  v3:= 0I;
  #L473e74.  v4:= v2;
  #L473e76.  v2:= 0I;
  #L473e78.  if v2 >= v4 then goto L473f72;
  #L473e7c.  v5:= v2 + v4 @kind int;
  #L473e80.  v5:= v5 / 2;
  #L473e84.  v6:= 10I;
  #L473e88.  v7:= -1I;
  #L473e8a.  if v5 <= v7 then goto L473e9c;
  #L473e8e.  v8:= v0[v5] @kind byte;
  #L473e92.  if v8 == v6 then goto L473e9c;
  #L473e96.  v5:= v5 + -1;
  #L473e9a.  goto L473e84;
  #L473e9c.  v5:= v5 + 1;
  #L473ea0.  v8:= 1I;
  #L473ea2.  v9:= 1I;
  #L473ea4.  v10:= v5 + v9 @kind int;
  #L473ea8.  v11:= v0[v10] @kind byte;
  #L473eac.  if v11 == v6 then goto L473eb6;
  #L473eb0.  v9:= v9 + 1;
  #L473eb4.  goto L473ea4;
  #L473eb6.  v6:= v10 - v5 @kind int;
  #L473eba.  v11:= v18;
  #L473ebe.  v9:= 0I;
  #L473ec0.  v12:= 0I;
  #L473ec2.  v13:= 0I;
  #L473ec4.  if v9 == 0 then goto L473ed4;
  #L473ec8.  v9:= 46I;
  #L473ecc.  v9:= 0I;
  #L473ece.  v14:= 46I;
  #L473ed2.  goto L473ee0;
  #L473ed4.  v14:= v1[v11] @kind object;
  #L473ed8.  v14:= v14[v12] @kind byte;
  #L473edc.  v14:= v14 ^& 255;
  #L473ee0.  v15:= v5 + v13 @kind int;
  #L473ee4.  v15:= v0[v15] @kind byte;
  #L473ee8.  v15:= v15 ^& 255;
  #L473eec.  v14:= v14 - v15 @kind int;
  #L473eee.  if v14 == 0 then goto L473ef4;
  #L473ef2.  goto L473f14;
  #L473ef4.  v13:= v13 + 1;
  #L473ef8.  v12:= v12 + 1;
  #L473efc.  if v13 != v6 then goto L473f02;
  #L473f00.  goto L473f14;
  #L473f02.  v15:= v1[v11] @kind object;
  #L473f06.  v15:= length @variable v15;
  #L473f08.  if v15 != v12 then goto L473ec4;
  #L473f0c.  v9:= length @variable v1;
  #L473f0e.  v9:= v9 - v8 @kind int;
  #L473f10.  if v11 != v9 then goto L473f68;
  #L473f14.  if v14 >= 0 then goto L473f20;
  #L473f18.  v5:= v5 + -1;
  #L473f1c.  v4:= v5;
  #L473f1e.  goto L473e78;
  #L473f20.  if v14 <= 0 then goto L473f2c;
  #L473f24.  v10:= v10 + 1;
  #L473f28.  v2:= v10;
  #L473f2a.  goto L473e78;
  #L473f2c.  v7:= v6 - v13 @kind int;
  #L473f30.  v8:= v1[v11] @kind object;
  #L473f34.  v8:= length @variable v8;
  #L473f36.  v8:= v8 - v12 @kind int;
  #L473f38.  v11:= v11 + 1;
  #L473f3c.  v9:= length @variable v1;
  #L473f3e.  if v11 >= v9 then goto L473f4c;
  #L473f42.  v9:= v1[v11] @kind object;
  #L473f46.  v9:= length @variable v9;
  #L473f48.  v8:= v8 + v9 @kind int;
  #L473f4a.  goto L473f38;
  #L473f4c.  if v8 >= v7 then goto L473f52;
  #L473f50.  goto L473f18;
  #L473f52.  if v8 <= v7 then goto L473f58;
  #L473f56.  goto L473f24;
  #L473f58.  v1:= new `java.lang.String`;
  #L473f5c.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L473f60.  call `<init>`(v1, v0, v5, v6, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L473f66.  goto L473f74;
  #L473f68.  v11:= v11 + 1;
  #L473f6c.  v9:= 1I;
  #L473f6e.  v12:= -1I;
  #L473f70.  goto L473ec4;
  #L473f72.  v1:= 0I;
  #L473f74.  return v1 @kind object;
}
procedure `java.lang.String`[] `findMatchingRule`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String`[] v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47405c.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L474060.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L474066.  v0:= temp;
  #L474068.  v1:= 0I;
  #L47406a.  v2:= 1I;
  #L47406c.  if v0 != 0 then goto L474088;
  #L474070.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L474074.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L47407a.  v0:= temp;
  #L47407c.  if v0 == 0 then goto L474088;
  #L474080.  call `readTheListUninterruptibly`(v7) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @kind direct;
  #L474086.  goto L474092;
  #L474088.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L47408c.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L474092.  @monitorenter v7
  #L474094.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L474098.  if v0 == 0 then goto L4741ca;
  #L47409c.  @monitorexit v7
  #L47409e.  v0:= length @variable v8;
  #L4740a0.  v0:= new `byte`[][v0];
  #L4740a4.  v3:= 0I;
  #L4740a6.  v4:= length @variable v8;
  #L4740a8.  if v3 >= v4 then goto L4740c6;
  #L4740ac.  v4:= v8[v3] @kind object;
  #L4740b0.  v5:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L4740b4.  call temp:= `getBytes`(v4, v5) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L4740ba.  v4:= temp @kind object;
  #L4740bc.  v0[v3]:= v4 @kind object;
  #L4740c0.  v3:= v3 + 1;
  #L4740c4.  goto L4740a6;
  #L4740c6.  v8:= 0I;
  #L4740c8.  v3:= length @variable v0;
  #L4740ca.  v4:= 0I;
  #L4740cc.  if v8 >= v3 then goto L4740e8;
  #L4740d0.  v3:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L4740d4.  call temp:= `binarySearchBytes`(v3, v0, v8) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L4740da.  v3:= temp @kind object;
  #L4740dc.  if v3 == 0 then goto L4740e2;
  #L4740e0.  goto L4740ea;
  #L4740e2.  v8:= v8 + 1;
  #L4740e6.  goto L4740c8;
  #L4740e8.  v3:= v4 @kind object;
  #L4740ea.  v8:= length @variable v0;
  #L4740ec.  if v8 <= v2 then goto L474126;
  #L4740f0.  call temp:= `clone`(v0) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L4740f6.  v8:= temp @kind object;
  #L4740f8.  v8:= (`byte`[][]) v8 @kind object;
  #L4740fc.  v5:= 0I;
  #L4740fe.  v6:= length @variable v8;
  #L474100.  v6:= v6 - v2 @kind int;
  #L474102.  if v5 >= v6 then goto L474126;
  #L474106.  v6:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] @kind object;
  #L47410a.  v8[v5]:= v6 @kind object;
  #L47410e.  v6:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L474112.  call temp:= `binarySearchBytes`(v6, v8, v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L474118.  v6:= temp @kind object;
  #L47411a.  if v6 == 0 then goto L474120;
  #L47411e.  goto L474128;
  #L474120.  v5:= v5 + 1;
  #L474124.  goto L4740fe;
  #L474126.  v6:= v4 @kind object;
  #L474128.  if v6 == 0 then goto L47414c;
  #L47412c.  v8:= length @variable v0;
  #L47412e.  v8:= v8 - v2 @kind int;
  #L474130.  if v1 >= v8 then goto L47414c;
  #L474134.  v8:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] @kind object;
  #L474138.  call temp:= `binarySearchBytes`(v8, v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L47413e.  v8:= temp @kind object;
  #L474140.  if v8 == 0 then goto L474146;
  #L474144.  goto L47414e;
  #L474146.  v1:= v1 + 1;
  #L47414a.  goto L47412c;
  #L47414c.  v8:= v4 @kind object;
  #L47414e.  if v8 == 0 then goto L474182;
  #L474152.  v0:= new `java.lang.StringBuilder`;
  #L474156.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47415c.  v1:= "!" @kind object;
  #L474160.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L474166.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47416c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L474172.  v8:= temp @kind object;
  #L474174.  v0:= "\\." @kind object;
  #L474178.  call temp:= `split`(v8, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L47417e.  v8:= temp @kind object;
  #L474180.  return v8 @kind object;
  #L474182.  if v3 != 0 then goto L474190;
  #L474186.  if v6 != 0 then goto L474190;
  #L47418a.  v8:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] @kind object;
  #L47418e.  return v8 @kind object;
  #L474190.  if v3 == 0 then goto L4741a2;
  #L474194.  v8:= "\\." @kind object;
  #L474198.  call temp:= `split`(v3, v8) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L47419e.  v8:= temp @kind object;
  #L4741a0.  goto L4741a6;
  #L4741a2.  v8:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L4741a6.  if v6 == 0 then goto L4741b8;
  #L4741aa.  v0:= "\\." @kind object;
  #L4741ae.  call temp:= `split`(v6, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L4741b4.  v0:= temp @kind object;
  #L4741b6.  goto L4741bc;
  #L4741b8.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L4741bc.  v1:= length @variable v8;
  #L4741be.  v2:= length @variable v0;
  #L4741c0.  if v1 <= v2 then goto L4741c6;
  #L4741c4.  goto L4741c8;
  #L4741c6.  v8:= v0 @kind object;
  #L4741c8.  return v8 @kind object;
  #L4741ca.  v8:= new `java.lang.IllegalStateException`;
  #L4741ce.  v0:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L4741d2.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4741d8.  throw v8;
  #L4741da.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4741dc.  @monitorexit v7
  #L4741de.  goto L4741e2;
  #L4741e0.  throw v8;
  #L4741e2.  goto L4741e0;
  catch `java.lang.InterruptedException` @[L474088..L474092] goto L474092;
  catch `java.lang.Throwable` @[L474094..L47409e] goto L4741da;
  catch `java.lang.Throwable` @[L4741ca..L4741de] goto L4741da;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L474214.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L474218.  return v0 @kind object;
}
procedure `void` `readTheList`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v3 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4742b0.  v0:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L4742b4.  v1:= "publicsuffixes.gz" @kind object;
  #L4742b8.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L4742be.  v0:= temp @kind object;
  #L4742c0.  if v0 != 0 then goto L4742c6;
  #L4742c4.  return @kind void;
  #L4742c6.  v1:= new `okio.GzipSource`;
  #L4742ca.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L4742d0.  v0:= temp @kind object;
  #L4742d2.  call `<init>`(v1, v0) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L4742d8.  call temp:= `buffer`(v1) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L4742de.  v0:= temp @kind object;
  #L4742e0.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L4742e6.  v1:= temp;
  #L4742e8.  v1:= new `byte`[v1];
  #L4742ec.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L4742f2.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L4742f8.  v2:= temp;
  #L4742fa.  v2:= new `byte`[v2];
  #L4742fe.  call `readFully`(v0, v2) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L474304.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L47430a.  @monitorenter v3
  #L47430c.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v1 @kind object;
  #L474310.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v2 @kind object;
  #L474314.  @monitorexit v3
  #L474316.  v0:= v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L47431a.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L474320.  return @kind void;
  #L474322.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L474324.  @monitorexit v3
  #L474326.  throw v0;
  #L474328.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47432a.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L474330.  throw v1;
  catch `java.lang.Throwable` @[L4742e0..L474304] goto L474328;
  catch `java.lang.Throwable` @[L47430c..L474316] goto L474322;
  catch `java.lang.Throwable` @[L474324..L474326] goto L474322;
}
procedure `void` `readTheListUninterruptibly`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L474364.  v0:= 0I;
  #L474366.  call `readTheList`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @kind direct;
  #L47436c.  if v0 == 0 then goto L47437e;
  #L474370.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L474376.  v0:= temp @kind object;
  #L474378.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L47437e.  return @kind void;
  #L474380.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L474382.  goto L4743ae;
  #L474384.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L474386.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L47438c.  v2:= temp @kind object;
  #L47438e.  v3:= 5I;
  #L474390.  v4:= "Failed to read public suffix list" @kind object;
  #L474394.  call `log`(v2, v3, v4, v1) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L47439a.  if v0 == 0 then goto L4743ac;
  #L47439e.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4743a4.  v0:= temp @kind object;
  #L4743a6.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L4743ac.  return @kind void;
  #L4743ae.  if v0 == 0 then goto L4743c0;
  #L4743b2.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4743b8.  v0:= temp @kind object;
  #L4743ba.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L4743c0.  throw v1;
  #L4743c2.  v0:= 1I;
  #L4743c4.  goto L474366;
  catch `java.io.InterruptedIOException` @[L474366..L47436c] goto L4743c2;
  catch `java.io.IOException` @[L474366..L47436c] goto L474384;
  catch `java.lang.Throwable` @[L474366..L47436c] goto L474380;
  catch `java.lang.Throwable` @[L474386..L47439a] goto L474380;
}
procedure `java.lang.String` `getEffectiveTldPlusOne`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L473f88.  if v8 == 0 then goto L474038;
  #L473f8c.  call temp:= `toUnicode`(v8) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L473f92.  v0:= temp @kind object;
  #L473f94.  v1:= "\\." @kind object;
  #L473f98.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L473f9e.  v0:= temp @kind object;
  #L473fa0.  call temp:= `findMatchingRule`(v7, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L473fa6.  v2:= temp @kind object;
  #L473fa8.  v3:= length @variable v0;
  #L473faa.  v4:= length @variable v2;
  #L473fac.  v5:= 33I;
  #L473fb0.  v6:= 0I;
  #L473fb2.  if v3 != v4 then goto L473fca;
  #L473fb6.  v3:= v2[v6] @kind object;
  #L473fba.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L473fc0.  v3:= temp;
  #L473fc2.  if v3 == v5 then goto L473fca;
  #L473fc6.  v8:= 0I;
  #L473fc8.  return v8 @kind object;
  #L473fca.  v3:= v2[v6] @kind object;
  #L473fce.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L473fd4.  v3:= temp;
  #L473fd6.  if v3 != v5 then goto L473fe0;
  #L473fda.  v0:= length @variable v0;
  #L473fdc.  v2:= length @variable v2;
  #L473fde.  goto L473fe8;
  #L473fe0.  v0:= length @variable v0;
  #L473fe2.  v2:= length @variable v2;
  #L473fe4.  v2:= v2 + 1;
  #L473fe8.  v0:= v0 - v2 @kind int;
  #L473fea.  v2:= new `java.lang.StringBuilder`;
  #L473fee.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473ff4.  call temp:= `split`(v8, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L473ffa.  v8:= temp @kind object;
  #L473ffc.  v1:= length @variable v8;
  #L473ffe.  if v0 >= v1 then goto L47401c;
  #L474002.  v1:= v8[v0] @kind object;
  #L474006.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47400c.  v1:= 46I;
  #L474010.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L474016.  v0:= v0 + 1;
  #L47401a.  goto L473ffc;
  #L47401c.  call temp:= `length`(v2) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L474022.  v8:= temp;
  #L474024.  v8:= v8 + -1;
  #L474028.  call temp:= `deleteCharAt`(v2, v8) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47402e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L474034.  v8:= temp @kind object;
  #L474036.  return v8 @kind object;
  #L474038.  v8:= new `java.lang.NullPointerException`;
  #L47403c.  v0:= "domain == null" @kind object;
  #L474040.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L474046.  goto L47404a;
  #L474048.  throw v8;
  #L47404a.  goto L474048;
}
procedure `void` `setListBytes`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.setListBytes:([B[B)V` @AccessFlag  {
    temp;

  #L4743f4.  v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v1 @kind object;
  #L4743f8.  v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v2 @kind object;
  #L4743fc.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L474400.  v2:= 1I;
  #L474402.  call `set`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L474408.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L47440c.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L474412.  return @kind void;
}
