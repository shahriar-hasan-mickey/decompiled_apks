record `okhttp3.internal.tls.OkHostnameVerifier` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_DNS_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_IPA_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.tls.OkHostnameVerifier` `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L475654.  v0:= new `okhttp3.internal.tls.OkHostnameVerifier`;
  #L475658.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @kind direct;
  #L47565e.  `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` := v0 @kind object;
  #L475662.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.tls.OkHostnameVerifier` v0 @kind this) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L475674.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47567a.  return @kind void;
}
procedure `java.util.List` `allSubjectAltNames`(`java.security.cert.X509Certificate` v4 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L475548.  v0:= 7I;
  #L47554a.  call temp:= `getSubjectAltNames`(v4, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L475550.  v0:= temp @kind object;
  #L475552.  v1:= 2I;
  #L475554.  call temp:= `getSubjectAltNames`(v4, v1) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L47555a.  v4:= temp @kind object;
  #L47555c.  v1:= new `java.util.ArrayList`;
  #L475560.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L475566.  v2:= temp;
  #L475568.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L47556e.  v3:= temp;
  #L475570.  v2:= v2 + v3 @kind int;
  #L475572.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L475578.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L47557e.  call temp:= `addAll`(v1, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L475584.  return v1 @kind object;
}
procedure `java.util.List` `getSubjectAltNames`(`java.security.cert.X509Certificate` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L475598.  v0:= new `java.util.ArrayList`;
  #L47559c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4755a2.  call temp:= `getSubjectAlternativeNames`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L4755a8.  v4:= temp @kind object;
  #L4755aa.  if v4 != 0 then goto L4755b8;
  #L4755ae.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4755b4.  v4:= temp @kind object;
  #L4755b6.  return v4 @kind object;
  #L4755b8.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4755be.  v4:= temp @kind object;
  #L4755c0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4755c6.  v1:= temp;
  #L4755c8.  if v1 == 0 then goto L475626;
  #L4755cc.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4755d2.  v1:= temp @kind object;
  #L4755d4.  v1:= (`java.util.List`) v1 @kind object;
  #L4755d8.  if v1 == 0 then goto L4755c0;
  #L4755dc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4755e2.  v2:= temp;
  #L4755e4.  v3:= 2I;
  #L4755e6.  if v2 >= v3 then goto L4755ec;
  #L4755ea.  goto L4755c0;
  #L4755ec.  v2:= 0I;
  #L4755ee.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4755f4.  v2:= temp @kind object;
  #L4755f6.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L4755fa.  if v2 != 0 then goto L475600;
  #L4755fe.  goto L4755c0;
  #L475600.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L475606.  v2:= temp;
  #L475608.  if v2 != v5 then goto L4755c0;
  #L47560c.  v2:= 1I;
  #L47560e.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L475614.  v1:= temp @kind object;
  #L475616.  v1:= (`java.lang.String`) v1 @kind object;
  #L47561a.  if v1 == 0 then goto L4755c0;
  #L47561e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L475624.  goto L4755c0;
  #L475626.  return v0 @kind object;
  #L475628.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L47562e.  v4:= temp @kind object;
  #L475630.  return v4 @kind object;
  catch `java.security.cert.CertificateParsingException` @[L4755a2..L475624] goto L475628;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v6 @kind this, `java.lang.String` v7 @kind object, `java.security.cert.X509Certificate` v8 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L475468.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L47546c.  call temp:= `toLowerCase`(v7, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L475472.  v7:= temp @kind object;
  #L475474.  v0:= 2I;
  #L475476.  call temp:= `getSubjectAltNames`(v8, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L47547c.  v0:= temp @kind object;
  #L47547e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L475484.  v1:= temp;
  #L475486.  v2:= 1I;
  #L475488.  v3:= 0I;
  #L47548a.  v4:= 0I;
  #L47548c.  v5:= 0I;
  #L47548e.  if v4 >= v1 then goto L4754b4;
  #L475492.  call temp:= `get`(v0, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L475498.  v5:= temp @kind object;
  #L47549a.  v5:= (`java.lang.String`) v5 @kind object;
  #L47549e.  call temp:= `verifyHostname`(v6, v7, v5) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L4754a4.  v5:= temp;
  #L4754a6.  if v5 == 0 then goto L4754ac;
  #L4754aa.  return v2;
  #L4754ac.  v4:= v4 + 1;
  #L4754b0.  v5:= 1I;
  #L4754b2.  goto L47548e;
  #L4754b4.  if v5 != 0 then goto L4754e4;
  #L4754b8.  call temp:= `getSubjectX500Principal`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L4754be.  v8:= temp @kind object;
  #L4754c0.  v0:= new `okhttp3.internal.tls.DistinguishedNameParser`;
  #L4754c4.  call `<init>`(v0, v8) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.<init>:(Ljavax/security/auth/x500/X500Principal;)V` @kind direct;
  #L4754ca.  v8:= "cn" @kind object;
  #L4754ce.  call temp:= `findMostSpecific`(v0, v8) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.findMostSpecific:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4754d4.  v8:= temp @kind object;
  #L4754d6.  if v8 == 0 then goto L4754e4;
  #L4754da.  call temp:= `verifyHostname`(v6, v7, v8) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L4754e0.  v7:= temp;
  #L4754e2.  return v7;
  #L4754e4.  return v3;
}
procedure `boolean` `verifyIpAddress`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object, `java.security.cert.X509Certificate` v6 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4754f8.  v0:= 7I;
  #L4754fa.  call temp:= `getSubjectAltNames`(v6, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L475500.  v6:= temp @kind object;
  #L475502.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L475508.  v0:= temp;
  #L47550a.  v1:= 0I;
  #L47550c.  v2:= 0I;
  #L47550e.  if v2 >= v0 then goto L475534;
  #L475512.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L475518.  v3:= temp @kind object;
  #L47551a.  v3:= (`java.lang.String`) v3 @kind object;
  #L47551e.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L475524.  v3:= temp;
  #L475526.  if v3 == 0 then goto L47552e;
  #L47552a.  v5:= 1I;
  #L47552c.  return v5;
  #L47552e.  v2:= v2 + 1;
  #L475532.  goto L47550e;
  #L475534.  return v1;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47527c.  call temp:= `verifyAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L475282.  v0:= temp;
  #L475284.  if v0 == 0 then goto L475292;
  #L475288.  call temp:= `verifyIpAddress`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L47528e.  v2:= temp;
  #L475290.  goto L47529a;
  #L475292.  call temp:= `verifyHostname`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L475298.  v2:= temp;
  #L47529a.  return v2;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `javax.net.ssl.SSLSession` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4752ac.  v0:= 0I;
  #L4752ae.  call temp:= `getPeerCertificates`(v3) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L4752b4.  v3:= temp @kind object;
  #L4752b6.  v3:= v3[v0] @kind object;
  #L4752ba.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L4752be.  call temp:= `verify`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L4752c4.  v2:= temp;
  #L4752c6.  return v2;
  #L4752c8.  return v0;
  catch `javax.net.ssl.SSLException` @[L4752ae..L4752c6] goto L4752c8;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4752ec.  v0:= 0I;
  #L4752ee.  if v8 == 0 then goto L475454;
  #L4752f2.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4752f8.  v1:= temp;
  #L4752fa.  if v1 == 0 then goto L475454;
  #L4752fe.  v1:= "." @kind object;
  #L475302.  call temp:= `startsWith`(v8, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L475308.  v2:= temp;
  #L47530a.  if v2 != 0 then goto L475454;
  #L47530e.  v2:= ".." @kind object;
  #L475312.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L475318.  v3:= temp;
  #L47531a.  if v3 == 0 then goto L475322;
  #L47531e.  goto L475454;
  #L475322.  if v9 == 0 then goto L475454;
  #L475326.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L47532c.  v3:= temp;
  #L47532e.  if v3 == 0 then goto L475454;
  #L475332.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L475338.  v3:= temp;
  #L47533a.  if v3 != 0 then goto L475454;
  #L47533e.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L475344.  v2:= temp;
  #L475346.  if v2 == 0 then goto L47534e;
  #L47534a.  goto L475454;
  #L47534e.  call temp:= `endsWith`(v8, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L475354.  v2:= temp;
  #L475356.  v3:= 46I;
  #L47535a.  if v2 != 0 then goto L47537c;
  #L47535e.  v2:= new `java.lang.StringBuilder`;
  #L475362.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L475368.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47536e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L475374.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47537a.  v8:= temp @kind object;
  #L47537c.  call temp:= `endsWith`(v9, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L475382.  v1:= temp;
  #L475384.  if v1 != 0 then goto L4753a6;
  #L475388.  v1:= new `java.lang.StringBuilder`;
  #L47538c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L475392.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L475398.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L47539e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4753a4.  v9:= temp @kind object;
  #L4753a6.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L4753aa.  call temp:= `toLowerCase`(v9, v1) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4753b0.  v9:= temp @kind object;
  #L4753b2.  v1:= "*" @kind object;
  #L4753b6.  call temp:= `contains`(v9, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L4753bc.  v1:= temp;
  #L4753be.  if v1 != 0 then goto L4753cc;
  #L4753c2.  call temp:= `equals`(v8, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4753c8.  v8:= temp;
  #L4753ca.  return v8;
  #L4753cc.  v1:= "*." @kind object;
  #L4753d0.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4753d6.  v2:= temp;
  #L4753d8.  if v2 == 0 then goto L475454;
  #L4753dc.  v2:= 42I;
  #L4753e0.  v4:= 1I;
  #L4753e2.  call temp:= `indexOf`(v9, v2, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L4753e8.  v2:= temp;
  #L4753ea.  v5:= -1I;
  #L4753ec.  if v2 == v5 then goto L4753f2;
  #L4753f0.  goto L475454;
  #L4753f2.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4753f8.  v2:= temp;
  #L4753fa.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L475400.  v6:= temp;
  #L475402.  if v2 >= v6 then goto L475408;
  #L475406.  return v0;
  #L475408.  call temp:= `equals`(v1, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L47540e.  v1:= temp;
  #L475410.  if v1 == 0 then goto L475416;
  #L475414.  return v0;
  #L475416.  call temp:= `substring`(v9, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L47541c.  v9:= temp @kind object;
  #L47541e.  call temp:= `endsWith`(v8, v9) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L475424.  v1:= temp;
  #L475426.  if v1 != 0 then goto L47542c;
  #L47542a.  return v0;
  #L47542c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L475432.  v1:= temp;
  #L475434.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L47543a.  v9:= temp;
  #L47543c.  v1:= v1 - v9 @kind int;
  #L47543e.  if v1 <= 0 then goto L475452;
  #L475442.  v1:= v1 - v4 @kind int;
  #L475444.  call temp:= `lastIndexOf`(v8, v3, v1) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L47544a.  v8:= temp;
  #L47544c.  if v8 == v5 then goto L475452;
  #L475450.  return v0;
  #L475452.  return v4;
  #L475454.  return v0;
}
