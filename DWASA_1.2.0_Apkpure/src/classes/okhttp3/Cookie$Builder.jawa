record `okhttp3.Cookie$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie$Builder.domain` @AccessFlag ;
  `long` `okhttp3.Cookie$Builder.expiresAt` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.hostOnly` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.httpOnly` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.name` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.path` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.persistent` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.secure` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.value` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4599d0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4599d6.  v0:= 253402300799999L;
  #L4599e0.  v2.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v0 @kind wide;
  #L4599e4.  v0:= "/" @kind object;
  #L4599e8.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v0 @kind object;
  #L4599ec.  return @kind void;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L459804.  if v3 == 0 then goto L45984c;
  #L459808.  call temp:= `canonicalizeHost`(v3) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L45980e.  v0:= temp @kind object;
  #L459810.  if v0 == 0 then goto L45981e;
  #L459814.  v2.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` := v0 @kind object;
  #L459818.  v2.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` := v4 @kind boolean;
  #L45981c.  return v2 @kind object;
  #L45981e.  v4:= new `java.lang.IllegalArgumentException`;
  #L459822.  v0:= new `java.lang.StringBuilder`;
  #L459826.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45982c.  v1:= "unexpected domain: " @kind object;
  #L459830.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L459836.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45983c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L459842.  v3:= temp @kind object;
  #L459844.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45984a.  throw v4;
  #L45984c.  v3:= new `java.lang.NullPointerException`;
  #L459850.  v4:= "domain == null" @kind object;
  #L459854.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45985a.  throw v3;
}
procedure `okhttp3.Cookie` `build`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.build:()Lokhttp3/Cookie;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4597cc.  v0:= new `okhttp3.Cookie`;
  #L4597d0.  call `<init>`(v0, v1) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @kind direct;
  #L4597d6.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4597e8.  v0:= 0I;
  #L4597ea.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L4597f0.  v2:= temp @kind object;
  #L4597f2.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `expiresAt`(`okhttp3.Cookie$Builder` v3 @kind this, `long` v4 ) @signature `Lokhttp3/Cookie$Builder;.expiresAt:(J)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45986c.  v0:= 0L;
  #L459870.  v2:= lcmp(v4, v0);
  #L459874.  if v2 > 0 then goto L45987c;
  #L459878.  v4:= -9223372036854775808L;
  #L45987c.  v0:= 253402300799999L;
  #L459886.  v2:= lcmp(v4, v0);
  #L45988a.  if v2 <= 0 then goto L459890;
  #L45988e.  v4:= v0 @kind wide;
  #L459890.  v3.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v4 @kind wide;
  #L459894.  v4:= 1I;
  #L459896.  v3.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` := v4 @kind boolean;
  #L45989a.  return v3 @kind object;
}
procedure `okhttp3.Cookie$Builder` `hostOnlyDomain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.hostOnlyDomain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4598ac.  v0:= 1I;
  #L4598ae.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L4598b4.  v2:= temp @kind object;
  #L4598b6.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `httpOnly`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.httpOnly:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4598c8.  v0:= 1I;
  #L4598ca.  v1.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L4598ce.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `name`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.name:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4598e0.  if v2 == 0 then goto L45990e;
  #L4598e4.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L4598ea.  v0:= temp @kind object;
  #L4598ec.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4598f2.  v0:= temp;
  #L4598f4.  if v0 == 0 then goto L4598fe;
  #L4598f8.  v1.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` := v2 @kind object;
  #L4598fc.  return v1 @kind object;
  #L4598fe.  v2:= new `java.lang.IllegalArgumentException`;
  #L459902.  v0:= "name is not trimmed" @kind object;
  #L459906.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45990c.  throw v2;
  #L45990e.  v2:= new `java.lang.NullPointerException`;
  #L459912.  v0:= "name == null" @kind object;
  #L459916.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45991c.  throw v2;
}
procedure `okhttp3.Cookie$Builder` `path`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.path:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459930.  v0:= "/" @kind object;
  #L459934.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L45993a.  v0:= temp;
  #L45993c.  if v0 == 0 then goto L459946;
  #L459940.  v1.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v2 @kind object;
  #L459944.  return v1 @kind object;
  #L459946.  v2:= new `java.lang.IllegalArgumentException`;
  #L45994a.  v0:= "path must start with '/'" @kind object;
  #L45994e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L459954.  throw v2;
}
procedure `okhttp3.Cookie$Builder` `secure`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.secure:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459968.  v0:= 1I;
  #L45996a.  v1.`okhttp3.Cookie$Builder.secure` @type ^`boolean` := v0 @kind boolean;
  #L45996e.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `value`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.value:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459980.  if v2 == 0 then goto L4599ae;
  #L459984.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L45998a.  v0:= temp @kind object;
  #L45998c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L459992.  v0:= temp;
  #L459994.  if v0 == 0 then goto L45999e;
  #L459998.  v1.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` := v2 @kind object;
  #L45999c.  return v1 @kind object;
  #L45999e.  v2:= new `java.lang.IllegalArgumentException`;
  #L4599a2.  v0:= "value is not trimmed" @kind object;
  #L4599a6.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4599ac.  throw v2;
  #L4599ae.  v2:= new `java.lang.NullPointerException`;
  #L4599b2.  v0:= "value == null" @kind object;
  #L4599b6.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4599bc.  throw v2;
}
