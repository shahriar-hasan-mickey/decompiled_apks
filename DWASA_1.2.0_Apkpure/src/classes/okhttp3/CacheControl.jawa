record `okhttp3.CacheControl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.CacheControl.headerValue` @AccessFlag ;
  `boolean` `okhttp3.CacheControl.immutable` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.isPrivate` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.isPublic` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.maxAgeSeconds` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.maxStaleSeconds` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.minFreshSeconds` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.mustRevalidate` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.noCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.noStore` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.noTransform` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.onlyIfCached` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.sMaxAgeSeconds` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.CacheControl` `@@okhttp3.CacheControl.FORCE_CACHE` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.CacheControl` `@@okhttp3.CacheControl.FORCE_NETWORK` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/CacheControl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L456ee0.  v0:= new `okhttp3.CacheControl$Builder`;
  #L456ee4.  call `<init>`(v0) @signature `Lokhttp3/CacheControl$Builder;.<init>:()V` @kind direct;
  #L456eea.  call temp:= `noCache`(v0) @signature `Lokhttp3/CacheControl$Builder;.noCache:()Lokhttp3/CacheControl$Builder;` @kind virtual;
  #L456ef0.  v0:= temp @kind object;
  #L456ef2.  call temp:= `build`(v0) @signature `Lokhttp3/CacheControl$Builder;.build:()Lokhttp3/CacheControl;` @kind virtual;
  #L456ef8.  v0:= temp @kind object;
  #L456efa.  `@@okhttp3.CacheControl.FORCE_NETWORK` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L456efe.  v0:= new `okhttp3.CacheControl$Builder`;
  #L456f02.  call `<init>`(v0) @signature `Lokhttp3/CacheControl$Builder;.<init>:()V` @kind direct;
  #L456f08.  call temp:= `onlyIfCached`(v0) @signature `Lokhttp3/CacheControl$Builder;.onlyIfCached:()Lokhttp3/CacheControl$Builder;` @kind virtual;
  #L456f0e.  v0:= temp @kind object;
  #L456f10.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L456f14.  v2:= 2147483647I;
  #L456f1a.  call temp:= `maxStale`(v0, v2, v1) @signature `Lokhttp3/CacheControl$Builder;.maxStale:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;` @kind virtual;
  #L456f20.  v0:= temp @kind object;
  #L456f22.  call temp:= `build`(v0) @signature `Lokhttp3/CacheControl$Builder;.build:()Lokhttp3/CacheControl;` @kind virtual;
  #L456f28.  v0:= temp @kind object;
  #L456f2a.  `@@okhttp3.CacheControl.FORCE_CACHE` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L456f2e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CacheControl` v1 @kind this, `okhttp3.CacheControl$Builder` v2 @kind object) @signature `Lokhttp3/CacheControl;.<init>:(Lokhttp3/CacheControl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L456f8c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L456f92.  v0:= v2.`okhttp3.CacheControl$Builder.noCache` @type ^`boolean` @kind boolean;
  #L456f96.  v1.`okhttp3.CacheControl.noCache` @type ^`boolean` := v0 @kind boolean;
  #L456f9a.  v0:= v2.`okhttp3.CacheControl$Builder.noStore` @type ^`boolean` @kind boolean;
  #L456f9e.  v1.`okhttp3.CacheControl.noStore` @type ^`boolean` := v0 @kind boolean;
  #L456fa2.  v0:= v2.`okhttp3.CacheControl$Builder.maxAgeSeconds` @type ^`int`;
  #L456fa6.  v1.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int` := v0;
  #L456faa.  v0:= -1I;
  #L456fac.  v1.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int` := v0;
  #L456fb0.  v0:= 0I;
  #L456fb2.  v1.`okhttp3.CacheControl.isPrivate` @type ^`boolean` := v0 @kind boolean;
  #L456fb6.  v1.`okhttp3.CacheControl.isPublic` @type ^`boolean` := v0 @kind boolean;
  #L456fba.  v1.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` := v0 @kind boolean;
  #L456fbe.  v0:= v2.`okhttp3.CacheControl$Builder.maxStaleSeconds` @type ^`int`;
  #L456fc2.  v1.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int` := v0;
  #L456fc6.  v0:= v2.`okhttp3.CacheControl$Builder.minFreshSeconds` @type ^`int`;
  #L456fca.  v1.`okhttp3.CacheControl.minFreshSeconds` @type ^`int` := v0;
  #L456fce.  v0:= v2.`okhttp3.CacheControl$Builder.onlyIfCached` @type ^`boolean` @kind boolean;
  #L456fd2.  v1.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` := v0 @kind boolean;
  #L456fd6.  v0:= v2.`okhttp3.CacheControl$Builder.noTransform` @type ^`boolean` @kind boolean;
  #L456fda.  v1.`okhttp3.CacheControl.noTransform` @type ^`boolean` := v0 @kind boolean;
  #L456fde.  v2:= v2.`okhttp3.CacheControl$Builder.immutable` @type ^`boolean` @kind boolean;
  #L456fe2.  v1.`okhttp3.CacheControl.immutable` @type ^`boolean` := v2 @kind boolean;
  #L456fe6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CacheControl` v0 @kind this, `boolean` v1 , `boolean` v2 , `int` v3 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 , `boolean` v12 , `java.lang.String` v13 @kind object) @signature `Lokhttp3/CacheControl;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L456f40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L456f46.  v0.`okhttp3.CacheControl.noCache` @type ^`boolean` := v1 @kind boolean;
  #L456f4a.  v0.`okhttp3.CacheControl.noStore` @type ^`boolean` := v2 @kind boolean;
  #L456f4e.  v0.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int` := v3;
  #L456f52.  v0.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int` := v4;
  #L456f56.  v0.`okhttp3.CacheControl.isPrivate` @type ^`boolean` := v5 @kind boolean;
  #L456f5a.  v0.`okhttp3.CacheControl.isPublic` @type ^`boolean` := v6 @kind boolean;
  #L456f5e.  v0.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` := v7 @kind boolean;
  #L456f62.  v0.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int` := v8;
  #L456f66.  v0.`okhttp3.CacheControl.minFreshSeconds` @type ^`int` := v9;
  #L456f6a.  v0.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` := v10 @kind boolean;
  #L456f6e.  v0.`okhttp3.CacheControl.noTransform` @type ^`boolean` := v11 @kind boolean;
  #L456f72.  v0.`okhttp3.CacheControl.immutable` @type ^`boolean` := v12 @kind boolean;
  #L456f76.  v0.`okhttp3.CacheControl.headerValue` @type ^`java.lang.String` := v13 @kind object;
  #L456f7a.  return @kind void;
}
procedure `java.lang.String` `headerValue`(`okhttp3.CacheControl` v4 @kind this) @signature `Lokhttp3/CacheControl;.headerValue:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L456a90.  v0:= new `java.lang.StringBuilder`;
  #L456a94.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L456a9a.  v1:= v4.`okhttp3.CacheControl.noCache` @type ^`boolean` @kind boolean;
  #L456a9e.  if v1 == 0 then goto L456aac;
  #L456aa2.  v1:= "no-cache, " @kind object;
  #L456aa6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456aac.  v1:= v4.`okhttp3.CacheControl.noStore` @type ^`boolean` @kind boolean;
  #L456ab0.  if v1 == 0 then goto L456abe;
  #L456ab4.  v1:= "no-store, " @kind object;
  #L456ab8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456abe.  v1:= v4.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int`;
  #L456ac2.  v2:= ", " @kind object;
  #L456ac6.  v3:= -1I;
  #L456ac8.  if v1 == v3 then goto L456ae6;
  #L456acc.  v1:= "max-age=" @kind object;
  #L456ad0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456ad6.  v1:= v4.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int`;
  #L456ada.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L456ae0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456ae6.  v1:= v4.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int`;
  #L456aea.  if v1 == v3 then goto L456b08;
  #L456aee.  v1:= "s-maxage=" @kind object;
  #L456af2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456af8.  v1:= v4.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int`;
  #L456afc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b02.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b08.  v1:= v4.`okhttp3.CacheControl.isPrivate` @type ^`boolean` @kind boolean;
  #L456b0c.  if v1 == 0 then goto L456b1a;
  #L456b10.  v1:= "private, " @kind object;
  #L456b14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b1a.  v1:= v4.`okhttp3.CacheControl.isPublic` @type ^`boolean` @kind boolean;
  #L456b1e.  if v1 == 0 then goto L456b2c;
  #L456b22.  v1:= "public, " @kind object;
  #L456b26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b2c.  v1:= v4.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` @kind boolean;
  #L456b30.  if v1 == 0 then goto L456b3e;
  #L456b34.  v1:= "must-revalidate, " @kind object;
  #L456b38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b3e.  v1:= v4.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int`;
  #L456b42.  if v1 == v3 then goto L456b60;
  #L456b46.  v1:= "max-stale=" @kind object;
  #L456b4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b50.  v1:= v4.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int`;
  #L456b54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b5a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b60.  v1:= v4.`okhttp3.CacheControl.minFreshSeconds` @type ^`int`;
  #L456b64.  if v1 == v3 then goto L456b82;
  #L456b68.  v1:= "min-fresh=" @kind object;
  #L456b6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b72.  v1:= v4.`okhttp3.CacheControl.minFreshSeconds` @type ^`int`;
  #L456b76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b7c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b82.  v1:= v4.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` @kind boolean;
  #L456b86.  if v1 == 0 then goto L456b94;
  #L456b8a.  v1:= "only-if-cached, " @kind object;
  #L456b8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456b94.  v1:= v4.`okhttp3.CacheControl.noTransform` @type ^`boolean` @kind boolean;
  #L456b98.  if v1 == 0 then goto L456ba6;
  #L456b9c.  v1:= "no-transform, " @kind object;
  #L456ba0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456ba6.  v1:= v4.`okhttp3.CacheControl.immutable` @type ^`boolean` @kind boolean;
  #L456baa.  if v1 == 0 then goto L456bb8;
  #L456bae.  v1:= "immutable, " @kind object;
  #L456bb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456bb8.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L456bbe.  v1:= temp;
  #L456bc0.  if v1 != 0 then goto L456bca;
  #L456bc4.  v0:= "" @kind object;
  #L456bc8.  return v0 @kind object;
  #L456bca.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L456bd0.  v1:= temp;
  #L456bd2.  v1:= v1 + -2;
  #L456bd6.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L456bdc.  v2:= temp;
  #L456bde.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L456be4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L456bea.  v0:= temp @kind object;
  #L456bec.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `parse`(`okhttp3.Headers` v22 @kind object) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L456c28.  v0:= v22 @kind object;
  #L456c2c.  call temp:= `size`(v22) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L456c32.  v1:= temp;
  #L456c34.  v6:= 0I;
  #L456c36.  v7:= 1I;
  #L456c38.  v8:= 0I;
  #L456c3a.  v9:= 0I;
  #L456c3c.  v10:= 0I;
  #L456c3e.  v11:= -1I;
  #L456c40.  v12:= -1I;
  #L456c42.  v13:= 0I;
  #L456c44.  v14:= 0I;
  #L456c46.  v15:= 0I;
  #L456c48.  v16:= -1I;
  #L456c4c.  v17:= -1I;
  #L456c50.  v18:= 0I;
  #L456c54.  v19:= 0I;
  #L456c58.  v20:= 0I;
  #L456c5c.  if v6 >= v1 then goto L456eb4;
  #L456c60.  call temp:= `name`(v0, v6) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L456c66.  v2:= temp @kind object;
  #L456c68.  call temp:= `value`(v0, v6) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L456c6e.  v4:= temp @kind object;
  #L456c70.  v3:= "Cache-Control" @kind object;
  #L456c74.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456c7a.  v3:= temp;
  #L456c7c.  if v3 == 0 then goto L456c8a;
  #L456c80.  if v8 == 0 then goto L456c86;
  #L456c84.  goto L456c9a;
  #L456c86.  v8:= v4 @kind object;
  #L456c88.  goto L456c9c;
  #L456c8a.  v3:= "Pragma" @kind object;
  #L456c8e.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456c94.  v2:= temp;
  #L456c96.  if v2 == 0 then goto L456ea6;
  #L456c9a.  v7:= 0I;
  #L456c9c.  v2:= 0I;
  #L456c9e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L456ca4.  v3:= temp;
  #L456ca6.  if v2 >= v3 then goto L456ea6;
  #L456caa.  v3:= "=,;" @kind object;
  #L456cae.  call temp:= `skipUntil`(v4, v2, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L456cb4.  v3:= temp;
  #L456cb6.  call temp:= `substring`(v4, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L456cbc.  v2:= temp @kind object;
  #L456cbe.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L456cc4.  v2:= temp @kind object;
  #L456cc6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L456ccc.  v5:= temp;
  #L456cce.  if v3 == v5 then goto L456d5a;
  #L456cd2.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L456cd8.  v5:= temp;
  #L456cda.  v0:= 44I;
  #L456cde.  if v5 == v0 then goto L456d5a;
  #L456ce2.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L456ce8.  v0:= temp;
  #L456cea.  v5:= 59I;
  #L456cee.  if v0 != v5 then goto L456cf4;
  #L456cf2.  goto L456d5a;
  #L456cf4.  v3:= v3 + 1;
  #L456cf8.  call temp:= `skipWhitespace`(v4, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipWhitespace:(Ljava/lang/String;I)I` @kind static;
  #L456cfe.  v0:= temp;
  #L456d00.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L456d06.  v3:= temp;
  #L456d08.  if v0 >= v3 then goto L456d3a;
  #L456d0c.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L456d12.  v3:= temp;
  #L456d14.  v5:= 34I;
  #L456d18.  if v3 != v5 then goto L456d3a;
  #L456d1c.  v0:= v0 + 1;
  #L456d20.  v3:= "\"" @kind object;
  #L456d24.  call temp:= `skipUntil`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L456d2a.  v3:= temp;
  #L456d2c.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L456d32.  v0:= temp @kind object;
  #L456d34.  v5:= 1I;
  #L456d36.  v3:= v3 + v5 @kind int;
  #L456d38.  goto L456d62;
  #L456d3a.  v5:= 1I;
  #L456d3c.  v3:= ",;" @kind object;
  #L456d40.  call temp:= `skipUntil`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L456d46.  v3:= temp;
  #L456d48.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L456d4e.  v0:= temp @kind object;
  #L456d50.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L456d56.  v0:= temp @kind object;
  #L456d58.  goto L456d62;
  #L456d5a.  v5:= 1I;
  #L456d5c.  v3:= v3 + 1;
  #L456d60.  v0:= 0I;
  #L456d62.  v5:= "no-cache" @kind object;
  #L456d66.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456d6c.  v5:= temp;
  #L456d6e.  if v5 == 0 then goto L456d7a;
  #L456d72.  v5:= -1I;
  #L456d74.  v9:= 1I;
  #L456d76.  goto L456e9c;
  #L456d7a.  v5:= "no-store" @kind object;
  #L456d7e.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456d84.  v5:= temp;
  #L456d86.  if v5 == 0 then goto L456d92;
  #L456d8a.  v5:= -1I;
  #L456d8c.  v10:= 1I;
  #L456d8e.  goto L456e9c;
  #L456d92.  v5:= "max-age" @kind object;
  #L456d96.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456d9c.  v5:= temp;
  #L456d9e.  if v5 == 0 then goto L456db2;
  #L456da2.  v5:= -1I;
  #L456da4.  call temp:= `parseSeconds`(v0, v5) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L456daa.  v0:= temp;
  #L456dac.  v11:= v0;
  #L456dae.  goto L456e9c;
  #L456db2.  v5:= "s-maxage" @kind object;
  #L456db6.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456dbc.  v5:= temp;
  #L456dbe.  if v5 == 0 then goto L456dd2;
  #L456dc2.  v5:= -1I;
  #L456dc4.  call temp:= `parseSeconds`(v0, v5) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L456dca.  v0:= temp;
  #L456dcc.  v12:= v0;
  #L456dce.  goto L456e9c;
  #L456dd2.  v5:= "private" @kind object;
  #L456dd6.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456ddc.  v5:= temp;
  #L456dde.  if v5 == 0 then goto L456de8;
  #L456de2.  v5:= -1I;
  #L456de4.  v13:= 1I;
  #L456de6.  goto L456e9c;
  #L456de8.  v5:= "public" @kind object;
  #L456dec.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456df2.  v5:= temp;
  #L456df4.  if v5 == 0 then goto L456dfe;
  #L456df8.  v5:= -1I;
  #L456dfa.  v14:= 1I;
  #L456dfc.  goto L456e9c;
  #L456dfe.  v5:= "must-revalidate" @kind object;
  #L456e02.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456e08.  v5:= temp;
  #L456e0a.  if v5 == 0 then goto L456e14;
  #L456e0e.  v5:= -1I;
  #L456e10.  v15:= 1I;
  #L456e12.  goto L456e9c;
  #L456e14.  v5:= "max-stale" @kind object;
  #L456e18.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456e1e.  v5:= temp;
  #L456e20.  if v5 == 0 then goto L456e3a;
  #L456e24.  v2:= 2147483647I;
  #L456e2a.  call temp:= `parseSeconds`(v0, v2) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L456e30.  v0:= temp;
  #L456e32.  v16:= v0;
  #L456e36.  v5:= -1I;
  #L456e38.  goto L456e9c;
  #L456e3a.  v5:= "min-fresh" @kind object;
  #L456e3e.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456e44.  v5:= temp;
  #L456e46.  if v5 == 0 then goto L456e5a;
  #L456e4a.  v5:= -1I;
  #L456e4c.  call temp:= `parseSeconds`(v0, v5) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L456e52.  v0:= temp;
  #L456e54.  v17:= v0;
  #L456e58.  goto L456e9c;
  #L456e5a.  v5:= -1I;
  #L456e5c.  v0:= "only-if-cached" @kind object;
  #L456e60.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456e66.  v0:= temp;
  #L456e68.  if v0 == 0 then goto L456e72;
  #L456e6c.  v18:= 1I;
  #L456e70.  goto L456e9c;
  #L456e72.  v0:= "no-transform" @kind object;
  #L456e76.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456e7c.  v0:= temp;
  #L456e7e.  if v0 == 0 then goto L456e88;
  #L456e82.  v19:= 1I;
  #L456e86.  goto L456e9c;
  #L456e88.  v0:= "immutable" @kind object;
  #L456e8c.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L456e92.  v0:= temp;
  #L456e94.  if v0 == 0 then goto L456e9c;
  #L456e98.  v20:= 1I;
  #L456e9c.  v0:= v22 @kind object;
  #L456ea0.  v2:= v3;
  #L456ea2.  goto L456c9e;
  #L456ea6.  v5:= -1I;
  #L456ea8.  v6:= v6 + 1;
  #L456eac.  v0:= v22 @kind object;
  #L456eb0.  goto L456c5c;
  #L456eb4.  if v7 != 0 then goto L456ebe;
  #L456eb8.  v21:= 0I;
  #L456ebc.  goto L456ec2;
  #L456ebe.  v21:= v8 @kind object;
  #L456ec2.  v0:= new `okhttp3.CacheControl`;
  #L456ec6.  v8:= v0 @kind object;
  #L456ec8.  call `<init>`(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21) @signature `Lokhttp3/CacheControl;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @kind direct;
  #L456ece.  return v0 @kind object;
}
procedure `boolean` `immutable`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.immutable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456970.  v0:= v1.`okhttp3.CacheControl.immutable` @type ^`boolean` @kind boolean;
  #L456974.  return v0;
}
procedure `boolean` `isPrivate`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.isPrivate:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456988.  v0:= v1.`okhttp3.CacheControl.isPrivate` @type ^`boolean` @kind boolean;
  #L45698c.  return v0;
}
procedure `boolean` `isPublic`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.isPublic:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4569a0.  v0:= v1.`okhttp3.CacheControl.isPublic` @type ^`boolean` @kind boolean;
  #L4569a4.  return v0;
}
procedure `int` `maxAgeSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456a30.  v0:= v1.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int`;
  #L456a34.  return v0;
}
procedure `int` `maxStaleSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456a48.  v0:= v1.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int`;
  #L456a4c.  return v0;
}
procedure `int` `minFreshSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456a60.  v0:= v1.`okhttp3.CacheControl.minFreshSeconds` @type ^`int`;
  #L456a64.  return v0;
}
procedure `boolean` `mustRevalidate`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4569b8.  v0:= v1.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` @kind boolean;
  #L4569bc.  return v0;
}
procedure `boolean` `noCache`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.noCache:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4569d0.  v0:= v1.`okhttp3.CacheControl.noCache` @type ^`boolean` @kind boolean;
  #L4569d4.  return v0;
}
procedure `boolean` `noStore`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.noStore:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4569e8.  v0:= v1.`okhttp3.CacheControl.noStore` @type ^`boolean` @kind boolean;
  #L4569ec.  return v0;
}
procedure `boolean` `noTransform`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.noTransform:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456a00.  v0:= v1.`okhttp3.CacheControl.noTransform` @type ^`boolean` @kind boolean;
  #L456a04.  return v0;
}
procedure `boolean` `onlyIfCached`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456a18.  v0:= v1.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` @kind boolean;
  #L456a1c.  return v0;
}
procedure `int` `sMaxAgeSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.sMaxAgeSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456a78.  v0:= v1.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int`;
  #L456a7c.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456c00.  v0:= v1.`okhttp3.CacheControl.headerValue` @type ^`java.lang.String` @kind object;
  #L456c04.  if v0 == 0 then goto L456c0a;
  #L456c08.  goto L456c16;
  #L456c0a.  call temp:= `headerValue`(v1) @signature `Lokhttp3/CacheControl;.headerValue:()Ljava/lang/String;` @kind direct;
  #L456c10.  v0:= temp @kind object;
  #L456c12.  v1.`okhttp3.CacheControl.headerValue` @type ^`java.lang.String` := v0 @kind object;
  #L456c16.  return v0 @kind object;
}
