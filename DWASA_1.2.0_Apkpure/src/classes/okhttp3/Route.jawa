record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.address` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.inetSocketAddress` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Route.proxy` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v0 @kind this, `okhttp3.Address` v1 @kind object, `java.net.Proxy` v2 @kind object, `java.net.InetSocketAddress` v3 @kind object) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L461ecc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L461ed2.  if v1 == 0 then goto L461f0c;
  #L461ed6.  if v2 == 0 then goto L461efc;
  #L461eda.  if v3 == 0 then goto L461eec;
  #L461ede.  v0.`okhttp3.Route.address` @type ^`okhttp3.Address` := v1 @kind object;
  #L461ee2.  v0.`okhttp3.Route.proxy` @type ^`java.net.Proxy` := v2 @kind object;
  #L461ee6.  v0.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` := v3 @kind object;
  #L461eea.  return @kind void;
  #L461eec.  v1:= new `java.lang.NullPointerException`;
  #L461ef0.  v2:= "inetSocketAddress == null" @kind object;
  #L461ef4.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461efa.  throw v1;
  #L461efc.  v1:= new `java.lang.NullPointerException`;
  #L461f00.  v2:= "proxy == null" @kind object;
  #L461f04.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461f0a.  throw v1;
  #L461f0c.  v1:= new `java.lang.NullPointerException`;
  #L461f10.  v2:= "address == null" @kind object;
  #L461f14.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461f1a.  throw v1;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461eb4.  v0:= v1.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L461eb8.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L461d60.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L461d64.  if v0 == 0 then goto L461dac;
  #L461d68.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L461d6c.  v0:= v3.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L461d70.  v1:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L461d74.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L461d7a.  v0:= temp;
  #L461d7c.  if v0 == 0 then goto L461dac;
  #L461d80.  v0:= v3.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L461d84.  v1:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L461d88.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L461d8e.  v0:= temp;
  #L461d90.  if v0 == 0 then goto L461dac;
  #L461d94.  v3:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L461d98.  v0:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L461d9c.  call temp:= `equals`(v3, v0) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L461da2.  v3:= temp;
  #L461da4.  if v3 == 0 then goto L461dac;
  #L461da8.  v3:= 1I;
  #L461daa.  goto L461dae;
  #L461dac.  v3:= 0I;
  #L461dae.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L461df8.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L461dfc.  call temp:= `hashCode`(v0) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L461e02.  v0:= temp;
  #L461e04.  v1:= 527I;
  #L461e08.  v1:= v1 + v0 @kind int;
  #L461e0a.  v1:= v1 * 31;
  #L461e0e.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L461e12.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L461e18.  v0:= temp;
  #L461e1a.  v1:= v1 + v0 @kind int;
  #L461e1c.  v1:= v1 * 31;
  #L461e20.  v0:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L461e24.  call temp:= `hashCode`(v0) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L461e2a.  v0:= temp;
  #L461e2c.  v1:= v1 + v0 @kind int;
  #L461e2e.  return v1;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461e9c.  v0:= v1.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L461ea0.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L461dc0.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L461dc4.  v0:= v0.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L461dc8.  if v0 == 0 then goto L461de4;
  #L461dcc.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L461dd0.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L461dd6.  v0:= temp @kind object;
  #L461dd8.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L461ddc.  if v0 != v1 then goto L461de4;
  #L461de0.  v0:= 1I;
  #L461de2.  goto L461de6;
  #L461de4.  v0:= 0I;
  #L461de6.  return v0;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461e84.  v0:= v1.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L461e88.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L461e40.  v0:= new `java.lang.StringBuilder`;
  #L461e44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L461e4a.  v1:= "Route{" @kind object;
  #L461e4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L461e54.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L461e58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L461e5e.  v1:= "}" @kind object;
  #L461e62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L461e68.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L461e6e.  v0:= temp @kind object;
  #L461e70.  return v0 @kind object;
}
