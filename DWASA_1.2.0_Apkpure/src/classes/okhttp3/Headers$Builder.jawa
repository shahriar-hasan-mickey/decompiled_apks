record `okhttp3.Headers$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.Headers$Builder.namesAndValues` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Headers$Builder` v2 @kind this) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L45b9e4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45b9ea.  v0:= new `java.util.ArrayList`;
  #L45b9ee.  v1:= 20I;
  #L45b9f2.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L45b9f8.  v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L45b9fc.  return @kind void;
}
procedure `void` `checkNameAndValue`(`okhttp3.Headers$Builder` v9 @kind this, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `Lokhttp3/Headers$Builder;.checkNameAndValue:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L45ba10.  if v10 == 0 then goto L45bb48;
  #L45ba14.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L45ba1a.  v0:= temp;
  #L45ba1c.  if v0 != 0 then goto L45bb38;
  #L45ba20.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45ba26.  v0:= temp;
  #L45ba28.  v1:= 0I;
  #L45ba2a.  v2:= 0I;
  #L45ba2c.  v3:= 127I;
  #L45ba30.  v4:= 2I;
  #L45ba32.  v5:= 3I;
  #L45ba34.  v6:= 1I;
  #L45ba36.  if v2 >= v0 then goto L45ba8c;
  #L45ba3a.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45ba40.  v7:= temp;
  #L45ba42.  v8:= 32I;
  #L45ba46.  if v7 <= v8 then goto L45ba54;
  #L45ba4a.  if v7 >= v3 then goto L45ba54;
  #L45ba4e.  v2:= v2 + 1;
  #L45ba52.  goto L45ba2c;
  #L45ba54.  v11:= new `java.lang.IllegalArgumentException`;
  #L45ba58.  v0:= new `java.lang.Object`[v5];
  #L45ba5c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45ba62.  v3:= temp @kind object;
  #L45ba64.  v0[v1]:= v3 @kind object;
  #L45ba68.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45ba6e.  v1:= temp @kind object;
  #L45ba70.  v0[v6]:= v1 @kind object;
  #L45ba74.  v0[v4]:= v10 @kind object;
  #L45ba78.  v10:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L45ba7c.  call temp:= `format`(v10, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L45ba82.  v10:= temp @kind object;
  #L45ba84.  call `<init>`(v11, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ba8a.  throw v11;
  #L45ba8c.  if v11 == 0 then goto L45bb00;
  #L45ba90.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45ba96.  v0:= temp;
  #L45ba98.  v2:= 0I;
  #L45ba9a.  if v2 >= v0 then goto L45bafe;
  #L45ba9e.  call temp:= `charAt`(v11, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45baa4.  v7:= temp;
  #L45baa6.  v8:= 31I;
  #L45baaa.  if v7 > v8 then goto L45bab6;
  #L45baae.  v8:= 9I;
  #L45bab2.  if v7 != v8 then goto L45bac0;
  #L45bab6.  if v7 >= v3 then goto L45bac0;
  #L45baba.  v2:= v2 + 1;
  #L45babe.  goto L45ba9a;
  #L45bac0.  v0:= new `java.lang.IllegalArgumentException`;
  #L45bac4.  v3:= 4I;
  #L45bac6.  v3:= new `java.lang.Object`[v3];
  #L45baca.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45bad0.  v7:= temp @kind object;
  #L45bad2.  v3[v1]:= v7 @kind object;
  #L45bad6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45badc.  v1:= temp @kind object;
  #L45bade.  v3[v6]:= v1 @kind object;
  #L45bae2.  v3[v4]:= v10 @kind object;
  #L45bae6.  v3[v5]:= v11 @kind object;
  #L45baea.  v10:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L45baee.  call temp:= `format`(v10, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L45baf4.  v10:= temp @kind object;
  #L45baf6.  call `<init>`(v0, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45bafc.  throw v0;
  #L45bafe.  return @kind void;
  #L45bb00.  v11:= new `java.lang.NullPointerException`;
  #L45bb04.  v0:= new `java.lang.StringBuilder`;
  #L45bb08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45bb0e.  v1:= "value for name " @kind object;
  #L45bb12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45bb18.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45bb1e.  v10:= " == null" @kind object;
  #L45bb22.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45bb28.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45bb2e.  v10:= temp @kind object;
  #L45bb30.  call `<init>`(v11, v10) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45bb36.  throw v11;
  #L45bb38.  v10:= new `java.lang.IllegalArgumentException`;
  #L45bb3c.  v11:= "name is empty" @kind object;
  #L45bb40.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45bb46.  throw v10;
  #L45bb48.  v10:= new `java.lang.NullPointerException`;
  #L45bb4c.  v11:= "name == null" @kind object;
  #L45bb50.  call `<init>`(v10, v11) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45bb56.  goto L45bb5a;
  #L45bb58.  throw v10;
  #L45bb5a.  goto L45bb58;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45b828.  v0:= ":" @kind object;
  #L45b82c.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L45b832.  v0:= temp;
  #L45b834.  v1:= -1I;
  #L45b836.  if v0 == v1 then goto L45b862;
  #L45b83a.  v1:= 0I;
  #L45b83c.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45b842.  v1:= temp @kind object;
  #L45b844.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L45b84a.  v1:= temp @kind object;
  #L45b84c.  v0:= v0 + 1;
  #L45b850.  call temp:= `substring`(v4, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L45b856.  v4:= temp @kind object;
  #L45b858.  call temp:= `add`(v3, v1, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L45b85e.  v4:= temp @kind object;
  #L45b860.  return v4 @kind object;
  #L45b862.  v0:= new `java.lang.IllegalArgumentException`;
  #L45b866.  v1:= new `java.lang.StringBuilder`;
  #L45b86a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45b870.  v2:= "Unexpected header: " @kind object;
  #L45b874.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45b87a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45b880.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45b886.  v4:= temp @kind object;
  #L45b888.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45b88e.  throw v0;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;

  #L45b8a0.  call `checkNameAndValue`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.checkNameAndValue:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L45b8a6.  call temp:= `addLenient`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L45b8ac.  v1:= temp @kind object;
  #L45b8ae.  return v1 @kind object;
}
procedure `okhttp3.Headers$Builder` `addLenient`(`okhttp3.Headers$Builder` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45b8c0.  v0:= ":" @kind object;
  #L45b8c4.  v1:= 1I;
  #L45b8c6.  call temp:= `indexOf`(v5, v0, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L45b8cc.  v2:= temp;
  #L45b8ce.  v3:= -1I;
  #L45b8d0.  if v2 == v3 then goto L45b8f2;
  #L45b8d4.  v0:= 0I;
  #L45b8d6.  call temp:= `substring`(v5, v0, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45b8dc.  v0:= temp @kind object;
  #L45b8de.  v2:= v2 + v1 @kind int;
  #L45b8e0.  call temp:= `substring`(v5, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L45b8e6.  v5:= temp @kind object;
  #L45b8e8.  call temp:= `addLenient`(v4, v0, v5) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L45b8ee.  v5:= temp @kind object;
  #L45b8f0.  return v5 @kind object;
  #L45b8f2.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L45b8f8.  v0:= temp;
  #L45b8fa.  v2:= "" @kind object;
  #L45b8fe.  if v0 == 0 then goto L45b914;
  #L45b902.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L45b908.  v5:= temp @kind object;
  #L45b90a.  call temp:= `addLenient`(v4, v2, v5) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L45b910.  v5:= temp @kind object;
  #L45b912.  return v5 @kind object;
  #L45b914.  call temp:= `addLenient`(v4, v2, v5) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L45b91a.  v5:= temp @kind object;
  #L45b91c.  return v5 @kind object;
}
procedure `okhttp3.Headers$Builder` `addLenient`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag  {
    temp;
    v0;

  #L45b930.  v0:= v1.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L45b934.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45b93a.  v2:= v1.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L45b93e.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L45b944.  v3:= temp @kind object;
  #L45b946.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45b94c.  return v1 @kind object;
}
procedure `okhttp3.Headers` `build`(`okhttp3.Headers$Builder` v1 @kind this) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b80c.  v0:= new `okhttp3.Headers`;
  #L45b810.  call `<init>`(v0, v1) @signature `Lokhttp3/Headers;.<init>:(Lokhttp3/Headers$Builder;)V` @kind direct;
  #L45b816.  return v0 @kind object;
}
procedure `java.lang.String` `get`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45b7ac.  v0:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L45b7b0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45b7b6.  v0:= temp;
  #L45b7b8.  v0:= v0 + -2;
  #L45b7bc.  if v0 < 0 then goto L45b7f8;
  #L45b7c0.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L45b7c4.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45b7ca.  v1:= temp @kind object;
  #L45b7cc.  v1:= (`java.lang.String`) v1 @kind object;
  #L45b7d0.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45b7d6.  v1:= temp;
  #L45b7d8.  if v1 == 0 then goto L45b7f2;
  #L45b7dc.  v3:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L45b7e0.  v0:= v0 + 1;
  #L45b7e4.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45b7ea.  v3:= temp @kind object;
  #L45b7ec.  v3:= (`java.lang.String`) v3 @kind object;
  #L45b7f0.  return v3 @kind object;
  #L45b7f2.  v0:= v0 + -2;
  #L45b7f6.  goto L45b7bc;
  #L45b7f8.  v3:= 0I;
  #L45b7fa.  return v3 @kind object;
}
procedure `okhttp3.Headers$Builder` `removeAll`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45b960.  v0:= 0I;
  #L45b962.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L45b966.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45b96c.  v1:= temp;
  #L45b96e.  if v0 >= v1 then goto L45b9ac;
  #L45b972.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L45b976.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45b97c.  v1:= temp @kind object;
  #L45b97e.  v1:= (`java.lang.String`) v1 @kind object;
  #L45b982.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45b988.  v1:= temp;
  #L45b98a.  if v1 == 0 then goto L45b9a6;
  #L45b98e.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L45b992.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L45b998.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L45b99c.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L45b9a2.  v0:= v0 + -2;
  #L45b9a6.  v0:= v0 + 2;
  #L45b9aa.  goto L45b962;
  #L45b9ac.  return v2 @kind object;
}
procedure `okhttp3.Headers$Builder` `set`(`okhttp3.Headers$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;

  #L45b9c0.  call `checkNameAndValue`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.checkNameAndValue:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L45b9c6.  call temp:= `removeAll`(v0, v1) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L45b9cc.  call temp:= `addLenient`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L45b9d2.  return v0 @kind object;
}
