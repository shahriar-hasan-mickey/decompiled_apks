record `okhttp3.RealCall$AsyncCall` @kind class @AccessFlag FINAL extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.Callback` `okhttp3.RealCall$AsyncCall.responseCallback` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RealCall` `okhttp3.RealCall$AsyncCall.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RealCall$AsyncCall` v2 @kind this, `okhttp3.RealCall` v3 @kind object, `okhttp3.Callback` v4 @kind object) @signature `Lokhttp3/RealCall$AsyncCall;.<init>:(Lokhttp3/RealCall;Lokhttp3/Callback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L460194.  v2.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` := v3 @kind object;
  #L460198.  v0:= 1I;
  #L46019a.  v0:= new `java.lang.Object`[v0];
  #L46019e.  call temp:= `redactedUrl`(v3) @signature `Lokhttp3/RealCall;.redactedUrl:()Ljava/lang/String;` @kind virtual;
  #L4601a4.  v3:= temp @kind object;
  #L4601a6.  v1:= 0I;
  #L4601a8.  v0[v1]:= v3 @kind object;
  #L4601ac.  v3:= "OkHttp %s" @kind object;
  #L4601b0.  call `<init>`(v2, v3, v0) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4601b6.  v2.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` := v4 @kind object;
  #L4601ba.  return @kind void;
}
procedure `void` `execute`(`okhttp3.RealCall$AsyncCall` v5 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4601cc.  v0:= 1I;
  #L4601ce.  v1:= 0I;
  #L4601d0.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L4601d4.  call temp:= `getResponseWithInterceptorChain`(v2) @signature `Lokhttp3/RealCall;.getResponseWithInterceptorChain:()Lokhttp3/Response;` @kind virtual;
  #L4601da.  v2:= temp @kind object;
  #L4601dc.  v3:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L4601e0.  v3:= v3.`okhttp3.RealCall.retryAndFollowUpInterceptor` @type ^`okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind object;
  #L4601e4.  call temp:= `isCanceled`(v3) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isCanceled:()Z` @kind virtual;
  #L4601ea.  v1:= temp;
  #L4601ec.  if v1 == 0 then goto L46020e;
  #L4601f0.  v1:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L4601f4.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L4601f8.  v3:= new `java.io.IOException`;
  #L4601fc.  v4:= "Canceled" @kind object;
  #L460200.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460206.  call `onFailure`(v1, v2, v3) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L46020c.  goto L46021c;
  #L46020e.  v1:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L460212.  v3:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L460216.  call `onResponse`(v1, v3, v2) @signature `Lokhttp3/Callback;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind interface;
  #L46021c.  v0:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L460220.  v0:= v0.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L460224.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L46022a.  v0:= temp @kind object;
  #L46022c.  call `finished`(v0, v5) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L460232.  goto L4602ac;
  #L460234.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L460236.  goto L460242;
  #L460238.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46023a.  goto L4602ae;
  #L46023c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L46023e.  v1:= v0 @kind object;
  #L460240.  v0:= 0I;
  #L460242.  if v0 == 0 then goto L460286;
  #L460246.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L46024c.  v0:= temp @kind object;
  #L46024e.  v2:= 4I;
  #L460250.  v3:= new `java.lang.StringBuilder`;
  #L460254.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46025a.  v4:= "Callback failure for " @kind object;
  #L46025e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460264.  v4:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L460268.  call temp:= `toLoggableString`(v4) @signature `Lokhttp3/RealCall;.toLoggableString:()Ljava/lang/String;` @kind virtual;
  #L46026e.  v4:= temp @kind object;
  #L460270.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460276.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46027c.  v3:= temp @kind object;
  #L46027e.  call `log`(v0, v2, v3, v1) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L460284.  goto L46021c;
  #L460286.  v0:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L46028a.  call temp:= `access$000`(v0) @signature `Lokhttp3/RealCall;.access$000:(Lokhttp3/RealCall;)Lokhttp3/EventListener;` @kind static;
  #L460290.  v0:= temp @kind object;
  #L460292.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L460296.  call `callFailed`(v0, v2, v1) @signature `Lokhttp3/EventListener;.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind virtual;
  #L46029c.  v0:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L4602a0.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L4602a4.  call `onFailure`(v0, v2, v1) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L4602aa.  goto L46021c;
  #L4602ac.  return @kind void;
  #L4602ae.  v1:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L4602b2.  v1:= v1.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L4602b6.  call temp:= `dispatcher`(v1) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L4602bc.  v1:= temp @kind object;
  #L4602be.  call `finished`(v1, v5) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L4602c4.  goto L4602c8;
  #L4602c6.  throw v0;
  #L4602c8.  goto L4602c6;
  catch `java.io.IOException` @[L4601d0..L4601ec] goto L46023c;
  catch `java.lang.Throwable` @[L4601d0..L4601ec] goto L460238;
  catch `java.io.IOException` @[L4601f0..L46021c] goto L460234;
  catch `java.lang.Throwable` @[L4601f0..L46021c] goto L460238;
  catch `java.lang.Throwable` @[L460246..L4602aa] goto L460238;
}
procedure `okhttp3.RealCall` `get`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @AccessFlag  {
    temp;
    v0;

  #L460160.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L460164.  return v0 @kind object;
}
procedure `java.lang.String` `host`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L460134.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L460138.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L46013c.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L460142.  v0:= temp @kind object;
  #L460144.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L46014a.  v0:= temp @kind object;
  #L46014c.  return v0 @kind object;
}
procedure `okhttp3.Request` `request`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.request:()Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;

  #L460178.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L46017c.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L460180.  return v0 @kind object;
}
