record `okhttp3.CipherSuite$1` @kind class @AccessFlag FINAL extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`okhttp3.CipherSuite$1` v0 @kind this) @signature `Lokhttp3/CipherSuite$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L458044.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45804a.  return @kind void;
}
procedure `int` `compare`(`okhttp3.CipherSuite$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/CipherSuite$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L457fa8.  v1:= (`java.lang.String`) v1 @kind object;
  #L457fac.  v2:= (`java.lang.String`) v2 @kind object;
  #L457fb0.  call temp:= `compare`(v0, v1, v2) @signature `Lokhttp3/CipherSuite$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L457fb6.  v1:= temp;
  #L457fb8.  return v1;
}
procedure `int` `compare`(`okhttp3.CipherSuite$1` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/CipherSuite$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L457fcc.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L457fd2.  v0:= temp;
  #L457fd4.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L457fda.  v1:= temp;
  #L457fdc.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L457fe2.  v0:= temp;
  #L457fe4.  v1:= 4I;
  #L457fe6.  v2:= -1I;
  #L457fe8.  v3:= 1I;
  #L457fea.  if v1 >= v0 then goto L458012;
  #L457fee.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L457ff4.  v4:= temp;
  #L457ff6.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L457ffc.  v5:= temp;
  #L457ffe.  if v4 == v5 then goto L45800c;
  #L458002.  if v4 >= v5 then goto L458008;
  #L458006.  goto L45800a;
  #L458008.  v2:= 1I;
  #L45800a.  return v2;
  #L45800c.  v1:= v1 + 1;
  #L458010.  goto L457fe6;
  #L458012.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L458018.  v7:= temp;
  #L45801a.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L458020.  v8:= temp;
  #L458022.  if v7 == v8 then goto L458030;
  #L458026.  if v7 >= v8 then goto L45802c;
  #L45802a.  goto L45802e;
  #L45802c.  v2:= 1I;
  #L45802e.  return v2;
  #L458030.  v7:= 0I;
  #L458032.  return v7;
}
