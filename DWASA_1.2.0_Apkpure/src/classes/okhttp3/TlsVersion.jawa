record `okhttp3.TlsVersion` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.TlsVersion.javaName` @AccessFlag FINAL;
}
global `okhttp3.TlsVersion`[] `@@okhttp3.TlsVersion.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.SSL_3_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/TlsVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4620ec.  v0:= new `okhttp3.TlsVersion`;
  #L4620f0.  v1:= 0I;
  #L4620f2.  v2:= "TLS_1_3" @kind object;
  #L4620f6.  v3:= "TLSv1.3" @kind object;
  #L4620fa.  call `<init>`(v0, v2, v1, v3) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L462100.  `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L462104.  v0:= new `okhttp3.TlsVersion`;
  #L462108.  v2:= 1I;
  #L46210a.  v3:= "TLS_1_2" @kind object;
  #L46210e.  v4:= "TLSv1.2" @kind object;
  #L462112.  call `<init>`(v0, v3, v2, v4) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L462118.  `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L46211c.  v0:= new `okhttp3.TlsVersion`;
  #L462120.  v3:= 2I;
  #L462122.  v4:= "TLS_1_1" @kind object;
  #L462126.  v5:= "TLSv1.1" @kind object;
  #L46212a.  call `<init>`(v0, v4, v3, v5) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L462130.  `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L462134.  v0:= new `okhttp3.TlsVersion`;
  #L462138.  v4:= 3I;
  #L46213a.  v5:= "TLS_1_0" @kind object;
  #L46213e.  v6:= "TLSv1" @kind object;
  #L462142.  call `<init>`(v0, v5, v4, v6) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L462148.  `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L46214c.  v0:= new `okhttp3.TlsVersion`;
  #L462150.  v5:= 4I;
  #L462152.  v6:= "SSL_3_0" @kind object;
  #L462156.  v7:= "SSLv3" @kind object;
  #L46215a.  call `<init>`(v0, v6, v5, v7) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L462160.  `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L462164.  v0:= 5I;
  #L462166.  v0:= new `okhttp3.TlsVersion`[v0];
  #L46216a.  v6:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L46216e.  v0[v1]:= v6 @kind object;
  #L462172.  v1:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L462176.  v0[v2]:= v1 @kind object;
  #L46217a.  v1:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L46217e.  v0[v3]:= v1 @kind object;
  #L462182.  v1:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L462186.  v0[v4]:= v1 @kind object;
  #L46218a.  v1:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L46218e.  v0[v5]:= v1 @kind object;
  #L462192.  `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] := v0 @kind object;
  #L462196.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4621a8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4621ae.  v0.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` := v3 @kind object;
  #L4621b2.  return @kind void;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`java.lang.String` v6 @kind object) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L461f8c.  call temp:= `hashCode`(v6) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L461f92.  v0:= temp;
  #L461f94.  v1:= 79201641I;
  #L461f9a.  v2:= 4I;
  #L461f9c.  v3:= 3I;
  #L461f9e.  v4:= 2I;
  #L461fa0.  v5:= 1I;
  #L461fa2.  if v0 == v1 then goto L462008;
  #L461fa6.  v1:= 79923350I;
  #L461fac.  if v0 == v1 then goto L461ff4;
  #L461fb0.  goto L462080;
  #L461fb6.  goto L46201c;
  #L461fb8.  v0:= "TLSv1.3" @kind object;
  #L461fbc.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L461fc2.  v0:= temp;
  #L461fc4.  if v0 == 0 then goto L46201c;
  #L461fc8.  v0:= 0I;
  #L461fca.  goto L46201e;
  #L461fcc.  v0:= "TLSv1.2" @kind object;
  #L461fd0.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L461fd6.  v0:= temp;
  #L461fd8.  if v0 == 0 then goto L46201c;
  #L461fdc.  v0:= 1I;
  #L461fde.  goto L46201e;
  #L461fe0.  v0:= "TLSv1.1" @kind object;
  #L461fe4.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L461fea.  v0:= temp;
  #L461fec.  if v0 == 0 then goto L46201c;
  #L461ff0.  v0:= 2I;
  #L461ff2.  goto L46201e;
  #L461ff4.  v0:= "TLSv1" @kind object;
  #L461ff8.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L461ffe.  v0:= temp;
  #L462000.  if v0 == 0 then goto L46201c;
  #L462004.  v0:= 3I;
  #L462006.  goto L46201e;
  #L462008.  v0:= "SSLv3" @kind object;
  #L46200c.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L462012.  v0:= temp;
  #L462014.  if v0 == 0 then goto L46201c;
  #L462018.  v0:= 4I;
  #L46201a.  goto L46201e;
  #L46201c.  v0:= -1I;
  #L46201e.  if v0 == 0 then goto L462078;
  #L462022.  if v0 == v5 then goto L462072;
  #L462026.  if v0 == v4 then goto L46206c;
  #L46202a.  if v0 == v3 then goto L462066;
  #L46202e.  if v0 != v2 then goto L462038;
  #L462032.  v6:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L462036.  return v6 @kind object;
  #L462038.  v0:= new `java.lang.IllegalArgumentException`;
  #L46203c.  v1:= new `java.lang.StringBuilder`;
  #L462040.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L462046.  v2:= "Unexpected TLS version: " @kind object;
  #L46204a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462050.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L462056.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46205c.  v6:= temp @kind object;
  #L46205e.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L462064.  throw v0;
  #L462066.  v6:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L46206a.  return v6 @kind object;
  #L46206c.  v6:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L462070.  return v6 @kind object;
  #L462072.  v6:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L462076.  return v6 @kind object;
  #L462078.  v6:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L46207c.  return v6 @kind object;
  #L46207e.  
  #L462080.  switch v0
                  | -503070503 => goto L461fe0
                  | -503070502 => goto L461fcc
                  | -503070501 => goto L461fb8
                  | else => goto L461fb6;
}
procedure `java.util.List` `forJavaNames`(`java.lang.String`[] v4 @kind object) @signature `Lokhttp3/TlsVersion;.forJavaNames:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L461f44.  v0:= new `java.util.ArrayList`;
  #L461f48.  v1:= length @variable v4;
  #L461f4a.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L461f50.  v1:= length @variable v4;
  #L461f52.  v2:= 0I;
  #L461f54.  if v2 >= v1 then goto L461f70;
  #L461f58.  v3:= v4[v2] @kind object;
  #L461f5c.  call temp:= `forJavaName`(v3) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L461f62.  v3:= temp @kind object;
  #L461f64.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L461f6a.  v2:= v2 + 1;
  #L461f6e.  goto L461f54;
  #L461f70.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L461f76.  v4:= temp @kind object;
  #L461f78.  return v4 @kind object;
}
procedure `okhttp3.TlsVersion` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/TlsVersion;.valueOf:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4620a4.  v0:= constclass @type ^`okhttp3.TlsVersion` @kind object;
  #L4620a8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4620ae.  v1:= temp @kind object;
  #L4620b0.  v1:= (`okhttp3.TlsVersion`) v1 @kind object;
  #L4620b4.  return v1 @kind object;
}
procedure `okhttp3.TlsVersion`[] `values`() @signature `Lokhttp3/TlsVersion;.values:()[Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4620c8.  v0:= `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] @kind object;
  #L4620cc.  call temp:= `clone`(v0) @signature `[Lokhttp3/TlsVersion;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4620d2.  v0:= temp @kind object;
  #L4620d4.  v0:= (`okhttp3.TlsVersion`[]) v0 @kind object;
  #L4620d8.  return v0 @kind object;
}
procedure `java.lang.String` `javaName`(`okhttp3.TlsVersion` v1 @kind this) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461f2c.  v0:= v1.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` @kind object;
  #L461f30.  return v0 @kind object;
}
