record `okhttp3.Address` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.CertificatePinner` `okhttp3.Address.certificatePinner` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.connectionSpecs` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.Address.dns` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.Address.hostnameVerifier` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.protocols` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Address.proxy` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.Address.proxyAuthenticator` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.Address.proxySelector` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.Address.socketFactory` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.Address.sslSocketFactory` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Address.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Address` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `okhttp3.Dns` v5 @kind object, `javax.net.SocketFactory` v6 @kind object, `javax.net.ssl.SSLSocketFactory` v7 @kind object, `javax.net.ssl.HostnameVerifier` v8 @kind object, `okhttp3.CertificatePinner` v9 @kind object, `okhttp3.Authenticator` v10 @kind object, `java.net.Proxy` v11 @kind object, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4559ac.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4559b2.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L4559b6.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L4559bc.  if v7 == 0 then goto L4559c6;
  #L4559c0.  v1:= "https" @kind object;
  #L4559c4.  goto L4559ca;
  #L4559c6.  v1:= "http" @kind object;
  #L4559ca.  call temp:= `scheme`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4559d0.  v0:= temp @kind object;
  #L4559d2.  call temp:= `host`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4559d8.  v3:= temp @kind object;
  #L4559da.  call temp:= `port`(v3, v4) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4559e0.  v3:= temp @kind object;
  #L4559e2.  call temp:= `build`(v3) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4559e8.  v3:= temp @kind object;
  #L4559ea.  v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L4559ee.  if v5 == 0 then goto L455a90;
  #L4559f2.  v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` := v5 @kind object;
  #L4559f6.  if v6 == 0 then goto L455a80;
  #L4559fa.  v2.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L4559fe.  if v10 == 0 then goto L455a70;
  #L455a02.  v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v10 @kind object;
  #L455a06.  if v12 == 0 then goto L455a60;
  #L455a0a.  call temp:= `immutableList`(v12) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L455a10.  v3:= temp @kind object;
  #L455a12.  v2.`okhttp3.Address.protocols` @type ^`java.util.List` := v3 @kind object;
  #L455a16.  if v13 == 0 then goto L455a50;
  #L455a1a.  call temp:= `immutableList`(v13) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L455a20.  v3:= temp @kind object;
  #L455a22.  v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` := v3 @kind object;
  #L455a26.  if v14 == 0 then goto L455a40;
  #L455a2a.  v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L455a2e.  v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` := v11 @kind object;
  #L455a32.  v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L455a36.  v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L455a3a.  v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` := v9 @kind object;
  #L455a3e.  return @kind void;
  #L455a40.  v3:= new `java.lang.NullPointerException`;
  #L455a44.  v4:= "proxySelector == null" @kind object;
  #L455a48.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L455a4e.  throw v3;
  #L455a50.  v3:= new `java.lang.NullPointerException`;
  #L455a54.  v4:= "connectionSpecs == null" @kind object;
  #L455a58.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L455a5e.  throw v3;
  #L455a60.  v3:= new `java.lang.NullPointerException`;
  #L455a64.  v4:= "protocols == null" @kind object;
  #L455a68.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L455a6e.  throw v3;
  #L455a70.  v3:= new `java.lang.NullPointerException`;
  #L455a74.  v4:= "proxyAuthenticator == null" @kind object;
  #L455a78.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L455a7e.  throw v3;
  #L455a80.  v3:= new `java.lang.NullPointerException`;
  #L455a84.  v4:= "socketFactory == null" @kind object;
  #L455a88.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L455a8e.  throw v3;
  #L455a90.  v3:= new `java.lang.NullPointerException`;
  #L455a94.  v4:= "dns == null" @kind object;
  #L455a98.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L455a9e.  throw v3;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455964.  v0:= v1.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L455968.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4558d4.  v0:= v1.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L4558d8.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45597c.  v0:= v1.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L455980.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Address` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4555f4.  v0:= instanceof @variable v3 @type ^`okhttp3.Address` @kind boolean;
  #L4555f8.  if v0 == 0 then goto L455624;
  #L4555fc.  v0:= v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L455600.  v3:= (`okhttp3.Address`) v3 @kind object;
  #L455604.  v1:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L455608.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45560e.  v0:= temp;
  #L455610.  if v0 == 0 then goto L455624;
  #L455614.  call temp:= `equalsNonHost`(v2, v3) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @kind virtual;
  #L45561a.  v3:= temp;
  #L45561c.  if v3 == 0 then goto L455624;
  #L455620.  v3:= 1I;
  #L455622.  goto L455626;
  #L455624.  v3:= 0I;
  #L455626.  return v3;
}
procedure `boolean` `equalsNonHost`(`okhttp3.Address` v2 @kind this, `okhttp3.Address` v3 @kind object) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L455638.  v0:= v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L45563c.  v1:= v3.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L455640.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L455646.  v0:= temp;
  #L455648.  if v0 == 0 then goto L455714;
  #L45564c.  v0:= v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L455650.  v1:= v3.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L455654.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45565a.  v0:= temp;
  #L45565c.  if v0 == 0 then goto L455714;
  #L455660.  v0:= v2.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L455664.  v1:= v3.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L455668.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L45566e.  v0:= temp;
  #L455670.  if v0 == 0 then goto L455714;
  #L455674.  v0:= v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L455678.  v1:= v3.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L45567c.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L455682.  v0:= temp;
  #L455684.  if v0 == 0 then goto L455714;
  #L455688.  v0:= v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L45568c.  v1:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L455690.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L455696.  v0:= temp;
  #L455698.  if v0 == 0 then goto L455714;
  #L45569c.  v0:= v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L4556a0.  v1:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L4556a4.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4556aa.  v0:= temp;
  #L4556ac.  if v0 == 0 then goto L455714;
  #L4556b0.  v0:= v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L4556b4.  v1:= v3.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L4556b8.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4556be.  v0:= temp;
  #L4556c0.  if v0 == 0 then goto L455714;
  #L4556c4.  v0:= v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L4556c8.  v1:= v3.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L4556cc.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4556d2.  v0:= temp;
  #L4556d4.  if v0 == 0 then goto L455714;
  #L4556d8.  v0:= v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L4556dc.  v1:= v3.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L4556e0.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4556e6.  v0:= temp;
  #L4556e8.  if v0 == 0 then goto L455714;
  #L4556ec.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4556f2.  v0:= temp @kind object;
  #L4556f4.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L4556fa.  v0:= temp;
  #L4556fc.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L455702.  v3:= temp @kind object;
  #L455704.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L45570a.  v3:= temp;
  #L45570c.  if v0 != v3 then goto L455714;
  #L455710.  v3:= 1I;
  #L455712.  goto L455716;
  #L455714.  v3:= 0I;
  #L455716.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Address` v3 @kind this) @signature `Lokhttp3/Address;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L455728.  v0:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L45572c.  call temp:= `hashCode`(v0) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @kind virtual;
  #L455732.  v0:= temp;
  #L455734.  v1:= 527I;
  #L455738.  v1:= v1 + v0 @kind int;
  #L45573a.  v1:= v1 * 31;
  #L45573e.  v0:= v3.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L455742.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L455748.  v0:= temp;
  #L45574a.  v1:= v1 + v0 @kind int;
  #L45574c.  v1:= v1 * 31;
  #L455750.  v0:= v3.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L455754.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L45575a.  v0:= temp;
  #L45575c.  v1:= v1 + v0 @kind int;
  #L45575e.  v1:= v1 * 31;
  #L455762.  v0:= v3.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L455766.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L45576c.  v0:= temp;
  #L45576e.  v1:= v1 + v0 @kind int;
  #L455770.  v1:= v1 * 31;
  #L455774.  v0:= v3.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L455778.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L45577e.  v0:= temp;
  #L455780.  v1:= v1 + v0 @kind int;
  #L455782.  v1:= v1 * 31;
  #L455786.  v0:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L45578a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L455790.  v0:= temp;
  #L455792.  v1:= v1 + v0 @kind int;
  #L455794.  v1:= v1 * 31;
  #L455798.  v0:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L45579c.  v2:= 0I;
  #L45579e.  if v0 == 0 then goto L4557ac;
  #L4557a2.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L4557a8.  v0:= temp;
  #L4557aa.  goto L4557ae;
  #L4557ac.  v0:= 0I;
  #L4557ae.  v1:= v1 + v0 @kind int;
  #L4557b0.  v1:= v1 * 31;
  #L4557b4.  v0:= v3.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L4557b8.  if v0 == 0 then goto L4557c6;
  #L4557bc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4557c2.  v0:= temp;
  #L4557c4.  goto L4557c8;
  #L4557c6.  v0:= 0I;
  #L4557c8.  v1:= v1 + v0 @kind int;
  #L4557ca.  v1:= v1 * 31;
  #L4557ce.  v0:= v3.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L4557d2.  if v0 == 0 then goto L4557e0;
  #L4557d6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4557dc.  v0:= temp;
  #L4557de.  goto L4557e2;
  #L4557e0.  v0:= 0I;
  #L4557e2.  v1:= v1 + v0 @kind int;
  #L4557e4.  v1:= v1 * 31;
  #L4557e8.  v0:= v3.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L4557ec.  if v0 == 0 then goto L4557f8;
  #L4557f0.  call temp:= `hashCode`(v0) @signature `Lokhttp3/CertificatePinner;.hashCode:()I` @kind virtual;
  #L4557f6.  v2:= temp;
  #L4557f8.  v1:= v1 + v2 @kind int;
  #L4557fa.  return v1;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45591c.  v0:= v1.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L455920.  return v0 @kind object;
}
procedure `java.util.List` `protocols`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4558ec.  v0:= v1.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L4558f0.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4558a4.  v0:= v1.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L4558a8.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45594c.  v0:= v1.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L455950.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4558bc.  v0:= v1.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L4558c0.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455904.  v0:= v1.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L455908.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455934.  v0:= v1.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L455938.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Address` v2 @kind this) @signature `Lokhttp3/Address;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45580c.  v0:= new `java.lang.StringBuilder`;
  #L455810.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L455816.  v1:= "Address{" @kind object;
  #L45581a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L455820.  v1:= v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L455824.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L45582a.  v1:= temp @kind object;
  #L45582c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L455832.  v1:= ":" @kind object;
  #L455836.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45583c.  v1:= v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L455840.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L455846.  v1:= temp;
  #L455848.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45584e.  v1:= v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L455852.  if v1 == 0 then goto L45586c;
  #L455856.  v1:= ", proxy=" @kind object;
  #L45585a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L455860.  v1:= v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L455864.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45586a.  goto L455880;
  #L45586c.  v1:= ", proxySelector=" @kind object;
  #L455870.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L455876.  v1:= v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L45587a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L455880.  v1:= "}" @kind object;
  #L455884.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45588a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L455890.  v0:= temp @kind object;
  #L455892.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455994.  v0:= v1.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L455998.  return v0 @kind object;
}
