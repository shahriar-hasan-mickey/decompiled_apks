record `okhttp3.MultipartBody$Part` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.MultipartBody$Part.body` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.MultipartBody$Part.headers` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Part` v0 @kind this, `okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L45ebd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45ebde.  v0.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` := v1 @kind object;
  #L45ebe2.  v0.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L45ebe6.  return @kind void;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ea88.  if v2 == 0 then goto L45eae4;
  #L45ea8c.  if v1 == 0 then goto L45eab2;
  #L45ea90.  v0:= "Content-Type" @kind object;
  #L45ea94.  call temp:= `get`(v1, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L45ea9a.  v0:= temp @kind object;
  #L45ea9c.  if v0 != 0 then goto L45eaa2;
  #L45eaa0.  goto L45eab2;
  #L45eaa2.  v1:= new `java.lang.IllegalArgumentException`;
  #L45eaa6.  v2:= "Unexpected header: Content-Type" @kind object;
  #L45eaaa.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45eab0.  throw v1;
  #L45eab2.  if v1 == 0 then goto L45ead8;
  #L45eab6.  v0:= "Content-Length" @kind object;
  #L45eaba.  call temp:= `get`(v1, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L45eac0.  v0:= temp @kind object;
  #L45eac2.  if v0 != 0 then goto L45eac8;
  #L45eac6.  goto L45ead8;
  #L45eac8.  v1:= new `java.lang.IllegalArgumentException`;
  #L45eacc.  v2:= "Unexpected header: Content-Length" @kind object;
  #L45ead0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ead6.  throw v1;
  #L45ead8.  v0:= new `okhttp3.MultipartBody$Part`;
  #L45eadc.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @kind direct;
  #L45eae2.  return v0 @kind object;
  #L45eae4.  v1:= new `java.lang.NullPointerException`;
  #L45eae8.  v2:= "body == null" @kind object;
  #L45eaec.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45eaf2.  throw v1;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.RequestBody` v1 @kind object) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eb04.  v0:= 0I;
  #L45eb06.  call temp:= `create`(v0, v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L45eb0c.  v1:= temp @kind object;
  #L45eb0e.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eb20.  v0:= 0I;
  #L45eb22.  call temp:= `create`(v0, v2) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L45eb28.  v2:= temp @kind object;
  #L45eb2a.  call temp:= `createFormData`(v1, v0, v2) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L45eb30.  v1:= temp @kind object;
  #L45eb32.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `okhttp3.RequestBody` v4 @kind object) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45eb44.  if v2 == 0 then goto L45eba0;
  #L45eb48.  v0:= new `java.lang.StringBuilder`;
  #L45eb4c.  v1:= "form-data; name=" @kind object;
  #L45eb50.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45eb56.  call temp:= `appendQuotedString`(v0, v2) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L45eb5c.  if v3 == 0 then goto L45eb70;
  #L45eb60.  v2:= "; filename=" @kind object;
  #L45eb64.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45eb6a.  call temp:= `appendQuotedString`(v0, v3) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L45eb70.  v2:= 2I;
  #L45eb72.  v2:= new `java.lang.String`[v2];
  #L45eb76.  v3:= 0I;
  #L45eb78.  v1:= "Content-Disposition" @kind object;
  #L45eb7c.  v2[v3]:= v1 @kind object;
  #L45eb80.  v3:= 1I;
  #L45eb82.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45eb88.  v0:= temp @kind object;
  #L45eb8a.  v2[v3]:= v0 @kind object;
  #L45eb8e.  call temp:= `of`(v2) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L45eb94.  v2:= temp @kind object;
  #L45eb96.  call temp:= `create`(v2, v4) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L45eb9c.  v2:= temp @kind object;
  #L45eb9e.  return v2 @kind object;
  #L45eba0.  v2:= new `java.lang.NullPointerException`;
  #L45eba4.  v3:= "name == null" @kind object;
  #L45eba8.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ebae.  throw v2;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45ebc0.  v0:= v1.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` @kind object;
  #L45ebc4.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45ea70.  v0:= v1.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` @kind object;
  #L45ea74.  return v0 @kind object;
}
