record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.mediaType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.subtype` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.type` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.MediaType.PARAMETER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.QUOTED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.TOKEN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.TYPE_SUBTYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L45e838.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L45e83c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L45e842.  v0:= temp @kind object;
  #L45e844.  `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L45e848.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L45e84c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L45e852.  v0:= temp @kind object;
  #L45e854.  `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L45e858.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L45e86c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45e872.  v0.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` := v1 @kind object;
  #L45e876.  v0.`okhttp3.MediaType.type` @type ^`java.lang.String` := v2 @kind object;
  #L45e87a.  v0.`okhttp3.MediaType.subtype` @type ^`java.lang.String` := v3 @kind object;
  #L45e87e.  v0.`okhttp3.MediaType.charset` @type ^`java.lang.String` := v4 @kind object;
  #L45e882.  return @kind void;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v10 @kind object) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L45e708.  v0:= `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` @kind object;
  #L45e70c.  call temp:= `matcher`(v0, v10) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L45e712.  v0:= temp @kind object;
  #L45e714.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L45e71a.  v1:= temp;
  #L45e71c.  v2:= 0I;
  #L45e71e.  if v1 != 0 then goto L45e724;
  #L45e722.  return v2 @kind object;
  #L45e724.  v1:= 1I;
  #L45e726.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45e72c.  v3:= temp @kind object;
  #L45e72e.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L45e732.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L45e738.  v3:= temp @kind object;
  #L45e73a.  v4:= 2I;
  #L45e73c.  call temp:= `group`(v0, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45e742.  v5:= temp @kind object;
  #L45e744.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L45e748.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L45e74e.  v5:= temp @kind object;
  #L45e750.  v6:= `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` @kind object;
  #L45e754.  call temp:= `matcher`(v6, v10) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L45e75a.  v6:= temp @kind object;
  #L45e75c.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L45e762.  v0:= temp;
  #L45e764.  v7:= v2 @kind object;
  #L45e766.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45e76c.  v8:= temp;
  #L45e76e.  if v0 >= v8 then goto L45e81c;
  #L45e772.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45e778.  v8:= temp;
  #L45e77a.  call temp:= `region`(v6, v0, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L45e780.  call temp:= `lookingAt`(v6) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L45e786.  v0:= temp;
  #L45e788.  if v0 != 0 then goto L45e78e;
  #L45e78c.  return v2 @kind object;
  #L45e78e.  call temp:= `group`(v6, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45e794.  v0:= temp @kind object;
  #L45e796.  if v0 == 0 then goto L45e812;
  #L45e79a.  v8:= "charset" @kind object;
  #L45e79e.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45e7a4.  v0:= temp;
  #L45e7a6.  if v0 != 0 then goto L45e7ac;
  #L45e7aa.  goto L45e812;
  #L45e7ac.  call temp:= `group`(v6, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45e7b2.  v0:= temp @kind object;
  #L45e7b4.  if v0 == 0 then goto L45e7f4;
  #L45e7b8.  v8:= "'" @kind object;
  #L45e7bc.  call temp:= `startsWith`(v0, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L45e7c2.  v9:= temp;
  #L45e7c4.  if v9 == 0 then goto L45e7fe;
  #L45e7c8.  call temp:= `endsWith`(v0, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L45e7ce.  v8:= temp;
  #L45e7d0.  if v8 == 0 then goto L45e7fe;
  #L45e7d4.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45e7da.  v8:= temp;
  #L45e7dc.  if v8 <= v4 then goto L45e7fe;
  #L45e7e0.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45e7e6.  v8:= temp;
  #L45e7e8.  v8:= v8 - v1 @kind int;
  #L45e7ea.  call temp:= `substring`(v0, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L45e7f0.  v0:= temp @kind object;
  #L45e7f2.  goto L45e7fe;
  #L45e7f4.  v0:= 3I;
  #L45e7f6.  call temp:= `group`(v6, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L45e7fc.  v0:= temp @kind object;
  #L45e7fe.  if v7 == 0 then goto L45e810;
  #L45e802.  call temp:= `equalsIgnoreCase`(v0, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45e808.  v7:= temp;
  #L45e80a.  if v7 != 0 then goto L45e810;
  #L45e80e.  return v2 @kind object;
  #L45e810.  v7:= v0 @kind object;
  #L45e812.  call temp:= `end`(v6) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L45e818.  v0:= temp;
  #L45e81a.  goto L45e766;
  #L45e81c.  v0:= new `okhttp3.MediaType`;
  #L45e820.  call `<init>`(v0, v10, v3, v5, v7) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L45e826.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e6b4.  v0:= 0I;
  #L45e6b6.  call temp:= `charset`(v1, v0) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L45e6bc.  v0:= temp @kind object;
  #L45e6be.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e6d0.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L45e6d4.  if v0 == 0 then goto L45e6e4;
  #L45e6d8.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L45e6dc.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L45e6e2.  v2:= temp @kind object;
  #L45e6e4.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L45e6d0..L45e6e4] goto L45e6e4;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e614.  v0:= instanceof @variable v2 @type ^`okhttp3.MediaType` @kind boolean;
  #L45e618.  if v0 == 0 then goto L45e638;
  #L45e61c.  v2:= (`okhttp3.MediaType`) v2 @kind object;
  #L45e620.  v2:= v2.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L45e624.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L45e628.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45e62e.  v2:= temp;
  #L45e630.  if v2 == 0 then goto L45e638;
  #L45e634.  v2:= 1I;
  #L45e636.  goto L45e63a;
  #L45e638.  v2:= 0I;
  #L45e63a.  return v2;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e64c.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L45e650.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L45e656.  v0:= temp;
  #L45e658.  return v0;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e66c.  v0:= v1.`okhttp3.MediaType.subtype` @type ^`java.lang.String` @kind object;
  #L45e670.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e684.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L45e688.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e69c.  v0:= v1.`okhttp3.MediaType.type` @type ^`java.lang.String` @kind object;
  #L45e6a0.  return v0 @kind object;
}
