record `okhttp3.HttpUrl$Builder$ParseResult` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `okhttp3.HttpUrl$Builder$ParseResult`[] `@@okhttp3.HttpUrl$Builder$ParseResult.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45c274.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L45c278.  v1:= 0I;
  #L45c27a.  v2:= "SUCCESS" @kind object;
  #L45c27e.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45c284.  `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L45c288.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L45c28c.  v2:= 1I;
  #L45c28e.  v3:= "MISSING_SCHEME" @kind object;
  #L45c292.  call `<init>`(v0, v3, v2) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45c298.  `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L45c29c.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L45c2a0.  v3:= 2I;
  #L45c2a2.  v4:= "UNSUPPORTED_SCHEME" @kind object;
  #L45c2a6.  call `<init>`(v0, v4, v3) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45c2ac.  `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L45c2b0.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L45c2b4.  v4:= 3I;
  #L45c2b6.  v5:= "INVALID_PORT" @kind object;
  #L45c2ba.  call `<init>`(v0, v5, v4) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45c2c0.  `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L45c2c4.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L45c2c8.  v5:= 4I;
  #L45c2ca.  v6:= "INVALID_HOST" @kind object;
  #L45c2ce.  call `<init>`(v0, v6, v5) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45c2d4.  `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L45c2d8.  v0:= 5I;
  #L45c2da.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`[v0];
  #L45c2de.  v6:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c2e2.  v0[v1]:= v6 @kind object;
  #L45c2e6.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c2ea.  v0[v2]:= v1 @kind object;
  #L45c2ee.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c2f2.  v0[v3]:= v1 @kind object;
  #L45c2f6.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c2fa.  v0[v4]:= v1 @kind object;
  #L45c2fe.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c302.  v0[v5]:= v1 @kind object;
  #L45c306.  `@@okhttp3.HttpUrl$Builder$ParseResult.$VALUES` @type ^`okhttp3.HttpUrl$Builder$ParseResult`[] := v0 @kind object;
  #L45c30a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder$ParseResult` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L45c31c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45c322.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.valueOf:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45c22c.  v0:= constclass @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45c230.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L45c236.  v1:= temp @kind object;
  #L45c238.  v1:= (`okhttp3.HttpUrl$Builder$ParseResult`) v1 @kind object;
  #L45c23c.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult`[] `values`() @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.values:()[Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45c250.  v0:= `@@okhttp3.HttpUrl$Builder$ParseResult.$VALUES` @type ^`okhttp3.HttpUrl$Builder$ParseResult`[] @kind object;
  #L45c254.  call temp:= `clone`(v0) @signature `[Lokhttp3/HttpUrl$Builder$ParseResult;.clone:()Ljava/lang/Object;` @kind virtual;
  #L45c25a.  v0:= temp @kind object;
  #L45c25c.  v0:= (`okhttp3.HttpUrl$Builder$ParseResult`[]) v0 @kind object;
  #L45c260.  return v0 @kind object;
}
