record `okhttp3.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.Request.body` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Request.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Headers` `okhttp3.Request.headers` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Request.method` @AccessFlag FINAL;
  `java.lang.Object` `okhttp3.Request.tag` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Request.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Request` v1 @kind this, `okhttp3.Request$Builder` v2 @kind object) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4610c4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4610ca.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L4610ce.  v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L4610d2.  v0:= v2.`okhttp3.Request$Builder.method` @type ^`java.lang.String` @kind object;
  #L4610d6.  v1.`okhttp3.Request.method` @type ^`java.lang.String` := v0 @kind object;
  #L4610da.  v0:= v2.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L4610de.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L4610e4.  v0:= temp @kind object;
  #L4610e6.  v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L4610ea.  v0:= v2.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` @kind object;
  #L4610ee.  v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L4610f2.  v0:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L4610f6.  if v0 == 0 then goto L461100;
  #L4610fa.  v2:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L4610fe.  goto L461102;
  #L461100.  v2:= v1 @kind object;
  #L461102.  v1.`okhttp3.Request.tag` @type ^`java.lang.Object` := v2 @kind object;
  #L461106.  return @kind void;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4610ac.  v0:= v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L4610b0.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461034.  v0:= v1.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L461038.  if v0 == 0 then goto L46103e;
  #L46103c.  goto L46104e;
  #L46103e.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L461042.  call temp:= `parse`(v0) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L461048.  v0:= temp @kind object;
  #L46104a.  v1.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L46104e.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460f68.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L460f6c.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L460f72.  v2:= temp @kind object;
  #L460f74.  return v2 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461014.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L461018.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L46101e.  v2:= temp @kind object;
  #L461020.  return v2 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461060.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L461064.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460f30.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L460f34.  call temp:= `isHttps`(v0) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L460f3a.  v0:= temp;
  #L460f3c.  return v0;
}
procedure `java.lang.String` `method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460f88.  v0:= v1.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L460f8c.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `newBuilder`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461090.  v0:= new `okhttp3.Request$Builder`;
  #L461094.  call `<init>`(v0, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @kind direct;
  #L46109a.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460f50.  v0:= v1.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L460f54.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L460fa0.  v0:= new `java.lang.StringBuilder`;
  #L460fa4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L460faa.  v1:= "Request{method=" @kind object;
  #L460fae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460fb4.  v1:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L460fb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460fbe.  v1:= ", url=" @kind object;
  #L460fc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460fc8.  v1:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L460fcc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460fd2.  v1:= ", tag=" @kind object;
  #L460fd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460fdc.  v1:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L460fe0.  if v1 == v2 then goto L460fe6;
  #L460fe4.  goto L460fe8;
  #L460fe6.  v1:= 0I;
  #L460fe8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460fee.  v1:= 125I;
  #L460ff2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L460ff8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L460ffe.  v0:= temp @kind object;
  #L461000.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461078.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L46107c.  return v0 @kind object;
}
