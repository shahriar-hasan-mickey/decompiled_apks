record `okhttp3.HttpUrl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedFragment` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedPassword` @AccessFlag ;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedPathSegments` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedUsername` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.host` @AccessFlag ;
  `int` `okhttp3.HttpUrl$Builder.port` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.scheme` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L45d3b4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45d3ba.  v0:= "" @kind object;
  #L45d3be.  v2.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L45d3c2.  v2.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L45d3c6.  v1:= -1I;
  #L45d3c8.  v2.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L45d3cc.  v1:= new `java.util.ArrayList`;
  #L45d3d0.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45d3d6.  v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` := v1 @kind object;
  #L45d3da.  v1:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d3de.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d3e4.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v8 @kind this, `java.lang.String` v9 @kind object, `boolean` v10 ) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L45c884.  v0:= 0I;
  #L45c886.  v3:= 0I;
  #L45c888.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45c88e.  v1:= temp;
  #L45c890.  v2:= "/\\" @kind object;
  #L45c894.  call temp:= `delimiterOffset`(v9, v3, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L45c89a.  v7:= temp;
  #L45c89c.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45c8a2.  v1:= temp;
  #L45c8a4.  if v7 >= v1 then goto L45c8ae;
  #L45c8a8.  v1:= 1I;
  #L45c8aa.  v5:= 1I;
  #L45c8ac.  goto L45c8b0;
  #L45c8ae.  v5:= 0I;
  #L45c8b0.  v1:= v8 @kind object;
  #L45c8b2.  v2:= v9 @kind object;
  #L45c8b4.  v4:= v7;
  #L45c8b6.  v6:= v10;
  #L45c8b8.  call `push`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L45c8be.  v3:= v7 + 1;
  #L45c8c2.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45c8c8.  v1:= temp;
  #L45c8ca.  if v3 <= v1 then goto L45c888;
  #L45c8ce.  return v8 @kind object;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L45c57c.  v0:= 0I;
  #L45c57e.  call temp:= `percentDecode`(v1, v2, v3, v0) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L45c584.  v1:= temp @kind object;
  #L45c586.  call temp:= `canonicalizeHost`(v1) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L45c58c.  v1:= temp @kind object;
  #L45c58e.  return v1 @kind object;
}
procedure `boolean` `isDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L45c334.  v0:= "." @kind object;
  #L45c338.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45c33e.  v0:= temp;
  #L45c340.  if v0 != 0 then goto L45c35a;
  #L45c344.  v0:= "%2e" @kind object;
  #L45c348.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45c34e.  v2:= temp;
  #L45c350.  if v2 == 0 then goto L45c356;
  #L45c354.  goto L45c35a;
  #L45c356.  v2:= 0I;
  #L45c358.  goto L45c35c;
  #L45c35a.  v2:= 1I;
  #L45c35c.  return v2;
}
procedure `boolean` `isDotDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L45c370.  v0:= ".." @kind object;
  #L45c374.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45c37a.  v0:= temp;
  #L45c37c.  if v0 != 0 then goto L45c3b6;
  #L45c380.  v0:= "%2e." @kind object;
  #L45c384.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45c38a.  v0:= temp;
  #L45c38c.  if v0 != 0 then goto L45c3b6;
  #L45c390.  v0:= ".%2e" @kind object;
  #L45c394.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45c39a.  v0:= temp;
  #L45c39c.  if v0 != 0 then goto L45c3b6;
  #L45c3a0.  v0:= "%2e%2e" @kind object;
  #L45c3a4.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45c3aa.  v2:= temp;
  #L45c3ac.  if v2 == 0 then goto L45c3b2;
  #L45c3b0.  goto L45c3b6;
  #L45c3b2.  v2:= 0I;
  #L45c3b4.  goto L45c3b8;
  #L45c3b6.  v2:= 1I;
  #L45c3b8.  return v2;
}
procedure `int` `parsePort`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L45c3f8.  v0:= -1I;
  #L45c3fa.  v4:= "" @kind object;
  #L45c3fe.  v5:= 0I;
  #L45c400.  v6:= 0I;
  #L45c402.  v7:= 0I;
  #L45c404.  v8:= 1I;
  #L45c406.  v9:= 0I;
  #L45c408.  v1:= v10 @kind object;
  #L45c40a.  v2:= v11;
  #L45c40c.  v3:= v12;
  #L45c40e.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45c414.  v10:= temp @kind object;
  #L45c416.  call temp:= `parseInt`(v10) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L45c41c.  v10:= temp;
  #L45c41e.  if v10 <= 0 then goto L45c42e;
  #L45c422.  v11:= 65535I;
  #L45c428.  if v10 > v11 then goto L45c42e;
  #L45c42c.  return v10;
  #L45c42e.  return v0;
  catch `java.lang.NumberFormatException` @[L45c3fa..L45c41e] goto L45c42e;
}
procedure `void` `pop`(`okhttp3.HttpUrl$Builder` v3 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45d3f8.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d3fc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45d402.  v1:= temp;
  #L45d404.  v1:= v1 + -1;
  #L45d408.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L45d40e.  v0:= temp @kind object;
  #L45d410.  v0:= (`java.lang.String`) v0 @kind object;
  #L45d414.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L45d41a.  v0:= temp;
  #L45d41c.  v1:= "" @kind object;
  #L45d420.  if v0 == 0 then goto L45d44c;
  #L45d424.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d428.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L45d42e.  v0:= temp;
  #L45d430.  if v0 != 0 then goto L45d44c;
  #L45d434.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d438.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45d43e.  v2:= temp;
  #L45d440.  v2:= v2 + -1;
  #L45d444.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45d44a.  goto L45d456;
  #L45d44c.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d450.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d456.  return @kind void;
}
procedure `int` `portColonOffset`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L45c450.  if v3 >= v4 then goto L45c48e;
  #L45c454.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45c45a.  v0:= temp;
  #L45c45c.  v1:= 58I;
  #L45c460.  if v0 == v1 then goto L45c48c;
  #L45c464.  v1:= 91I;
  #L45c468.  if v0 == v1 then goto L45c46e;
  #L45c46c.  goto L45c486;
  #L45c46e.  v3:= v3 + 1;
  #L45c472.  if v3 >= v4 then goto L45c486;
  #L45c476.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45c47c.  v0:= temp;
  #L45c47e.  v1:= 93I;
  #L45c482.  if v0 != v1 then goto L45c46e;
  #L45c486.  v3:= v3 + 1;
  #L45c48a.  goto L45c450;
  #L45c48c.  return v3;
  #L45c48e.  return v4;
}
procedure `void` `push`(`okhttp3.HttpUrl$Builder` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L45d468.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L45d46c.  v5:= 0I;
  #L45d46e.  v6:= 0I;
  #L45d470.  v7:= 1I;
  #L45d472.  v8:= 0I;
  #L45d474.  v0:= v10 @kind object;
  #L45d476.  v1:= v11;
  #L45d478.  v2:= v12;
  #L45d47a.  v4:= v14;
  #L45d47c.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45d482.  v10:= temp @kind object;
  #L45d484.  call temp:= `isDot`(v9, v10) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L45d48a.  v11:= temp;
  #L45d48c.  if v11 == 0 then goto L45d492;
  #L45d490.  return @kind void;
  #L45d492.  call temp:= `isDotDot`(v9, v10) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L45d498.  v11:= temp;
  #L45d49a.  if v11 == 0 then goto L45d4a6;
  #L45d49e.  call `pop`(v9) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @kind direct;
  #L45d4a4.  return @kind void;
  #L45d4a6.  v11:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d4aa.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45d4b0.  v12:= temp;
  #L45d4b2.  v12:= v12 + -1;
  #L45d4b6.  call temp:= `get`(v11, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45d4bc.  v11:= temp @kind object;
  #L45d4be.  v11:= (`java.lang.String`) v11 @kind object;
  #L45d4c2.  call temp:= `isEmpty`(v11) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L45d4c8.  v11:= temp;
  #L45d4ca.  if v11 == 0 then goto L45d4e6;
  #L45d4ce.  v11:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d4d2.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45d4d8.  v12:= temp;
  #L45d4da.  v12:= v12 + -1;
  #L45d4de.  call temp:= `set`(v11, v12, v10) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45d4e4.  goto L45d4f0;
  #L45d4e6.  v11:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d4ea.  call temp:= `add`(v11, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d4f0.  if v13 == 0 then goto L45d502;
  #L45d4f4.  v10:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d4f8.  v11:= "" @kind object;
  #L45d4fc.  call temp:= `add`(v10, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d502.  return @kind void;
}
procedure `void` `removeAllCanonicalQueryParameters`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45d514.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45d518.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45d51e.  v0:= temp;
  #L45d520.  v0:= v0 + -2;
  #L45d524.  if v0 < 0 then goto L45d576;
  #L45d528.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45d52c.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45d532.  v1:= temp @kind object;
  #L45d534.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45d53a.  v1:= temp;
  #L45d53c.  if v1 == 0 then goto L45d570;
  #L45d540.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45d544.  v2:= v0 + 1;
  #L45d548.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L45d54e.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45d552.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L45d558.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45d55c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L45d562.  v1:= temp;
  #L45d564.  if v1 == 0 then goto L45d570;
  #L45d568.  v4:= 0I;
  #L45d56a.  v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v4 @kind object;
  #L45d56e.  return @kind void;
  #L45d570.  v0:= v0 + -2;
  #L45d574.  goto L45d524;
  #L45d576.  return @kind void;
}
procedure `void` `resolvePath`(`okhttp3.HttpUrl$Builder` v10 @kind this, `java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L45d588.  if v12 != v13 then goto L45d58e;
  #L45d58c.  return @kind void;
  #L45d58e.  call temp:= `charAt`(v11, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45d594.  v0:= temp;
  #L45d596.  v1:= 47I;
  #L45d59a.  v2:= "" @kind object;
  #L45d59e.  v3:= 1I;
  #L45d5a0.  if v0 == v1 then goto L45d5c4;
  #L45d5a4.  v1:= 92I;
  #L45d5a8.  if v0 != v1 then goto L45d5ae;
  #L45d5ac.  goto L45d5c4;
  #L45d5ae.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d5b2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45d5b8.  v1:= temp;
  #L45d5ba.  v1:= v1 - v3 @kind int;
  #L45d5bc.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45d5c2.  goto L45d5da;
  #L45d5c4.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d5c8.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L45d5ce.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d5d2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d5d8.  goto L45d60a;
  #L45d5da.  v6:= v12;
  #L45d5dc.  if v6 >= v13 then goto L45d610;
  #L45d5e0.  v12:= "/\\" @kind object;
  #L45d5e4.  call temp:= `delimiterOffset`(v11, v6, v13, v12) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L45d5ea.  v12:= temp;
  #L45d5ec.  if v12 >= v13 then goto L45d5f4;
  #L45d5f0.  v0:= 1I;
  #L45d5f2.  goto L45d5f6;
  #L45d5f4.  v0:= 0I;
  #L45d5f6.  v9:= 1I;
  #L45d5f8.  v4:= v10 @kind object;
  #L45d5fa.  v5:= v11 @kind object;
  #L45d5fc.  v7:= v12;
  #L45d5fe.  v8:= v0;
  #L45d600.  call `push`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L45d606.  if v0 == 0 then goto L45d5da;
  #L45d60a.  v12:= v12 + 1;
  #L45d60e.  goto L45d5da;
  #L45d610.  return @kind void;
}
procedure `int` `schemeDelimiterOffset`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45c4a0.  v0:= v9 - v8 @kind int;
  #L45c4a4.  v1:= -1I;
  #L45c4a6.  v2:= 2I;
  #L45c4a8.  if v0 >= v2 then goto L45c4ae;
  #L45c4ac.  return v1;
  #L45c4ae.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45c4b4.  v0:= temp;
  #L45c4b6.  v2:= 90I;
  #L45c4ba.  v3:= 122I;
  #L45c4be.  v4:= 65I;
  #L45c4c2.  v5:= 97I;
  #L45c4c6.  if v0 < v5 then goto L45c4ce;
  #L45c4ca.  if v0 <= v3 then goto L45c4d8;
  #L45c4ce.  if v0 < v4 then goto L45c52c;
  #L45c4d2.  if v0 <= v2 then goto L45c4d8;
  #L45c4d6.  goto L45c52c;
  #L45c4d8.  v8:= v8 + 1;
  #L45c4dc.  if v8 >= v9 then goto L45c52c;
  #L45c4e0.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45c4e6.  v0:= temp;
  #L45c4e8.  if v0 < v5 then goto L45c4f0;
  #L45c4ec.  if v0 <= v3 then goto L45c4d8;
  #L45c4f0.  if v0 < v4 then goto L45c4f8;
  #L45c4f4.  if v0 <= v2 then goto L45c4d8;
  #L45c4f8.  v6:= 48I;
  #L45c4fc.  if v0 < v6 then goto L45c508;
  #L45c500.  v6:= 57I;
  #L45c504.  if v0 <= v6 then goto L45c4d8;
  #L45c508.  v6:= 43I;
  #L45c50c.  if v0 == v6 then goto L45c4d8;
  #L45c510.  v6:= 45I;
  #L45c514.  if v0 == v6 then goto L45c4d8;
  #L45c518.  v6:= 46I;
  #L45c51c.  if v0 != v6 then goto L45c522;
  #L45c520.  goto L45c4d8;
  #L45c522.  v7:= 58I;
  #L45c526.  if v0 != v7 then goto L45c52c;
  #L45c52a.  return v8;
  #L45c52c.  return v1;
}
procedure `int` `slashCount`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45c540.  v0:= 0I;
  #L45c542.  if v4 >= v5 then goto L45c568;
  #L45c546.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45c54c.  v1:= temp;
  #L45c54e.  v2:= 92I;
  #L45c552.  if v1 == v2 then goto L45c55e;
  #L45c556.  v2:= 47I;
  #L45c55a.  if v1 != v2 then goto L45c568;
  #L45c55e.  v0:= v0 + 1;
  #L45c562.  v4:= v4 + 1;
  #L45c566.  goto L45c542;
  #L45c568.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45c720.  if v7 == 0 then goto L45c73e;
  #L45c724.  v2:= 0I;
  #L45c726.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45c72c.  v3:= temp;
  #L45c72e.  v4:= 0I;
  #L45c730.  v5:= 1I;
  #L45c732.  v0:= v6 @kind object;
  #L45c734.  v1:= v7 @kind object;
  #L45c736.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L45c73c.  return v6 @kind object;
  #L45c73e.  v7:= new `java.lang.NullPointerException`;
  #L45c742.  v0:= "encodedPathSegment == null" @kind object;
  #L45c746.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45c74c.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegments`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45c760.  if v2 == 0 then goto L45c770;
  #L45c764.  v0:= 1I;
  #L45c766.  call temp:= `addPathSegments`(v1, v2, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L45c76c.  v2:= temp @kind object;
  #L45c76e.  return v2 @kind object;
  #L45c770.  v2:= new `java.lang.NullPointerException`;
  #L45c774.  v0:= "encodedPathSegments == null" @kind object;
  #L45c778.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45c77e.  throw v2;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45c790.  if v8 == 0 then goto L45c7f4;
  #L45c794.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45c798.  if v0 != 0 then goto L45c7aa;
  #L45c79c.  v0:= new `java.util.ArrayList`;
  #L45c7a0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45c7a6.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L45c7aa.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45c7ae.  v3:= 1I;
  #L45c7b0.  v4:= 0I;
  #L45c7b2.  v5:= 1I;
  #L45c7b4.  v6:= 1I;
  #L45c7b6.  v2:= " \"'<>#&=" @kind object;
  #L45c7ba.  v1:= v8 @kind object;
  #L45c7bc.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45c7c2.  v8:= temp @kind object;
  #L45c7c4.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c7ca.  v8:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45c7ce.  if v9 == 0 then goto L45c7ea;
  #L45c7d2.  v2:= 1I;
  #L45c7d4.  v3:= 0I;
  #L45c7d6.  v4:= 1I;
  #L45c7d8.  v5:= 1I;
  #L45c7da.  v1:= " \"'<>#&=" @kind object;
  #L45c7de.  v0:= v9 @kind object;
  #L45c7e0.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45c7e6.  v9:= temp @kind object;
  #L45c7e8.  goto L45c7ec;
  #L45c7ea.  v9:= 0I;
  #L45c7ec.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c7f2.  return v7 @kind object;
  #L45c7f4.  v8:= new `java.lang.NullPointerException`;
  #L45c7f8.  v9:= "encodedName == null" @kind object;
  #L45c7fc.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45c802.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45c814.  if v7 == 0 then goto L45c832;
  #L45c818.  v2:= 0I;
  #L45c81a.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45c820.  v3:= temp;
  #L45c822.  v4:= 0I;
  #L45c824.  v5:= 0I;
  #L45c826.  v0:= v6 @kind object;
  #L45c828.  v1:= v7 @kind object;
  #L45c82a.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L45c830.  return v6 @kind object;
  #L45c832.  v7:= new `java.lang.NullPointerException`;
  #L45c836.  v0:= "pathSegment == null" @kind object;
  #L45c83a.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45c840.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45c854.  if v2 == 0 then goto L45c864;
  #L45c858.  v0:= 0I;
  #L45c85a.  call temp:= `addPathSegments`(v1, v2, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L45c860.  v2:= temp @kind object;
  #L45c862.  return v2 @kind object;
  #L45c864.  v2:= new `java.lang.NullPointerException`;
  #L45c868.  v0:= "pathSegments == null" @kind object;
  #L45c86c.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45c872.  throw v2;
}
procedure `okhttp3.HttpUrl$Builder` `addQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45c8e0.  if v8 == 0 then goto L45c944;
  #L45c8e4.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45c8e8.  if v0 != 0 then goto L45c8fa;
  #L45c8ec.  v0:= new `java.util.ArrayList`;
  #L45c8f0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45c8f6.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L45c8fa.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45c8fe.  v3:= 0I;
  #L45c900.  v4:= 0I;
  #L45c902.  v5:= 1I;
  #L45c904.  v6:= 1I;
  #L45c906.  v2:= " \"'<>#&=" @kind object;
  #L45c90a.  v1:= v8 @kind object;
  #L45c90c.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45c912.  v8:= temp @kind object;
  #L45c914.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c91a.  v8:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45c91e.  if v9 == 0 then goto L45c93a;
  #L45c922.  v2:= 0I;
  #L45c924.  v3:= 0I;
  #L45c926.  v4:= 1I;
  #L45c928.  v5:= 1I;
  #L45c92a.  v1:= " \"'<>#&=" @kind object;
  #L45c92e.  v0:= v9 @kind object;
  #L45c930.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45c936.  v9:= temp @kind object;
  #L45c938.  goto L45c93c;
  #L45c93a.  v9:= 0I;
  #L45c93c.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c942.  return v7 @kind object;
  #L45c944.  v8:= new `java.lang.NullPointerException`;
  #L45c948.  v9:= "name == null" @kind object;
  #L45c94c.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45c952.  throw v8;
}
procedure `okhttp3.HttpUrl` `build`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45c6d4.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L45c6d8.  if v0 == 0 then goto L45c700;
  #L45c6dc.  v0:= v2.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L45c6e0.  if v0 == 0 then goto L45c6f0;
  #L45c6e4.  v0:= new `okhttp3.HttpUrl`;
  #L45c6e8.  call `<init>`(v0, v2) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @kind direct;
  #L45c6ee.  return v0 @kind object;
  #L45c6f0.  v0:= new `java.lang.IllegalStateException`;
  #L45c6f4.  v1:= "host == null" @kind object;
  #L45c6f8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45c6fe.  throw v0;
  #L45c700.  v0:= new `java.lang.IllegalStateException`;
  #L45c704.  v1:= "scheme == null" @kind object;
  #L45c708.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45c70e.  throw v0;
}
procedure `int` `effectivePort`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L45c3cc.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L45c3d0.  v1:= -1I;
  #L45c3d2.  if v0 == v1 then goto L45c3d8;
  #L45c3d6.  goto L45c3e4;
  #L45c3d8.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L45c3dc.  call temp:= `defaultPort`(v0) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L45c3e2.  v0:= temp;
  #L45c3e4.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `encodedFragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedFragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45c964.  if v7 == 0 then goto L45c980;
  #L45c968.  v2:= 1I;
  #L45c96a.  v3:= 0I;
  #L45c96c.  v4:= 0I;
  #L45c96e.  v5:= 0I;
  #L45c970.  v1:= "" @kind object;
  #L45c974.  v0:= v7 @kind object;
  #L45c976.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45c97c.  v7:= temp @kind object;
  #L45c97e.  goto L45c982;
  #L45c980.  v7:= 0I;
  #L45c982.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v7 @kind object;
  #L45c986.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPassword`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedPassword:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45c998.  if v7 == 0 then goto L45c9b8;
  #L45c99c.  v2:= 1I;
  #L45c99e.  v3:= 0I;
  #L45c9a0.  v4:= 0I;
  #L45c9a2.  v5:= 1I;
  #L45c9a4.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L45c9a8.  v0:= v7 @kind object;
  #L45c9aa.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45c9b0.  v7:= temp @kind object;
  #L45c9b2.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v7 @kind object;
  #L45c9b6.  return v6 @kind object;
  #L45c9b8.  v7:= new `java.lang.NullPointerException`;
  #L45c9bc.  v0:= "encodedPassword == null" @kind object;
  #L45c9c0.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45c9c6.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPath`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedPath:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45c9d8.  if v4 == 0 then goto L45ca2c;
  #L45c9dc.  v0:= "/" @kind object;
  #L45c9e0.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L45c9e6.  v0:= temp;
  #L45c9e8.  if v0 == 0 then goto L45c9fe;
  #L45c9ec.  v0:= 0I;
  #L45c9ee.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45c9f4.  v1:= temp;
  #L45c9f6.  call `resolvePath`(v3, v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L45c9fc.  return v3 @kind object;
  #L45c9fe.  v0:= new `java.lang.IllegalArgumentException`;
  #L45ca02.  v1:= new `java.lang.StringBuilder`;
  #L45ca06.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45ca0c.  v2:= "unexpected encodedPath: " @kind object;
  #L45ca10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45ca16.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45ca1c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45ca22.  v4:= temp @kind object;
  #L45ca24.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ca2a.  throw v0;
  #L45ca2c.  v4:= new `java.lang.NullPointerException`;
  #L45ca30.  v0:= "encodedPath == null" @kind object;
  #L45ca34.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ca3a.  throw v4;
}
procedure `okhttp3.HttpUrl$Builder` `encodedQuery`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45ca4c.  if v7 == 0 then goto L45ca70;
  #L45ca50.  v2:= 1I;
  #L45ca52.  v3:= 0I;
  #L45ca54.  v4:= 1I;
  #L45ca56.  v5:= 1I;
  #L45ca58.  v1:= " \"'<>#" @kind object;
  #L45ca5c.  v0:= v7 @kind object;
  #L45ca5e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45ca64.  v7:= temp @kind object;
  #L45ca66.  call temp:= `queryStringToNamesAndValues`(v7) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L45ca6c.  v7:= temp @kind object;
  #L45ca6e.  goto L45ca72;
  #L45ca70.  v7:= 0I;
  #L45ca72.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v7 @kind object;
  #L45ca76.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedUsername`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedUsername:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45ca88.  if v7 == 0 then goto L45caa8;
  #L45ca8c.  v2:= 1I;
  #L45ca8e.  v3:= 0I;
  #L45ca90.  v4:= 0I;
  #L45ca92.  v5:= 1I;
  #L45ca94.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L45ca98.  v0:= v7 @kind object;
  #L45ca9a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45caa0.  v7:= temp @kind object;
  #L45caa2.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v7 @kind object;
  #L45caa6.  return v6 @kind object;
  #L45caa8.  v7:= new `java.lang.NullPointerException`;
  #L45caac.  v0:= "encodedUsername == null" @kind object;
  #L45cab0.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cab6.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `fragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.fragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45cac8.  if v7 == 0 then goto L45cae4;
  #L45cacc.  v2:= 0I;
  #L45cace.  v3:= 0I;
  #L45cad0.  v4:= 0I;
  #L45cad2.  v5:= 0I;
  #L45cad4.  v1:= "" @kind object;
  #L45cad8.  v0:= v7 @kind object;
  #L45cada.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45cae0.  v7:= temp @kind object;
  #L45cae2.  goto L45cae6;
  #L45cae4.  v7:= 0I;
  #L45cae6.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v7 @kind object;
  #L45caea.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `host`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45cafc.  if v4 == 0 then goto L45cb4a;
  #L45cb00.  v0:= 0I;
  #L45cb02.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45cb08.  v1:= temp;
  #L45cb0a.  call temp:= `canonicalizeHost`(v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L45cb10.  v0:= temp @kind object;
  #L45cb12.  if v0 == 0 then goto L45cb1c;
  #L45cb16.  v3.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v0 @kind object;
  #L45cb1a.  return v3 @kind object;
  #L45cb1c.  v0:= new `java.lang.IllegalArgumentException`;
  #L45cb20.  v1:= new `java.lang.StringBuilder`;
  #L45cb24.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45cb2a.  v2:= "unexpected host: " @kind object;
  #L45cb2e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45cb34.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45cb3a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45cb40.  v4:= temp @kind object;
  #L45cb42.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cb48.  throw v0;
  #L45cb4a.  v4:= new `java.lang.NullPointerException`;
  #L45cb4e.  v0:= "host == null" @kind object;
  #L45cb52.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cb58.  throw v4;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult` `parse`(`okhttp3.HttpUrl$Builder` v21 @kind this, `okhttp3.HttpUrl` v22 @kind object, `java.lang.String` v23 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L45d00c.  v0:= v21 @kind object;
  #L45d010.  v1:= v22 @kind object;
  #L45d014.  v10:= v23 @kind object;
  #L45d018.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45d01e.  v2:= temp;
  #L45d020.  v8:= 0I;
  #L45d022.  call temp:= `skipLeadingAsciiWhitespace`(v10, v8, v2) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L45d028.  v9:= temp;
  #L45d02a.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45d030.  v2:= temp;
  #L45d032.  call temp:= `skipTrailingAsciiWhitespace`(v10, v9, v2) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L45d038.  v11:= temp;
  #L45d03a.  call temp:= `schemeDelimiterOffset`(v10, v9, v11) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @kind static;
  #L45d040.  v2:= temp;
  #L45d042.  v12:= -1I;
  #L45d044.  if v2 == v12 then goto L45d0a2;
  #L45d048.  v3:= 1I;
  #L45d04a.  v6:= 0I;
  #L45d04c.  v7:= 6I;
  #L45d04e.  v5:= "https:" @kind object;
  #L45d052.  v2:= v23 @kind object;
  #L45d056.  v4:= v9;
  #L45d058.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L45d05e.  v2:= temp;
  #L45d060.  if v2 == 0 then goto L45d072;
  #L45d064.  v2:= "https" @kind object;
  #L45d068.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v2 @kind object;
  #L45d06c.  v9:= v9 + 6;
  #L45d070.  goto L45d0ae;
  #L45d072.  v3:= 1I;
  #L45d074.  v6:= 0I;
  #L45d076.  v7:= 5I;
  #L45d078.  v5:= "http:" @kind object;
  #L45d07c.  v2:= v23 @kind object;
  #L45d080.  v4:= v9;
  #L45d082.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L45d088.  v2:= temp;
  #L45d08a.  if v2 == 0 then goto L45d09c;
  #L45d08e.  v2:= "http" @kind object;
  #L45d092.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v2 @kind object;
  #L45d096.  v9:= v9 + 5;
  #L45d09a.  goto L45d0ae;
  #L45d09c.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45d0a0.  return v1 @kind object;
  #L45d0a2.  if v1 == 0 then goto L45d39c;
  #L45d0a6.  v2:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45d0aa.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v2 @kind object;
  #L45d0ae.  call temp:= `slashCount`(v10, v9, v11) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @kind static;
  #L45d0b4.  v2:= temp;
  #L45d0b6.  v3:= 2I;
  #L45d0b8.  v13:= 63I;
  #L45d0bc.  v14:= 35I;
  #L45d0c0.  if v2 >= v3 then goto L45d146;
  #L45d0c4.  if v1 == 0 then goto L45d146;
  #L45d0c8.  v3:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L45d0cc.  v4:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L45d0d0.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45d0d6.  v3:= temp;
  #L45d0d8.  if v3 != 0 then goto L45d0de;
  #L45d0dc.  goto L45d146;
  #L45d0de.  call temp:= `encodedUsername`(v22) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L45d0e4.  v2:= temp @kind object;
  #L45d0e6.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v2 @kind object;
  #L45d0ea.  call temp:= `encodedPassword`(v22) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L45d0f0.  v2:= temp @kind object;
  #L45d0f2.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v2 @kind object;
  #L45d0f6.  v2:= v1.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L45d0fa.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v2 @kind object;
  #L45d0fe.  v2:= v1.`okhttp3.HttpUrl.port` @type ^`int`;
  #L45d102.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v2;
  #L45d106.  v2:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d10a.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L45d110.  v2:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45d114.  call temp:= `encodedPathSegments`(v22) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L45d11a.  v3:= temp @kind object;
  #L45d11c.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L45d122.  if v9 == v11 then goto L45d132;
  #L45d126.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45d12c.  v2:= temp;
  #L45d12e.  if v2 != v14 then goto L45d140;
  #L45d132.  call temp:= `encodedQuery`(v22) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L45d138.  v1:= temp @kind object;
  #L45d13a.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45d140.  v13:= v9;
  #L45d142.  goto L45d2fe;
  #L45d146.  v9:= v9 + v2 @kind int;
  #L45d148.  v2:= v9;
  #L45d14a.  v16:= 0I;
  #L45d14e.  v17:= 0I;
  #L45d152.  v1:= "@/\\?#" @kind object;
  #L45d156.  call temp:= `delimiterOffset`(v10, v2, v11, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L45d15c.  v9:= temp;
  #L45d15e.  if v9 == v11 then goto L45d16c;
  #L45d162.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45d168.  v1:= temp;
  #L45d16a.  goto L45d16e;
  #L45d16c.  v1:= -1I;
  #L45d16e.  if v1 == v12 then goto L45d29c;
  #L45d172.  if v1 == v14 then goto L45d29c;
  #L45d176.  v3:= 47I;
  #L45d17a.  if v1 == v3 then goto L45d29c;
  #L45d17e.  v3:= 92I;
  #L45d182.  if v1 == v3 then goto L45d29c;
  #L45d186.  if v1 == v13 then goto L45d29c;
  #L45d18a.  v3:= 64I;
  #L45d18e.  if v1 == v3 then goto L45d196;
  #L45d192.  goto L45d290;
  #L45d196.  v8:= "%40" @kind object;
  #L45d19a.  if v16 != 0 then goto L45d240;
  #L45d19e.  v1:= 58I;
  #L45d1a2.  call temp:= `delimiterOffset`(v10, v2, v9, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L45d1a8.  v7:= temp;
  #L45d1aa.  v5:= 1I;
  #L45d1ac.  v6:= 0I;
  #L45d1ae.  v18:= 0I;
  #L45d1b2.  v19:= 1I;
  #L45d1b6.  v20:= 0I;
  #L45d1ba.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L45d1be.  v1:= v23 @kind object;
  #L45d1c2.  v3:= v7;
  #L45d1c4.  v15:= v7;
  #L45d1c6.  v7:= v18;
  #L45d1ca.  v14:= v8 @kind object;
  #L45d1cc.  v8:= v19;
  #L45d1d0.  v13:= v9;
  #L45d1d2.  v9:= v20 @kind object;
  #L45d1d6.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45d1dc.  v1:= temp @kind object;
  #L45d1de.  if v17 == 0 then goto L45d20a;
  #L45d1e2.  v2:= new `java.lang.StringBuilder`;
  #L45d1e6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45d1ec.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L45d1f0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45d1f6.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45d1fc.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45d202.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45d208.  v1:= temp @kind object;
  #L45d20a.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v1 @kind object;
  #L45d20e.  if v15 == v13 then goto L45d23a;
  #L45d212.  v2:= v15 + 1;
  #L45d216.  v5:= 1I;
  #L45d218.  v6:= 0I;
  #L45d21a.  v7:= 0I;
  #L45d21c.  v8:= 1I;
  #L45d21e.  v9:= 0I;
  #L45d220.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L45d224.  v1:= v23 @kind object;
  #L45d228.  v3:= v13;
  #L45d22a.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45d230.  v1:= temp @kind object;
  #L45d232.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L45d236.  v16:= 1I;
  #L45d23a.  v17:= 1I;
  #L45d23e.  goto L45d28c;
  #L45d240.  v14:= v8 @kind object;
  #L45d242.  v13:= v9;
  #L45d244.  v15:= new `java.lang.StringBuilder`;
  #L45d248.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45d24e.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L45d252.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45d258.  call temp:= `append`(v15, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45d25e.  v5:= 1I;
  #L45d260.  v6:= 0I;
  #L45d262.  v7:= 0I;
  #L45d264.  v8:= 1I;
  #L45d266.  v9:= 0I;
  #L45d268.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L45d26c.  v1:= v23 @kind object;
  #L45d270.  v3:= v13;
  #L45d272.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45d278.  v1:= temp @kind object;
  #L45d27a.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45d280.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45d286.  v1:= temp @kind object;
  #L45d288.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L45d28c.  v2:= v13 + 1;
  #L45d290.  v13:= 63I;
  #L45d294.  v14:= 35I;
  #L45d298.  goto L45d152;
  #L45d29c.  v13:= v9;
  #L45d29e.  call temp:= `portColonOffset`(v10, v2, v13) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @kind static;
  #L45d2a4.  v1:= temp;
  #L45d2a6.  v3:= v1 + 1;
  #L45d2aa.  if v3 >= v13 then goto L45d2d4;
  #L45d2ae.  call temp:= `canonicalizeHost`(v10, v2, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L45d2b4.  v1:= temp @kind object;
  #L45d2b6.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L45d2ba.  call temp:= `parsePort`(v10, v3, v13) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @kind static;
  #L45d2c0.  v1:= temp;
  #L45d2c2.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L45d2c6.  v1:= v0.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L45d2ca.  if v1 != v12 then goto L45d2f0;
  #L45d2ce.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45d2d2.  return v1 @kind object;
  #L45d2d4.  call temp:= `canonicalizeHost`(v10, v2, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L45d2da.  v1:= temp @kind object;
  #L45d2dc.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L45d2e0.  v1:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L45d2e4.  call temp:= `defaultPort`(v1) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L45d2ea.  v1:= temp;
  #L45d2ec.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L45d2f0.  v1:= v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L45d2f4.  if v1 != 0 then goto L45d2fe;
  #L45d2f8.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45d2fc.  return v1 @kind object;
  #L45d2fe.  v1:= "?#" @kind object;
  #L45d302.  call temp:= `delimiterOffset`(v10, v13, v11, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L45d308.  v1:= temp;
  #L45d30a.  call `resolvePath`(v0, v10, v13, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L45d310.  if v1 >= v11 then goto L45d35e;
  #L45d314.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45d31a.  v2:= temp;
  #L45d31c.  v3:= 63I;
  #L45d320.  if v2 != v3 then goto L45d35e;
  #L45d324.  v2:= 35I;
  #L45d328.  call temp:= `delimiterOffset`(v10, v1, v11, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L45d32e.  v12:= temp;
  #L45d330.  v2:= v1 + 1;
  #L45d334.  v5:= 1I;
  #L45d336.  v6:= 0I;
  #L45d338.  v7:= 1I;
  #L45d33a.  v8:= 1I;
  #L45d33c.  v9:= 0I;
  #L45d33e.  v4:= " \"'<>#" @kind object;
  #L45d342.  v1:= v23 @kind object;
  #L45d346.  v3:= v12;
  #L45d348.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45d34e.  v1:= temp @kind object;
  #L45d350.  call temp:= `queryStringToNamesAndValues`(v1) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L45d356.  v1:= temp @kind object;
  #L45d358.  v0.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v1 @kind object;
  #L45d35c.  v1:= v12;
  #L45d35e.  if v1 >= v11 then goto L45d396;
  #L45d362.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L45d368.  v2:= temp;
  #L45d36a.  v3:= 35I;
  #L45d36e.  if v2 != v3 then goto L45d396;
  #L45d372.  v2:= 1I;
  #L45d374.  v2:= v2 + v1 @kind int;
  #L45d376.  v5:= 1I;
  #L45d378.  v6:= 0I;
  #L45d37a.  v7:= 0I;
  #L45d37c.  v8:= 0I;
  #L45d37e.  v9:= 0I;
  #L45d380.  v4:= "" @kind object;
  #L45d384.  v1:= v23 @kind object;
  #L45d388.  v3:= v11;
  #L45d38a.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45d390.  v1:= temp @kind object;
  #L45d392.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L45d396.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45d39a.  return v1 @kind object;
  #L45d39c.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L45d3a0.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `password`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45cb6c.  if v7 == 0 then goto L45cb8c;
  #L45cb70.  v2:= 0I;
  #L45cb72.  v3:= 0I;
  #L45cb74.  v4:= 0I;
  #L45cb76.  v5:= 1I;
  #L45cb78.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L45cb7c.  v0:= v7 @kind object;
  #L45cb7e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45cb84.  v7:= temp @kind object;
  #L45cb86.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v7 @kind object;
  #L45cb8a.  return v6 @kind object;
  #L45cb8c.  v7:= new `java.lang.NullPointerException`;
  #L45cb90.  v0:= "password == null" @kind object;
  #L45cb94.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cb9a.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `port`(`okhttp3.HttpUrl$Builder` v3 @kind this, `int` v4 ) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45cbac.  if v4 <= 0 then goto L45cbc0;
  #L45cbb0.  v0:= 65535I;
  #L45cbb6.  if v4 > v0 then goto L45cbc0;
  #L45cbba.  v3.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v4;
  #L45cbbe.  return v3 @kind object;
  #L45cbc0.  v0:= new `java.lang.IllegalArgumentException`;
  #L45cbc4.  v1:= new `java.lang.StringBuilder`;
  #L45cbc8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45cbce.  v2:= "unexpected port: " @kind object;
  #L45cbd2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45cbd8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45cbde.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45cbe4.  v4:= temp @kind object;
  #L45cbe6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cbec.  throw v0;
}
procedure `okhttp3.HttpUrl$Builder` `query`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.query:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45cc00.  if v7 == 0 then goto L45cc24;
  #L45cc04.  v2:= 0I;
  #L45cc06.  v3:= 0I;
  #L45cc08.  v4:= 1I;
  #L45cc0a.  v5:= 1I;
  #L45cc0c.  v1:= " \"'<>#" @kind object;
  #L45cc10.  v0:= v7 @kind object;
  #L45cc12.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45cc18.  v7:= temp @kind object;
  #L45cc1a.  call temp:= `queryStringToNamesAndValues`(v7) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L45cc20.  v7:= temp @kind object;
  #L45cc22.  goto L45cc26;
  #L45cc24.  v7:= 0I;
  #L45cc26.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v7 @kind object;
  #L45cc2a.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `reencodeForUri`(`okhttp3.HttpUrl$Builder` v10 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L45cc3c.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45cc40.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45cc46.  v0:= temp;
  #L45cc48.  v1:= 0I;
  #L45cc4a.  v2:= 0I;
  #L45cc4c.  if v2 >= v0 then goto L45cc86;
  #L45cc50.  v3:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45cc54.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45cc5a.  v3:= temp @kind object;
  #L45cc5c.  v4:= v3 @kind object;
  #L45cc5e.  v4:= (`java.lang.String`) v4 @kind object;
  #L45cc62.  v3:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45cc66.  v6:= 1I;
  #L45cc68.  v7:= 1I;
  #L45cc6a.  v8:= 0I;
  #L45cc6c.  v9:= 1I;
  #L45cc6e.  v5:= "[]" @kind object;
  #L45cc72.  call temp:= `canonicalize`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45cc78.  v4:= temp @kind object;
  #L45cc7a.  call temp:= `set`(v3, v2, v4) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45cc80.  v2:= v2 + 1;
  #L45cc84.  goto L45cc4c;
  #L45cc86.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45cc8a.  if v0 == 0 then goto L45ccd4;
  #L45cc8e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45cc94.  v0:= temp;
  #L45cc96.  if v1 >= v0 then goto L45ccd4;
  #L45cc9a.  v2:= v10.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45cc9e.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45cca4.  v2:= temp @kind object;
  #L45cca6.  v3:= v2 @kind object;
  #L45cca8.  v3:= (`java.lang.String`) v3 @kind object;
  #L45ccac.  if v3 == 0 then goto L45ccce;
  #L45ccb0.  v2:= v10.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45ccb4.  v5:= 1I;
  #L45ccb6.  v6:= 1I;
  #L45ccb8.  v7:= 1I;
  #L45ccba.  v8:= 1I;
  #L45ccbc.  v4:= "\\^`{|}" @kind object;
  #L45ccc0.  call temp:= `canonicalize`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45ccc6.  v3:= temp @kind object;
  #L45ccc8.  call temp:= `set`(v2, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45ccce.  v1:= v1 + 1;
  #L45ccd2.  goto L45cc96;
  #L45ccd4.  v2:= v10.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L45ccd8.  if v2 == 0 then goto L45ccf4;
  #L45ccdc.  v4:= 1I;
  #L45ccde.  v5:= 1I;
  #L45cce0.  v6:= 0I;
  #L45cce2.  v7:= 0I;
  #L45cce4.  v3:= " \"#<>\\^`{|}" @kind object;
  #L45cce8.  call temp:= `canonicalize`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45ccee.  v0:= temp @kind object;
  #L45ccf0.  v10.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L45ccf4.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllEncodedQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45cd08.  if v8 == 0 then goto L45cd34;
  #L45cd0c.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45cd10.  if v0 != 0 then goto L45cd16;
  #L45cd14.  return v7 @kind object;
  #L45cd16.  v3:= 1I;
  #L45cd18.  v4:= 0I;
  #L45cd1a.  v5:= 1I;
  #L45cd1c.  v6:= 1I;
  #L45cd1e.  v2:= " \"'<>#&=" @kind object;
  #L45cd22.  v1:= v8 @kind object;
  #L45cd24.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45cd2a.  v8:= temp @kind object;
  #L45cd2c.  call `removeAllCanonicalQueryParameters`(v7, v8) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L45cd32.  return v7 @kind object;
  #L45cd34.  v8:= new `java.lang.NullPointerException`;
  #L45cd38.  v0:= "encodedName == null" @kind object;
  #L45cd3c.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cd42.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45cd54.  if v8 == 0 then goto L45cd80;
  #L45cd58.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45cd5c.  if v0 != 0 then goto L45cd62;
  #L45cd60.  return v7 @kind object;
  #L45cd62.  v3:= 0I;
  #L45cd64.  v4:= 0I;
  #L45cd66.  v5:= 1I;
  #L45cd68.  v6:= 1I;
  #L45cd6a.  v2:= " \"'<>#&=" @kind object;
  #L45cd6e.  v1:= v8 @kind object;
  #L45cd70.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45cd76.  v8:= temp @kind object;
  #L45cd78.  call `removeAllCanonicalQueryParameters`(v7, v8) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L45cd7e.  return v7 @kind object;
  #L45cd80.  v8:= new `java.lang.NullPointerException`;
  #L45cd84.  v0:= "name == null" @kind object;
  #L45cd88.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cd8e.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `removePathSegment`(`okhttp3.HttpUrl$Builder` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl$Builder;.removePathSegment:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45cda0.  v0:= v1.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45cda4.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L45cdaa.  v2:= v1.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45cdae.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L45cdb4.  v2:= temp;
  #L45cdb6.  if v2 == 0 then goto L45cdc8;
  #L45cdba.  v2:= v1.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45cdbe.  v0:= "" @kind object;
  #L45cdc2.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45cdc8.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `scheme`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45cddc.  if v4 == 0 then goto L45ce3a;
  #L45cde0.  v0:= "http" @kind object;
  #L45cde4.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45cdea.  v1:= temp;
  #L45cdec.  if v1 == 0 then goto L45cdf6;
  #L45cdf0.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L45cdf4.  goto L45ce0a;
  #L45cdf6.  v0:= "https" @kind object;
  #L45cdfa.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L45ce00.  v1:= temp;
  #L45ce02.  if v1 == 0 then goto L45ce0c;
  #L45ce06.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L45ce0a.  return v3 @kind object;
  #L45ce0c.  v0:= new `java.lang.IllegalArgumentException`;
  #L45ce10.  v1:= new `java.lang.StringBuilder`;
  #L45ce14.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45ce1a.  v2:= "unexpected scheme: " @kind object;
  #L45ce1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45ce24.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45ce2a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45ce30.  v4:= temp @kind object;
  #L45ce32.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ce38.  throw v0;
  #L45ce3a.  v4:= new `java.lang.NullPointerException`;
  #L45ce3e.  v0:= "scheme == null" @kind object;
  #L45ce42.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ce48.  throw v4;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v9 @kind this, `int` v10 , `java.lang.String` v11 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L45ce5c.  if v11 == 0 then goto L45ced4;
  #L45ce60.  v1:= 0I;
  #L45ce62.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45ce68.  v2:= temp;
  #L45ce6a.  v4:= 1I;
  #L45ce6c.  v5:= 0I;
  #L45ce6e.  v6:= 0I;
  #L45ce70.  v7:= 1I;
  #L45ce72.  v8:= 0I;
  #L45ce74.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L45ce78.  v0:= v11 @kind object;
  #L45ce7a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45ce80.  v0:= temp @kind object;
  #L45ce82.  v1:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45ce86.  call temp:= `set`(v1, v10, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45ce8c.  call temp:= `isDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L45ce92.  v10:= temp;
  #L45ce94.  if v10 != 0 then goto L45cea6;
  #L45ce98.  call temp:= `isDotDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L45ce9e.  v10:= temp;
  #L45cea0.  if v10 != 0 then goto L45cea6;
  #L45cea4.  return v9 @kind object;
  #L45cea6.  v10:= new `java.lang.IllegalArgumentException`;
  #L45ceaa.  v0:= new `java.lang.StringBuilder`;
  #L45ceae.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45ceb4.  v1:= "unexpected path segment: " @kind object;
  #L45ceb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45cebe.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45cec4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45ceca.  v11:= temp @kind object;
  #L45cecc.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ced2.  throw v10;
  #L45ced4.  v10:= new `java.lang.NullPointerException`;
  #L45ced8.  v11:= "encodedPathSegment == null" @kind object;
  #L45cedc.  call `<init>`(v10, v11) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cee2.  throw v10;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L45cef4.  call temp:= `removeAllEncodedQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45cefa.  call temp:= `addEncodedQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45cf00.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setPathSegment`(`okhttp3.HttpUrl$Builder` v9 @kind this, `int` v10 , `java.lang.String` v11 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L45cf14.  if v11 == 0 then goto L45cf8c;
  #L45cf18.  v1:= 0I;
  #L45cf1a.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L45cf20.  v2:= temp;
  #L45cf22.  v4:= 0I;
  #L45cf24.  v5:= 0I;
  #L45cf26.  v6:= 0I;
  #L45cf28.  v7:= 1I;
  #L45cf2a.  v8:= 0I;
  #L45cf2c.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L45cf30.  v0:= v11 @kind object;
  #L45cf32.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L45cf38.  v0:= temp @kind object;
  #L45cf3a.  call temp:= `isDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L45cf40.  v1:= temp;
  #L45cf42.  if v1 != 0 then goto L45cf5e;
  #L45cf46.  call temp:= `isDotDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L45cf4c.  v1:= temp;
  #L45cf4e.  if v1 != 0 then goto L45cf5e;
  #L45cf52.  v11:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45cf56.  call temp:= `set`(v11, v10, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45cf5c.  return v9 @kind object;
  #L45cf5e.  v10:= new `java.lang.IllegalArgumentException`;
  #L45cf62.  v0:= new `java.lang.StringBuilder`;
  #L45cf66.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45cf6c.  v1:= "unexpected path segment: " @kind object;
  #L45cf70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45cf76.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45cf7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45cf82.  v11:= temp @kind object;
  #L45cf84.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cf8a.  throw v10;
  #L45cf8c.  v10:= new `java.lang.NullPointerException`;
  #L45cf90.  v11:= "pathSegment == null" @kind object;
  #L45cf94.  call `<init>`(v10, v11) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cf9a.  throw v10;
}
procedure `okhttp3.HttpUrl$Builder` `setQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L45cfac.  call temp:= `removeAllQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45cfb2.  call temp:= `addQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L45cfb8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl$Builder` v4 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45c5a0.  v0:= new `java.lang.StringBuilder`;
  #L45c5a4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45c5aa.  v1:= v4.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L45c5ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c5b4.  v1:= "://" @kind object;
  #L45c5b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c5be.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L45c5c2.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L45c5c8.  v1:= temp;
  #L45c5ca.  v2:= 58I;
  #L45c5ce.  if v1 == 0 then goto L45c5e2;
  #L45c5d2.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L45c5d6.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L45c5dc.  v1:= temp;
  #L45c5de.  if v1 != 0 then goto L45c616;
  #L45c5e2.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L45c5e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c5ec.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L45c5f0.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L45c5f6.  v1:= temp;
  #L45c5f8.  if v1 != 0 then goto L45c60c;
  #L45c5fc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c602.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L45c606.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c60c.  v1:= 64I;
  #L45c610.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c616.  v1:= v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L45c61a.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L45c620.  v1:= temp;
  #L45c622.  v3:= -1I;
  #L45c624.  if v1 == v3 then goto L45c648;
  #L45c628.  v1:= 91I;
  #L45c62c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c632.  v1:= v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L45c636.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c63c.  v1:= 93I;
  #L45c640.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c646.  goto L45c652;
  #L45c648.  v1:= v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L45c64c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c652.  call temp:= `effectivePort`(v4) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L45c658.  v1:= temp;
  #L45c65a.  v3:= v4.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L45c65e.  call temp:= `defaultPort`(v3) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L45c664.  v3:= temp;
  #L45c666.  if v1 == v3 then goto L45c676;
  #L45c66a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c670.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c676.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L45c67a.  call `pathSegmentsToString`(v0, v1) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L45c680.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45c684.  if v1 == 0 then goto L45c69c;
  #L45c688.  v1:= 63I;
  #L45c68c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c692.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L45c696.  call `namesAndValuesToQueryString`(v0, v1) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L45c69c.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L45c6a0.  if v1 == 0 then goto L45c6b8;
  #L45c6a4.  v1:= 35I;
  #L45c6a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c6ae.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L45c6b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c6b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45c6be.  v0:= temp @kind object;
  #L45c6c0.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `username`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45cfcc.  if v7 == 0 then goto L45cfec;
  #L45cfd0.  v2:= 0I;
  #L45cfd2.  v3:= 0I;
  #L45cfd4.  v4:= 0I;
  #L45cfd6.  v5:= 1I;
  #L45cfd8.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L45cfdc.  v0:= v7 @kind object;
  #L45cfde.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L45cfe4.  v7:= temp @kind object;
  #L45cfe6.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v7 @kind object;
  #L45cfea.  return v6 @kind object;
  #L45cfec.  v7:= new `java.lang.NullPointerException`;
  #L45cff0.  v0:= "username == null" @kind object;
  #L45cff4.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cffa.  throw v7;
}
