record `okhttp3.Cache$CacheRequestImpl$1` @kind class @AccessFlag  extends `okio.ForwardingSink` @kind class {
  `okhttp3.Cache$CacheRequestImpl` `okhttp3.Cache$CacheRequestImpl$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.Cache$CacheRequestImpl$1.val$editor` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Cache` `okhttp3.Cache$CacheRequestImpl$1.val$this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$CacheRequestImpl$1` v0 @kind this, `okhttp3.Cache$CacheRequestImpl` v1 @kind object, `okio.Sink` v2 @kind object, `okhttp3.Cache` v3 @kind object, `okhttp3.internal.cache.DiskLruCache$Editor` v4 @kind object) @signature `Lokhttp3/Cache$CacheRequestImpl$1;.<init>:(Lokhttp3/Cache$CacheRequestImpl;Lokio/Sink;Lokhttp3/Cache;Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L455d10.  v0.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` := v1 @kind object;
  #L455d14.  v0.`okhttp3.Cache$CacheRequestImpl$1.val$this$0` @type ^`okhttp3.Cache` := v3 @kind object;
  #L455d18.  v0.`okhttp3.Cache$CacheRequestImpl$1.val$editor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` := v4 @kind object;
  #L455d1c.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L455d22.  return @kind void;
}
procedure `void` `close`(`okhttp3.Cache$CacheRequestImpl$1` v4 @kind this) @signature `Lokhttp3/Cache$CacheRequestImpl$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L455d34.  v0:= v4.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L455d38.  v0:= v0.`okhttp3.Cache$CacheRequestImpl.this$0` @type ^`okhttp3.Cache` @kind object;
  #L455d3c.  @monitorenter v0
  #L455d3e.  v1:= v4.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L455d42.  v1:= v1.`okhttp3.Cache$CacheRequestImpl.done` @type ^`boolean` @kind boolean;
  #L455d46.  if v1 == 0 then goto L455d4e;
  #L455d4a.  @monitorexit v0
  #L455d4c.  return @kind void;
  #L455d4e.  v1:= v4.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L455d52.  v2:= 1I;
  #L455d54.  v1.`okhttp3.Cache$CacheRequestImpl.done` @type ^`boolean` := v2 @kind boolean;
  #L455d58.  v1:= v4.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L455d5c.  v1:= v1.`okhttp3.Cache$CacheRequestImpl.this$0` @type ^`okhttp3.Cache` @kind object;
  #L455d60.  v3:= v1.`okhttp3.Cache.writeSuccessCount` @type ^`int`;
  #L455d64.  v3:= v3 + v2 @kind int;
  #L455d66.  v1.`okhttp3.Cache.writeSuccessCount` @type ^`int` := v3;
  #L455d6a.  @monitorexit v0
  #L455d6c.  call `close`(v4) @signature `Lokio/ForwardingSink;.close:()V` @kind super;
  #L455d72.  v0:= v4.`okhttp3.Cache$CacheRequestImpl$1.val$editor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L455d76.  call `commit`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L455d7c.  return @kind void;
  #L455d7e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L455d80.  @monitorexit v0
  #L455d82.  throw v1;
  catch `java.lang.Throwable` @[L455d3e..L455d6c] goto L455d7e;
  catch `java.lang.Throwable` @[L455d80..L455d82] goto L455d7e;
}
