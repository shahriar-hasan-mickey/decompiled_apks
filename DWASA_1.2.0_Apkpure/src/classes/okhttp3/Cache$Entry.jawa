record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `int` `okhttp3.Cache$Entry.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.handshake` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.receivedResponseMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.requestMethod` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.responseHeaders` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.sentRequestMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.url` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.varyHeaders` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.SENT_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L456194.  v0:= new `java.lang.StringBuilder`;
  #L456198.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45619e.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L4561a4.  v1:= temp @kind object;
  #L4561a6.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L4561ac.  v1:= temp @kind object;
  #L4561ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4561b4.  v1:= "-Sent-Millis" @kind object;
  #L4561b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4561be.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4561c4.  v0:= temp @kind object;
  #L4561c6.  `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L4561ca.  v0:= new `java.lang.StringBuilder`;
  #L4561ce.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4561d4.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L4561da.  v1:= temp @kind object;
  #L4561dc.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L4561e2.  v1:= temp @kind object;
  #L4561e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4561ea.  v1:= "-Received-Millis" @kind object;
  #L4561ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4561f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4561fa.  v0:= temp @kind object;
  #L4561fc.  `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L456200.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L456214.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45621a.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L456220.  v0:= temp @kind object;
  #L456222.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L456228.  v0:= temp @kind object;
  #L45622a.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L456230.  v0:= temp @kind object;
  #L456232.  v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L456236.  call temp:= `varyHeaders`(v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind static;
  #L45623c.  v0:= temp @kind object;
  #L45623e.  v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L456242.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L456248.  v0:= temp @kind object;
  #L45624a.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L456250.  v0:= temp @kind object;
  #L456252.  v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L456256.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L45625c.  v0:= temp @kind object;
  #L45625e.  v2.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L456262.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L456268.  v0:= temp;
  #L45626a.  v2.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L45626e.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L456274.  v0:= temp @kind object;
  #L456276.  v2.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L45627a.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L456280.  v0:= temp @kind object;
  #L456282.  v2.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L456286.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L45628c.  v0:= temp @kind object;
  #L45628e.  v2.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L456292.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L456298.  v0:= temp @kind wide;
  #L45629a.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L45629e.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L4562a4.  v0:= temp @kind wide;
  #L4562a6.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L4562aa.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v8 @kind this, `okio.Source` v9 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4562bc.  call `<init>`(v8) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4562c2.  call temp:= `buffer`(v9) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L4562c8.  v0:= temp @kind object;
  #L4562ca.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4562d0.  v1:= temp @kind object;
  #L4562d2.  v8.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v1 @kind object;
  #L4562d6.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4562dc.  v1:= temp @kind object;
  #L4562de.  v8.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v1 @kind object;
  #L4562e2.  v1:= new `okhttp3.Headers$Builder`;
  #L4562e6.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L4562ec.  call temp:= `readInt`(v0) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L4562f2.  v2:= temp;
  #L4562f4.  v3:= 0I;
  #L4562f6.  v4:= 0I;
  #L4562f8.  if v4 >= v2 then goto L456310;
  #L4562fc.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L456302.  v5:= temp @kind object;
  #L456304.  call temp:= `addLenient`(v1, v5) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L45630a.  v4:= v4 + 1;
  #L45630e.  goto L4562f8;
  #L456310.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L456316.  v1:= temp @kind object;
  #L456318.  v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v1 @kind object;
  #L45631c.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L456322.  v1:= temp @kind object;
  #L456324.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L45632a.  v1:= temp @kind object;
  #L45632c.  v2:= v1.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L456330.  v8.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L456334.  v2:= v1.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L456338.  v8.`okhttp3.Cache$Entry.code` @type ^`int` := v2;
  #L45633c.  v1:= v1.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L456340.  v8.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v1 @kind object;
  #L456344.  v1:= new `okhttp3.Headers$Builder`;
  #L456348.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L45634e.  call temp:= `readInt`(v0) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L456354.  v2:= temp;
  #L456356.  if v3 >= v2 then goto L45636e;
  #L45635a.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L456360.  v4:= temp @kind object;
  #L456362.  call temp:= `addLenient`(v1, v4) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L456368.  v3:= v3 + 1;
  #L45636c.  goto L456356;
  #L45636e.  v2:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L456372.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L456378.  v2:= temp @kind object;
  #L45637a.  v3:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L45637e.  call temp:= `get`(v1, v3) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L456384.  v3:= temp @kind object;
  #L456386.  v4:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L45638a.  call temp:= `removeAll`(v1, v4) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L456390.  v4:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L456394.  call temp:= `removeAll`(v1, v4) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L45639a.  v4:= 0L;
  #L45639e.  if v2 == 0 then goto L4563ac;
  #L4563a2.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L4563a8.  v6:= temp @kind wide;
  #L4563aa.  goto L4563ae;
  #L4563ac.  v6:= v4 @kind wide;
  #L4563ae.  v8.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v6 @kind wide;
  #L4563b2.  if v3 == 0 then goto L4563be;
  #L4563b6.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L4563bc.  v4:= temp @kind wide;
  #L4563be.  v8.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v4 @kind wide;
  #L4563c2.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L4563c8.  v1:= temp @kind object;
  #L4563ca.  v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v1 @kind object;
  #L4563ce.  call temp:= `isHttps`(v8) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L4563d4.  v1:= temp;
  #L4563d6.  if v1 == 0 then goto L456476;
  #L4563da.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4563e0.  v1:= temp @kind object;
  #L4563e2.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4563e8.  v2:= temp;
  #L4563ea.  if v2 > 0 then goto L45643e;
  #L4563ee.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4563f4.  v1:= temp @kind object;
  #L4563f6.  call temp:= `forJavaName`(v1) @signature `Lokhttp3/CipherSuite;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind static;
  #L4563fc.  v1:= temp @kind object;
  #L4563fe.  call temp:= `readCertificateList`(v8, v0) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L456404.  v2:= temp @kind object;
  #L456406.  call temp:= `readCertificateList`(v8, v0) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L45640c.  v3:= temp @kind object;
  #L45640e.  call temp:= `exhausted`(v0) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L456414.  v4:= temp;
  #L456416.  if v4 != 0 then goto L45642c;
  #L45641a.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L456420.  v0:= temp @kind object;
  #L456422.  call temp:= `forJavaName`(v0) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L456428.  v0:= temp @kind object;
  #L45642a.  goto L456430;
  #L45642c.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L456430.  call temp:= `get`(v0, v1, v2, v3) @signature `Lokhttp3/Handshake;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind static;
  #L456436.  v0:= temp @kind object;
  #L456438.  v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L45643c.  goto L45647c;
  #L45643e.  v0:= new `java.io.IOException`;
  #L456442.  v2:= new `java.lang.StringBuilder`;
  #L456446.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45644c.  v3:= "expected \"\" but was \"" @kind object;
  #L456450.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456456.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45645c.  v1:= "\"" @kind object;
  #L456460.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L456466.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45646c.  v1:= temp @kind object;
  #L45646e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L456474.  throw v0;
  #L456476.  v0:= 0I;
  #L456478.  v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L45647c.  call `close`(v9) @signature `Lokio/Source;.close:()V` @kind interface;
  #L456482.  return @kind void;
  #L456484.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L456486.  call `close`(v9) @signature `Lokio/Source;.close:()V` @kind interface;
  #L45648c.  goto L456490;
  #L45648e.  throw v0;
  #L456490.  goto L45648e;
  catch `java.lang.Throwable` @[L4562c2..L45647c] goto L456484;
}
procedure `boolean` `isHttps`(`okhttp3.Cache$Entry` v2 @kind this) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L455f78.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L455f7c.  v1:= "https://" @kind object;
  #L455f80.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L455f86.  v0:= temp;
  #L455f88.  return v0;
}
procedure `java.util.List` `readCertificateList`(`okhttp3.Cache$Entry` v6 @kind this, `okio.BufferedSource` v7 @kind object) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L455ffc.  call temp:= `readInt`(v7) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L456002.  v0:= temp;
  #L456004.  v1:= -1I;
  #L456006.  if v0 != v1 then goto L456014;
  #L45600a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L456010.  v7:= temp @kind object;
  #L456012.  return v7 @kind object;
  #L456014.  v1:= "X.509" @kind object;
  #L456018.  call temp:= `getInstance`(v1) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L45601e.  v1:= temp @kind object;
  #L456020.  v2:= new `java.util.ArrayList`;
  #L456024.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L45602a.  v3:= 0I;
  #L45602c.  if v3 >= v0 then goto L45606c;
  #L456030.  call temp:= `readUtf8LineStrict`(v7) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L456036.  v4:= temp @kind object;
  #L456038.  v5:= new `okio.Buffer`;
  #L45603c.  call `<init>`(v5) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L456042.  call temp:= `decodeBase64`(v4) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L456048.  v4:= temp @kind object;
  #L45604a.  call temp:= `write`(v5, v4) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L456050.  call temp:= `inputStream`(v5) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L456056.  v4:= temp @kind object;
  #L456058.  call temp:= `generateCertificate`(v1, v4) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L45605e.  v4:= temp @kind object;
  #L456060.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L456066.  v3:= v3 + 1;
  #L45606a.  goto L45602c;
  #L45606c.  return v2 @kind object;
  #L45606e.  v7:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L456070.  v0:= new `java.io.IOException`;
  #L456074.  call temp:= `getMessage`(v7) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L45607a.  v7:= temp @kind object;
  #L45607c.  call `<init>`(v0, v7) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L456082.  goto L456086;
  #L456084.  throw v0;
  #L456086.  goto L456084;
  catch `java.security.cert.CertificateException` @[L456014..L456066] goto L45606e;
}
procedure `void` `writeCertList`(`okhttp3.Cache$Entry` v4 @kind this, `okio.BufferedSink` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4564b0.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4564b6.  v0:= temp;
  #L4564b8.  v0:= (`long`) v0 @kind i2l;
  #L4564ba.  call temp:= `writeDecimalLong`(v5, v0) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L4564c0.  v0:= temp @kind object;
  #L4564c2.  v1:= 10I;
  #L4564c6.  call temp:= `writeByte`(v0, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4564cc.  v0:= 0I;
  #L4564ce.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4564d4.  v2:= temp;
  #L4564d6.  if v0 >= v2 then goto L456512;
  #L4564da.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4564e0.  v3:= temp @kind object;
  #L4564e2.  v3:= (`java.security.cert.Certificate`) v3 @kind object;
  #L4564e6.  call temp:= `getEncoded`(v3) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L4564ec.  v3:= temp @kind object;
  #L4564ee.  call temp:= `of`(v3) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L4564f4.  v3:= temp @kind object;
  #L4564f6.  call temp:= `base64`(v3) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L4564fc.  v3:= temp @kind object;
  #L4564fe.  call temp:= `writeUtf8`(v5, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L456504.  v3:= temp @kind object;
  #L456506.  call temp:= `writeByte`(v3, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L45650c.  v0:= v0 + 1;
  #L456510.  goto L4564d6;
  #L456512.  return @kind void;
  #L456514.  v5:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L456516.  v6:= new `java.io.IOException`;
  #L45651a.  call temp:= `getMessage`(v5) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L456520.  v5:= temp @kind object;
  #L456522.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L456528.  goto L45652c;
  #L45652a.  throw v6;
  #L45652c.  goto L45652a;
  catch `java.security.cert.CertificateEncodingException` @[L4564b0..L45650c] goto L456514;
}
procedure `boolean` `matches`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object, `okhttp3.Response` v4 @kind object) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L455f9c.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L455fa0.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L455fa6.  v1:= temp @kind object;
  #L455fa8.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L455fae.  v1:= temp @kind object;
  #L455fb0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L455fb6.  v0:= temp;
  #L455fb8.  if v0 == 0 then goto L455fe8;
  #L455fbc.  v0:= v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L455fc0.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L455fc6.  v1:= temp @kind object;
  #L455fc8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L455fce.  v0:= temp;
  #L455fd0.  if v0 == 0 then goto L455fe8;
  #L455fd4.  v0:= v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L455fd8.  call temp:= `varyMatches`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind static;
  #L455fde.  v3:= temp;
  #L455fe0.  if v3 == 0 then goto L455fe8;
  #L455fe4.  v3:= 1I;
  #L455fe6.  goto L455fea;
  #L455fe8.  v3:= 0I;
  #L455fea.  return v3;
}
procedure `okhttp3.Response` `response`(`okhttp3.Cache$Entry` v5 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4560a8.  v0:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4560ac.  v1:= "Content-Type" @kind object;
  #L4560b0.  call temp:= `get`(v0, v1) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4560b6.  v0:= temp @kind object;
  #L4560b8.  v1:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4560bc.  v2:= "Content-Length" @kind object;
  #L4560c0.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4560c6.  v1:= temp @kind object;
  #L4560c8.  v2:= new `okhttp3.Request$Builder`;
  #L4560cc.  call `<init>`(v2) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L4560d2.  v3:= v5.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L4560d6.  call temp:= `url`(v2, v3) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4560dc.  v2:= temp @kind object;
  #L4560de.  v3:= v5.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L4560e2.  v4:= 0I;
  #L4560e4.  call temp:= `method`(v2, v3, v4) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4560ea.  v2:= temp @kind object;
  #L4560ec.  v3:= v5.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4560f0.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4560f6.  v2:= temp @kind object;
  #L4560f8.  call temp:= `build`(v2) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L4560fe.  v2:= temp @kind object;
  #L456100.  v3:= new `okhttp3.Response$Builder`;
  #L456104.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L45610a.  call temp:= `request`(v3, v2) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L456110.  v2:= temp @kind object;
  #L456112.  v3:= v5.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L456116.  call temp:= `protocol`(v2, v3) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L45611c.  v2:= temp @kind object;
  #L45611e.  v3:= v5.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L456122.  call temp:= `code`(v2, v3) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L456128.  v2:= temp @kind object;
  #L45612a.  v3:= v5.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L45612e.  call temp:= `message`(v2, v3) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L456134.  v2:= temp @kind object;
  #L456136.  v3:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L45613a.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L456140.  v2:= temp @kind object;
  #L456142.  v3:= new `okhttp3.Cache$CacheResponseBody`;
  #L456146.  call `<init>`(v3, v6, v0, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L45614c.  call temp:= `body`(v2, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L456152.  v6:= temp @kind object;
  #L456154.  v0:= v5.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L456158.  call temp:= `handshake`(v6, v0) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L45615e.  v6:= temp @kind object;
  #L456160.  v0:= v5.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L456164.  call temp:= `sentRequestAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L45616a.  v6:= temp @kind object;
  #L45616c.  v0:= v5.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L456170.  call temp:= `receivedResponseAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L456176.  v6:= temp @kind object;
  #L456178.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L45617e.  v6:= temp @kind object;
  #L456180.  return v6 @kind object;
}
procedure `void` `writeTo`(`okhttp3.Cache$Entry` v7 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v8 @kind object) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L456550.  v0:= 0I;
  #L456552.  call temp:= `newSink`(v8, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L456558.  v8:= temp @kind object;
  #L45655a.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L456560.  v8:= temp @kind object;
  #L456562.  v1:= v7.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L456566.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L45656c.  v1:= temp @kind object;
  #L45656e.  v2:= 10I;
  #L456572.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L456578.  v1:= v7.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L45657c.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L456582.  v1:= temp @kind object;
  #L456584.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L45658a.  v1:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L45658e.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L456594.  v1:= temp;
  #L456596.  v3:= (`long`) v1 @kind i2l;
  #L456598.  call temp:= `writeDecimalLong`(v8, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L45659e.  v1:= temp @kind object;
  #L4565a0.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4565a6.  v1:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4565aa.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4565b0.  v1:= temp;
  #L4565b2.  v3:= 0I;
  #L4565b4.  v4:= ": " @kind object;
  #L4565b8.  if v3 >= v1 then goto L4565f8;
  #L4565bc.  v5:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4565c0.  call temp:= `name`(v5, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L4565c6.  v5:= temp @kind object;
  #L4565c8.  call temp:= `writeUtf8`(v8, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4565ce.  v5:= temp @kind object;
  #L4565d0.  call temp:= `writeUtf8`(v5, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4565d6.  v4:= temp @kind object;
  #L4565d8.  v5:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4565dc.  call temp:= `value`(v5, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L4565e2.  v5:= temp @kind object;
  #L4565e4.  call temp:= `writeUtf8`(v4, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4565ea.  v4:= temp @kind object;
  #L4565ec.  call temp:= `writeByte`(v4, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4565f2.  v3:= v3 + 1;
  #L4565f6.  goto L4565b4;
  #L4565f8.  v1:= new `okhttp3.internal.http.StatusLine`;
  #L4565fc.  v3:= v7.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L456600.  v5:= v7.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L456604.  v6:= v7.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L456608.  call `<init>`(v1, v3, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L45660e.  call temp:= `toString`(v1) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L456614.  v1:= temp @kind object;
  #L456616.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L45661c.  v1:= temp @kind object;
  #L45661e.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L456624.  v1:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L456628.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L45662e.  v1:= temp;
  #L456630.  v1:= v1 + 2;
  #L456634.  v5:= (`long`) v1 @kind i2l;
  #L456636.  call temp:= `writeDecimalLong`(v8, v5) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L45663c.  v1:= temp @kind object;
  #L45663e.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L456644.  v1:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L456648.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L45664e.  v1:= temp;
  #L456650.  if v0 >= v1 then goto L456690;
  #L456654.  v3:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L456658.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L45665e.  v3:= temp @kind object;
  #L456660.  call temp:= `writeUtf8`(v8, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L456666.  v3:= temp @kind object;
  #L456668.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L45666e.  v3:= temp @kind object;
  #L456670.  v5:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L456674.  call temp:= `value`(v5, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L45667a.  v5:= temp @kind object;
  #L45667c.  call temp:= `writeUtf8`(v3, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L456682.  v3:= temp @kind object;
  #L456684.  call temp:= `writeByte`(v3, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L45668a.  v0:= v0 + 1;
  #L45668e.  goto L456650;
  #L456690.  v0:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L456694.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L45669a.  v0:= temp @kind object;
  #L45669c.  call temp:= `writeUtf8`(v0, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4566a2.  v0:= temp @kind object;
  #L4566a4.  v5:= v7.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L4566a8.  call temp:= `writeDecimalLong`(v0, v5) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L4566ae.  v0:= temp @kind object;
  #L4566b0.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4566b6.  v0:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L4566ba.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4566c0.  v0:= temp @kind object;
  #L4566c2.  call temp:= `writeUtf8`(v0, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4566c8.  v0:= temp @kind object;
  #L4566ca.  v3:= v7.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L4566ce.  call temp:= `writeDecimalLong`(v0, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L4566d4.  v0:= temp @kind object;
  #L4566d6.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4566dc.  call temp:= `isHttps`(v7) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L4566e2.  v0:= temp;
  #L4566e4.  if v0 == 0 then goto L456756;
  #L4566e8.  call temp:= `writeByte`(v8, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4566ee.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L4566f2.  call temp:= `cipherSuite`(v0) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L4566f8.  v0:= temp @kind object;
  #L4566fa.  call temp:= `javaName`(v0) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L456700.  v0:= temp @kind object;
  #L456702.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L456708.  v0:= temp @kind object;
  #L45670a.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L456710.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L456714.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L45671a.  v0:= temp @kind object;
  #L45671c.  call `writeCertList`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L456722.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L456726.  call temp:= `localCertificates`(v0) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L45672c.  v0:= temp @kind object;
  #L45672e.  call `writeCertList`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L456734.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L456738.  call temp:= `tlsVersion`(v0) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L45673e.  v0:= temp @kind object;
  #L456740.  call temp:= `javaName`(v0) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L456746.  v0:= temp @kind object;
  #L456748.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L45674e.  v0:= temp @kind object;
  #L456750.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L456756.  call `close`(v8) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L45675c.  return @kind void;
}
