record `io.reactivex.Completable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.CompletableSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.Completable` v0 @kind this) @signature `Lio/reactivex/Completable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d182c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d1832.  return @kind void;
}
procedure `io.reactivex.Completable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Completable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d04d4.  v0:= "sources is null" @kind object;
  #L3d04d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d04de.  v0:= new `io.reactivex.internal.operators.completable.CompletableAmb`;
  #L3d04e2.  v1:= 0I;
  #L3d04e4.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/CompletableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3d04ea.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d04f0.  v2:= temp @kind object;
  #L3d04f2.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `ambArray`(`io.reactivex.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/Completable;.ambArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d0504.  v0:= "sources is null" @kind object;
  #L3d0508.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d050e.  v0:= length @variable v2;
  #L3d0510.  if v0 != 0 then goto L3d051e;
  #L3d0514.  call temp:= `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @kind static;
  #L3d051a.  v2:= temp @kind object;
  #L3d051c.  return v2 @kind object;
  #L3d051e.  v0:= length @variable v2;
  #L3d0520.  v1:= 1I;
  #L3d0522.  if v0 != v1 then goto L3d0536;
  #L3d0526.  v0:= 0I;
  #L3d0528.  v2:= v2[v0] @kind object;
  #L3d052c.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3d0532.  v2:= temp @kind object;
  #L3d0534.  return v2 @kind object;
  #L3d0536.  v0:= new `io.reactivex.internal.operators.completable.CompletableAmb`;
  #L3d053a.  v1:= 0I;
  #L3d053c.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/CompletableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3d0542.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0548.  v2:= temp @kind object;
  #L3d054a.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d05d4.  v0:= `@@io.reactivex.internal.operators.completable.CompletableEmpty.INSTANCE` @type ^`io.reactivex.Completable` @kind object;
  #L3d05d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d05de.  v0:= temp @kind object;
  #L3d05e0.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `concat`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Completable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0628.  v0:= "sources is null" @kind object;
  #L3d062c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0632.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcatIterable`;
  #L3d0636.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L3d063c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0642.  v1:= temp @kind object;
  #L3d0644.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Completable;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0658.  v0:= 2I;
  #L3d065a.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/Completable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @kind static;
  #L3d0660.  v1:= temp @kind object;
  #L3d0662.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `concat`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Completable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0674.  v0:= "sources is null" @kind object;
  #L3d0678.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d067e.  v0:= "prefetch" @kind object;
  #L3d0682.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3d0688.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcat`;
  #L3d068c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableConcat;.<init>:(Lorg/reactivestreams/Publisher;I)V` @kind direct;
  #L3d0692.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0698.  v1:= temp @kind object;
  #L3d069a.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `concatArray`(`io.reactivex.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/Completable;.concatArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d06ac.  v0:= "sources is null" @kind object;
  #L3d06b0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d06b6.  v0:= length @variable v2;
  #L3d06b8.  if v0 != 0 then goto L3d06c6;
  #L3d06bc.  call temp:= `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @kind static;
  #L3d06c2.  v2:= temp @kind object;
  #L3d06c4.  return v2 @kind object;
  #L3d06c6.  v0:= length @variable v2;
  #L3d06c8.  v1:= 1I;
  #L3d06ca.  if v0 != v1 then goto L3d06de;
  #L3d06ce.  v0:= 0I;
  #L3d06d0.  v2:= v2[v0] @kind object;
  #L3d06d4.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3d06da.  v2:= temp @kind object;
  #L3d06dc.  return v2 @kind object;
  #L3d06de.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcatArray`;
  #L3d06e2.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray;.<init>:([Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d06e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d06ee.  v2:= temp @kind object;
  #L3d06f0.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `create`(`io.reactivex.CompletableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/Completable;.create:(Lio/reactivex/CompletableOnSubscribe;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d073c.  v0:= "source is null" @kind object;
  #L3d0740.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0746.  v0:= new `io.reactivex.internal.operators.completable.CompletableCreate`;
  #L3d074a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate;.<init>:(Lio/reactivex/CompletableOnSubscribe;)V` @kind direct;
  #L3d0750.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0756.  v1:= temp @kind object;
  #L3d0758.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `defer`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Completable;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d076c.  v0:= "completableSupplier" @kind object;
  #L3d0770.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0776.  v0:= new `io.reactivex.internal.operators.completable.CompletableDefer`;
  #L3d077a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3d0780.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0786.  v1:= temp @kind object;
  #L3d0788.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `doOnLifecycle`(`io.reactivex.Completable` v9 @kind this, `io.reactivex.functions.Consumer` v10 @kind object, `io.reactivex.functions.Consumer` v11 @kind object, `io.reactivex.functions.Action` v12 @kind object, `io.reactivex.functions.Action` v13 @kind object, `io.reactivex.functions.Action` v14 @kind object, `io.reactivex.functions.Action` v15 @kind object) @signature `Lio/reactivex/Completable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d097c.  v0:= "onSubscribe is null" @kind object;
  #L3d0980.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0986.  v0:= "onError is null" @kind object;
  #L3d098a.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0990.  v0:= "onComplete is null" @kind object;
  #L3d0994.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d099a.  v0:= "onTerminate is null" @kind object;
  #L3d099e.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d09a4.  v0:= "onAfterTerminate is null" @kind object;
  #L3d09a8.  call temp:= `requireNonNull`(v14, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d09ae.  v0:= "onDispose is null" @kind object;
  #L3d09b2.  call temp:= `requireNonNull`(v15, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d09b8.  v0:= new `io.reactivex.internal.operators.completable.CompletablePeek`;
  #L3d09bc.  v1:= v0 @kind object;
  #L3d09be.  v2:= v9 @kind object;
  #L3d09c0.  v3:= v10 @kind object;
  #L3d09c2.  v4:= v11 @kind object;
  #L3d09c4.  v5:= v12 @kind object;
  #L3d09c6.  v6:= v13 @kind object;
  #L3d09c8.  v7:= v14 @kind object;
  #L3d09ca.  v8:= v15 @kind object;
  #L3d09cc.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3d09d2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d09d8.  v10:= temp @kind object;
  #L3d09da.  return v10 @kind object;
}
procedure `io.reactivex.Completable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Completable;.error:(Ljava/lang/Throwable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0a60.  v0:= "error is null" @kind object;
  #L3d0a64.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0a6a.  v0:= new `io.reactivex.internal.operators.completable.CompletableError`;
  #L3d0a6e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d0a74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0a7a.  v1:= temp @kind object;
  #L3d0a7c.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `error`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Completable;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0a90.  v0:= "errorSupplier is null" @kind object;
  #L3d0a94.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0a9a.  v0:= new `io.reactivex.internal.operators.completable.CompletableErrorSupplier`;
  #L3d0a9e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableErrorSupplier;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3d0aa4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0aaa.  v1:= temp @kind object;
  #L3d0aac.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromAction`(`io.reactivex.functions.Action` v1 @kind object) @signature `Lio/reactivex/Completable;.fromAction:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0ac0.  v0:= "run is null" @kind object;
  #L3d0ac4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0aca.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromAction`;
  #L3d0ace.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromAction;.<init>:(Lio/reactivex/functions/Action;)V` @kind direct;
  #L3d0ad4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0ada.  v1:= temp @kind object;
  #L3d0adc.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Completable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0af0.  v0:= "callable is null" @kind object;
  #L3d0af4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0afa.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromCallable`;
  #L3d0afe.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3d0b04.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0b0a.  v1:= temp @kind object;
  #L3d0b0c.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object) @signature `Lio/reactivex/Completable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0b20.  v0:= "future is null" @kind object;
  #L3d0b24.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0b2a.  call temp:= `futureAction`(v1) @signature `Lio/reactivex/internal/functions/Functions;.futureAction:(Ljava/util/concurrent/Future;)Lio/reactivex/functions/Action;` @kind static;
  #L3d0b30.  v1:= temp @kind object;
  #L3d0b32.  call temp:= `fromAction`(v1) @signature `Lio/reactivex/Completable;.fromAction:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind static;
  #L3d0b38.  v1:= temp @kind object;
  #L3d0b3a.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromMaybe`(`io.reactivex.MaybeSource` v1 @kind object) @signature `Lio/reactivex/Completable;.fromMaybe:(Lio/reactivex/MaybeSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0b4c.  v0:= "maybe is null" @kind object;
  #L3d0b50.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0b56.  v0:= new `io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable`;
  #L3d0b5a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElementCompletable;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L3d0b60.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0b66.  v1:= temp @kind object;
  #L3d0b68.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromObservable`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.fromObservable:(Lio/reactivex/ObservableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0b7c.  v0:= "observable is null" @kind object;
  #L3d0b80.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0b86.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromObservable`;
  #L3d0b8a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromObservable;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3d0b90.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0b96.  v1:= temp @kind object;
  #L3d0b98.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0bac.  v0:= "publisher is null" @kind object;
  #L3d0bb0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0bb6.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromPublisher`;
  #L3d0bba.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3d0bc0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0bc6.  v1:= temp @kind object;
  #L3d0bc8.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromRunnable`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/Completable;.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0bdc.  v0:= "run is null" @kind object;
  #L3d0be0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0be6.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromRunnable`;
  #L3d0bea.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L3d0bf0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0bf6.  v1:= temp @kind object;
  #L3d0bf8.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromSingle`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Completable;.fromSingle:(Lio/reactivex/SingleSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0c0c.  v0:= "single is null" @kind object;
  #L3d0c10.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0c16.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromSingle`;
  #L3d0c1a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3d0c20.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0c26.  v1:= temp @kind object;
  #L3d0c28.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Completable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0c90.  v0:= "sources is null" @kind object;
  #L3d0c94.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0c9a.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeIterable`;
  #L3d0c9e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L3d0ca4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0caa.  v1:= temp @kind object;
  #L3d0cac.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `merge`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d0cc0.  v0:= 2147483647I;
  #L3d0cc6.  v1:= 0I;
  #L3d0cc8.  call temp:= `merge0`(v2, v0, v1) @signature `Lio/reactivex/Completable;.merge0:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L3d0cce.  v2:= temp @kind object;
  #L3d0cd0.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `merge`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Completable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0ce4.  v0:= 0I;
  #L3d0ce6.  call temp:= `merge0`(v1, v2, v0) @signature `Lio/reactivex/Completable;.merge0:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L3d0cec.  v1:= temp @kind object;
  #L3d0cee.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `merge0`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/Completable;.merge0:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3d0d00.  v0:= "sources is null" @kind object;
  #L3d0d04.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0d0a.  v0:= "maxConcurrency" @kind object;
  #L3d0d0e.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3d0d14.  v0:= new `io.reactivex.internal.operators.completable.CompletableMerge`;
  #L3d0d18.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableMerge;.<init>:(Lorg/reactivestreams/Publisher;IZ)V` @kind direct;
  #L3d0d1e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0d24.  v1:= temp @kind object;
  #L3d0d26.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `mergeArray`(`io.reactivex.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/Completable;.mergeArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d0d38.  v0:= "sources is null" @kind object;
  #L3d0d3c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0d42.  v0:= length @variable v2;
  #L3d0d44.  if v0 != 0 then goto L3d0d52;
  #L3d0d48.  call temp:= `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @kind static;
  #L3d0d4e.  v2:= temp @kind object;
  #L3d0d50.  return v2 @kind object;
  #L3d0d52.  v0:= length @variable v2;
  #L3d0d54.  v1:= 1I;
  #L3d0d56.  if v0 != v1 then goto L3d0d6a;
  #L3d0d5a.  v0:= 0I;
  #L3d0d5c.  v2:= v2[v0] @kind object;
  #L3d0d60.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3d0d66.  v2:= temp @kind object;
  #L3d0d68.  return v2 @kind object;
  #L3d0d6a.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeArray`;
  #L3d0d6e.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray;.<init>:([Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d0d74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0d7a.  v2:= temp @kind object;
  #L3d0d7c.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `mergeArrayDelayError`(`io.reactivex.CompletableSource`[] v1 @kind object) @signature `Lio/reactivex/Completable;.mergeArrayDelayError:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0d90.  v0:= "sources is null" @kind object;
  #L3d0d94.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0d9a.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray`;
  #L3d0d9e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray;.<init>:([Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d0da4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0daa.  v1:= temp @kind object;
  #L3d0dac.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `mergeDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Completable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0dc0.  v0:= "sources is null" @kind object;
  #L3d0dc4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0dca.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable`;
  #L3d0dce.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L3d0dd4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0dda.  v1:= temp @kind object;
  #L3d0ddc.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `mergeDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d0df0.  v0:= 2147483647I;
  #L3d0df6.  v1:= 1I;
  #L3d0df8.  call temp:= `merge0`(v2, v0, v1) @signature `Lio/reactivex/Completable;.merge0:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L3d0dfe.  v2:= temp @kind object;
  #L3d0e00.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `mergeDelayError`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Completable;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0e14.  v0:= 1I;
  #L3d0e16.  call temp:= `merge0`(v1, v2, v0) @signature `Lio/reactivex/Completable;.merge0:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L3d0e1c.  v1:= temp @kind object;
  #L3d0e1e.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `never`() @signature `Lio/reactivex/Completable;.never:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0e68.  v0:= `@@io.reactivex.internal.operators.completable.CompletableNever.INSTANCE` @type ^`io.reactivex.Completable` @kind object;
  #L3d0e6c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0e72.  v0:= temp @kind object;
  #L3d0e74.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `timeout0`(`io.reactivex.Completable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `io.reactivex.CompletableSource` v13 @kind object) @signature `Lio/reactivex/Completable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d1258.  v0:= "unit is null" @kind object;
  #L3d125c.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1262.  v0:= "scheduler is null" @kind object;
  #L3d1266.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d126c.  v0:= new `io.reactivex.internal.operators.completable.CompletableTimeout`;
  #L3d1270.  v1:= v0 @kind object;
  #L3d1272.  v2:= v8 @kind object;
  #L3d1274.  v3:= v9 @kind wide;
  #L3d1276.  v5:= v11 @kind object;
  #L3d1278.  v6:= v12 @kind object;
  #L3d127a.  v7:= v13 @kind object;
  #L3d127c.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout;.<init>:(Lio/reactivex/CompletableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d1282.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d1288.  v9:= temp @kind object;
  #L3d128a.  return v9 @kind object;
}
procedure `io.reactivex.Completable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d129c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3d12a2.  v0:= temp @kind object;
  #L3d12a4.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @kind static;
  #L3d12aa.  v1:= temp @kind object;
  #L3d12ac.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d12c0.  v0:= "unit is null" @kind object;
  #L3d12c4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d12ca.  v0:= "scheduler is null" @kind object;
  #L3d12ce.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d12d4.  v0:= new `io.reactivex.internal.operators.completable.CompletableTimer`;
  #L3d12d8.  call `<init>`(v0, v1, v3, v4) @signature `Lio/reactivex/internal/operators/completable/CompletableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3d12de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d12e4.  v1:= temp @kind object;
  #L3d12e6.  return v1 @kind object;
}
procedure `java.lang.NullPointerException` `toNpe`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/Completable;.toNpe:(Ljava/lang/Throwable;)Ljava/lang/NullPointerException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3d1730.  v0:= new `java.lang.NullPointerException`;
  #L3d1734.  v1:= "Actually not, but can't pass out an exception otherwise..." @kind object;
  #L3d1738.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d173e.  call temp:= `initCause`(v0, v2) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3d1744.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `unsafeCreate`(`io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.unsafeCreate:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d12f8.  v0:= "source is null" @kind object;
  #L3d12fc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1302.  v0:= instanceof @variable v1 @type ^`io.reactivex.Completable` @kind boolean;
  #L3d1306.  if v0 != 0 then goto L3d131e;
  #L3d130a.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromUnsafeSource`;
  #L3d130e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromUnsafeSource;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d1314.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d131a.  v1:= temp @kind object;
  #L3d131c.  return v1 @kind object;
  #L3d131e.  v1:= new `java.lang.IllegalArgumentException`;
  #L3d1322.  v0:= "Use of unsafeCreate(Completable)!" @kind object;
  #L3d1326.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d132c.  throw v1;
}
procedure `io.reactivex.Completable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Completable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d1370.  v0:= 1I;
  #L3d1372.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/Completable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Completable;` @kind static;
  #L3d1378.  v1:= temp @kind object;
  #L3d137a.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Completable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d138c.  v0:= "resourceSupplier is null" @kind object;
  #L3d1390.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1396.  v0:= "completableFunction is null" @kind object;
  #L3d139a.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d13a0.  v0:= "disposer is null" @kind object;
  #L3d13a4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d13aa.  v0:= new `io.reactivex.internal.operators.completable.CompletableUsing`;
  #L3d13ae.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L3d13b4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d13ba.  v1:= temp @kind object;
  #L3d13bc.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `wrap`(`io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d13d0.  v0:= "source is null" @kind object;
  #L3d13d4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d13da.  v0:= instanceof @variable v1 @type ^`io.reactivex.Completable` @kind boolean;
  #L3d13de.  if v0 == 0 then goto L3d13f0;
  #L3d13e2.  v1:= (`io.reactivex.Completable`) v1 @kind object;
  #L3d13e6.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d13ec.  v1:= temp @kind object;
  #L3d13ee.  return v1 @kind object;
  #L3d13f0.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromUnsafeSource`;
  #L3d13f4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromUnsafeSource;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d13fa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d1400.  v1:= temp @kind object;
  #L3d1402.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `ambWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.ambWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3d055c.  v0:= "other is null" @kind object;
  #L3d0560.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0566.  v0:= 2I;
  #L3d0568.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L3d056c.  v1:= 0I;
  #L3d056e.  v0[v1]:= v2 @kind object;
  #L3d0572.  v1:= 1I;
  #L3d0574.  v0[v1]:= v3 @kind object;
  #L3d0578.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/Completable;.ambArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3d057e.  v3:= temp @kind object;
  #L3d0580.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `andThen`(`io.reactivex.Completable` v0 @kind this, `io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3d0594.  call temp:= `concatWith`(v0, v1) @signature `Lio/reactivex/Completable;.concatWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind virtual;
  #L3d059a.  v1:= temp @kind object;
  #L3d059c.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `andThen`(`io.reactivex.Completable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d142c.  v0:= "next is null" @kind object;
  #L3d1430.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1436.  v0:= new `io.reactivex.internal.operators.mixed.CompletableAndThenPublisher`;
  #L3d143a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher;.<init>:(Lio/reactivex/CompletableSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3d1440.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3d1446.  v2:= temp @kind object;
  #L3d1448.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `andThen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.MaybeSource` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/MaybeSource;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d14c4.  v0:= "next is null" @kind object;
  #L3d14c8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d14ce.  v0:= new `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable`;
  #L3d14d2.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d14d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3d14de.  v2:= temp @kind object;
  #L3d14e0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `andThen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1530.  v0:= "next is null" @kind object;
  #L3d1534.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d153a.  v0:= new `io.reactivex.internal.operators.mixed.CompletableAndThenObservable`;
  #L3d153e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenObservable;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3d1544.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3d154a.  v2:= temp @kind object;
  #L3d154c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `andThen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d15c8.  v0:= "next is null" @kind object;
  #L3d15cc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d15d2.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithCompletable`;
  #L3d15d6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d15dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3d15e2.  v2:= temp @kind object;
  #L3d15e4.  return v2 @kind object;
}
procedure `java.lang.Object` `as`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableConverter` v2 @kind object) @signature `Lio/reactivex/Completable;.as:(Lio/reactivex/CompletableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1758.  v0:= "converter is null" @kind object;
  #L3d175c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1762.  v2:= temp @kind object;
  #L3d1764.  v2:= (`io.reactivex.CompletableConverter`) v2 @kind object;
  #L3d1768.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/CompletableConverter;.apply:(Lio/reactivex/Completable;)Ljava/lang/Object;` @kind interface;
  #L3d176e.  v2:= temp @kind object;
  #L3d1770.  return v2 @kind object;
}
procedure `void` `blockingAwait`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.blockingAwait:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1844.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L3d1848.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L3d184e.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d1854.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3d185a.  return @kind void;
}
procedure `boolean` `blockingAwait`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Completable;.blockingAwait:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d04a0.  v0:= "unit is null" @kind object;
  #L3d04a4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d04aa.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L3d04ae.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L3d04b4.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d04ba.  call temp:= `blockingAwait`(v0, v2, v4) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingAwait:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L3d04c0.  v2:= temp;
  #L3d04c2.  return v2;
}
procedure `java.lang.Throwable` `blockingGet`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.blockingGet:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d17cc.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L3d17d0.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L3d17d6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d17dc.  call temp:= `blockingGetError`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGetError:()Ljava/lang/Throwable;` @kind virtual;
  #L3d17e2.  v0:= temp @kind object;
  #L3d17e4.  return v0 @kind object;
}
procedure `java.lang.Throwable` `blockingGet`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Completable;.blockingGet:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d17f8.  v0:= "unit is null" @kind object;
  #L3d17fc.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1802.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L3d1806.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L3d180c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d1812.  call temp:= `blockingGetError`(v0, v2, v4) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGetError:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Throwable;` @kind virtual;
  #L3d1818.  v2:= temp @kind object;
  #L3d181a.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `cache`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.cache:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d05b0.  v0:= new `io.reactivex.internal.operators.completable.CompletableCache`;
  #L3d05b4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableCache;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d05ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d05c0.  v0:= temp @kind object;
  #L3d05c2.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `compose`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableTransformer` v2 @kind object) @signature `Lio/reactivex/Completable;.compose:(Lio/reactivex/CompletableTransformer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d05f4.  v0:= "transformer is null" @kind object;
  #L3d05f8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d05fe.  v2:= temp @kind object;
  #L3d0600.  v2:= (`io.reactivex.CompletableTransformer`) v2 @kind object;
  #L3d0604.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/CompletableTransformer;.apply:(Lio/reactivex/Completable;)Lio/reactivex/CompletableSource;` @kind interface;
  #L3d060a.  v2:= temp @kind object;
  #L3d060c.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3d0612.  v2:= temp @kind object;
  #L3d0614.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `concatWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.concatWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3d0704.  v0:= "other is null" @kind object;
  #L3d0708.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d070e.  v0:= 2I;
  #L3d0710.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L3d0714.  v1:= 0I;
  #L3d0716.  v0[v1]:= v2 @kind object;
  #L3d071a.  v1:= 1I;
  #L3d071c.  v0[v1]:= v3 @kind object;
  #L3d0720.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Completable;.concatArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3d0726.  v3:= temp @kind object;
  #L3d0728.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `delay`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d079c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3d07a2.  v4:= temp @kind object;
  #L3d07a4.  v5:= 0I;
  #L3d07a6.  v0:= v6 @kind object;
  #L3d07a8.  v1:= v7 @kind wide;
  #L3d07aa.  v3:= v9 @kind object;
  #L3d07ac.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Completable;` @kind virtual;
  #L3d07b2.  v7:= temp @kind object;
  #L3d07b4.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `delay`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d07c8.  v5:= 0I;
  #L3d07ca.  v0:= v6 @kind object;
  #L3d07cc.  v1:= v7 @kind wide;
  #L3d07ce.  v3:= v9 @kind object;
  #L3d07d0.  v4:= v10 @kind object;
  #L3d07d2.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Completable;` @kind virtual;
  #L3d07d8.  v7:= temp @kind object;
  #L3d07da.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `delay`(`io.reactivex.Completable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d07ec.  v0:= "unit is null" @kind object;
  #L3d07f0.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d07f6.  v0:= "scheduler is null" @kind object;
  #L3d07fa.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0800.  v0:= new `io.reactivex.internal.operators.completable.CompletableDelay`;
  #L3d0804.  v1:= v0 @kind object;
  #L3d0806.  v2:= v8 @kind object;
  #L3d0808.  v3:= v9 @kind wide;
  #L3d080a.  v5:= v11 @kind object;
  #L3d080c.  v6:= v12 @kind object;
  #L3d080e.  v7:= v13;
  #L3d0810.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/completable/CompletableDelay;.<init>:(Lio/reactivex/CompletableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3d0816.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d081c.  v9:= temp @kind object;
  #L3d081e.  return v9 @kind object;
}
procedure `io.reactivex.Completable` `doAfterTerminate`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doAfterTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d0830.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d0836.  v1:= temp @kind object;
  #L3d0838.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d083e.  v2:= temp @kind object;
  #L3d0840.  v3:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0844.  v4:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0848.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d084c.  v0:= v7 @kind object;
  #L3d084e.  v5:= v8 @kind object;
  #L3d0850.  call temp:= `doOnLifecycle`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3d0856.  v8:= temp @kind object;
  #L3d0858.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doFinally`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Completable;.doFinally:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d086c.  v0:= "onFinally is null" @kind object;
  #L3d0870.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0876.  v0:= new `io.reactivex.internal.operators.completable.CompletableDoFinally`;
  #L3d087a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3d0880.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0886.  v2:= temp @kind object;
  #L3d0888.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `doOnComplete`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnComplete:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d089c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d08a2.  v1:= temp @kind object;
  #L3d08a4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d08aa.  v2:= temp @kind object;
  #L3d08ac.  v4:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d08b0.  v5:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d08b4.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d08b8.  v0:= v7 @kind object;
  #L3d08ba.  v3:= v8 @kind object;
  #L3d08bc.  call temp:= `doOnLifecycle`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3d08c2.  v8:= temp @kind object;
  #L3d08c4.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnDispose`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnDispose:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d08d8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d08de.  v1:= temp @kind object;
  #L3d08e0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d08e6.  v2:= temp @kind object;
  #L3d08e8.  v3:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d08ec.  v4:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d08f0.  v5:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d08f4.  v0:= v7 @kind object;
  #L3d08f6.  v6:= v8 @kind object;
  #L3d08f8.  call temp:= `doOnLifecycle`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3d08fe.  v8:= temp @kind object;
  #L3d0900.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnError`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Consumer` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d0914.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d091a.  v1:= temp @kind object;
  #L3d091c.  v3:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0920.  v4:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0924.  v5:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0928.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d092c.  v0:= v7 @kind object;
  #L3d092e.  v2:= v8 @kind object;
  #L3d0930.  call temp:= `doOnLifecycle`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3d0936.  v8:= temp @kind object;
  #L3d0938.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnEvent`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Completable;.doOnEvent:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d094c.  v0:= "onEvent is null" @kind object;
  #L3d0950.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0956.  v0:= new `io.reactivex.internal.operators.completable.CompletableDoOnEvent`;
  #L3d095a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableDoOnEvent;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3d0960.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0966.  v2:= temp @kind object;
  #L3d0968.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `doOnSubscribe`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Consumer` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnSubscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d09ec.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d09f2.  v2:= temp @kind object;
  #L3d09f4.  v3:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d09f8.  v4:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d09fc.  v5:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0a00.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0a04.  v0:= v7 @kind object;
  #L3d0a06.  v1:= v8 @kind object;
  #L3d0a08.  call temp:= `doOnLifecycle`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3d0a0e.  v8:= temp @kind object;
  #L3d0a10.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnTerminate`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d0a24.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d0a2a.  v1:= temp @kind object;
  #L3d0a2c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3d0a32.  v2:= temp @kind object;
  #L3d0a34.  v3:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0a38.  v5:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0a3c.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3d0a40.  v0:= v7 @kind object;
  #L3d0a42.  v4:= v8 @kind object;
  #L3d0a44.  call temp:= `doOnLifecycle`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L3d0a4a.  v8:= temp @kind object;
  #L3d0a4c.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `hide`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.hide:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0c3c.  v0:= new `io.reactivex.internal.operators.completable.CompletableHide`;
  #L3d0c40.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableHide;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d0c46.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0c4c.  v0:= temp @kind object;
  #L3d0c4e.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `lift`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableOperator` v2 @kind object) @signature `Lio/reactivex/Completable;.lift:(Lio/reactivex/CompletableOperator;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0c60.  v0:= "onLift is null" @kind object;
  #L3d0c64.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0c6a.  v0:= new `io.reactivex.internal.operators.completable.CompletableLift`;
  #L3d0c6e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableLift;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/CompletableOperator;)V` @kind direct;
  #L3d0c74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0c7a.  v2:= temp @kind object;
  #L3d0c7c.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `mergeWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.mergeWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3d0e30.  v0:= "other is null" @kind object;
  #L3d0e34.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0e3a.  v0:= 2I;
  #L3d0e3c.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L3d0e40.  v1:= 0I;
  #L3d0e42.  v0[v1]:= v2 @kind object;
  #L3d0e46.  v1:= 1I;
  #L3d0e48.  v0[v1]:= v3 @kind object;
  #L3d0e4c.  call temp:= `mergeArray`(v0) @signature `Lio/reactivex/Completable;.mergeArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3d0e52.  v3:= temp @kind object;
  #L3d0e54.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `observeOn`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Completable;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0e88.  v0:= "scheduler is null" @kind object;
  #L3d0e8c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0e92.  v0:= new `io.reactivex.internal.operators.completable.CompletableObserveOn`;
  #L3d0e96.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3d0e9c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0ea2.  v2:= temp @kind object;
  #L3d0ea4.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `onErrorComplete`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.onErrorComplete:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0eb8.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/functions/Predicate;` @kind static;
  #L3d0ebe.  v0:= temp @kind object;
  #L3d0ec0.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/Completable;.onErrorComplete:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @kind virtual;
  #L3d0ec6.  v0:= temp @kind object;
  #L3d0ec8.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `onErrorComplete`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Completable;.onErrorComplete:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0edc.  v0:= "predicate is null" @kind object;
  #L3d0ee0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0ee6.  v0:= new `io.reactivex.internal.operators.completable.CompletableOnErrorComplete`;
  #L3d0eea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableOnErrorComplete;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3d0ef0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0ef6.  v2:= temp @kind object;
  #L3d0ef8.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `onErrorResumeNext`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0f0c.  v0:= "errorMapper is null" @kind object;
  #L3d0f10.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d0f16.  v0:= new `io.reactivex.internal.operators.completable.CompletableResumeNext`;
  #L3d0f1a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3d0f20.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0f26.  v2:= temp @kind object;
  #L3d0f28.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `onTerminateDetach`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.onTerminateDetach:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0f3c.  v0:= new `io.reactivex.internal.operators.completable.CompletableDetach`;
  #L3d0f40.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d0f46.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d0f4c.  v0:= temp @kind object;
  #L3d0f4e.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `repeat`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.repeat:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0f60.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d0f66.  v0:= temp @kind object;
  #L3d0f68.  call temp:= `repeat`(v0) @signature `Lio/reactivex/Flowable;.repeat:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d0f6e.  v0:= temp @kind object;
  #L3d0f70.  call temp:= `fromPublisher`(v0) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d0f76.  v0:= temp @kind object;
  #L3d0f78.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `repeat`(`io.reactivex.Completable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Completable;.repeat:(J)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0f8c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d0f92.  v0:= temp @kind object;
  #L3d0f94.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/Flowable;.repeat:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L3d0f9a.  v2:= temp @kind object;
  #L3d0f9c.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d0fa2.  v2:= temp @kind object;
  #L3d0fa4.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `repeatUntil`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/Completable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0fb8.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d0fbe.  v0:= temp @kind object;
  #L3d0fc0.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Flowable;` @kind virtual;
  #L3d0fc6.  v2:= temp @kind object;
  #L3d0fc8.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d0fce.  v2:= temp @kind object;
  #L3d0fd0.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `repeatWhen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d0fe4.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d0fea.  v0:= temp @kind object;
  #L3d0fec.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3d0ff2.  v2:= temp @kind object;
  #L3d0ff4.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d0ffa.  v2:= temp @kind object;
  #L3d0ffc.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.retry:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1010.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d1016.  v0:= temp @kind object;
  #L3d1018.  call temp:= `retry`(v0) @signature `Lio/reactivex/Flowable;.retry:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d101e.  v0:= temp @kind object;
  #L3d1020.  call temp:= `fromPublisher`(v0) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d1026.  v0:= temp @kind object;
  #L3d1028.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Completable;.retry:(J)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1094.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d109a.  v0:= temp @kind object;
  #L3d109c.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L3d10a2.  v2:= temp @kind object;
  #L3d10a4.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d10aa.  v2:= temp @kind object;
  #L3d10ac.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `io.reactivex.functions.Predicate` v4 @kind object) @signature `Lio/reactivex/Completable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d10c0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d10c6.  v0:= temp @kind object;
  #L3d10c8.  call temp:= `retry`(v0, v2, v4) @signature `Lio/reactivex/Flowable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3d10ce.  v2:= temp @kind object;
  #L3d10d0.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d10d6.  v2:= temp @kind object;
  #L3d10d8.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/Completable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d103c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d1042.  v0:= temp @kind object;
  #L3d1044.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3d104a.  v2:= temp @kind object;
  #L3d104c.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d1052.  v2:= temp @kind object;
  #L3d1054.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Completable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1068.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d106e.  v0:= temp @kind object;
  #L3d1070.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3d1076.  v2:= temp @kind object;
  #L3d1078.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d107e.  v2:= temp @kind object;
  #L3d1080.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retryWhen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d10ec.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d10f2.  v0:= temp @kind object;
  #L3d10f4.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3d10fa.  v2:= temp @kind object;
  #L3d10fc.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L3d1102.  v2:= temp @kind object;
  #L3d1104.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `startWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.startWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3d1118.  v0:= "other is null" @kind object;
  #L3d111c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1122.  v0:= 2I;
  #L3d1124.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L3d1128.  v1:= 0I;
  #L3d112a.  v0[v1]:= v3 @kind object;
  #L3d112e.  v3:= 1I;
  #L3d1130.  v0[v3]:= v2 @kind object;
  #L3d1134.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Completable;.concatArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L3d113a.  v3:= temp @kind object;
  #L3d113c.  return v3 @kind object;
}
procedure `io.reactivex.Flowable` `startWith`(`io.reactivex.Completable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d145c.  v0:= "other is null" @kind object;
  #L3d1460.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1466.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3d146c.  v0:= temp @kind object;
  #L3d146e.  call temp:= `startWith`(v0, v2) @signature `Lio/reactivex/Flowable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind virtual;
  #L3d1474.  v2:= temp @kind object;
  #L3d1476.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Observable` v2 @kind object) @signature `Lio/reactivex/Completable;.startWith:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1560.  v0:= "other is null" @kind object;
  #L3d1564.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d156a.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/Completable;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L3d1570.  v0:= temp @kind object;
  #L3d1572.  call temp:= `concatWith`(v2, v0) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3d1578.  v2:= temp @kind object;
  #L3d157a.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.subscribe:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1658.  v0:= new `io.reactivex.internal.observers.EmptyCompletableObserver`;
  #L3d165c.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/EmptyCompletableObserver;.<init>:()V` @kind direct;
  #L3d1662.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d1668.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d167c.  v0:= "onComplete is null" @kind object;
  #L3d1680.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1686.  v0:= new `io.reactivex.internal.observers.CallbackCompletableObserver`;
  #L3d168a.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/functions/Action;)V` @kind direct;
  #L3d1690.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d1696.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d16a8.  v0:= "onError is null" @kind object;
  #L3d16ac.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d16b2.  v0:= "onComplete is null" @kind object;
  #L3d16b6.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d16bc.  v0:= new `io.reactivex.internal.observers.CallbackCompletableObserver`;
  #L3d16c0.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3d16c6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d16cc.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d186c.  v0:= "s is null" @kind object;
  #L3d1870.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1876.  call temp:= `onSubscribe`(v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Completable;Lio/reactivex/CompletableObserver;)Lio/reactivex/CompletableObserver;` @kind static;
  #L3d187c.  v2:= temp @kind object;
  #L3d187e.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null CompletableObserver. Please check the handler provided to RxJavaPlugins.setOnCompletableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L3d1882.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1888.  call `subscribeActual`(v1, v2) @signature `Lio/reactivex/Completable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d188e.  return @kind void;
  #L3d1890.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d1892.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3d1898.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3d189e.  call temp:= `toNpe`(v2) @signature `Lio/reactivex/Completable;.toNpe:(Ljava/lang/Throwable;)Ljava/lang/NullPointerException;` @kind static;
  #L3d18a4.  v2:= temp @kind object;
  #L3d18a6.  throw v2;
  #L3d18a8.  v2:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L3d18aa.  throw v2;
  catch `java.lang.NullPointerException` @[L3d1876..L3d188e] goto L3d18a8;
  catch `java.lang.Throwable` @[L3d1876..L3d188e] goto L3d1890;
}
procedure `void` `subscribeActual`(`io.reactivex.CompletableObserver` v0 @kind object) @signature `Lio/reactivex/Completable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.Completable` `subscribeOn`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Completable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1150.  v0:= "scheduler is null" @kind object;
  #L3d1154.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d115a.  v0:= new `io.reactivex.internal.operators.completable.CompletableSubscribeOn`;
  #L3d115e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3d1164.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d116a.  v2:= temp @kind object;
  #L3d116c.  return v2 @kind object;
}
procedure `io.reactivex.CompletableObserver` `subscribeWith`(`io.reactivex.Completable` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/Completable;.subscribeWith:(Lio/reactivex/CompletableObserver;)Lio/reactivex/CompletableObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3d1414.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d141a.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `takeUntil`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Completable;.takeUntil:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1180.  v0:= "other is null" @kind object;
  #L3d1184.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d118a.  v0:= new `io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable`;
  #L3d118e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableTakeUntilCompletable;.<init>:(Lio/reactivex/Completable;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d1194.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d119a.  v2:= temp @kind object;
  #L3d119c.  return v2 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.test:()Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d16e0.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3d16e4.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3d16ea.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d16f0.  return v0 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Completable` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/Completable;.test:(Z)Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1704.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3d1708.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3d170e.  if v2 == 0 then goto L3d1718;
  #L3d1712.  call `cancel`(v0) @signature `Lio/reactivex/observers/TestObserver;.cancel:()V` @kind virtual;
  #L3d1718.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L3d171e.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d11b0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3d11b6.  v4:= temp @kind object;
  #L3d11b8.  v5:= 0I;
  #L3d11ba.  v0:= v6 @kind object;
  #L3d11bc.  v1:= v7 @kind wide;
  #L3d11be.  v3:= v9 @kind object;
  #L3d11c0.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L3d11c6.  v7:= temp @kind object;
  #L3d11c8.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.CompletableSource` v11 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d11dc.  v0:= "other is null" @kind object;
  #L3d11e0.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d11e6.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3d11ec.  v5:= temp @kind object;
  #L3d11ee.  v1:= v7 @kind object;
  #L3d11f0.  v2:= v8 @kind wide;
  #L3d11f2.  v4:= v10 @kind object;
  #L3d11f4.  v6:= v11 @kind object;
  #L3d11f6.  call temp:= `timeout0`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Completable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L3d11fc.  v8:= temp @kind object;
  #L3d11fe.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d1210.  v5:= 0I;
  #L3d1212.  v0:= v6 @kind object;
  #L3d1214.  v1:= v7 @kind wide;
  #L3d1216.  v3:= v9 @kind object;
  #L3d1218.  v4:= v10 @kind object;
  #L3d121a.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L3d1220.  v7:= temp @kind object;
  #L3d1222.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.CompletableSource` v6 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1234.  v0:= "other is null" @kind object;
  #L3d1238.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d123e.  call temp:= `timeout0`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Completable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L3d1244.  v2:= temp @kind object;
  #L3d1246.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.to:(Lio/reactivex/functions/Function;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1784.  v0:= "converter is null" @kind object;
  #L3d1788.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d178e.  v2:= temp @kind object;
  #L3d1790.  v2:= (`io.reactivex.functions.Function`) v2 @kind object;
  #L3d1794.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d179a.  v2:= temp @kind object;
  #L3d179c.  return v2 @kind object;
  #L3d179e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d17a0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3d17a6.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3d17ac.  v2:= temp @kind object;
  #L3d17ae.  throw v2;
  catch `java.lang.Throwable` @[L3d1784..L3d179c] goto L3d179e;
}
procedure `io.reactivex.Flowable` `toFlowable`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1488.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToFlowable` @kind boolean;
  #L3d148c.  if v0 == 0 then goto L3d14a0;
  #L3d1490.  v0:= v1 @kind object;
  #L3d1492.  v0:= (`io.reactivex.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L3d1496.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/Flowable;` @kind interface;
  #L3d149c.  v0:= temp @kind object;
  #L3d149e.  return v0 @kind object;
  #L3d14a0.  v0:= new `io.reactivex.internal.operators.completable.CompletableToFlowable`;
  #L3d14a4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToFlowable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d14aa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3d14b0.  v0:= temp @kind object;
  #L3d14b2.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `toMaybe`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.toMaybe:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d14f4.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToMaybe` @kind boolean;
  #L3d14f8.  if v0 == 0 then goto L3d150c;
  #L3d14fc.  v0:= v1 @kind object;
  #L3d14fe.  v0:= (`io.reactivex.internal.fuseable.FuseToMaybe`) v0 @kind object;
  #L3d1502.  call temp:= `fuseToMaybe`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToMaybe;.fuseToMaybe:()Lio/reactivex/Maybe;` @kind interface;
  #L3d1508.  v0:= temp @kind object;
  #L3d150a.  return v0 @kind object;
  #L3d150c.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFromCompletable`;
  #L3d1510.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d1516.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3d151c.  v0:= temp @kind object;
  #L3d151e.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `toObservable`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.toObservable:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d158c.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToObservable` @kind boolean;
  #L3d1590.  if v0 == 0 then goto L3d15a4;
  #L3d1594.  v0:= v1 @kind object;
  #L3d1596.  v0:= (`io.reactivex.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L3d159a.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/Observable;` @kind interface;
  #L3d15a0.  v0:= temp @kind object;
  #L3d15a2.  return v0 @kind object;
  #L3d15a4.  v0:= new `io.reactivex.internal.operators.completable.CompletableToObservable`;
  #L3d15a8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3d15ae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3d15b4.  v0:= temp @kind object;
  #L3d15b6.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toSingle`(`io.reactivex.Completable` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Completable;.toSingle:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3d15f8.  v0:= "completionValueSupplier is null" @kind object;
  #L3d15fc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1602.  v0:= new `io.reactivex.internal.operators.completable.CompletableToSingle`;
  #L3d1606.  v1:= 0I;
  #L3d1608.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle;.<init>:(Lio/reactivex/CompletableSource;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V` @kind direct;
  #L3d160e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3d1614.  v3:= temp @kind object;
  #L3d1616.  return v3 @kind object;
}
procedure `io.reactivex.Single` `toSingleDefault`(`io.reactivex.Completable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Completable;.toSingleDefault:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3d1628.  v0:= "completionValue is null" @kind object;
  #L3d162c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d1632.  v0:= new `io.reactivex.internal.operators.completable.CompletableToSingle`;
  #L3d1636.  v1:= 0I;
  #L3d1638.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle;.<init>:(Lio/reactivex/CompletableSource;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V` @kind direct;
  #L3d163e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3d1644.  v3:= temp @kind object;
  #L3d1646.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `unsubscribeOn`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Completable;.unsubscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d1340.  v0:= "scheduler is null" @kind object;
  #L3d1344.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3d134a.  v0:= new `io.reactivex.internal.operators.completable.CompletableDisposeOn`;
  #L3d134e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3d1354.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3d135a.  v2:= temp @kind object;
  #L3d135c.  return v2 @kind object;
}
