record `io.reactivex.subscribers.SafeSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `boolean` `io.reactivex.subscribers.SafeSubscriber.done` @AccessFlag ;
  `org.reactivestreams.Subscriber` `io.reactivex.subscribers.SafeSubscriber.downstream` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.subscribers.SafeSubscriber.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.subscribers.SafeSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L454570.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L454576.  v0.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L45457a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.subscribers.SafeSubscriber` v1 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45458c.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L454590.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L454596.  goto L4545a6;
  #L454598.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45459a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4545a0.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4545a6.  return @kind void;
  catch `java.lang.Throwable` @[L45458c..L454596] goto L454598;
}
procedure `void` `onComplete`(`io.reactivex.subscribers.SafeSubscriber` v1 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4545c4.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.done` @type ^`boolean` @kind boolean;
  #L4545c8.  if v0 == 0 then goto L4545ce;
  #L4545cc.  return @kind void;
  #L4545ce.  v0:= 1I;
  #L4545d0.  v1.`io.reactivex.subscribers.SafeSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4545d4.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4545d8.  if v0 != 0 then goto L4545e4;
  #L4545dc.  call `onCompleteNoSubscription`(v1) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onCompleteNoSubscription:()V` @kind virtual;
  #L4545e2.  return @kind void;
  #L4545e4.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4545e8.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4545ee.  goto L4545fe;
  #L4545f0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4545f2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4545f8.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4545fe.  return @kind void;
  catch `java.lang.Throwable` @[L4545e4..L4545ee] goto L4545f0;
}
procedure `void` `onCompleteNoSubscription`(`io.reactivex.subscribers.SafeSubscriber` v6 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onCompleteNoSubscription:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45461c.  v0:= new `java.lang.NullPointerException`;
  #L454620.  v1:= "Subscription not set!" @kind object;
  #L454624.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45462a.  v1:= 1I;
  #L45462c.  v2:= 0I;
  #L45462e.  v3:= 2I;
  #L454630.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L454634.  v5:= `@@io.reactivex.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.internal.subscriptions.EmptySubscription` @kind object;
  #L454638.  call `onSubscribe`(v4, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L45463e.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L454642.  call `onError`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L454648.  goto L45466e;
  #L45464a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45464c.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L454652.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L454656.  v3:= new `java.lang.Throwable`[v3];
  #L45465a.  v3[v2]:= v0 @kind object;
  #L45465e.  v3[v1]:= v4 @kind object;
  #L454662.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L454668.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45466e.  return @kind void;
  #L454670.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454672.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L454678.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L45467c.  v3:= new `java.lang.Throwable`[v3];
  #L454680.  v3[v2]:= v0 @kind object;
  #L454684.  v3[v1]:= v4 @kind object;
  #L454688.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45468e.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454694.  return @kind void;
  catch `java.lang.Throwable` @[L454630..L45463e] goto L454670;
  catch `java.lang.Throwable` @[L45463e..L454648] goto L45464a;
}
procedure `void` `onError`(`io.reactivex.subscribers.SafeSubscriber` v8 @kind this, `java.lang.Throwable` v9 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4546c0.  v0:= v8.`io.reactivex.subscribers.SafeSubscriber.done` @type ^`boolean` @kind boolean;
  #L4546c4.  if v0 == 0 then goto L4546d0;
  #L4546c8.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4546ce.  return @kind void;
  #L4546d0.  v0:= 1I;
  #L4546d2.  v8.`io.reactivex.subscribers.SafeSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4546d6.  v1:= v8.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4546da.  v2:= 0I;
  #L4546dc.  v3:= 2I;
  #L4546de.  if v1 != 0 then goto L454776;
  #L4546e2.  v1:= new `java.lang.NullPointerException`;
  #L4546e6.  v4:= "Subscription not set!" @kind object;
  #L4546ea.  call `<init>`(v1, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4546f0.  v4:= 3I;
  #L4546f2.  v5:= v8.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4546f6.  v6:= `@@io.reactivex.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.internal.subscriptions.EmptySubscription` @kind object;
  #L4546fa.  call `onSubscribe`(v5, v6) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L454700.  v5:= v8.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L454704.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L454708.  v7:= new `java.lang.Throwable`[v3];
  #L45470c.  v7[v2]:= v9 @kind object;
  #L454710.  v7[v0]:= v1 @kind object;
  #L454714.  call `<init>`(v6, v7) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45471a.  call `onError`(v5, v6) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L454720.  goto L45474a;
  #L454722.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454724.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45472a.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L45472e.  v4:= new `java.lang.Throwable`[v4];
  #L454732.  v4[v2]:= v9 @kind object;
  #L454736.  v4[v0]:= v1 @kind object;
  #L45473a.  v4[v3]:= v5 @kind object;
  #L45473e.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L454744.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45474a.  return @kind void;
  #L45474c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45474e.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L454754.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L454758.  v4:= new `java.lang.Throwable`[v4];
  #L45475c.  v4[v2]:= v9 @kind object;
  #L454760.  v4[v0]:= v1 @kind object;
  #L454764.  v4[v3]:= v5 @kind object;
  #L454768.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45476e.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454774.  return @kind void;
  #L454776.  if v9 != 0 then goto L454788;
  #L45477a.  v9:= new `java.lang.NullPointerException`;
  #L45477e.  v1:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L454782.  call `<init>`(v9, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L454788.  v1:= v8.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L45478c.  call `onError`(v1, v9) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L454792.  goto L4547b8;
  #L454794.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454796.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45479c.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L4547a0.  v3:= new `java.lang.Throwable`[v3];
  #L4547a4.  v3[v2]:= v9 @kind object;
  #L4547a8.  v3[v0]:= v1 @kind object;
  #L4547ac.  call `<init>`(v4, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4547b2.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4547b8.  return @kind void;
  catch `java.lang.Throwable` @[L4546f2..L454700] goto L45474c;
  catch `java.lang.Throwable` @[L454700..L454720] goto L454722;
  catch `java.lang.Throwable` @[L454788..L454792] goto L454794;
}
procedure `void` `onNext`(`io.reactivex.subscribers.SafeSubscriber` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4547ec.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.done` @type ^`boolean` @kind boolean;
  #L4547f0.  if v0 == 0 then goto L4547f6;
  #L4547f4.  return @kind void;
  #L4547f6.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4547fa.  if v0 != 0 then goto L454806;
  #L4547fe.  call `onNextNoSubscription`(v5) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onNextNoSubscription:()V` @kind virtual;
  #L454804.  return @kind void;
  #L454806.  v0:= 1I;
  #L454808.  v1:= 0I;
  #L45480a.  v2:= 2I;
  #L45480c.  if v6 != 0 then goto L454856;
  #L454810.  v6:= new `java.lang.NullPointerException`;
  #L454814.  v3:= "onNext called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L454818.  call `<init>`(v6, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45481e.  v3:= v5.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L454822.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L454828.  call `onError`(v5, v6) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L45482e.  return @kind void;
  #L454830.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454832.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L454838.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L45483c.  v2:= new `java.lang.Throwable`[v2];
  #L454840.  v2[v1]:= v6 @kind object;
  #L454844.  v2[v0]:= v3 @kind object;
  #L454848.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45484e.  call `onError`(v5, v4) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L454854.  return @kind void;
  #L454856.  v3:= v5.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L45485a.  call `onNext`(v3, v6) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L454860.  goto L45487a;
  #L454862.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454864.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45486a.  v3:= v5.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L45486e.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L454874.  call `onError`(v5, v6) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L45487a.  return @kind void;
  #L45487c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45487e.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L454884.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L454888.  v2:= new `java.lang.Throwable`[v2];
  #L45488c.  v2[v1]:= v6 @kind object;
  #L454890.  v2[v0]:= v3 @kind object;
  #L454894.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45489a.  call `onError`(v5, v4) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4548a0.  return @kind void;
  catch `java.lang.Throwable` @[L45481e..L454828] goto L454830;
  catch `java.lang.Throwable` @[L454856..L454860] goto L454862;
  catch `java.lang.Throwable` @[L45486a..L454874] goto L45487c;
}
procedure `void` `onNextNoSubscription`(`io.reactivex.subscribers.SafeSubscriber` v6 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onNextNoSubscription:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4548d4.  v0:= 1I;
  #L4548d6.  v6.`io.reactivex.subscribers.SafeSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4548da.  v1:= new `java.lang.NullPointerException`;
  #L4548de.  v2:= "Subscription not set!" @kind object;
  #L4548e2.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4548e8.  v2:= 0I;
  #L4548ea.  v3:= 2I;
  #L4548ec.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4548f0.  v5:= `@@io.reactivex.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.internal.subscriptions.EmptySubscription` @kind object;
  #L4548f4.  call `onSubscribe`(v4, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4548fa.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4548fe.  call `onError`(v4, v1) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L454904.  goto L45492a;
  #L454906.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454908.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45490e.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L454912.  v3:= new `java.lang.Throwable`[v3];
  #L454916.  v3[v2]:= v1 @kind object;
  #L45491a.  v3[v0]:= v4 @kind object;
  #L45491e.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L454924.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L45492a.  return @kind void;
  #L45492c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45492e.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L454934.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L454938.  v3:= new `java.lang.Throwable`[v3];
  #L45493c.  v3[v2]:= v1 @kind object;
  #L454940.  v3[v0]:= v4 @kind object;
  #L454944.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L45494a.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454950.  return @kind void;
  catch `java.lang.Throwable` @[L4548ec..L4548fa] goto L45492c;
  catch `java.lang.Throwable` @[L4548fa..L454904] goto L454906;
}
procedure `void` `onSubscribe`(`io.reactivex.subscribers.SafeSubscriber` v5 @kind this, `org.reactivestreams.Subscription` v6 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45497c.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L454980.  call temp:= `validate`(v0, v6) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L454986.  v0:= temp;
  #L454988.  if v0 == 0 then goto L4549e0;
  #L45498c.  v5.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v6 @kind object;
  #L454990.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L454994.  call `onSubscribe`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L45499a.  goto L4549e0;
  #L45499c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45499e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4549a4.  v1:= 1I;
  #L4549a6.  v5.`io.reactivex.subscribers.SafeSubscriber.done` @type ^`boolean` := v1 @kind boolean;
  #L4549aa.  call `cancel`(v6) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4549b0.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4549b6.  goto L4549e0;
  #L4549b8.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4549ba.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4549c0.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L4549c4.  v3:= 2I;
  #L4549c6.  v3:= new `java.lang.Throwable`[v3];
  #L4549ca.  v4:= 0I;
  #L4549cc.  v3[v4]:= v0 @kind object;
  #L4549d0.  v3[v1]:= v6 @kind object;
  #L4549d4.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4549da.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4549e0.  return @kind void;
  catch `java.lang.Throwable` @[L454990..L45499a] goto L45499c;
  catch `java.lang.Throwable` @[L4549aa..L4549b0] goto L4549b8;
}
procedure `void` `request`(`io.reactivex.subscribers.SafeSubscriber` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/subscribers/SafeSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L454a0c.  v0:= v3.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L454a10.  call `request`(v0, v4) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L454a16.  goto L454a30;
  #L454a18.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454a1a.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L454a20.  v5:= v3.`io.reactivex.subscribers.SafeSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L454a24.  call `cancel`(v5) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L454a2a.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454a30.  return @kind void;
  #L454a32.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454a34.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L454a3a.  v0:= new `io.reactivex.exceptions.CompositeException`;
  #L454a3e.  v1:= 2I;
  #L454a40.  v1:= new `java.lang.Throwable`[v1];
  #L454a44.  v2:= 0I;
  #L454a46.  v1[v2]:= v4 @kind object;
  #L454a4a.  v4:= 1I;
  #L454a4c.  v1[v4]:= v5 @kind object;
  #L454a50.  call `<init>`(v0, v1) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L454a56.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454a5c.  return @kind void;
  catch `java.lang.Throwable` @[L454a0c..L454a16] goto L454a18;
  catch `java.lang.Throwable` @[L454a20..L454a2a] goto L454a32;
}
