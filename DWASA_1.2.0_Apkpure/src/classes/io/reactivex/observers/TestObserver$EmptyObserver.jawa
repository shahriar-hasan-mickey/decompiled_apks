record `io.reactivex.observers.TestObserver$EmptyObserver` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.Observer` @kind interface {
}
global `io.reactivex.observers.TestObserver$EmptyObserver`[] `@@io.reactivex.observers.TestObserver$EmptyObserver.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.observers.TestObserver$EmptyObserver` `@@io.reactivex.observers.TestObserver$EmptyObserver.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/observers/TestObserver$EmptyObserver;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L449ef0.  v0:= new `io.reactivex.observers.TestObserver$EmptyObserver`;
  #L449ef4.  v1:= 0I;
  #L449ef6.  v2:= "INSTANCE" @kind object;
  #L449efa.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/observers/TestObserver$EmptyObserver;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L449f00.  `@@io.reactivex.observers.TestObserver$EmptyObserver.INSTANCE` @type ^`io.reactivex.observers.TestObserver$EmptyObserver` := v0 @kind object;
  #L449f04.  v0:= 1I;
  #L449f06.  v0:= new `io.reactivex.observers.TestObserver$EmptyObserver`[v0];
  #L449f0a.  v2:= `@@io.reactivex.observers.TestObserver$EmptyObserver.INSTANCE` @type ^`io.reactivex.observers.TestObserver$EmptyObserver` @kind object;
  #L449f0e.  v0[v1]:= v2 @kind object;
  #L449f12.  `@@io.reactivex.observers.TestObserver$EmptyObserver.$VALUES` @type ^`io.reactivex.observers.TestObserver$EmptyObserver`[] := v0 @kind object;
  #L449f16.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.observers.TestObserver$EmptyObserver` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/observers/TestObserver$EmptyObserver;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L449f28.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L449f2e.  return @kind void;
}
procedure `io.reactivex.observers.TestObserver$EmptyObserver` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/observers/TestObserver$EmptyObserver;.valueOf:(Ljava/lang/String;)Lio/reactivex/observers/TestObserver$EmptyObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L449ea8.  v0:= constclass @type ^`io.reactivex.observers.TestObserver$EmptyObserver` @kind object;
  #L449eac.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L449eb2.  v1:= temp @kind object;
  #L449eb4.  v1:= (`io.reactivex.observers.TestObserver$EmptyObserver`) v1 @kind object;
  #L449eb8.  return v1 @kind object;
}
procedure `io.reactivex.observers.TestObserver$EmptyObserver`[] `values`() @signature `Lio/reactivex/observers/TestObserver$EmptyObserver;.values:()[Lio/reactivex/observers/TestObserver$EmptyObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L449ecc.  v0:= `@@io.reactivex.observers.TestObserver$EmptyObserver.$VALUES` @type ^`io.reactivex.observers.TestObserver$EmptyObserver`[] @kind object;
  #L449ed0.  call temp:= `clone`(v0) @signature `[Lio/reactivex/observers/TestObserver$EmptyObserver;.clone:()Ljava/lang/Object;` @kind virtual;
  #L449ed6.  v0:= temp @kind object;
  #L449ed8.  v0:= (`io.reactivex.observers.TestObserver$EmptyObserver`[]) v0 @kind object;
  #L449edc.  return v0 @kind object;
}
procedure `void` `onComplete`(`io.reactivex.observers.TestObserver$EmptyObserver` v0 @kind this) @signature `Lio/reactivex/observers/TestObserver$EmptyObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L449f40.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.observers.TestObserver$EmptyObserver` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/observers/TestObserver$EmptyObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L449f54.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.observers.TestObserver$EmptyObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/observers/TestObserver$EmptyObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L449f68.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.observers.TestObserver$EmptyObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/observers/TestObserver$EmptyObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L449f7c.  return @kind void;
}
