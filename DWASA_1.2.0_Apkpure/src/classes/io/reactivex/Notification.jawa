record `io.reactivex.Notification` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `io.reactivex.Notification.value` @AccessFlag FINAL;
}
global `io.reactivex.Notification` `@@io.reactivex.Notification.COMPLETE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/Notification;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3dab34.  v0:= new `io.reactivex.Notification`;
  #L3dab38.  v1:= 0I;
  #L3dab3a.  call `<init>`(v0, v1) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3dab40.  `@@io.reactivex.Notification.COMPLETE` @type ^`io.reactivex.Notification` := v0 @kind object;
  #L3dab44.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.Notification` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3dab58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dab5e.  v0.`io.reactivex.Notification.value` @type ^`java.lang.Object` := v1 @kind object;
  #L3dab62.  return @kind void;
}
procedure `io.reactivex.Notification` `createOnComplete`() @signature `Lio/reactivex/Notification;.createOnComplete:()Lio/reactivex/Notification;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3da9d4.  v0:= `@@io.reactivex.Notification.COMPLETE` @type ^`io.reactivex.Notification` @kind object;
  #L3da9d8.  return v0 @kind object;
}
procedure `io.reactivex.Notification` `createOnError`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Notification;.createOnError:(Ljava/lang/Throwable;)Lio/reactivex/Notification;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3da9ec.  v0:= "error is null" @kind object;
  #L3da9f0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3da9f6.  v0:= new `io.reactivex.Notification`;
  #L3da9fa.  call temp:= `error`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L3daa00.  v1:= temp @kind object;
  #L3daa02.  call `<init>`(v0, v1) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3daa08.  return v0 @kind object;
}
procedure `io.reactivex.Notification` `createOnNext`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Notification;.createOnNext:(Ljava/lang/Object;)Lio/reactivex/Notification;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3daa1c.  v0:= "value is null" @kind object;
  #L3daa20.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3daa26.  v0:= new `io.reactivex.Notification`;
  #L3daa2a.  call `<init>`(v0, v1) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3daa30.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.reactivex.Notification` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Notification;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da90c.  v0:= instanceof @variable v2 @type ^`io.reactivex.Notification` @kind boolean;
  #L3da910.  if v0 == 0 then goto L3da92a;
  #L3da914.  v2:= (`io.reactivex.Notification`) v2 @kind object;
  #L3da918.  v0:= v1.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3da91c.  v2:= v2.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3da920.  call temp:= `equals`(v0, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3da926.  v2:= temp;
  #L3da928.  return v2;
  #L3da92a.  v2:= 0I;
  #L3da92c.  return v2;
}
procedure `java.lang.Throwable` `getError`(`io.reactivex.Notification` v2 @kind this) @signature `Lio/reactivex/Notification;.getError:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dab04.  v0:= v2.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3dab08.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3dab0e.  v1:= temp;
  #L3dab10.  if v1 == 0 then goto L3dab1e;
  #L3dab14.  call temp:= `getError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L3dab1a.  v0:= temp @kind object;
  #L3dab1c.  return v0 @kind object;
  #L3dab1e.  v0:= 0I;
  #L3dab20.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3daa44.  v0:= v1.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3daa48.  if v0 == 0 then goto L3daa5e;
  #L3daa4c.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3daa52.  v0:= temp;
  #L3daa54.  if v0 != 0 then goto L3daa5e;
  #L3daa58.  v0:= v1.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3daa5c.  return v0 @kind object;
  #L3daa5e.  v0:= 0I;
  #L3daa60.  return v0 @kind object;
}
procedure `int` `hashCode`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da9ac.  v0:= v1.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3da9b0.  if v0 == 0 then goto L3da9be;
  #L3da9b4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3da9ba.  v0:= temp;
  #L3da9bc.  goto L3da9c0;
  #L3da9be.  v0:= 0I;
  #L3da9c0.  return v0;
}
procedure `boolean` `isOnComplete`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.isOnComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da940.  v0:= v1.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3da944.  if v0 != 0 then goto L3da94c;
  #L3da948.  v0:= 1I;
  #L3da94a.  goto L3da94e;
  #L3da94c.  v0:= 0I;
  #L3da94e.  return v0;
}
procedure `boolean` `isOnError`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.isOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da960.  v0:= v1.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3da964.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3da96a.  v0:= temp;
  #L3da96c.  return v0;
}
procedure `boolean` `isOnNext`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.isOnNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da980.  v0:= v1.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3da984.  if v0 == 0 then goto L3da998;
  #L3da988.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3da98e.  v0:= temp;
  #L3da990.  if v0 != 0 then goto L3da998;
  #L3da994.  v0:= 1I;
  #L3da996.  goto L3da99a;
  #L3da998.  v0:= 0I;
  #L3da99a.  return v0;
}
procedure `java.lang.String` `toString`(`io.reactivex.Notification` v4 @kind this) @signature `Lio/reactivex/Notification;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3daa74.  v0:= v4.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3daa78.  if v0 != 0 then goto L3daa82;
  #L3daa7c.  v0:= "OnCompleteNotification" @kind object;
  #L3daa80.  return v0 @kind object;
  #L3daa82.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3daa88.  v1:= temp;
  #L3daa8a.  v2:= "]" @kind object;
  #L3daa8e.  if v1 == 0 then goto L3daac4;
  #L3daa92.  v1:= new `java.lang.StringBuilder`;
  #L3daa96.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3daa9c.  v3:= "OnErrorNotification[" @kind object;
  #L3daaa0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3daaa6.  call temp:= `getError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L3daaac.  v0:= temp @kind object;
  #L3daaae.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3daab4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3daaba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3daac0.  v0:= temp @kind object;
  #L3daac2.  return v0 @kind object;
  #L3daac4.  v0:= new `java.lang.StringBuilder`;
  #L3daac8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3daace.  v1:= "OnNextNotification[" @kind object;
  #L3daad2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3daad8.  v1:= v4.`io.reactivex.Notification.value` @type ^`java.lang.Object` @kind object;
  #L3daadc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3daae2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3daae8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3daaee.  v0:= temp @kind object;
  #L3daaf0.  return v0 @kind object;
}
