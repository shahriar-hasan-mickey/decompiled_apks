record `io.reactivex.schedulers.Schedulers$IoHolder` @kind class @AccessFlag FINAL {
}
global `io.reactivex.Scheduler` `@@io.reactivex.schedulers.Schedulers$IoHolder.DEFAULT` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/schedulers/Schedulers$IoHolder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L44fda8.  v0:= new `io.reactivex.internal.schedulers.IoScheduler`;
  #L44fdac.  call `<init>`(v0) @signature `Lio/reactivex/internal/schedulers/IoScheduler;.<init>:()V` @kind direct;
  #L44fdb2.  `@@io.reactivex.schedulers.Schedulers$IoHolder.DEFAULT` @type ^`io.reactivex.Scheduler` := v0 @kind object;
  #L44fdb6.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.schedulers.Schedulers$IoHolder` v0 @kind this) @signature `Lio/reactivex/schedulers/Schedulers$IoHolder;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44fdc8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44fdce.  return @kind void;
}
