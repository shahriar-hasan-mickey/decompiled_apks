record `io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.schedulers.TestScheduler$TestWorker` `io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove.this$1` @AccessFlag FINAL_SYNTHETIC;
  `io.reactivex.schedulers.TestScheduler$TimedRunnable` `io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove.timedAction` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove` v0 @kind this, `io.reactivex.schedulers.TestScheduler$TestWorker` v1 @kind object, `io.reactivex.schedulers.TestScheduler$TimedRunnable` v2 @kind object) @signature `Lio/reactivex/schedulers/TestScheduler$TestWorker$QueueRemove;.<init>:(Lio/reactivex/schedulers/TestScheduler$TestWorker;Lio/reactivex/schedulers/TestScheduler$TimedRunnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4500fc.  v0.`io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove.this$1` @type ^`io.reactivex.schedulers.TestScheduler$TestWorker` := v1 @kind object;
  #L450100.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L450106.  v0.`io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove.timedAction` @type ^`io.reactivex.schedulers.TestScheduler$TimedRunnable` := v2 @kind object;
  #L45010a.  return @kind void;
}
procedure `void` `run`(`io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove` v2 @kind this) @signature `Lio/reactivex/schedulers/TestScheduler$TestWorker$QueueRemove;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45011c.  v0:= v2.`io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove.this$1` @type ^`io.reactivex.schedulers.TestScheduler$TestWorker` @kind object;
  #L450120.  v0:= v0.`io.reactivex.schedulers.TestScheduler$TestWorker.this$0` @type ^`io.reactivex.schedulers.TestScheduler` @kind object;
  #L450124.  v0:= v0.`io.reactivex.schedulers.TestScheduler.queue` @type ^`java.util.Queue` @kind object;
  #L450128.  v1:= v2.`io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove.timedAction` @type ^`io.reactivex.schedulers.TestScheduler$TimedRunnable` @kind object;
  #L45012c.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Queue;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L450132.  return @kind void;
}
