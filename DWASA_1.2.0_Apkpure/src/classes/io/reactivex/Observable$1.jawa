record `io.reactivex.Observable$1` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.Observable$1.$SwitchMap$io$reactivex$BackpressureStrategy` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/Observable$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3dab74.  call temp:= `values`() @signature `Lio/reactivex/BackpressureStrategy;.values:()[Lio/reactivex/BackpressureStrategy;` @kind static;
  #L3dab7a.  v0:= temp @kind object;
  #L3dab7c.  v0:= length @variable v0;
  #L3dab7e.  v0:= new `int`[v0];
  #L3dab82.  `@@io.reactivex.Observable$1.$SwitchMap$io$reactivex$BackpressureStrategy` @type ^`int`[] := v0 @kind object;
  #L3dab86.  v0:= `@@io.reactivex.Observable$1.$SwitchMap$io$reactivex$BackpressureStrategy` @type ^`int`[] @kind object;
  #L3dab8a.  v1:= `@@io.reactivex.BackpressureStrategy.DROP` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3dab8e.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/BackpressureStrategy;.ordinal:()I` @kind virtual;
  #L3dab94.  v1:= temp;
  #L3dab96.  v2:= 1I;
  #L3dab98.  v0[v1]:= v2;
  #L3dab9c.  v0:= `@@io.reactivex.Observable$1.$SwitchMap$io$reactivex$BackpressureStrategy` @type ^`int`[] @kind object;
  #L3daba0.  v1:= `@@io.reactivex.BackpressureStrategy.LATEST` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3daba4.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/BackpressureStrategy;.ordinal:()I` @kind virtual;
  #L3dabaa.  v1:= temp;
  #L3dabac.  v2:= 2I;
  #L3dabae.  v0[v1]:= v2;
  #L3dabb2.  v0:= `@@io.reactivex.Observable$1.$SwitchMap$io$reactivex$BackpressureStrategy` @type ^`int`[] @kind object;
  #L3dabb6.  v1:= `@@io.reactivex.BackpressureStrategy.MISSING` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3dabba.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/BackpressureStrategy;.ordinal:()I` @kind virtual;
  #L3dabc0.  v1:= temp;
  #L3dabc2.  v2:= 3I;
  #L3dabc4.  v0[v1]:= v2;
  #L3dabc8.  v0:= `@@io.reactivex.Observable$1.$SwitchMap$io$reactivex$BackpressureStrategy` @type ^`int`[] @kind object;
  #L3dabcc.  v1:= `@@io.reactivex.BackpressureStrategy.ERROR` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3dabd0.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/BackpressureStrategy;.ordinal:()I` @kind virtual;
  #L3dabd6.  v1:= temp;
  #L3dabd8.  v2:= 4I;
  #L3dabda.  v0[v1]:= v2;
  #L3dabde.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L3dab86..L3dab9c] goto L3dab9c;
  catch `java.lang.NoSuchFieldError` @[L3dab9c..L3dabb2] goto L3dabb2;
  catch `java.lang.NoSuchFieldError` @[L3dabb2..L3dabc8] goto L3dabc8;
  catch `java.lang.NoSuchFieldError` @[L3dabc8..L3dabde] goto L3dabde;
}
