record `io.reactivex.Single` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.SingleSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.Single` v0 @kind this) @signature `Lio/reactivex/Single;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e3808.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e380e.  return @kind void;
}
procedure `io.reactivex.Single` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Single;.amb:(Ljava/lang/Iterable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e23e0.  v0:= "sources is null" @kind object;
  #L3e23e4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e23ea.  v0:= new `io.reactivex.internal.operators.single.SingleAmb`;
  #L3e23ee.  v1:= 0I;
  #L3e23f0.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3e23f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e23fc.  v2:= temp @kind object;
  #L3e23fe.  return v2 @kind object;
}
procedure `io.reactivex.Single` `ambArray`(`io.reactivex.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/Single;.ambArray:([Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e2410.  v0:= length @variable v2;
  #L3e2412.  if v0 != 0 then goto L3e2428;
  #L3e2416.  call temp:= `emptyThrower`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.emptyThrower:()Ljava/util/concurrent/Callable;` @kind static;
  #L3e241c.  v2:= temp @kind object;
  #L3e241e.  call temp:= `error`(v2) @signature `Lio/reactivex/Single;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @kind static;
  #L3e2424.  v2:= temp @kind object;
  #L3e2426.  return v2 @kind object;
  #L3e2428.  v0:= length @variable v2;
  #L3e242a.  v1:= 1I;
  #L3e242c.  if v0 != v1 then goto L3e2440;
  #L3e2430.  v0:= 0I;
  #L3e2432.  v2:= v2[v0] @kind object;
  #L3e2436.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Single;.wrap:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e243c.  v2:= temp @kind object;
  #L3e243e.  return v2 @kind object;
  #L3e2440.  v0:= new `io.reactivex.internal.operators.single.SingleAmb`;
  #L3e2444.  v1:= 0I;
  #L3e2446.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3e244c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2452.  v2:= temp @kind object;
  #L3e2454.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e1bcc.  v0:= "source1 is null" @kind object;
  #L3e1bd0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1bd6.  v0:= "source2 is null" @kind object;
  #L3e1bda.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1be0.  v0:= 2I;
  #L3e1be2.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e1be6.  v1:= 0I;
  #L3e1be8.  v0[v1]:= v2 @kind object;
  #L3e1bec.  v2:= 1I;
  #L3e1bee.  v0[v2]:= v3 @kind object;
  #L3e1bf2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e1bf8.  v2:= temp @kind object;
  #L3e1bfa.  call temp:= `concat`(v2) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e1c00.  v2:= temp @kind object;
  #L3e1c02.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e1c14.  v0:= "source1 is null" @kind object;
  #L3e1c18.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1c1e.  v0:= "source2 is null" @kind object;
  #L3e1c22.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1c28.  v0:= "source3 is null" @kind object;
  #L3e1c2c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1c32.  v0:= 3I;
  #L3e1c34.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e1c38.  v1:= 0I;
  #L3e1c3a.  v0[v1]:= v2 @kind object;
  #L3e1c3e.  v2:= 1I;
  #L3e1c40.  v0[v2]:= v3 @kind object;
  #L3e1c44.  v2:= 2I;
  #L3e1c46.  v0[v2]:= v4 @kind object;
  #L3e1c4a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e1c50.  v2:= temp @kind object;
  #L3e1c52.  call temp:= `concat`(v2) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e1c58.  v2:= temp @kind object;
  #L3e1c5a.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e1c6c.  v0:= "source1 is null" @kind object;
  #L3e1c70.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1c76.  v0:= "source2 is null" @kind object;
  #L3e1c7a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1c80.  v0:= "source3 is null" @kind object;
  #L3e1c84.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1c8a.  v0:= "source4 is null" @kind object;
  #L3e1c8e.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1c94.  v0:= 4I;
  #L3e1c96.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e1c9a.  v1:= 0I;
  #L3e1c9c.  v0[v1]:= v2 @kind object;
  #L3e1ca0.  v2:= 1I;
  #L3e1ca2.  v0[v2]:= v3 @kind object;
  #L3e1ca6.  v2:= 2I;
  #L3e1ca8.  v0[v2]:= v4 @kind object;
  #L3e1cac.  v2:= 3I;
  #L3e1cae.  v0[v2]:= v5 @kind object;
  #L3e1cb2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e1cb8.  v2:= temp @kind object;
  #L3e1cba.  call temp:= `concat`(v2) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e1cc0.  v2:= temp @kind object;
  #L3e1cc2.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`java.lang.Iterable` v0 @kind object) @signature `Lio/reactivex/Single;.concat:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e1cd4.  call temp:= `fromIterable`(v0) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L3e1cda.  v0:= temp @kind object;
  #L3e1cdc.  call temp:= `concat`(v0) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e1ce2.  v0:= temp @kind object;
  #L3e1ce4.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e1cf8.  v0:= 2I;
  #L3e1cfa.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Flowable;` @kind static;
  #L3e1d00.  v1:= temp @kind object;
  #L3e1d02.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`org.reactivestreams.Publisher` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1d14.  v0:= "sources is null" @kind object;
  #L3e1d18.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1d1e.  v0:= "prefetch" @kind object;
  #L3e1d22.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e1d28.  v0:= new `io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher`;
  #L3e1d2c.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3e1d32.  v1:= temp @kind object;
  #L3e1d34.  v2:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3e1d38.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3e1d3e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e1d44.  v3:= temp @kind object;
  #L3e1d46.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e2308.  v0:= "sources is null" @kind object;
  #L3e230c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2312.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3e2316.  call temp:= `toObservable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toObservable:()Lio/reactivex/functions/Function;` @kind static;
  #L3e231c.  v1:= temp @kind object;
  #L3e231e.  v2:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3e2322.  v3:= 2I;
  #L3e2324.  call `<init>`(v0, v4, v1, v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3e232a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e2330.  v4:= temp @kind object;
  #L3e2332.  return v4 @kind object;
}
procedure `io.reactivex.Flowable` `concatArray`(`io.reactivex.SingleSource`[] v4 @kind object) @signature `Lio/reactivex/Single;.concatArray:([Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e1d58.  v0:= new `io.reactivex.internal.operators.flowable.FlowableConcatMap`;
  #L3e1d5c.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e1d62.  v4:= temp @kind object;
  #L3e1d64.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3e1d6a.  v1:= temp @kind object;
  #L3e1d6c.  v2:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3e1d70.  v3:= 2I;
  #L3e1d72.  call `<init>`(v0, v4, v1, v3, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.<init>:(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3e1d78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e1d7e.  v4:= temp @kind object;
  #L3e1d80.  return v4 @kind object;
}
procedure `io.reactivex.Flowable` `concatArrayEager`(`io.reactivex.SingleSource`[] v1 @kind object) @signature `Lio/reactivex/Single;.concatArrayEager:([Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e1d94.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e1d9a.  v1:= temp @kind object;
  #L3e1d9c.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3e1da2.  v0:= temp @kind object;
  #L3e1da4.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/Flowable;.concatMapEager:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e1daa.  v1:= temp @kind object;
  #L3e1dac.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `concatEager`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Single;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e1dc0.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L3e1dc6.  v1:= temp @kind object;
  #L3e1dc8.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3e1dce.  v0:= temp @kind object;
  #L3e1dd0.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/Flowable;.concatMapEager:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e1dd6.  v1:= temp @kind object;
  #L3e1dd8.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `concatEager`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Single;.concatEager:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e1dec.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e1df2.  v1:= temp @kind object;
  #L3e1df4.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3e1dfa.  v0:= temp @kind object;
  #L3e1dfc.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/Flowable;.concatMapEager:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e1e02.  v1:= temp @kind object;
  #L3e1e04.  return v1 @kind object;
}
procedure `io.reactivex.Single` `create`(`io.reactivex.SingleOnSubscribe` v1 @kind object) @signature `Lio/reactivex/Single;.create:(Lio/reactivex/SingleOnSubscribe;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2580.  v0:= "source is null" @kind object;
  #L3e2584.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e258a.  v0:= new `io.reactivex.internal.operators.single.SingleCreate`;
  #L3e258e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleCreate;.<init>:(Lio/reactivex/SingleOnSubscribe;)V` @kind direct;
  #L3e2594.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e259a.  v1:= temp @kind object;
  #L3e259c.  return v1 @kind object;
}
procedure `io.reactivex.Single` `defer`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Single;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e25b0.  v0:= "singleSupplier is null" @kind object;
  #L3e25b4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e25ba.  v0:= new `io.reactivex.internal.operators.single.SingleDefer`;
  #L3e25be.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3e25c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e25ca.  v1:= temp @kind object;
  #L3e25cc.  return v1 @kind object;
}
procedure `io.reactivex.Single` `equals`(`io.reactivex.SingleSource` v1 @kind object, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.equals:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2928.  v0:= "first is null" @kind object;
  #L3e292c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2932.  v0:= "second is null" @kind object;
  #L3e2936.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e293c.  v0:= new `io.reactivex.internal.operators.single.SingleEquals`;
  #L3e2940.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleEquals;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e2946.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e294c.  v1:= temp @kind object;
  #L3e294e.  return v1 @kind object;
}
procedure `io.reactivex.Single` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2960.  v0:= "error is null" @kind object;
  #L3e2964.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e296a.  call temp:= `justCallable`(v1) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L3e2970.  v1:= temp @kind object;
  #L3e2972.  call temp:= `error`(v1) @signature `Lio/reactivex/Single;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @kind static;
  #L3e2978.  v1:= temp @kind object;
  #L3e297a.  return v1 @kind object;
}
procedure `io.reactivex.Single` `error`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Single;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e298c.  v0:= "errorSupplier is null" @kind object;
  #L3e2990.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2996.  v0:= new `io.reactivex.internal.operators.single.SingleError`;
  #L3e299a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleError;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3e29a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e29a6.  v1:= temp @kind object;
  #L3e29a8.  return v1 @kind object;
}
procedure `io.reactivex.Single` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Single;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e29ec.  v0:= "callable is null" @kind object;
  #L3e29f0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e29f6.  v0:= new `io.reactivex.internal.operators.single.SingleFromCallable`;
  #L3e29fa.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3e2a00.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2a06.  v1:= temp @kind object;
  #L3e2a08.  return v1 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e2a1c.  call temp:= `fromFuture`(v0) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Flowable;` @kind static;
  #L3e2a22.  v0:= temp @kind object;
  #L3e2a24.  call temp:= `toSingle`(v0) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2a2a.  v0:= temp @kind object;
  #L3e2a2c.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e2a64.  call temp:= `fromFuture`(v0, v1, v3) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Flowable;` @kind static;
  #L3e2a6a.  v0:= temp @kind object;
  #L3e2a6c.  call temp:= `toSingle`(v0) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2a72.  v0:= temp @kind object;
  #L3e2a74.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e2a88.  call temp:= `fromFuture`(v0, v1, v3, v4) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind static;
  #L3e2a8e.  v0:= temp @kind object;
  #L3e2a90.  call temp:= `toSingle`(v0) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2a96.  v0:= temp @kind object;
  #L3e2a98.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e2a40.  call temp:= `fromFuture`(v0, v1) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind static;
  #L3e2a46.  v0:= temp @kind object;
  #L3e2a48.  call temp:= `toSingle`(v0) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2a4e.  v0:= temp @kind object;
  #L3e2a50.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromObservable`(`io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Single;.fromObservable:(Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e2aac.  v0:= "observableSource is null" @kind object;
  #L3e2ab0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2ab6.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleSingle`;
  #L3e2aba.  v1:= 0I;
  #L3e2abc.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3e2ac2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2ac8.  v2:= temp @kind object;
  #L3e2aca.  return v2 @kind object;
}
procedure `io.reactivex.Single` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Single;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2adc.  v0:= "publisher is null" @kind object;
  #L3e2ae0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2ae6.  v0:= new `io.reactivex.internal.operators.single.SingleFromPublisher`;
  #L3e2aea.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3e2af0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2af6.  v1:= temp @kind object;
  #L3e2af8.  return v1 @kind object;
}
procedure `io.reactivex.Single` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Single;.just:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2b30.  v0:= "value is null" @kind object;
  #L3e2b34.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2b3a.  v0:= new `io.reactivex.internal.operators.single.SingleJust`;
  #L3e2b3e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e2b44.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2b4a.  v1:= temp @kind object;
  #L3e2b4c.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e1e94.  v0:= "source1 is null" @kind object;
  #L3e1e98.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1e9e.  v0:= "source2 is null" @kind object;
  #L3e1ea2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1ea8.  v0:= 2I;
  #L3e1eaa.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e1eae.  v1:= 0I;
  #L3e1eb0.  v0[v1]:= v2 @kind object;
  #L3e1eb4.  v2:= 1I;
  #L3e1eb6.  v0[v2]:= v3 @kind object;
  #L3e1eba.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e1ec0.  v2:= temp @kind object;
  #L3e1ec2.  call temp:= `merge`(v2) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e1ec8.  v2:= temp @kind object;
  #L3e1eca.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e1edc.  v0:= "source1 is null" @kind object;
  #L3e1ee0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1ee6.  v0:= "source2 is null" @kind object;
  #L3e1eea.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1ef0.  v0:= "source3 is null" @kind object;
  #L3e1ef4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1efa.  v0:= 3I;
  #L3e1efc.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e1f00.  v1:= 0I;
  #L3e1f02.  v0[v1]:= v2 @kind object;
  #L3e1f06.  v2:= 1I;
  #L3e1f08.  v0[v2]:= v3 @kind object;
  #L3e1f0c.  v2:= 2I;
  #L3e1f0e.  v0[v2]:= v4 @kind object;
  #L3e1f12.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e1f18.  v2:= temp @kind object;
  #L3e1f1a.  call temp:= `merge`(v2) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e1f20.  v2:= temp @kind object;
  #L3e1f22.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e1f34.  v0:= "source1 is null" @kind object;
  #L3e1f38.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1f3e.  v0:= "source2 is null" @kind object;
  #L3e1f42.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1f48.  v0:= "source3 is null" @kind object;
  #L3e1f4c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1f52.  v0:= "source4 is null" @kind object;
  #L3e1f56.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1f5c.  v0:= 4I;
  #L3e1f5e.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e1f62.  v1:= 0I;
  #L3e1f64.  v0[v1]:= v2 @kind object;
  #L3e1f68.  v2:= 1I;
  #L3e1f6a.  v0[v2]:= v3 @kind object;
  #L3e1f6e.  v2:= 2I;
  #L3e1f70.  v0[v2]:= v4 @kind object;
  #L3e1f74.  v2:= 3I;
  #L3e1f76.  v0[v2]:= v5 @kind object;
  #L3e1f7a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e1f80.  v2:= temp @kind object;
  #L3e1f82.  call temp:= `merge`(v2) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e1f88.  v2:= temp @kind object;
  #L3e1f8a.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`java.lang.Iterable` v0 @kind object) @signature `Lio/reactivex/Single;.merge:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e1f9c.  call temp:= `fromIterable`(v0) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L3e1fa2.  v0:= temp @kind object;
  #L3e1fa4.  call temp:= `merge`(v0) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e1faa.  v0:= temp @kind object;
  #L3e1fac.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`org.reactivestreams.Publisher` v7 @kind object) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e1fc0.  v0:= "sources is null" @kind object;
  #L3e1fc4.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1fca.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher`;
  #L3e1fce.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3e1fd4.  v3:= temp @kind object;
  #L3e1fd6.  call temp:= `bufferSize`() @signature `Lio/reactivex/Flowable;.bufferSize:()I` @kind static;
  #L3e1fdc.  v6:= temp;
  #L3e1fde.  v4:= 0I;
  #L3e1fe0.  v5:= 2147483647I;
  #L3e1fe6.  v1:= v0 @kind object;
  #L3e1fe8.  v2:= v7 @kind object;
  #L3e1fea.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3e1ff0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e1ff6.  v7:= temp @kind object;
  #L3e1ff8.  return v7 @kind object;
}
procedure `io.reactivex.Single` `merge`(`io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e2bc0.  v0:= "source is null" @kind object;
  #L3e2bc4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2bca.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMap`;
  #L3e2bce.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3e2bd4.  v1:= temp @kind object;
  #L3e2bd6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e2bdc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2be2.  v2:= temp @kind object;
  #L3e2be4.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e200c.  v0:= "source1 is null" @kind object;
  #L3e2010.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2016.  v0:= "source2 is null" @kind object;
  #L3e201a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2020.  v0:= 2I;
  #L3e2022.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e2026.  v1:= 0I;
  #L3e2028.  v0[v1]:= v2 @kind object;
  #L3e202c.  v2:= 1I;
  #L3e202e.  v0[v2]:= v3 @kind object;
  #L3e2032.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e2038.  v2:= temp @kind object;
  #L3e203a.  call temp:= `mergeDelayError`(v2) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e2040.  v2:= temp @kind object;
  #L3e2042.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e2054.  v0:= "source1 is null" @kind object;
  #L3e2058.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e205e.  v0:= "source2 is null" @kind object;
  #L3e2062.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2068.  v0:= "source3 is null" @kind object;
  #L3e206c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2072.  v0:= 3I;
  #L3e2074.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e2078.  v1:= 0I;
  #L3e207a.  v0[v1]:= v2 @kind object;
  #L3e207e.  v2:= 1I;
  #L3e2080.  v0[v2]:= v3 @kind object;
  #L3e2084.  v2:= 2I;
  #L3e2086.  v0[v2]:= v4 @kind object;
  #L3e208a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e2090.  v2:= temp @kind object;
  #L3e2092.  call temp:= `mergeDelayError`(v2) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e2098.  v2:= temp @kind object;
  #L3e209a.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e20ac.  v0:= "source1 is null" @kind object;
  #L3e20b0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e20b6.  v0:= "source2 is null" @kind object;
  #L3e20ba.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e20c0.  v0:= "source3 is null" @kind object;
  #L3e20c4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e20ca.  v0:= "source4 is null" @kind object;
  #L3e20ce.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e20d4.  v0:= 4I;
  #L3e20d6.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e20da.  v1:= 0I;
  #L3e20dc.  v0[v1]:= v2 @kind object;
  #L3e20e0.  v2:= 1I;
  #L3e20e2.  v0[v2]:= v3 @kind object;
  #L3e20e6.  v2:= 2I;
  #L3e20e8.  v0[v2]:= v4 @kind object;
  #L3e20ec.  v2:= 3I;
  #L3e20ee.  v0[v2]:= v5 @kind object;
  #L3e20f2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L3e20f8.  v2:= temp @kind object;
  #L3e20fa.  call temp:= `mergeDelayError`(v2) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e2100.  v2:= temp @kind object;
  #L3e2102.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`java.lang.Iterable` v0 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e2114.  call temp:= `fromIterable`(v0) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L3e211a.  v0:= temp @kind object;
  #L3e211c.  call temp:= `mergeDelayError`(v0) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L3e2122.  v0:= temp @kind object;
  #L3e2124.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v7 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e2138.  v0:= "sources is null" @kind object;
  #L3e213c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2142.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher`;
  #L3e2146.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L3e214c.  v3:= temp @kind object;
  #L3e214e.  call temp:= `bufferSize`() @signature `Lio/reactivex/Flowable;.bufferSize:()I` @kind static;
  #L3e2154.  v6:= temp;
  #L3e2156.  v4:= 1I;
  #L3e2158.  v5:= 2147483647I;
  #L3e215e.  v1:= v0 @kind object;
  #L3e2160.  v2:= v7 @kind object;
  #L3e2162.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3e2168.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e216e.  v7:= temp @kind object;
  #L3e2170.  return v7 @kind object;
}
procedure `io.reactivex.Single` `never`() @signature `Lio/reactivex/Single;.never:()Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2bf8.  v0:= `@@io.reactivex.internal.operators.single.SingleNever.INSTANCE` @type ^`io.reactivex.Single` @kind object;
  #L3e2bfc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2c02.  v0:= temp @kind object;
  #L3e2c04.  return v0 @kind object;
}
procedure `io.reactivex.Single` `timeout0`(`io.reactivex.Single` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `io.reactivex.SingleSource` v13 @kind object) @signature `Lio/reactivex/Single;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e2f98.  v0:= "unit is null" @kind object;
  #L3e2f9c.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2fa2.  v0:= "scheduler is null" @kind object;
  #L3e2fa6.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2fac.  v0:= new `io.reactivex.internal.operators.single.SingleTimeout`;
  #L3e2fb0.  v1:= v0 @kind object;
  #L3e2fb2.  v2:= v8 @kind object;
  #L3e2fb4.  v3:= v9 @kind wide;
  #L3e2fb6.  v5:= v11 @kind object;
  #L3e2fb8.  v6:= v12 @kind object;
  #L3e2fba.  v7:= v13 @kind object;
  #L3e2fbc.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/single/SingleTimeout;.<init>:(Lio/reactivex/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e2fc2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2fc8.  v9:= temp @kind object;
  #L3e2fca.  return v9 @kind object;
}
procedure `io.reactivex.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Single;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2fdc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e2fe2.  v0:= temp @kind object;
  #L3e2fe4.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @kind static;
  #L3e2fea.  v1:= temp @kind object;
  #L3e2fec.  return v1 @kind object;
}
procedure `io.reactivex.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3000.  v0:= "unit is null" @kind object;
  #L3e3004.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e300a.  v0:= "scheduler is null" @kind object;
  #L3e300e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3014.  v0:= new `io.reactivex.internal.operators.single.SingleTimer`;
  #L3e3018.  call `<init>`(v0, v1, v3, v4) @signature `Lio/reactivex/internal/operators/single/SingleTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3e301e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e3024.  v1:= temp @kind object;
  #L3e3026.  return v1 @kind object;
}
procedure `io.reactivex.Single` `toSingle`(`io.reactivex.Flowable` v2 @kind object) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3e3038.  v0:= new `io.reactivex.internal.operators.flowable.FlowableSingleSingle`;
  #L3e303c.  v1:= 0I;
  #L3e303e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableSingleSingle;.<init>:(Lio/reactivex/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L3e3044.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e304a.  v2:= temp @kind object;
  #L3e304c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `unsafeCreate`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.unsafeCreate:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3060.  v0:= "onSubscribe is null" @kind object;
  #L3e3064.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e306a.  v0:= instanceof @variable v1 @type ^`io.reactivex.Single` @kind boolean;
  #L3e306e.  if v0 != 0 then goto L3e3086;
  #L3e3072.  v0:= new `io.reactivex.internal.operators.single.SingleFromUnsafeSource`;
  #L3e3076.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e307c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e3082.  v1:= temp @kind object;
  #L3e3084.  return v1 @kind object;
  #L3e3086.  v1:= new `java.lang.IllegalArgumentException`;
  #L3e308a.  v0:= "unsafeCreate(Single) should be upgraded" @kind object;
  #L3e308e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e3094.  throw v1;
}
procedure `io.reactivex.Single` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Single;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e30d8.  v0:= 1I;
  #L3e30da.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/Single;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Single;` @kind static;
  #L3e30e0.  v1:= temp @kind object;
  #L3e30e2.  return v1 @kind object;
}
procedure `io.reactivex.Single` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Single;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e30f4.  v0:= "resourceSupplier is null" @kind object;
  #L3e30f8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e30fe.  v0:= "singleFunction is null" @kind object;
  #L3e3102.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3108.  v0:= "disposer is null" @kind object;
  #L3e310c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3112.  v0:= new `io.reactivex.internal.operators.single.SingleUsing`;
  #L3e3116.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/single/SingleUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L3e311c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e3122.  v1:= temp @kind object;
  #L3e3124.  return v1 @kind object;
}
procedure `io.reactivex.Single` `wrap`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.wrap:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3138.  v0:= "source is null" @kind object;
  #L3e313c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3142.  v0:= instanceof @variable v1 @type ^`io.reactivex.Single` @kind boolean;
  #L3e3146.  if v0 == 0 then goto L3e3158;
  #L3e314a.  v1:= (`io.reactivex.Single`) v1 @kind object;
  #L3e314e.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e3154.  v1:= temp @kind object;
  #L3e3156.  return v1 @kind object;
  #L3e3158.  v0:= new `io.reactivex.internal.operators.single.SingleFromUnsafeSource`;
  #L3e315c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e3162.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e3168.  v1:= temp @kind object;
  #L3e316a.  return v1 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.SingleSource` v8 @kind object, `io.reactivex.SingleSource` v9 @kind object, `io.reactivex.SingleSource` v10 @kind object, `io.reactivex.functions.Function9` v11 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function9;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e317c.  v0:= "source1 is null" @kind object;
  #L3e3180.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3186.  v0:= "source2 is null" @kind object;
  #L3e318a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3190.  v0:= "source3 is null" @kind object;
  #L3e3194.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e319a.  v0:= "source4 is null" @kind object;
  #L3e319e.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e31a4.  v0:= "source5 is null" @kind object;
  #L3e31a8.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e31ae.  v0:= "source6 is null" @kind object;
  #L3e31b2.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e31b8.  v0:= "source7 is null" @kind object;
  #L3e31bc.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e31c2.  v0:= "source8 is null" @kind object;
  #L3e31c6.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e31cc.  v0:= "source9 is null" @kind object;
  #L3e31d0.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e31d6.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function9;)Lio/reactivex/functions/Function;` @kind static;
  #L3e31dc.  v11:= temp @kind object;
  #L3e31de.  v0:= 9I;
  #L3e31e2.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e31e6.  v1:= 0I;
  #L3e31e8.  v0[v1]:= v2 @kind object;
  #L3e31ec.  v2:= 1I;
  #L3e31ee.  v0[v2]:= v3 @kind object;
  #L3e31f2.  v2:= 2I;
  #L3e31f4.  v0[v2]:= v4 @kind object;
  #L3e31f8.  v2:= 3I;
  #L3e31fa.  v0[v2]:= v5 @kind object;
  #L3e31fe.  v2:= 4I;
  #L3e3200.  v0[v2]:= v6 @kind object;
  #L3e3204.  v2:= 5I;
  #L3e3206.  v0[v2]:= v7 @kind object;
  #L3e320a.  v2:= 6I;
  #L3e320c.  v0[v2]:= v8 @kind object;
  #L3e3210.  v2:= 7I;
  #L3e3212.  v0[v2]:= v9 @kind object;
  #L3e3216.  v2:= 8I;
  #L3e321a.  v0[v2]:= v10 @kind object;
  #L3e321e.  call temp:= `zipArray`(v11, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e3224.  v2:= temp @kind object;
  #L3e3226.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.SingleSource` v8 @kind object, `io.reactivex.SingleSource` v9 @kind object, `io.reactivex.functions.Function8` v10 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function8;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e3238.  v0:= "source1 is null" @kind object;
  #L3e323c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3242.  v0:= "source2 is null" @kind object;
  #L3e3246.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e324c.  v0:= "source3 is null" @kind object;
  #L3e3250.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3256.  v0:= "source4 is null" @kind object;
  #L3e325a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3260.  v0:= "source5 is null" @kind object;
  #L3e3264.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e326a.  v0:= "source6 is null" @kind object;
  #L3e326e.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3274.  v0:= "source7 is null" @kind object;
  #L3e3278.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e327e.  v0:= "source8 is null" @kind object;
  #L3e3282.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3288.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function8;)Lio/reactivex/functions/Function;` @kind static;
  #L3e328e.  v10:= temp @kind object;
  #L3e3290.  v0:= 8I;
  #L3e3294.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e3298.  v1:= 0I;
  #L3e329a.  v0[v1]:= v2 @kind object;
  #L3e329e.  v2:= 1I;
  #L3e32a0.  v0[v2]:= v3 @kind object;
  #L3e32a4.  v2:= 2I;
  #L3e32a6.  v0[v2]:= v4 @kind object;
  #L3e32aa.  v2:= 3I;
  #L3e32ac.  v0[v2]:= v5 @kind object;
  #L3e32b0.  v2:= 4I;
  #L3e32b2.  v0[v2]:= v6 @kind object;
  #L3e32b6.  v2:= 5I;
  #L3e32b8.  v0[v2]:= v7 @kind object;
  #L3e32bc.  v2:= 6I;
  #L3e32be.  v0[v2]:= v8 @kind object;
  #L3e32c2.  v2:= 7I;
  #L3e32c4.  v0[v2]:= v9 @kind object;
  #L3e32c8.  call temp:= `zipArray`(v10, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e32ce.  v2:= temp @kind object;
  #L3e32d0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.SingleSource` v8 @kind object, `io.reactivex.functions.Function7` v9 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function7;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e32e4.  v0:= "source1 is null" @kind object;
  #L3e32e8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e32ee.  v0:= "source2 is null" @kind object;
  #L3e32f2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e32f8.  v0:= "source3 is null" @kind object;
  #L3e32fc.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3302.  v0:= "source4 is null" @kind object;
  #L3e3306.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e330c.  v0:= "source5 is null" @kind object;
  #L3e3310.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3316.  v0:= "source6 is null" @kind object;
  #L3e331a.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3320.  v0:= "source7 is null" @kind object;
  #L3e3324.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e332a.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function7;)Lio/reactivex/functions/Function;` @kind static;
  #L3e3330.  v9:= temp @kind object;
  #L3e3332.  v0:= 7I;
  #L3e3334.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e3338.  v1:= 0I;
  #L3e333a.  v0[v1]:= v2 @kind object;
  #L3e333e.  v2:= 1I;
  #L3e3340.  v0[v2]:= v3 @kind object;
  #L3e3344.  v2:= 2I;
  #L3e3346.  v0[v2]:= v4 @kind object;
  #L3e334a.  v2:= 3I;
  #L3e334c.  v0[v2]:= v5 @kind object;
  #L3e3350.  v2:= 4I;
  #L3e3352.  v0[v2]:= v6 @kind object;
  #L3e3356.  v2:= 5I;
  #L3e3358.  v0[v2]:= v7 @kind object;
  #L3e335c.  v2:= 6I;
  #L3e335e.  v0[v2]:= v8 @kind object;
  #L3e3362.  call temp:= `zipArray`(v9, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e3368.  v2:= temp @kind object;
  #L3e336a.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.functions.Function6` v8 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function6;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e337c.  v0:= "source1 is null" @kind object;
  #L3e3380.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3386.  v0:= "source2 is null" @kind object;
  #L3e338a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3390.  v0:= "source3 is null" @kind object;
  #L3e3394.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e339a.  v0:= "source4 is null" @kind object;
  #L3e339e.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e33a4.  v0:= "source5 is null" @kind object;
  #L3e33a8.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e33ae.  v0:= "source6 is null" @kind object;
  #L3e33b2.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e33b8.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function6;)Lio/reactivex/functions/Function;` @kind static;
  #L3e33be.  v8:= temp @kind object;
  #L3e33c0.  v0:= 6I;
  #L3e33c2.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e33c6.  v1:= 0I;
  #L3e33c8.  v0[v1]:= v2 @kind object;
  #L3e33cc.  v2:= 1I;
  #L3e33ce.  v0[v2]:= v3 @kind object;
  #L3e33d2.  v2:= 2I;
  #L3e33d4.  v0[v2]:= v4 @kind object;
  #L3e33d8.  v2:= 3I;
  #L3e33da.  v0[v2]:= v5 @kind object;
  #L3e33de.  v2:= 4I;
  #L3e33e0.  v0[v2]:= v6 @kind object;
  #L3e33e4.  v2:= 5I;
  #L3e33e6.  v0[v2]:= v7 @kind object;
  #L3e33ea.  call temp:= `zipArray`(v8, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e33f0.  v2:= temp @kind object;
  #L3e33f2.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.functions.Function5` v7 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e3404.  v0:= "source1 is null" @kind object;
  #L3e3408.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e340e.  v0:= "source2 is null" @kind object;
  #L3e3412.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3418.  v0:= "source3 is null" @kind object;
  #L3e341c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3422.  v0:= "source4 is null" @kind object;
  #L3e3426.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e342c.  v0:= "source5 is null" @kind object;
  #L3e3430.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3436.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L3e343c.  v7:= temp @kind object;
  #L3e343e.  v0:= 5I;
  #L3e3440.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e3444.  v1:= 0I;
  #L3e3446.  v0[v1]:= v2 @kind object;
  #L3e344a.  v2:= 1I;
  #L3e344c.  v0[v2]:= v3 @kind object;
  #L3e3450.  v2:= 2I;
  #L3e3452.  v0[v2]:= v4 @kind object;
  #L3e3456.  v2:= 3I;
  #L3e3458.  v0[v2]:= v5 @kind object;
  #L3e345c.  v2:= 4I;
  #L3e345e.  v0[v2]:= v6 @kind object;
  #L3e3462.  call temp:= `zipArray`(v7, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e3468.  v2:= temp @kind object;
  #L3e346a.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.functions.Function4` v6 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e347c.  v0:= "source1 is null" @kind object;
  #L3e3480.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3486.  v0:= "source2 is null" @kind object;
  #L3e348a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3490.  v0:= "source3 is null" @kind object;
  #L3e3494.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e349a.  v0:= "source4 is null" @kind object;
  #L3e349e.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e34a4.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L3e34aa.  v6:= temp @kind object;
  #L3e34ac.  v0:= 4I;
  #L3e34ae.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e34b2.  v1:= 0I;
  #L3e34b4.  v0[v1]:= v2 @kind object;
  #L3e34b8.  v2:= 1I;
  #L3e34ba.  v0[v2]:= v3 @kind object;
  #L3e34be.  v2:= 2I;
  #L3e34c0.  v0[v2]:= v4 @kind object;
  #L3e34c4.  v2:= 3I;
  #L3e34c6.  v0[v2]:= v5 @kind object;
  #L3e34ca.  call temp:= `zipArray`(v6, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e34d0.  v2:= temp @kind object;
  #L3e34d2.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.functions.Function3` v5 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e34e4.  v0:= "source1 is null" @kind object;
  #L3e34e8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e34ee.  v0:= "source2 is null" @kind object;
  #L3e34f2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e34f8.  v0:= "source3 is null" @kind object;
  #L3e34fc.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3502.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L3e3508.  v5:= temp @kind object;
  #L3e350a.  v0:= 3I;
  #L3e350c.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e3510.  v1:= 0I;
  #L3e3512.  v0[v1]:= v2 @kind object;
  #L3e3516.  v2:= 1I;
  #L3e3518.  v0[v2]:= v3 @kind object;
  #L3e351c.  v2:= 2I;
  #L3e351e.  v0[v2]:= v4 @kind object;
  #L3e3522.  call temp:= `zipArray`(v5, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e3528.  v2:= temp @kind object;
  #L3e352a.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e353c.  v0:= "source1 is null" @kind object;
  #L3e3540.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3546.  v0:= "source2 is null" @kind object;
  #L3e354a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3550.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3e3556.  v4:= temp @kind object;
  #L3e3558.  v0:= 2I;
  #L3e355a.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e355e.  v1:= 0I;
  #L3e3560.  v0[v1]:= v2 @kind object;
  #L3e3564.  v2:= 1I;
  #L3e3566.  v0[v2]:= v3 @kind object;
  #L3e356a.  call temp:= `zipArray`(v4, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e3570.  v2:= temp @kind object;
  #L3e3572.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.zip:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3584.  v0:= "zipper is null" @kind object;
  #L3e3588.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e358e.  v0:= "sources is null" @kind object;
  #L3e3592.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3598.  v0:= new `io.reactivex.internal.operators.single.SingleZipIterable`;
  #L3e359c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleZipIterable;.<init>:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e35a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e35a8.  v1:= temp @kind object;
  #L3e35aa.  return v1 @kind object;
}
procedure `io.reactivex.Single` `zipArray`(`io.reactivex.functions.Function` v1 @kind object, `io.reactivex.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e35bc.  v0:= "zipper is null" @kind object;
  #L3e35c0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e35c6.  v0:= "sources is null" @kind object;
  #L3e35ca.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e35d0.  v0:= length @variable v2;
  #L3e35d2.  if v0 != 0 then goto L3e35ea;
  #L3e35d6.  v1:= new `java.util.NoSuchElementException`;
  #L3e35da.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3e35e0.  call temp:= `error`(v1) @signature `Lio/reactivex/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/Single;` @kind static;
  #L3e35e6.  v1:= temp @kind object;
  #L3e35e8.  return v1 @kind object;
  #L3e35ea.  v0:= new `io.reactivex.internal.operators.single.SingleZipArray`;
  #L3e35ee.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleZipArray;.<init>:([Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e35f4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e35fa.  v1:= temp @kind object;
  #L3e35fc.  return v1 @kind object;
}
procedure `io.reactivex.Single` `ambWith`(`io.reactivex.Single` v2 @kind this, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.ambWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e2468.  v0:= "other is null" @kind object;
  #L3e246c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2472.  v0:= 2I;
  #L3e2474.  v0:= new `io.reactivex.SingleSource`[v0];
  #L3e2478.  v1:= 0I;
  #L3e247a.  v0[v1]:= v2 @kind object;
  #L3e247e.  v1:= 1I;
  #L3e2480.  v0[v1]:= v3 @kind object;
  #L3e2484.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/Single;.ambArray:([Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e248a.  v3:= temp @kind object;
  #L3e248c.  return v3 @kind object;
}
procedure `java.lang.Object` `as`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleConverter` v2 @kind object) @signature `Lio/reactivex/Single;.as:(Lio/reactivex/SingleConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e3740.  v0:= "converter is null" @kind object;
  #L3e3744.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e374a.  v2:= temp @kind object;
  #L3e374c.  v2:= (`io.reactivex.SingleConverter`) v2 @kind object;
  #L3e3750.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/SingleConverter;.apply:(Lio/reactivex/Single;)Ljava/lang/Object;` @kind interface;
  #L3e3756.  v2:= temp @kind object;
  #L3e3758.  return v2 @kind object;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.blockingGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e376c.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L3e3770.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L3e3776.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L3e377c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3e3782.  v0:= temp @kind object;
  #L3e3784.  return v0 @kind object;
}
procedure `io.reactivex.Single` `cache`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.cache:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e24a0.  v0:= new `io.reactivex.internal.operators.single.SingleCache`;
  #L3e24a4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleCache;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e24aa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e24b0.  v0:= temp @kind object;
  #L3e24b2.  return v0 @kind object;
}
procedure `io.reactivex.Single` `cast`(`io.reactivex.Single` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/Single;.cast:(Ljava/lang/Class;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e24c4.  v0:= "clazz is null" @kind object;
  #L3e24c8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e24ce.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/functions/Function;` @kind static;
  #L3e24d4.  v2:= temp @kind object;
  #L3e24d6.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3e24dc.  v2:= temp @kind object;
  #L3e24de.  return v2 @kind object;
}
procedure `io.reactivex.Single` `compose`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleTransformer` v2 @kind object) @signature `Lio/reactivex/Single;.compose:(Lio/reactivex/SingleTransformer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e24f0.  v0:= "transformer is null" @kind object;
  #L3e24f4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e24fa.  v2:= temp @kind object;
  #L3e24fc.  v2:= (`io.reactivex.SingleTransformer`) v2 @kind object;
  #L3e2500.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/SingleTransformer;.apply:(Lio/reactivex/Single;)Lio/reactivex/SingleSource;` @kind interface;
  #L3e2506.  v2:= temp @kind object;
  #L3e2508.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Single;.wrap:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L3e250e.  v2:= temp @kind object;
  #L3e2510.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concatWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.concatWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e1e18.  call temp:= `concat`(v0, v1) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @kind static;
  #L3e1e1e.  v1:= temp @kind object;
  #L3e1e20.  return v1 @kind object;
}
procedure `io.reactivex.Single` `contains`(`io.reactivex.Single` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Single;.contains:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2524.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L3e252a.  v0:= temp @kind object;
  #L3e252c.  call temp:= `contains`(v1, v2, v0) @signature `Lio/reactivex/Single;.contains:(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @kind virtual;
  #L3e2532.  v2:= temp @kind object;
  #L3e2534.  return v2 @kind object;
}
procedure `io.reactivex.Single` `contains`(`io.reactivex.Single` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/Single;.contains:(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2548.  v0:= "value is null" @kind object;
  #L3e254c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2552.  v0:= "comparer is null" @kind object;
  #L3e2556.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e255c.  v0:= new `io.reactivex.internal.operators.single.SingleContains`;
  #L3e2560.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/single/SingleContains;.<init>:(Lio/reactivex/SingleSource;Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L3e2566.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e256c.  v2:= temp @kind object;
  #L3e256e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e25e0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e25e6.  v4:= temp @kind object;
  #L3e25e8.  v5:= 0I;
  #L3e25ea.  v0:= v6 @kind object;
  #L3e25ec.  v1:= v7 @kind wide;
  #L3e25ee.  v3:= v9 @kind object;
  #L3e25f0.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Single;` @kind virtual;
  #L3e25f6.  v7:= temp @kind object;
  #L3e25f8.  return v7 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e2638.  v5:= 0I;
  #L3e263a.  v0:= v6 @kind object;
  #L3e263c.  v1:= v7 @kind wide;
  #L3e263e.  v3:= v9 @kind object;
  #L3e2640.  v4:= v10 @kind object;
  #L3e2642.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Single;` @kind virtual;
  #L3e2648.  v7:= temp @kind object;
  #L3e264a.  return v7 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e265c.  v0:= "unit is null" @kind object;
  #L3e2660.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2666.  v0:= "scheduler is null" @kind object;
  #L3e266a.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2670.  v0:= new `io.reactivex.internal.operators.single.SingleDelay`;
  #L3e2674.  v1:= v0 @kind object;
  #L3e2676.  v2:= v8 @kind object;
  #L3e2678.  v3:= v9 @kind wide;
  #L3e267a.  v5:= v11 @kind object;
  #L3e267c.  v6:= v12 @kind object;
  #L3e267e.  v7:= v13;
  #L3e2680.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/single/SingleDelay;.<init>:(Lio/reactivex/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3e2686.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e268c.  v9:= temp @kind object;
  #L3e268e.  return v9 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e260c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e2612.  v4:= temp @kind object;
  #L3e2614.  v0:= v6 @kind object;
  #L3e2616.  v1:= v7 @kind wide;
  #L3e2618.  v3:= v9 @kind object;
  #L3e261a.  v5:= v10;
  #L3e261c.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Single;` @kind virtual;
  #L3e2622.  v7:= temp @kind object;
  #L3e2624.  return v7 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2730.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e2736.  v0:= temp @kind object;
  #L3e2738.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @kind virtual;
  #L3e273e.  v2:= temp @kind object;
  #L3e2740.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e2754.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3e275a.  v1:= temp @kind object;
  #L3e275c.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @kind virtual;
  #L3e2762.  v1:= temp @kind object;
  #L3e2764.  return v1 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/CompletableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e26a0.  v0:= "other is null" @kind object;
  #L3e26a4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e26aa.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithCompletable`;
  #L3e26ae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3e26b4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e26ba.  v2:= temp @kind object;
  #L3e26bc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e26d0.  v0:= "other is null" @kind object;
  #L3e26d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e26da.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithObservable`;
  #L3e26de.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithObservable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3e26e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e26ea.  v2:= temp @kind object;
  #L3e26ec.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2700.  v0:= "other is null" @kind object;
  #L3e2704.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e270a.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithSingle`;
  #L3e270e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithSingle;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e2714.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e271a.  v2:= temp @kind object;
  #L3e271c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2778.  v0:= "other is null" @kind object;
  #L3e277c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2782.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithPublisher`;
  #L3e2786.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithPublisher;.<init>:(Lio/reactivex/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3e278c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2792.  v2:= temp @kind object;
  #L3e2794.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doAfterSuccess`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doAfterSuccess:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e27a8.  v0:= "doAfterSuccess is null" @kind object;
  #L3e27ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e27b2.  v0:= new `io.reactivex.internal.operators.single.SingleDoAfterSuccess`;
  #L3e27b6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3e27bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e27c2.  v2:= temp @kind object;
  #L3e27c4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doAfterTerminate`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doAfterTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e27d8.  v0:= "onAfterTerminate is null" @kind object;
  #L3e27dc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e27e2.  v0:= new `io.reactivex.internal.operators.single.SingleDoAfterTerminate`;
  #L3e27e6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3e27ec.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e27f2.  v2:= temp @kind object;
  #L3e27f4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doFinally`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doFinally:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2808.  v0:= "onFinally is null" @kind object;
  #L3e280c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2812.  v0:= new `io.reactivex.internal.operators.single.SingleDoFinally`;
  #L3e2816.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3e281c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2822.  v2:= temp @kind object;
  #L3e2824.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnDispose`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doOnDispose:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2838.  v0:= "onDispose is null" @kind object;
  #L3e283c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2842.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnDispose`;
  #L3e2846.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnDispose;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3e284c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2852.  v2:= temp @kind object;
  #L3e2854.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnError`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2868.  v0:= "onError is null" @kind object;
  #L3e286c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2872.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnError`;
  #L3e2876.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnError;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3e287c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2882.  v2:= temp @kind object;
  #L3e2884.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnEvent`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnEvent:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2898.  v0:= "onEvent is null" @kind object;
  #L3e289c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e28a2.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnEvent`;
  #L3e28a6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L3e28ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e28b2.  v2:= temp @kind object;
  #L3e28b4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnSubscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnSubscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e28c8.  v0:= "onSubscribe is null" @kind object;
  #L3e28cc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e28d2.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnSubscribe`;
  #L3e28d6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3e28dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e28e2.  v2:= temp @kind object;
  #L3e28e4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnSuccess`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnSuccess:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e28f8.  v0:= "onSuccess is null" @kind object;
  #L3e28fc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2902.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnSuccess`;
  #L3e2906.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSuccess;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3e290c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2912.  v2:= temp @kind object;
  #L3e2914.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `filter`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Single;.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e226c.  v0:= "predicate is null" @kind object;
  #L3e2270.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2276.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFilterSingle`;
  #L3e227a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3e2280.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3e2286.  v2:= temp @kind object;
  #L3e2288.  return v2 @kind object;
}
procedure `io.reactivex.Single` `flatMap`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e29bc.  v0:= "mapper is null" @kind object;
  #L3e29c0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e29c6.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMap`;
  #L3e29ca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e29d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e29d6.  v2:= temp @kind object;
  #L3e29d8.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `flatMapCompletable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1b54.  v0:= "mapper is null" @kind object;
  #L3e1b58.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1b5e.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapCompletable`;
  #L3e1b62.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapCompletable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e1b68.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3e1b6e.  v2:= temp @kind object;
  #L3e1b70.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `flatMapMaybe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e229c.  v0:= "mapper is null" @kind object;
  #L3e22a0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e22a6.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapMaybe`;
  #L3e22aa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapMaybe;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e22b0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3e22b6.  v2:= temp @kind object;
  #L3e22b8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapObservable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapObservable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2344.  v0:= "mapper is null" @kind object;
  #L3e2348.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e234e.  v0:= new `io.reactivex.internal.operators.mixed.SingleFlatMapObservable`;
  #L3e2352.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/mixed/SingleFlatMapObservable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e2358.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e235e.  v2:= temp @kind object;
  #L3e2360.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `flatMapPublisher`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapPublisher:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1e34.  v0:= "mapper is null" @kind object;
  #L3e1e38.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1e3e.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapPublisher`;
  #L3e1e42.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e1e48.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e1e4e.  v2:= temp @kind object;
  #L3e1e50.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `flattenAsFlowable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flattenAsFlowable:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1e64.  v0:= "mapper is null" @kind object;
  #L3e1e68.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1e6e.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable`;
  #L3e1e72.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapIterableFlowable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e1e78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e1e7e.  v2:= temp @kind object;
  #L3e1e80.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flattenAsObservable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flattenAsObservable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2374.  v0:= "mapper is null" @kind object;
  #L3e2378.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e237e.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapIterableObservable`;
  #L3e2382.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapIterableObservable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e2388.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e238e.  v2:= temp @kind object;
  #L3e2390.  return v2 @kind object;
}
procedure `io.reactivex.Single` `hide`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.hide:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2b0c.  v0:= new `io.reactivex.internal.operators.single.SingleHide`;
  #L3e2b10.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleHide;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e2b16.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2b1c.  v0:= temp @kind object;
  #L3e2b1e.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `ignoreElement`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.ignoreElement:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1b84.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromSingle`;
  #L3e1b88.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e1b8e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3e1b94.  v0:= temp @kind object;
  #L3e1b96.  return v0 @kind object;
}
procedure `io.reactivex.Single` `lift`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleOperator` v2 @kind object) @signature `Lio/reactivex/Single;.lift:(Lio/reactivex/SingleOperator;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2b60.  v0:= "onLift is null" @kind object;
  #L3e2b64.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2b6a.  v0:= new `io.reactivex.internal.operators.single.SingleLift`;
  #L3e2b6e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleLift;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleOperator;)V` @kind direct;
  #L3e2b74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2b7a.  v2:= temp @kind object;
  #L3e2b7c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `map`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2b90.  v0:= "mapper is null" @kind object;
  #L3e2b94.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2b9a.  v0:= new `io.reactivex.internal.operators.single.SingleMap`;
  #L3e2b9e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleMap;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e2ba4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2baa.  v2:= temp @kind object;
  #L3e2bac.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.mergeWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e2184.  call temp:= `merge`(v0, v1) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @kind static;
  #L3e218a.  v1:= temp @kind object;
  #L3e218c.  return v1 @kind object;
}
procedure `io.reactivex.Single` `observeOn`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Single;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2c18.  v0:= "scheduler is null" @kind object;
  #L3e2c1c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2c22.  v0:= new `io.reactivex.internal.operators.single.SingleObserveOn`;
  #L3e2c26.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleObserveOn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3e2c2c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2c32.  v2:= temp @kind object;
  #L3e2c34.  return v2 @kind object;
}
procedure `io.reactivex.Single` `onErrorResumeNext`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Single` v2 @kind object) @signature `Lio/reactivex/Single;.onErrorResumeNext:(Lio/reactivex/Single;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2c48.  v0:= "resumeSingleInCaseOfError is null" @kind object;
  #L3e2c4c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2c52.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L3e2c58.  v2:= temp @kind object;
  #L3e2c5a.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/Single;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3e2c60.  v2:= temp @kind object;
  #L3e2c62.  return v2 @kind object;
}
procedure `io.reactivex.Single` `onErrorResumeNext`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2c74.  v0:= "resumeFunctionInCaseOfError is null" @kind object;
  #L3e2c78.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2c7e.  v0:= new `io.reactivex.internal.operators.single.SingleResumeNext`;
  #L3e2c82.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e2c88.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2c8e.  v2:= temp @kind object;
  #L3e2c90.  return v2 @kind object;
}
procedure `io.reactivex.Single` `onErrorReturn`(`io.reactivex.Single` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Single;.onErrorReturn:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e2ca4.  v0:= "resumeFunction is null" @kind object;
  #L3e2ca8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2cae.  v0:= new `io.reactivex.internal.operators.single.SingleOnErrorReturn`;
  #L3e2cb2.  v1:= 0I;
  #L3e2cb4.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L3e2cba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2cc0.  v3:= temp @kind object;
  #L3e2cc2.  return v3 @kind object;
}
procedure `io.reactivex.Single` `onErrorReturnItem`(`io.reactivex.Single` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Single;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e2cd4.  v0:= "value is null" @kind object;
  #L3e2cd8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2cde.  v0:= new `io.reactivex.internal.operators.single.SingleOnErrorReturn`;
  #L3e2ce2.  v1:= 0I;
  #L3e2ce4.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L3e2cea.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2cf0.  v3:= temp @kind object;
  #L3e2cf2.  return v3 @kind object;
}
procedure `io.reactivex.Single` `onTerminateDetach`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.onTerminateDetach:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2d04.  v0:= new `io.reactivex.internal.operators.single.SingleDetach`;
  #L3e2d08.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleDetach;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e2d0e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2d14.  v0:= temp @kind object;
  #L3e2d16.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `repeat`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.repeat:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e21a0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e21a6.  v0:= temp @kind object;
  #L3e21a8.  call temp:= `repeat`(v0) @signature `Lio/reactivex/Flowable;.repeat:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e21ae.  v0:= temp @kind object;
  #L3e21b0.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `repeat`(`io.reactivex.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Single;.repeat:(J)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e21c4.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e21ca.  v0:= temp @kind object;
  #L3e21cc.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/Flowable;.repeat:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L3e21d2.  v2:= temp @kind object;
  #L3e21d4.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `repeatUntil`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/Single;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e21e8.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e21ee.  v0:= temp @kind object;
  #L3e21f0.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e21f6.  v2:= temp @kind object;
  #L3e21f8.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `repeatWhen`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e220c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e2212.  v0:= temp @kind object;
  #L3e2214.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e221a.  v2:= temp @kind object;
  #L3e221c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.retry:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2d28.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e2d2e.  v0:= temp @kind object;
  #L3e2d30.  call temp:= `retry`(v0) @signature `Lio/reactivex/Flowable;.retry:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e2d36.  v0:= temp @kind object;
  #L3e2d38.  call temp:= `toSingle`(v0) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2d3e.  v0:= temp @kind object;
  #L3e2d40.  return v0 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Single;.retry:(J)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2dac.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e2db2.  v0:= temp @kind object;
  #L3e2db4.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L3e2dba.  v2:= temp @kind object;
  #L3e2dbc.  call temp:= `toSingle`(v2) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2dc2.  v2:= temp @kind object;
  #L3e2dc4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `long` v2 , `io.reactivex.functions.Predicate` v4 @kind object) @signature `Lio/reactivex/Single;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2dd8.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e2dde.  v0:= temp @kind object;
  #L3e2de0.  call temp:= `retry`(v0, v2, v4) @signature `Lio/reactivex/Flowable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e2de6.  v2:= temp @kind object;
  #L3e2de8.  call temp:= `toSingle`(v2) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2dee.  v2:= temp @kind object;
  #L3e2df0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/Single;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2d54.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e2d5a.  v0:= temp @kind object;
  #L3e2d5c.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e2d62.  v2:= temp @kind object;
  #L3e2d64.  call temp:= `toSingle`(v2) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2d6a.  v2:= temp @kind object;
  #L3e2d6c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Single;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2d80.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e2d86.  v0:= temp @kind object;
  #L3e2d88.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e2d8e.  v2:= temp @kind object;
  #L3e2d90.  call temp:= `toSingle`(v2) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2d96.  v2:= temp @kind object;
  #L3e2d98.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retryWhen`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2e04.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L3e2e0a.  v0:= temp @kind object;
  #L3e2e0c.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e2e12.  v2:= temp @kind object;
  #L3e2e14.  call temp:= `toSingle`(v2) @signature `Lio/reactivex/Single;.toSingle:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L3e2e1a.  v2:= temp @kind object;
  #L3e2e1c.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v2 @kind this) @signature `Lio/reactivex/Single;.subscribe:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e3644.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3e364a.  v0:= temp @kind object;
  #L3e364c.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e3650.  call temp:= `subscribe`(v2, v0, v1) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e3656.  v0:= temp @kind object;
  #L3e3658.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e366c.  v0:= "onCallback is null" @kind object;
  #L3e3670.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e3676.  v0:= new `io.reactivex.internal.observers.BiConsumerSingleObserver`;
  #L3e367a.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.<init>:(Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L3e3680.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L3e3686.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e3698.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e369c.  call temp:= `subscribe`(v1, v2, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e36a2.  v2:= temp @kind object;
  #L3e36a4.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e36b8.  v0:= "onSuccess is null" @kind object;
  #L3e36bc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e36c2.  v0:= "onError is null" @kind object;
  #L3e36c6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e36cc.  v0:= new `io.reactivex.internal.observers.ConsumerSingleObserver`;
  #L3e36d0.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3e36d6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L3e36dc.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.Single` v2 @kind this, `io.reactivex.SingleObserver` v3 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e3820.  v0:= "subscriber is null" @kind object;
  #L3e3824.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e382a.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Single;Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @kind static;
  #L3e3830.  v3:= temp @kind object;
  #L3e3832.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null SingleObserver. Please check the handler provided to RxJavaPlugins.setOnSingleSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L3e3836.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e383c.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/Single;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L3e3842.  return @kind void;
  #L3e3844.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3846.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e384c.  v0:= new `java.lang.NullPointerException`;
  #L3e3850.  v1:= "subscribeActual failed" @kind object;
  #L3e3854.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e385a.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3e3860.  throw v0;
  #L3e3862.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L3e3864.  throw v3;
  catch `java.lang.NullPointerException` @[L3e383c..L3e3842] goto L3e3862;
  catch `java.lang.Throwable` @[L3e383c..L3e3842] goto L3e3844;
}
procedure `void` `subscribeActual`(`io.reactivex.SingleObserver` v0 @kind object) @signature `Lio/reactivex/Single;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.Single` `subscribeOn`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Single;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2e30.  v0:= "scheduler is null" @kind object;
  #L3e2e34.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2e3a.  v0:= new `io.reactivex.internal.operators.single.SingleSubscribeOn`;
  #L3e2e3e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleSubscribeOn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3e2e44.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2e4a.  v2:= temp @kind object;
  #L3e2e4c.  return v2 @kind object;
}
procedure `io.reactivex.SingleObserver` `subscribeWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object) @signature `Lio/reactivex/Single;.subscribeWith:(Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e362c.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L3e3632.  return v1 @kind object;
}
procedure `io.reactivex.Single` `takeUntil`(`io.reactivex.Single` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Single;.takeUntil:(Lio/reactivex/CompletableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2e60.  v0:= "other is null" @kind object;
  #L3e2e64.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2e6a.  v0:= new `io.reactivex.internal.operators.completable.CompletableToFlowable`;
  #L3e2e6e.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableToFlowable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3e2e74.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @kind virtual;
  #L3e2e7a.  v2:= temp @kind object;
  #L3e2e7c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `takeUntil`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.takeUntil:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2e90.  v0:= "other is null" @kind object;
  #L3e2e94.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2e9a.  v0:= new `io.reactivex.internal.operators.single.SingleToFlowable`;
  #L3e2e9e.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e2ea4.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @kind virtual;
  #L3e2eaa.  v2:= temp @kind object;
  #L3e2eac.  return v2 @kind object;
}
procedure `io.reactivex.Single` `takeUntil`(`io.reactivex.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2ec0.  v0:= "other is null" @kind object;
  #L3e2ec4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2eca.  v0:= new `io.reactivex.internal.operators.single.SingleTakeUntil`;
  #L3e2ece.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleTakeUntil;.<init>:(Lio/reactivex/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3e2ed4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e2eda.  v2:= temp @kind object;
  #L3e2edc.  return v2 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.test:()Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e36f0.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3e36f4.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3e36fa.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L3e3700.  return v0 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Single` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/Single;.test:(Z)Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e3714.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3e3718.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3e371e.  if v2 == 0 then goto L3e3728;
  #L3e3722.  call `cancel`(v0) @signature `Lio/reactivex/observers/TestObserver;.cancel:()V` @kind virtual;
  #L3e3728.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L3e372e.  return v0 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e2ef0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e2ef6.  v4:= temp @kind object;
  #L3e2ef8.  v5:= 0I;
  #L3e2efa.  v0:= v6 @kind object;
  #L3e2efc.  v1:= v7 @kind wide;
  #L3e2efe.  v3:= v9 @kind object;
  #L3e2f00.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L3e2f06.  v7:= temp @kind object;
  #L3e2f08.  return v7 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e2f1c.  v5:= 0I;
  #L3e2f1e.  v0:= v6 @kind object;
  #L3e2f20.  v1:= v7 @kind wide;
  #L3e2f22.  v3:= v9 @kind object;
  #L3e2f24.  v4:= v10 @kind object;
  #L3e2f26.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L3e2f2c.  v7:= temp @kind object;
  #L3e2f2e.  return v7 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2f40.  v0:= "other is null" @kind object;
  #L3e2f44.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2f4a.  call temp:= `timeout0`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Single;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L3e2f50.  v2:= temp @kind object;
  #L3e2f52.  return v2 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.SingleSource` v11 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e2f64.  v0:= "other is null" @kind object;
  #L3e2f68.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e2f6e.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e2f74.  v5:= temp @kind object;
  #L3e2f76.  v1:= v7 @kind object;
  #L3e2f78.  v2:= v8 @kind wide;
  #L3e2f7a.  v4:= v10 @kind object;
  #L3e2f7c.  v6:= v11 @kind object;
  #L3e2f7e.  call temp:= `timeout0`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Single;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L3e2f84.  v8:= temp @kind object;
  #L3e2f86.  return v8 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.to:(Lio/reactivex/functions/Function;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e3798.  v0:= "convert is null" @kind object;
  #L3e379c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e37a2.  v2:= temp @kind object;
  #L3e37a4.  v2:= (`io.reactivex.functions.Function`) v2 @kind object;
  #L3e37a8.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e37ae.  v2:= temp @kind object;
  #L3e37b0.  return v2 @kind object;
  #L3e37b2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e37b4.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e37ba.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3e37c0.  v2:= temp @kind object;
  #L3e37c2.  throw v2;
  catch `java.lang.Throwable` @[L3e3798..L3e37b0] goto L3e37b2;
}
procedure `io.reactivex.Completable` `toCompletable`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toCompletable:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1ba8.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromSingle`;
  #L3e1bac.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e1bb2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3e1bb8.  v0:= temp @kind object;
  #L3e1bba.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `toFlowable`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2230.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToFlowable` @kind boolean;
  #L3e2234.  if v0 == 0 then goto L3e2248;
  #L3e2238.  v0:= v1 @kind object;
  #L3e223a.  v0:= (`io.reactivex.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L3e223e.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/Flowable;` @kind interface;
  #L3e2244.  v0:= temp @kind object;
  #L3e2246.  return v0 @kind object;
  #L3e2248.  v0:= new `io.reactivex.internal.operators.single.SingleToFlowable`;
  #L3e224c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e2252.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e2258.  v0:= temp @kind object;
  #L3e225a.  return v0 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e37e0.  v0:= new `io.reactivex.internal.observers.FutureSingleObserver`;
  #L3e37e4.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/FutureSingleObserver;.<init>:()V` @kind direct;
  #L3e37ea.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/Single;.subscribeWith:(Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @kind virtual;
  #L3e37f0.  v0:= temp @kind object;
  #L3e37f2.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L3e37f6.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `toMaybe`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toMaybe:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e22cc.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToMaybe` @kind boolean;
  #L3e22d0.  if v0 == 0 then goto L3e22e4;
  #L3e22d4.  v0:= v1 @kind object;
  #L3e22d6.  v0:= (`io.reactivex.internal.fuseable.FuseToMaybe`) v0 @kind object;
  #L3e22da.  call temp:= `fuseToMaybe`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToMaybe;.fuseToMaybe:()Lio/reactivex/Maybe;` @kind interface;
  #L3e22e0.  v0:= temp @kind object;
  #L3e22e2.  return v0 @kind object;
  #L3e22e4.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFromSingle`;
  #L3e22e8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e22ee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3e22f4.  v0:= temp @kind object;
  #L3e22f6.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `toObservable`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e23a4.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToObservable` @kind boolean;
  #L3e23a8.  if v0 == 0 then goto L3e23bc;
  #L3e23ac.  v0:= v1 @kind object;
  #L3e23ae.  v0:= (`io.reactivex.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L3e23b2.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/Observable;` @kind interface;
  #L3e23b8.  v0:= temp @kind object;
  #L3e23ba.  return v0 @kind object;
  #L3e23bc.  v0:= new `io.reactivex.internal.operators.single.SingleToObservable`;
  #L3e23c0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L3e23c6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e23cc.  v0:= temp @kind object;
  #L3e23ce.  return v0 @kind object;
}
procedure `io.reactivex.Single` `unsubscribeOn`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Single;.unsubscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e30a8.  v0:= "scheduler is null" @kind object;
  #L3e30ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e30b2.  v0:= new `io.reactivex.internal.operators.single.SingleUnsubscribeOn`;
  #L3e30b6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleUnsubscribeOn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3e30bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e30c2.  v2:= temp @kind object;
  #L3e30c4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zipWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Single;.zipWith:(Lio/reactivex/SingleSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e3610.  call temp:= `zip`(v0, v1, v2) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @kind static;
  #L3e3616.  v1:= temp @kind object;
  #L3e3618.  return v1 @kind object;
}
