record `io.reactivex.BackpressureOverflowStrategy` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.reactivex.BackpressureOverflowStrategy`[] `@@io.reactivex.BackpressureOverflowStrategy.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.BackpressureOverflowStrategy` `@@io.reactivex.BackpressureOverflowStrategy.DROP_LATEST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureOverflowStrategy` `@@io.reactivex.BackpressureOverflowStrategy.DROP_OLDEST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureOverflowStrategy` `@@io.reactivex.BackpressureOverflowStrategy.ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/BackpressureOverflowStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d0310.  v0:= new `io.reactivex.BackpressureOverflowStrategy`;
  #L3d0314.  v1:= 0I;
  #L3d0316.  v2:= "ERROR" @kind object;
  #L3d031a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/BackpressureOverflowStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d0320.  `@@io.reactivex.BackpressureOverflowStrategy.ERROR` @type ^`io.reactivex.BackpressureOverflowStrategy` := v0 @kind object;
  #L3d0324.  v0:= new `io.reactivex.BackpressureOverflowStrategy`;
  #L3d0328.  v2:= 1I;
  #L3d032a.  v3:= "DROP_OLDEST" @kind object;
  #L3d032e.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/BackpressureOverflowStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d0334.  `@@io.reactivex.BackpressureOverflowStrategy.DROP_OLDEST` @type ^`io.reactivex.BackpressureOverflowStrategy` := v0 @kind object;
  #L3d0338.  v0:= new `io.reactivex.BackpressureOverflowStrategy`;
  #L3d033c.  v3:= 2I;
  #L3d033e.  v4:= "DROP_LATEST" @kind object;
  #L3d0342.  call `<init>`(v0, v4, v3) @signature `Lio/reactivex/BackpressureOverflowStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d0348.  `@@io.reactivex.BackpressureOverflowStrategy.DROP_LATEST` @type ^`io.reactivex.BackpressureOverflowStrategy` := v0 @kind object;
  #L3d034c.  v0:= 3I;
  #L3d034e.  v0:= new `io.reactivex.BackpressureOverflowStrategy`[v0];
  #L3d0352.  v4:= `@@io.reactivex.BackpressureOverflowStrategy.ERROR` @type ^`io.reactivex.BackpressureOverflowStrategy` @kind object;
  #L3d0356.  v0[v1]:= v4 @kind object;
  #L3d035a.  v1:= `@@io.reactivex.BackpressureOverflowStrategy.DROP_OLDEST` @type ^`io.reactivex.BackpressureOverflowStrategy` @kind object;
  #L3d035e.  v0[v2]:= v1 @kind object;
  #L3d0362.  v1:= `@@io.reactivex.BackpressureOverflowStrategy.DROP_LATEST` @type ^`io.reactivex.BackpressureOverflowStrategy` @kind object;
  #L3d0366.  v0[v3]:= v1 @kind object;
  #L3d036a.  `@@io.reactivex.BackpressureOverflowStrategy.$VALUES` @type ^`io.reactivex.BackpressureOverflowStrategy`[] := v0 @kind object;
  #L3d036e.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.BackpressureOverflowStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/BackpressureOverflowStrategy;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3d0380.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d0386.  return @kind void;
}
procedure `io.reactivex.BackpressureOverflowStrategy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/BackpressureOverflowStrategy;.valueOf:(Ljava/lang/String;)Lio/reactivex/BackpressureOverflowStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d02c8.  v0:= constclass @type ^`io.reactivex.BackpressureOverflowStrategy` @kind object;
  #L3d02cc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3d02d2.  v1:= temp @kind object;
  #L3d02d4.  v1:= (`io.reactivex.BackpressureOverflowStrategy`) v1 @kind object;
  #L3d02d8.  return v1 @kind object;
}
procedure `io.reactivex.BackpressureOverflowStrategy`[] `values`() @signature `Lio/reactivex/BackpressureOverflowStrategy;.values:()[Lio/reactivex/BackpressureOverflowStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d02ec.  v0:= `@@io.reactivex.BackpressureOverflowStrategy.$VALUES` @type ^`io.reactivex.BackpressureOverflowStrategy`[] @kind object;
  #L3d02f0.  call temp:= `clone`(v0) @signature `[Lio/reactivex/BackpressureOverflowStrategy;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3d02f6.  v0:= temp @kind object;
  #L3d02f8.  v0:= (`io.reactivex.BackpressureOverflowStrategy`[]) v0 @kind object;
  #L3d02fc.  return v0 @kind object;
}
