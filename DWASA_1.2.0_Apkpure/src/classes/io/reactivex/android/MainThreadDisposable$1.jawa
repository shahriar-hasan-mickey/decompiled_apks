record `io.reactivex.android.MainThreadDisposable$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `io.reactivex.android.MainThreadDisposable` `io.reactivex.android.MainThreadDisposable$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.android.MainThreadDisposable$1` v0 @kind this, `io.reactivex.android.MainThreadDisposable` v1 @kind object) @signature `Lio/reactivex/android/MainThreadDisposable$1;.<init>:(Lio/reactivex/android/MainThreadDisposable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e3888.  v0.`io.reactivex.android.MainThreadDisposable$1.this$0` @type ^`io.reactivex.android.MainThreadDisposable` := v1 @kind object;
  #L3e388c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e3892.  return @kind void;
}
procedure `void` `run`(`io.reactivex.android.MainThreadDisposable$1` v1 @kind this) @signature `Lio/reactivex/android/MainThreadDisposable$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e38a4.  v0:= v1.`io.reactivex.android.MainThreadDisposable$1.this$0` @type ^`io.reactivex.android.MainThreadDisposable` @kind object;
  #L3e38a8.  call `onDispose`(v0) @signature `Lio/reactivex/android/MainThreadDisposable;.onDispose:()V` @kind virtual;
  #L3e38ae.  return @kind void;
}
