record `io.reactivex.android.plugins.RxAndroidPlugins` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.reactivex.functions.Function` `@@io.reactivex.android.plugins.RxAndroidPlugins.onInitMainThreadHandler` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.android.plugins.RxAndroidPlugins.onMainThreadHandler` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<init>`(`io.reactivex.android.plugins.RxAndroidPlugins` v2 @kind this) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e3b40.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e3b46.  v0:= new `java.lang.AssertionError`;
  #L3e3b4a.  v1:= "No instances." @kind object;
  #L3e3b4e.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e3b54.  throw v0;
}
procedure `java.lang.Object` `apply`(`io.reactivex.functions.Function` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.apply:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L3e3b0c.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e3b12.  v0:= temp @kind object;
  #L3e3b14.  return v0 @kind object;
  #L3e3b16.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3b18.  call temp:= `propagate`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3e3b1e.  v0:= temp @kind object;
  #L3e3b20.  throw v0;
  catch `java.lang.Throwable` @[L3e3b0c..L3e3b14] goto L3e3b16;
}
procedure `io.reactivex.Scheduler` `applyRequireNonNull`(`io.reactivex.functions.Function` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.applyRequireNonNull:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag STATIC {
    temp;

  #L3e39e0.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.apply:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e39e6.  v0:= temp @kind object;
  #L3e39e8.  v0:= (`io.reactivex.Scheduler`) v0 @kind object;
  #L3e39ec.  if v0 == 0 then goto L3e39f2;
  #L3e39f0.  return v0 @kind object;
  #L3e39f2.  v0:= new `java.lang.NullPointerException`;
  #L3e39f6.  v1:= "Scheduler Callable returned null" @kind object;
  #L3e39fa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e3a00.  throw v0;
}
procedure `io.reactivex.Scheduler` `callRequireNonNull`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.callRequireNonNull:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag STATIC {
    temp;
    v0;

  #L3e3a14.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L3e3a1a.  v1:= temp @kind object;
  #L3e3a1c.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L3e3a20.  if v1 == 0 then goto L3e3a26;
  #L3e3a24.  return v1 @kind object;
  #L3e3a26.  v1:= new `java.lang.NullPointerException`;
  #L3e3a2a.  v0:= "Scheduler Callable returned null" @kind object;
  #L3e3a2e.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e3a34.  throw v1;
  #L3e3a36.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3a38.  call temp:= `propagate`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3e3a3e.  v1:= temp @kind object;
  #L3e3a40.  throw v1;
  catch `java.lang.Throwable` @[L3e3a14..L3e3a36] goto L3e3a36;
}
procedure `io.reactivex.functions.Function` `getInitMainThreadSchedulerHandler`() @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.getInitMainThreadSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3adc.  v0:= `@@io.reactivex.android.plugins.RxAndroidPlugins.onInitMainThreadHandler` @type ^`io.reactivex.functions.Function` @kind object;
  #L3e3ae0.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnMainThreadSchedulerHandler`() @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.getOnMainThreadSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3af4.  v0:= `@@io.reactivex.android.plugins.RxAndroidPlugins.onMainThreadHandler` @type ^`io.reactivex.functions.Function` @kind object;
  #L3e3af8.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `initMainThreadScheduler`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.initMainThreadScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3a60.  if v1 == 0 then goto L3e3a80;
  #L3e3a64.  v0:= `@@io.reactivex.android.plugins.RxAndroidPlugins.onInitMainThreadHandler` @type ^`io.reactivex.functions.Function` @kind object;
  #L3e3a68.  if v0 != 0 then goto L3e3a76;
  #L3e3a6c.  call temp:= `callRequireNonNull`(v1) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.callRequireNonNull:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L3e3a72.  v1:= temp @kind object;
  #L3e3a74.  return v1 @kind object;
  #L3e3a76.  call temp:= `applyRequireNonNull`(v0, v1) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.applyRequireNonNull:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L3e3a7c.  v1:= temp @kind object;
  #L3e3a7e.  return v1 @kind object;
  #L3e3a80.  v1:= new `java.lang.NullPointerException`;
  #L3e3a84.  v0:= "scheduler == null" @kind object;
  #L3e3a88.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e3a8e.  throw v1;
}
procedure `io.reactivex.Scheduler` `onMainThreadScheduler`(`io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.onMainThreadScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3aa0.  if v1 == 0 then goto L3e3abc;
  #L3e3aa4.  v0:= `@@io.reactivex.android.plugins.RxAndroidPlugins.onMainThreadHandler` @type ^`io.reactivex.functions.Function` @kind object;
  #L3e3aa8.  if v0 != 0 then goto L3e3aae;
  #L3e3aac.  return v1 @kind object;
  #L3e3aae.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.apply:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e3ab4.  v1:= temp @kind object;
  #L3e3ab6.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L3e3aba.  return v1 @kind object;
  #L3e3abc.  v1:= new `java.lang.NullPointerException`;
  #L3e3ac0.  v0:= "scheduler == null" @kind object;
  #L3e3ac4.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e3aca.  throw v1;
}
procedure `void` `reset`() @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.reset:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e3b68.  v0:= 0I;
  #L3e3b6a.  call `setInitMainThreadSchedulerHandler`(v0) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.setInitMainThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L3e3b70.  call `setMainThreadSchedulerHandler`(v0) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.setMainThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L3e3b76.  return @kind void;
}
procedure `void` `setInitMainThreadSchedulerHandler`(`io.reactivex.functions.Function` v0 @kind object) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.setInitMainThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e3b88.  `@@io.reactivex.android.plugins.RxAndroidPlugins.onInitMainThreadHandler` @type ^`io.reactivex.functions.Function` := v0 @kind object;
  #L3e3b8c.  return @kind void;
}
procedure `void` `setMainThreadSchedulerHandler`(`io.reactivex.functions.Function` v0 @kind object) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.setMainThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e3ba0.  `@@io.reactivex.android.plugins.RxAndroidPlugins.onMainThreadHandler` @type ^`io.reactivex.functions.Function` := v0 @kind object;
  #L3e3ba4.  return @kind void;
}
