record `io.reactivex.subjects.AsyncSubject$AsyncDisposable` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.DeferredScalarDisposable` @kind class {
  `io.reactivex.subjects.AsyncSubject` `io.reactivex.subjects.AsyncSubject$AsyncDisposable.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.subjects.AsyncSubject$AsyncDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.subjects.AsyncSubject$AsyncDisposable` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.subjects.AsyncSubject` v2 @kind object) @signature `Lio/reactivex/subjects/AsyncSubject$AsyncDisposable;.<init>:(Lio/reactivex/Observer;Lio/reactivex/subjects/AsyncSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L450698.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L45069e.  v0.`io.reactivex.subjects.AsyncSubject$AsyncDisposable.parent` @type ^`io.reactivex.subjects.AsyncSubject` := v2 @kind object;
  #L4506a2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.subjects.AsyncSubject$AsyncDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/AsyncSubject$AsyncDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4506b4.  call temp:= `tryDispose`(v1) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.tryDispose:()Z` @kind super;
  #L4506ba.  v0:= temp;
  #L4506bc.  if v0 == 0 then goto L4506ca;
  #L4506c0.  v0:= v1.`io.reactivex.subjects.AsyncSubject$AsyncDisposable.parent` @type ^`io.reactivex.subjects.AsyncSubject` @kind object;
  #L4506c4.  call `remove`(v0, v1) @signature `Lio/reactivex/subjects/AsyncSubject;.remove:(Lio/reactivex/subjects/AsyncSubject$AsyncDisposable;)V` @kind virtual;
  #L4506ca.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.subjects.AsyncSubject$AsyncDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/AsyncSubject$AsyncDisposable;.onComplete:()V` @AccessFlag  {
    temp;
    v0;

  #L4506dc.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/subjects/AsyncSubject$AsyncDisposable;.isDisposed:()Z` @kind virtual;
  #L4506e2.  v0:= temp;
  #L4506e4.  if v0 != 0 then goto L4506f2;
  #L4506e8.  v0:= v1.`io.reactivex.subjects.AsyncSubject$AsyncDisposable.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4506ec.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4506f2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.subjects.AsyncSubject$AsyncDisposable` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/subjects/AsyncSubject$AsyncDisposable;.onError:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L450704.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/subjects/AsyncSubject$AsyncDisposable;.isDisposed:()Z` @kind virtual;
  #L45070a.  v0:= temp;
  #L45070c.  if v0 == 0 then goto L450718;
  #L450710.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L450716.  goto L450722;
  #L450718.  v0:= v1.`io.reactivex.subjects.AsyncSubject$AsyncDisposable.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L45071c.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L450722.  return @kind void;
}
