record `io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicIntQueueDisposable` @kind class {
  `io.reactivex.subjects.UnicastSubject` `io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v0 @kind this, `io.reactivex.subjects.UnicastSubject` v1 @kind object) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.<init>:(Lio/reactivex/subjects/UnicastSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L453bb4.  v0.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` := v1 @kind object;
  #L453bb8.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L453bbe.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453bd0.  v0:= v1.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453bd4.  v0:= v0.`io.reactivex.subjects.UnicastSubject.queue` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L453bd8.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L453bde.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v2 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L453bf0.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453bf4.  v0:= v0.`io.reactivex.subjects.UnicastSubject.disposed` @type ^`boolean` @kind boolean;
  #L453bf8.  if v0 != 0 then goto L453c4c;
  #L453bfc.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453c00.  v1:= 1I;
  #L453c02.  v0.`io.reactivex.subjects.UnicastSubject.disposed` @type ^`boolean` := v1 @kind boolean;
  #L453c06.  call `doTerminate`(v0) @signature `Lio/reactivex/subjects/UnicastSubject;.doTerminate:()V` @kind virtual;
  #L453c0c.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453c10.  v0:= v0.`io.reactivex.subjects.UnicastSubject.downstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L453c14.  v1:= 0I;
  #L453c16.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L453c1c.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453c20.  v0:= v0.`io.reactivex.subjects.UnicastSubject.wip` @type ^`io.reactivex.internal.observers.BasicIntQueueDisposable` @kind object;
  #L453c24.  call temp:= `getAndIncrement`(v0) @signature `Lio/reactivex/internal/observers/BasicIntQueueDisposable;.getAndIncrement:()I` @kind virtual;
  #L453c2a.  v0:= temp;
  #L453c2c.  if v0 != 0 then goto L453c4c;
  #L453c30.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453c34.  v0:= v0.`io.reactivex.subjects.UnicastSubject.downstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L453c38.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L453c3e.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453c42.  v0:= v0.`io.reactivex.subjects.UnicastSubject.queue` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L453c46.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L453c4c.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453b28.  v0:= v1.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453b2c.  v0:= v0.`io.reactivex.subjects.UnicastSubject.disposed` @type ^`boolean` @kind boolean;
  #L453b30.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453b44.  v0:= v1.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453b48.  v0:= v0.`io.reactivex.subjects.UnicastSubject.queue` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L453b4c.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L453b52.  v0:= temp;
  #L453b54.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453b90.  v0:= v1.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453b94.  v0:= v0.`io.reactivex.subjects.UnicastSubject.queue` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L453b98.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L453b9e.  v0:= temp @kind object;
  #L453ba0.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L453b68.  v0:= 2I;
  #L453b6a.  v3:= v3 ^& v0 @kind int;
  #L453b6c.  if v3 == 0 then goto L453b7c;
  #L453b70.  v3:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L453b74.  v1:= 1I;
  #L453b76.  v3.`io.reactivex.subjects.UnicastSubject.enableOperatorFusion` @type ^`boolean` := v1 @kind boolean;
  #L453b7a.  return v0;
  #L453b7c.  v3:= 0I;
  #L453b7e.  return v3;
}
