record `io.reactivex.exceptions.Exceptions` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.exceptions.Exceptions` v2 @kind this) @signature `Lio/reactivex/exceptions/Exceptions;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e4f34.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e4f3a.  v0:= new `java.lang.IllegalStateException`;
  #L3e4f3e.  v1:= "No instances!" @kind object;
  #L3e4f42.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e4f48.  throw v0;
}
procedure `java.lang.RuntimeException` `propagate`(`java.lang.Throwable` v0 @kind object) @signature `Lio/reactivex/exceptions/Exceptions;.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e4f18.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3e4f1e.  v0:= temp @kind object;
  #L3e4f20.  throw v0;
}
procedure `void` `throwIfFatal`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e4f5c.  v0:= instanceof @variable v1 @type ^`java.lang.VirtualMachineError` @kind boolean;
  #L3e4f60.  if v0 != 0 then goto L3e4f82;
  #L3e4f64.  v0:= instanceof @variable v1 @type ^`java.lang.ThreadDeath` @kind boolean;
  #L3e4f68.  if v0 != 0 then goto L3e4f7c;
  #L3e4f6c.  v0:= instanceof @variable v1 @type ^`java.lang.LinkageError` @kind boolean;
  #L3e4f70.  if v0 != 0 then goto L3e4f76;
  #L3e4f74.  return @kind void;
  #L3e4f76.  v1:= (`java.lang.LinkageError`) v1 @kind object;
  #L3e4f7a.  throw v1;
  #L3e4f7c.  v1:= (`java.lang.ThreadDeath`) v1 @kind object;
  #L3e4f80.  throw v1;
  #L3e4f82.  v1:= (`java.lang.VirtualMachineError`) v1 @kind object;
  #L3e4f86.  throw v1;
}
