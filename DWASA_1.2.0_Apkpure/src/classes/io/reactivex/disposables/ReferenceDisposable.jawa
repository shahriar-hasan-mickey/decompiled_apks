record `io.reactivex.disposables.ReferenceDisposable` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.disposables.ReferenceDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.disposables.ReferenceDisposable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/disposables/ReferenceDisposable;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e4744.  v0:= "value is null" @kind object;
  #L3e4748.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e474e.  v2:= temp @kind object;
  #L3e4750.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e4756.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.disposables.ReferenceDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/ReferenceDisposable;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e4768.  call temp:= `get`(v1) @signature `Lio/reactivex/disposables/ReferenceDisposable;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e476e.  v0:= temp @kind object;
  #L3e4770.  if v0 == 0 then goto L3e4788;
  #L3e4774.  v0:= 0I;
  #L3e4776.  call temp:= `getAndSet`(v1, v0) @signature `Lio/reactivex/disposables/ReferenceDisposable;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e477c.  v0:= temp @kind object;
  #L3e477e.  if v0 == 0 then goto L3e4788;
  #L3e4782.  call `onDisposed`(v1, v0) @signature `Lio/reactivex/disposables/ReferenceDisposable;.onDisposed:(Ljava/lang/Object;)V` @kind virtual;
  #L3e4788.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.disposables.ReferenceDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/ReferenceDisposable;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e4720.  call temp:= `get`(v1) @signature `Lio/reactivex/disposables/ReferenceDisposable;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e4726.  v0:= temp @kind object;
  #L3e4728.  if v0 != 0 then goto L3e4730;
  #L3e472c.  v0:= 1I;
  #L3e472e.  goto L3e4732;
  #L3e4730.  v0:= 0I;
  #L3e4732.  return v0;
}
procedure `void` `onDisposed`(`java.lang.Object` v0 @kind object) @signature `Lio/reactivex/disposables/ReferenceDisposable;.onDisposed:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
