record `io.reactivex.disposables.FutureDisposable` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
  `boolean` `io.reactivex.disposables.FutureDisposable.allowInterrupt` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@io.reactivex.disposables.FutureDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.disposables.FutureDisposable` v0 @kind this, `java.util.concurrent.Future` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/disposables/FutureDisposable;.<init>:(Ljava/util/concurrent/Future;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e46d4.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e46da.  v0.`io.reactivex.disposables.FutureDisposable.allowInterrupt` @type ^`boolean` := v2 @kind boolean;
  #L3e46de.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.disposables.FutureDisposable` v2 @kind this) @signature `Lio/reactivex/disposables/FutureDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e46f0.  v0:= 0I;
  #L3e46f2.  call temp:= `getAndSet`(v2, v0) @signature `Lio/reactivex/disposables/FutureDisposable;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e46f8.  v0:= temp @kind object;
  #L3e46fa.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L3e46fe.  if v0 == 0 then goto L3e470c;
  #L3e4702.  v1:= v2.`io.reactivex.disposables.FutureDisposable.allowInterrupt` @type ^`boolean` @kind boolean;
  #L3e4706.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L3e470c.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.disposables.FutureDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/FutureDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e469c.  call temp:= `get`(v1) @signature `Lio/reactivex/disposables/FutureDisposable;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e46a2.  v0:= temp @kind object;
  #L3e46a4.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L3e46a8.  if v0 == 0 then goto L3e46be;
  #L3e46ac.  call temp:= `isDone`(v0) @signature `Ljava/util/concurrent/Future;.isDone:()Z` @kind interface;
  #L3e46b2.  v0:= temp;
  #L3e46b4.  if v0 == 0 then goto L3e46ba;
  #L3e46b8.  goto L3e46be;
  #L3e46ba.  v0:= 0I;
  #L3e46bc.  goto L3e46c0;
  #L3e46be.  v0:= 1I;
  #L3e46c0.  return v0;
}
