record `io.reactivex.observables.ConnectableObservable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.Observable` @kind class {
}
procedure `void` `<init>`(`io.reactivex.observables.ConnectableObservable` v0 @kind this) @signature `Lio/reactivex/observables/ConnectableObservable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L447a70.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L447a76.  return @kind void;
}
procedure `io.reactivex.Observable` `autoConnect`(`io.reactivex.observables.ConnectableObservable` v1 @kind this) @signature `Lio/reactivex/observables/ConnectableObservable;.autoConnect:()Lio/reactivex/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4478b0.  v0:= 1I;
  #L4478b2.  call temp:= `autoConnect`(v1, v0) @signature `Lio/reactivex/observables/ConnectableObservable;.autoConnect:(I)Lio/reactivex/Observable;` @kind virtual;
  #L4478b8.  v0:= temp @kind object;
  #L4478ba.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `autoConnect`(`io.reactivex.observables.ConnectableObservable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/observables/ConnectableObservable;.autoConnect:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4478cc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L4478d2.  v0:= temp @kind object;
  #L4478d4.  call temp:= `autoConnect`(v1, v2, v0) @signature `Lio/reactivex/observables/ConnectableObservable;.autoConnect:(ILio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind virtual;
  #L4478da.  v2:= temp @kind object;
  #L4478dc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `autoConnect`(`io.reactivex.observables.ConnectableObservable` v1 @kind this, `int` v2 , `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/observables/ConnectableObservable;.autoConnect:(ILio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4478f0.  if v2 > 0 then goto L447904;
  #L4478f4.  call `connect`(v1, v3) @signature `Lio/reactivex/observables/ConnectableObservable;.connect:(Lio/reactivex/functions/Consumer;)V` @kind virtual;
  #L4478fa.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/observables/ConnectableObservable;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L447900.  v2:= temp @kind object;
  #L447902.  return v2 @kind object;
  #L447904.  v0:= new `io.reactivex.internal.operators.observable.ObservableAutoConnect`;
  #L447908.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableAutoConnect;.<init>:(Lio/reactivex/observables/ConnectableObservable;ILio/reactivex/functions/Consumer;)V` @kind direct;
  #L44790e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L447914.  v2:= temp @kind object;
  #L447916.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `connect`(`io.reactivex.observables.ConnectableObservable` v1 @kind this) @signature `Lio/reactivex/observables/ConnectableObservable;.connect:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L447a48.  v0:= new `io.reactivex.internal.util.ConnectConsumer`;
  #L447a4c.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/ConnectConsumer;.<init>:()V` @kind direct;
  #L447a52.  call `connect`(v1, v0) @signature `Lio/reactivex/observables/ConnectableObservable;.connect:(Lio/reactivex/functions/Consumer;)V` @kind virtual;
  #L447a58.  v0:= v0.`io.reactivex.internal.util.ConnectConsumer.disposable` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L447a5c.  return v0 @kind object;
}
procedure `void` `connect`(`io.reactivex.functions.Consumer` v0 @kind object) @signature `Lio/reactivex/observables/ConnectableObservable;.connect:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.reactivex.Observable` `refCount`(`io.reactivex.observables.ConnectableObservable` v1 @kind this) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:()Lio/reactivex/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447928.  v0:= new `io.reactivex.internal.operators.observable.ObservableRefCount`;
  #L44792c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableRefCount;.<init>:(Lio/reactivex/observables/ConnectableObservable;)V` @kind direct;
  #L447932.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L447938.  v0:= temp @kind object;
  #L44793a.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `refCount`(`io.reactivex.observables.ConnectableObservable` v6 @kind this, `int` v7 ) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L44794c.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L447950.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L447956.  v5:= temp @kind object;
  #L447958.  v2:= 0L;
  #L44795c.  v0:= v6 @kind object;
  #L44795e.  v1:= v7;
  #L447960.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L447966.  v7:= temp @kind object;
  #L447968.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `refCount`(`io.reactivex.observables.ConnectableObservable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L44797c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L447982.  v5:= temp @kind object;
  #L447984.  v0:= v6 @kind object;
  #L447986.  v1:= v7;
  #L447988.  v2:= v8 @kind wide;
  #L44798a.  v4:= v10 @kind object;
  #L44798c.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L447992.  v7:= temp @kind object;
  #L447994.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `refCount`(`io.reactivex.observables.ConnectableObservable` v8 @kind this, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4479a8.  v0:= "subscriberCount" @kind object;
  #L4479ac.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4479b2.  v0:= "unit is null" @kind object;
  #L4479b6.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4479bc.  v0:= "scheduler is null" @kind object;
  #L4479c0.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4479c6.  v0:= new `io.reactivex.internal.operators.observable.ObservableRefCount`;
  #L4479ca.  v1:= v0 @kind object;
  #L4479cc.  v2:= v8 @kind object;
  #L4479ce.  v3:= v9;
  #L4479d0.  v4:= v10 @kind wide;
  #L4479d2.  v6:= v12 @kind object;
  #L4479d4.  v7:= v13 @kind object;
  #L4479d6.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableRefCount;.<init>:(Lio/reactivex/observables/ConnectableObservable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L4479dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4479e2.  v9:= temp @kind object;
  #L4479e4.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `refCount`(`io.reactivex.observables.ConnectableObservable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4479f8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4479fe.  v5:= temp @kind object;
  #L447a00.  v1:= 1I;
  #L447a02.  v0:= v6 @kind object;
  #L447a04.  v2:= v7 @kind wide;
  #L447a06.  v4:= v9 @kind object;
  #L447a08.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L447a0e.  v7:= temp @kind object;
  #L447a10.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `refCount`(`io.reactivex.observables.ConnectableObservable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L447a24.  v1:= 1I;
  #L447a26.  v0:= v6 @kind object;
  #L447a28.  v2:= v7 @kind wide;
  #L447a2a.  v4:= v9 @kind object;
  #L447a2c.  v5:= v10 @kind object;
  #L447a2e.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L447a34.  v7:= temp @kind object;
  #L447a36.  return v7 @kind object;
}
