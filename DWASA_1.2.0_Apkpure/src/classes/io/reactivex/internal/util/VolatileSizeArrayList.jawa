record `io.reactivex.internal.util.VolatileSizeArrayList` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
  `java.util.ArrayList` `io.reactivex.internal.util.VolatileSizeArrayList.list` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.util.VolatileSizeArrayList.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44780c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L447812.  v0:= new `java.util.ArrayList`;
  #L447816.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L44781c.  v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` := v0 @kind object;
  #L447820.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L447834.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L44783a.  v0:= new `java.util.ArrayList`;
  #L44783e.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L447844.  v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` := v0 @kind object;
  #L447848.  return @kind void;
}
procedure `void` `add`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44785c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447860.  call `add`(v0, v2, v3) @signature `Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L447866.  v2:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L44786a.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L447870.  v2:= temp;
  #L447872.  call `lazySet`(v1, v2) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lazySet:(I)V` @kind virtual;
  #L447878.  return @kind void;
}
procedure `boolean` `add`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447480.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447484.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L44748a.  v2:= temp;
  #L44748c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447490.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L447496.  v0:= temp;
  #L447498.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lazySet:(I)V` @kind virtual;
  #L44749e.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4474b0.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4474b4.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/ArrayList;.addAll:(ILjava/util/Collection;)Z` @kind virtual;
  #L4474ba.  v2:= temp;
  #L4474bc.  v3:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4474c0.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4474c6.  v3:= temp;
  #L4474c8.  call `lazySet`(v1, v3) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lazySet:(I)V` @kind virtual;
  #L4474ce.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4474e0.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4474e4.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L4474ea.  v2:= temp;
  #L4474ec.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4474f0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4474f6.  v0:= temp;
  #L4474f8.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lazySet:(I)V` @kind virtual;
  #L4474fe.  return v2;
}
procedure `void` `clear`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44788c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447890.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L447896.  v0:= 0I;
  #L447898.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lazySet:(I)V` @kind virtual;
  #L44789e.  return @kind void;
}
procedure `boolean` `contains`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447510.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447514.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L44751a.  v2:= temp;
  #L44751c.  return v2;
}
procedure `boolean` `containsAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447530.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447534.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/ArrayList;.containsAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L44753a.  v2:= temp;
  #L44753c.  return v2;
}
procedure `boolean` `equals`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447550.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.util.VolatileSizeArrayList` @kind boolean;
  #L447554.  if v0 == 0 then goto L44756e;
  #L447558.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L44755c.  v2:= (`io.reactivex.internal.util.VolatileSizeArrayList`) v2 @kind object;
  #L447560.  v2:= v2.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447564.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L44756a.  v2:= temp;
  #L44756c.  return v2;
  #L44756e.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447572.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L447578.  v2:= temp;
  #L44757a.  return v2;
}
procedure `java.lang.Object` `get`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4476bc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4476c0.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4476c6.  v2:= temp @kind object;
  #L4476c8.  return v2 @kind object;
}
procedure `int` `hashCode`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447640.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447644.  call temp:= `hashCode`(v0) @signature `Ljava/util/ArrayList;.hashCode:()I` @kind virtual;
  #L44764a.  v0:= temp;
  #L44764c.  return v0;
}
procedure `int` `indexOf`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447660.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447664.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/ArrayList;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L44766a.  v2:= temp;
  #L44766c.  return v2;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44758c.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.get:()I` @kind virtual;
  #L447592.  v0:= temp;
  #L447594.  if v0 != 0 then goto L44759c;
  #L447598.  v0:= 1I;
  #L44759a.  goto L44759e;
  #L44759c.  v0:= 0I;
  #L44759e.  return v0;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44778c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447790.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L447796.  v0:= temp @kind object;
  #L447798.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447680.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447684.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/ArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L44768a.  v2:= temp;
  #L44768c.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4477cc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4477d0.  call temp:= `listIterator`(v0) @signature `Ljava/util/ArrayList;.listIterator:()Ljava/util/ListIterator;` @kind virtual;
  #L4477d6.  v0:= temp @kind object;
  #L4477d8.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4477ec.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4477f0.  call temp:= `listIterator`(v0, v2) @signature `Ljava/util/ArrayList;.listIterator:(I)Ljava/util/ListIterator;` @kind virtual;
  #L4477f6.  v2:= temp @kind object;
  #L4477f8.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4476dc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4476e0.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L4476e6.  v2:= temp @kind object;
  #L4476e8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4476ec.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4476f2.  v0:= temp;
  #L4476f4.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lazySet:(I)V` @kind virtual;
  #L4476fa.  return v2 @kind object;
}
procedure `boolean` `remove`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4475b0.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4475b4.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L4475ba.  v2:= temp;
  #L4475bc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4475c0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4475c6.  v0:= temp;
  #L4475c8.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lazySet:(I)V` @kind virtual;
  #L4475ce.  return v2;
}
procedure `boolean` `removeAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4475e0.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4475e4.  call temp:= `removeAll`(v0, v2) @signature `Ljava/util/ArrayList;.removeAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L4475ea.  v2:= temp;
  #L4475ec.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4475f0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4475f6.  v0:= temp;
  #L4475f8.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lazySet:(I)V` @kind virtual;
  #L4475fe.  return v2;
}
procedure `boolean` `retainAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447610.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447614.  call temp:= `retainAll`(v0, v2) @signature `Ljava/util/ArrayList;.retainAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L44761a.  v2:= temp;
  #L44761c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447620.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L447626.  v0:= temp;
  #L447628.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lazySet:(I)V` @kind virtual;
  #L44762e.  return v2;
}
procedure `java.lang.Object` `set`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44770c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447710.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L447716.  v2:= temp @kind object;
  #L447718.  return v2 @kind object;
}
procedure `int` `size`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4476a0.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.get:()I` @kind virtual;
  #L4476a6.  v0:= temp;
  #L4476a8.  return v0;
}
procedure `java.util.List` `subList`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4477ac.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L4477b0.  call temp:= `subList`(v0, v2, v3) @signature `Ljava/util/ArrayList;.subList:(II)Ljava/util/List;` @kind virtual;
  #L4477b6.  v2:= temp @kind object;
  #L4477b8.  return v2 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44772c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447730.  call temp:= `toArray`(v0) @signature `Ljava/util/ArrayList;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L447736.  v0:= temp @kind object;
  #L447738.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44774c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447750.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L447756.  v2:= temp @kind object;
  #L447758.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44776c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L447770.  call temp:= `toString`(v0) @signature `Ljava/util/ArrayList;.toString:()Ljava/lang/String;` @kind virtual;
  #L447776.  v0:= temp @kind object;
  #L447778.  return v0 @kind object;
}
