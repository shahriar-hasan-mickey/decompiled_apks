record `io.reactivex.internal.util.HashMapSupplier` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `java.util.concurrent.Callable` @kind interface {
}
global `io.reactivex.internal.util.HashMapSupplier`[] `@@io.reactivex.internal.util.HashMapSupplier.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.util.HashMapSupplier` `@@io.reactivex.internal.util.HashMapSupplier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L446378.  v0:= new `io.reactivex.internal.util.HashMapSupplier`;
  #L44637c.  v1:= 0I;
  #L44637e.  v2:= "INSTANCE" @kind object;
  #L446382.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/util/HashMapSupplier;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L446388.  `@@io.reactivex.internal.util.HashMapSupplier.INSTANCE` @type ^`io.reactivex.internal.util.HashMapSupplier` := v0 @kind object;
  #L44638c.  v0:= 1I;
  #L44638e.  v0:= new `io.reactivex.internal.util.HashMapSupplier`[v0];
  #L446392.  v2:= `@@io.reactivex.internal.util.HashMapSupplier.INSTANCE` @type ^`io.reactivex.internal.util.HashMapSupplier` @kind object;
  #L446396.  v0[v1]:= v2 @kind object;
  #L44639a.  `@@io.reactivex.internal.util.HashMapSupplier.$VALUES` @type ^`io.reactivex.internal.util.HashMapSupplier`[] := v0 @kind object;
  #L44639e.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.HashMapSupplier` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/util/HashMapSupplier;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4463b0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4463b6.  return @kind void;
}
procedure `java.util.concurrent.Callable` `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L446360.  v0:= `@@io.reactivex.internal.util.HashMapSupplier.INSTANCE` @type ^`io.reactivex.internal.util.HashMapSupplier` @kind object;
  #L446364.  return v0 @kind object;
}
procedure `io.reactivex.internal.util.HashMapSupplier` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/util/HashMapSupplier;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/util/HashMapSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4462e0.  v0:= constclass @type ^`io.reactivex.internal.util.HashMapSupplier` @kind object;
  #L4462e4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4462ea.  v1:= temp @kind object;
  #L4462ec.  v1:= (`io.reactivex.internal.util.HashMapSupplier`) v1 @kind object;
  #L4462f0.  return v1 @kind object;
}
procedure `io.reactivex.internal.util.HashMapSupplier`[] `values`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.values:()[Lio/reactivex/internal/util/HashMapSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L446304.  v0:= `@@io.reactivex.internal.util.HashMapSupplier.$VALUES` @type ^`io.reactivex.internal.util.HashMapSupplier`[] @kind object;
  #L446308.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/util/HashMapSupplier;.clone:()Ljava/lang/Object;` @kind virtual;
  #L44630e.  v0:= temp @kind object;
  #L446310.  v0:= (`io.reactivex.internal.util.HashMapSupplier`[]) v0 @kind object;
  #L446314.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.util.HashMapSupplier` v1 @kind this) @signature `Lio/reactivex/internal/util/HashMapSupplier;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L446328.  call temp:= `call`(v1) @signature `Lio/reactivex/internal/util/HashMapSupplier;.call:()Ljava/util/Map;` @kind virtual;
  #L44632e.  v0:= temp @kind object;
  #L446330.  return v0 @kind object;
}
procedure `java.util.Map` `call`(`io.reactivex.internal.util.HashMapSupplier` v1 @kind this) @signature `Lio/reactivex/internal/util/HashMapSupplier;.call:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446344.  v0:= new `java.util.HashMap`;
  #L446348.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L44634e.  return v0 @kind object;
}
