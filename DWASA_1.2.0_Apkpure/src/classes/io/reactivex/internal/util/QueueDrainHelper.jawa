record `io.reactivex.internal.util.QueueDrainHelper` @kind class @AccessFlag PUBLIC_FINAL {
}
global `long` `@@io.reactivex.internal.util.QueueDrainHelper.COMPLETED_MASK` @AccessFlag STATIC_FINAL;
global `long` `@@io.reactivex.internal.util.QueueDrainHelper.REQUESTED_MASK` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.util.QueueDrainHelper` v2 @kind this) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4471e0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4471e6.  v0:= new `java.lang.IllegalStateException`;
  #L4471ea.  v1:= "No instances!" @kind object;
  #L4471ee.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4471f4.  throw v0;
}
procedure `boolean` `checkTerminated`(`boolean` v2 , `boolean` v3 , `io.reactivex.Observer` v4 @kind object, `boolean` v5 , `io.reactivex.internal.fuseable.SimpleQueue` v6 @kind object, `io.reactivex.disposables.Disposable` v7 @kind object, `io.reactivex.internal.util.ObservableQueueDrain` v8 @kind object) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.checkTerminated:(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L446f3c.  call temp:= `cancelled`(v8) @signature `Lio/reactivex/internal/util/ObservableQueueDrain;.cancelled:()Z` @kind interface;
  #L446f42.  v0:= temp;
  #L446f44.  v1:= 1I;
  #L446f46.  if v0 == 0 then goto L446f58;
  #L446f4a.  call `clear`(v6) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L446f50.  call `dispose`(v7) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L446f56.  return v1;
  #L446f58.  if v2 == 0 then goto L446fc4;
  #L446f5c.  if v5 == 0 then goto L446f8a;
  #L446f60.  if v3 == 0 then goto L446fc4;
  #L446f64.  if v7 == 0 then goto L446f6e;
  #L446f68.  call `dispose`(v7) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L446f6e.  call temp:= `error`(v8) @signature `Lio/reactivex/internal/util/ObservableQueueDrain;.error:()Ljava/lang/Throwable;` @kind interface;
  #L446f74.  v2:= temp @kind object;
  #L446f76.  if v2 == 0 then goto L446f82;
  #L446f7a.  call `onError`(v4, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L446f80.  goto L446f88;
  #L446f82.  call `onComplete`(v4) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L446f88.  return v1;
  #L446f8a.  call temp:= `error`(v8) @signature `Lio/reactivex/internal/util/ObservableQueueDrain;.error:()Ljava/lang/Throwable;` @kind interface;
  #L446f90.  v2:= temp @kind object;
  #L446f92.  if v2 == 0 then goto L446fae;
  #L446f96.  call `clear`(v6) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L446f9c.  if v7 == 0 then goto L446fa6;
  #L446fa0.  call `dispose`(v7) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L446fa6.  call `onError`(v4, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L446fac.  return v1;
  #L446fae.  if v3 == 0 then goto L446fc4;
  #L446fb2.  if v7 == 0 then goto L446fbc;
  #L446fb6.  call `dispose`(v7) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L446fbc.  call `onComplete`(v4) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L446fc2.  return v1;
  #L446fc4.  v2:= 0I;
  #L446fc6.  return v2;
}
procedure `boolean` `checkTerminated`(`boolean` v2 , `boolean` v3 , `org.reactivestreams.Subscriber` v4 @kind object, `boolean` v5 , `io.reactivex.internal.fuseable.SimpleQueue` v6 @kind object, `io.reactivex.internal.util.QueueDrain` v7 @kind object) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.checkTerminated:(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L446fd8.  call temp:= `cancelled`(v7) @signature `Lio/reactivex/internal/util/QueueDrain;.cancelled:()Z` @kind interface;
  #L446fde.  v0:= temp;
  #L446fe0.  v1:= 1I;
  #L446fe2.  if v0 == 0 then goto L446fee;
  #L446fe6.  call `clear`(v6) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L446fec.  return v1;
  #L446fee.  if v2 == 0 then goto L44703c;
  #L446ff2.  if v5 == 0 then goto L447016;
  #L446ff6.  if v3 == 0 then goto L44703c;
  #L446ffa.  call temp:= `error`(v7) @signature `Lio/reactivex/internal/util/QueueDrain;.error:()Ljava/lang/Throwable;` @kind interface;
  #L447000.  v2:= temp @kind object;
  #L447002.  if v2 == 0 then goto L44700e;
  #L447006.  call `onError`(v4, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44700c.  goto L447014;
  #L44700e.  call `onComplete`(v4) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L447014.  return v1;
  #L447016.  call temp:= `error`(v7) @signature `Lio/reactivex/internal/util/QueueDrain;.error:()Ljava/lang/Throwable;` @kind interface;
  #L44701c.  v2:= temp @kind object;
  #L44701e.  if v2 == 0 then goto L447030;
  #L447022.  call `clear`(v6) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L447028.  call `onError`(v4, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44702e.  return v1;
  #L447030.  if v3 == 0 then goto L44703c;
  #L447034.  call `onComplete`(v4) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L44703a.  return v1;
  #L44703c.  v2:= 0I;
  #L44703e.  return v2;
}
procedure `io.reactivex.internal.fuseable.SimpleQueue` `createQueue`(`int` v1 ) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.createQueue:(I)Lio/reactivex/internal/fuseable/SimpleQueue;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4471b0.  if v1 >= 0 then goto L4471c2;
  #L4471b4.  v0:= new `io.reactivex.internal.queue.SpscLinkedArrayQueue`;
  #L4471b8.  v1:= -v1 @kind int;
  #L4471ba.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4471c0.  return v0 @kind object;
  #L4471c2.  v0:= new `io.reactivex.internal.queue.SpscArrayQueue`;
  #L4471c6.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/queue/SpscArrayQueue;.<init>:(I)V` @kind direct;
  #L4471cc.  return v0 @kind object;
}
procedure `void` `drainLoop`(`io.reactivex.internal.fuseable.SimplePlainQueue` v11 @kind object, `io.reactivex.Observer` v12 @kind object, `boolean` v13 , `io.reactivex.disposables.Disposable` v14 @kind object, `io.reactivex.internal.util.ObservableQueueDrain` v15 @kind object) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.drainLoop:(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lio/reactivex/Observer;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L447208.  v0:= 1I;
  #L44720a.  v1:= 1I;
  #L44720c.  call temp:= `done`(v15) @signature `Lio/reactivex/internal/util/ObservableQueueDrain;.done:()Z` @kind interface;
  #L447212.  v2:= temp;
  #L447214.  call temp:= `isEmpty`(v11) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.isEmpty:()Z` @kind interface;
  #L44721a.  v3:= temp;
  #L44721c.  v4:= v12 @kind object;
  #L44721e.  v5:= v13;
  #L447220.  v6:= v11 @kind object;
  #L447222.  v7:= v14 @kind object;
  #L447224.  v8:= v15 @kind object;
  #L447226.  call temp:= `checkTerminated`(v2, v3, v4, v5, v6, v7, v8) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.checkTerminated:(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z` @kind static;
  #L44722c.  v2:= temp;
  #L44722e.  if v2 == 0 then goto L447234;
  #L447232.  return @kind void;
  #L447234.  call temp:= `done`(v15) @signature `Lio/reactivex/internal/util/ObservableQueueDrain;.done:()Z` @kind interface;
  #L44723a.  v3:= temp;
  #L44723c.  call temp:= `poll`(v11) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L447242.  v2:= temp @kind object;
  #L447244.  if v2 != 0 then goto L44724c;
  #L447248.  v10:= 1I;
  #L44724a.  goto L447250;
  #L44724c.  v4:= 0I;
  #L44724e.  v10:= 0I;
  #L447250.  v4:= v10;
  #L447252.  v5:= v12 @kind object;
  #L447254.  v6:= v13;
  #L447256.  v7:= v11 @kind object;
  #L447258.  v8:= v14 @kind object;
  #L44725a.  v9:= v15 @kind object;
  #L44725c.  call temp:= `checkTerminated`(v3, v4, v5, v6, v7, v8, v9) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.checkTerminated:(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z` @kind static;
  #L447262.  v3:= temp;
  #L447264.  if v3 == 0 then goto L44726a;
  #L447268.  return @kind void;
  #L44726a.  if v10 == 0 then goto L44727e;
  #L44726e.  v1:= -v1 @kind int;
  #L447270.  call temp:= `leave`(v15, v1) @signature `Lio/reactivex/internal/util/ObservableQueueDrain;.leave:(I)I` @kind interface;
  #L447276.  v1:= temp;
  #L447278.  if v1 != 0 then goto L44720c;
  #L44727c.  return @kind void;
  #L44727e.  call `accept`(v15, v12, v2) @signature `Lio/reactivex/internal/util/ObservableQueueDrain;.accept:(Lio/reactivex/Observer;Ljava/lang/Object;)V` @kind interface;
  #L447284.  goto L447234;
}
procedure `void` `drainMaxLoop`(`io.reactivex.internal.fuseable.SimplePlainQueue` v10 @kind object, `org.reactivestreams.Subscriber` v11 @kind object, `boolean` v12 , `io.reactivex.disposables.Disposable` v13 @kind object, `io.reactivex.internal.util.QueueDrain` v14 @kind object) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.drainMaxLoop:(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L447298.  v0:= 1I;
  #L44729a.  v1:= 1I;
  #L44729c.  call temp:= `done`(v14) @signature `Lio/reactivex/internal/util/QueueDrain;.done:()Z` @kind interface;
  #L4472a2.  v2:= temp;
  #L4472a4.  call temp:= `poll`(v10) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4472aa.  v8:= temp @kind object;
  #L4472ac.  if v8 != 0 then goto L4472b4;
  #L4472b0.  v9:= 1I;
  #L4472b2.  goto L4472b8;
  #L4472b4.  v3:= 0I;
  #L4472b6.  v9:= 0I;
  #L4472b8.  v3:= v9;
  #L4472ba.  v4:= v11 @kind object;
  #L4472bc.  v5:= v12;
  #L4472be.  v6:= v10 @kind object;
  #L4472c0.  v7:= v14 @kind object;
  #L4472c2.  call temp:= `checkTerminated`(v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.checkTerminated:(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z` @kind static;
  #L4472c8.  v2:= temp;
  #L4472ca.  if v2 == 0 then goto L4472da;
  #L4472ce.  if v13 == 0 then goto L4472d8;
  #L4472d2.  call `dispose`(v13) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4472d8.  return @kind void;
  #L4472da.  if v9 == 0 then goto L4472ee;
  #L4472de.  v1:= -v1 @kind int;
  #L4472e0.  call temp:= `leave`(v14, v1) @signature `Lio/reactivex/internal/util/QueueDrain;.leave:(I)I` @kind interface;
  #L4472e6.  v1:= temp;
  #L4472e8.  if v1 != 0 then goto L44729c;
  #L4472ec.  return @kind void;
  #L4472ee.  call temp:= `requested`(v14) @signature `Lio/reactivex/internal/util/QueueDrain;.requested:()J` @kind interface;
  #L4472f4.  v2:= temp @kind wide;
  #L4472f6.  v4:= 0L;
  #L4472fa.  v6:= lcmp(v2, v4);
  #L4472fe.  if v6 == 0 then goto L44732c;
  #L447302.  call temp:= `accept`(v14, v11, v8) @signature `Lio/reactivex/internal/util/QueueDrain;.accept:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)Z` @kind interface;
  #L447308.  v4:= temp;
  #L44730a.  if v4 == 0 then goto L44729c;
  #L44730e.  v4:= 9223372036854775807L;
  #L447318.  v6:= lcmp(v2, v4);
  #L44731c.  if v6 == 0 then goto L44729c;
  #L447320.  v2:= 1L;
  #L447324.  call temp:= `produced`(v14, v2) @signature `Lio/reactivex/internal/util/QueueDrain;.produced:(J)J` @kind interface;
  #L44732a.  goto L44729c;
  #L44732c.  call `clear`(v10) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.clear:()V` @kind interface;
  #L447332.  if v13 == 0 then goto L44733c;
  #L447336.  call `dispose`(v13) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44733c.  v10:= new `io.reactivex.exceptions.MissingBackpressureException`;
  #L447340.  v12:= "Could not emit value due to lack of requests." @kind object;
  #L447344.  call `<init>`(v10, v12) @signature `Lio/reactivex/exceptions/MissingBackpressureException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L44734a.  call `onError`(v11, v10) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L447350.  return @kind void;
}
procedure `boolean` `isCancelled`(`io.reactivex.functions.BooleanSupplier` v0 @kind object) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.isCancelled:(Lio/reactivex/functions/BooleanSupplier;)Z` @AccessFlag STATIC {
    temp;

  #L447050.  call temp:= `getAsBoolean`(v0) @signature `Lio/reactivex/functions/BooleanSupplier;.getAsBoolean:()Z` @kind interface;
  #L447056.  v0:= temp;
  #L447058.  return v0;
  #L44705a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44705c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L447062.  v0:= 1I;
  #L447064.  return v0;
  catch `java.lang.Throwable` @[L447050..L447058] goto L44705a;
}
procedure `void` `postComplete`(`org.reactivestreams.Subscriber` v15 @kind object, `java.util.Queue` v16 @kind object, `java.util.concurrent.atomic.AtomicLong` v17 @kind object, `io.reactivex.functions.BooleanSupplier` v18 @kind object) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.postComplete:(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L447364.  call temp:= `isEmpty`(v16) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L44736a.  v0:= temp;
  #L44736c.  if v0 == 0 then goto L447378;
  #L447370.  call `onComplete`(v15) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L447376.  return @kind void;
  #L447378.  call temp:= `get`(v17) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L44737e.  v1:= temp @kind wide;
  #L447380.  v3:= v15 @kind object;
  #L447382.  v4:= v16 @kind object;
  #L447386.  v5:= v17 @kind object;
  #L44738a.  v6:= v18 @kind object;
  #L44738e.  call temp:= `postCompleteDrain`(v1, v3, v4, v5, v6) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.postCompleteDrain:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z` @kind static;
  #L447394.  v0:= temp;
  #L447396.  if v0 == 0 then goto L44739c;
  #L44739a.  return @kind void;
  #L44739c.  call temp:= `get`(v17) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4473a2.  v0:= temp @kind wide;
  #L4473a4.  v2:= -9223372036854775808L;
  #L4473a8.  v4:= v0 ^& v2 @kind long;
  #L4473ac.  v6:= 0L;
  #L4473b0.  v8:= lcmp(v4, v6);
  #L4473b4.  if v8 == 0 then goto L4473ba;
  #L4473b8.  return @kind void;
  #L4473ba.  v9:= v0 ^| v2 @kind long;
  #L4473be.  v2:= v17 @kind object;
  #L4473c2.  call temp:= `compareAndSet`(v2, v0, v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4473c8.  v3:= temp;
  #L4473ca.  if v3 == 0 then goto L44739c;
  #L4473ce.  v3:= lcmp(v0, v6);
  #L4473d2.  if v3 == 0 then goto L4473ea;
  #L4473d6.  v11:= v15 @kind object;
  #L4473d8.  v12:= v16 @kind object;
  #L4473dc.  v13:= v17 @kind object;
  #L4473e0.  v14:= v18 @kind object;
  #L4473e4.  call temp:= `postCompleteDrain`(v9, v11, v12, v13, v14) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.postCompleteDrain:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z` @kind static;
  #L4473ea.  return @kind void;
}
procedure `boolean` `postCompleteDrain`(`long` v9 , `org.reactivestreams.Subscriber` v11 @kind object, `java.util.Queue` v12 @kind object, `java.util.concurrent.atomic.AtomicLong` v13 @kind object, `io.reactivex.functions.BooleanSupplier` v14 @kind object) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.postCompleteDrain:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L447084.  v0:= -9223372036854775808L;
  #L447088.  v2:= v9 ^& v0 @kind long;
  #L44708c.  v4:= 1I;
  #L44708e.  v5:= lcmp(v2, v9);
  #L447092.  if v5 == 0 then goto L4470c6;
  #L447096.  call temp:= `isCancelled`(v14) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.isCancelled:(Lio/reactivex/functions/BooleanSupplier;)Z` @kind static;
  #L44709c.  v5:= temp;
  #L44709e.  if v5 == 0 then goto L4470a4;
  #L4470a2.  return v4;
  #L4470a4.  call temp:= `poll`(v12) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4470aa.  v5:= temp @kind object;
  #L4470ac.  if v5 != 0 then goto L4470b8;
  #L4470b0.  call `onComplete`(v11) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4470b6.  return v4;
  #L4470b8.  call `onNext`(v11, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4470be.  v4:= 1L;
  #L4470c2.  v2:= v2 + v4 @kind long;
  #L4470c4.  goto L44708c;
  #L4470c6.  call temp:= `isCancelled`(v14) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.isCancelled:(Lio/reactivex/functions/BooleanSupplier;)Z` @kind static;
  #L4470cc.  v9:= temp;
  #L4470ce.  if v9 == 0 then goto L4470d4;
  #L4470d2.  return v4;
  #L4470d4.  call temp:= `isEmpty`(v12) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L4470da.  v9:= temp;
  #L4470dc.  if v9 == 0 then goto L4470e8;
  #L4470e0.  call `onComplete`(v11) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4470e6.  return v4;
  #L4470e8.  call temp:= `get`(v13) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4470ee.  v9:= temp @kind wide;
  #L4470f0.  v4:= lcmp(v9, v2);
  #L4470f4.  if v4 != 0 then goto L44708c;
  #L4470f8.  v9:= 9223372036854775807L;
  #L447102.  v2:= v2 ^& v9 @kind long;
  #L447104.  v2:= -v2 @kind long;
  #L447106.  call temp:= `addAndGet`(v13, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.addAndGet:(J)J` @kind virtual;
  #L44710c.  v2:= temp @kind wide;
  #L44710e.  v9:= v9 ^& v2 @kind long;
  #L447110.  v4:= 0L;
  #L447114.  v6:= lcmp(v9, v4);
  #L447118.  if v6 != 0 then goto L447120;
  #L44711c.  v9:= 0I;
  #L44711e.  return v9;
  #L447120.  v9:= v2 ^& v0 @kind long;
  #L447124.  v7:= v9 @kind wide;
  #L447126.  v9:= v2 @kind wide;
  #L447128.  v2:= v7 @kind wide;
  #L44712a.  goto L44708c;
}
procedure `boolean` `postCompleteRequest`(`long` v14 , `org.reactivestreams.Subscriber` v16 @kind object, `java.util.Queue` v17 @kind object, `java.util.concurrent.atomic.AtomicLong` v18 @kind object, `io.reactivex.functions.BooleanSupplier` v19 @kind object) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.postCompleteRequest:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L44713c.  v0:= v14 @kind wide;
  #L44713e.  call temp:= `get`(v18) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L447144.  v2:= temp @kind wide;
  #L447146.  v4:= 9223372036854775807L;
  #L447150.  v4:= v4 ^& v2 @kind long;
  #L447152.  v6:= -9223372036854775808L;
  #L447156.  v8:= v2 ^& v6 @kind long;
  #L44715a.  call temp:= `addCap`(v4, v14) @signature `Lio/reactivex/internal/util/BackpressureHelper;.addCap:(JJ)J` @kind static;
  #L447160.  v4:= temp @kind wide;
  #L447162.  v4:= v4 ^| v8 @kind long;
  #L447164.  v12:= v18 @kind object;
  #L447168.  call temp:= `compareAndSet`(v12, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L44716e.  v4:= temp;
  #L447170.  if v4 == 0 then goto L44713e;
  #L447174.  v4:= lcmp(v2, v6);
  #L447178.  if v4 != 0 then goto L44719a;
  #L44717c.  v8:= v0 ^| v6 @kind long;
  #L447180.  v10:= v16 @kind object;
  #L447184.  v11:= v17 @kind object;
  #L447188.  v12:= v18 @kind object;
  #L44718c.  v13:= v19 @kind object;
  #L447190.  call temp:= `postCompleteDrain`(v8, v10, v11, v12, v13) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.postCompleteDrain:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z` @kind static;
  #L447196.  v0:= 1I;
  #L447198.  return v0;
  #L44719a.  v0:= 0I;
  #L44719c.  return v0;
}
procedure `void` `request`(`org.reactivestreams.Subscription` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4473fc.  if v3 >= 0 then goto L44740c;
  #L447400.  v0:= 9223372036854775807L;
  #L44740a.  goto L44740e;
  #L44740c.  v0:= (`long`) v3 @kind i2l;
  #L44740e.  call `request`(v2, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L447414.  return @kind void;
}
