record `io.reactivex.internal.util.ErrorMode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.reactivex.internal.util.ErrorMode`[] `@@io.reactivex.internal.util.ErrorMode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.util.ErrorMode` `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.util.ErrorMode` `@@io.reactivex.internal.util.ErrorMode.END` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.util.ErrorMode` `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/util/ErrorMode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L445ea8.  v0:= new `io.reactivex.internal.util.ErrorMode`;
  #L445eac.  v1:= 0I;
  #L445eae.  v2:= "IMMEDIATE" @kind object;
  #L445eb2.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L445eb8.  `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` := v0 @kind object;
  #L445ebc.  v0:= new `io.reactivex.internal.util.ErrorMode`;
  #L445ec0.  v2:= 1I;
  #L445ec2.  v3:= "BOUNDARY" @kind object;
  #L445ec6.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L445ecc.  `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` := v0 @kind object;
  #L445ed0.  v0:= new `io.reactivex.internal.util.ErrorMode`;
  #L445ed4.  v3:= 2I;
  #L445ed6.  v4:= "END" @kind object;
  #L445eda.  call `<init>`(v0, v4, v3) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L445ee0.  `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` := v0 @kind object;
  #L445ee4.  v0:= 3I;
  #L445ee6.  v0:= new `io.reactivex.internal.util.ErrorMode`[v0];
  #L445eea.  v4:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L445eee.  v0[v1]:= v4 @kind object;
  #L445ef2.  v1:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L445ef6.  v0[v2]:= v1 @kind object;
  #L445efa.  v1:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L445efe.  v0[v3]:= v1 @kind object;
  #L445f02.  `@@io.reactivex.internal.util.ErrorMode.$VALUES` @type ^`io.reactivex.internal.util.ErrorMode`[] := v0 @kind object;
  #L445f06.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.ErrorMode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L445f18.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L445f1e.  return @kind void;
}
procedure `io.reactivex.internal.util.ErrorMode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/util/ErrorMode;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/util/ErrorMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L445e60.  v0:= constclass @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L445e64.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L445e6a.  v1:= temp @kind object;
  #L445e6c.  v1:= (`io.reactivex.internal.util.ErrorMode`) v1 @kind object;
  #L445e70.  return v1 @kind object;
}
procedure `io.reactivex.internal.util.ErrorMode`[] `values`() @signature `Lio/reactivex/internal/util/ErrorMode;.values:()[Lio/reactivex/internal/util/ErrorMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L445e84.  v0:= `@@io.reactivex.internal.util.ErrorMode.$VALUES` @type ^`io.reactivex.internal.util.ErrorMode`[] @kind object;
  #L445e88.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/util/ErrorMode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L445e8e.  v0:= temp @kind object;
  #L445e90.  v0:= (`io.reactivex.internal.util.ErrorMode`[]) v0 @kind object;
  #L445e94.  return v0 @kind object;
}
