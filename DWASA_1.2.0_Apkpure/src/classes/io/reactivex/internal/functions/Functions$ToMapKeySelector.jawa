record `io.reactivex.internal.functions.Functions$ToMapKeySelector` @kind class @AccessFlag FINAL extends `io.reactivex.functions.BiConsumer` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.functions.Functions$ToMapKeySelector.keySelector` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$ToMapKeySelector` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$ToMapKeySelector;.<init>:(Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e6c18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e6c1e.  v0.`io.reactivex.internal.functions.Functions$ToMapKeySelector.keySelector` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L3e6c22.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.functions.Functions$ToMapKeySelector` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/functions/Functions$ToMapKeySelector;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e6c34.  v1:= (`java.util.Map`) v1 @kind object;
  #L3e6c38.  call `accept`(v0, v1, v2) @signature `Lio/reactivex/internal/functions/Functions$ToMapKeySelector;.accept:(Ljava/util/Map;Ljava/lang/Object;)V` @kind virtual;
  #L3e6c3e.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.functions.Functions$ToMapKeySelector` v1 @kind this, `java.util.Map` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/functions/Functions$ToMapKeySelector;.accept:(Ljava/util/Map;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6c50.  v0:= v1.`io.reactivex.internal.functions.Functions$ToMapKeySelector.keySelector` @type ^`io.reactivex.functions.Function` @kind object;
  #L3e6c54.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e6c5a.  v0:= temp @kind object;
  #L3e6c5c.  call temp:= `put`(v2, v0, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e6c62.  return @kind void;
}
