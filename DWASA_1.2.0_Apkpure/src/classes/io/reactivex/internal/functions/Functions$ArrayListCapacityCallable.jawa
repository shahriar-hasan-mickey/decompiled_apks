record `io.reactivex.internal.functions.Functions$ArrayListCapacityCallable` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
  `int` `io.reactivex.internal.functions.Functions$ArrayListCapacityCallable.capacity` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$ArrayListCapacityCallable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/functions/Functions$ArrayListCapacityCallable;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e643c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e6442.  v0.`io.reactivex.internal.functions.Functions$ArrayListCapacityCallable.capacity` @type ^`int` := v1;
  #L3e6446.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.functions.Functions$ArrayListCapacityCallable` v1 @kind this) @signature `Lio/reactivex/internal/functions/Functions$ArrayListCapacityCallable;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3e6400.  call temp:= `call`(v1) @signature `Lio/reactivex/internal/functions/Functions$ArrayListCapacityCallable;.call:()Ljava/util/List;` @kind virtual;
  #L3e6406.  v0:= temp @kind object;
  #L3e6408.  return v0 @kind object;
}
procedure `java.util.List` `call`(`io.reactivex.internal.functions.Functions$ArrayListCapacityCallable` v2 @kind this) @signature `Lio/reactivex/internal/functions/Functions$ArrayListCapacityCallable;.call:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e641c.  v0:= new `java.util.ArrayList`;
  #L3e6420.  v1:= v2.`io.reactivex.internal.functions.Functions$ArrayListCapacityCallable.capacity` @type ^`int`;
  #L3e6424.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3e642a.  return v0 @kind object;
}
