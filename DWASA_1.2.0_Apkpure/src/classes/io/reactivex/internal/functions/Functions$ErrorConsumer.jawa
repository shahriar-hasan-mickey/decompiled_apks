record `io.reactivex.internal.functions.Functions$ErrorConsumer` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Consumer` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$ErrorConsumer` v0 @kind this) @signature `Lio/reactivex/internal/functions/Functions$ErrorConsumer;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e669c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e66a2.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.functions.Functions$ErrorConsumer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$ErrorConsumer;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e66b4.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L3e66b8.  call `accept`(v0, v1) @signature `Lio/reactivex/internal/functions/Functions$ErrorConsumer;.accept:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3e66be.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.functions.Functions$ErrorConsumer` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$ErrorConsumer;.accept:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L3e66d0.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e66d6.  return @kind void;
}
