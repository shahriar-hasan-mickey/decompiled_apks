record `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicIntQueueDisposable` @kind class, `io.reactivex.Observer` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.onFinally` @AccessFlag FINAL;
  `io.reactivex.internal.fuseable.QueueDisposable` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.syncFused` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L422fc4.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L422fca.  v0.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L422fce.  v0.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.onFinally` @type ^`io.reactivex.functions.Action` := v2 @kind object;
  #L422fd2.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422fe4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L422fe8.  call `clear`(v0) @signature `Lio/reactivex/internal/fuseable/QueueDisposable;.clear:()V` @kind interface;
  #L422fee.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L423000.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L423004.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42300a.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L423010.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422f14.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L422f18.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L422f1e.  v0:= temp;
  #L422f20.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422f34.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L422f38.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/fuseable/QueueDisposable;.isEmpty:()Z` @kind interface;
  #L422f3e.  v0:= temp;
  #L422f40.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L423024.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L423028.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L42302e.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L423034.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L423048.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42304c.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L423052.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L423058.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42306c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L423070.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L423076.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L423088.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42308c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L423092.  v0:= temp;
  #L423094.  if v0 == 0 then goto L4230b6;
  #L423098.  v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42309c.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind boolean;
  #L4230a0.  if v0 == 0 then goto L4230ac;
  #L4230a4.  v2:= (`io.reactivex.internal.fuseable.QueueDisposable`) v2 @kind object;
  #L4230a8.  v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` := v2 @kind object;
  #L4230ac.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4230b0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4230b6.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L422f94.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L422f98.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/QueueDisposable;.poll:()Ljava/lang/Object;` @kind interface;
  #L422f9e.  v0:= temp @kind object;
  #L422fa0.  if v0 != 0 then goto L422fb2;
  #L422fa4.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.syncFused` @type ^`boolean` @kind boolean;
  #L422fa8.  if v1 == 0 then goto L422fb2;
  #L422fac.  call `runFinally`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L422fb2.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L422f54.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L422f58.  v1:= 0I;
  #L422f5a.  if v0 == 0 then goto L422f82;
  #L422f5e.  v2:= v4 ^& 4;
  #L422f62.  if v2 != 0 then goto L422f82;
  #L422f66.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/internal/fuseable/QueueDisposable;.requestFusion:(I)I` @kind interface;
  #L422f6c.  v4:= temp;
  #L422f6e.  if v4 == 0 then goto L422f80;
  #L422f72.  v0:= 1I;
  #L422f74.  if v4 != v0 then goto L422f7a;
  #L422f78.  goto L422f7c;
  #L422f7a.  v0:= 0I;
  #L422f7c.  v3.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.syncFused` @type ^`boolean` := v0 @kind boolean;
  #L422f80.  return v4;
  #L422f82.  return v1;
}
procedure `void` `runFinally`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4230c8.  v0:= 0I;
  #L4230ca.  v1:= 1I;
  #L4230cc.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.compareAndSet:(II)Z` @kind virtual;
  #L4230d2.  v0:= temp;
  #L4230d4.  if v0 == 0 then goto L4230f2;
  #L4230d8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.onFinally` @type ^`io.reactivex.functions.Action` @kind object;
  #L4230dc.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L4230e2.  goto L4230f2;
  #L4230e4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4230e6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4230ec.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4230f2.  return @kind void;
  catch `java.lang.Throwable` @[L4230d8..L4230e2] goto L4230e4;
}
