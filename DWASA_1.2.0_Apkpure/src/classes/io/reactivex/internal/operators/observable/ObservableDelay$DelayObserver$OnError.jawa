record `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Throwable` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError.throwable` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver$OnError;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;Ljava/lang/Throwable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L422338.  v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` := v1 @kind object;
  #L42233c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L422342.  v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError.throwable` @type ^`java.lang.Throwable` := v2 @kind object;
  #L422346.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver$OnError;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L422358.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` @kind object;
  #L42235c.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L422360.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError.throwable` @type ^`java.lang.Throwable` @kind object;
  #L422364.  call `onError`(v0, v1) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42236a.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` @kind object;
  #L42236e.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L422372.  call `dispose`(v0) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L422378.  return @kind void;
  #L42237a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42237c.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` @kind object;
  #L422380.  v1:= v1.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L422384.  call `dispose`(v1) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L42238a.  throw v0;
  catch `java.lang.Throwable` @[L422358..L42236a] goto L42237a;
}
