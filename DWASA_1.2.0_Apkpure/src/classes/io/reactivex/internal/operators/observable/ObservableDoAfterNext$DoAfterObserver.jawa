record `io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicFuseableObserver` @kind class {
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver.onAfterNext` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoAfterNext$DoAfterObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Consumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L422e6c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L422e72.  v0.`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver.onAfterNext` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L422e76.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoAfterNext$DoAfterObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422e88.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L422e8c.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L422e92.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver.sourceMode` @type ^`int`;
  #L422e96.  if v0 != 0 then goto L422eae;
  #L422e9a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver.onAfterNext` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L422e9e.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L422ea4.  goto L422eae;
  #L422ea6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L422ea8.  call `fail`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoAfterNext$DoAfterObserver;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L422eae.  return @kind void;
  catch `java.lang.Throwable` @[L422e9a..L422ea4] goto L422ea6;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoAfterNext$DoAfterObserver;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L422e40.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L422e44.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/QueueDisposable;.poll:()Ljava/lang/Object;` @kind interface;
  #L422e4a.  v0:= temp @kind object;
  #L422e4c.  if v0 == 0 then goto L422e5a;
  #L422e50.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver.onAfterNext` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L422e54.  call `accept`(v1, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L422e5a.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/ObservableDoAfterNext$DoAfterObserver;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L422e24.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoAfterNext$DoAfterObserver;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L422e2a.  v1:= temp;
  #L422e2c.  return v1;
}
