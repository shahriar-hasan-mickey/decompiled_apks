record `io.reactivex.internal.operators.observable.ObservableFlattenIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableFlattenIterable.mapper` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L425afc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L425b02.  v0.`io.reactivex.internal.operators.observable.ObservableFlattenIterable.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L425b06.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable` v3 @kind this, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L425b18.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L425b1c.  v1:= new `io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver`;
  #L425b20.  v2:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L425b24.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @kind direct;
  #L425b2a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L425b30.  return @kind void;
}
