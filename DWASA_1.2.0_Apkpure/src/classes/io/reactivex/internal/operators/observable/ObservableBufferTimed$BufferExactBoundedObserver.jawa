record `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.QueueDrainObserver` @kind class, `java.lang.Runnable` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `java.util.Collection` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @AccessFlag ;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.bufferSupplier` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.consumerIndex` @AccessFlag ;
  `int` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.maxSize` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.producerIndex` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.restartTimerOnMaxSize` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.timer` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.timespan` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.unit` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.upstream` @AccessFlag ;
  `io.reactivex.Scheduler$Worker` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.w` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v1 @kind this, `io.reactivex.Observer` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `int` v7 , `boolean` v8 , `io.reactivex.Scheduler$Worker` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;IZLio/reactivex/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L41e5c8.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue`;
  #L41e5cc.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L41e5d2.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/observers/QueueDrainObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/internal/fuseable/SimplePlainQueue;)V` @kind direct;
  #L41e5d8.  v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.bufferSupplier` @type ^`java.util.concurrent.Callable` := v3 @kind object;
  #L41e5dc.  v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.timespan` @type ^`long` := v4 @kind wide;
  #L41e5e0.  v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.unit` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L41e5e4.  v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.maxSize` @type ^`int` := v7;
  #L41e5e8.  v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.restartTimerOnMaxSize` @type ^`boolean` := v8 @kind boolean;
  #L41e5ec.  v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.w` @type ^`io.reactivex.Scheduler$Worker` := v9 @kind object;
  #L41e5f0.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.accept:(Lio/reactivex/Observer;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L41e604.  v2:= (`java.util.Collection`) v2 @kind object;
  #L41e608.  call `accept`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.accept:(Lio/reactivex/Observer;Ljava/util/Collection;)V` @kind virtual;
  #L41e60e.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.accept:(Lio/reactivex/Observer;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;

  #L41e620.  call `onNext`(v1, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L41e626.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41e638.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.cancelled` @type ^`boolean` @kind boolean;
  #L41e63c.  if v0 != 0 then goto L41e66c;
  #L41e640.  v0:= 1I;
  #L41e642.  v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L41e646.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L41e64a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L41e650.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L41e654.  call `dispose`(v0) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L41e65a.  @monitorenter v1
  #L41e65c.  v0:= 0I;
  #L41e65e.  v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` := v0 @kind object;
  #L41e662.  @monitorexit v1
  #L41e664.  goto L41e66c;
  #L41e666.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41e668.  @monitorexit v1
  #L41e66a.  throw v0;
  #L41e66c.  return @kind void;
  catch `java.lang.Throwable` @[L41e65e..L41e66a] goto L41e666;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41e5b0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.cancelled` @type ^`boolean` @kind boolean;
  #L41e5b4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41e68c.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L41e690.  call `dispose`(v0) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L41e696.  @monitorenter v3
  #L41e698.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` @kind object;
  #L41e69c.  v1:= 0I;
  #L41e69e.  v3.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` := v1 @kind object;
  #L41e6a2.  @monitorexit v3
  #L41e6a4.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.queue` @type ^`io.reactivex.internal.fuseable.SimplePlainQueue` @kind object;
  #L41e6a8.  call temp:= `offer`(v1, v0) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L41e6ae.  v0:= 1I;
  #L41e6b0.  v3.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L41e6b4.  call temp:= `enter`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.enter:()Z` @kind virtual;
  #L41e6ba.  v0:= temp;
  #L41e6bc.  if v0 == 0 then goto L41e6d0;
  #L41e6c0.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.queue` @type ^`io.reactivex.internal.fuseable.SimplePlainQueue` @kind object;
  #L41e6c4.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L41e6c8.  v2:= 0I;
  #L41e6ca.  call `drainLoop`(v0, v1, v2, v3, v3) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.drainLoop:(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lio/reactivex/Observer;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)V` @kind static;
  #L41e6d0.  return @kind void;
  #L41e6d2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41e6d4.  @monitorexit v3
  #L41e6d6.  throw v0;
  catch `java.lang.Throwable` @[L41e698..L41e6a4] goto L41e6d2;
  catch `java.lang.Throwable` @[L41e6d4..L41e6d6] goto L41e6d2;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41e6fc.  @monitorenter v1
  #L41e6fe.  v0:= 0I;
  #L41e700.  v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` := v0 @kind object;
  #L41e704.  @monitorexit v1
  #L41e706.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L41e70a.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41e710.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L41e714.  call `dispose`(v2) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L41e71a.  return @kind void;
  #L41e71c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41e71e.  @monitorexit v1
  #L41e720.  throw v2;
  catch `java.lang.Throwable` @[L41e700..L41e706] goto L41e71c;
  catch `java.lang.Throwable` @[L41e71e..L41e720] goto L41e71c;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41e748.  @monitorenter v7
  #L41e74a.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` @kind object;
  #L41e74e.  if v0 != 0 then goto L41e756;
  #L41e752.  @monitorexit v7
  #L41e754.  return @kind void;
  #L41e756.  call temp:= `add`(v0, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41e75c.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L41e762.  v8:= temp;
  #L41e764.  v1:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.maxSize` @type ^`int`;
  #L41e768.  if v8 >= v1 then goto L41e770;
  #L41e76c.  @monitorexit v7
  #L41e76e.  return @kind void;
  #L41e770.  v8:= 0I;
  #L41e772.  v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` := v8 @kind object;
  #L41e776.  v1:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.producerIndex` @type ^`long` @kind wide;
  #L41e77a.  v3:= 1L;
  #L41e77e.  v1:= v1 + v3 @kind long;
  #L41e780.  v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.producerIndex` @type ^`long` := v1 @kind wide;
  #L41e784.  @monitorexit v7
  #L41e786.  v8:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.restartTimerOnMaxSize` @type ^`boolean` @kind boolean;
  #L41e78a.  if v8 == 0 then goto L41e798;
  #L41e78e.  v8:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.timer` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L41e792.  call `dispose`(v8) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L41e798.  v8:= 0I;
  #L41e79a.  call `fastPathOrderedEmit`(v7, v0, v8, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.fastPathOrderedEmit:(Ljava/lang/Object;ZLio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L41e7a0.  v8:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.bufferSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L41e7a4.  call temp:= `call`(v8) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L41e7aa.  v8:= temp @kind object;
  #L41e7ac.  v0:= "The buffer supplied is null" @kind object;
  #L41e7b0.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e7b6.  v8:= temp @kind object;
  #L41e7b8.  v8:= (`java.util.Collection`) v8 @kind object;
  #L41e7bc.  @monitorenter v7
  #L41e7be.  v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` := v8 @kind object;
  #L41e7c2.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.consumerIndex` @type ^`long` @kind wide;
  #L41e7c6.  v0:= v0 + v3 @kind long;
  #L41e7c8.  v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.consumerIndex` @type ^`long` := v0 @kind wide;
  #L41e7cc.  @monitorexit v7
  #L41e7ce.  v8:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.restartTimerOnMaxSize` @type ^`boolean` @kind boolean;
  #L41e7d2.  if v8 == 0 then goto L41e7f2;
  #L41e7d6.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L41e7da.  v4:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.timespan` @type ^`long` @kind wide;
  #L41e7de.  v6:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L41e7e2.  v1:= v7 @kind object;
  #L41e7e4.  v2:= v4 @kind wide;
  #L41e7e6.  call temp:= `schedulePeriodically`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/Scheduler$Worker;.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L41e7ec.  v8:= temp @kind object;
  #L41e7ee.  v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.timer` @type ^`io.reactivex.disposables.Disposable` := v8 @kind object;
  #L41e7f2.  return @kind void;
  #L41e7f4.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41e7f6.  @monitorexit v7
  #L41e7f8.  throw v8;
  #L41e7fa.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41e7fc.  call `throwIfFatal`(v8) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41e802.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L41e806.  call `onError`(v0, v8) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41e80c.  call `dispose`(v7) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.dispose:()V` @kind virtual;
  #L41e812.  return @kind void;
  #L41e814.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41e816.  @monitorexit v7
  #L41e818.  throw v8;
  catch `java.lang.Throwable` @[L41e74a..L41e786] goto L41e814;
  catch `java.lang.Throwable` @[L41e7a0..L41e7bc] goto L41e7fa;
  catch `java.lang.Throwable` @[L41e7be..L41e7ce] goto L41e7f4;
  catch `java.lang.Throwable` @[L41e7f6..L41e7f8] goto L41e7f4;
  catch `java.lang.Throwable` @[L41e816..L41e818] goto L41e814;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v7 @kind this, `io.reactivex.disposables.Disposable` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41e85c.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L41e860.  call temp:= `validate`(v0, v8) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L41e866.  v0:= temp;
  #L41e868.  if v0 == 0 then goto L41e8da;
  #L41e86c.  v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v8 @kind object;
  #L41e870.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.bufferSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L41e874.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L41e87a.  v0:= temp @kind object;
  #L41e87c.  v1:= "The buffer supplied is null" @kind object;
  #L41e880.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e886.  v0:= temp @kind object;
  #L41e888.  v0:= (`java.util.Collection`) v0 @kind object;
  #L41e88c.  v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` := v0 @kind object;
  #L41e890.  v8:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L41e894.  call `onSubscribe`(v8, v7) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L41e89a.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L41e89e.  v4:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.timespan` @type ^`long` @kind wide;
  #L41e8a2.  v6:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L41e8a6.  v1:= v7 @kind object;
  #L41e8a8.  v2:= v4 @kind wide;
  #L41e8aa.  call temp:= `schedulePeriodically`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/Scheduler$Worker;.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L41e8b0.  v8:= temp @kind object;
  #L41e8b2.  v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.timer` @type ^`io.reactivex.disposables.Disposable` := v8 @kind object;
  #L41e8b6.  goto L41e8da;
  #L41e8b8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41e8ba.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41e8c0.  call `dispose`(v8) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L41e8c6.  v8:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L41e8ca.  call `error`(v0, v8) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L41e8d0.  v8:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L41e8d4.  call `dispose`(v8) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L41e8da.  return @kind void;
  catch `java.lang.Throwable` @[L41e870..L41e88c] goto L41e8b8;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver` v7 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41e8f8.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.bufferSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L41e8fc.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L41e902.  v0:= temp @kind object;
  #L41e904.  v1:= "The bufferSupplier returned a null buffer" @kind object;
  #L41e908.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e90e.  v0:= temp @kind object;
  #L41e910.  v0:= (`java.util.Collection`) v0 @kind object;
  #L41e914.  @monitorenter v7
  #L41e916.  v1:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` @kind object;
  #L41e91a.  if v1 == 0 then goto L41e940;
  #L41e91e.  v2:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.producerIndex` @type ^`long` @kind wide;
  #L41e922.  v4:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.consumerIndex` @type ^`long` @kind wide;
  #L41e926.  v6:= lcmp(v2, v4);
  #L41e92a.  if v6 == 0 then goto L41e930;
  #L41e92e.  goto L41e940;
  #L41e930.  v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.buffer` @type ^`java.util.Collection` := v0 @kind object;
  #L41e934.  @monitorexit v7
  #L41e936.  v0:= 0I;
  #L41e938.  call `fastPathOrderedEmit`(v7, v1, v0, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.fastPathOrderedEmit:(Ljava/lang/Object;ZLio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L41e93e.  return @kind void;
  #L41e940.  @monitorexit v7
  #L41e942.  return @kind void;
  #L41e944.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41e946.  @monitorexit v7
  #L41e948.  throw v0;
  #L41e94a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41e94c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41e952.  call `dispose`(v7) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.dispose:()V` @kind virtual;
  #L41e958.  v1:= v7.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L41e95c.  call `onError`(v1, v0) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41e962.  return @kind void;
  catch `java.lang.Throwable` @[L41e8f8..L41e914] goto L41e94a;
  catch `java.lang.Throwable` @[L41e916..L41e936] goto L41e944;
  catch `java.lang.Throwable` @[L41e940..L41e948] goto L41e944;
}
