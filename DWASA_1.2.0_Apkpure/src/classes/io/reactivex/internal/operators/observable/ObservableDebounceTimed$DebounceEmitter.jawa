record `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `java.lang.Runnable` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `long` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.idx` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.once` @AccessFlag FINAL;
  `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.parent` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.value` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 , `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.<init>:(Ljava/lang/Object;JLio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L421f3c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L421f42.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L421f46.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L421f4c.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.once` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L421f50.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.value` @type ^`java.lang.Object` := v2 @kind object;
  #L421f54.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.idx` @type ^`long` := v3 @kind wide;
  #L421f58.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.parent` @type ^`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` := v5 @kind object;
  #L421f5c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L421f70.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L421f76.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L421f14.  call temp:= `get`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.get:()Ljava/lang/Object;` @kind virtual;
  #L421f1a.  v0:= temp @kind object;
  #L421f1c.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L421f20.  if v0 != v1 then goto L421f28;
  #L421f24.  v0:= 1I;
  #L421f26.  goto L421f2a;
  #L421f28.  v0:= 0I;
  #L421f2a.  return v0;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L421f88.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.once` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L421f8c.  v1:= 0I;
  #L421f8e.  v2:= 1I;
  #L421f90.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L421f96.  v0:= temp;
  #L421f98.  if v0 == 0 then goto L421fae;
  #L421f9c.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.parent` @type ^`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` @kind object;
  #L421fa0.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.idx` @type ^`long` @kind wide;
  #L421fa4.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter.value` @type ^`java.lang.Object` @kind object;
  #L421fa8.  call `emit`(v0, v1, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;.emit:(JLjava/lang/Object;Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;)V` @kind virtual;
  #L421fae.  return @kind void;
}
procedure `void` `setResource`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.setResource:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L421fc0.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L421fc6.  return @kind void;
}
