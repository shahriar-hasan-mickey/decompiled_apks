record `io.reactivex.internal.operators.observable.ObservableAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.ObservableSource`[] `io.reactivex.internal.operators.observable.ObservableAmb.sources` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableAmb.sourcesIterable` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableAmb` v0 @kind this, `io.reactivex.ObservableSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L41cbe0.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L41cbe6.  v0.`io.reactivex.internal.operators.observable.ObservableAmb.sources` @type ^`io.reactivex.ObservableSource`[] := v1 @kind object;
  #L41cbea.  v0.`io.reactivex.internal.operators.observable.ObservableAmb.sourcesIterable` @type ^`java.lang.Iterable` := v2 @kind object;
  #L41cbee.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableAmb` v6 @kind this, `io.reactivex.Observer` v7 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41cc00.  v0:= v6.`io.reactivex.internal.operators.observable.ObservableAmb.sources` @type ^`io.reactivex.ObservableSource`[] @kind object;
  #L41cc04.  v1:= 0I;
  #L41cc06.  if v0 != 0 then goto L41cc86;
  #L41cc0a.  v0:= 8I;
  #L41cc0e.  v0:= new `io.reactivex.Observable`[v0];
  #L41cc12.  v2:= v6.`io.reactivex.internal.operators.observable.ObservableAmb.sourcesIterable` @type ^`java.lang.Iterable` @kind object;
  #L41cc16.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L41cc1c.  v2:= temp @kind object;
  #L41cc1e.  v3:= 0I;
  #L41cc20.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L41cc26.  v4:= temp;
  #L41cc28.  if v4 == 0 then goto L41cc88;
  #L41cc2c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L41cc32.  v4:= temp @kind object;
  #L41cc34.  v4:= (`io.reactivex.ObservableSource`) v4 @kind object;
  #L41cc38.  if v4 != 0 then goto L41cc52;
  #L41cc3c.  v0:= new `java.lang.NullPointerException`;
  #L41cc40.  v1:= "One of the sources is null" @kind object;
  #L41cc44.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41cc4a.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L41cc50.  return @kind void;
  #L41cc52.  v5:= length @variable v0;
  #L41cc54.  if v3 != v5 then goto L41cc6a;
  #L41cc58.  v5:= v3 ^> 2;
  #L41cc5c.  v5:= v5 + v3 @kind int;
  #L41cc5e.  v5:= new `io.reactivex.ObservableSource`[v5];
  #L41cc62.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L41cc68.  v0:= v5 @kind object;
  #L41cc6a.  v5:= v3 + 1;
  #L41cc6e.  v0[v3]:= v4 @kind object;
  #L41cc72.  v3:= v5;
  #L41cc74.  goto L41cc20;
  #L41cc76.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41cc78.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41cc7e.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L41cc84.  return @kind void;
  #L41cc86.  v3:= length @variable v0;
  #L41cc88.  if v3 != 0 then goto L41cc94;
  #L41cc8c.  call `complete`(v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L41cc92.  return @kind void;
  #L41cc94.  v2:= 1I;
  #L41cc96.  if v3 != v2 then goto L41cca6;
  #L41cc9a.  v0:= v0[v1] @kind object;
  #L41cc9e.  call `subscribe`(v0, v7) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L41cca4.  return @kind void;
  #L41cca6.  v1:= new `io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator`;
  #L41ccaa.  call `<init>`(v1, v7, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb$AmbCoordinator;.<init>:(Lio/reactivex/Observer;I)V` @kind direct;
  #L41ccb0.  call `subscribe`(v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb$AmbCoordinator;.subscribe:([Lio/reactivex/ObservableSource;)V` @kind virtual;
  #L41ccb6.  return @kind void;
  catch `java.lang.Throwable` @[L41cc12..L41cc72] goto L41cc76;
}
