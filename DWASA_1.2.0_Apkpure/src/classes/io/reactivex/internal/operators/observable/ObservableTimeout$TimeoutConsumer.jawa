record `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `long` `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.idx` @AccessFlag FINAL;
  `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport` `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer` v0 @kind this, `long` v1 , `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.<init>:(JLio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutSelectorSupport;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L431658.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L43165e.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.idx` @type ^`long` := v1 @kind wide;
  #L431662.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.parent` @type ^`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport` := v3 @kind object;
  #L431666.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L431678.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L43167e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L431630.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.get:()Ljava/lang/Object;` @kind virtual;
  #L431636.  v0:= temp @kind object;
  #L431638.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L43163c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L431642.  v0:= temp;
  #L431644.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L431690.  call temp:= `get`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.get:()Ljava/lang/Object;` @kind virtual;
  #L431696.  v0:= temp @kind object;
  #L431698.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43169c.  if v0 == v1 then goto L4316b8;
  #L4316a0.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4316a4.  call `lazySet`(v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4316aa.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.parent` @type ^`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport` @kind object;
  #L4316ae.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.idx` @type ^`long` @kind wide;
  #L4316b2.  call `onTimeout`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutSelectorSupport;.onTimeout:(J)V` @kind interface;
  #L4316b8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4316cc.  call temp:= `get`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.get:()Ljava/lang/Object;` @kind virtual;
  #L4316d2.  v0:= temp @kind object;
  #L4316d4.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4316d8.  if v0 == v1 then goto L4316f6;
  #L4316dc.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4316e0.  call `lazySet`(v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4316e6.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.parent` @type ^`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport` @kind object;
  #L4316ea.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.idx` @type ^`long` @kind wide;
  #L4316ee.  call `onTimeoutError`(v0, v1, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutSelectorSupport;.onTimeoutError:(JLjava/lang/Throwable;)V` @kind interface;
  #L4316f4.  goto L4316fc;
  #L4316f6.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4316fc.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L431710.  call temp:= `get`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.get:()Ljava/lang/Object;` @kind virtual;
  #L431716.  v3:= temp @kind object;
  #L431718.  v3:= (`io.reactivex.disposables.Disposable`) v3 @kind object;
  #L43171c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L431720.  if v3 == v0 then goto L431742;
  #L431724.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43172a.  v3:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L43172e.  call `lazySet`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L431734.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.parent` @type ^`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport` @kind object;
  #L431738.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer.idx` @type ^`long` @kind wide;
  #L43173c.  call `onTimeout`(v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutSelectorSupport;.onTimeout:(J)V` @kind interface;
  #L431742.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L431754.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43175a.  return @kind void;
}
