record `io.reactivex.internal.operators.observable.ObservableRepeat` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableRepeat.count` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableRepeat` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat;.<init>:(Lio/reactivex/Observable;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42beec.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L42bef2.  v0.`io.reactivex.internal.operators.observable.ObservableRepeat.count` @type ^`long` := v2 @kind wide;
  #L42bef6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableRepeat` v7 @kind this, `io.reactivex.Observer` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L42bf08.  v4:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L42bf0c.  call `<init>`(v4) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L42bf12.  call `onSubscribe`(v8, v4) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42bf18.  v6:= new `io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver`;
  #L42bf1c.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableRepeat.count` @type ^`long` @kind wide;
  #L42bf20.  v2:= 9223372036854775807L;
  #L42bf2a.  v5:= lcmp(v0, v2);
  #L42bf2e.  if v5 == 0 then goto L42bf3a;
  #L42bf32.  v2:= 1L;
  #L42bf36.  v0:= v0 - v2 @kind long;
  #L42bf38.  v2:= v0 @kind wide;
  #L42bf3a.  v5:= v7.`io.reactivex.internal.operators.observable.ObservableRepeat.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L42bf3e.  v0:= v6 @kind object;
  #L42bf40.  v1:= v8 @kind object;
  #L42bf42.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat$RepeatObserver;.<init>:(Lio/reactivex/Observer;JLio/reactivex/internal/disposables/SequentialDisposable;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L42bf48.  call `subscribeNext`(v6) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat$RepeatObserver;.subscribeNext:()V` @kind virtual;
  #L42bf4e.  return @kind void;
}
