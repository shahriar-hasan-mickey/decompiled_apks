record `io.reactivex.internal.operators.observable.ObservableToList` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableToList.collectionSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableToList` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.<init>:(Lio/reactivex/ObservableSource;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L432828.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L43282e.  call temp:= `createArrayList`(v2) @signature `Lio/reactivex/internal/functions/Functions;.createArrayList:(I)Ljava/util/concurrent/Callable;` @kind static;
  #L432834.  v1:= temp @kind object;
  #L432836.  v0.`io.reactivex.internal.operators.observable.ObservableToList.collectionSupplier` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L43283a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableToList` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43284c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L432852.  v0.`io.reactivex.internal.operators.observable.ObservableToList.collectionSupplier` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L432856.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableToList` v3 @kind this, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L432868.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableToList.collectionSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L43286c.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L432872.  v0:= temp @kind object;
  #L432874.  v1:= "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L432878.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43287e.  v0:= temp @kind object;
  #L432880.  v0:= (`java.util.Collection`) v0 @kind object;
  #L432884.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableToList.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L432888.  v2:= new `io.reactivex.internal.operators.observable.ObservableToList$ToListObserver`;
  #L43288c.  call `<init>`(v2, v4, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableToList$ToListObserver;.<init>:(Lio/reactivex/Observer;Ljava/util/Collection;)V` @kind direct;
  #L432892.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L432898.  return @kind void;
  #L43289a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43289c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4328a2.  call `error`(v0, v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L4328a8.  return @kind void;
  catch `java.lang.Throwable` @[L432868..L432884] goto L43289a;
}
