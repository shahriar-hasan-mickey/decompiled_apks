record `io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.onCompleteSupplier` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.onErrorMapper` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.onNextMapper` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification$MapNotificationObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L428e90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L428e96.  v0.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L428e9a.  v0.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.onNextMapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L428e9e.  v0.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.onErrorMapper` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L428ea2.  v0.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.onCompleteSupplier` @type ^`java.util.concurrent.Callable` := v4 @kind object;
  #L428ea6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification$MapNotificationObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428eb8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L428ebc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L428ec2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification$MapNotificationObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428e70.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L428e74.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L428e7a.  v0:= temp;
  #L428e7c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification$MapNotificationObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428ed4.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.onCompleteSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L428ed8.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L428ede.  v0:= temp @kind object;
  #L428ee0.  v1:= "The onComplete ObservableSource returned is null" @kind object;
  #L428ee4.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L428eea.  v0:= temp @kind object;
  #L428eec.  v0:= (`io.reactivex.ObservableSource`) v0 @kind object;
  #L428ef0.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L428ef4.  call `onNext`(v1, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L428efa.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L428efe.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L428f04.  return @kind void;
  #L428f06.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L428f08.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L428f0e.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L428f12.  call `onError`(v1, v0) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L428f18.  return @kind void;
  catch `java.lang.Throwable` @[L428ed4..L428ef0] goto L428f06;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification$MapNotificationObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L428f38.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.onErrorMapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L428f3c.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L428f42.  v0:= temp @kind object;
  #L428f44.  v1:= "The onError ObservableSource returned is null" @kind object;
  #L428f48.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L428f4e.  v0:= temp @kind object;
  #L428f50.  v0:= (`io.reactivex.ObservableSource`) v0 @kind object;
  #L428f54.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L428f58.  call `onNext`(v6, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L428f5e.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L428f62.  call `onComplete`(v6) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L428f68.  return @kind void;
  #L428f6a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L428f6c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L428f72.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L428f76.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L428f7a.  v3:= 2I;
  #L428f7c.  v3:= new `java.lang.Throwable`[v3];
  #L428f80.  v4:= 0I;
  #L428f82.  v3[v4]:= v6 @kind object;
  #L428f86.  v6:= 1I;
  #L428f88.  v3[v6]:= v0 @kind object;
  #L428f8c.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L428f92.  call `onError`(v1, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L428f98.  return @kind void;
  catch `java.lang.Throwable` @[L428f38..L428f54] goto L428f6a;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification$MapNotificationObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428fb8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.onNextMapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L428fbc.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L428fc2.  v2:= temp @kind object;
  #L428fc4.  v0:= "The onNext ObservableSource returned is null" @kind object;
  #L428fc8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L428fce.  v2:= temp @kind object;
  #L428fd0.  v2:= (`io.reactivex.ObservableSource`) v2 @kind object;
  #L428fd4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L428fd8.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L428fde.  return @kind void;
  #L428fe0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L428fe2.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L428fe8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L428fec.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L428ff2.  return @kind void;
  catch `java.lang.Throwable` @[L428fb8..L428fd4] goto L428fe0;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification$MapNotificationObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429010.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L429014.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42901a.  v0:= temp;
  #L42901c.  if v0 == 0 then goto L42902e;
  #L429020.  v1.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L429024.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L429028.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42902e.  return @kind void;
}
