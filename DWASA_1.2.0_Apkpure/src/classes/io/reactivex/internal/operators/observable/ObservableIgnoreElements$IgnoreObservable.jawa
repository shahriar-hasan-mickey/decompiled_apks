record `io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable.downstream` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements$IgnoreObservable;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4275d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4275d6.  v0.`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4275da.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements$IgnoreObservable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4275ec.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4275f0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4275f6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements$IgnoreObservable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4275b0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4275b4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4275ba.  v0:= temp;
  #L4275bc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements$IgnoreObservable;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427608.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42760c.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L427612.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements$IgnoreObservable;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427624.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L427628.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42762e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements$IgnoreObservable;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L427640.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements$IgnoreObservable;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L427654.  v0.`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable.upstream` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L427658.  v1:= v0.`io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42765c.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L427662.  return @kind void;
}
