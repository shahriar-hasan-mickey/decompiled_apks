record `io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debounceSelector` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debouncer` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.done` @AccessFlag ;
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.downstream` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.index` @AccessFlag VOLATILE;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver` v1 @kind this, `io.reactivex.Observer` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L421d3c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L421d42.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L421d46.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L421d4c.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debouncer` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L421d50.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.downstream` @type ^`io.reactivex.Observer` := v2 @kind object;
  #L421d54.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debounceSelector` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L421d58.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L421d6c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L421d70.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L421d76.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debouncer` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L421d7a.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L421d80.  return @kind void;
}
procedure `void` `emit`(`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;.emit:(JLjava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L421d94.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.index` @type ^`long` @kind wide;
  #L421d98.  v2:= lcmp(v4, v0);
  #L421d9c.  if v2 != 0 then goto L421daa;
  #L421da0.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L421da4.  call `onNext`(v4, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L421daa.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L421d1c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L421d20.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L421d26.  v0:= temp;
  #L421d28.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L421dbc.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.done` @type ^`boolean` @kind boolean;
  #L421dc0.  if v0 == 0 then goto L421dc6;
  #L421dc4.  return @kind void;
  #L421dc6.  v0:= 1I;
  #L421dc8.  v2.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L421dcc.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debouncer` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L421dd0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L421dd6.  v0:= temp @kind object;
  #L421dd8.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L421ddc.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L421de0.  if v0 == v1 then goto L421e02;
  #L421de4.  v0:= (`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver`) v0 @kind object;
  #L421de8.  call `emit`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver$DebounceInnerObserver;.emit:()V` @kind virtual;
  #L421dee.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debouncer` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L421df2.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L421df8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L421dfc.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L421e02.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L421e14.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debouncer` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L421e18.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L421e1e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L421e22.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L421e28.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L421e3c.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.done` @type ^`boolean` @kind boolean;
  #L421e40.  if v0 == 0 then goto L421e46;
  #L421e44.  return @kind void;
  #L421e46.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.index` @type ^`long` @kind wide;
  #L421e4a.  v2:= 1L;
  #L421e4e.  v0:= v0 + v2 @kind long;
  #L421e50.  v5.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.index` @type ^`long` := v0 @kind wide;
  #L421e54.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debouncer` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L421e58.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L421e5e.  v2:= temp @kind object;
  #L421e60.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L421e64.  if v2 == 0 then goto L421e6e;
  #L421e68.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L421e6e.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debounceSelector` @type ^`io.reactivex.functions.Function` @kind object;
  #L421e72.  call temp:= `apply`(v3, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L421e78.  v3:= temp @kind object;
  #L421e7a.  v4:= "The ObservableSource supplied is null" @kind object;
  #L421e7e.  call temp:= `requireNonNull`(v3, v4) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421e84.  v3:= temp @kind object;
  #L421e86.  v3:= (`io.reactivex.ObservableSource`) v3 @kind object;
  #L421e8a.  v4:= new `io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver`;
  #L421e8e.  call `<init>`(v4, v5, v0, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver$DebounceInnerObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;JLjava/lang/Object;)V` @kind direct;
  #L421e94.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.debouncer` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L421e98.  call temp:= `compareAndSet`(v6, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L421e9e.  v6:= temp;
  #L421ea0.  if v6 == 0 then goto L421eaa;
  #L421ea4.  call `subscribe`(v3, v4) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L421eaa.  return @kind void;
  #L421eac.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L421eae.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L421eb4.  call `dispose`(v5) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;.dispose:()V` @kind virtual;
  #L421eba.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L421ebe.  call `onError`(v0, v6) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L421ec4.  return @kind void;
  catch `java.lang.Throwable` @[L421e6e..L421e8a] goto L421eac;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L421ee4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L421ee8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L421eee.  v0:= temp;
  #L421ef0.  if v0 == 0 then goto L421f02;
  #L421ef4.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L421ef8.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L421efc.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L421f02.  return @kind void;
}
