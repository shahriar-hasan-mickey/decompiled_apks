record `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.Collection` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver` `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer;.<init>:(Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41ed20.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver` := v1 @kind object;
  #L41ed24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41ed2a.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer.b` @type ^`java.util.Collection` := v2 @kind object;
  #L41ed2e.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41ed40.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver` @kind object;
  #L41ed44.  @monitorenter v0
  #L41ed46.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver` @kind object;
  #L41ed4a.  v1:= v1.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver.buffers` @type ^`java.util.List` @kind object;
  #L41ed4e.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer.b` @type ^`java.util.Collection` @kind object;
  #L41ed52.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L41ed58.  @monitorexit v0
  #L41ed5a.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver` @kind object;
  #L41ed5e.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer.b` @type ^`java.util.Collection` @kind object;
  #L41ed62.  v2:= 0I;
  #L41ed64.  v3:= v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L41ed68.  call `access$000`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver;.access$000:(Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver;Ljava/lang/Object;ZLio/reactivex/disposables/Disposable;)V` @kind static;
  #L41ed6e.  return @kind void;
  #L41ed70.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41ed72.  @monitorexit v0
  #L41ed74.  throw v1;
  catch `java.lang.Throwable` @[L41ed46..L41ed5a] goto L41ed70;
  catch `java.lang.Throwable` @[L41ed72..L41ed74] goto L41ed70;
}
