record `io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction.zipper` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ZipIterableFunction;.<init>:(Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L427e3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L427e42.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction.zipper` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L427e46.  return @kind void;
}
procedure `io.reactivex.ObservableSource` `apply`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ZipIterableFunction;.apply:(Ljava/util/List;)Lio/reactivex/ObservableSource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L427df4.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction.zipper` @type ^`io.reactivex.functions.Function` @kind object;
  #L427df8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L427dfe.  v1:= temp;
  #L427e00.  v2:= 0I;
  #L427e02.  call temp:= `zipIterable`(v4, v0, v2, v1) @signature `Lio/reactivex/Observable;.zipIterable:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind static;
  #L427e08.  v4:= temp @kind object;
  #L427e0a.  return v4 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ZipIterableFunction;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L427e1c.  v1:= (`java.util.List`) v1 @kind object;
  #L427e20.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ZipIterableFunction;.apply:(Ljava/util/List;)Lio/reactivex/ObservableSource;` @kind virtual;
  #L427e26.  v1:= temp @kind object;
  #L427e28.  return v1 @kind object;
}
