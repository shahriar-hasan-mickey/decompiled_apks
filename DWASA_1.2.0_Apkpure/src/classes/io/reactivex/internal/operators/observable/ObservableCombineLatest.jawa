record `io.reactivex.internal.operators.observable.ObservableCombineLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `int` `io.reactivex.internal.operators.observable.ObservableCombineLatest.bufferSize` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableCombineLatest.combiner` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableCombineLatest.delayError` @AccessFlag FINAL;
  `io.reactivex.ObservableSource`[] `io.reactivex.internal.operators.observable.ObservableCombineLatest.sources` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableCombineLatest.sourcesIterable` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableCombineLatest` v0 @kind this, `io.reactivex.ObservableSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4200a8.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L4200ae.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.sources` @type ^`io.reactivex.ObservableSource`[] := v1 @kind object;
  #L4200b2.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.sourcesIterable` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4200b6.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.combiner` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L4200ba.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.bufferSize` @type ^`int` := v4;
  #L4200be.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.delayError` @type ^`boolean` := v5 @kind boolean;
  #L4200c2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableCombineLatest` v10 @kind this, `io.reactivex.Observer` v11 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4200d4.  v0:= v10.`io.reactivex.internal.operators.observable.ObservableCombineLatest.sources` @type ^`io.reactivex.ObservableSource`[] @kind object;
  #L4200d8.  if v0 != 0 then goto L420130;
  #L4200dc.  v0:= 8I;
  #L4200e0.  v0:= new `io.reactivex.Observable`[v0];
  #L4200e4.  v1:= v10.`io.reactivex.internal.operators.observable.ObservableCombineLatest.sourcesIterable` @type ^`java.lang.Iterable` @kind object;
  #L4200e8.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4200ee.  v1:= temp @kind object;
  #L4200f0.  v2:= 0I;
  #L4200f2.  v3:= 0I;
  #L4200f4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4200fa.  v4:= temp;
  #L4200fc.  if v4 == 0 then goto L420132;
  #L420100.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L420106.  v4:= temp @kind object;
  #L420108.  v4:= (`io.reactivex.ObservableSource`) v4 @kind object;
  #L42010c.  v5:= length @variable v0;
  #L42010e.  if v3 != v5 then goto L420124;
  #L420112.  v5:= v3 ^> 2;
  #L420116.  v5:= v5 + v3 @kind int;
  #L420118.  v5:= new `io.reactivex.ObservableSource`[v5];
  #L42011c.  call `arraycopy`(v0, v2, v5, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L420122.  v0:= v5 @kind object;
  #L420124.  v5:= v3 + 1;
  #L420128.  v0[v3]:= v4 @kind object;
  #L42012c.  v3:= v5;
  #L42012e.  goto L4200f4;
  #L420130.  v3:= length @variable v0;
  #L420132.  v7:= v3;
  #L420134.  if v7 != 0 then goto L420140;
  #L420138.  call `complete`(v11) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L42013e.  return @kind void;
  #L420140.  v1:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator`;
  #L420144.  v6:= v10.`io.reactivex.internal.operators.observable.ObservableCombineLatest.combiner` @type ^`io.reactivex.functions.Function` @kind object;
  #L420148.  v8:= v10.`io.reactivex.internal.operators.observable.ObservableCombineLatest.bufferSize` @type ^`int`;
  #L42014c.  v9:= v10.`io.reactivex.internal.operators.observable.ObservableCombineLatest.delayError` @type ^`boolean` @kind boolean;
  #L420150.  v4:= v1 @kind object;
  #L420152.  v5:= v11 @kind object;
  #L420154.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;IIZ)V` @kind direct;
  #L42015a.  call `subscribe`(v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.subscribe:([Lio/reactivex/ObservableSource;)V` @kind virtual;
  #L420160.  return @kind void;
}
