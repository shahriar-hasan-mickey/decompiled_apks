record `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver.arbiter` @AccessFlag FINAL;
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver.downstream` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$FallbackObserver;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/atomic/AtomicReference;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L431d68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L431d6e.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L431d72.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver.arbiter` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L431d76.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$FallbackObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L431d88.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L431d8c.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L431d92.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$FallbackObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L431da4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L431da8.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L431dae.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$FallbackObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L431dc0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L431dc4.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L431dca.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$FallbackObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L431ddc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver.arbiter` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L431de0.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L431de6.  return @kind void;
}
