record `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.fallback` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.index` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.itemTimeoutIndicator` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.upstream` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L431794.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L43179a.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L43179e.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.itemTimeoutIndicator` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4317a2.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L4317a6.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4317ac.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4317b0.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.fallback` @type ^`io.reactivex.ObservableSource` := v3 @kind object;
  #L4317b4.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4317b8.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4317be.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.index` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L4317c2.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4317c6.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4317cc.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4317d0.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4317e4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4317e8.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4317ee.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4317f4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L4317f8.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4317fe.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43176c.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L431772.  v0:= temp @kind object;
  #L431774.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L431778.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43177e.  v0:= temp;
  #L431780.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v5 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L431810.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.index` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L431814.  v1:= 9223372036854775807L;
  #L43181e.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L431824.  v3:= temp @kind wide;
  #L431826.  v0:= lcmp(v3, v1);
  #L43182a.  if v0 == 0 then goto L43184c;
  #L43182e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L431832.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L431838.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L43183c.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L431842.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L431846.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L43184c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L431860.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.index` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L431864.  v1:= 9223372036854775807L;
  #L43186e.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L431874.  v3:= temp @kind wide;
  #L431876.  v0:= lcmp(v3, v1);
  #L43187a.  if v0 == 0 then goto L43189e;
  #L43187e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L431882.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L431888.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L43188c.  call `onError`(v0, v6) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L431892.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L431896.  call `dispose`(v6) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L43189c.  goto L4318a4;
  #L43189e.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4318a4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4318b8.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.index` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4318bc.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4318c2.  v0:= temp @kind wide;
  #L4318c4.  v2:= 9223372036854775807L;
  #L4318ce.  v4:= lcmp(v0, v2);
  #L4318d2.  if v4 == 0 then goto L431982;
  #L4318d6.  v4:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.index` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4318da.  v5:= 1L;
  #L4318de.  v5:= v5 + v0 @kind long;
  #L4318e0.  call temp:= `compareAndSet`(v4, v0, v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4318e6.  v0:= temp;
  #L4318e8.  if v0 != 0 then goto L4318ee;
  #L4318ec.  goto L431982;
  #L4318ee.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L4318f2.  call temp:= `get`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.get:()Ljava/lang/Object;` @kind virtual;
  #L4318f8.  v0:= temp @kind object;
  #L4318fa.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4318fe.  if v0 == 0 then goto L431908;
  #L431902.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L431908.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L43190c.  call `onNext`(v0, v8) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L431912.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.itemTimeoutIndicator` @type ^`io.reactivex.functions.Function` @kind object;
  #L431916.  call temp:= `apply`(v0, v8) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43191c.  v8:= temp @kind object;
  #L43191e.  v0:= "The itemTimeoutIndicator returned a null ObservableSource." @kind object;
  #L431922.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L431928.  v8:= temp @kind object;
  #L43192a.  v8:= (`io.reactivex.ObservableSource`) v8 @kind object;
  #L43192e.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer`;
  #L431932.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.<init>:(JLio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutSelectorSupport;)V` @kind direct;
  #L431938.  v1:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L43193c.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L431942.  v1:= temp;
  #L431944.  if v1 == 0 then goto L43194e;
  #L431948.  call `subscribe`(v8, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L43194e.  return @kind void;
  #L431950.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L431952.  call `throwIfFatal`(v8) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L431958.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L43195c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L431962.  v0:= temp @kind object;
  #L431964.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L431968.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43196e.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.index` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L431972.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L431978.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L43197c.  call `onError`(v0, v8) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L431982.  return @kind void;
  catch `java.lang.Throwable` @[L431912..L43192e] goto L431950;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4319a0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4319a4.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4319aa.  return @kind void;
}
procedure `void` `onTimeout`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.onTimeout:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4319bc.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.index` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4319c0.  v1:= 9223372036854775807L;
  #L4319ca.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4319d0.  v4:= temp;
  #L4319d2.  if v4 == 0 then goto L4319fe;
  #L4319d6.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4319da.  call temp:= `dispose`(v4) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4319e0.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.fallback` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4319e4.  v5:= 0I;
  #L4319e6.  v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.fallback` @type ^`io.reactivex.ObservableSource` := v5 @kind object;
  #L4319ea.  v5:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver`;
  #L4319ee.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4319f2.  call `<init>`(v5, v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$FallbackObserver;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/atomic/AtomicReference;)V` @kind direct;
  #L4319f8.  call `subscribe`(v4, v5) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4319fe.  return @kind void;
}
procedure `void` `onTimeoutError`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v3 @kind this, `long` v4 , `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.onTimeoutError:(JLjava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L431a10.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.index` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L431a14.  v1:= 9223372036854775807L;
  #L431a1e.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L431a24.  v4:= temp;
  #L431a26.  if v4 == 0 then goto L431a3c;
  #L431a2a.  call temp:= `dispose`(v3) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L431a30.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L431a34.  call `onError`(v4, v6) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L431a3a.  goto L431a42;
  #L431a3c.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L431a42.  return @kind void;
}
procedure `void` `startFirstTimeout`(`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver` v3 @kind this, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutFallbackObserver;.startFirstTimeout:(Lio/reactivex/ObservableSource;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L431a54.  if v4 == 0 then goto L431a7c;
  #L431a58.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer`;
  #L431a5c.  v1:= 0L;
  #L431a60.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutConsumer;.<init>:(JLio/reactivex/internal/operators/observable/ObservableTimeout$TimeoutSelectorSupport;)V` @kind direct;
  #L431a66.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L431a6a.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L431a70.  v1:= temp;
  #L431a72.  if v1 == 0 then goto L431a7c;
  #L431a76.  call `subscribe`(v4, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L431a7c.  return @kind void;
}
