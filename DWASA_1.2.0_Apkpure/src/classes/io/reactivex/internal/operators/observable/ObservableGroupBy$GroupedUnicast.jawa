record `io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast` @kind class @AccessFlag FINAL extends `io.reactivex.observables.GroupedObservable` @kind class {
  `io.reactivex.internal.operators.observable.ObservableGroupBy$State` `io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast.state` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast` v0 @kind this, `java.lang.Object` v1 @kind object, `io.reactivex.internal.operators.observable.ObservableGroupBy$State` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$GroupedUnicast;.<init>:(Ljava/lang/Object;Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L4267f8.  call `<init>`(v0, v1) @signature `Lio/reactivex/observables/GroupedObservable;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4267fe.  v0.`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast.state` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` := v2 @kind object;
  #L426802.  return @kind void;
}
procedure `io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast` `createWith`(`java.lang.Object` v1 @kind object, `int` v2 , `io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$GroupedUnicast;.createWith:(Ljava/lang/Object;ILio/reactivex/internal/operators/observable/ObservableGroupBy$GroupByObserver;Z)Lio/reactivex/internal/operators/observable/ObservableGroupBy$GroupedUnicast;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4267d0.  v0:= new `io.reactivex.internal.operators.observable.ObservableGroupBy$State`;
  #L4267d4.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.<init>:(ILio/reactivex/internal/operators/observable/ObservableGroupBy$GroupByObserver;Ljava/lang/Object;Z)V` @kind direct;
  #L4267da.  v2:= new `io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast`;
  #L4267de.  call `<init>`(v2, v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$GroupedUnicast;.<init>:(Ljava/lang/Object;Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;)V` @kind direct;
  #L4267e4.  return v2 @kind object;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$GroupedUnicast;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426814.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast.state` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` @kind object;
  #L426818.  call `onComplete`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.onComplete:()V` @kind virtual;
  #L42681e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$GroupedUnicast;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426830.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast.state` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` @kind object;
  #L426834.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L42683a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$GroupedUnicast;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42684c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast.state` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` @kind object;
  #L426850.  call `onNext`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L426856.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$GroupedUnicast;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L426868.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast.state` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` @kind object;
  #L42686c.  call `subscribe`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L426872.  return @kind void;
}
