record `io.reactivex.internal.operators.observable.ObservableUsing` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.observable.ObservableUsing.disposer` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableUsing.eager` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableUsing.resourceSupplier` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableUsing.sourceSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableUsing` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L432c94.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L432c9a.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.resourceSupplier` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L432c9e.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.sourceSupplier` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L432ca2.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.disposer` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L432ca6.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.eager` @type ^`boolean` := v4 @kind boolean;
  #L432caa.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableUsing` v5 @kind this, `io.reactivex.Observer` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L432cbc.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.resourceSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L432cc0.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L432cc6.  v0:= temp @kind object;
  #L432cc8.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.sourceSupplier` @type ^`io.reactivex.functions.Function` @kind object;
  #L432ccc.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L432cd2.  v1:= temp @kind object;
  #L432cd4.  v2:= "The sourceSupplier returned a null ObservableSource" @kind object;
  #L432cd8.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L432cde.  v1:= temp @kind object;
  #L432ce0.  v1:= (`io.reactivex.ObservableSource`) v1 @kind object;
  #L432ce4.  v2:= new `io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver`;
  #L432ce8.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.disposer` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L432cec.  v4:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.eager` @type ^`boolean` @kind boolean;
  #L432cf0.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing$UsingObserver;.<init>:(Lio/reactivex/Observer;Ljava/lang/Object;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L432cf6.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L432cfc.  return @kind void;
  #L432cfe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L432d00.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L432d06.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.disposer` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L432d0a.  call `accept`(v2, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L432d10.  call `error`(v1, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L432d16.  return @kind void;
  #L432d18.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L432d1a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L432d20.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L432d24.  v3:= 2I;
  #L432d26.  v3:= new `java.lang.Throwable`[v3];
  #L432d2a.  v4:= 0I;
  #L432d2c.  v3[v4]:= v1 @kind object;
  #L432d30.  v1:= 1I;
  #L432d32.  v3[v1]:= v0 @kind object;
  #L432d36.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L432d3c.  call `error`(v2, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L432d42.  return @kind void;
  #L432d44.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L432d46.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L432d4c.  call `error`(v0, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L432d52.  return @kind void;
  catch `java.lang.Throwable` @[L432cbc..L432cc8] goto L432d44;
  catch `java.lang.Throwable` @[L432cc8..L432ce4] goto L432cfe;
  catch `java.lang.Throwable` @[L432d06..L432d10] goto L432d18;
}
