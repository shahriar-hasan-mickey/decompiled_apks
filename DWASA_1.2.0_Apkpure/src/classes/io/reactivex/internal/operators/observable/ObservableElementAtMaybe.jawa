record `io.reactivex.internal.operators.observable.ObservableElementAtMaybe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Maybe` @kind class, `io.reactivex.internal.fuseable.FuseToObservable` @kind interface {
  `long` `io.reactivex.internal.operators.observable.ObservableElementAtMaybe.index` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableElementAtMaybe.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableElementAtMaybe` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtMaybe;.<init>:(Lio/reactivex/ObservableSource;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L423700.  call `<init>`(v0) @signature `Lio/reactivex/Maybe;.<init>:()V` @kind direct;
  #L423706.  v0.`io.reactivex.internal.operators.observable.ObservableElementAtMaybe.source` @type ^`io.reactivex.ObservableSource` := v1 @kind object;
  #L42370a.  v0.`io.reactivex.internal.operators.observable.ObservableElementAtMaybe.index` @type ^`long` := v2 @kind wide;
  #L42370e.  return @kind void;
}
procedure `io.reactivex.Observable` `fuseToObservable`(`io.reactivex.internal.operators.observable.ObservableElementAtMaybe` v7 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtMaybe;.fuseToObservable:()Lio/reactivex/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4236cc.  v6:= new `io.reactivex.internal.operators.observable.ObservableElementAt`;
  #L4236d0.  v1:= v7.`io.reactivex.internal.operators.observable.ObservableElementAtMaybe.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4236d4.  v2:= v7.`io.reactivex.internal.operators.observable.ObservableElementAtMaybe.index` @type ^`long` @kind wide;
  #L4236d8.  v4:= 0I;
  #L4236da.  v5:= 0I;
  #L4236dc.  v0:= v6 @kind object;
  #L4236de.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt;.<init>:(Lio/reactivex/ObservableSource;JLjava/lang/Object;Z)V` @kind direct;
  #L4236e4.  call temp:= `onAssembly`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4236ea.  v0:= temp @kind object;
  #L4236ec.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableElementAtMaybe` v4 @kind this, `io.reactivex.MaybeObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtMaybe;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L423720.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableElementAtMaybe.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L423724.  v1:= new `io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver`;
  #L423728.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableElementAtMaybe.index` @type ^`long` @kind wide;
  #L42372c.  call `<init>`(v1, v5, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtMaybe$ElementAtObserver;.<init>:(Lio/reactivex/MaybeObserver;J)V` @kind direct;
  #L423732.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L423738.  return @kind void;
}
