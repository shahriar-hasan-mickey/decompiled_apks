record `io.reactivex.internal.operators.observable.ObservableThrottleLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `boolean` `io.reactivex.internal.operators.observable.ObservableThrottleLatest.emitLast` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableThrottleLatest.scheduler` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableThrottleLatest.timeout` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableThrottleLatest.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableThrottleLatest` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleLatest;.<init>:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L431454.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L43145a.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.timeout` @type ^`long` := v2 @kind wide;
  #L43145e.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L431462.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.scheduler` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L431466.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.emitLast` @type ^`boolean` := v6 @kind boolean;
  #L43146a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableThrottleLatest` v9 @kind this, `io.reactivex.Observer` v10 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleLatest;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L43147c.  v0:= v9.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L431480.  v8:= new `io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver`;
  #L431484.  v3:= v9.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.timeout` @type ^`long` @kind wide;
  #L431488.  v5:= v9.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L43148c.  v1:= v9.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L431490.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L431496.  v6:= temp @kind object;
  #L431498.  v7:= v9.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.emitLast` @type ^`boolean` @kind boolean;
  #L43149c.  v1:= v8 @kind object;
  #L43149e.  v2:= v10 @kind object;
  #L4314a0.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleLatest$ThrottleLatestObserver;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Z)V` @kind direct;
  #L4314a6.  call `subscribe`(v0, v8) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4314ac.  return @kind void;
}
