record `io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
  `io.reactivex.Observable` `io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable.parent` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable` v0 @kind this, `io.reactivex.Observable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ReplayCallable;.<init>:(Lio/reactivex/Observable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L427c34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L427c3a.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable.parent` @type ^`io.reactivex.Observable` := v1 @kind object;
  #L427c3e.  return @kind void;
}
procedure `io.reactivex.observables.ConnectableObservable` `call`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ReplayCallable;.call:()Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427bf8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable.parent` @type ^`io.reactivex.Observable` @kind object;
  #L427bfc.  call temp:= `replay`(v0) @signature `Lio/reactivex/Observable;.replay:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L427c02.  v0:= temp @kind object;
  #L427c04.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ReplayCallable;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L427c18.  call temp:= `call`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ReplayCallable;.call:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L427c1e.  v0:= temp @kind object;
  #L427c20.  return v0 @kind object;
}
