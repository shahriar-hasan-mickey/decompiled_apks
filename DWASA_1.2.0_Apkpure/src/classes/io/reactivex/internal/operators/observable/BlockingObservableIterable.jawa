record `io.reactivex.internal.operators.observable.BlockingObservableIterable` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface {
  `int` `io.reactivex.internal.operators.observable.BlockingObservableIterable.bufferSize` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.BlockingObservableIterable.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.BlockingObservableIterable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableIterable;.<init>:(Lio/reactivex/ObservableSource;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L41bdec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41bdf2.  v0.`io.reactivex.internal.operators.observable.BlockingObservableIterable.source` @type ^`io.reactivex.ObservableSource` := v1 @kind object;
  #L41bdf6.  v0.`io.reactivex.internal.operators.observable.BlockingObservableIterable.bufferSize` @type ^`int` := v2;
  #L41bdfa.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.internal.operators.observable.BlockingObservableIterable` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableIterable;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41bdc0.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator`;
  #L41bdc4.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableIterable.bufferSize` @type ^`int`;
  #L41bdc8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableIterable$BlockingObservableIterator;.<init>:(I)V` @kind direct;
  #L41bdce.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableIterable.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L41bdd2.  call `subscribe`(v1, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L41bdd8.  return v0 @kind object;
}
