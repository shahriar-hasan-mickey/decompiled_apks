record `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `long` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.delay` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.delayError` @AccessFlag FINAL;
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.downstream` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.unit` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.upstream` @AccessFlag ;
  `io.reactivex.Scheduler$Worker` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.w` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler$Worker` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42240c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L422412.  v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L422416.  v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.delay` @type ^`long` := v2 @kind wide;
  #L42241a.  v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L42241e.  v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.w` @type ^`io.reactivex.Scheduler$Worker` := v5 @kind object;
  #L422422.  v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.delayError` @type ^`boolean` := v6 @kind boolean;
  #L422426.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422438.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42243c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L422442.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L422446.  call `dispose`(v0) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L42244c.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4223ec.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L4223f0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/Scheduler$Worker;.isDisposed:()Z` @kind virtual;
  #L4223f6.  v0:= temp;
  #L4223f8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` v5 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L422460.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L422464.  v1:= new `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnComplete`;
  #L422468.  call `<init>`(v1, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver$OnComplete;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;)V` @kind direct;
  #L42246e.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.delay` @type ^`long` @kind wide;
  #L422472.  v4:= v5.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L422476.  call temp:= `schedule`(v0, v1, v2, v4) @signature `Lio/reactivex/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L42247c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L422490.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L422494.  v1:= new `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError`;
  #L422498.  call `<init>`(v1, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver$OnError;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;Ljava/lang/Throwable;)V` @kind direct;
  #L42249e.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.delayError` @type ^`boolean` @kind boolean;
  #L4224a2.  if v5 == 0 then goto L4224ac;
  #L4224a6.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.delay` @type ^`long` @kind wide;
  #L4224aa.  goto L4224b0;
  #L4224ac.  v2:= 0L;
  #L4224b0.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4224b4.  call temp:= `schedule`(v0, v1, v2, v5) @signature `Lio/reactivex/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L4224ba.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4224cc.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L4224d0.  v1:= new `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext`;
  #L4224d4.  call `<init>`(v1, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver$OnNext;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;Ljava/lang/Object;)V` @kind direct;
  #L4224da.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.delay` @type ^`long` @kind wide;
  #L4224de.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4224e2.  call temp:= `schedule`(v0, v1, v2, v5) @signature `Lio/reactivex/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L4224e8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4224fc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L422500.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L422506.  v0:= temp;
  #L422508.  if v0 == 0 then goto L42251a;
  #L42250c.  v1.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L422510.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L422514.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42251a.  return @kind void;
}
