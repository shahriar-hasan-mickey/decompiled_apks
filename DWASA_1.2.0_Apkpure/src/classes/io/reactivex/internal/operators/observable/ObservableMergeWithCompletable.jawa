record `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable.other` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/CompletableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429428.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L42942e.  v0.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable.other` @type ^`io.reactivex.CompletableSource` := v2 @kind object;
  #L429432.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L429444.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver`;
  #L429448.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L42944e.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L429454.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L429458.  call `subscribe`(v2, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L42945e.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable.other` @type ^`io.reactivex.CompletableSource` @kind object;
  #L429462.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.otherObserver` @type ^`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver` @kind object;
  #L429466.  call `subscribe`(v2, v0) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L42946c.  return @kind void;
}
