record `io.reactivex.internal.operators.observable.ObservableTimeInterval` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableTimeInterval.scheduler` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableTimeInterval.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeInterval` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeInterval;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4315e0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4315e6.  v0.`io.reactivex.internal.operators.observable.ObservableTimeInterval.scheduler` @type ^`io.reactivex.Scheduler` := v3 @kind object;
  #L4315ea.  v0.`io.reactivex.internal.operators.observable.ObservableTimeInterval.unit` @type ^`java.util.concurrent.TimeUnit` := v2 @kind object;
  #L4315ee.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableTimeInterval` v4 @kind this, `io.reactivex.Observer` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeInterval;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L431600.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableTimeInterval.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L431604.  v1:= new `io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver`;
  #L431608.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableTimeInterval.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L43160c.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableTimeInterval.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L431610.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeInterval$TimeIntervalObserver;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L431616.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L43161c.  return @kind void;
}
