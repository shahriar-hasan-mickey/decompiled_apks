record `io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable.downstream` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable$IgnoreObservable;.<init>:(Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L427694.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42769a.  v0.`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable.downstream` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L42769e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable$IgnoreObservable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4276b0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4276b4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4276ba.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable$IgnoreObservable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427674.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L427678.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42767e.  v0:= temp;
  #L427680.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable$IgnoreObservable;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4276cc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L4276d0.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L4276d6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable$IgnoreObservable;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4276e8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L4276ec.  call `onError`(v0, v2) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4276f2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable$IgnoreObservable;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L427704.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable$IgnoreObservable;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L427718.  v0.`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable.upstream` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L42771c.  v1:= v0.`io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L427720.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L427726.  return @kind void;
}
