record `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver` @kind class @AccessFlag FINAL extends `io.reactivex.observers.DisposableObserver` @kind class {
  `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver` `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver.parent` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L433644.  call `<init>`(v0) @signature `Lio/reactivex/observers/DisposableObserver;.<init>:()V` @kind direct;
  #L43364a.  v0.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver` := v1 @kind object;
  #L43364e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L433660.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver` @kind object;
  #L433664.  call `onComplete`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver;.onComplete:()V` @kind virtual;
  #L43366a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43367c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver` @kind object;
  #L433680.  call `error`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver;.error:(Ljava/lang/Throwable;)V` @kind virtual;
  #L433686.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L433698.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver` @kind object;
  #L43369c.  call `open`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver;.open:(Ljava/lang/Object;)V` @kind virtual;
  #L4336a2.  return @kind void;
}
