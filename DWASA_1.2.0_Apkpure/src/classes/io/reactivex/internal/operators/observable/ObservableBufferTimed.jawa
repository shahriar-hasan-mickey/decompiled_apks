record `io.reactivex.internal.operators.observable.ObservableBufferTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableBufferTimed.bufferSupplier` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableBufferTimed.maxSize` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableBufferTimed.restartTimerOnMaxSize` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableBufferTimed.scheduler` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableBufferTimed.timeskip` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableBufferTimed.timespan` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableBufferTimed.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableBufferTimed` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.Scheduler` v7 @kind object, `java.util.concurrent.Callable` v8 @kind object, `int` v9 , `boolean` v10 ) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L41f160.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L41f166.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timespan` @type ^`long` := v2 @kind wide;
  #L41f16a.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timeskip` @type ^`long` := v4 @kind wide;
  #L41f16e.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.unit` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L41f172.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.scheduler` @type ^`io.reactivex.Scheduler` := v7 @kind object;
  #L41f176.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.bufferSupplier` @type ^`java.util.concurrent.Callable` := v8 @kind object;
  #L41f17a.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.maxSize` @type ^`int` := v9;
  #L41f17e.  v0.`io.reactivex.internal.operators.observable.ObservableBufferTimed.restartTimerOnMaxSize` @type ^`boolean` := v10 @kind boolean;
  #L41f182.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableBufferTimed` v11 @kind this, `io.reactivex.Observer` v12 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L41f194.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timespan` @type ^`long` @kind wide;
  #L41f198.  v2:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timeskip` @type ^`long` @kind wide;
  #L41f19c.  v4:= lcmp(v0, v2);
  #L41f1a0.  if v4 != 0 then goto L41f1e4;
  #L41f1a4.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.maxSize` @type ^`int`;
  #L41f1a8.  v1:= 2147483647I;
  #L41f1ae.  if v0 != v1 then goto L41f1e4;
  #L41f1b2.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L41f1b6.  v8:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver`;
  #L41f1ba.  v2:= new `io.reactivex.observers.SerializedObserver`;
  #L41f1be.  call `<init>`(v2, v12) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L41f1c4.  v3:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.bufferSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L41f1c8.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timespan` @type ^`long` @kind wide;
  #L41f1cc.  v6:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L41f1d0.  v7:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L41f1d4.  v1:= v8 @kind object;
  #L41f1d6.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactUnboundedObserver;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L41f1dc.  call `subscribe`(v0, v8) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L41f1e2.  return @kind void;
  #L41f1e4.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L41f1e8.  call temp:= `createWorker`(v0) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L41f1ee.  v9:= temp @kind object;
  #L41f1f0.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timespan` @type ^`long` @kind wide;
  #L41f1f4.  v2:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timeskip` @type ^`long` @kind wide;
  #L41f1f8.  v4:= lcmp(v0, v2);
  #L41f1fc.  if v4 != 0 then goto L41f236;
  #L41f200.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L41f204.  v10:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver`;
  #L41f208.  v2:= new `io.reactivex.observers.SerializedObserver`;
  #L41f20c.  call `<init>`(v2, v12) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L41f212.  v3:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.bufferSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L41f216.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timespan` @type ^`long` @kind wide;
  #L41f21a.  v6:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L41f21e.  v7:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.maxSize` @type ^`int`;
  #L41f222.  v8:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.restartTimerOnMaxSize` @type ^`boolean` @kind boolean;
  #L41f226.  v1:= v10 @kind object;
  #L41f228.  call `<init>`(v1, v2, v3, v4, v6, v7, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferExactBoundedObserver;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;IZLio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L41f22e.  call `subscribe`(v0, v10) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L41f234.  return @kind void;
  #L41f236.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L41f23a.  v10:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver`;
  #L41f23e.  v2:= new `io.reactivex.observers.SerializedObserver`;
  #L41f242.  call `<init>`(v2, v12) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L41f248.  v3:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.bufferSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L41f24c.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timespan` @type ^`long` @kind wide;
  #L41f250.  v6:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.timeskip` @type ^`long` @kind wide;
  #L41f254.  v8:= v11.`io.reactivex.internal.operators.observable.ObservableBufferTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L41f258.  v1:= v10 @kind object;
  #L41f25a.  call `<init>`(v1, v2, v3, v4, v6, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/Callable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L41f260.  call `subscribe`(v0, v10) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L41f266.  return @kind void;
}
