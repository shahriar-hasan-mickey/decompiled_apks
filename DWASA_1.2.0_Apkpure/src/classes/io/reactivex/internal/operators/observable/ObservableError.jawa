record `io.reactivex.internal.operators.observable.ObservableError` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableError.errorSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableError` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableError;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4239f4.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L4239fa.  v0.`io.reactivex.internal.operators.observable.ObservableError.errorSupplier` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L4239fe.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableError` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableError;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L423a10.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableError.errorSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L423a14.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L423a1a.  v0:= temp @kind object;
  #L423a1c.  v1:= "Callable returned null throwable. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L423a20.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423a26.  v0:= temp @kind object;
  #L423a28.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L423a2c.  goto L423a36;
  #L423a2e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L423a30.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L423a36.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L423a3c.  return @kind void;
  catch `java.lang.Throwable` @[L423a10..L423a2c] goto L423a2e;
}
