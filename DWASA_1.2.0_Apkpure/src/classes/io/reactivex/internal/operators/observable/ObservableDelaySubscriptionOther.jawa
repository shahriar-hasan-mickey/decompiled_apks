record `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther.main` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther.other` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L422690.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L422696.  v0.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther.main` @type ^`io.reactivex.ObservableSource` := v1 @kind object;
  #L42269a.  v0.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther.other` @type ^`io.reactivex.ObservableSource` := v2 @kind object;
  #L42269e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4226b0.  v0:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L4226b4.  call `<init>`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4226ba.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4226c0.  v1:= new `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver`;
  #L4226c4.  call `<init>`(v1, v2, v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther$DelayObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther;Lio/reactivex/internal/disposables/SequentialDisposable;Lio/reactivex/Observer;)V` @kind direct;
  #L4226ca.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther.other` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4226ce.  call `subscribe`(v3, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4226d4.  return @kind void;
}
