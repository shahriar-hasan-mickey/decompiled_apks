record `io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.ArrayCompositeDisposable` `io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.frc` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.notSkipping` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.notSkippingLocal` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.internal.disposables.ArrayCompositeDisposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$SkipUntilObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/internal/disposables/ArrayCompositeDisposable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42f5bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42f5c2.  v0.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L42f5c6.  v0.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.frc` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` := v2 @kind object;
  #L42f5ca.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$SkipUntilObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f5dc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.frc` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind object;
  #L42f5e0.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @kind virtual;
  #L42f5e6.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42f5ea.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L42f5f0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$SkipUntilObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f604.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.frc` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind object;
  #L42f608.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @kind virtual;
  #L42f60e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42f612.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42f618.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$SkipUntilObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f62c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.notSkippingLocal` @type ^`boolean` @kind boolean;
  #L42f630.  if v0 == 0 then goto L42f640;
  #L42f634.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42f638.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L42f63e.  goto L42f658;
  #L42f640.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.notSkipping` @type ^`boolean` @kind boolean;
  #L42f644.  if v0 == 0 then goto L42f658;
  #L42f648.  v0:= 1I;
  #L42f64a.  v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.notSkippingLocal` @type ^`boolean` := v0 @kind boolean;
  #L42f64e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42f652.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L42f658.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver` v2 @kind this, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil$SkipUntilObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42f66c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42f670.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42f676.  v0:= temp;
  #L42f678.  if v0 == 0 then goto L42f68c;
  #L42f67c.  v2.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v3 @kind object;
  #L42f680.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver.frc` @type ^`io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind object;
  #L42f684.  v1:= 0I;
  #L42f686.  call temp:= `setResource`(v0, v1, v3) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.setResource:(ILio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L42f68c.  return @kind void;
}
