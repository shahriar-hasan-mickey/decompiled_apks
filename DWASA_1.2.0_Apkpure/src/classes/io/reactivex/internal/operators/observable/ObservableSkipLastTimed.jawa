record `io.reactivex.internal.operators.observable.ObservableSkipLastTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `int` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.bufferSize` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.delayError` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.scheduler` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.time` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableSkipLastTimed.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSkipLastTimed` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLastTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f508.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L42f50e.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.time` @type ^`long` := v2 @kind wide;
  #L42f512.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L42f516.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.scheduler` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L42f51a.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.bufferSize` @type ^`int` := v6;
  #L42f51e.  v0.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.delayError` @type ^`boolean` := v7 @kind boolean;
  #L42f522.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableSkipLastTimed` v10 @kind this, `io.reactivex.Observer` v11 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLastTimed;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L42f534.  v0:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L42f538.  v9:= new `io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver`;
  #L42f53c.  v3:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.time` @type ^`long` @kind wide;
  #L42f540.  v5:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L42f544.  v6:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L42f548.  v7:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.bufferSize` @type ^`int`;
  #L42f54c.  v8:= v10.`io.reactivex.internal.operators.observable.ObservableSkipLastTimed.delayError` @type ^`boolean` @kind boolean;
  #L42f550.  v1:= v9 @kind object;
  #L42f552.  v2:= v11 @kind object;
  #L42f554.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLastTimed$SkipLastTimedObserver;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L42f55a.  call `subscribe`(v0, v9) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L42f560.  return @kind void;
}
