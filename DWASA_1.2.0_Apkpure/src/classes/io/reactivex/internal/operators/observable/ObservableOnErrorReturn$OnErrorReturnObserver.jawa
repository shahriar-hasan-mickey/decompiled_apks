record `io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.upstream` @AccessFlag ;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.valueSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$OnErrorReturnObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42a3e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42a3e6.  v0.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L42a3ea.  v0.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.valueSupplier` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L42a3ee.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$OnErrorReturnObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a400.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42a404.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42a40a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$OnErrorReturnObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a3c0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42a3c4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42a3ca.  v0:= temp;
  #L42a3cc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$OnErrorReturnObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a41c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42a420.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L42a426.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$OnErrorReturnObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42a438.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.valueSupplier` @type ^`io.reactivex.functions.Function` @kind object;
  #L42a43c.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a442.  v0:= temp @kind object;
  #L42a444.  if v0 != 0 then goto L42a468;
  #L42a448.  v0:= new `java.lang.NullPointerException`;
  #L42a44c.  v1:= "The supplied value is null" @kind object;
  #L42a450.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42a456.  call temp:= `initCause`(v0, v6) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L42a45c.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42a460.  call `onError`(v6, v0) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42a466.  return @kind void;
  #L42a468.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42a46c.  call `onNext`(v6, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L42a472.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42a476.  call `onComplete`(v6) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L42a47c.  return @kind void;
  #L42a47e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42a480.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42a486.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42a48a.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L42a48e.  v3:= 2I;
  #L42a490.  v3:= new `java.lang.Throwable`[v3];
  #L42a494.  v4:= 0I;
  #L42a496.  v3[v4]:= v6 @kind object;
  #L42a49a.  v6:= 1I;
  #L42a49c.  v3[v6]:= v0 @kind object;
  #L42a4a0.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L42a4a6.  call `onError`(v1, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42a4ac.  return @kind void;
  catch `java.lang.Throwable` @[L42a438..L42a444] goto L42a47e;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$OnErrorReturnObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a4cc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42a4d0.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L42a4d6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$OnErrorReturnObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a4e8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42a4ec.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42a4f2.  v0:= temp;
  #L42a4f4.  if v0 == 0 then goto L42a506;
  #L42a4f8.  v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42a4fc.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42a500.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42a506.  return @kind void;
}
