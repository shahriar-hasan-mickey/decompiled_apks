record `io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver` `io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.parent` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableSubscribeOn` `io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableSubscribeOn` v1 @kind object, `io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$SubscribeTask;.<init>:(Lio/reactivex/internal/operators/observable/ObservableSubscribeOn;Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$SubscribeOnObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42faa0.  v0.`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableSubscribeOn` := v1 @kind object;
  #L42faa4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42faaa.  v0.`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.parent` @type ^`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver` := v2 @kind object;
  #L42faae.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$SubscribeTask;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42fac0.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableSubscribeOn` @kind object;
  #L42fac4.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableSubscribeOn.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L42fac8.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.parent` @type ^`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver` @kind object;
  #L42facc.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L42fad2.  return @kind void;
}
