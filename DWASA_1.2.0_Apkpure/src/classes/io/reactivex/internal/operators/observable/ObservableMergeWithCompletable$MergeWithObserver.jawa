record `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.internal.util.AtomicThrowable` `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.error` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDisposable` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDone` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.otherDone` @AccessFlag VOLATILE;
  `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver` `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.otherObserver` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4292c4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4292ca.  v0.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4292ce.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4292d2.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4292d8.  v0.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDisposable` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4292dc.  v1:= new `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver`;
  #L4292e0.  call `<init>`(v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver$OtherObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;)V` @kind direct;
  #L4292e6.  v0.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.otherObserver` @type ^`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver` := v1 @kind object;
  #L4292ea.  v1:= new `io.reactivex.internal.util.AtomicThrowable`;
  #L4292ee.  call `<init>`(v1) @signature `Lio/reactivex/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4292f4.  v0.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.error` @type ^`io.reactivex.internal.util.AtomicThrowable` := v1 @kind object;
  #L4292f8.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42930c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDisposable` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L429310.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L429316.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.otherObserver` @type ^`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver` @kind object;
  #L42931a.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L429320.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429298.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDisposable` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L42929c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4292a2.  v0:= temp @kind object;
  #L4292a4.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4292a8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4292ae.  v0:= temp;
  #L4292b0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429334.  v0:= 1I;
  #L429336.  v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDone` @type ^`boolean` := v0 @kind boolean;
  #L42933a.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.otherDone` @type ^`boolean` @kind boolean;
  #L42933e.  if v0 == 0 then goto L429350;
  #L429342.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L429346.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.error` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L42934a.  call `onComplete`(v0, v2, v1) @signature `Lio/reactivex/internal/util/HalfSerializer;.onComplete:(Lio/reactivex/Observer;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V` @kind static;
  #L429350.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429364.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDisposable` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L429368.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42936e.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L429372.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.error` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L429376.  call `onError`(v0, v3, v2, v1) @signature `Lio/reactivex/internal/util/HalfSerializer;.onError:(Lio/reactivex/Observer;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V` @kind static;
  #L42937c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429390.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L429394.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.error` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L429398.  call `onNext`(v0, v3, v2, v1) @signature `Lio/reactivex/internal/util/HalfSerializer;.onNext:(Lio/reactivex/Observer;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V` @kind static;
  #L42939e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4293b0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDisposable` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4293b4.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4293ba.  return @kind void;
}
procedure `void` `otherComplete`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.otherComplete:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4293cc.  v0:= 1I;
  #L4293ce.  v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.otherDone` @type ^`boolean` := v0 @kind boolean;
  #L4293d2.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDone` @type ^`boolean` @kind boolean;
  #L4293d6.  if v0 == 0 then goto L4293e8;
  #L4293da.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4293de.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.error` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L4293e2.  call `onComplete`(v0, v2, v1) @signature `Lio/reactivex/internal/util/HalfSerializer;.onComplete:(Lio/reactivex/Observer;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V` @kind static;
  #L4293e8.  return @kind void;
}
procedure `void` `otherError`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.otherError:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4293fc.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.mainDisposable` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L429400.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L429406.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42940a.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.error` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L42940e.  call `onError`(v0, v3, v2, v1) @signature `Lio/reactivex/internal/util/HalfSerializer;.onError:(Lio/reactivex/Observer;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V` @kind static;
  #L429414.  return @kind void;
}
