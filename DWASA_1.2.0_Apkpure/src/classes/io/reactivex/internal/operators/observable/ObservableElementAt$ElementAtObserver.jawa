record `io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `long` `io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.count` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.defaultValue` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.done` @AccessFlag ;
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.downstream` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.errorOnFewer` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.index` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$ElementAtObserver;.<init>:(Lio/reactivex/Observer;JLjava/lang/Object;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L423428.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42342e.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L423432.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.index` @type ^`long` := v2 @kind wide;
  #L423436.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.defaultValue` @type ^`java.lang.Object` := v4 @kind object;
  #L42343a.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.errorOnFewer` @type ^`boolean` := v5 @kind boolean;
  #L42343e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$ElementAtObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L423450.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L423454.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42345a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$ElementAtObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L423408.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42340c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L423412.  v0:= temp;
  #L423414.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$ElementAtObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42346c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.done` @type ^`boolean` @kind boolean;
  #L423470.  if v0 != 0 then goto L4234b8;
  #L423474.  v0:= 1I;
  #L423476.  v2.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L42347a.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.defaultValue` @type ^`java.lang.Object` @kind object;
  #L42347e.  if v0 != 0 then goto L4234a0;
  #L423482.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.errorOnFewer` @type ^`boolean` @kind boolean;
  #L423486.  if v1 == 0 then goto L4234a0;
  #L42348a.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42348e.  v1:= new `java.util.NoSuchElementException`;
  #L423492.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L423498.  call `onError`(v0, v1) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42349e.  goto L4234b8;
  #L4234a0.  if v0 == 0 then goto L4234ae;
  #L4234a4.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4234a8.  call `onNext`(v1, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4234ae.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4234b2.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4234b8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$ElementAtObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4234cc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.done` @type ^`boolean` @kind boolean;
  #L4234d0.  if v0 == 0 then goto L4234dc;
  #L4234d4.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4234da.  return @kind void;
  #L4234dc.  v0:= 1I;
  #L4234de.  v1.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L4234e2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4234e6.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4234ec.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$ElementAtObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L423500.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.done` @type ^`boolean` @kind boolean;
  #L423504.  if v0 == 0 then goto L42350a;
  #L423508.  return @kind void;
  #L42350a.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.count` @type ^`long` @kind wide;
  #L42350e.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.index` @type ^`long` @kind wide;
  #L423512.  v4:= lcmp(v0, v2);
  #L423516.  if v4 != 0 then goto L423540;
  #L42351a.  v0:= 1I;
  #L42351c.  v5.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L423520.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L423524.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42352a.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L42352e.  call `onNext`(v0, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L423534.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L423538.  call `onComplete`(v6) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L42353e.  return @kind void;
  #L423540.  v2:= 1L;
  #L423544.  v0:= v0 + v2 @kind long;
  #L423546.  v5.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.count` @type ^`long` := v0 @kind wide;
  #L42354a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$ElementAtObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42355c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L423560.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L423566.  v0:= temp;
  #L423568.  if v0 == 0 then goto L42357a;
  #L42356c.  v1.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L423570.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L423574.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42357a.  return @kind void;
}
