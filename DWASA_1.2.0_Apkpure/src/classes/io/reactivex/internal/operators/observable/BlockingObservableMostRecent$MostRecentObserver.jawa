record `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` @kind class @AccessFlag FINAL extends `io.reactivex.observers.DefaultObserver` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver.value` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41c15c.  call `<init>`(v0) @signature `Lio/reactivex/observers/DefaultObserver;.<init>:()V` @kind direct;
  #L41c162.  call temp:= `next`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L41c168.  v1:= temp @kind object;
  #L41c16a.  v0.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver.value` @type ^`java.lang.Object` := v1 @kind object;
  #L41c16e.  return @kind void;
}
procedure `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator` `getIterable`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver;.getIterable:()Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver$Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41c140.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator`;
  #L41c144.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver$Iterator;.<init>:(Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver;)V` @kind direct;
  #L41c14a.  return v0 @kind object;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41c180.  call temp:= `complete`() @signature `Lio/reactivex/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L41c186.  v0:= temp @kind object;
  #L41c188.  v1.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver.value` @type ^`java.lang.Object` := v0 @kind object;
  #L41c18c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L41c1a0.  call temp:= `error`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L41c1a6.  v1:= temp @kind object;
  #L41c1a8.  v0.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver.value` @type ^`java.lang.Object` := v1 @kind object;
  #L41c1ac.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L41c1c0.  call temp:= `next`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L41c1c6.  v1:= temp @kind object;
  #L41c1c8.  v0.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver.value` @type ^`java.lang.Object` := v1 @kind object;
  #L41c1cc.  return @kind void;
}
