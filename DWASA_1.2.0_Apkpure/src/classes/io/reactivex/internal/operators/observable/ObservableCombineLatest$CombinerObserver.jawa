record `io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface {
  `int` `io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.index` @AccessFlag FINAL;
  `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` `io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$CombinerObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41fbd0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L41fbd6.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` := v1 @kind object;
  #L41fbda.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.index` @type ^`int` := v2;
  #L41fbde.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$CombinerObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L41fbf0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L41fbf6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$CombinerObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41fc08.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` @kind object;
  #L41fc0c.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.index` @type ^`int`;
  #L41fc10.  call `innerComplete`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.innerComplete:(I)V` @kind virtual;
  #L41fc16.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$CombinerObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41fc28.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` @kind object;
  #L41fc2c.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.index` @type ^`int`;
  #L41fc30.  call `innerError`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.innerError:(ILjava/lang/Throwable;)V` @kind virtual;
  #L41fc36.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$CombinerObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41fc48.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` @kind object;
  #L41fc4c.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver.index` @type ^`int`;
  #L41fc50.  call `innerNext`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.innerNext:(ILjava/lang/Object;)V` @kind virtual;
  #L41fc56.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$CombinerObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L41fc68.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L41fc6e.  return @kind void;
}
