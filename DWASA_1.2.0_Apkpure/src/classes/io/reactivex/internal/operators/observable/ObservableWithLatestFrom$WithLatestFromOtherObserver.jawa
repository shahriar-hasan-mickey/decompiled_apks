record `io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver` `io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver.parent` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableWithLatestFrom` `io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableWithLatestFrom` v1 @kind object, `io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$WithLatestFromOtherObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom;Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$WithLatestFromObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L435218.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFrom` := v1 @kind object;
  #L43521c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L435222.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver` := v2 @kind object;
  #L435226.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$WithLatestFromOtherObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L435238.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$WithLatestFromOtherObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43524c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver` @kind object;
  #L435250.  call `otherError`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$WithLatestFromObserver;.otherError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L435256.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$WithLatestFromOtherObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L435268.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver` @kind object;
  #L43526c.  call `lazySet`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$WithLatestFromObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L435272.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$WithLatestFromOtherObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L435284.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver` @kind object;
  #L435288.  call temp:= `setOther`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$WithLatestFromObserver;.setOther:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L43528e.  return @kind void;
}
