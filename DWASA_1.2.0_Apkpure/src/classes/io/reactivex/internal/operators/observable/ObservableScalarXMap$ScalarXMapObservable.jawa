record `io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable` @kind class @AccessFlag FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable.mapper` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable.value` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable` v0 @kind this, `java.lang.Object` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarXMapObservable;.<init>:(Ljava/lang/Object;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42df24.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L42df2a.  v0.`io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable.value` @type ^`java.lang.Object` := v1 @kind object;
  #L42df2e.  v0.`io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L42df32.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarXMapObservable;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42df44.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L42df48.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable.value` @type ^`java.lang.Object` @kind object;
  #L42df4c.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42df52.  v0:= temp @kind object;
  #L42df54.  v1:= "The mapper returned a null ObservableSource" @kind object;
  #L42df58.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42df5e.  v0:= temp @kind object;
  #L42df60.  v0:= (`io.reactivex.ObservableSource`) v0 @kind object;
  #L42df64.  v1:= instanceof @variable v0 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L42df68.  if v1 == 0 then goto L42dfac;
  #L42df6c.  v0:= (`java.util.concurrent.Callable`) v0 @kind object;
  #L42df70.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L42df76.  v0:= temp @kind object;
  #L42df78.  if v0 != 0 then goto L42df84;
  #L42df7c.  call `complete`(v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L42df82.  return @kind void;
  #L42df84.  v1:= new `io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable`;
  #L42df88.  call `<init>`(v1, v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.<init>:(Lio/reactivex/Observer;Ljava/lang/Object;)V` @kind direct;
  #L42df8e.  call `onSubscribe`(v3, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42df94.  call `run`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.run:()V` @kind virtual;
  #L42df9a.  goto L42dfb2;
  #L42df9c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42df9e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42dfa4.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L42dfaa.  return @kind void;
  #L42dfac.  call `subscribe`(v0, v3) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L42dfb2.  return @kind void;
  #L42dfb4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42dfb6.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L42dfbc.  return @kind void;
  catch `java.lang.Throwable` @[L42df44..L42df64] goto L42dfb4;
  catch `java.lang.Throwable` @[L42df6c..L42df78] goto L42df9c;
}
