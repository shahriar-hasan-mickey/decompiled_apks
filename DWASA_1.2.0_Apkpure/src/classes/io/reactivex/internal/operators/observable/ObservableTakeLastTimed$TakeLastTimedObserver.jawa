record `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `boolean` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @AccessFlag VOLATILE;
  `long` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.count` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.delayError` @AccessFlag FINAL;
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.downstream` @AccessFlag FINAL;
  `java.lang.Throwable` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.error` @AccessFlag ;
  `io.reactivex.internal.queue.SpscLinkedArrayQueue` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.scheduler` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.time` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.unit` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.Scheduler` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.<init>:(Lio/reactivex/Observer;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4306e0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4306e6.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4306ea.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.count` @type ^`long` := v2 @kind wide;
  #L4306ee.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.time` @type ^`long` := v4 @kind wide;
  #L4306f2.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L4306f6.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.scheduler` @type ^`io.reactivex.Scheduler` := v7 @kind object;
  #L4306fa.  v1:= new `io.reactivex.internal.queue.SpscLinkedArrayQueue`;
  #L4306fe.  call `<init>`(v1, v8) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L430704.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` := v1 @kind object;
  #L430708.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.delayError` @type ^`boolean` := v9 @kind boolean;
  #L43070c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L430720.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @type ^`boolean` @kind boolean;
  #L430724.  if v0 != 0 then goto L430750;
  #L430728.  v0:= 1I;
  #L43072a.  v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L43072e.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L430732.  call `dispose`(v1) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L430738.  v1:= 0I;
  #L43073a.  call temp:= `compareAndSet`(v2, v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.compareAndSet:(ZZ)Z` @kind virtual;
  #L430740.  v0:= temp;
  #L430742.  if v0 == 0 then goto L430750;
  #L430746.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L43074a.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L430750.  return @kind void;
}
procedure `void` `drain`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v13 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.drain:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L430764.  v0:= 1I;
  #L430766.  v1:= 0I;
  #L430768.  call temp:= `compareAndSet`(v13, v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.compareAndSet:(ZZ)Z` @kind virtual;
  #L43076e.  v2:= temp;
  #L430770.  if v2 != 0 then goto L430776;
  #L430774.  return @kind void;
  #L430776.  v2:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L43077a.  v3:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L43077e.  v4:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.delayError` @type ^`boolean` @kind boolean;
  #L430782.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @type ^`boolean` @kind boolean;
  #L430786.  if v5 == 0 then goto L430792;
  #L43078a.  call `clear`(v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L430790.  return @kind void;
  #L430792.  if v4 != 0 then goto L4307ac;
  #L430796.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.error` @type ^`java.lang.Throwable` @kind object;
  #L43079a.  if v5 == 0 then goto L4307ac;
  #L43079e.  call `clear`(v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4307a4.  call `onError`(v2, v5) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4307aa.  return @kind void;
  #L4307ac.  call temp:= `poll`(v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4307b2.  v5:= temp @kind object;
  #L4307b4.  if v5 != 0 then goto L4307bc;
  #L4307b8.  v6:= 1I;
  #L4307ba.  goto L4307be;
  #L4307bc.  v6:= 0I;
  #L4307be.  if v6 == 0 then goto L4307da;
  #L4307c2.  v0:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.error` @type ^`java.lang.Throwable` @kind object;
  #L4307c6.  if v0 == 0 then goto L4307d2;
  #L4307ca.  call `onError`(v2, v0) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4307d0.  goto L4307d8;
  #L4307d2.  call `onComplete`(v2) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4307d8.  return @kind void;
  #L4307da.  call temp:= `poll`(v3) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4307e0.  v6:= temp @kind object;
  #L4307e2.  v5:= (`java.lang.Long`) v5 @kind object;
  #L4307e6.  call temp:= `longValue`(v5) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4307ec.  v7:= temp @kind wide;
  #L4307ee.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L4307f2.  v9:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4307f6.  call temp:= `now`(v5, v9) @signature `Lio/reactivex/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4307fc.  v9:= temp @kind wide;
  #L4307fe.  v11:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.time` @type ^`long` @kind wide;
  #L430802.  v9:= v9 - v11 @kind long;
  #L430804.  v5:= lcmp(v7, v9);
  #L430808.  if v5 >= 0 then goto L43080e;
  #L43080c.  goto L430782;
  #L43080e.  call `onNext`(v2, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L430814.  goto L430782;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4306c8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4306cc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L430828.  call `drain`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.drain:()V` @kind virtual;
  #L43082e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L430840.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.error` @type ^`java.lang.Throwable` := v1 @kind object;
  #L430844.  call `drain`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.drain:()V` @kind virtual;
  #L43084a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v13 @kind this, `java.lang.Object` v14 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L43085c.  v0:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @type ^`io.reactivex.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L430860.  v1:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L430864.  v2:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L430868.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L43086e.  v1:= temp @kind wide;
  #L430870.  v3:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.time` @type ^`long` @kind wide;
  #L430874.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.count` @type ^`long` @kind wide;
  #L430878.  v7:= 1I;
  #L43087a.  v8:= 9223372036854775807L;
  #L430884.  v10:= lcmp(v5, v8);
  #L430888.  if v10 != 0 then goto L430890;
  #L43088c.  v8:= 1I;
  #L43088e.  goto L430892;
  #L430890.  v8:= 0I;
  #L430892.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L430898.  v9:= temp @kind object;
  #L43089a.  call temp:= `offer`(v0, v9, v14) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4308a0.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L4308a6.  v14:= temp;
  #L4308a8.  if v14 != 0 then goto L4308f2;
  #L4308ac.  call temp:= `peek`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.peek:()Ljava/lang/Object;` @kind virtual;
  #L4308b2.  v14:= temp @kind object;
  #L4308b4.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4308b8.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4308be.  v9:= temp @kind wide;
  #L4308c0.  v11:= v1 - v3 @kind long;
  #L4308c4.  v14:= lcmp(v9, v11);
  #L4308c8.  if v14 <= 0 then goto L4308e4;
  #L4308cc.  if v8 != 0 then goto L4308f2;
  #L4308d0.  call temp:= `size`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.size:()I` @kind virtual;
  #L4308d6.  v14:= temp;
  #L4308d8.  v14:= v14 ^> v7 @kind int;
  #L4308da.  v9:= (`long`) v14 @kind i2l;
  #L4308dc.  v14:= lcmp(v9, v5);
  #L4308e0.  if v14 <= 0 then goto L4308f2;
  #L4308e4.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4308ea.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4308f0.  goto L4308a0;
  #L4308f2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430904.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L430908.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43090e.  v0:= temp;
  #L430910.  if v0 == 0 then goto L430922;
  #L430914.  v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L430918.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L43091c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L430922.  return @kind void;
}
