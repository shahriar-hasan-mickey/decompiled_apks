record `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext.t` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver$OnNext;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4223a8.  v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` := v1 @kind object;
  #L4223ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4223b2.  v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext.t` @type ^`java.lang.Object` := v2 @kind object;
  #L4223b6.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver$OnNext;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4223c8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext.this$0` @type ^`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver` @kind object;
  #L4223cc.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4223d0.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext.t` @type ^`java.lang.Object` @kind object;
  #L4223d4.  call `onNext`(v0, v1) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4223da.  return @kind void;
}
