record `io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.upstream` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.value` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$TakeLastOneObserver;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L430590.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L430596.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L43059a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$TakeLastOneObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4305ac.  v0:= 0I;
  #L4305ae.  v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.value` @type ^`java.lang.Object` := v0 @kind object;
  #L4305b2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4305b6.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4305bc.  return @kind void;
}
procedure `void` `emit`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$TakeLastOneObserver;.emit:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4305d0.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.value` @type ^`java.lang.Object` @kind object;
  #L4305d4.  if v0 == 0 then goto L4305e8;
  #L4305d8.  v1:= 0I;
  #L4305da.  v2.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.value` @type ^`java.lang.Object` := v1 @kind object;
  #L4305de.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4305e2.  call `onNext`(v1, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4305e8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4305ec.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4305f2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$TakeLastOneObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430570.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L430574.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L43057a.  v0:= temp;
  #L43057c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$TakeLastOneObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L430604.  call `emit`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$TakeLastOneObserver;.emit:()V` @kind virtual;
  #L43060a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$TakeLastOneObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43061c.  v0:= 0I;
  #L43061e.  v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.value` @type ^`java.lang.Object` := v0 @kind object;
  #L430622.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L430626.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43062c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$TakeLastOneObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L430640.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.value` @type ^`java.lang.Object` := v1 @kind object;
  #L430644.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne$TakeLastOneObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430658.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43065c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L430662.  v0:= temp;
  #L430664.  if v0 == 0 then goto L430676;
  #L430668.  v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L43066c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L430670.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L430676.  return @kind void;
}
