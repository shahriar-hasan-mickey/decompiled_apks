record `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `boolean` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.done` @AccessFlag ;
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.downstream` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.index` @AccessFlag VOLATILE;
  `long` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.timeout` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.timer` @AccessFlag ;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.unit` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.upstream` @AccessFlag ;
  `io.reactivex.Scheduler$Worker` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.worker` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler$Worker` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L421ff8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L421ffe.  v0.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L422002.  v0.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.timeout` @type ^`long` := v2 @kind wide;
  #L422006.  v0.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L42200a.  v0.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.Scheduler$Worker` := v5 @kind object;
  #L42200e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422020.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L422024.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42202a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L42202e.  call `dispose`(v0) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L422034.  return @kind void;
}
procedure `void` `emit`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object, `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter` v7 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;.emit:(JLjava/lang/Object;Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L422048.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.index` @type ^`long` @kind wide;
  #L42204c.  v2:= lcmp(v4, v0);
  #L422050.  if v2 != 0 then goto L422064;
  #L422054.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L422058.  call `onNext`(v4, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L42205e.  call `dispose`(v7) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.dispose:()V` @kind virtual;
  #L422064.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L421fd8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L421fdc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/Scheduler$Worker;.isDisposed:()Z` @kind virtual;
  #L421fe2.  v0:= temp;
  #L421fe4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422078.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.done` @type ^`boolean` @kind boolean;
  #L42207c.  if v0 == 0 then goto L422082;
  #L422080.  return @kind void;
  #L422082.  v0:= 1I;
  #L422084.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L422088.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.timer` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42208c.  if v0 == 0 then goto L422096;
  #L422090.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L422096.  v0:= (`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter`) v0 @kind object;
  #L42209a.  if v0 == 0 then goto L4220a4;
  #L42209e.  call `run`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.run:()V` @kind virtual;
  #L4220a4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4220a8.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4220ae.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L4220b2.  call `dispose`(v0) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L4220b8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4220cc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.done` @type ^`boolean` @kind boolean;
  #L4220d0.  if v0 == 0 then goto L4220dc;
  #L4220d4.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4220da.  return @kind void;
  #L4220dc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.timer` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4220e0.  if v0 == 0 then goto L4220ea;
  #L4220e4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4220ea.  v0:= 1I;
  #L4220ec.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L4220f0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4220f4.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4220fa.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L4220fe.  call `dispose`(v2) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L422104.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L422118.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.done` @type ^`boolean` @kind boolean;
  #L42211c.  if v0 == 0 then goto L422122;
  #L422120.  return @kind void;
  #L422122.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.index` @type ^`long` @kind wide;
  #L422126.  v2:= 1L;
  #L42212a.  v0:= v0 + v2 @kind long;
  #L42212c.  v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.index` @type ^`long` := v0 @kind wide;
  #L422130.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.timer` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L422134.  if v2 == 0 then goto L42213e;
  #L422138.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42213e.  v2:= new `io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter`;
  #L422142.  call `<init>`(v2, v5, v0, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.<init>:(Ljava/lang/Object;JLio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;)V` @kind direct;
  #L422148.  v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.timer` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42214c.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L422150.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.timeout` @type ^`long` @kind wide;
  #L422154.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L422158.  call temp:= `schedule`(v5, v2, v0, v3) @signature `Lio/reactivex/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L42215e.  v5:= temp @kind object;
  #L422160.  call `setResource`(v2, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceEmitter;.setResource:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L422166.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$DebounceTimedObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422178.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42217c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L422182.  v0:= temp;
  #L422184.  if v0 == 0 then goto L422196;
  #L422188.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42218c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L422190.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L422196.  return @kind void;
}
