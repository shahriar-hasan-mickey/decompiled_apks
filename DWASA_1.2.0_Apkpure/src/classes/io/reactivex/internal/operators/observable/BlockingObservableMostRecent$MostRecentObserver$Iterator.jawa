record `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @AccessFlag PRIVATE;
  `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator` v0 @kind this, `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver$Iterator;.<init>:(Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41c104.  v0.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.this$0` @type ^`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` := v1 @kind object;
  #L41c108.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41c10e.  return @kind void;
}
procedure `boolean` `hasNext`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver$Iterator;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41c03c.  v0:= v1.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.this$0` @type ^`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` @kind object;
  #L41c040.  v0:= v0.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver.value` @type ^`java.lang.Object` @kind object;
  #L41c044.  v1.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` := v0 @kind object;
  #L41c048.  v0:= v1.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L41c04c.  call temp:= `isComplete`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L41c052.  v0:= temp;
  #L41c054.  v0:= v0 ^~ 1;
  #L41c058.  return v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver$Iterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41c06c.  v0:= 0I;
  #L41c06e.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L41c072.  if v1 != 0 then goto L41c082;
  #L41c076.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.this$0` @type ^`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver` @kind object;
  #L41c07a.  v1:= v1.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver.value` @type ^`java.lang.Object` @kind object;
  #L41c07e.  v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` := v1 @kind object;
  #L41c082.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L41c086.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L41c08c.  v1:= temp;
  #L41c08e.  if v1 != 0 then goto L41c0ca;
  #L41c092.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L41c096.  call temp:= `isError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L41c09c.  v1:= temp;
  #L41c09e.  if v1 != 0 then goto L41c0b4;
  #L41c0a2.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L41c0a6.  call temp:= `getValue`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L41c0ac.  v1:= temp @kind object;
  #L41c0ae.  v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` := v0 @kind object;
  #L41c0b2.  return v1 @kind object;
  #L41c0b4.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L41c0b8.  call temp:= `getError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L41c0be.  v1:= temp @kind object;
  #L41c0c0.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L41c0c6.  v1:= temp @kind object;
  #L41c0c8.  throw v1;
  #L41c0ca.  v1:= new `java.util.NoSuchElementException`;
  #L41c0ce.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L41c0d4.  throw v1;
  #L41c0d6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41c0d8.  v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator.buf` @type ^`java.lang.Object` := v0 @kind object;
  #L41c0dc.  throw v1;
  catch `java.lang.Throwable` @[L41c06e..L41c0ae] goto L41c0d6;
  catch `java.lang.Throwable` @[L41c0b4..L41c0d6] goto L41c0d6;
}
procedure `void` `remove`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$MostRecentObserver$Iterator;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41c120.  v0:= new `java.lang.UnsupportedOperationException`;
  #L41c124.  v1:= "Read only iterator" @kind object;
  #L41c128.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41c12e.  throw v0;
}
