record `io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Consumer` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError.observer` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ObserverOnError;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L427b6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L427b72.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError.observer` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L427b76.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ObserverOnError;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L427b88.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L427b8c.  call `accept`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ObserverOnError;.accept:(Ljava/lang/Throwable;)V` @kind virtual;
  #L427b92.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ObserverOnError;.accept:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427ba4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError.observer` @type ^`io.reactivex.Observer` @kind object;
  #L427ba8.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L427bae.  return @kind void;
}
