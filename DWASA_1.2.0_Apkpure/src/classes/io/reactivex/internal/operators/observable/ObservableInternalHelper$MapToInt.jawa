record `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.functions.Function` @kind interface {
}
global `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[] `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L427ae4.  v0:= new `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`;
  #L427ae8.  v1:= 0I;
  #L427aea.  v2:= "INSTANCE" @kind object;
  #L427aee.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L427af4.  `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.INSTANCE` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` := v0 @kind object;
  #L427af8.  v0:= 1I;
  #L427afa.  v0:= new `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[v0];
  #L427afe.  v2:= `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.INSTANCE` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` @kind object;
  #L427b02.  v0[v1]:= v2 @kind object;
  #L427b06.  `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.$VALUES` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[] := v0 @kind object;
  #L427b0a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L427b1c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L427b22.  return @kind void;
}
procedure `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L427a80.  v0:= constclass @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` @kind object;
  #L427a84.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L427a8a.  v1:= temp @kind object;
  #L427a8c.  v1:= (`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`) v1 @kind object;
  #L427a90.  return v1 @kind object;
}
procedure `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[] `values`() @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.values:()[Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L427aa4.  v0:= `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.$VALUES` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[] @kind object;
  #L427aa8.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.clone:()Ljava/lang/Object;` @kind virtual;
  #L427aae.  v0:= temp @kind object;
  #L427ab0.  v0:= (`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[]) v0 @kind object;
  #L427ab4.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L427ac8.  v1:= 0I;
  #L427aca.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L427ad0.  v1:= temp @kind object;
  #L427ad2.  return v1 @kind object;
}
