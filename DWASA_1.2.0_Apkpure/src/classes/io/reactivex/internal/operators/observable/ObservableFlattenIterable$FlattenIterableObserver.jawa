record `io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.mapper` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42594c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L425952.  v0.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L425956.  v0.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L42595a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42596c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L425970.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L425976.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42597a.  v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42597e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42592c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L425930.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L425936.  v0:= temp;
  #L425938.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L425990.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L425994.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L425998.  if v0 != v1 then goto L42599e;
  #L42599c.  return @kind void;
  #L42599e.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4259a2.  v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4259a6.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4259aa.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4259b0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4259c4.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4259c8.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4259cc.  if v0 != v1 then goto L4259d8;
  #L4259d0.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4259d6.  return @kind void;
  #L4259d8.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4259dc.  v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4259e0.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L4259e4.  call `onError`(v0, v3) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4259ea.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4259fc.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L425a00.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L425a04.  if v0 != v1 then goto L425a0a;
  #L425a08.  return @kind void;
  #L425a0a.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L425a0e.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L425a14.  v4:= temp @kind object;
  #L425a16.  v4:= (`java.lang.Iterable`) v4 @kind object;
  #L425a1a.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L425a20.  v4:= temp @kind object;
  #L425a22.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L425a26.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L425a2c.  v1:= temp;
  #L425a2e.  if v1 == 0 then goto L425a66;
  #L425a32.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L425a38.  v1:= temp @kind object;
  #L425a3a.  v2:= "The iterator returned a null value" @kind object;
  #L425a3e.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425a44.  v1:= temp @kind object;
  #L425a46.  call `onNext`(v0, v1) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L425a4c.  goto L425a26;
  #L425a4e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L425a50.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L425a56.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L425a5a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L425a60.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L425a66.  return @kind void;
  #L425a68.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L425a6a.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L425a70.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L425a74.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L425a7a.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L425a80.  return @kind void;
  #L425a82.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L425a84.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L425a8a.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L425a8e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L425a94.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L425a9a.  return @kind void;
  catch `java.lang.Throwable` @[L425a0a..L425a22] goto L425a82;
  catch `java.lang.Throwable` @[L425a26..L425a2e] goto L425a68;
  catch `java.lang.Throwable` @[L425a32..L425a46] goto L425a4e;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$FlattenIterableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L425acc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L425ad0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L425ad6.  v0:= temp;
  #L425ad8.  if v0 == 0 then goto L425aea;
  #L425adc.  v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L425ae0.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L425ae4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L425aea.  return @kind void;
}
