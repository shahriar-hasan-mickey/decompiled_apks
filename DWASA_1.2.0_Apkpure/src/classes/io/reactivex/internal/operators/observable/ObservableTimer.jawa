record `io.reactivex.internal.operators.observable.ObservableTimer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableTimer.delay` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableTimer.scheduler` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableTimer.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimer` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L432504.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L43250a.  v0.`io.reactivex.internal.operators.observable.ObservableTimer.delay` @type ^`long` := v1 @kind wide;
  #L43250e.  v0.`io.reactivex.internal.operators.observable.ObservableTimer.unit` @type ^`java.util.concurrent.TimeUnit` := v3 @kind object;
  #L432512.  v0.`io.reactivex.internal.operators.observable.ObservableTimer.scheduler` @type ^`io.reactivex.Scheduler` := v4 @kind object;
  #L432516.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableTimer` v4 @kind this, `io.reactivex.Observer` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimer;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L432528.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver`;
  #L43252c.  call `<init>`(v0, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableTimer$TimerObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L432532.  call `onSubscribe`(v5, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L432538.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableTimer.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L43253c.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableTimer.delay` @type ^`long` @kind wide;
  #L432540.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableTimer.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L432544.  call temp:= `scheduleDirect`(v5, v0, v1, v3) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L43254a.  v5:= temp @kind object;
  #L43254c.  call `setResource`(v0, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableTimer$TimerObserver;.setResource:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L432552.  return @kind void;
}
