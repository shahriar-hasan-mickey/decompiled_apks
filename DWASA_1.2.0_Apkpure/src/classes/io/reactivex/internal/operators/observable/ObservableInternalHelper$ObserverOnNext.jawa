record `io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Consumer` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext.observer` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ObserverOnNext;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L427bc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L427bc6.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext.observer` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L427bca.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ObserverOnNext;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427bdc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext.observer` @type ^`io.reactivex.Observer` @kind object;
  #L427be0.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L427be6.  return @kind void;
}
