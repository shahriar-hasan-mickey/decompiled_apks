record `io.reactivex.internal.operators.observable.ObservableTimeoutTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.other` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.scheduler` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.timeout` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.<init>:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4322fc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L432302.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.timeout` @type ^`long` := v2 @kind wide;
  #L432306.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L43230a.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.scheduler` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L43230e.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.other` @type ^`io.reactivex.ObservableSource` := v6 @kind object;
  #L432312.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed` v10 @kind this, `io.reactivex.Observer` v11 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L432324.  v0:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.other` @type ^`io.reactivex.ObservableSource` @kind object;
  #L432328.  v1:= 0L;
  #L43232c.  if v0 != 0 then goto L43236a;
  #L432330.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver`;
  #L432334.  v5:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.timeout` @type ^`long` @kind wide;
  #L432338.  v7:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L43233c.  v3:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L432340.  call temp:= `createWorker`(v3) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L432346.  v8:= temp @kind object;
  #L432348.  v3:= v0 @kind object;
  #L43234a.  v4:= v11 @kind object;
  #L43234c.  call `<init>`(v3, v4, v5, v7, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$TimeoutObserver;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L432352.  call `onSubscribe`(v11, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L432358.  call `startTimeout`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$TimeoutObserver;.startTimeout:(J)V` @kind virtual;
  #L43235e.  v11:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L432362.  call `subscribe`(v11, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L432368.  goto L4323a6;
  #L43236a.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver`;
  #L43236e.  v5:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.timeout` @type ^`long` @kind wide;
  #L432372.  v7:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L432376.  v3:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L43237a.  call temp:= `createWorker`(v3) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L432380.  v8:= temp @kind object;
  #L432382.  v9:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.other` @type ^`io.reactivex.ObservableSource` @kind object;
  #L432386.  v3:= v0 @kind object;
  #L432388.  v4:= v11 @kind object;
  #L43238a.  call `<init>`(v3, v4, v5, v7, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$TimeoutFallbackObserver;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L432390.  call `onSubscribe`(v11, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L432396.  call `startTimeout`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$TimeoutFallbackObserver;.startTimeout:(J)V` @kind virtual;
  #L43239c.  v11:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4323a0.  call `subscribe`(v11, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4323a6.  return @kind void;
}
