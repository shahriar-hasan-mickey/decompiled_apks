record `io.reactivex.internal.operators.observable.ObservableCollect` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `io.reactivex.functions.BiConsumer` `io.reactivex.internal.operators.observable.ObservableCollect.collector` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableCollect.initialSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableCollect` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCollect;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L41fb58.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L41fb5e.  v0.`io.reactivex.internal.operators.observable.ObservableCollect.initialSupplier` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L41fb62.  v0.`io.reactivex.internal.operators.observable.ObservableCollect.collector` @type ^`io.reactivex.functions.BiConsumer` := v3 @kind object;
  #L41fb66.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableCollect` v4 @kind this, `io.reactivex.Observer` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCollect;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41fb78.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableCollect.initialSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L41fb7c.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L41fb82.  v0:= temp @kind object;
  #L41fb84.  v1:= "The initialSupplier returned a null value" @kind object;
  #L41fb88.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fb8e.  v0:= temp @kind object;
  #L41fb90.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableCollect.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L41fb94.  v2:= new `io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver`;
  #L41fb98.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableCollect.collector` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L41fb9c.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCollect$CollectObserver;.<init>:(Lio/reactivex/Observer;Ljava/lang/Object;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L41fba2.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L41fba8.  return @kind void;
  #L41fbaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41fbac.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L41fbb2.  return @kind void;
  catch `java.lang.Throwable` @[L41fb78..L41fb90] goto L41fbaa;
}
