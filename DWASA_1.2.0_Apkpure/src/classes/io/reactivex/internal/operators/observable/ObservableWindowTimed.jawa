record `io.reactivex.internal.operators.observable.ObservableWindowTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `int` `io.reactivex.internal.operators.observable.ObservableWindowTimed.bufferSize` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableWindowTimed.maxSize` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableWindowTimed.restartTimerOnMaxSize` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableWindowTimed.scheduler` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableWindowTimed.timeskip` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableWindowTimed.timespan` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableWindowTimed.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWindowTimed` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.Scheduler` v7 @kind object, `long` v8 , `int` v10 , `boolean` v11 ) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JIZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L434ee4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L434eea.  v0.`io.reactivex.internal.operators.observable.ObservableWindowTimed.timespan` @type ^`long` := v2 @kind wide;
  #L434eee.  v0.`io.reactivex.internal.operators.observable.ObservableWindowTimed.timeskip` @type ^`long` := v4 @kind wide;
  #L434ef2.  v0.`io.reactivex.internal.operators.observable.ObservableWindowTimed.unit` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L434ef6.  v0.`io.reactivex.internal.operators.observable.ObservableWindowTimed.scheduler` @type ^`io.reactivex.Scheduler` := v7 @kind object;
  #L434efa.  v0.`io.reactivex.internal.operators.observable.ObservableWindowTimed.maxSize` @type ^`long` := v8 @kind wide;
  #L434efe.  v0.`io.reactivex.internal.operators.observable.ObservableWindowTimed.bufferSize` @type ^`int` := v10;
  #L434f02.  v0.`io.reactivex.internal.operators.observable.ObservableWindowTimed.restartTimerOnMaxSize` @type ^`boolean` := v11 @kind boolean;
  #L434f06.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableWindowTimed` v11 @kind this, `io.reactivex.Observer` v12 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L434f18.  v1:= new `io.reactivex.observers.SerializedObserver`;
  #L434f1c.  call `<init>`(v1, v12) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L434f22.  v2:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.timespan` @type ^`long` @kind wide;
  #L434f26.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.timeskip` @type ^`long` @kind wide;
  #L434f2a.  v12:= lcmp(v2, v4);
  #L434f2e.  if v12 != 0 then goto L434fa0;
  #L434f32.  v2:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.maxSize` @type ^`long` @kind wide;
  #L434f36.  v4:= 9223372036854775807L;
  #L434f40.  v12:= lcmp(v2, v4);
  #L434f44.  if v12 != 0 then goto L434f70;
  #L434f48.  v12:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L434f4c.  v7:= new `io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver`;
  #L434f50.  v2:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.timespan` @type ^`long` @kind wide;
  #L434f54.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L434f58.  v5:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L434f5c.  v6:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.bufferSize` @type ^`int`;
  #L434f60.  v0:= v7 @kind object;
  #L434f62.  call `<init>`(v0, v1, v2, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed$WindowExactUnboundedObserver;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)V` @kind direct;
  #L434f68.  call `subscribe`(v12, v7) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L434f6e.  return @kind void;
  #L434f70.  v12:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L434f74.  v10:= new `io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver`;
  #L434f78.  v2:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.timespan` @type ^`long` @kind wide;
  #L434f7c.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L434f80.  v5:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L434f84.  v6:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.bufferSize` @type ^`int`;
  #L434f88.  v7:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.maxSize` @type ^`long` @kind wide;
  #L434f8c.  v9:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.restartTimerOnMaxSize` @type ^`boolean` @kind boolean;
  #L434f90.  v0:= v10 @kind object;
  #L434f92.  call `<init>`(v0, v1, v2, v4, v5, v6, v7, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IJZ)V` @kind direct;
  #L434f98.  call `subscribe`(v12, v10) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L434f9e.  return @kind void;
  #L434fa0.  v12:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L434fa4.  v9:= new `io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver`;
  #L434fa8.  v2:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.timespan` @type ^`long` @kind wide;
  #L434fac.  v4:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.timeskip` @type ^`long` @kind wide;
  #L434fb0.  v6:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L434fb4.  v0:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L434fb8.  call temp:= `createWorker`(v0) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L434fbe.  v7:= temp @kind object;
  #L434fc0.  v8:= v11.`io.reactivex.internal.operators.observable.ObservableWindowTimed.bufferSize` @type ^`int`;
  #L434fc4.  v0:= v9 @kind object;
  #L434fc6.  call `<init>`(v0, v1, v2, v4, v6, v7, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver;.<init>:(Lio/reactivex/Observer;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;I)V` @kind direct;
  #L434fcc.  call `subscribe`(v12, v9) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L434fd2.  return @kind void;
}
