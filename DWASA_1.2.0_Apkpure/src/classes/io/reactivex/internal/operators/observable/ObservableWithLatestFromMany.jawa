record `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.combiner` @AccessFlag FINAL;
  `io.reactivex.ObservableSource`[] `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.otherArray` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.otherIterable` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4356f4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4356fa.  v1:= 0I;
  #L4356fc.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.otherArray` @type ^`io.reactivex.ObservableSource`[] := v1 @kind object;
  #L435700.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.otherIterable` @type ^`java.lang.Iterable` := v2 @kind object;
  #L435704.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.combiner` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L435708.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource`[] v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;[Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4356cc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4356d2.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.otherArray` @type ^`io.reactivex.ObservableSource`[] := v2 @kind object;
  #L4356d6.  v1:= 0I;
  #L4356d8.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.otherIterable` @type ^`java.lang.Iterable` := v1 @kind object;
  #L4356dc.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.combiner` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L4356e0.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` v5 @kind this, `io.reactivex.Observer` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43571c.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.otherArray` @type ^`io.reactivex.ObservableSource`[] @kind object;
  #L435720.  if v0 != 0 then goto L435786;
  #L435724.  v0:= 8I;
  #L435728.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L43572c.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.otherIterable` @type ^`java.lang.Iterable` @kind object;
  #L435730.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L435736.  v1:= temp @kind object;
  #L435738.  v2:= 0I;
  #L43573a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L435740.  v3:= temp;
  #L435742.  if v3 == 0 then goto L435788;
  #L435746.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43574c.  v3:= temp @kind object;
  #L43574e.  v3:= (`io.reactivex.ObservableSource`) v3 @kind object;
  #L435752.  v4:= length @variable v0;
  #L435754.  if v2 != v4 then goto L43576a;
  #L435758.  v4:= v2 ^> 1;
  #L43575c.  v4:= v4 + v2 @kind int;
  #L43575e.  call temp:= `copyOf`(v0, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L435764.  v0:= temp @kind object;
  #L435766.  v0:= (`io.reactivex.ObservableSource`[]) v0 @kind object;
  #L43576a.  v4:= v2 + 1;
  #L43576e.  v0[v2]:= v3 @kind object;
  #L435772.  v2:= v4;
  #L435774.  goto L43573a;
  #L435776.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L435778.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43577e.  call `error`(v0, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L435784.  return @kind void;
  #L435786.  v2:= length @variable v0;
  #L435788.  if v2 != 0 then goto L4357ac;
  #L43578c.  v0:= new `io.reactivex.internal.operators.observable.ObservableMap`;
  #L435790.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L435794.  v2:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$SingletonArrayFunc`;
  #L435798.  call `<init>`(v2, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$SingletonArrayFunc;.<init>:(Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;)V` @kind direct;
  #L43579e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L4357a4.  call `subscribeActual`(v0, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableMap;.subscribeActual:(Lio/reactivex/Observer;)V` @kind virtual;
  #L4357aa.  return @kind void;
  #L4357ac.  v1:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver`;
  #L4357b0.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.combiner` @type ^`io.reactivex.functions.Function` @kind object;
  #L4357b4.  call `<init>`(v1, v6, v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;I)V` @kind direct;
  #L4357ba.  call `onSubscribe`(v6, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4357c0.  call `subscribe`(v1, v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;.subscribe:([Lio/reactivex/ObservableSource;I)V` @kind virtual;
  #L4357c6.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4357ca.  call `subscribe`(v6, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4357d0.  return @kind void;
  catch `java.lang.Throwable` @[L43572c..L435772] goto L435776;
}
