record `io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.downstream` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.item` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$LastObserver;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L428a18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L428a1e.  v0.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.downstream` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L428a22.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$LastObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428a34.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L428a38.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L428a3e.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L428a42.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L428a46.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$LastObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4289f4.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4289f8.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4289fc.  if v0 != v1 then goto L428a04;
  #L428a00.  v0:= 1I;
  #L428a02.  goto L428a06;
  #L428a04.  v0:= 0I;
  #L428a06.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$LastObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428a58.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L428a5c.  v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L428a60.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.item` @type ^`java.lang.Object` @kind object;
  #L428a64.  if v0 == 0 then goto L428a7a;
  #L428a68.  v1:= 0I;
  #L428a6a.  v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.item` @type ^`java.lang.Object` := v1 @kind object;
  #L428a6e.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L428a72.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L428a78.  goto L428a84;
  #L428a7a.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L428a7e.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L428a84.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$LastObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428a98.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L428a9c.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L428aa0.  v0:= 0I;
  #L428aa2.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.item` @type ^`java.lang.Object` := v0 @kind object;
  #L428aa6.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L428aaa.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L428ab0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$LastObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L428ac4.  v0.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.item` @type ^`java.lang.Object` := v1 @kind object;
  #L428ac8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$LastObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428adc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L428ae0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L428ae6.  v0:= temp;
  #L428ae8.  if v0 == 0 then goto L428afa;
  #L428aec.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L428af0.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L428af4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L428afa.  return @kind void;
}
