record `io.reactivex.internal.operators.observable.BlockingObservableLatest` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.BlockingObservableLatest.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.BlockingObservableLatest` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableLatest;.<init>:(Lio/reactivex/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L41c020.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41c026.  v0.`io.reactivex.internal.operators.observable.BlockingObservableLatest.source` @type ^`io.reactivex.ObservableSource` := v1 @kind object;
  #L41c02a.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.internal.operators.observable.BlockingObservableLatest` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableLatest;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41bfe8.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator`;
  #L41bfec.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableLatest$BlockingObservableLatestIterator;.<init>:()V` @kind direct;
  #L41bff2.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableLatest.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L41bff6.  call temp:= `wrap`(v1) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41bffc.  v1:= temp @kind object;
  #L41bffe.  call temp:= `materialize`(v1) @signature `Lio/reactivex/Observable;.materialize:()Lio/reactivex/Observable;` @kind virtual;
  #L41c004.  v1:= temp @kind object;
  #L41c006.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L41c00c.  return v0 @kind object;
}
