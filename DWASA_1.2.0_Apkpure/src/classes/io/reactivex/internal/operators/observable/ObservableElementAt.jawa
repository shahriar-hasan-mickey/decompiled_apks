record `io.reactivex.internal.operators.observable.ObservableElementAt` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableElementAt.defaultValue` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableElementAt.errorOnFewer` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableElementAt.index` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableElementAt` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt;.<init>:(Lio/reactivex/ObservableSource;JLjava/lang/Object;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L423934.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L42393a.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt.index` @type ^`long` := v2 @kind wide;
  #L42393e.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt.defaultValue` @type ^`java.lang.Object` := v4 @kind object;
  #L423942.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt.errorOnFewer` @type ^`boolean` := v5 @kind boolean;
  #L423946.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableElementAt` v8 @kind this, `io.reactivex.Observer` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L423958.  v0:= v8.`io.reactivex.internal.operators.observable.ObservableElementAt.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L42395c.  v7:= new `io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver`;
  #L423960.  v3:= v8.`io.reactivex.internal.operators.observable.ObservableElementAt.index` @type ^`long` @kind wide;
  #L423964.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableElementAt.defaultValue` @type ^`java.lang.Object` @kind object;
  #L423968.  v6:= v8.`io.reactivex.internal.operators.observable.ObservableElementAt.errorOnFewer` @type ^`boolean` @kind boolean;
  #L42396c.  v1:= v7 @kind object;
  #L42396e.  v2:= v9 @kind object;
  #L423970.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$ElementAtObserver;.<init>:(Lio/reactivex/Observer;JLjava/lang/Object;Z)V` @kind direct;
  #L423976.  call `subscribe`(v0, v7) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L42397c.  return @kind void;
}
