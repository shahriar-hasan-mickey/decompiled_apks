record `io.reactivex.internal.operators.observable.ObservableLift` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.AbstractObservableWithUpstream` @kind class {
  `io.reactivex.ObservableOperator` `io.reactivex.internal.operators.observable.ObservableLift.operator` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableLift` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableOperator` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLift;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableOperator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L428cd4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L428cda.  v0.`io.reactivex.internal.operators.observable.ObservableLift.operator` @type ^`io.reactivex.ObservableOperator` := v2 @kind object;
  #L428cde.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableLift` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLift;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428cf0.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLift.operator` @type ^`io.reactivex.ObservableOperator` @kind object;
  #L428cf4.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/ObservableOperator;.apply:(Lio/reactivex/Observer;)Lio/reactivex/Observer;` @kind interface;
  #L428cfa.  v3:= temp @kind object;
  #L428cfc.  v0:= new `java.lang.StringBuilder`;
  #L428d00.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L428d06.  v1:= "Operator " @kind object;
  #L428d0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L428d10.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableLift.operator` @type ^`io.reactivex.ObservableOperator` @kind object;
  #L428d14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L428d1a.  v1:= " returned a null Observer" @kind object;
  #L428d1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L428d24.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L428d2a.  v0:= temp @kind object;
  #L428d2c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L428d32.  v3:= temp @kind object;
  #L428d34.  v3:= (`io.reactivex.Observer`) v3 @kind object;
  #L428d38.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLift.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L428d3c.  call `subscribe`(v0, v3) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L428d42.  return @kind void;
  #L428d44.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L428d46.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L428d4c.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L428d52.  v0:= new `java.lang.NullPointerException`;
  #L428d56.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L428d5a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L428d60.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L428d66.  throw v0;
  #L428d68.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L428d6a.  throw v3;
  catch `java.lang.NullPointerException` @[L428cf0..L428d38] goto L428d68;
  catch `java.lang.Throwable` @[L428cf0..L428d38] goto L428d44;
}
