record `io.reactivex.internal.operators.single.SingleDelay$Delay$OnError` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.lang.Throwable` `io.reactivex.internal.operators.single.SingleDelay$Delay$OnError.e` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.single.SingleDelay$Delay` `io.reactivex.internal.operators.single.SingleDelay$Delay$OnError.this$1` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDelay$Delay$OnError` v0 @kind this, `io.reactivex.internal.operators.single.SingleDelay$Delay` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDelay$Delay$OnError;.<init>:(Lio/reactivex/internal/operators/single/SingleDelay$Delay;Ljava/lang/Throwable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43ab9c.  v0.`io.reactivex.internal.operators.single.SingleDelay$Delay$OnError.this$1` @type ^`io.reactivex.internal.operators.single.SingleDelay$Delay` := v1 @kind object;
  #L43aba0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43aba6.  v0.`io.reactivex.internal.operators.single.SingleDelay$Delay$OnError.e` @type ^`java.lang.Throwable` := v2 @kind object;
  #L43abaa.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.single.SingleDelay$Delay$OnError` v2 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDelay$Delay$OnError;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43abbc.  v0:= v2.`io.reactivex.internal.operators.single.SingleDelay$Delay$OnError.this$1` @type ^`io.reactivex.internal.operators.single.SingleDelay$Delay` @kind object;
  #L43abc0.  v0:= v0.`io.reactivex.internal.operators.single.SingleDelay$Delay.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43abc4.  v1:= v2.`io.reactivex.internal.operators.single.SingleDelay$Delay$OnError.e` @type ^`java.lang.Throwable` @kind object;
  #L43abc8.  call `onError`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43abce.  return @kind void;
}
