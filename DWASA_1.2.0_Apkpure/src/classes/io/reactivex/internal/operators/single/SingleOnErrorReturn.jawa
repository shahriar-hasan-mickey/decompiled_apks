record `io.reactivex.internal.operators.single.SingleOnErrorReturn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.single.SingleOnErrorReturn.source` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.single.SingleOnErrorReturn.value` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleOnErrorReturn.valueSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleOnErrorReturn` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43d850.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43d856.  v0.`io.reactivex.internal.operators.single.SingleOnErrorReturn.source` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L43d85a.  v0.`io.reactivex.internal.operators.single.SingleOnErrorReturn.valueSupplier` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43d85e.  v0.`io.reactivex.internal.operators.single.SingleOnErrorReturn.value` @type ^`java.lang.Object` := v3 @kind object;
  #L43d862.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleOnErrorReturn` v2 @kind this, `io.reactivex.SingleObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L43d874.  v0:= v2.`io.reactivex.internal.operators.single.SingleOnErrorReturn.source` @type ^`io.reactivex.SingleSource` @kind object;
  #L43d878.  v1:= new `io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn`;
  #L43d87c.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn$OnErrorReturn;.<init>:(Lio/reactivex/internal/operators/single/SingleOnErrorReturn;Lio/reactivex/SingleObserver;)V` @kind direct;
  #L43d882.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43d888.  return @kind void;
}
