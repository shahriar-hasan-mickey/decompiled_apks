record `io.reactivex.internal.operators.single.SingleDoOnEvent` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.functions.BiConsumer` `io.reactivex.internal.operators.single.SingleDoOnEvent.onEvent` @AccessFlag FINAL;
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.single.SingleDoOnEvent.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoOnEvent` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/BiConsumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43bb08.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43bb0e.  v0.`io.reactivex.internal.operators.single.SingleDoOnEvent.source` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L43bb12.  v0.`io.reactivex.internal.operators.single.SingleDoOnEvent.onEvent` @type ^`io.reactivex.functions.BiConsumer` := v2 @kind object;
  #L43bb16.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleDoOnEvent` v2 @kind this, `io.reactivex.SingleObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L43bb28.  v0:= v2.`io.reactivex.internal.operators.single.SingleDoOnEvent.source` @type ^`io.reactivex.SingleSource` @kind object;
  #L43bb2c.  v1:= new `io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent`;
  #L43bb30.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent$DoOnEvent;.<init>:(Lio/reactivex/internal/operators/single/SingleDoOnEvent;Lio/reactivex/SingleObserver;)V` @kind direct;
  #L43bb36.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43bb3c.  return @kind void;
}
