record `io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.observer` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.single.SingleOnErrorReturn` `io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn` v0 @kind this, `io.reactivex.internal.operators.single.SingleOnErrorReturn` v1 @kind object, `io.reactivex.SingleObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn$OnErrorReturn;.<init>:(Lio/reactivex/internal/operators/single/SingleOnErrorReturn;Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43d754.  v0.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.this$0` @type ^`io.reactivex.internal.operators.single.SingleOnErrorReturn` := v1 @kind object;
  #L43d758.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43d75e.  v0.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.observer` @type ^`io.reactivex.SingleObserver` := v2 @kind object;
  #L43d762.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn$OnErrorReturn;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43d774.  v0:= v5.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.this$0` @type ^`io.reactivex.internal.operators.single.SingleOnErrorReturn` @kind object;
  #L43d778.  v0:= v0.`io.reactivex.internal.operators.single.SingleOnErrorReturn.valueSupplier` @type ^`io.reactivex.functions.Function` @kind object;
  #L43d77c.  if v0 == 0 then goto L43d7c2;
  #L43d780.  v0:= v5.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.this$0` @type ^`io.reactivex.internal.operators.single.SingleOnErrorReturn` @kind object;
  #L43d784.  v0:= v0.`io.reactivex.internal.operators.single.SingleOnErrorReturn.valueSupplier` @type ^`io.reactivex.functions.Function` @kind object;
  #L43d788.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43d78e.  v0:= temp @kind object;
  #L43d790.  goto L43d7ca;
  #L43d792.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43d794.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43d79a.  v1:= v5.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d79e.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L43d7a2.  v3:= 2I;
  #L43d7a4.  v3:= new `java.lang.Throwable`[v3];
  #L43d7a8.  v4:= 0I;
  #L43d7aa.  v3[v4]:= v6 @kind object;
  #L43d7ae.  v6:= 1I;
  #L43d7b0.  v3[v6]:= v0 @kind object;
  #L43d7b4.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L43d7ba.  call `onError`(v1, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43d7c0.  return @kind void;
  #L43d7c2.  v0:= v5.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.this$0` @type ^`io.reactivex.internal.operators.single.SingleOnErrorReturn` @kind object;
  #L43d7c6.  v0:= v0.`io.reactivex.internal.operators.single.SingleOnErrorReturn.value` @type ^`java.lang.Object` @kind object;
  #L43d7ca.  if v0 != 0 then goto L43d7ee;
  #L43d7ce.  v0:= new `java.lang.NullPointerException`;
  #L43d7d2.  v1:= "Value supplied was null" @kind object;
  #L43d7d6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43d7dc.  call temp:= `initCause`(v0, v6) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L43d7e2.  v6:= v5.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d7e6.  call `onError`(v6, v0) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43d7ec.  return @kind void;
  #L43d7ee.  v6:= v5.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d7f2.  call `onSuccess`(v6, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L43d7f8.  return @kind void;
  catch `java.lang.Throwable` @[L43d780..L43d790] goto L43d792;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn$OnErrorReturn;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d818.  v0:= v1.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d81c.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43d822.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn$OnErrorReturn;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d834.  v0:= v1.`io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d838.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L43d83e.  return @kind void;
}
