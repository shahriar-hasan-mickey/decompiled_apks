record `io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.functions.Function` @kind interface {
}
global `io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable`[] `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L43d248.  v0:= new `io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable`;
  #L43d24c.  v1:= 0I;
  #L43d24e.  v2:= "INSTANCE" @kind object;
  #L43d252.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43d258.  `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable.INSTANCE` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` := v0 @kind object;
  #L43d25c.  v0:= 1I;
  #L43d25e.  v0:= new `io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable`[v0];
  #L43d262.  v2:= `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable.INSTANCE` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` @kind object;
  #L43d266.  v0[v1]:= v2 @kind object;
  #L43d26a.  `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable.$VALUES` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable`[] := v0 @kind object;
  #L43d26e.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43d280.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43d286.  return @kind void;
}
procedure `io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d1c4.  v0:= constclass @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` @kind object;
  #L43d1c8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L43d1ce.  v1:= temp @kind object;
  #L43d1d0.  v1:= (`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable`) v1 @kind object;
  #L43d1d4.  return v1 @kind object;
}
procedure `io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable`[] `values`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;.values:()[Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d1e8.  v0:= `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable.$VALUES` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable`[] @kind object;
  #L43d1ec.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;.clone:()Ljava/lang/Object;` @kind virtual;
  #L43d1f2.  v0:= temp @kind object;
  #L43d1f4.  v0:= (`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable`[]) v0 @kind object;
  #L43d1f8.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d20c.  v1:= (`io.reactivex.SingleSource`) v1 @kind object;
  #L43d210.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;.apply:(Lio/reactivex/SingleSource;)Lorg/reactivestreams/Publisher;` @kind virtual;
  #L43d216.  v1:= temp @kind object;
  #L43d218.  return v1 @kind object;
}
procedure `org.reactivestreams.Publisher` `apply`(`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowable;.apply:(Lio/reactivex/SingleSource;)Lorg/reactivestreams/Publisher;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d22c.  v0:= new `io.reactivex.internal.operators.single.SingleToFlowable`;
  #L43d230.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L43d236.  return v0 @kind object;
}
