record `io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.nextFunction` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43d8c4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L43d8ca.  v0.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L43d8ce.  v0.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.nextFunction` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43d8d2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L43d8e4.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L43d8ea.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d89c.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L43d8a2.  v0:= temp @kind object;
  #L43d8a4.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L43d8a8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43d8ae.  v0:= temp;
  #L43d8b0.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43d8fc.  v0:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.nextFunction` @type ^`io.reactivex.functions.Function` @kind object;
  #L43d900.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43d906.  v0:= temp @kind object;
  #L43d908.  v1:= "The nextFunction returned a null SingleSource." @kind object;
  #L43d90c.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43d912.  v0:= temp @kind object;
  #L43d914.  v0:= (`io.reactivex.SingleSource`) v0 @kind object;
  #L43d918.  v6:= new `io.reactivex.internal.observers.ResumeSingleObserver`;
  #L43d91c.  v1:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d920.  call `<init>`(v6, v5, v1) @signature `Lio/reactivex/internal/observers/ResumeSingleObserver;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/SingleObserver;)V` @kind direct;
  #L43d926.  call `subscribe`(v0, v6) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43d92c.  return @kind void;
  #L43d92e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43d930.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43d936.  v1:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d93a.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L43d93e.  v3:= 2I;
  #L43d940.  v3:= new `java.lang.Throwable`[v3];
  #L43d944.  v4:= 0I;
  #L43d946.  v3[v4]:= v6 @kind object;
  #L43d94a.  v6:= 1I;
  #L43d94c.  v3[v6]:= v0 @kind object;
  #L43d950.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L43d956.  call `onError`(v1, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43d95c.  return @kind void;
  catch `java.lang.Throwable` @[L43d8fc..L43d918] goto L43d92e;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L43d97c.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43d982.  v1:= temp;
  #L43d984.  if v1 == 0 then goto L43d992;
  #L43d988.  v1:= v0.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d98c.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43d992.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d9a4.  v0:= v1.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d9a8.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L43d9ae.  return @kind void;
}
