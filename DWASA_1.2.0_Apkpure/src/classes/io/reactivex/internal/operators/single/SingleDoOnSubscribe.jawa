record `io.reactivex.internal.operators.single.SingleDoOnSubscribe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.single.SingleDoOnSubscribe.onSubscribe` @AccessFlag FINAL;
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.single.SingleDoOnSubscribe.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoOnSubscribe` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43bc18.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43bc1e.  v0.`io.reactivex.internal.operators.single.SingleDoOnSubscribe.source` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L43bc22.  v0.`io.reactivex.internal.operators.single.SingleDoOnSubscribe.onSubscribe` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L43bc26.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleDoOnSubscribe` v3 @kind this, `io.reactivex.SingleObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L43bc38.  v0:= v3.`io.reactivex.internal.operators.single.SingleDoOnSubscribe.source` @type ^`io.reactivex.SingleSource` @kind object;
  #L43bc3c.  v1:= new `io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver`;
  #L43bc40.  v2:= v3.`io.reactivex.internal.operators.single.SingleDoOnSubscribe.onSubscribe` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L43bc44.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe$DoOnSubscribeSingleObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L43bc4a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43bc50.  return @kind void;
}
