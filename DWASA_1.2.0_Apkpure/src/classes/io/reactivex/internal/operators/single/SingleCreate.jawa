record `io.reactivex.internal.operators.single.SingleCreate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.SingleOnSubscribe` `io.reactivex.internal.operators.single.SingleCreate.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleCreate` v0 @kind this, `io.reactivex.SingleOnSubscribe` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleCreate;.<init>:(Lio/reactivex/SingleOnSubscribe;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43aacc.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43aad2.  v0.`io.reactivex.internal.operators.single.SingleCreate.source` @type ^`io.reactivex.SingleOnSubscribe` := v1 @kind object;
  #L43aad6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleCreate` v1 @kind this, `io.reactivex.SingleObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleCreate;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L43aae8.  v0:= new `io.reactivex.internal.operators.single.SingleCreate$Emitter`;
  #L43aaec.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/single/SingleCreate$Emitter;.<init>:(Lio/reactivex/SingleObserver;)V` @kind direct;
  #L43aaf2.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43aaf8.  v2:= v1.`io.reactivex.internal.operators.single.SingleCreate.source` @type ^`io.reactivex.SingleOnSubscribe` @kind object;
  #L43aafc.  call `subscribe`(v2, v0) @signature `Lio/reactivex/SingleOnSubscribe;.subscribe:(Lio/reactivex/SingleEmitter;)V` @kind interface;
  #L43ab02.  goto L43ab12;
  #L43ab04.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43ab06.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43ab0c.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/single/SingleCreate$Emitter;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43ab12.  return @kind void;
  catch `java.lang.Throwable` @[L43aaf8..L43ab02] goto L43ab04;
}
