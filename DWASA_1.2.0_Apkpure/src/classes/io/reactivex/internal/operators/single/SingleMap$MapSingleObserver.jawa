record `io.reactivex.internal.operators.single.SingleMap$MapSingleObserver` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.mapper` @AccessFlag FINAL;
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.t` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleMap$MapSingleObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43d4b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43d4ba.  v0.`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.t` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L43d4be.  v0.`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43d4c2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleMap$MapSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d4d4.  v0:= v1.`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.t` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d4d8.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43d4de.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleMap$MapSingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d4f0.  v0:= v1.`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.t` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d4f4.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43d4fa.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleMap$MapSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d50c.  v0:= v1.`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L43d510.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43d516.  v2:= temp @kind object;
  #L43d518.  v0:= "The mapper function returned a null value." @kind object;
  #L43d51c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43d522.  v2:= temp @kind object;
  #L43d524.  v0:= v1.`io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.t` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43d528.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L43d52e.  return @kind void;
  #L43d530.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43d532.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43d538.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleMap$MapSingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43d53e.  return @kind void;
  catch `java.lang.Throwable` @[L43d50c..L43d524] goto L43d530;
}
