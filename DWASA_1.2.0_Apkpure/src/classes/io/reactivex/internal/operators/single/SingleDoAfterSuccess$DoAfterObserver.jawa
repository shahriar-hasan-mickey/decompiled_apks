record `io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.onAfterSuccess` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$DoAfterObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Consumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43b3f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43b3fe.  v0.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.downstream` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L43b402.  v0.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.onAfterSuccess` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L43b406.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$DoAfterObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b418.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b41c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43b422.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$DoAfterObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b3d8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b3dc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L43b3e2.  v0:= temp;
  #L43b3e4.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$DoAfterObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b434.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43b438.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43b43e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$DoAfterObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b450.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b454.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43b45a.  v0:= temp;
  #L43b45c.  if v0 == 0 then goto L43b46e;
  #L43b460.  v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L43b464.  v2:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43b468.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43b46e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess$DoAfterObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b480.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43b484.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L43b48a.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.onAfterSuccess` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L43b48e.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L43b494.  goto L43b4a4;
  #L43b496.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43b498.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43b49e.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L43b4a4.  return @kind void;
  catch `java.lang.Throwable` @[L43b48a..L43b494] goto L43b496;
}
