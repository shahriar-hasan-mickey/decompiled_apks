record `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.functions.Function` @kind interface {
}
global `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[] `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L43d31c.  v0:= new `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`;
  #L43d320.  v1:= 0I;
  #L43d322.  v2:= "INSTANCE" @kind object;
  #L43d326.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43d32c.  `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.INSTANCE` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` := v0 @kind object;
  #L43d330.  v0:= 1I;
  #L43d332.  v0:= new `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[v0];
  #L43d336.  v2:= `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.INSTANCE` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` @kind object;
  #L43d33a.  v0[v1]:= v2 @kind object;
  #L43d33e.  `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.$VALUES` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[] := v0 @kind object;
  #L43d342.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43d354.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43d35a.  return @kind void;
}
procedure `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d2b4.  v0:= constclass @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` @kind object;
  #L43d2b8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L43d2be.  v1:= temp @kind object;
  #L43d2c0.  v1:= (`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`) v1 @kind object;
  #L43d2c4.  return v1 @kind object;
}
procedure `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[] `values`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.values:()[Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d2d8.  v0:= `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.$VALUES` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[] @kind object;
  #L43d2dc.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.clone:()Ljava/lang/Object;` @kind virtual;
  #L43d2e2.  v0:= temp @kind object;
  #L43d2e4.  v0:= (`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[]) v0 @kind object;
  #L43d2e8.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `apply`(`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.apply:(Lio/reactivex/SingleSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d298.  v0:= new `io.reactivex.internal.operators.single.SingleToObservable`;
  #L43d29c.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L43d2a2.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d2fc.  v1:= (`io.reactivex.SingleSource`) v1 @kind object;
  #L43d300.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.apply:(Lio/reactivex/SingleSource;)Lio/reactivex/Observable;` @kind virtual;
  #L43d306.  v1:= temp @kind object;
  #L43d308.  return v1 @kind object;
}
