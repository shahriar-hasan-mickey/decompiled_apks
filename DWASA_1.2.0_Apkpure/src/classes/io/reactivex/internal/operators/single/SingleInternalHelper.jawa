record `io.reactivex.internal.operators.single.SingleInternalHelper` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleInternalHelper` v2 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L43d3d0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43d3d6.  v0:= new `java.lang.IllegalStateException`;
  #L43d3da.  v1:= "No instances!" @kind object;
  #L43d3de.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43d3e4.  throw v0;
}
procedure `java.util.concurrent.Callable` `emptyThrower`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.emptyThrower:()Ljava/util/concurrent/Callable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d3b8.  v0:= `@@io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable.INSTANCE` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable` @kind object;
  #L43d3bc.  return v0 @kind object;
}
procedure `java.lang.Iterable` `iterableToFlowable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.iterableToFlowable:(Ljava/lang/Iterable;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d39c.  v0:= new `io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterable`;
  #L43d3a0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToFlowableIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L43d3a6.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d36c.  v0:= `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable.INSTANCE` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable` @kind object;
  #L43d370.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `toObservable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toObservable:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d384.  v0:= `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.INSTANCE` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` @kind object;
  #L43d388.  return v0 @kind object;
}
