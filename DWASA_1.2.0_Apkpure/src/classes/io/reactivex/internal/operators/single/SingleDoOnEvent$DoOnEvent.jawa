record `io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.downstream` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.single.SingleDoOnEvent` `io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent` v0 @kind this, `io.reactivex.internal.operators.single.SingleDoOnEvent` v1 @kind object, `io.reactivex.SingleObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent$DoOnEvent;.<init>:(Lio/reactivex/internal/operators/single/SingleDoOnEvent;Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43ba20.  v0.`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.this$0` @type ^`io.reactivex.internal.operators.single.SingleDoOnEvent` := v1 @kind object;
  #L43ba24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43ba2a.  v0.`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.downstream` @type ^`io.reactivex.SingleObserver` := v2 @kind object;
  #L43ba2e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent$DoOnEvent;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43ba40.  v0:= v4.`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.this$0` @type ^`io.reactivex.internal.operators.single.SingleDoOnEvent` @kind object;
  #L43ba44.  v0:= v0.`io.reactivex.internal.operators.single.SingleDoOnEvent.onEvent` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L43ba48.  v1:= 0I;
  #L43ba4a.  call `accept`(v0, v1, v5) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L43ba50.  goto L43ba78;
  #L43ba52.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43ba54.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43ba5a.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L43ba5e.  v2:= 2I;
  #L43ba60.  v2:= new `java.lang.Throwable`[v2];
  #L43ba64.  v3:= 0I;
  #L43ba66.  v2[v3]:= v5 @kind object;
  #L43ba6a.  v5:= 1I;
  #L43ba6c.  v2[v5]:= v0 @kind object;
  #L43ba70.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L43ba76.  v5:= v1 @kind object;
  #L43ba78.  v0:= v4.`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43ba7c.  call `onError`(v0, v5) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43ba82.  return @kind void;
  catch `java.lang.Throwable` @[L43ba40..L43ba50] goto L43ba52;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent$DoOnEvent;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43baa0.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43baa4.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43baaa.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent$DoOnEvent;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43babc.  v0:= v2.`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.this$0` @type ^`io.reactivex.internal.operators.single.SingleDoOnEvent` @kind object;
  #L43bac0.  v0:= v0.`io.reactivex.internal.operators.single.SingleDoOnEvent.onEvent` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L43bac4.  v1:= 0I;
  #L43bac6.  call `accept`(v0, v3, v1) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L43bacc.  v0:= v2.`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43bad0.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L43bad6.  return @kind void;
  #L43bad8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43bada.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43bae0.  v0:= v2.`io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43bae4.  call `onError`(v0, v3) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43baea.  return @kind void;
  catch `java.lang.Throwable` @[L43babc..L43bacc] goto L43bad8;
}
