record `io.reactivex.internal.operators.single.SingleEquals` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.single.SingleEquals.first` @AccessFlag FINAL;
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.single.SingleEquals.second` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleEquals` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleEquals;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43be44.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43be4a.  v0.`io.reactivex.internal.operators.single.SingleEquals.first` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L43be4e.  v0.`io.reactivex.internal.operators.single.SingleEquals.second` @type ^`io.reactivex.SingleSource` := v2 @kind object;
  #L43be52.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleEquals` v11 @kind this, `io.reactivex.SingleObserver` v12 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleEquals;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L43be64.  v6:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L43be68.  call `<init>`(v6) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L43be6e.  v0:= 2I;
  #L43be70.  v7:= new `java.lang.Object`[v0];
  #L43be74.  v0:= 0I;
  #L43be76.  v1:= 0I;
  #L43be78.  v7[v1]:= v0 @kind object;
  #L43be7c.  v1:= 1I;
  #L43be7e.  v7[v1]:= v0 @kind object;
  #L43be82.  v8:= new `io.reactivex.disposables.CompositeDisposable`;
  #L43be86.  call `<init>`(v8) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L43be8c.  call `onSubscribe`(v12, v8) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43be92.  v9:= v11.`io.reactivex.internal.operators.single.SingleEquals.first` @type ^`io.reactivex.SingleSource` @kind object;
  #L43be96.  v10:= new `io.reactivex.internal.operators.single.SingleEquals$InnerObserver`;
  #L43be9a.  v1:= 0I;
  #L43be9c.  v0:= v10 @kind object;
  #L43be9e.  v2:= v8 @kind object;
  #L43bea0.  v3:= v7 @kind object;
  #L43bea2.  v4:= v12 @kind object;
  #L43bea4.  v5:= v6 @kind object;
  #L43bea6.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/internal/operators/single/SingleEquals$InnerObserver;.<init>:(ILio/reactivex/disposables/CompositeDisposable;[Ljava/lang/Object;Lio/reactivex/SingleObserver;Ljava/util/concurrent/atomic/AtomicInteger;)V` @kind direct;
  #L43beac.  call `subscribe`(v9, v10) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43beb2.  v9:= v11.`io.reactivex.internal.operators.single.SingleEquals.second` @type ^`io.reactivex.SingleSource` @kind object;
  #L43beb6.  v10:= new `io.reactivex.internal.operators.single.SingleEquals$InnerObserver`;
  #L43beba.  v1:= 1I;
  #L43bebc.  v0:= v10 @kind object;
  #L43bebe.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/internal/operators/single/SingleEquals$InnerObserver;.<init>:(ILio/reactivex/disposables/CompositeDisposable;[Ljava/lang/Object;Lio/reactivex/SingleObserver;Ljava/util/concurrent/atomic/AtomicInteger;)V` @kind direct;
  #L43bec4.  call `subscribe`(v9, v10) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43beca.  return @kind void;
}
