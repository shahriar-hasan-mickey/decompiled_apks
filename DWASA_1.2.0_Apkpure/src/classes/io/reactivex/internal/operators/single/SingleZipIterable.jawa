record `io.reactivex.internal.operators.single.SingleZipIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `java.lang.Iterable` `io.reactivex.internal.operators.single.SingleZipIterable.sources` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleZipIterable.zipper` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleZipIterable` v0 @kind this, `java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleZipIterable;.<init>:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43eb7c.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43eb82.  v0.`io.reactivex.internal.operators.single.SingleZipIterable.sources` @type ^`java.lang.Iterable` := v1 @kind object;
  #L43eb86.  v0.`io.reactivex.internal.operators.single.SingleZipIterable.zipper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43eb8a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleZipIterable` v6 @kind this, `io.reactivex.SingleObserver` v7 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleZipIterable;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L43eb9c.  v0:= 8I;
  #L43eba0.  v0:= new `io.reactivex.SingleSource`[v0];
  #L43eba4.  v1:= v6.`io.reactivex.internal.operators.single.SingleZipIterable.sources` @type ^`java.lang.Iterable` @kind object;
  #L43eba8.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43ebae.  v1:= temp @kind object;
  #L43ebb0.  v2:= 0I;
  #L43ebb2.  v3:= v0 @kind object;
  #L43ebb4.  v0:= 0I;
  #L43ebb6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43ebbc.  v4:= temp;
  #L43ebbe.  if v4 == 0 then goto L43ec0c;
  #L43ebc2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43ebc8.  v4:= temp @kind object;
  #L43ebca.  v4:= (`io.reactivex.SingleSource`) v4 @kind object;
  #L43ebce.  if v4 != 0 then goto L43ebe8;
  #L43ebd2.  v0:= new `java.lang.NullPointerException`;
  #L43ebd6.  v1:= "One of the sources is null" @kind object;
  #L43ebda.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43ebe0.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L43ebe6.  return @kind void;
  #L43ebe8.  v5:= length @variable v3;
  #L43ebea.  if v0 != v5 then goto L43ec00;
  #L43ebee.  v5:= v0 ^> 2;
  #L43ebf2.  v5:= v5 + v0 @kind int;
  #L43ebf4.  call temp:= `copyOf`(v3, v5) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L43ebfa.  v3:= temp @kind object;
  #L43ebfc.  v3:= (`io.reactivex.SingleSource`[]) v3 @kind object;
  #L43ec00.  v5:= v0 + 1;
  #L43ec04.  v3[v0]:= v4 @kind object;
  #L43ec08.  v0:= v5;
  #L43ec0a.  goto L43ebb6;
  #L43ec0c.  if v0 != 0 then goto L43ec22;
  #L43ec10.  v0:= new `java.util.NoSuchElementException`;
  #L43ec14.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L43ec1a.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L43ec20.  return @kind void;
  #L43ec22.  v1:= 1I;
  #L43ec24.  if v0 != v1 then goto L43ec48;
  #L43ec28.  v0:= v3[v2] @kind object;
  #L43ec2c.  v1:= new `io.reactivex.internal.operators.single.SingleMap$MapSingleObserver`;
  #L43ec30.  v2:= new `io.reactivex.internal.operators.single.SingleZipIterable$SingletonArrayFunc`;
  #L43ec34.  call `<init>`(v2, v6) @signature `Lio/reactivex/internal/operators/single/SingleZipIterable$SingletonArrayFunc;.<init>:(Lio/reactivex/internal/operators/single/SingleZipIterable;)V` @kind direct;
  #L43ec3a.  call `<init>`(v1, v7, v2) @signature `Lio/reactivex/internal/operators/single/SingleMap$MapSingleObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Function;)V` @kind direct;
  #L43ec40.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43ec46.  return @kind void;
  #L43ec48.  v1:= new `io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator`;
  #L43ec4c.  v4:= v6.`io.reactivex.internal.operators.single.SingleZipIterable.zipper` @type ^`io.reactivex.functions.Function` @kind object;
  #L43ec50.  call `<init>`(v1, v7, v0, v4) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$ZipCoordinator;.<init>:(Lio/reactivex/SingleObserver;ILio/reactivex/functions/Function;)V` @kind direct;
  #L43ec56.  call `onSubscribe`(v7, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43ec5c.  if v2 >= v0 then goto L43ec86;
  #L43ec60.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/operators/single/SingleZipArray$ZipCoordinator;.isDisposed:()Z` @kind virtual;
  #L43ec66.  v7:= temp;
  #L43ec68.  if v7 == 0 then goto L43ec6e;
  #L43ec6c.  return @kind void;
  #L43ec6e.  v7:= v3[v2] @kind object;
  #L43ec72.  v4:= v1.`io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator.observers` @type ^`io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver`[] @kind object;
  #L43ec76.  v4:= v4[v2] @kind object;
  #L43ec7a.  call `subscribe`(v7, v4) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43ec80.  v2:= v2 + 1;
  #L43ec84.  goto L43ec5c;
  #L43ec86.  return @kind void;
  #L43ec88.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43ec8a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43ec90.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L43ec96.  return @kind void;
  catch `java.lang.Throwable` @[L43eba4..L43ec08] goto L43ec88;
}
