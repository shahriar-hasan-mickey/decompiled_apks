record `io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.onFinally` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43b688.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L43b68e.  v0.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L43b692.  v0.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.onFinally` @type ^`io.reactivex.functions.Action` := v2 @kind object;
  #L43b696.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b6a8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b6ac.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43b6b2.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L43b6b8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b668.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b66c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L43b672.  v0:= temp;
  #L43b674.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b6cc.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43b6d0.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43b6d6.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L43b6dc.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b6f0.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b6f4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43b6fa.  v0:= temp;
  #L43b6fc.  if v0 == 0 then goto L43b70e;
  #L43b700.  v1.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L43b704.  v2:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43b708.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43b70e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b720.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43b724.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L43b72a.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L43b730.  return @kind void;
}
procedure `void` `runFinally`(`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.runFinally:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L43b744.  v0:= 0I;
  #L43b746.  v1:= 1I;
  #L43b748.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$DoFinallyObserver;.compareAndSet:(II)Z` @kind virtual;
  #L43b74e.  v0:= temp;
  #L43b750.  if v0 == 0 then goto L43b76e;
  #L43b754.  v0:= v2.`io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.onFinally` @type ^`io.reactivex.functions.Action` @kind object;
  #L43b758.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L43b75e.  goto L43b76e;
  #L43b760.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43b762.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43b768.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L43b76e.  return @kind void;
  catch `java.lang.Throwable` @[L43b754..L43b75e] goto L43b760;
}
