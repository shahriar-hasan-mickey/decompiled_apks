record `io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.onAfterTerminate` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$DoAfterTerminateObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43b530.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43b536.  v0.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.downstream` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L43b53a.  v0.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.onAfterTerminate` @type ^`io.reactivex.functions.Action` := v2 @kind object;
  #L43b53e.  return @kind void;
}
procedure `void` `onAfterTerminate`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$DoAfterTerminateObserver;.onAfterTerminate:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43b56c.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.onAfterTerminate` @type ^`io.reactivex.functions.Action` @kind object;
  #L43b570.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L43b576.  goto L43b586;
  #L43b578.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43b57a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43b580.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L43b586.  return @kind void;
  catch `java.lang.Throwable` @[L43b56c..L43b576] goto L43b578;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$DoAfterTerminateObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b550.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b554.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43b55a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$DoAfterTerminateObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b510.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b514.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L43b51a.  v0:= temp;
  #L43b51c.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$DoAfterTerminateObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b5a4.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43b5a8.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43b5ae.  call `onAfterTerminate`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$DoAfterTerminateObserver;.onAfterTerminate:()V` @kind direct;
  #L43b5b4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$DoAfterTerminateObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b5c8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43b5cc.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43b5d2.  v0:= temp;
  #L43b5d4.  if v0 == 0 then goto L43b5e6;
  #L43b5d8.  v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L43b5dc.  v2:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43b5e0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43b5e6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$DoAfterTerminateObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43b5f8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L43b5fc.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L43b602.  call `onAfterTerminate`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$DoAfterTerminateObserver;.onAfterTerminate:()V` @kind direct;
  #L43b608.  return @kind void;
}
