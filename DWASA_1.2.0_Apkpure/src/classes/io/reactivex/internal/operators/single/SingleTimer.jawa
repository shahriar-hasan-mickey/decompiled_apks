record `io.reactivex.internal.operators.single.SingleTimer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `long` `io.reactivex.internal.operators.single.SingleTimer.delay` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.single.SingleTimer.scheduler` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.single.SingleTimer.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleTimer` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43e168.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43e16e.  v0.`io.reactivex.internal.operators.single.SingleTimer.delay` @type ^`long` := v1 @kind wide;
  #L43e172.  v0.`io.reactivex.internal.operators.single.SingleTimer.unit` @type ^`java.util.concurrent.TimeUnit` := v3 @kind object;
  #L43e176.  v0.`io.reactivex.internal.operators.single.SingleTimer.scheduler` @type ^`io.reactivex.Scheduler` := v4 @kind object;
  #L43e17a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleTimer` v4 @kind this, `io.reactivex.SingleObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleTimer;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43e18c.  v0:= new `io.reactivex.internal.operators.single.SingleTimer$TimerDisposable`;
  #L43e190.  call `<init>`(v0, v5) @signature `Lio/reactivex/internal/operators/single/SingleTimer$TimerDisposable;.<init>:(Lio/reactivex/SingleObserver;)V` @kind direct;
  #L43e196.  call `onSubscribe`(v5, v0) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43e19c.  v5:= v4.`io.reactivex.internal.operators.single.SingleTimer.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L43e1a0.  v1:= v4.`io.reactivex.internal.operators.single.SingleTimer.delay` @type ^`long` @kind wide;
  #L43e1a4.  v3:= v4.`io.reactivex.internal.operators.single.SingleTimer.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L43e1a8.  call temp:= `scheduleDirect`(v5, v0, v1, v3) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L43e1ae.  v5:= temp @kind object;
  #L43e1b0.  call `setFuture`(v0, v5) @signature `Lio/reactivex/internal/operators/single/SingleTimer$TimerDisposable;.setFuture:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L43e1b6.  return @kind void;
}
