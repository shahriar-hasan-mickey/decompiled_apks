record `io.reactivex.internal.operators.single.SingleDelay` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `boolean` `io.reactivex.internal.operators.single.SingleDelay.delayError` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.single.SingleDelay.scheduler` @AccessFlag FINAL;
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.single.SingleDelay.source` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.single.SingleDelay.time` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.single.SingleDelay.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDelay` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/internal/operators/single/SingleDelay;.<init>:(Lio/reactivex/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43b238.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43b23e.  v0.`io.reactivex.internal.operators.single.SingleDelay.source` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L43b242.  v0.`io.reactivex.internal.operators.single.SingleDelay.time` @type ^`long` := v2 @kind wide;
  #L43b246.  v0.`io.reactivex.internal.operators.single.SingleDelay.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L43b24a.  v0.`io.reactivex.internal.operators.single.SingleDelay.scheduler` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L43b24e.  v0.`io.reactivex.internal.operators.single.SingleDelay.delayError` @type ^`boolean` := v6 @kind boolean;
  #L43b252.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleDelay` v3 @kind this, `io.reactivex.SingleObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDelay;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L43b264.  v0:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L43b268.  call `<init>`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L43b26e.  call `onSubscribe`(v4, v0) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43b274.  v1:= v3.`io.reactivex.internal.operators.single.SingleDelay.source` @type ^`io.reactivex.SingleSource` @kind object;
  #L43b278.  v2:= new `io.reactivex.internal.operators.single.SingleDelay$Delay`;
  #L43b27c.  call `<init>`(v2, v3, v0, v4) @signature `Lio/reactivex/internal/operators/single/SingleDelay$Delay;.<init>:(Lio/reactivex/internal/operators/single/SingleDelay;Lio/reactivex/internal/disposables/SequentialDisposable;Lio/reactivex/SingleObserver;)V` @kind direct;
  #L43b282.  call `subscribe`(v1, v2) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43b288.  return @kind void;
}
