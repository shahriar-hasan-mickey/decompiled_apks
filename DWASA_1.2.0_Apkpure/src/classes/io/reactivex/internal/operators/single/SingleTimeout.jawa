record `io.reactivex.internal.operators.single.SingleTimeout` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.single.SingleTimeout.other` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.single.SingleTimeout.scheduler` @AccessFlag FINAL;
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.single.SingleTimeout.source` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.single.SingleTimeout.timeout` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.single.SingleTimeout.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleTimeout` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleTimeout;.<init>:(Lio/reactivex/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43e050.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43e056.  v0.`io.reactivex.internal.operators.single.SingleTimeout.source` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L43e05a.  v0.`io.reactivex.internal.operators.single.SingleTimeout.timeout` @type ^`long` := v2 @kind wide;
  #L43e05e.  v0.`io.reactivex.internal.operators.single.SingleTimeout.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L43e062.  v0.`io.reactivex.internal.operators.single.SingleTimeout.scheduler` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L43e066.  v0.`io.reactivex.internal.operators.single.SingleTimeout.other` @type ^`io.reactivex.SingleSource` := v6 @kind object;
  #L43e06a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleTimeout` v5 @kind this, `io.reactivex.SingleObserver` v6 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleTimeout;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43e07c.  v0:= new `io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver`;
  #L43e080.  v1:= v5.`io.reactivex.internal.operators.single.SingleTimeout.other` @type ^`io.reactivex.SingleSource` @kind object;
  #L43e084.  call `<init>`(v0, v6, v1) @signature `Lio/reactivex/internal/operators/single/SingleTimeout$TimeoutMainObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/SingleSource;)V` @kind direct;
  #L43e08a.  call `onSubscribe`(v6, v0) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L43e090.  v6:= v0.`io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver.task` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L43e094.  v1:= v5.`io.reactivex.internal.operators.single.SingleTimeout.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L43e098.  v2:= v5.`io.reactivex.internal.operators.single.SingleTimeout.timeout` @type ^`long` @kind wide;
  #L43e09c.  v4:= v5.`io.reactivex.internal.operators.single.SingleTimeout.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L43e0a0.  call temp:= `scheduleDirect`(v1, v0, v2, v4) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L43e0a6.  v1:= temp @kind object;
  #L43e0a8.  call temp:= `replace`(v6, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L43e0ae.  v6:= v5.`io.reactivex.internal.operators.single.SingleTimeout.source` @type ^`io.reactivex.SingleSource` @kind object;
  #L43e0b2.  call `subscribe`(v6, v0) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43e0b8.  return @kind void;
}
