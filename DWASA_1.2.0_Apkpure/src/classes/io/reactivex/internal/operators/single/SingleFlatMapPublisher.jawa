record `io.reactivex.internal.operators.single.SingleFlatMapPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleFlatMapPublisher.mapper` @AccessFlag FINAL;
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.single.SingleFlatMapPublisher.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43cbd8.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L43cbde.  v0.`io.reactivex.internal.operators.single.SingleFlatMapPublisher.source` @type ^`io.reactivex.SingleSource` := v1 @kind object;
  #L43cbe2.  v0.`io.reactivex.internal.operators.single.SingleFlatMapPublisher.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43cbe6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L43cbf8.  v0:= v3.`io.reactivex.internal.operators.single.SingleFlatMapPublisher.source` @type ^`io.reactivex.SingleSource` @kind object;
  #L43cbfc.  v1:= new `io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver`;
  #L43cc00.  v2:= v3.`io.reactivex.internal.operators.single.SingleFlatMapPublisher.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L43cc04.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V` @kind direct;
  #L43cc0a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L43cc10.  return @kind void;
}
