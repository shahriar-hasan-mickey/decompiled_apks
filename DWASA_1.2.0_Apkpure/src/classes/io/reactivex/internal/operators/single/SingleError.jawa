record `io.reactivex.internal.operators.single.SingleError` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.single.SingleError.errorSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleError` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleError;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43bedc.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43bee2.  v0.`io.reactivex.internal.operators.single.SingleError.errorSupplier` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L43bee6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleError` v2 @kind this, `io.reactivex.SingleObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleError;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L43bef8.  v0:= v2.`io.reactivex.internal.operators.single.SingleError.errorSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L43befc.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L43bf02.  v0:= temp @kind object;
  #L43bf04.  v1:= "Callable returned null throwable. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L43bf08.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43bf0e.  v0:= temp @kind object;
  #L43bf10.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L43bf14.  goto L43bf1e;
  #L43bf16.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43bf18.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43bf1e.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L43bf24.  return @kind void;
  catch `java.lang.Throwable` @[L43bef8..L43bf14] goto L43bf16;
}
