record `io.reactivex.internal.operators.completable.CompletableCreate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.CompletableOnSubscribe` `io.reactivex.internal.operators.completable.CompletableCreate.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableCreate` v0 @kind this, `io.reactivex.CompletableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate;.<init>:(Lio/reactivex/CompletableOnSubscribe;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ea284.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3ea28a.  v0.`io.reactivex.internal.operators.completable.CompletableCreate.source` @type ^`io.reactivex.CompletableOnSubscribe` := v1 @kind object;
  #L3ea28e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableCreate` v1 @kind this, `io.reactivex.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3ea2a0.  v0:= new `io.reactivex.internal.operators.completable.CompletableCreate$Emitter`;
  #L3ea2a4.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.<init>:(Lio/reactivex/CompletableObserver;)V` @kind direct;
  #L3ea2aa.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3ea2b0.  v2:= v1.`io.reactivex.internal.operators.completable.CompletableCreate.source` @type ^`io.reactivex.CompletableOnSubscribe` @kind object;
  #L3ea2b4.  call `subscribe`(v2, v0) @signature `Lio/reactivex/CompletableOnSubscribe;.subscribe:(Lio/reactivex/CompletableEmitter;)V` @kind interface;
  #L3ea2ba.  goto L3ea2ca;
  #L3ea2bc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea2be.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3ea2c4.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3ea2ca.  return @kind void;
  catch `java.lang.Throwable` @[L3ea2b0..L3ea2ba] goto L3ea2bc;
}
