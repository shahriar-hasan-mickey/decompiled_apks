record `io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.downstream` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.once` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.set` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver` v0 @kind this, `io.reactivex.disposables.CompositeDisposable` v1 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v2 @kind object, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$TimeOutObserver;.<init>:(Lio/reactivex/disposables/CompositeDisposable;Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ec744.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ec74a.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.set` @type ^`io.reactivex.disposables.CompositeDisposable` := v1 @kind object;
  #L3ec74e.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.once` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L3ec752.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.downstream` @type ^`io.reactivex.CompletableObserver` := v3 @kind object;
  #L3ec756.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$TimeOutObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ec768.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.once` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3ec76c.  v1:= 0I;
  #L3ec76e.  v2:= 1I;
  #L3ec770.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L3ec776.  v0:= temp;
  #L3ec778.  if v0 == 0 then goto L3ec790;
  #L3ec77c.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.set` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L3ec780.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L3ec786.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ec78a.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3ec790.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$TimeOutObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ec7a4.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.once` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3ec7a8.  v1:= 0I;
  #L3ec7aa.  v2:= 1I;
  #L3ec7ac.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L3ec7b2.  v0:= temp;
  #L3ec7b4.  if v0 == 0 then goto L3ec7ce;
  #L3ec7b8.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.set` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L3ec7bc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L3ec7c2.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ec7c6.  call `onError`(v0, v4) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ec7cc.  goto L3ec7d4;
  #L3ec7ce.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3ec7d4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$TimeOutObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec7e8.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver.set` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L3ec7ec.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L3ec7f2.  return @kind void;
}
