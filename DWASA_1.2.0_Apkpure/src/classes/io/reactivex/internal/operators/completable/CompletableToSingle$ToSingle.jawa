record `io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.observer` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.completable.CompletableToSingle` `io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle` v0 @kind this, `io.reactivex.internal.operators.completable.CompletableToSingle` v1 @kind object, `io.reactivex.SingleObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle$ToSingle;.<init>:(Lio/reactivex/internal/operators/completable/CompletableToSingle;Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ecb3c.  v0.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.this$0` @type ^`io.reactivex.internal.operators.completable.CompletableToSingle` := v1 @kind object;
  #L3ecb40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ecb46.  v0.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.observer` @type ^`io.reactivex.SingleObserver` := v2 @kind object;
  #L3ecb4a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle$ToSingle;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ecb5c.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.this$0` @type ^`io.reactivex.internal.operators.completable.CompletableToSingle` @kind object;
  #L3ecb60.  v0:= v0.`io.reactivex.internal.operators.completable.CompletableToSingle.completionValueSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L3ecb64.  if v0 == 0 then goto L3ecb8e;
  #L3ecb68.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.this$0` @type ^`io.reactivex.internal.operators.completable.CompletableToSingle` @kind object;
  #L3ecb6c.  v0:= v0.`io.reactivex.internal.operators.completable.CompletableToSingle.completionValueSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L3ecb70.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L3ecb76.  v0:= temp @kind object;
  #L3ecb78.  goto L3ecb96;
  #L3ecb7a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ecb7c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3ecb82.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3ecb86.  call `onError`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ecb8c.  return @kind void;
  #L3ecb8e.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.this$0` @type ^`io.reactivex.internal.operators.completable.CompletableToSingle` @kind object;
  #L3ecb92.  v0:= v0.`io.reactivex.internal.operators.completable.CompletableToSingle.completionValue` @type ^`java.lang.Object` @kind object;
  #L3ecb96.  if v0 != 0 then goto L3ecbb4;
  #L3ecb9a.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3ecb9e.  v1:= new `java.lang.NullPointerException`;
  #L3ecba2.  v2:= "The value supplied is null" @kind object;
  #L3ecba6.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ecbac.  call `onError`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ecbb2.  goto L3ecbbe;
  #L3ecbb4.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3ecbb8.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L3ecbbe.  return @kind void;
  catch `java.lang.Throwable` @[L3ecb68..L3ecb78] goto L3ecb7a;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle$ToSingle;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ecbdc.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3ecbe0.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ecbe6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle$ToSingle;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ecbf8.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle.observer` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3ecbfc.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3ecc02.  return @kind void;
}
