record `io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.downstream` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$DetachCompletableObserver;.<init>:(Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ea514.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ea51a.  v0.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L3ea51e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$DetachCompletableObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea530.  v0:= 0I;
  #L3ea532.  v1.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` := v0 @kind object;
  #L3ea536.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ea53a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3ea540.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea544.  v1.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L3ea548.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$DetachCompletableObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea4f4.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ea4f8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L3ea4fe.  v0:= temp;
  #L3ea500.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$DetachCompletableObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea55c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea560.  v2.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L3ea564.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ea568.  if v0 == 0 then goto L3ea578;
  #L3ea56c.  v1:= 0I;
  #L3ea56e.  v2.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L3ea572.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3ea578.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$DetachCompletableObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea58c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea590.  v2.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L3ea594.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ea598.  if v0 == 0 then goto L3ea5a8;
  #L3ea59c.  v1:= 0I;
  #L3ea59e.  v2.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L3ea5a2.  call `onError`(v0, v3) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ea5a8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$DetachCompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea5bc.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ea5c0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ea5c6.  v0:= temp;
  #L3ea5c8.  if v0 == 0 then goto L3ea5da;
  #L3ea5cc.  v1.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L3ea5d0.  v2:= v1.`io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ea5d4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3ea5da.  return @kind void;
}
