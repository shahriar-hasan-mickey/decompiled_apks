record `io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicQueueDisposable` @kind class, `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.observer` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3eca44.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BasicQueueDisposable;.<init>:()V` @kind direct;
  #L3eca4a.  v0.`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.observer` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L3eca4e.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.clear:()V` @AccessFlag PUBLIC {
    temp;

  #L3eca60.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eca74.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3eca78.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3eca7e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec9c8.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ec9cc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L3ec9d2.  v0:= temp;
  #L3ec9d4.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec9e8.  v0:= 1I;
  #L3ec9ea.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eca90.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.observer` @type ^`io.reactivex.Observer` @kind object;
  #L3eca94.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L3eca9a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ecaac.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.observer` @type ^`io.reactivex.Observer` @kind object;
  #L3ecab0.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ecab6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ecac8.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ecacc.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ecad2.  v0:= temp;
  #L3ecad4.  if v0 == 0 then goto L3ecae6;
  #L3ecad8.  v1.`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L3ecadc.  v2:= v1.`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver.observer` @type ^`io.reactivex.Observer` @kind object;
  #L3ecae0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3ecae6.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3eca14.  call temp:= `poll`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.poll:()Ljava/lang/Void;` @kind virtual;
  #L3eca1a.  v0:= temp @kind object;
  #L3eca1c.  return v0 @kind object;
}
procedure `java.lang.Void` `poll`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.poll:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eca30.  v0:= 0I;
  #L3eca32.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$ObserverCompletableObserver;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3ec9fc.  v1:= v1 ^& 2;
  #L3eca00.  return v1;
}
