record `io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.downstream` @AccessFlag FINAL;
  `io.reactivex.internal.operators.completable.CompletablePeek` `io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.this$0` @AccessFlag FINAL_SYNTHETIC;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation` v0 @kind this, `io.reactivex.internal.operators.completable.CompletablePeek` v1 @kind object, `io.reactivex.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek$CompletableObserverImplementation;.<init>:(Lio/reactivex/internal/operators/completable/CompletablePeek;Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ebe9c.  v0.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.this$0` @type ^`io.reactivex.internal.operators.completable.CompletablePeek` := v1 @kind object;
  #L3ebea0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ebea6.  v0.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.downstream` @type ^`io.reactivex.CompletableObserver` := v2 @kind object;
  #L3ebeaa.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek$CompletableObserverImplementation;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebebc.  v0:= v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.this$0` @type ^`io.reactivex.internal.operators.completable.CompletablePeek` @kind object;
  #L3ebec0.  v0:= v0.`io.reactivex.internal.operators.completable.CompletablePeek.onDispose` @type ^`io.reactivex.functions.Action` @kind object;
  #L3ebec4.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L3ebeca.  goto L3ebeda;
  #L3ebecc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebece.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3ebed4.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3ebeda.  v0:= v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ebede.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3ebee4.  return @kind void;
  catch `java.lang.Throwable` @[L3ebebc..L3ebeca] goto L3ebecc;
}
procedure `void` `doAfter`(`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek$CompletableObserverImplementation;.doAfter:()V` @AccessFlag  {
    temp;
    v0;

  #L3ebf04.  v0:= v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.this$0` @type ^`io.reactivex.internal.operators.completable.CompletablePeek` @kind object;
  #L3ebf08.  v0:= v0.`io.reactivex.internal.operators.completable.CompletablePeek.onAfterTerminate` @type ^`io.reactivex.functions.Action` @kind object;
  #L3ebf0c.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L3ebf12.  goto L3ebf22;
  #L3ebf14.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebf16.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3ebf1c.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3ebf22.  return @kind void;
  catch `java.lang.Throwable` @[L3ebf04..L3ebf12] goto L3ebf14;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek$CompletableObserverImplementation;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebe7c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ebe80.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L3ebe86.  v0:= temp;
  #L3ebe88.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek$CompletableObserverImplementation;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ebf40.  v0:= v2.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ebf44.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ebf48.  if v0 != v1 then goto L3ebf4e;
  #L3ebf4c.  return @kind void;
  #L3ebf4e.  v0:= v2.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.this$0` @type ^`io.reactivex.internal.operators.completable.CompletablePeek` @kind object;
  #L3ebf52.  v0:= v0.`io.reactivex.internal.operators.completable.CompletablePeek.onComplete` @type ^`io.reactivex.functions.Action` @kind object;
  #L3ebf56.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L3ebf5c.  v0:= v2.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.this$0` @type ^`io.reactivex.internal.operators.completable.CompletablePeek` @kind object;
  #L3ebf60.  v0:= v0.`io.reactivex.internal.operators.completable.CompletablePeek.onTerminate` @type ^`io.reactivex.functions.Action` @kind object;
  #L3ebf64.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L3ebf6a.  v0:= v2.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ebf6e.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3ebf74.  call `doAfter`(v2) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek$CompletableObserverImplementation;.doAfter:()V` @kind virtual;
  #L3ebf7a.  return @kind void;
  #L3ebf7c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebf7e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3ebf84.  v1:= v2.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ebf88.  call `onError`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ebf8e.  return @kind void;
  catch `java.lang.Throwable` @[L3ebf4e..L3ebf6a] goto L3ebf7c;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek$CompletableObserverImplementation;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ebfac.  v0:= v4.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ebfb0.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ebfb4.  if v0 != v1 then goto L3ebfc0;
  #L3ebfb8.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3ebfbe.  return @kind void;
  #L3ebfc0.  v0:= v4.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.this$0` @type ^`io.reactivex.internal.operators.completable.CompletablePeek` @kind object;
  #L3ebfc4.  v0:= v0.`io.reactivex.internal.operators.completable.CompletablePeek.onError` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3ebfc8.  call `accept`(v0, v5) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3ebfce.  v0:= v4.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.this$0` @type ^`io.reactivex.internal.operators.completable.CompletablePeek` @kind object;
  #L3ebfd2.  v0:= v0.`io.reactivex.internal.operators.completable.CompletablePeek.onTerminate` @type ^`io.reactivex.functions.Action` @kind object;
  #L3ebfd6.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L3ebfdc.  goto L3ec004;
  #L3ebfde.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebfe0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3ebfe6.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L3ebfea.  v2:= 2I;
  #L3ebfec.  v2:= new `java.lang.Throwable`[v2];
  #L3ebff0.  v3:= 0I;
  #L3ebff2.  v2[v3]:= v5 @kind object;
  #L3ebff6.  v5:= 1I;
  #L3ebff8.  v2[v5]:= v0 @kind object;
  #L3ebffc.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L3ec002.  v5:= v1 @kind object;
  #L3ec004.  v0:= v4.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ec008.  call `onError`(v0, v5) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ec00e.  call `doAfter`(v4) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek$CompletableObserverImplementation;.doAfter:()V` @kind virtual;
  #L3ec014.  return @kind void;
  catch `java.lang.Throwable` @[L3ebfc0..L3ebfdc] goto L3ebfde;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek$CompletableObserverImplementation;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec034.  v0:= v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.this$0` @type ^`io.reactivex.internal.operators.completable.CompletablePeek` @kind object;
  #L3ec038.  v0:= v0.`io.reactivex.internal.operators.completable.CompletablePeek.onSubscribe` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3ec03c.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3ec042.  v0:= v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ec046.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ec04c.  v0:= temp;
  #L3ec04e.  if v0 == 0 then goto L3ec060;
  #L3ec052.  v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L3ec056.  v2:= v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ec05a.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3ec060.  return @kind void;
  #L3ec062.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec064.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3ec06a.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3ec070.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ec074.  v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L3ec078.  v2:= v1.`io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ec07c.  call `error`(v0, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L3ec082.  return @kind void;
  catch `java.lang.Throwable` @[L3ec034..L3ec042] goto L3ec062;
}
