record `io.reactivex.internal.operators.completable.CompletableFromObservable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.completable.CompletableFromObservable.observable` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableFromObservable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromObservable;.<init>:(Lio/reactivex/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eac9c.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3eaca2.  v0.`io.reactivex.internal.operators.completable.CompletableFromObservable.observable` @type ^`io.reactivex.ObservableSource` := v1 @kind object;
  #L3eaca6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableFromObservable` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromObservable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3eacb8.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableFromObservable.observable` @type ^`io.reactivex.ObservableSource` @kind object;
  #L3eacbc.  v1:= new `io.reactivex.internal.operators.completable.CompletableFromObservable$CompletableFromObservableObserver`;
  #L3eacc0.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableFromObservable$CompletableFromObservableObserver;.<init>:(Lio/reactivex/CompletableObserver;)V` @kind direct;
  #L3eacc6.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L3eaccc.  return @kind void;
}
