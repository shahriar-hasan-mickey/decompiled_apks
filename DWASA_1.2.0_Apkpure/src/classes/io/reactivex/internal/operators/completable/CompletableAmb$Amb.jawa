record `io.reactivex.internal.operators.completable.CompletableAmb$Amb` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableAmb$Amb.downstream` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.operators.completable.CompletableAmb$Amb.once` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.completable.CompletableAmb$Amb.set` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableAmb$Amb` v0 @kind this, `java.util.concurrent.atomic.AtomicBoolean` v1 @kind object, `io.reactivex.disposables.CompositeDisposable` v2 @kind object, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$Amb;.<init>:(Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e9444.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e944a.  v0.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.once` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v1 @kind object;
  #L3e944e.  v0.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.set` @type ^`io.reactivex.disposables.CompositeDisposable` := v2 @kind object;
  #L3e9452.  v0.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.downstream` @type ^`io.reactivex.CompletableObserver` := v3 @kind object;
  #L3e9456.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableAmb$Amb` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$Amb;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9468.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.once` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3e946c.  v1:= 0I;
  #L3e946e.  v2:= 1I;
  #L3e9470.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L3e9476.  v0:= temp;
  #L3e9478.  if v0 == 0 then goto L3e9490;
  #L3e947c.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.set` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L3e9480.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L3e9486.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3e948a.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3e9490.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableAmb$Amb` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$Amb;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e94a4.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.once` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3e94a8.  v1:= 0I;
  #L3e94aa.  v2:= 1I;
  #L3e94ac.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L3e94b2.  v0:= temp;
  #L3e94b4.  if v0 == 0 then goto L3e94ce;
  #L3e94b8.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.set` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L3e94bc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L3e94c2.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3e94c6.  call `onError`(v0, v4) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3e94cc.  goto L3e94d4;
  #L3e94ce.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e94d4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableAmb$Amb` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$Amb;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e94e8.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableAmb$Amb.set` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L3e94ec.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L3e94f2.  return @kind void;
}
