record `io.reactivex.internal.operators.completable.CompletableAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.CompletableSource`[] `io.reactivex.internal.operators.completable.CompletableAmb.sources` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.completable.CompletableAmb.sourcesIterable` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableAmb` v0 @kind this, `io.reactivex.CompletableSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/CompletableSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e9504.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3e950a.  v0.`io.reactivex.internal.operators.completable.CompletableAmb.sources` @type ^`io.reactivex.CompletableSource`[] := v1 @kind object;
  #L3e950e.  v0.`io.reactivex.internal.operators.completable.CompletableAmb.sourcesIterable` @type ^`java.lang.Iterable` := v2 @kind object;
  #L3e9512.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableAmb` v10 @kind this, `io.reactivex.CompletableObserver` v11 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e9524.  v0:= v10.`io.reactivex.internal.operators.completable.CompletableAmb.sources` @type ^`io.reactivex.CompletableSource`[] @kind object;
  #L3e9528.  v1:= "One of the sources is null" @kind object;
  #L3e952c.  v2:= 0I;
  #L3e952e.  if v0 != 0 then goto L3e95aa;
  #L3e9532.  v0:= 8I;
  #L3e9536.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L3e953a.  v3:= v10.`io.reactivex.internal.operators.completable.CompletableAmb.sourcesIterable` @type ^`java.lang.Iterable` @kind object;
  #L3e953e.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e9544.  v3:= temp @kind object;
  #L3e9546.  v4:= 0I;
  #L3e9548.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e954e.  v5:= temp;
  #L3e9550.  if v5 == 0 then goto L3e95ac;
  #L3e9554.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e955a.  v5:= temp @kind object;
  #L3e955c.  v5:= (`io.reactivex.CompletableSource`) v5 @kind object;
  #L3e9560.  if v5 != 0 then goto L3e9576;
  #L3e9564.  v0:= new `java.lang.NullPointerException`;
  #L3e9568.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e956e.  call `error`(v0, v11) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L3e9574.  return @kind void;
  #L3e9576.  v6:= length @variable v0;
  #L3e9578.  if v4 != v6 then goto L3e958e;
  #L3e957c.  v6:= v4 ^> 2;
  #L3e9580.  v6:= v6 + v4 @kind int;
  #L3e9582.  v6:= new `io.reactivex.CompletableSource`[v6];
  #L3e9586.  call `arraycopy`(v0, v2, v6, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e958c.  v0:= v6 @kind object;
  #L3e958e.  v6:= v4 + 1;
  #L3e9592.  v0[v4]:= v5 @kind object;
  #L3e9596.  v4:= v6;
  #L3e9598.  goto L3e9548;
  #L3e959a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e959c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e95a2.  call `error`(v0, v11) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L3e95a8.  return @kind void;
  #L3e95aa.  v4:= length @variable v0;
  #L3e95ac.  v3:= new `io.reactivex.disposables.CompositeDisposable`;
  #L3e95b0.  call `<init>`(v3) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L3e95b6.  call `onSubscribe`(v11, v3) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3e95bc.  v5:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L3e95c0.  call `<init>`(v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L3e95c6.  v6:= new `io.reactivex.internal.operators.completable.CompletableAmb$Amb`;
  #L3e95ca.  call `<init>`(v6, v5, v3, v11) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$Amb;.<init>:(Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/CompletableObserver;)V` @kind direct;
  #L3e95d0.  v7:= 0I;
  #L3e95d2.  if v7 >= v4 then goto L3e9626;
  #L3e95d6.  v8:= v0[v7] @kind object;
  #L3e95da.  call temp:= `isDisposed`(v3) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L3e95e0.  v9:= temp;
  #L3e95e2.  if v9 == 0 then goto L3e95e8;
  #L3e95e6.  return @kind void;
  #L3e95e8.  if v8 != 0 then goto L3e961a;
  #L3e95ec.  v0:= new `java.lang.NullPointerException`;
  #L3e95f0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e95f6.  v1:= 1I;
  #L3e95f8.  call temp:= `compareAndSet`(v5, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L3e95fe.  v1:= temp;
  #L3e9600.  if v1 == 0 then goto L3e9612;
  #L3e9604.  call `dispose`(v3) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L3e960a.  call `onError`(v11, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3e9610.  goto L3e9618;
  #L3e9612.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e9618.  return @kind void;
  #L3e961a.  call `subscribe`(v8, v6) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L3e9620.  v7:= v7 + 1;
  #L3e9624.  goto L3e95d2;
  #L3e9626.  if v4 != 0 then goto L3e9630;
  #L3e962a.  call `onComplete`(v11) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3e9630.  return @kind void;
  catch `java.lang.Throwable` @[L3e953a..L3e9596] goto L3e959a;
}
