record `io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableHide$HideCompletableObserver;.<init>:(Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3eafa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eafa6.  v0.`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L3eafaa.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableHide$HideCompletableObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eafbc.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3eafc0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3eafc6.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3eafca.  v1.`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L3eafce.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableHide$HideCompletableObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eaf80.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3eaf84.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L3eaf8a.  v0:= temp;
  #L3eaf8c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableHide$HideCompletableObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eafe0.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3eafe4.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3eafea.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableHide$HideCompletableObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eaffc.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3eb000.  call `onError`(v0, v2) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3eb006.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableHide$HideCompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb018.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3eb01c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3eb022.  v0:= temp;
  #L3eb024.  if v0 == 0 then goto L3eb036;
  #L3eb028.  v1.`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L3eb02c.  v2:= v1.`io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3eb030.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3eb036.  return @kind void;
}
