record `io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `boolean` `io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.disposed` @AccessFlag VOLATILE;
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.scheduler` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn$DisposeOnObserver;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ea648.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ea64e.  v0.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.downstream` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L3ea652.  v0.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.scheduler` @type ^`io.reactivex.Scheduler` := v2 @kind object;
  #L3ea656.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn$DisposeOnObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea668.  v0:= 1I;
  #L3ea66a.  v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.disposed` @type ^`boolean` := v0 @kind boolean;
  #L3ea66e.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L3ea672.  call temp:= `scheduleDirect`(v0, v1) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3ea678.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn$DisposeOnObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea630.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.disposed` @type ^`boolean` @kind boolean;
  #L3ea634.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn$DisposeOnObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea68c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.disposed` @type ^`boolean` @kind boolean;
  #L3ea690.  if v0 == 0 then goto L3ea696;
  #L3ea694.  return @kind void;
  #L3ea696.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ea69a.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3ea6a0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn$DisposeOnObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea6b4.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.disposed` @type ^`boolean` @kind boolean;
  #L3ea6b8.  if v0 == 0 then goto L3ea6c4;
  #L3ea6bc.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3ea6c2.  return @kind void;
  #L3ea6c4.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ea6c8.  call `onError`(v0, v2) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ea6ce.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn$DisposeOnObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea6e0.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ea6e4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ea6ea.  v0:= temp;
  #L3ea6ec.  if v0 == 0 then goto L3ea6fe;
  #L3ea6f0.  v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L3ea6f4.  v2:= v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ea6f8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3ea6fe.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn$DisposeOnObserver;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea710.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3ea714.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3ea71a.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea71e.  v1.`io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L3ea722.  return @kind void;
}
