record `io.reactivex.internal.operators.completable.CompletableErrorSupplier` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.completable.CompletableErrorSupplier.errorSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableErrorSupplier` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableErrorSupplier;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eaa70.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3eaa76.  v0.`io.reactivex.internal.operators.completable.CompletableErrorSupplier.errorSupplier` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L3eaa7a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableErrorSupplier` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableErrorSupplier;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3eaa8c.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableErrorSupplier.errorSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L3eaa90.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L3eaa96.  v0:= temp @kind object;
  #L3eaa98.  v1:= "The error returned is null" @kind object;
  #L3eaa9c.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3eaaa2.  v0:= temp @kind object;
  #L3eaaa4.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L3eaaa8.  goto L3eaab2;
  #L3eaaaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaaac.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3eaab2.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L3eaab8.  return @kind void;
  catch `java.lang.Throwable` @[L3eaa8c..L3eaaa8] goto L3eaaaa;
}
