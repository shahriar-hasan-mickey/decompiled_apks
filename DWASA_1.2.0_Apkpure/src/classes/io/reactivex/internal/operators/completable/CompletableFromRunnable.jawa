record `io.reactivex.internal.operators.completable.CompletableFromRunnable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `java.lang.Runnable` `io.reactivex.internal.operators.completable.CompletableFromRunnable.runnable` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableFromRunnable` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eae14.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3eae1a.  v0.`io.reactivex.internal.operators.completable.CompletableFromRunnable.runnable` @type ^`java.lang.Runnable` := v1 @kind object;
  #L3eae1e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableFromRunnable` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromRunnable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3eae30.  call temp:= `empty`() @signature `Lio/reactivex/disposables/Disposables;.empty:()Lio/reactivex/disposables/Disposable;` @kind static;
  #L3eae36.  v0:= temp @kind object;
  #L3eae38.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3eae3e.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableFromRunnable.runnable` @type ^`java.lang.Runnable` @kind object;
  #L3eae42.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3eae48.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L3eae4e.  v0:= temp;
  #L3eae50.  if v0 != 0 then goto L3eae5a;
  #L3eae54.  call `onComplete`(v3) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3eae5a.  return @kind void;
  #L3eae5c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eae5e.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3eae64.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L3eae6a.  v0:= temp;
  #L3eae6c.  if v0 != 0 then goto L3eae76;
  #L3eae70.  call `onError`(v3, v1) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3eae76.  return @kind void;
  catch `java.lang.Throwable` @[L3eae3e..L3eae48] goto L3eae5c;
}
