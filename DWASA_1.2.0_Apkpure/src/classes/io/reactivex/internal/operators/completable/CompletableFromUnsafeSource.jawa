record `io.reactivex.internal.operators.completable.CompletableFromUnsafeSource` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.completable.CompletableFromUnsafeSource.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableFromUnsafeSource` v0 @kind this, `io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromUnsafeSource;.<init>:(Lio/reactivex/CompletableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eaf48.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3eaf4e.  v0.`io.reactivex.internal.operators.completable.CompletableFromUnsafeSource.source` @type ^`io.reactivex.CompletableSource` := v1 @kind object;
  #L3eaf52.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableFromUnsafeSource` v1 @kind this, `io.reactivex.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromUnsafeSource;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3eaf64.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableFromUnsafeSource.source` @type ^`io.reactivex.CompletableSource` @kind object;
  #L3eaf68.  call `subscribe`(v0, v2) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L3eaf6e.  return @kind void;
}
