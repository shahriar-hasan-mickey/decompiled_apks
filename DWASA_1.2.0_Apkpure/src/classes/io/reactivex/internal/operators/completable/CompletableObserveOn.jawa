record `io.reactivex.internal.operators.completable.CompletableObserveOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.completable.CompletableObserveOn.scheduler` @AccessFlag FINAL;
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.completable.CompletableObserveOn.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableObserveOn` v0 @kind this, `io.reactivex.CompletableSource` v1 @kind object, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ebd18.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3ebd1e.  v0.`io.reactivex.internal.operators.completable.CompletableObserveOn.source` @type ^`io.reactivex.CompletableSource` := v1 @kind object;
  #L3ebd22.  v0.`io.reactivex.internal.operators.completable.CompletableObserveOn.scheduler` @type ^`io.reactivex.Scheduler` := v2 @kind object;
  #L3ebd26.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableObserveOn` v3 @kind this, `io.reactivex.CompletableObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L3ebd38.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableObserveOn.source` @type ^`io.reactivex.CompletableSource` @kind object;
  #L3ebd3c.  v1:= new `io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver`;
  #L3ebd40.  v2:= v3.`io.reactivex.internal.operators.completable.CompletableObserveOn.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L3ebd44.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$ObserveOnCompletableObserver;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3ebd4a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L3ebd50.  return @kind void;
}
