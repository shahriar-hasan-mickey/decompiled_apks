record `io.reactivex.internal.operators.completable.CompletableOnErrorComplete` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.completable.CompletableOnErrorComplete.predicate` @AccessFlag FINAL;
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.completable.CompletableOnErrorComplete.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableOnErrorComplete` v0 @kind this, `io.reactivex.CompletableSource` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableOnErrorComplete;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ebe34.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3ebe3a.  v0.`io.reactivex.internal.operators.completable.CompletableOnErrorComplete.source` @type ^`io.reactivex.CompletableSource` := v1 @kind object;
  #L3ebe3e.  v0.`io.reactivex.internal.operators.completable.CompletableOnErrorComplete.predicate` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L3ebe42.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableOnErrorComplete` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableOnErrorComplete;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3ebe54.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableOnErrorComplete.source` @type ^`io.reactivex.CompletableSource` @kind object;
  #L3ebe58.  v1:= new `io.reactivex.internal.operators.completable.CompletableOnErrorComplete$OnError`;
  #L3ebe5c.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableOnErrorComplete$OnError;.<init>:(Lio/reactivex/internal/operators/completable/CompletableOnErrorComplete;Lio/reactivex/CompletableObserver;)V` @kind direct;
  #L3ebe62.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L3ebe68.  return @kind void;
}
