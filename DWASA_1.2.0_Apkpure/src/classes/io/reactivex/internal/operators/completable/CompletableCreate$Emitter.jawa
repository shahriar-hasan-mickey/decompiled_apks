record `io.reactivex.internal.operators.completable.CompletableCreate$Emitter` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableEmitter` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableCreate$Emitter.downstream` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableCreate$Emitter.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableCreate$Emitter` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.<init>:(Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ea184.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3ea18a.  v0.`io.reactivex.internal.operators.completable.CompletableCreate$Emitter.downstream` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L3ea18e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableCreate$Emitter` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L3ea1a0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3ea1a6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableCreate$Emitter` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea094.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ea09a.  v0:= temp @kind object;
  #L3ea09c.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3ea0a0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ea0a6.  v0:= temp;
  #L3ea0a8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableCreate$Emitter` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea1b8.  call temp:= `get`(v2) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ea1be.  v0:= temp @kind object;
  #L3ea1c0.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea1c4.  if v0 == v1 then goto L3ea204;
  #L3ea1c8.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea1cc.  call temp:= `getAndSet`(v2, v0) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea1d2.  v0:= temp @kind object;
  #L3ea1d4.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3ea1d8.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea1dc.  if v0 == v1 then goto L3ea204;
  #L3ea1e0.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableCreate$Emitter.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ea1e4.  call `onComplete`(v1) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3ea1ea.  if v0 == 0 then goto L3ea204;
  #L3ea1ee.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3ea1f4.  goto L3ea204;
  #L3ea1f6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea1f8.  if v0 == 0 then goto L3ea202;
  #L3ea1fc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3ea202.  throw v1;
  #L3ea204.  return @kind void;
  catch `java.lang.Throwable` @[L3ea1e0..L3ea1ea] goto L3ea1f6;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableCreate$Emitter` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea224.  call temp:= `tryOnError`(v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.tryOnError:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L3ea22a.  v0:= temp;
  #L3ea22c.  if v0 != 0 then goto L3ea236;
  #L3ea230.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3ea236.  return @kind void;
}
procedure `void` `setCancellable`(`io.reactivex.internal.operators.completable.CompletableCreate$Emitter` v1 @kind this, `io.reactivex.functions.Cancellable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.setCancellable:(Lio/reactivex/functions/Cancellable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea248.  v0:= new `io.reactivex.internal.disposables.CancellableDisposable`;
  #L3ea24c.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/disposables/CancellableDisposable;.<init>:(Lio/reactivex/functions/Cancellable;)V` @kind direct;
  #L3ea252.  call `setDisposable`(v1, v0) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.setDisposable:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L3ea258.  return @kind void;
}
procedure `void` `setDisposable`(`io.reactivex.internal.operators.completable.CompletableCreate$Emitter` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.setDisposable:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L3ea26c.  call temp:= `set`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ea272.  return @kind void;
}
procedure `java.lang.String` `toString`(`io.reactivex.internal.operators.completable.CompletableCreate$Emitter` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ea13c.  v0:= 2I;
  #L3ea13e.  v0:= new `java.lang.Object`[v0];
  #L3ea142.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ea148.  v1:= temp @kind object;
  #L3ea14a.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3ea150.  v1:= temp @kind object;
  #L3ea152.  v2:= 0I;
  #L3ea154.  v0[v2]:= v1 @kind object;
  #L3ea158.  call temp:= `toString`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.toString:()Ljava/lang/String;` @kind super;
  #L3ea15e.  v1:= temp @kind object;
  #L3ea160.  v2:= 1I;
  #L3ea162.  v0[v2]:= v1 @kind object;
  #L3ea166.  v1:= "%s{%s}" @kind object;
  #L3ea16a.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3ea170.  v0:= temp @kind object;
  #L3ea172.  return v0 @kind object;
}
procedure `boolean` `tryOnError`(`io.reactivex.internal.operators.completable.CompletableCreate$Emitter` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.tryOnError:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea0bc.  if v3 != 0 then goto L3ea0ce;
  #L3ea0c0.  v3:= new `java.lang.NullPointerException`;
  #L3ea0c4.  v0:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L3ea0c8.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ea0ce.  call temp:= `get`(v2) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ea0d4.  v0:= temp @kind object;
  #L3ea0d6.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea0da.  if v0 == v1 then goto L3ea11c;
  #L3ea0de.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea0e2.  call temp:= `getAndSet`(v2, v0) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate$Emitter;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea0e8.  v0:= temp @kind object;
  #L3ea0ea.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3ea0ee.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3ea0f2.  if v0 == v1 then goto L3ea11c;
  #L3ea0f6.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableCreate$Emitter.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ea0fa.  call `onError`(v1, v3) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ea100.  if v0 == 0 then goto L3ea10a;
  #L3ea104.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3ea10a.  v3:= 1I;
  #L3ea10c.  return v3;
  #L3ea10e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea110.  if v0 == 0 then goto L3ea11a;
  #L3ea114.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3ea11a.  throw v3;
  #L3ea11c.  v3:= 0I;
  #L3ea11e.  return v3;
  catch `java.lang.Throwable` @[L3ea0f6..L3ea100] goto L3ea10e;
}
