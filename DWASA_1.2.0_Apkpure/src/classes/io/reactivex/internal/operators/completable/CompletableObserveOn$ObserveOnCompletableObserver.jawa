record `io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.downstream` @AccessFlag FINAL;
  `java.lang.Throwable` `io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.error` @AccessFlag ;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.scheduler` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$ObserveOnCompletableObserver;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ebc34.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3ebc3a.  v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L3ebc3e.  v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.scheduler` @type ^`io.reactivex.Scheduler` := v2 @kind object;
  #L3ebc42.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$ObserveOnCompletableObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L3ebc54.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3ebc5a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$ObserveOnCompletableObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebc0c.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$ObserveOnCompletableObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ebc12.  v0:= temp @kind object;
  #L3ebc14.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3ebc18.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ebc1e.  v0:= temp;
  #L3ebc20.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$ObserveOnCompletableObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebc6c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L3ebc70.  call temp:= `scheduleDirect`(v0, v1) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3ebc76.  v0:= temp @kind object;
  #L3ebc78.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ebc7e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$ObserveOnCompletableObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L3ebc90.  v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.error` @type ^`java.lang.Throwable` := v1 @kind object;
  #L3ebc94.  v1:= v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L3ebc98.  call temp:= `scheduleDirect`(v1, v0) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3ebc9e.  v1:= temp @kind object;
  #L3ebca0.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ebca6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$ObserveOnCompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L3ebcb8.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ebcbe.  v1:= temp;
  #L3ebcc0.  if v1 == 0 then goto L3ebcce;
  #L3ebcc4.  v1:= v0.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ebcc8.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3ebcce.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn$ObserveOnCompletableObserver;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ebce0.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.error` @type ^`java.lang.Throwable` @kind object;
  #L3ebce4.  if v0 == 0 then goto L3ebcfa;
  #L3ebce8.  v1:= 0I;
  #L3ebcea.  v2.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.error` @type ^`java.lang.Throwable` := v1 @kind object;
  #L3ebcee.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ebcf2.  call `onError`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ebcf8.  goto L3ebd04;
  #L3ebcfa.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ebcfe.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3ebd04.  return @kind void;
}
