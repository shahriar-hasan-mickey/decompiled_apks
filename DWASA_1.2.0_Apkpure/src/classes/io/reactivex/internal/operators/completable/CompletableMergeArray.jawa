record `io.reactivex.internal.operators.completable.CompletableMergeArray` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.CompletableSource`[] `io.reactivex.internal.operators.completable.CompletableMergeArray.sources` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableMergeArray` v0 @kind this, `io.reactivex.CompletableSource`[] v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray;.<init>:([Lio/reactivex/CompletableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eb5d4.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3eb5da.  v0.`io.reactivex.internal.operators.completable.CompletableMergeArray.sources` @type ^`io.reactivex.CompletableSource`[] := v1 @kind object;
  #L3eb5de.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableMergeArray` v6 @kind this, `io.reactivex.CompletableObserver` v7 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3eb5f0.  v0:= new `io.reactivex.disposables.CompositeDisposable`;
  #L3eb5f4.  call `<init>`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L3eb5fa.  v1:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L3eb5fe.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L3eb604.  v2:= new `io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver`;
  #L3eb608.  v3:= v6.`io.reactivex.internal.operators.completable.CompletableMergeArray.sources` @type ^`io.reactivex.CompletableSource`[] @kind object;
  #L3eb60c.  v3:= length @variable v3;
  #L3eb60e.  v3:= v3 + 1;
  #L3eb612.  call `<init>`(v2, v7, v1, v0, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray$InnerCompletableObserver;.<init>:(Lio/reactivex/CompletableObserver;Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;I)V` @kind direct;
  #L3eb618.  call `onSubscribe`(v7, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3eb61e.  v7:= v6.`io.reactivex.internal.operators.completable.CompletableMergeArray.sources` @type ^`io.reactivex.CompletableSource`[] @kind object;
  #L3eb622.  v1:= length @variable v7;
  #L3eb624.  v3:= 0I;
  #L3eb626.  if v3 >= v1 then goto L3eb668;
  #L3eb62a.  v4:= v7[v3] @kind object;
  #L3eb62e.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L3eb634.  v5:= temp;
  #L3eb636.  if v5 == 0 then goto L3eb63c;
  #L3eb63a.  return @kind void;
  #L3eb63c.  if v4 != 0 then goto L3eb65c;
  #L3eb640.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L3eb646.  v7:= new `java.lang.NullPointerException`;
  #L3eb64a.  v0:= "A completable source is null" @kind object;
  #L3eb64e.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb654.  call `onError`(v2, v7) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray$InnerCompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3eb65a.  return @kind void;
  #L3eb65c.  call `subscribe`(v4, v2) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L3eb662.  v3:= v3 + 1;
  #L3eb666.  goto L3eb626;
  #L3eb668.  call `onComplete`(v2) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray$InnerCompletableObserver;.onComplete:()V` @kind virtual;
  #L3eb66e.  return @kind void;
}
