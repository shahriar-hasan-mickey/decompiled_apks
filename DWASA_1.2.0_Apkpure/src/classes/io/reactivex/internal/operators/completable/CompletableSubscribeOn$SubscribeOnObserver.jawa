record `io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.source` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.task` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$SubscribeOnObserver;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/CompletableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ec290.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3ec296.  v0.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.downstream` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L3ec29a.  v0.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.source` @type ^`io.reactivex.CompletableSource` := v2 @kind object;
  #L3ec29e.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L3ec2a2.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L3ec2a8.  v0.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L3ec2ac.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$SubscribeOnObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec2c0.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3ec2c6.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L3ec2ca.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L3ec2d0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$SubscribeOnObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec268.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$SubscribeOnObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ec26e.  v0:= temp @kind object;
  #L3ec270.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3ec274.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ec27a.  v0:= temp;
  #L3ec27c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$SubscribeOnObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec2e4.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ec2e8.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L3ec2ee.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$SubscribeOnObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec300.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.downstream` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L3ec304.  call `onError`(v0, v2) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3ec30a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$SubscribeOnObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L3ec31c.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3ec322.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$SubscribeOnObserver;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec334.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver.source` @type ^`io.reactivex.CompletableSource` @kind object;
  #L3ec338.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L3ec33e.  return @kind void;
}
