record `io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber` `io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver` v0 @kind this, `io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver;.<init>:(Lio/reactivex/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e9924.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3e992a.  v0.`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver.parent` @type ^`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber` := v1 @kind object;
  #L3e992e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9940.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver.parent` @type ^`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber` @kind object;
  #L3e9944.  call `innerComplete`(v0) @signature `Lio/reactivex/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber;.innerComplete:()V` @kind virtual;
  #L3e994a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e995c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver.parent` @type ^`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber` @kind object;
  #L3e9960.  call `innerError`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber;.innerError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3e9966.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L3e9978.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e997e.  return @kind void;
}
