record `io.reactivex.internal.operators.parallel.ParallelPeek` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.parallel.ParallelFlowable` @kind class {
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.onAfterNext` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.parallel.ParallelPeek.onAfterTerminated` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.parallel.ParallelPeek.onCancel` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.parallel.ParallelPeek.onComplete` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.onError` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.onNext` @AccessFlag FINAL;
  `io.reactivex.functions.LongConsumer` `io.reactivex.internal.operators.parallel.ParallelPeek.onRequest` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.onSubscribe` @AccessFlag FINAL;
  `io.reactivex.parallel.ParallelFlowable` `io.reactivex.internal.operators.parallel.ParallelPeek.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelPeek` v0 @kind this, `io.reactivex.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Consumer` v4 @kind object, `io.reactivex.functions.Action` v5 @kind object, `io.reactivex.functions.Action` v6 @kind object, `io.reactivex.functions.Consumer` v7 @kind object, `io.reactivex.functions.LongConsumer` v8 @kind object, `io.reactivex.functions.Action` v9 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/parallel/ParallelFlowable;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/LongConsumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L438fb4.  call `<init>`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L438fba.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.source` @type ^`io.reactivex.parallel.ParallelFlowable` := v1 @kind object;
  #L438fbe.  v1:= "onNext is null" @kind object;
  #L438fc2.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L438fc8.  v1:= temp @kind object;
  #L438fca.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L438fce.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.onNext` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L438fd2.  v1:= "onAfterNext is null" @kind object;
  #L438fd6.  call temp:= `requireNonNull`(v3, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L438fdc.  v1:= temp @kind object;
  #L438fde.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L438fe2.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.onAfterNext` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L438fe6.  v1:= "onError is null" @kind object;
  #L438fea.  call temp:= `requireNonNull`(v4, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L438ff0.  v1:= temp @kind object;
  #L438ff2.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L438ff6.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.onError` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L438ffa.  v1:= "onComplete is null" @kind object;
  #L438ffe.  call temp:= `requireNonNull`(v5, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L439004.  v1:= temp @kind object;
  #L439006.  v1:= (`io.reactivex.functions.Action`) v1 @kind object;
  #L43900a.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.onComplete` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L43900e.  v1:= "onAfterTerminated is null" @kind object;
  #L439012.  call temp:= `requireNonNull`(v6, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L439018.  v1:= temp @kind object;
  #L43901a.  v1:= (`io.reactivex.functions.Action`) v1 @kind object;
  #L43901e.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.onAfterTerminated` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L439022.  v1:= "onSubscribe is null" @kind object;
  #L439026.  call temp:= `requireNonNull`(v7, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43902c.  v1:= temp @kind object;
  #L43902e.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L439032.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.onSubscribe` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L439036.  v1:= "onRequest is null" @kind object;
  #L43903a.  call temp:= `requireNonNull`(v8, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L439040.  v1:= temp @kind object;
  #L439042.  v1:= (`io.reactivex.functions.LongConsumer`) v1 @kind object;
  #L439046.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.onRequest` @type ^`io.reactivex.functions.LongConsumer` := v1 @kind object;
  #L43904a.  v1:= "onCancel is null" @kind object;
  #L43904e.  call temp:= `requireNonNull`(v9, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L439054.  v1:= temp @kind object;
  #L439056.  v1:= (`io.reactivex.functions.Action`) v1 @kind object;
  #L43905a.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.onCancel` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L43905e.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.internal.operators.parallel.ParallelPeek` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438f94.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelPeek.source` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L438f98.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L438f9e.  v0:= temp;
  #L438fa0.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.internal.operators.parallel.ParallelPeek` v5 @kind this, `org.reactivestreams.Subscriber`[] v6 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L439070.  call temp:= `validate`(v5, v6) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L439076.  v0:= temp;
  #L439078.  if v0 != 0 then goto L43907e;
  #L43907c.  return @kind void;
  #L43907e.  v0:= length @variable v6;
  #L439080.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L439084.  v2:= 0I;
  #L439086.  if v2 >= v0 then goto L4390a2;
  #L43908a.  v3:= new `io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber`;
  #L43908e.  v4:= v6[v2] @kind object;
  #L439092.  call `<init>`(v3, v4, v5) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek$ParallelPeekSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/internal/operators/parallel/ParallelPeek;)V` @kind direct;
  #L439098.  v1[v2]:= v3 @kind object;
  #L43909c.  v2:= v2 + 1;
  #L4390a0.  goto L439086;
  #L4390a2.  v6:= v5.`io.reactivex.internal.operators.parallel.ParallelPeek.source` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L4390a6.  call `subscribe`(v6, v1) @signature `Lio/reactivex/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L4390ac.  return @kind void;
}
