record `io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `int` `io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber.index` @AccessFlag FINAL;
  `io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription` `io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber` v0 @kind this, `io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinInnerSubscriber;.<init>:(Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinSubscription;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L439dfc.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L439e02.  v0.`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber.parent` @type ^`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription` := v1 @kind object;
  #L439e06.  v0.`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber.index` @type ^`int` := v2;
  #L439e0a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinInnerSubscriber;.cancel:()V` @AccessFlag  {
    temp;

  #L439e1c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L439e22.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinInnerSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L439e34.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinInnerSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439e48.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber.parent` @type ^`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription` @kind object;
  #L439e4c.  call `innerError`(v0, v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinSubscription;.innerError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L439e52.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinInnerSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L439e64.  v1:= (`java.util.List`) v1 @kind object;
  #L439e68.  call `onNext`(v0, v1) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinInnerSubscriber;.onNext:(Ljava/util/List;)V` @kind virtual;
  #L439e6e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinInnerSubscriber;.onNext:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439e80.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber.parent` @type ^`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription` @kind object;
  #L439e84.  v1:= v2.`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber.index` @type ^`int`;
  #L439e88.  call `innerNext`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinSubscription;.innerNext:(Ljava/util/List;I)V` @kind virtual;
  #L439e8e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinInnerSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439ea0.  v0:= 9223372036854775807L;
  #L439eaa.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L439eb0.  return @kind void;
}
