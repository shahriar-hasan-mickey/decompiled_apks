record `io.reactivex.internal.operators.parallel.ParallelMapTry$1` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.internal.operators.parallel.ParallelMapTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/parallel/ParallelMapTry$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4386a4.  call temp:= `values`() @signature `Lio/reactivex/parallel/ParallelFailureHandling;.values:()[Lio/reactivex/parallel/ParallelFailureHandling;` @kind static;
  #L4386aa.  v0:= temp @kind object;
  #L4386ac.  v0:= length @variable v0;
  #L4386ae.  v0:= new `int`[v0];
  #L4386b2.  `@@io.reactivex.internal.operators.parallel.ParallelMapTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] := v0 @kind object;
  #L4386b6.  v0:= `@@io.reactivex.internal.operators.parallel.ParallelMapTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] @kind object;
  #L4386ba.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.RETRY` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L4386be.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.ordinal:()I` @kind virtual;
  #L4386c4.  v1:= temp;
  #L4386c6.  v2:= 1I;
  #L4386c8.  v0[v1]:= v2;
  #L4386cc.  v0:= `@@io.reactivex.internal.operators.parallel.ParallelMapTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] @kind object;
  #L4386d0.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.SKIP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L4386d4.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.ordinal:()I` @kind virtual;
  #L4386da.  v1:= temp;
  #L4386dc.  v2:= 2I;
  #L4386de.  v0[v1]:= v2;
  #L4386e2.  v0:= `@@io.reactivex.internal.operators.parallel.ParallelMapTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] @kind object;
  #L4386e6.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.STOP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L4386ea.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.ordinal:()I` @kind virtual;
  #L4386f0.  v1:= temp;
  #L4386f2.  v2:= 3I;
  #L4386f4.  v0[v1]:= v2;
  #L4386f8.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L4386b6..L4386cc] goto L4386cc;
  catch `java.lang.NoSuchFieldError` @[L4386cc..L4386e2] goto L4386e2;
  catch `java.lang.NoSuchFieldError` @[L4386e2..L4386f8] goto L4386f8;
}
