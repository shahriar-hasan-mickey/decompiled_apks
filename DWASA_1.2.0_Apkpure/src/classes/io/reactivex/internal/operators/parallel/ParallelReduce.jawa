record `io.reactivex.internal.operators.parallel.ParallelReduce` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.parallel.ParallelFlowable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.parallel.ParallelReduce.initialSupplier` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.parallel.ParallelReduce.reducer` @AccessFlag FINAL;
  `io.reactivex.parallel.ParallelFlowable` `io.reactivex.internal.operators.parallel.ParallelReduce.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelReduce` v0 @kind this, `io.reactivex.parallel.ParallelFlowable` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce;.<init>:(Lio/reactivex/parallel/ParallelFlowable;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L439660.  call `<init>`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L439666.  v0.`io.reactivex.internal.operators.parallel.ParallelReduce.source` @type ^`io.reactivex.parallel.ParallelFlowable` := v1 @kind object;
  #L43966a.  v0.`io.reactivex.internal.operators.parallel.ParallelReduce.initialSupplier` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L43966e.  v0.`io.reactivex.internal.operators.parallel.ParallelReduce.reducer` @type ^`io.reactivex.functions.BiFunction` := v3 @kind object;
  #L439672.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.internal.operators.parallel.ParallelReduce` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439640.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelReduce.source` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L439644.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L43964a.  v0:= temp;
  #L43964c.  return v0;
}
procedure `void` `reportError`(`io.reactivex.internal.operators.parallel.ParallelReduce` v3 @kind this, `org.reactivestreams.Subscriber`[] v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce;.reportError:([Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L439684.  v0:= length @variable v4;
  #L439686.  v1:= 0I;
  #L439688.  if v1 >= v0 then goto L43969c;
  #L43968c.  v2:= v4[v1] @kind object;
  #L439690.  call `error`(v5, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L439696.  v1:= v1 + 1;
  #L43969a.  goto L439688;
  #L43969c.  return @kind void;
}
procedure `void` `subscribe`(`io.reactivex.internal.operators.parallel.ParallelReduce` v7 @kind this, `org.reactivestreams.Subscriber`[] v8 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4396b0.  call temp:= `validate`(v7, v8) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L4396b6.  v0:= temp;
  #L4396b8.  if v0 != 0 then goto L4396be;
  #L4396bc.  return @kind void;
  #L4396be.  v0:= length @variable v8;
  #L4396c0.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L4396c4.  v2:= 0I;
  #L4396c6.  if v2 >= v0 then goto L43970e;
  #L4396ca.  v3:= v7.`io.reactivex.internal.operators.parallel.ParallelReduce.initialSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L4396ce.  call temp:= `call`(v3) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4396d4.  v3:= temp @kind object;
  #L4396d6.  v4:= "The initialSupplier returned a null value" @kind object;
  #L4396da.  call temp:= `requireNonNull`(v3, v4) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4396e0.  v3:= temp @kind object;
  #L4396e2.  v4:= new `io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber`;
  #L4396e6.  v5:= v8[v2] @kind object;
  #L4396ea.  v6:= v7.`io.reactivex.internal.operators.parallel.ParallelReduce.reducer` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L4396ee.  call `<init>`(v4, v5, v3, v6) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce$ParallelReduceSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L4396f4.  v1[v2]:= v4 @kind object;
  #L4396f8.  v2:= v2 + 1;
  #L4396fc.  goto L4396c6;
  #L4396fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L439700.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L439706.  call `reportError`(v7, v8, v0) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduce;.reportError:([Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V` @kind virtual;
  #L43970c.  return @kind void;
  #L43970e.  v8:= v7.`io.reactivex.internal.operators.parallel.ParallelReduce.source` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L439712.  call `subscribe`(v8, v1) @signature `Lio/reactivex/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L439718.  return @kind void;
  catch `java.lang.Throwable` @[L4396ca..L4396e2] goto L4396fe;
}
