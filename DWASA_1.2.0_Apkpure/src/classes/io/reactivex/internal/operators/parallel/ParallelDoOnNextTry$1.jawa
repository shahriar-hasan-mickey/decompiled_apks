record `io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$1` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/parallel/ParallelDoOnNextTry$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4363e0.  call temp:= `values`() @signature `Lio/reactivex/parallel/ParallelFailureHandling;.values:()[Lio/reactivex/parallel/ParallelFailureHandling;` @kind static;
  #L4363e6.  v0:= temp @kind object;
  #L4363e8.  v0:= length @variable v0;
  #L4363ea.  v0:= new `int`[v0];
  #L4363ee.  `@@io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] := v0 @kind object;
  #L4363f2.  v0:= `@@io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] @kind object;
  #L4363f6.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.RETRY` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L4363fa.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.ordinal:()I` @kind virtual;
  #L436400.  v1:= temp;
  #L436402.  v2:= 1I;
  #L436404.  v0[v1]:= v2;
  #L436408.  v0:= `@@io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] @kind object;
  #L43640c.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.SKIP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L436410.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.ordinal:()I` @kind virtual;
  #L436416.  v1:= temp;
  #L436418.  v2:= 2I;
  #L43641a.  v0[v1]:= v2;
  #L43641e.  v0:= `@@io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] @kind object;
  #L436422.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.STOP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L436426.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.ordinal:()I` @kind virtual;
  #L43642c.  v1:= temp;
  #L43642e.  v2:= 3I;
  #L436430.  v0[v1]:= v2;
  #L436434.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L4363f2..L436408] goto L436408;
  catch `java.lang.NoSuchFieldError` @[L436408..L43641e] goto L43641e;
  catch `java.lang.NoSuchFieldError` @[L43641e..L436434] goto L436434;
}
