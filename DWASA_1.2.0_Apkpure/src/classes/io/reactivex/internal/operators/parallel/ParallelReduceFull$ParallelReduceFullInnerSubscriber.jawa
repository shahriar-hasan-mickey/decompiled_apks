record `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `boolean` `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.done` @AccessFlag ;
  `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.parent` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.reducer` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.value` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber` v0 @kind this, `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.<init>:(Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L439208.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L43920e.  v0.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.parent` @type ^`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` := v1 @kind object;
  #L439212.  v0.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.reducer` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L439216.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.cancel:()V` @AccessFlag  {
    temp;

  #L439228.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L43922e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439240.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.done` @type ^`boolean` @kind boolean;
  #L439244.  if v0 != 0 then goto L43925c;
  #L439248.  v0:= 1I;
  #L43924a.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L43924e.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.parent` @type ^`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` @kind object;
  #L439252.  v1:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L439256.  call `innerComplete`(v0, v1) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.innerComplete:(Ljava/lang/Object;)V` @kind virtual;
  #L43925c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439270.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.done` @type ^`boolean` @kind boolean;
  #L439274.  if v0 == 0 then goto L439280;
  #L439278.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L43927e.  return @kind void;
  #L439280.  v0:= 1I;
  #L439282.  v1.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L439286.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.parent` @type ^`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` @kind object;
  #L43928a.  call `innerError`(v0, v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.innerError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L439290.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4392a4.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.done` @type ^`boolean` @kind boolean;
  #L4392a8.  if v0 != 0 then goto L4392f8;
  #L4392ac.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L4392b0.  if v0 != 0 then goto L4392ba;
  #L4392b4.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.value` @type ^`java.lang.Object` := v3 @kind object;
  #L4392b8.  goto L4392f8;
  #L4392ba.  v1:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.reducer` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L4392be.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4392c4.  v3:= temp @kind object;
  #L4392c6.  v0:= "The reducer returned a null value" @kind object;
  #L4392ca.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4392d0.  v3:= temp @kind object;
  #L4392d2.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber.value` @type ^`java.lang.Object` := v3 @kind object;
  #L4392d6.  goto L4392f8;
  #L4392d8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4392da.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4392e0.  call temp:= `get`(v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.get:()Ljava/lang/Object;` @kind virtual;
  #L4392e6.  v0:= temp @kind object;
  #L4392e8.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L4392ec.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4392f2.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4392f8.  return @kind void;
  catch `java.lang.Throwable` @[L4392ba..L4392d2] goto L4392d8;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439318.  v0:= 9223372036854775807L;
  #L439322.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L439328.  return @kind void;
}
