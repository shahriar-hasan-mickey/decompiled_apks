record `io.reactivex.internal.operators.parallel.ParallelFilterTry$1` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.internal.operators.parallel.ParallelFilterTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L436bd8.  call temp:= `values`() @signature `Lio/reactivex/parallel/ParallelFailureHandling;.values:()[Lio/reactivex/parallel/ParallelFailureHandling;` @kind static;
  #L436bde.  v0:= temp @kind object;
  #L436be0.  v0:= length @variable v0;
  #L436be2.  v0:= new `int`[v0];
  #L436be6.  `@@io.reactivex.internal.operators.parallel.ParallelFilterTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] := v0 @kind object;
  #L436bea.  v0:= `@@io.reactivex.internal.operators.parallel.ParallelFilterTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] @kind object;
  #L436bee.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.RETRY` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L436bf2.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.ordinal:()I` @kind virtual;
  #L436bf8.  v1:= temp;
  #L436bfa.  v2:= 1I;
  #L436bfc.  v0[v1]:= v2;
  #L436c00.  v0:= `@@io.reactivex.internal.operators.parallel.ParallelFilterTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] @kind object;
  #L436c04.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.SKIP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L436c08.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.ordinal:()I` @kind virtual;
  #L436c0e.  v1:= temp;
  #L436c10.  v2:= 2I;
  #L436c12.  v0[v1]:= v2;
  #L436c16.  v0:= `@@io.reactivex.internal.operators.parallel.ParallelFilterTry$1.$SwitchMap$io$reactivex$parallel$ParallelFailureHandling` @type ^`int`[] @kind object;
  #L436c1a.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.STOP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L436c1e.  call temp:= `ordinal`(v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.ordinal:()I` @kind virtual;
  #L436c24.  v1:= temp;
  #L436c26.  v2:= 3I;
  #L436c28.  v0[v1]:= v2;
  #L436c2c.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L436bea..L436c00] goto L436c00;
  catch `java.lang.NoSuchFieldError` @[L436c00..L436c16] goto L436c16;
  catch `java.lang.NoSuchFieldError` @[L436c16..L436c2c] goto L436c2c;
}
