record `io.reactivex.internal.operators.parallel.ParallelSortedJoin` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `java.util.Comparator` `io.reactivex.internal.operators.parallel.ParallelSortedJoin.comparator` @AccessFlag FINAL;
  `io.reactivex.parallel.ParallelFlowable` `io.reactivex.internal.operators.parallel.ParallelSortedJoin.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin` v0 @kind this, `io.reactivex.parallel.ParallelFlowable` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin;.<init>:(Lio/reactivex/parallel/ParallelFlowable;Ljava/util/Comparator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43a29c.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L43a2a2.  v0.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.source` @type ^`io.reactivex.parallel.ParallelFlowable` := v1 @kind object;
  #L43a2a6.  v0.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.comparator` @type ^`java.util.Comparator` := v2 @kind object;
  #L43a2aa.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.parallel.ParallelSortedJoin` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L43a2bc.  v0:= new `io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription`;
  #L43a2c0.  v1:= v3.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.source` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L43a2c4.  call temp:= `parallelism`(v1) @signature `Lio/reactivex/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L43a2ca.  v1:= temp;
  #L43a2cc.  v2:= v3.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.comparator` @type ^`java.util.Comparator` @kind object;
  #L43a2d0.  call `<init>`(v0, v4, v1, v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelSortedJoin$SortedJoinSubscription;.<init>:(Lorg/reactivestreams/Subscriber;ILjava/util/Comparator;)V` @kind direct;
  #L43a2d6.  call `onSubscribe`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L43a2dc.  v4:= v3.`io.reactivex.internal.operators.parallel.ParallelSortedJoin.source` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L43a2e0.  v0:= v0.`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription.subscribers` @type ^`io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber`[] @kind object;
  #L43a2e4.  call `subscribe`(v4, v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L43a2ea.  return @kind void;
}
