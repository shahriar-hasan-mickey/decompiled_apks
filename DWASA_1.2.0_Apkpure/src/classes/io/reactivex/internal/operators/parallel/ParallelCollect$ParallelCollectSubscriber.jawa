record `io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.DeferredScalarSubscriber` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.collection` @AccessFlag ;
  `io.reactivex.functions.BiConsumer` `io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.collector` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.done` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelCollect$ParallelCollectSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Lio/reactivex/functions/BiConsumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4360ec.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4360f2.  v0.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.collection` @type ^`java.lang.Object` := v2 @kind object;
  #L4360f6.  v0.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.collector` @type ^`io.reactivex.functions.BiConsumer` := v3 @kind object;
  #L4360fa.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelCollect$ParallelCollectSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43610c.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.cancel:()V` @kind super;
  #L436112.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L436116.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L43611c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelCollect$ParallelCollectSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L436130.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.done` @type ^`boolean` @kind boolean;
  #L436134.  if v0 == 0 then goto L43613a;
  #L436138.  return @kind void;
  #L43613a.  v0:= 1I;
  #L43613c.  v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L436140.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.collection` @type ^`java.lang.Object` @kind object;
  #L436144.  v1:= 0I;
  #L436146.  v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.collection` @type ^`java.lang.Object` := v1 @kind object;
  #L43614a.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/operators/parallel/ParallelCollect$ParallelCollectSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L436150.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelCollect$ParallelCollectSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L436164.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.done` @type ^`boolean` @kind boolean;
  #L436168.  if v0 == 0 then goto L436174;
  #L43616c.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L436172.  return @kind void;
  #L436174.  v0:= 1I;
  #L436176.  v1.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L43617a.  v0:= 0I;
  #L43617c.  v1.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.collection` @type ^`java.lang.Object` := v0 @kind object;
  #L436180.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L436184.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43618a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelCollect$ParallelCollectSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43619c.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.done` @type ^`boolean` @kind boolean;
  #L4361a0.  if v0 == 0 then goto L4361a6;
  #L4361a4.  return @kind void;
  #L4361a6.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.collector` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L4361aa.  v1:= v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.collection` @type ^`java.lang.Object` @kind object;
  #L4361ae.  call `accept`(v0, v1, v3) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4361b4.  goto L4361ca;
  #L4361b6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4361b8.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4361be.  call `cancel`(v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelCollect$ParallelCollectSubscriber;.cancel:()V` @kind virtual;
  #L4361c4.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/parallel/ParallelCollect$ParallelCollectSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4361ca.  return @kind void;
  catch `java.lang.Throwable` @[L4361a6..L4361b4] goto L4361b6;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelCollect$ParallelCollectSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4361e8.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4361ec.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4361f2.  v0:= temp;
  #L4361f4.  if v0 == 0 then goto L436216;
  #L4361f8.  v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4361fc.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L436200.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L436206.  v0:= 9223372036854775807L;
  #L436210.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L436216.  return @kind void;
}
