record `io.reactivex.internal.operators.maybe.MaybeUsing` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Maybe` @kind class {
  `boolean` `io.reactivex.internal.operators.maybe.MaybeUsing.eager` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.maybe.MaybeUsing.resourceDisposer` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.maybe.MaybeUsing.resourceSupplier` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeUsing.sourceSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeUsing` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/maybe/MaybeUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4175a0.  call `<init>`(v0) @signature `Lio/reactivex/Maybe;.<init>:()V` @kind direct;
  #L4175a6.  v0.`io.reactivex.internal.operators.maybe.MaybeUsing.resourceSupplier` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L4175aa.  v0.`io.reactivex.internal.operators.maybe.MaybeUsing.sourceSupplier` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4175ae.  v0.`io.reactivex.internal.operators.maybe.MaybeUsing.resourceDisposer` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L4175b2.  v0.`io.reactivex.internal.operators.maybe.MaybeUsing.eager` @type ^`boolean` := v4 @kind boolean;
  #L4175b6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeUsing` v5 @kind this, `io.reactivex.MaybeObserver` v6 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeUsing;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4175c8.  v0:= v5.`io.reactivex.internal.operators.maybe.MaybeUsing.resourceSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L4175cc.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4175d2.  v0:= temp @kind object;
  #L4175d4.  v1:= v5.`io.reactivex.internal.operators.maybe.MaybeUsing.sourceSupplier` @type ^`io.reactivex.functions.Function` @kind object;
  #L4175d8.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4175de.  v1:= temp @kind object;
  #L4175e0.  v2:= "The sourceSupplier returned a null MaybeSource" @kind object;
  #L4175e4.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4175ea.  v1:= temp @kind object;
  #L4175ec.  v1:= (`io.reactivex.MaybeSource`) v1 @kind object;
  #L4175f0.  v2:= new `io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver`;
  #L4175f4.  v3:= v5.`io.reactivex.internal.operators.maybe.MaybeUsing.resourceDisposer` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L4175f8.  v4:= v5.`io.reactivex.internal.operators.maybe.MaybeUsing.eager` @type ^`boolean` @kind boolean;
  #L4175fc.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/internal/operators/maybe/MaybeUsing$UsingObserver;.<init>:(Lio/reactivex/MaybeObserver;Ljava/lang/Object;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L417602.  call `subscribe`(v1, v2) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L417608.  return @kind void;
  #L41760a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41760c.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L417612.  v2:= v5.`io.reactivex.internal.operators.maybe.MaybeUsing.eager` @type ^`boolean` @kind boolean;
  #L417616.  if v2 == 0 then goto L417652;
  #L41761a.  v2:= v5.`io.reactivex.internal.operators.maybe.MaybeUsing.resourceDisposer` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L41761e.  call `accept`(v2, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L417624.  goto L417652;
  #L417626.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L417628.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41762e.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L417632.  v3:= 2I;
  #L417634.  v3:= new `java.lang.Throwable`[v3];
  #L417638.  v4:= 0I;
  #L41763a.  v3[v4]:= v1 @kind object;
  #L41763e.  v1:= 1I;
  #L417640.  v3[v1]:= v0 @kind object;
  #L417644.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L41764a.  call `error`(v2, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/MaybeObserver;)V` @kind static;
  #L417650.  return @kind void;
  #L417652.  call `error`(v1, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/MaybeObserver;)V` @kind static;
  #L417658.  v6:= v5.`io.reactivex.internal.operators.maybe.MaybeUsing.eager` @type ^`boolean` @kind boolean;
  #L41765c.  if v6 != 0 then goto L41767a;
  #L417660.  v6:= v5.`io.reactivex.internal.operators.maybe.MaybeUsing.resourceDisposer` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L417664.  call `accept`(v6, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L41766a.  goto L41767a;
  #L41766c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41766e.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L417674.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41767a.  return @kind void;
  #L41767c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41767e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L417684.  call `error`(v0, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/MaybeObserver;)V` @kind static;
  #L41768a.  return @kind void;
  catch `java.lang.Throwable` @[L4175c8..L4175d4] goto L41767c;
  catch `java.lang.Throwable` @[L4175d4..L4175f0] goto L41760a;
  catch `java.lang.Throwable` @[L41761a..L417624] goto L417626;
  catch `java.lang.Throwable` @[L417660..L41766a] goto L41766c;
}
