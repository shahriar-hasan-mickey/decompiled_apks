record `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector.mapper` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector.resultSelector` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L412a14.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L412a1a.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L412a1e.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector.resultSelector` @type ^`io.reactivex.functions.BiFunction` := v3 @kind object;
  #L412a22.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector` v4 @kind this, `io.reactivex.MaybeObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L412a34.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L412a38.  v1:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver`;
  #L412a3c.  v2:= v4.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L412a40.  v3:= v4.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector.resultSelector` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L412a44.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$FlatMapBiMainObserver;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L412a4a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L412a50.  return @kind void;
}
