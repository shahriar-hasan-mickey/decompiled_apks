record `io.reactivex.internal.operators.maybe.MaybeOnErrorComplete` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream` @kind class {
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.maybe.MaybeOnErrorComplete.predicate` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeOnErrorComplete` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorComplete;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4153d0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L4153d6.  v0.`io.reactivex.internal.operators.maybe.MaybeOnErrorComplete.predicate` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L4153da.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeOnErrorComplete` v3 @kind this, `io.reactivex.MaybeObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorComplete;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4153ec.  v0:= v3.`io.reactivex.internal.operators.maybe.MaybeOnErrorComplete.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L4153f0.  v1:= new `io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver`;
  #L4153f4.  v2:= v3.`io.reactivex.internal.operators.maybe.MaybeOnErrorComplete.predicate` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L4153f8.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorComplete$OnErrorCompleteMaybeObserver;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L4153fe.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L415404.  return @kind void;
}
