record `io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.predicate` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$FilterMaybeObserver;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L412670.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L412676.  v0.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L41267a.  v0.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.predicate` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L41267e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$FilterMaybeObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L412690.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L412694.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L412698.  v2.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L41269c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4126a2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$FilterMaybeObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L412650.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L412654.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L41265a.  v0:= temp;
  #L41265c.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$FilterMaybeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4126b4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4126b8.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4126be.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$FilterMaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4126d0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4126d4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4126da.  v0:= temp;
  #L4126dc.  if v0 == 0 then goto L4126ee;
  #L4126e0.  v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L4126e4.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4126e8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4126ee.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle$FilterMaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L412700.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.predicate` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L412704.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L41270a.  v0:= temp;
  #L41270c.  if v0 == 0 then goto L41271c;
  #L412710.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L412714.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L41271a.  goto L412726;
  #L41271c.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L412720.  call `onComplete`(v2) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L412726.  return @kind void;
  #L412728.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41272a.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L412730.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L412734.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41273a.  return @kind void;
  catch `java.lang.Throwable` @[L412700..L41270c] goto L412728;
}
