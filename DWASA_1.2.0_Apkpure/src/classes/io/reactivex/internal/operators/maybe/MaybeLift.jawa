record `io.reactivex.internal.operators.maybe.MaybeLift` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream` @kind class {
  `io.reactivex.MaybeOperator` `io.reactivex.internal.operators.maybe.MaybeLift.operator` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeLift` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.MaybeOperator` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeLift;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/MaybeOperator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L414798.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L41479e.  v0.`io.reactivex.internal.operators.maybe.MaybeLift.operator` @type ^`io.reactivex.MaybeOperator` := v2 @kind object;
  #L4147a2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeLift` v2 @kind this, `io.reactivex.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeLift;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4147b4.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeLift.operator` @type ^`io.reactivex.MaybeOperator` @kind object;
  #L4147b8.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/MaybeOperator;.apply:(Lio/reactivex/MaybeObserver;)Lio/reactivex/MaybeObserver;` @kind interface;
  #L4147be.  v0:= temp @kind object;
  #L4147c0.  v1:= "The operator returned a null MaybeObserver" @kind object;
  #L4147c4.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4147ca.  v0:= temp @kind object;
  #L4147cc.  v0:= (`io.reactivex.MaybeObserver`) v0 @kind object;
  #L4147d0.  v3:= v2.`io.reactivex.internal.operators.maybe.MaybeLift.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L4147d4.  call `subscribe`(v3, v0) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L4147da.  return @kind void;
  #L4147dc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4147de.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4147e4.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/MaybeObserver;)V` @kind static;
  #L4147ea.  return @kind void;
  catch `java.lang.Throwable` @[L4147b4..L4147d0] goto L4147dc;
}
