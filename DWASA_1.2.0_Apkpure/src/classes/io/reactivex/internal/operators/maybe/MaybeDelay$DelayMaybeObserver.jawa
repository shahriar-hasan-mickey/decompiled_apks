record `io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.delay` @AccessFlag FINAL;
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.downstream` @AccessFlag FINAL;
  `java.lang.Throwable` `io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.error` @AccessFlag ;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.scheduler` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.unit` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.value` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.<init>:(Lio/reactivex/MaybeObserver;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L411314.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L41131a.  v0.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L41131e.  v0.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.delay` @type ^`long` := v2 @kind wide;
  #L411322.  v0.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L411326.  v0.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.scheduler` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L41132a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L41133c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L411342.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4112ec.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L4112f2.  v0:= temp @kind object;
  #L4112f4.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4112f8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4112fe.  v0:= temp;
  #L411300.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L411354.  call `schedule`(v0) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.schedule:()V` @kind virtual;
  #L41135a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L41136c.  v0.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.error` @type ^`java.lang.Throwable` := v1 @kind object;
  #L411370.  call `schedule`(v0) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.schedule:()V` @kind virtual;
  #L411376.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L411388.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L41138e.  v1:= temp;
  #L411390.  if v1 == 0 then goto L41139e;
  #L411394.  v1:= v0.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L411398.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L41139e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4113b0.  v0.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.value` @type ^`java.lang.Object` := v1 @kind object;
  #L4113b4.  call `schedule`(v0) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.schedule:()V` @kind virtual;
  #L4113ba.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4113cc.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.error` @type ^`java.lang.Throwable` @kind object;
  #L4113d0.  if v0 == 0 then goto L4113e0;
  #L4113d4.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4113d8.  call `onError`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4113de.  goto L4113fe;
  #L4113e0.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.value` @type ^`java.lang.Object` @kind object;
  #L4113e4.  if v0 == 0 then goto L4113f4;
  #L4113e8.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4113ec.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4113f2.  goto L4113fe;
  #L4113f4.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4113f8.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L4113fe.  return @kind void;
}
procedure `void` `schedule`(`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver` v4 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.schedule:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L411410.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L411414.  v1:= v4.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.delay` @type ^`long` @kind wide;
  #L411418.  v3:= v4.`io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L41141c.  call temp:= `scheduleDirect`(v0, v4, v1, v3) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L411422.  v0:= temp @kind object;
  #L411424.  call temp:= `replace`(v4, v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L41142a.  return @kind void;
}
