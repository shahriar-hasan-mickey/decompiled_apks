record `io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream` @kind class {
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher.fallback` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher.other` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.MaybeSource` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher;.<init>:(Lio/reactivex/MaybeSource;Lorg/reactivestreams/Publisher;Lio/reactivex/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L416ba8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L416bae.  v0.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher.other` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L416bb2.  v0.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher.fallback` @type ^`io.reactivex.MaybeSource` := v3 @kind object;
  #L416bb6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher` v2 @kind this, `io.reactivex.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L416bc8.  v0:= new `io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver`;
  #L416bcc.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher.fallback` @type ^`io.reactivex.MaybeSource` @kind object;
  #L416bd0.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$TimeoutMainMaybeObserver;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/MaybeSource;)V` @kind direct;
  #L416bd6.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L416bdc.  v3:= v2.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher.other` @type ^`org.reactivestreams.Publisher` @kind object;
  #L416be0.  v1:= v0.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver.other` @type ^`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver` @kind object;
  #L416be4.  call `subscribe`(v3, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L416bea.  v3:= v2.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L416bee.  call `subscribe`(v3, v0) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L416bf4.  return @kind void;
}
