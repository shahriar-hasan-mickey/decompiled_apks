record `io.reactivex.internal.operators.maybe.MaybeCallbackObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.observers.LambdaConsumerIntrospection` @kind interface {
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onComplete` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onError` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onSuccess` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.maybe.MaybeCallbackObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4103dc.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4103e2.  v0.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onSuccess` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L4103e6.  v0.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onError` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L4103ea.  v0.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onComplete` @type ^`io.reactivex.functions.Action` := v3 @kind object;
  #L4103ee.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L410400.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L410406.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L410390.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onError` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L410394.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L410398.  if v0 == v1 then goto L4103a0;
  #L41039c.  v0:= 1I;
  #L41039e.  goto L4103a2;
  #L4103a0.  v0:= 0I;
  #L4103a2.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4103b4.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L4103ba.  v0:= temp @kind object;
  #L4103bc.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4103c0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4103c6.  v0:= temp;
  #L4103c8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410418.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L41041c.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L410422.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onComplete` @type ^`io.reactivex.functions.Action` @kind object;
  #L410426.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L41042c.  goto L41043c;
  #L41042e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L410430.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L410436.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41043c.  return @kind void;
  catch `java.lang.Throwable` @[L410422..L41042c] goto L41042e;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41045c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L410460.  call `lazySet`(v4, v0) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L410466.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onError` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L41046a.  call `accept`(v0, v5) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L410470.  goto L41049c;
  #L410472.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L410474.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41047a.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L41047e.  v2:= 2I;
  #L410480.  v2:= new `java.lang.Throwable`[v2];
  #L410484.  v3:= 0I;
  #L410486.  v2[v3]:= v5 @kind object;
  #L41048a.  v5:= 1I;
  #L41048c.  v2[v5]:= v0 @kind object;
  #L410490.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L410496.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41049c.  return @kind void;
  catch `java.lang.Throwable` @[L410466..L410470] goto L410472;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4104bc.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4104c2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeCallbackObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4104d4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4104d8.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4104de.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeCallbackObserver.onSuccess` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L4104e2.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4104e8.  goto L4104f8;
  #L4104ea.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4104ec.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4104f2.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4104f8.  return @kind void;
  catch `java.lang.Throwable` @[L4104de..L4104e8] goto L4104ea;
}
