record `io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.internal.operators.maybe.MaybePeek` `io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.parent` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.internal.operators.maybe.MaybePeek` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/internal/operators/maybe/MaybePeek;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4157fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L415802.  v0.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.downstream` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L415806.  v0.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.parent` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` := v2 @kind object;
  #L41580a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41581c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.parent` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L415820.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.onDisposeCall` @type ^`io.reactivex.functions.Action` @kind object;
  #L415824.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L41582a.  goto L41583a;
  #L41582c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41582e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L415834.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41583a.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L41583e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L415844.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L415848.  v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L41584c.  return @kind void;
  catch `java.lang.Throwable` @[L41581c..L41582a] goto L41582c;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4157dc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4157e0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4157e6.  v0:= temp;
  #L4157e8.  return v0;
}
procedure `void` `onAfterTerminate`(`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onAfterTerminate:()V` @AccessFlag  {
    temp;
    v0;

  #L41586c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.parent` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L415870.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.onAfterTerminate` @type ^`io.reactivex.functions.Action` @kind object;
  #L415874.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L41587a.  goto L41588a;
  #L41587c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41587e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L415884.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41588a.  return @kind void;
  catch `java.lang.Throwable` @[L41586c..L41587a] goto L41587c;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4158a8.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4158ac.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4158b0.  if v0 != v1 then goto L4158b6;
  #L4158b4.  return @kind void;
  #L4158b6.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.parent` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L4158ba.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.onCompleteCall` @type ^`io.reactivex.functions.Action` @kind object;
  #L4158be.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L4158c4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4158c8.  v2.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4158cc.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4158d0.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L4158d6.  call `onAfterTerminate`(v2) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onAfterTerminate:()V` @kind virtual;
  #L4158dc.  return @kind void;
  #L4158de.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4158e0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4158e6.  call `onErrorInner`(v2, v0) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onErrorInner:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4158ec.  return @kind void;
  catch `java.lang.Throwable` @[L4158b6..L4158c4] goto L4158de;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41590c.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L415910.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L415914.  if v0 != v1 then goto L415920;
  #L415918.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41591e.  return @kind void;
  #L415920.  call `onErrorInner`(v2, v3) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onErrorInner:(Ljava/lang/Throwable;)V` @kind virtual;
  #L415926.  return @kind void;
}
procedure `void` `onErrorInner`(`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onErrorInner:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L415938.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.parent` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L41593c.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.onErrorCall` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L415940.  call `accept`(v0, v5) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L415946.  goto L41596e;
  #L415948.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41594a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L415950.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L415954.  v2:= 2I;
  #L415956.  v2:= new `java.lang.Throwable`[v2];
  #L41595a.  v3:= 0I;
  #L41595c.  v2[v3]:= v5 @kind object;
  #L415960.  v5:= 1I;
  #L415962.  v2[v5]:= v0 @kind object;
  #L415966.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L41596c.  v5:= v1 @kind object;
  #L41596e.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L415972.  v4.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L415976.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L41597a.  call `onError`(v0, v5) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L415980.  call `onAfterTerminate`(v4) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onAfterTerminate:()V` @kind virtual;
  #L415986.  return @kind void;
  catch `java.lang.Throwable` @[L415938..L415946] goto L415948;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4159a4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4159a8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4159ae.  v0:= temp;
  #L4159b0.  if v0 == 0 then goto L4159f2;
  #L4159b4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.parent` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L4159b8.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.onSubscribeCall` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L4159bc.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4159c2.  v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L4159c6.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4159ca.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4159d0.  goto L4159f2;
  #L4159d2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4159d4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4159da.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4159e0.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4159e4.  v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L4159e8.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4159ec.  call `error`(v0, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/MaybeObserver;)V` @kind static;
  #L4159f2.  return @kind void;
  catch `java.lang.Throwable` @[L4159b4..L4159c2] goto L4159d2;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L415a10.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L415a14.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L415a18.  if v0 != v1 then goto L415a1e;
  #L415a1c.  return @kind void;
  #L415a1e.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.parent` @type ^`io.reactivex.internal.operators.maybe.MaybePeek` @kind object;
  #L415a22.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybePeek.onSuccessCall` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L415a26.  call `accept`(v0, v3) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L415a2c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L415a30.  v2.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L415a34.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L415a38.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L415a3e.  call `onAfterTerminate`(v2) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onAfterTerminate:()V` @kind virtual;
  #L415a44.  return @kind void;
  #L415a46.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L415a48.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L415a4e.  call `onErrorInner`(v2, v3) @signature `Lio/reactivex/internal/operators/maybe/MaybePeek$MaybePeekObserver;.onErrorInner:(Ljava/lang/Throwable;)V` @kind virtual;
  #L415a54.  return @kind void;
  catch `java.lang.Throwable` @[L415a1e..L415a2c] goto L415a46;
}
