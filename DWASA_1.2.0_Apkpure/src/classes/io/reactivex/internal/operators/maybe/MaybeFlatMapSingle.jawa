record `io.reactivex.internal.operators.maybe.MaybeFlatMapSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeFlatMapSingle.mapper` @AccessFlag FINAL;
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.maybe.MaybeFlatMapSingle.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapSingle` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapSingle;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4138c8.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L4138ce.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapSingle.source` @type ^`io.reactivex.MaybeSource` := v1 @kind object;
  #L4138d2.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapSingle.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4138d6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeFlatMapSingle` v3 @kind this, `io.reactivex.SingleObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapSingle;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4138e8.  v0:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatMapSingle.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L4138ec.  v1:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver`;
  #L4138f0.  v2:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatMapSingle.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L4138f4.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapSingle$FlatMapMaybeObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Function;)V` @kind direct;
  #L4138fa.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L413900.  return @kind void;
}
