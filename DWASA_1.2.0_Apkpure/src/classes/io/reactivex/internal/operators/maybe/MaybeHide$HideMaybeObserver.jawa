record `io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$HideMaybeObserver;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4140c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4140ca.  v0.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L4140ce.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$HideMaybeObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4140e0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4140e4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4140ea.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4140ee.  v1.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4140f2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$HideMaybeObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4140a4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4140a8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4140ae.  v0:= temp;
  #L4140b0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$HideMaybeObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414104.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L414108.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L41410e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$HideMaybeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414120.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L414124.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41412a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$HideMaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41413c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L414140.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L414146.  v0:= temp;
  #L414148.  if v0 == 0 then goto L41415a;
  #L41414c.  v1.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L414150.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L414154.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L41415a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$HideMaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41416c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L414170.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L414176.  return @kind void;
}
