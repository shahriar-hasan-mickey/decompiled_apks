record `io.reactivex.internal.operators.maybe.MaybeDelay` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream` @kind class {
  `long` `io.reactivex.internal.operators.maybe.MaybeDelay.delay` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.maybe.MaybeDelay.scheduler` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.maybe.MaybeDelay.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDelay` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay;.<init>:(Lio/reactivex/MaybeSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L411aec.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L411af2.  v0.`io.reactivex.internal.operators.maybe.MaybeDelay.delay` @type ^`long` := v2 @kind wide;
  #L411af6.  v0.`io.reactivex.internal.operators.maybe.MaybeDelay.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L411afa.  v0.`io.reactivex.internal.operators.maybe.MaybeDelay.scheduler` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L411afe.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeDelay` v8 @kind this, `io.reactivex.MaybeObserver` v9 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L411b10.  v0:= v8.`io.reactivex.internal.operators.maybe.MaybeDelay.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L411b14.  v7:= new `io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver`;
  #L411b18.  v3:= v8.`io.reactivex.internal.operators.maybe.MaybeDelay.delay` @type ^`long` @kind wide;
  #L411b1c.  v5:= v8.`io.reactivex.internal.operators.maybe.MaybeDelay.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L411b20.  v6:= v8.`io.reactivex.internal.operators.maybe.MaybeDelay.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L411b24.  v1:= v7 @kind object;
  #L411b26.  v2:= v9 @kind object;
  #L411b28.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelay$DelayMaybeObserver;.<init>:(Lio/reactivex/MaybeObserver;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L411b2e.  call `subscribe`(v0, v7) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L411b34.  return @kind void;
}
