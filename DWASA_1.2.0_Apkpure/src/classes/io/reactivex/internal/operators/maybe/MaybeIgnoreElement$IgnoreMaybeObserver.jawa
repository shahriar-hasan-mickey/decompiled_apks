record `io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$IgnoreMaybeObserver;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4141e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4141ee.  v0.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L4141f2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$IgnoreMaybeObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414204.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L414208.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L41420e.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L414212.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L414216.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$IgnoreMaybeObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4141c8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4141cc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4141d2.  v0:= temp;
  #L4141d4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$IgnoreMaybeObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414228.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L41422c.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L414230.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L414234.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L41423a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$IgnoreMaybeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41424c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L414250.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L414254.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L414258.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L41425e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$IgnoreMaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414270.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L414274.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L41427a.  v0:= temp;
  #L41427c.  if v0 == 0 then goto L41428e;
  #L414280.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L414284.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L414288.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L41428e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$IgnoreMaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4142a0.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4142a4.  v0.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L4142a8.  v1:= v0.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4142ac.  call `onComplete`(v1) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L4142b2.  return @kind void;
}
