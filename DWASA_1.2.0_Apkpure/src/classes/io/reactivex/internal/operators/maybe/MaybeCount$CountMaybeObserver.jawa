record `io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount$CountMaybeObserver;.<init>:(Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L410e54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L410e5a.  v0.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.downstream` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L410e5e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount$CountMaybeObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410e70.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L410e74.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L410e7a.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L410e7e.  v1.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L410e82.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount$CountMaybeObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410e34.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L410e38.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L410e3e.  v0:= temp;
  #L410e40.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver` v3 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount$CountMaybeObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L410e94.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L410e98.  v3.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L410e9c.  v0:= v3.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L410ea0.  v1:= 0L;
  #L410ea4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L410eaa.  v1:= temp @kind object;
  #L410eac.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L410eb2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount$CountMaybeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410ec4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L410ec8.  v1.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L410ecc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L410ed0.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L410ed6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount$CountMaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410ee8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L410eec.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L410ef2.  v0:= temp;
  #L410ef4.  if v0 == 0 then goto L410f06;
  #L410ef8.  v1.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L410efc.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L410f00.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L410f06.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeCount$CountMaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L410f18.  v3:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L410f1c.  v2.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v3 @kind object;
  #L410f20.  v3:= v2.`io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L410f24.  v0:= 1L;
  #L410f28.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L410f2e.  v0:= temp @kind object;
  #L410f30.  call `onSuccess`(v3, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L410f36.  return @kind void;
}
