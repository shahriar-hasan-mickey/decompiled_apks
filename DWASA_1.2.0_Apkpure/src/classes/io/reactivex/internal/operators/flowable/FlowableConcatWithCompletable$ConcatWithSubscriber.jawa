record `io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.CompletableObserver` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.downstream` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.inCompletable` @AccessFlag ;
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.other` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatWithCompletable$ConcatWithSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/CompletableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f3454.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3f345a.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L3f345e.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.other` @type ^`io.reactivex.CompletableSource` := v2 @kind object;
  #L3f3462.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatWithCompletable$ConcatWithSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3474.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3f3478.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L3f347e.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3f3484.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatWithCompletable$ConcatWithSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f3498.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.inCompletable` @type ^`boolean` @kind boolean;
  #L3f349c.  if v0 == 0 then goto L3f34ac;
  #L3f34a0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3f34a4.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L3f34aa.  goto L3f34ca;
  #L3f34ac.  v0:= 1I;
  #L3f34ae.  v2.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.inCompletable` @type ^`boolean` := v0 @kind boolean;
  #L3f34b2.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L3f34b6.  v2.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L3f34ba.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.other` @type ^`io.reactivex.CompletableSource` @kind object;
  #L3f34be.  v1:= 0I;
  #L3f34c0.  v2.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.other` @type ^`io.reactivex.CompletableSource` := v1 @kind object;
  #L3f34c4.  call `subscribe`(v0, v2) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L3f34ca.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatWithCompletable$ConcatWithSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f34dc.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3f34e0.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3f34e6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatWithCompletable$ConcatWithSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f34f8.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3f34fc.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L3f3502.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatWithCompletable$ConcatWithSubscriber;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L3f3514.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3f351a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatWithCompletable$ConcatWithSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f352c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3f3530.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L3f3536.  v0:= temp;
  #L3f3538.  if v0 == 0 then goto L3f354a;
  #L3f353c.  v1.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L3f3540.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3f3544.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L3f354a.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatWithCompletable$ConcatWithSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f355c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3f3560.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L3f3566.  return @kind void;
}
