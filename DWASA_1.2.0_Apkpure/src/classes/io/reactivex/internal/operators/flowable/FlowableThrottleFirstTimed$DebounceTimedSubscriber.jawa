record `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface, `java.lang.Runnable` @kind interface {
  `boolean` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @AccessFlag ;
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.gate` @AccessFlag VOLATILE;
  `long` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timeout` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timer` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.unit` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.upstream` @AccessFlag ;
  `io.reactivex.Scheduler$Worker` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler$Worker` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L40a0e0.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L40a0e6.  v0:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L40a0ea.  call `<init>`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L40a0f0.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timer` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v0 @kind object;
  #L40a0f4.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L40a0f8.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timeout` @type ^`long` := v3 @kind wide;
  #L40a0fc.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.unit` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L40a100.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.Scheduler$Worker` := v6 @kind object;
  #L40a104.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a118.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L40a11c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L40a122.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L40a126.  call `dispose`(v0) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L40a12c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a140.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` @kind boolean;
  #L40a144.  if v0 == 0 then goto L40a14a;
  #L40a148.  return @kind void;
  #L40a14a.  v0:= 1I;
  #L40a14c.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L40a150.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40a154.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L40a15a.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L40a15e.  call `dispose`(v0) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L40a164.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a178.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` @kind boolean;
  #L40a17c.  if v0 == 0 then goto L40a188;
  #L40a180.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L40a186.  return @kind void;
  #L40a188.  v0:= 1I;
  #L40a18a.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L40a18e.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40a192.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L40a198.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L40a19c.  call `dispose`(v2) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L40a1a2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40a1b4.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` @kind boolean;
  #L40a1b8.  if v0 == 0 then goto L40a1be;
  #L40a1bc.  return @kind void;
  #L40a1be.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.gate` @type ^`boolean` @kind boolean;
  #L40a1c2.  if v0 != 0 then goto L40a250;
  #L40a1c6.  v0:= 1I;
  #L40a1c8.  v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.gate` @type ^`boolean` := v0 @kind boolean;
  #L40a1cc.  call temp:= `get`(v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.get:()J` @kind virtual;
  #L40a1d2.  v1:= temp @kind wide;
  #L40a1d4.  v3:= 0L;
  #L40a1d8.  v5:= lcmp(v1, v3);
  #L40a1dc.  if v5 == 0 then goto L40a22e;
  #L40a1e0.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40a1e4.  call `onNext`(v0, v7) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L40a1ea.  v0:= 1L;
  #L40a1ee.  call temp:= `produced`(v6, v0) @signature `Lio/reactivex/internal/util/BackpressureHelper;.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L40a1f4.  v7:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timer` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L40a1f8.  call temp:= `get`(v7) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.get:()Ljava/lang/Object;` @kind virtual;
  #L40a1fe.  v7:= temp @kind object;
  #L40a200.  v7:= (`io.reactivex.disposables.Disposable`) v7 @kind object;
  #L40a204.  if v7 == 0 then goto L40a20e;
  #L40a208.  call `dispose`(v7) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L40a20e.  v7:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timer` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L40a212.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L40a216.  v1:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timeout` @type ^`long` @kind wide;
  #L40a21a.  v3:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L40a21e.  call temp:= `schedule`(v0, v6, v1, v3) @signature `Lio/reactivex/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L40a224.  v0:= temp @kind object;
  #L40a226.  call temp:= `replace`(v7, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L40a22c.  goto L40a250;
  #L40a22e.  v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L40a232.  call `cancel`(v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.cancel:()V` @kind virtual;
  #L40a238.  v7:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40a23c.  v0:= new `io.reactivex.exceptions.MissingBackpressureException`;
  #L40a240.  v1:= "Could not deliver value due to lack of requests" @kind object;
  #L40a244.  call `<init>`(v0, v1) @signature `Lio/reactivex/exceptions/MissingBackpressureException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40a24a.  call `onError`(v7, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L40a250.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40a264.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L40a268.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L40a26e.  v0:= temp;
  #L40a270.  if v0 == 0 then goto L40a292;
  #L40a274.  v2.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L40a278.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40a27c.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L40a282.  v0:= 9223372036854775807L;
  #L40a28c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L40a292.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a2a4.  call temp:= `validate`(v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L40a2aa.  v0:= temp;
  #L40a2ac.  if v0 == 0 then goto L40a2b6;
  #L40a2b0.  call temp:= `add`(v1, v2) @signature `Lio/reactivex/internal/util/BackpressureHelper;.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L40a2b6.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a2c8.  v0:= 0I;
  #L40a2ca.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.gate` @type ^`boolean` := v0 @kind boolean;
  #L40a2ce.  return @kind void;
}
