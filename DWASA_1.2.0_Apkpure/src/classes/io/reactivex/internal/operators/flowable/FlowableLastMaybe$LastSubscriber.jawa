record `io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.downstream` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.item` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastMaybe$LastSubscriber;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fe13c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fe142.  v0.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.downstream` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L3fe146.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastMaybe$LastSubscriber;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe158.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fe15c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L3fe162.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L3fe166.  v1.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L3fe16a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastMaybe$LastSubscriber;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe118.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fe11c.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L3fe120.  if v0 != v1 then goto L3fe128;
  #L3fe124.  v0:= 1I;
  #L3fe126.  goto L3fe12a;
  #L3fe128.  v0:= 0I;
  #L3fe12a.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastMaybe$LastSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe17c.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L3fe180.  v2.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L3fe184.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.item` @type ^`java.lang.Object` @kind object;
  #L3fe188.  if v0 == 0 then goto L3fe19e;
  #L3fe18c.  v1:= 0I;
  #L3fe18e.  v2.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.item` @type ^`java.lang.Object` := v1 @kind object;
  #L3fe192.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L3fe196.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L3fe19c.  goto L3fe1a8;
  #L3fe19e.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L3fe1a2.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L3fe1a8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastMaybe$LastSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe1bc.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L3fe1c0.  v1.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L3fe1c4.  v0:= 0I;
  #L3fe1c6.  v1.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.item` @type ^`java.lang.Object` := v0 @kind object;
  #L3fe1ca.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L3fe1ce.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3fe1d4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastMaybe$LastSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3fe1e8.  v0.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.item` @type ^`java.lang.Object` := v1 @kind object;
  #L3fe1ec.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastMaybe$LastSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe200.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fe204.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L3fe20a.  v0:= temp;
  #L3fe20c.  if v0 == 0 then goto L3fe22e;
  #L3fe210.  v2.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L3fe214.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber.downstream` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L3fe218.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3fe21e.  v0:= 9223372036854775807L;
  #L3fe228.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L3fe22e.  return @kind void;
}
