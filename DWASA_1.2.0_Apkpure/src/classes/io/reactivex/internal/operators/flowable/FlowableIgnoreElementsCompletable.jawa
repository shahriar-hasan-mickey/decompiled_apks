record `io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class, `io.reactivex.internal.fuseable.FuseToFlowable` @kind interface {
  `io.reactivex.Flowable` `io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable` v0 @kind this, `io.reactivex.Flowable` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElementsCompletable;.<init>:(Lio/reactivex/Flowable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fcc44.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L3fcc4a.  v0.`io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable.source` @type ^`io.reactivex.Flowable` := v1 @kind object;
  #L3fcc4e.  return @kind void;
}
procedure `io.reactivex.Flowable` `fuseToFlowable`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElementsCompletable;.fuseToFlowable:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcc1c.  v0:= new `io.reactivex.internal.operators.flowable.FlowableIgnoreElements`;
  #L3fcc20.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable.source` @type ^`io.reactivex.Flowable` @kind object;
  #L3fcc24.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L3fcc2a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3fcc30.  v0:= temp @kind object;
  #L3fcc32.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElementsCompletable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3fcc60.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable.source` @type ^`io.reactivex.Flowable` @kind object;
  #L3fcc64.  v1:= new `io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber`;
  #L3fcc68.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber;.<init>:(Lio/reactivex/CompletableObserver;)V` @kind direct;
  #L3fcc6e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L3fcc74.  return @kind void;
}
