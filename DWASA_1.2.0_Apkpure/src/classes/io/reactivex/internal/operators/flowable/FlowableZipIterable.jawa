record `io.reactivex.internal.operators.flowable.FlowableZipIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream` @kind class {
  `java.lang.Iterable` `io.reactivex.internal.operators.flowable.FlowableZipIterable.other` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableZipIterable.zipper` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableZipIterable` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableZipIterable;.<init>:(Lio/reactivex/Flowable;Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40fc38.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L40fc3e.  v0.`io.reactivex.internal.operators.flowable.FlowableZipIterable.other` @type ^`java.lang.Iterable` := v2 @kind object;
  #L40fc42.  v0.`io.reactivex.internal.operators.flowable.FlowableZipIterable.zipper` @type ^`io.reactivex.functions.BiFunction` := v3 @kind object;
  #L40fc46.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableZipIterable` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableZipIterable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40fc58.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableZipIterable.other` @type ^`java.lang.Iterable` @kind object;
  #L40fc5c.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40fc62.  v0:= temp @kind object;
  #L40fc64.  v1:= "The iterator returned by other is null" @kind object;
  #L40fc68.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40fc6e.  v0:= temp @kind object;
  #L40fc70.  v0:= (`java.util.Iterator`) v0 @kind object;
  #L40fc74.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40fc7a.  v1:= temp;
  #L40fc7c.  if v1 != 0 then goto L40fc88;
  #L40fc80.  call `complete`(v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L40fc86.  return @kind void;
  #L40fc88.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableZipIterable.source` @type ^`io.reactivex.Flowable` @kind object;
  #L40fc8c.  v2:= new `io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber`;
  #L40fc90.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableZipIterable.zipper` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L40fc94.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableZipIterable$ZipIterableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/util/Iterator;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L40fc9a.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L40fca0.  return @kind void;
  #L40fca2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40fca4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L40fcaa.  call `error`(v0, v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L40fcb0.  return @kind void;
  #L40fcb2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40fcb4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L40fcba.  call `error`(v0, v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L40fcc0.  return @kind void;
  catch `java.lang.Throwable` @[L40fc58..L40fc74] goto L40fcb2;
  catch `java.lang.Throwable` @[L40fc74..L40fc7c] goto L40fca2;
}
