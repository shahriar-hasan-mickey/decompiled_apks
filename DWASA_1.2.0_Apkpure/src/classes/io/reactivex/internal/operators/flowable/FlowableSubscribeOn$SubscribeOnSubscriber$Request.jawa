record `io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request.n` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request.upstream` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request` v0 @kind this, `org.reactivestreams.Subscription` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableSubscribeOn$SubscribeOnSubscriber$Request;.<init>:(Lorg/reactivestreams/Subscription;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L408630.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L408636.  v0.`io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request.upstream` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L40863a.  v0.`io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request.n` @type ^`long` := v2 @kind wide;
  #L40863e.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request` v3 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableSubscribeOn$SubscribeOnSubscriber$Request;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L408650.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L408654.  v1:= v3.`io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request.n` @type ^`long` @kind wide;
  #L408658.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L40865e.  return @kind void;
}
