record `io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L409550.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L409556.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L409568.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L40956e.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L409572.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L409578.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40958c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L409590.  if v0 == 0 then goto L40959c;
  #L409594.  call `complete`(v1, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L40959a.  goto L4095a6;
  #L40959c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4095a0.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4095a6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4095b8.  v0:= 0I;
  #L4095ba.  v1.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.value` @type ^`java.lang.Object` := v0 @kind object;
  #L4095be.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4095c2.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4095c8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4095dc.  v0.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.value` @type ^`java.lang.Object` := v1 @kind object;
  #L4095e0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4095f4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4095f8.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4095fe.  v0:= temp;
  #L409600.  if v0 == 0 then goto L409622;
  #L409604.  v2.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L409608.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40960c.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L409612.  v0:= 9223372036854775807L;
  #L40961c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L409622.  return @kind void;
}
