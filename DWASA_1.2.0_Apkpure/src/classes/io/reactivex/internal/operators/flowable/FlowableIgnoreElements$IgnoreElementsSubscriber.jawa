record `io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.internal.fuseable.QueueSubscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber.downstream` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fca30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fca36.  v0.`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L3fca3a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fca4c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fca50.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L3fca56.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.clear:()V` @AccessFlag PUBLIC {
    temp;

  #L3fca68.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc9b0.  v0:= 1I;
  #L3fc9b2.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc9c4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3fc9c8.  v0:= "Should not be called!" @kind object;
  #L3fc9cc.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fc9d2.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3fc9e4.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3fc9e8.  v2:= "Should not be called!" @kind object;
  #L3fc9ec.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fc9f2.  throw v1;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fca7c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fca80.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L3fca86.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fca98.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fca9c.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3fcaa2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3fcab4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcac8.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fcacc.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L3fcad2.  v0:= temp;
  #L3fcad4.  if v0 == 0 then goto L3fcaf6;
  #L3fcad8.  v2.`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L3fcadc.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fcae0.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L3fcae6.  v0:= 9223372036854775807L;
  #L3fcaf0.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L3fcaf6.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fca1c.  v0:= 0I;
  #L3fca1e.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;

  #L3fcb08.  return @kind void;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableIgnoreElements$IgnoreElementsSubscriber;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3fca04.  v1:= v1 ^& 2;
  #L3fca08.  return v1;
}
