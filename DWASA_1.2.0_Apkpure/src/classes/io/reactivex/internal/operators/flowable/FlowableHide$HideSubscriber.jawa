record `io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.downstream` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableHide$HideSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fc898.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fc89e.  v0.`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L3fc8a2.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableHide$HideSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc8b4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fc8b8.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L3fc8be.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableHide$HideSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc8d0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fc8d4.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L3fc8da.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableHide$HideSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc8ec.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fc8f0.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3fc8f6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableHide$HideSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc908.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fc90c.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L3fc912.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableHide$HideSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc924.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fc928.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L3fc92e.  v0:= temp;
  #L3fc930.  if v0 == 0 then goto L3fc942;
  #L3fc934.  v1.`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L3fc938.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fc93c.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L3fc942.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableHide$HideSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc954.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fc958.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L3fc95e.  return @kind void;
}
