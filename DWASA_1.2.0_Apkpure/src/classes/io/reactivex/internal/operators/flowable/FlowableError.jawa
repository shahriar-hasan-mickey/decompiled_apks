record `io.reactivex.internal.operators.flowable.FlowableError` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableError.errorSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableError` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableError;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f7270.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L3f7276.  v0.`io.reactivex.internal.operators.flowable.FlowableError.errorSupplier` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L3f727a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableError` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableError;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f728c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableError.errorSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L3f7290.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L3f7296.  v0:= temp @kind object;
  #L3f7298.  v1:= "Callable returned null throwable. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L3f729c.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f72a2.  v0:= temp @kind object;
  #L3f72a4.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L3f72a8.  goto L3f72b2;
  #L3f72aa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f72ac.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3f72b2.  call `error`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L3f72b8.  return @kind void;
  catch `java.lang.Throwable` @[L3f728c..L3f72a8] goto L3f72aa;
}
