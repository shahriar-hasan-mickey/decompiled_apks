record `io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter` @kind class {
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$MissingEmitter;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f4348.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$BaseEmitter;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L3f434e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$MissingEmitter;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f4360.  call temp:= `isCancelled`(v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$MissingEmitter;.isCancelled:()Z` @kind virtual;
  #L3f4366.  v0:= temp;
  #L3f4368.  if v0 == 0 then goto L3f436e;
  #L3f436c.  return @kind void;
  #L3f436e.  if v5 == 0 then goto L3f43a6;
  #L3f4372.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3f4376.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L3f437c.  call temp:= `get`(v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$MissingEmitter;.get:()J` @kind virtual;
  #L3f4382.  v0:= temp @kind wide;
  #L3f4384.  v2:= 0L;
  #L3f4388.  v5:= lcmp(v0, v2);
  #L3f438c.  if v5 == 0 then goto L3f43a4;
  #L3f4390.  v2:= 1L;
  #L3f4394.  v2:= v0 - v2 @kind long;
  #L3f4398.  call temp:= `compareAndSet`(v4, v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$MissingEmitter;.compareAndSet:(JJ)Z` @kind virtual;
  #L3f439e.  v5:= temp;
  #L3f43a0.  if v5 == 0 then goto L3f437c;
  #L3f43a4.  return @kind void;
  #L3f43a6.  v5:= new `java.lang.NullPointerException`;
  #L3f43aa.  v0:= "onNext called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L3f43ae.  call `<init>`(v5, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f43b4.  call `onError`(v4, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$MissingEmitter;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3f43ba.  return @kind void;
}
