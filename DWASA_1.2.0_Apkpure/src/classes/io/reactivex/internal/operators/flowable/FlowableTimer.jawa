record `io.reactivex.internal.operators.flowable.FlowableTimer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `long` `io.reactivex.internal.operators.flowable.FlowableTimer.delay` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableTimer.scheduler` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableTimer.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimer` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40b758.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L40b75e.  v0.`io.reactivex.internal.operators.flowable.FlowableTimer.delay` @type ^`long` := v1 @kind wide;
  #L40b762.  v0.`io.reactivex.internal.operators.flowable.FlowableTimer.unit` @type ^`java.util.concurrent.TimeUnit` := v3 @kind object;
  #L40b766.  v0.`io.reactivex.internal.operators.flowable.FlowableTimer.scheduler` @type ^`io.reactivex.Scheduler` := v4 @kind object;
  #L40b76a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableTimer` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimer;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40b77c.  v0:= new `io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber`;
  #L40b780.  call `<init>`(v0, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimer$TimerSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L40b786.  call `onSubscribe`(v5, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L40b78c.  v5:= v4.`io.reactivex.internal.operators.flowable.FlowableTimer.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L40b790.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableTimer.delay` @type ^`long` @kind wide;
  #L40b794.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableTimer.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L40b798.  call temp:= `scheduleDirect`(v5, v0, v1, v3) @signature `Lio/reactivex/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L40b79e.  v5:= temp @kind object;
  #L40b7a0.  call `setResource`(v0, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimer$TimerSubscriber;.setResource:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L40b7a6.  return @kind void;
}
