record `io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable` @kind class @AccessFlag FINAL extends `io.reactivex.Flowable` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable.mapper` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable.value` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable` v0 @kind this, `java.lang.Object` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap$ScalarXMapFlowable;.<init>:(Ljava/lang/Object;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L406480.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L406486.  v0.`io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable.value` @type ^`java.lang.Object` := v1 @kind object;
  #L40648a.  v0.`io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L40648e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap$ScalarXMapFlowable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4064a0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L4064a4.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable.value` @type ^`java.lang.Object` @kind object;
  #L4064a8.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4064ae.  v0:= temp @kind object;
  #L4064b0.  v1:= "The mapper returned a null Publisher" @kind object;
  #L4064b4.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4064ba.  v0:= temp @kind object;
  #L4064bc.  v0:= (`org.reactivestreams.Publisher`) v0 @kind object;
  #L4064c0.  v1:= instanceof @variable v0 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L4064c4.  if v1 == 0 then goto L406502;
  #L4064c8.  v0:= (`java.util.concurrent.Callable`) v0 @kind object;
  #L4064cc.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4064d2.  v0:= temp @kind object;
  #L4064d4.  if v0 != 0 then goto L4064e0;
  #L4064d8.  call `complete`(v3) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4064de.  return @kind void;
  #L4064e0.  v1:= new `io.reactivex.internal.subscriptions.ScalarSubscription`;
  #L4064e4.  call `<init>`(v1, v3, v0) @signature `Lio/reactivex/internal/subscriptions/ScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)V` @kind direct;
  #L4064ea.  call `onSubscribe`(v3, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4064f0.  goto L406508;
  #L4064f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4064f4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4064fa.  call `error`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L406500.  return @kind void;
  #L406502.  call `subscribe`(v0, v3) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L406508.  return @kind void;
  #L40650a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40650c.  call `error`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L406512.  return @kind void;
  catch `java.lang.Throwable` @[L4064a0..L4064c0] goto L40650a;
  catch `java.lang.Throwable` @[L4064c8..L4064d4] goto L4064f2;
}
