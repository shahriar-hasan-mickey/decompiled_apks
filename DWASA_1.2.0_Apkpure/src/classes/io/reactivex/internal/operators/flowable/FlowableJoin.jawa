record `io.reactivex.internal.operators.flowable.FlowableJoin` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableJoin.leftEnd` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableJoin.other` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableJoin.resultSelector` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableJoin.rightEnd` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableJoin` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.functions.Function` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableJoin;.<init>:(Lio/reactivex/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fe024.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L3fe02a.  v0.`io.reactivex.internal.operators.flowable.FlowableJoin.other` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L3fe02e.  v0.`io.reactivex.internal.operators.flowable.FlowableJoin.leftEnd` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L3fe032.  v0.`io.reactivex.internal.operators.flowable.FlowableJoin.rightEnd` @type ^`io.reactivex.functions.Function` := v4 @kind object;
  #L3fe036.  v0.`io.reactivex.internal.operators.flowable.FlowableJoin.resultSelector` @type ^`io.reactivex.functions.BiFunction` := v5 @kind object;
  #L3fe03a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableJoin` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableJoin;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe04c.  v0:= new `io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription`;
  #L3fe050.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableJoin.leftEnd` @type ^`io.reactivex.functions.Function` @kind object;
  #L3fe054.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableJoin.rightEnd` @type ^`io.reactivex.functions.Function` @kind object;
  #L3fe058.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableJoin.resultSelector` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L3fe05c.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableJoin$JoinSubscription;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3fe062.  call `onSubscribe`(v5, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L3fe068.  v5:= new `io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber`;
  #L3fe06c.  v1:= 1I;
  #L3fe06e.  call `<init>`(v5, v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupJoin$LeftRightSubscriber;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableGroupJoin$JoinSupport;Z)V` @kind direct;
  #L3fe074.  v1:= v0.`io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription.disposables` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L3fe078.  call temp:= `add`(v1, v5) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L3fe07e.  v1:= new `io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber`;
  #L3fe082.  v2:= 0I;
  #L3fe084.  call `<init>`(v1, v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupJoin$LeftRightSubscriber;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableGroupJoin$JoinSupport;Z)V` @kind direct;
  #L3fe08a.  v0:= v0.`io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription.disposables` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L3fe08e.  call temp:= `add`(v0, v1) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L3fe094.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableJoin.source` @type ^`io.reactivex.Flowable` @kind object;
  #L3fe098.  call `subscribe`(v0, v5) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L3fe09e.  v5:= v4.`io.reactivex.internal.operators.flowable.FlowableJoin.other` @type ^`org.reactivestreams.Publisher` @kind object;
  #L3fe0a2.  call `subscribe`(v5, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L3fe0a8.  return @kind void;
}
