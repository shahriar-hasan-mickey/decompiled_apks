record `io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.QueueDrainSubscriber` @kind class, `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface, `java.lang.Runnable` @kind interface {
  `int` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.bufferSize` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.scheduler` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.terminated` @AccessFlag VOLATILE;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.timer` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.timespan` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.unit` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.upstream` @AccessFlag ;
  `io.reactivex.processors.UnicastProcessor` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.window` @AccessFlag ;
}
global `java.lang.Object` `@@io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.NEXT` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L40e0bc.  v0:= new `java.lang.Object`;
  #L40e0c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40e0c6.  `@@io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.NEXT` @type ^`java.lang.Object` := v0 @kind object;
  #L40e0ca.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler` v6 @kind object, `int` v7 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L40e0dc.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue`;
  #L40e0e0.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L40e0e6.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/subscribers/QueueDrainSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/internal/fuseable/SimplePlainQueue;)V` @kind direct;
  #L40e0ec.  v2:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L40e0f0.  call `<init>`(v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L40e0f6.  v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.timer` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v2 @kind object;
  #L40e0fa.  v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.timespan` @type ^`long` := v3 @kind wide;
  #L40e0fe.  v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.unit` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L40e102.  v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.scheduler` @type ^`io.reactivex.Scheduler` := v6 @kind object;
  #L40e106.  v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.bufferSize` @type ^`int` := v7;
  #L40e10a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e11c.  v0:= 1I;
  #L40e11e.  v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L40e122.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e134.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.timer` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L40e138.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L40e13e.  return @kind void;
}
procedure `void` `drainLoop`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v10 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.drainLoop:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L40e150.  v0:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.queue` @type ^`io.reactivex.internal.fuseable.SimplePlainQueue` @kind object;
  #L40e154.  v1:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40e158.  v2:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.window` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L40e15c.  v3:= 1I;
  #L40e15e.  v4:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.terminated` @type ^`boolean` @kind boolean;
  #L40e162.  v5:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.done` @type ^`boolean` @kind boolean;
  #L40e166.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L40e16c.  v6:= temp @kind object;
  #L40e16e.  v7:= 0I;
  #L40e170.  if v5 == 0 then goto L40e1a8;
  #L40e174.  if v6 == 0 then goto L40e180;
  #L40e178.  v5:= `@@io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.NEXT` @type ^`java.lang.Object` @kind object;
  #L40e17c.  if v6 != v5 then goto L40e1a8;
  #L40e180.  v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.window` @type ^`io.reactivex.processors.UnicastProcessor` := v7 @kind object;
  #L40e184.  call `clear`(v0) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.clear:()V` @kind interface;
  #L40e18a.  call `dispose`(v10) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.dispose:()V` @kind virtual;
  #L40e190.  v0:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.error` @type ^`java.lang.Throwable` @kind object;
  #L40e194.  if v0 == 0 then goto L40e1a0;
  #L40e198.  call `onError`(v2, v0) @signature `Lio/reactivex/processors/UnicastProcessor;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L40e19e.  goto L40e1a6;
  #L40e1a0.  call `onComplete`(v2) @signature `Lio/reactivex/processors/UnicastProcessor;.onComplete:()V` @kind virtual;
  #L40e1a6.  return @kind void;
  #L40e1a8.  if v6 != 0 then goto L40e1bc;
  #L40e1ac.  v3:= -v3 @kind int;
  #L40e1ae.  call temp:= `leave`(v10, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.leave:(I)I` @kind virtual;
  #L40e1b4.  v3:= temp;
  #L40e1b6.  if v3 != 0 then goto L40e15e;
  #L40e1ba.  return @kind void;
  #L40e1bc.  v5:= `@@io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.NEXT` @type ^`java.lang.Object` @kind object;
  #L40e1c0.  if v6 != v5 then goto L40e256;
  #L40e1c4.  call `onComplete`(v2) @signature `Lio/reactivex/processors/UnicastProcessor;.onComplete:()V` @kind virtual;
  #L40e1ca.  if v4 != 0 then goto L40e24a;
  #L40e1ce.  v2:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.bufferSize` @type ^`int`;
  #L40e1d2.  call temp:= `create`(v2) @signature `Lio/reactivex/processors/UnicastProcessor;.create:(I)Lio/reactivex/processors/UnicastProcessor;` @kind static;
  #L40e1d8.  v2:= temp @kind object;
  #L40e1da.  v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.window` @type ^`io.reactivex.processors.UnicastProcessor` := v2 @kind object;
  #L40e1de.  call temp:= `requested`(v10) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.requested:()J` @kind virtual;
  #L40e1e4.  v4:= temp @kind wide;
  #L40e1e6.  v8:= 0L;
  #L40e1ea.  v6:= lcmp(v4, v8);
  #L40e1ee.  if v6 == 0 then goto L40e216;
  #L40e1f2.  call `onNext`(v1, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L40e1f8.  v6:= 9223372036854775807L;
  #L40e202.  v8:= lcmp(v4, v6);
  #L40e206.  if v8 == 0 then goto L40e15e;
  #L40e20a.  v4:= 1L;
  #L40e20e.  call temp:= `produced`(v10, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.produced:(J)J` @kind virtual;
  #L40e214.  goto L40e15e;
  #L40e216.  v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.window` @type ^`io.reactivex.processors.UnicastProcessor` := v7 @kind object;
  #L40e21a.  v0:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.queue` @type ^`io.reactivex.internal.fuseable.SimplePlainQueue` @kind object;
  #L40e21e.  call `clear`(v0) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.clear:()V` @kind interface;
  #L40e224.  v0:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L40e228.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L40e22e.  call `dispose`(v10) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.dispose:()V` @kind virtual;
  #L40e234.  v0:= new `io.reactivex.exceptions.MissingBackpressureException`;
  #L40e238.  v2:= "Could not deliver first window due to lack of requests." @kind object;
  #L40e23c.  call `<init>`(v0, v2) @signature `Lio/reactivex/exceptions/MissingBackpressureException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40e242.  call `onError`(v1, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L40e248.  return @kind void;
  #L40e24a.  v4:= v10.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L40e24e.  call `cancel`(v4) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L40e254.  goto L40e15e;
  #L40e256.  call temp:= `getValue`(v6) @signature `Lio/reactivex/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40e25c.  v4:= temp @kind object;
  #L40e25e.  call `onNext`(v2, v4) @signature `Lio/reactivex/processors/UnicastProcessor;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L40e264.  goto L40e15e;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e278.  v0:= 1I;
  #L40e27a.  v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L40e27e.  call temp:= `enter`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.enter:()Z` @kind virtual;
  #L40e284.  v0:= temp;
  #L40e286.  if v0 == 0 then goto L40e290;
  #L40e28a.  call `drainLoop`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.drainLoop:()V` @kind virtual;
  #L40e290.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40e294.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L40e29a.  call `dispose`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.dispose:()V` @kind virtual;
  #L40e2a0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e2b4.  v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.error` @type ^`java.lang.Throwable` := v2 @kind object;
  #L40e2b8.  v0:= 1I;
  #L40e2ba.  v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L40e2be.  call temp:= `enter`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.enter:()Z` @kind virtual;
  #L40e2c4.  v0:= temp;
  #L40e2c6.  if v0 == 0 then goto L40e2d0;
  #L40e2ca.  call `drainLoop`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.drainLoop:()V` @kind virtual;
  #L40e2d0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40e2d4.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L40e2da.  call `dispose`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.dispose:()V` @kind virtual;
  #L40e2e0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e2f4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.terminated` @type ^`boolean` @kind boolean;
  #L40e2f8.  if v0 == 0 then goto L40e2fe;
  #L40e2fc.  return @kind void;
  #L40e2fe.  call temp:= `fastEnter`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.fastEnter:()Z` @kind virtual;
  #L40e304.  v0:= temp;
  #L40e306.  if v0 == 0 then goto L40e324;
  #L40e30a.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.window` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L40e30e.  call `onNext`(v0, v2) @signature `Lio/reactivex/processors/UnicastProcessor;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L40e314.  v2:= -1I;
  #L40e316.  call temp:= `leave`(v1, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.leave:(I)I` @kind virtual;
  #L40e31c.  v2:= temp;
  #L40e31e.  if v2 != 0 then goto L40e344;
  #L40e322.  return @kind void;
  #L40e324.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.queue` @type ^`io.reactivex.internal.fuseable.SimplePlainQueue` @kind object;
  #L40e328.  call temp:= `next`(v2) @signature `Lio/reactivex/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40e32e.  v2:= temp @kind object;
  #L40e330.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L40e336.  call temp:= `enter`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.enter:()Z` @kind virtual;
  #L40e33c.  v2:= temp;
  #L40e33e.  if v2 != 0 then goto L40e344;
  #L40e342.  return @kind void;
  #L40e344.  call `drainLoop`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.drainLoop:()V` @kind virtual;
  #L40e34a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v12 @kind this, `org.reactivestreams.Subscription` v13 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L40e35c.  v0:= v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L40e360.  call temp:= `validate`(v0, v13) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L40e366.  v0:= temp;
  #L40e368.  if v0 == 0 then goto L40e41c;
  #L40e36c.  v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v13 @kind object;
  #L40e370.  v0:= v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.bufferSize` @type ^`int`;
  #L40e374.  call temp:= `create`(v0) @signature `Lio/reactivex/processors/UnicastProcessor;.create:(I)Lio/reactivex/processors/UnicastProcessor;` @kind static;
  #L40e37a.  v0:= temp @kind object;
  #L40e37c.  v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.window` @type ^`io.reactivex.processors.UnicastProcessor` := v0 @kind object;
  #L40e380.  v0:= v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L40e384.  call `onSubscribe`(v0, v12) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L40e38a.  call temp:= `requested`(v12) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.requested:()J` @kind virtual;
  #L40e390.  v1:= temp @kind wide;
  #L40e392.  v3:= 0L;
  #L40e396.  v5:= lcmp(v1, v3);
  #L40e39a.  if v5 == 0 then goto L40e3fc;
  #L40e39e.  v3:= v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.window` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L40e3a2.  call `onNext`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L40e3a8.  v3:= 9223372036854775807L;
  #L40e3b2.  v0:= lcmp(v1, v3);
  #L40e3b6.  if v0 == 0 then goto L40e3c4;
  #L40e3ba.  v0:= 1L;
  #L40e3be.  call temp:= `produced`(v12, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.produced:(J)J` @kind virtual;
  #L40e3c4.  v0:= v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.cancelled` @type ^`boolean` @kind boolean;
  #L40e3c8.  if v0 != 0 then goto L40e41c;
  #L40e3cc.  v0:= v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.timer` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L40e3d0.  v5:= v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L40e3d4.  v9:= v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.timespan` @type ^`long` @kind wide;
  #L40e3d8.  v11:= v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L40e3dc.  v6:= v12 @kind object;
  #L40e3de.  v7:= v9 @kind wide;
  #L40e3e0.  call temp:= `schedulePeriodicallyDirect`(v5, v6, v7, v9, v11) @signature `Lio/reactivex/Scheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L40e3e6.  v1:= temp @kind object;
  #L40e3e8.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L40e3ee.  v0:= temp;
  #L40e3f0.  if v0 == 0 then goto L40e41c;
  #L40e3f4.  call `request`(v13, v3) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L40e3fa.  goto L40e41c;
  #L40e3fc.  v1:= 1I;
  #L40e3fe.  v12.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.cancelled` @type ^`boolean` := v1 @kind boolean;
  #L40e402.  call `cancel`(v13) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L40e408.  v13:= new `io.reactivex.exceptions.MissingBackpressureException`;
  #L40e40c.  v1:= "Could not deliver first window due to lack of requests." @kind object;
  #L40e410.  call `<init>`(v13, v1) @signature `Lio/reactivex/exceptions/MissingBackpressureException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40e416.  call `onError`(v0, v13) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L40e41c.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;

  #L40e430.  call `requested`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.requested:(J)V` @kind virtual;
  #L40e436.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40e448.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.cancelled` @type ^`boolean` @kind boolean;
  #L40e44c.  if v0 == 0 then goto L40e45c;
  #L40e450.  v0:= 1I;
  #L40e452.  v2.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.terminated` @type ^`boolean` := v0 @kind boolean;
  #L40e456.  call `dispose`(v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.dispose:()V` @kind virtual;
  #L40e45c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.queue` @type ^`io.reactivex.internal.fuseable.SimplePlainQueue` @kind object;
  #L40e460.  v1:= `@@io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber.NEXT` @type ^`java.lang.Object` @kind object;
  #L40e464.  call temp:= `offer`(v0, v1) @signature `Lio/reactivex/internal/fuseable/SimplePlainQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L40e46a.  call temp:= `enter`(v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.enter:()Z` @kind virtual;
  #L40e470.  v0:= temp;
  #L40e472.  if v0 == 0 then goto L40e47c;
  #L40e476.  call `drainLoop`(v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;.drainLoop:()V` @kind virtual;
  #L40e47c.  return @kind void;
}
