record `io.reactivex.internal.operators.flowable.FlowableMapNotification` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableMapNotification.onCompleteSupplier` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableMapNotification.onErrorMapper` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableMapNotification.onNextMapper` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableMapNotification` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification;.<init>:(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fea34.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L3fea3a.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification.onNextMapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L3fea3e.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification.onErrorMapper` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L3fea42.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification.onCompleteSupplier` @type ^`java.util.concurrent.Callable` := v4 @kind object;
  #L3fea46.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableMapNotification` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fea58.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableMapNotification.source` @type ^`io.reactivex.Flowable` @kind object;
  #L3fea5c.  v1:= new `io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber`;
  #L3fea60.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableMapNotification.onNextMapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L3fea64.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableMapNotification.onErrorMapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L3fea68.  v4:= v5.`io.reactivex.internal.operators.flowable.FlowableMapNotification.onCompleteSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L3fea6c.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$MapNotificationSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3fea72.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L3fea78.  return @kind void;
}
