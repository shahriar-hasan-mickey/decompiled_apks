record `io.reactivex.internal.operators.flowable.FlowableScalarXMap` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableScalarXMap` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L406638.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40663e.  v0:= new `java.lang.IllegalStateException`;
  #L406642.  v1:= "No instances!" @kind object;
  #L406646.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40664c.  throw v0;
}
procedure `io.reactivex.Flowable` `scalarXMap`(`java.lang.Object` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L406614.  v0:= new `io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable`;
  #L406618.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap$ScalarXMapFlowable;.<init>:(Ljava/lang/Object;Lio/reactivex/functions/Function;)V` @kind direct;
  #L40661e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L406624.  v1:= temp @kind object;
  #L406626.  return v1 @kind object;
}
procedure `boolean` `tryScalarXMapSubscribe`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Subscriber` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40653c.  v0:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L406540.  if v0 == 0 then goto L4065e0;
  #L406544.  v0:= 1I;
  #L406546.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L40654a.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L406550.  v1:= temp @kind object;
  #L406552.  if v1 != 0 then goto L40655e;
  #L406556.  call `complete`(v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L40655c.  return v0;
  #L40655e.  call temp:= `apply`(v3, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L406564.  v1:= temp @kind object;
  #L406566.  v3:= "The mapper returned a null Publisher" @kind object;
  #L40656a.  call temp:= `requireNonNull`(v1, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L406570.  v1:= temp @kind object;
  #L406572.  v1:= (`org.reactivestreams.Publisher`) v1 @kind object;
  #L406576.  v3:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L40657a.  if v3 == 0 then goto L4065b8;
  #L40657e.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L406582.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L406588.  v1:= temp @kind object;
  #L40658a.  if v1 != 0 then goto L406596;
  #L40658e.  call `complete`(v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L406594.  return v0;
  #L406596.  v3:= new `io.reactivex.internal.subscriptions.ScalarSubscription`;
  #L40659a.  call `<init>`(v3, v2, v1) @signature `Lio/reactivex/internal/subscriptions/ScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)V` @kind direct;
  #L4065a0.  call `onSubscribe`(v2, v3) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4065a6.  goto L4065be;
  #L4065a8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4065aa.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4065b0.  call `error`(v1, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4065b6.  return v0;
  #L4065b8.  call `subscribe`(v1, v2) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4065be.  return v0;
  #L4065c0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4065c2.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4065c8.  call `error`(v1, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4065ce.  return v0;
  #L4065d0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4065d2.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4065d8.  call `error`(v1, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4065de.  return v0;
  #L4065e0.  v1:= 0I;
  #L4065e2.  return v1;
  catch `java.lang.Throwable` @[L406546..L406552] goto L4065d0;
  catch `java.lang.Throwable` @[L40655e..L406576] goto L4065c0;
  catch `java.lang.Throwable` @[L40657e..L40658a] goto L4065a8;
}
