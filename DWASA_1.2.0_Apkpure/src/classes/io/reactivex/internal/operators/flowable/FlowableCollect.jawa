record `io.reactivex.internal.operators.flowable.FlowableCollect` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream` @kind class {
  `io.reactivex.functions.BiConsumer` `io.reactivex.internal.operators.flowable.FlowableCollect.collector` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableCollect.initialSupplier` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCollect` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCollect;.<init>:(Lio/reactivex/Flowable;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f16f4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L3f16fa.  v0.`io.reactivex.internal.operators.flowable.FlowableCollect.initialSupplier` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L3f16fe.  v0.`io.reactivex.internal.operators.flowable.FlowableCollect.collector` @type ^`io.reactivex.functions.BiConsumer` := v3 @kind object;
  #L3f1702.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableCollect` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCollect;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f1714.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableCollect.initialSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L3f1718.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L3f171e.  v0:= temp @kind object;
  #L3f1720.  v1:= "The initial value supplied is null" @kind object;
  #L3f1724.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f172a.  v0:= temp @kind object;
  #L3f172c.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableCollect.source` @type ^`io.reactivex.Flowable` @kind object;
  #L3f1730.  v2:= new `io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber`;
  #L3f1734.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableCollect.collector` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L3f1738.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCollect$CollectSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L3f173e.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L3f1744.  return @kind void;
  #L3f1746.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f1748.  call `error`(v0, v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L3f174e.  return @kind void;
  catch `java.lang.Throwable` @[L3f1714..L3f172c] goto L3f1746;
}
