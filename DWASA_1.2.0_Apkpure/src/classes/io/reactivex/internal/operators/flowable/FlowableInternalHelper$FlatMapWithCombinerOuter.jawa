record `io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter.combiner` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter.mapper` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter` v0 @kind this, `io.reactivex.functions.BiFunction` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$FlatMapWithCombinerOuter;.<init>:(Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fceb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fcebe.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter.combiner` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L3fcec2.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L3fcec6.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$FlatMapWithCombinerOuter;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3fce54.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$FlatMapWithCombinerOuter;.apply:(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;` @kind virtual;
  #L3fce5a.  v1:= temp @kind object;
  #L3fce5c.  return v1 @kind object;
}
procedure `org.reactivestreams.Publisher` `apply`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$FlatMapWithCombinerOuter;.apply:(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fce70.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L3fce74.  call temp:= `apply`(v0, v5) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3fce7a.  v0:= temp @kind object;
  #L3fce7c.  v1:= "The mapper returned a null Publisher" @kind object;
  #L3fce80.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fce86.  v0:= temp @kind object;
  #L3fce88.  v0:= (`org.reactivestreams.Publisher`) v0 @kind object;
  #L3fce8c.  v1:= new `io.reactivex.internal.operators.flowable.FlowableMapPublisher`;
  #L3fce90.  v2:= new `io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerInner`;
  #L3fce94.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter.combiner` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L3fce98.  call `<init>`(v2, v3, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$FlatMapWithCombinerInner;.<init>:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;)V` @kind direct;
  #L3fce9e.  call `<init>`(v1, v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3fcea4.  return v1 @kind object;
}
