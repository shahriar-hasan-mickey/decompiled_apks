record `io.reactivex.internal.operators.flowable.FlowableRangeLong` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `long` `io.reactivex.internal.operators.flowable.FlowableRangeLong.end` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableRangeLong.start` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableRangeLong` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableRangeLong;.<init>:(JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L403054.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L40305a.  v0.`io.reactivex.internal.operators.flowable.FlowableRangeLong.start` @type ^`long` := v1 @kind wide;
  #L40305e.  v1:= v1 + v3 @kind long;
  #L403060.  v0.`io.reactivex.internal.operators.flowable.FlowableRangeLong.end` @type ^`long` := v1 @kind wide;
  #L403064.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableRangeLong` v13 @kind this, `org.reactivestreams.Subscriber` v14 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableRangeLong;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L403078.  v0:= instanceof @variable v14 @type ^`io.reactivex.internal.fuseable.ConditionalSubscriber` @kind boolean;
  #L40307c.  if v0 == 0 then goto L4030a2;
  #L403080.  v0:= new `io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription`;
  #L403084.  v2:= v14 @kind object;
  #L403086.  v2:= (`io.reactivex.internal.fuseable.ConditionalSubscriber`) v2 @kind object;
  #L40308a.  v3:= v13.`io.reactivex.internal.operators.flowable.FlowableRangeLong.start` @type ^`long` @kind wide;
  #L40308e.  v5:= v13.`io.reactivex.internal.operators.flowable.FlowableRangeLong.end` @type ^`long` @kind wide;
  #L403092.  v1:= v0 @kind object;
  #L403094.  call `<init>`(v1, v2, v3, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableRangeLong$RangeConditionalSubscription;.<init>:(Lio/reactivex/internal/fuseable/ConditionalSubscriber;JJ)V` @kind direct;
  #L40309a.  call `onSubscribe`(v14, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4030a0.  goto L4030be;
  #L4030a2.  v0:= new `io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription`;
  #L4030a6.  v9:= v13.`io.reactivex.internal.operators.flowable.FlowableRangeLong.start` @type ^`long` @kind wide;
  #L4030aa.  v11:= v13.`io.reactivex.internal.operators.flowable.FlowableRangeLong.end` @type ^`long` @kind wide;
  #L4030ae.  v7:= v0 @kind object;
  #L4030b0.  v8:= v14 @kind object;
  #L4030b2.  call `<init>`(v7, v8, v9, v11) @signature `Lio/reactivex/internal/operators/flowable/FlowableRangeLong$RangeSubscription;.<init>:(Lorg/reactivestreams/Subscriber;JJ)V` @kind direct;
  #L4030b8.  call `onSubscribe`(v14, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4030be.  return @kind void;
}
