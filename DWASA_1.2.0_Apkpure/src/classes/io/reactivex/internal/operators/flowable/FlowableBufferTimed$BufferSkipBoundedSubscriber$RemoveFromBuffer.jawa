record `io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.Collection` `io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer.buffer` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber` `io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableBufferTimed$BufferSkipBoundedSubscriber;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f07e0.  v0.`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer.this$0` @type ^`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber` := v1 @kind object;
  #L3f07e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f07ea.  v0.`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer.buffer` @type ^`java.util.Collection` := v2 @kind object;
  #L3f07ee.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer` v4 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f0800.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer.this$0` @type ^`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber` @kind object;
  #L3f0804.  @monitorenter v0
  #L3f0806.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer.this$0` @type ^`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber` @kind object;
  #L3f080a.  v1:= v1.`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber.buffers` @type ^`java.util.List` @kind object;
  #L3f080e.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer.buffer` @type ^`java.util.Collection` @kind object;
  #L3f0812.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3f0818.  @monitorexit v0
  #L3f081a.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer.this$0` @type ^`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber` @kind object;
  #L3f081e.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer.buffer` @type ^`java.util.Collection` @kind object;
  #L3f0822.  v2:= 0I;
  #L3f0824.  v3:= v0.`io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber.w` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L3f0828.  call `access$000`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferTimed$BufferSkipBoundedSubscriber;.access$000:(Lio/reactivex/internal/operators/flowable/FlowableBufferTimed$BufferSkipBoundedSubscriber;Ljava/lang/Object;ZLio/reactivex/disposables/Disposable;)V` @kind static;
  #L3f082e.  return @kind void;
  #L3f0830.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f0832.  @monitorexit v0
  #L3f0834.  throw v1;
  catch `java.lang.Throwable` @[L3f0806..L3f081a] goto L3f0830;
  catch `java.lang.Throwable` @[L3f0832..L3f0834] goto L3f0830;
}
