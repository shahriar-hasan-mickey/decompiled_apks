record `io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber` @kind class {
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SampleMainNoLast;.<init>:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L405d7c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplePublisherSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L405d82.  return @kind void;
}
procedure `void` `completeMain`(`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SampleMainNoLast;.completeMain:()V` @AccessFlag  {
    temp;
    v0;

  #L405d94.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L405d98.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L405d9e.  return @kind void;
}
procedure `void` `completeOther`(`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SampleMainNoLast;.completeOther:()V` @AccessFlag  {
    temp;
    v0;

  #L405db0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L405db4.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L405dba.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SampleMainNoLast;.run:()V` @AccessFlag  {
    temp;

  #L405dcc.  call `emit`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SampleMainNoLast;.emit:()V` @kind virtual;
  #L405dd2.  return @kind void;
}
