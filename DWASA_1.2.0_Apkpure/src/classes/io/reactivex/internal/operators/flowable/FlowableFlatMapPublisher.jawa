record `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `int` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.bufferSize` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.delayErrors` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.mapper` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.maxConcurrency` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ZII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f938c.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L3f9392.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.source` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L3f9396.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L3f939a.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.delayErrors` @type ^`boolean` := v3 @kind boolean;
  #L3f939e.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.maxConcurrency` @type ^`int` := v4;
  #L3f93a2.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.bufferSize` @type ^`int` := v5;
  #L3f93a6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapPublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f93b8.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.source` @type ^`org.reactivestreams.Publisher` @kind object;
  #L3f93bc.  v1:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L3f93c0.  call temp:= `tryScalarXMapSubscribe`(v0, v6, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)Z` @kind static;
  #L3f93c6.  v0:= temp;
  #L3f93c8.  if v0 == 0 then goto L3f93ce;
  #L3f93cc.  return @kind void;
  #L3f93ce.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.source` @type ^`org.reactivestreams.Publisher` @kind object;
  #L3f93d2.  v1:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L3f93d6.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.delayErrors` @type ^`boolean` @kind boolean;
  #L3f93da.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.maxConcurrency` @type ^`int`;
  #L3f93de.  v4:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.bufferSize` @type ^`int`;
  #L3f93e2.  call temp:= `subscribe`(v6, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMap;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;ZII)Lio/reactivex/FlowableSubscriber;` @kind static;
  #L3f93e8.  v6:= temp @kind object;
  #L3f93ea.  call `subscribe`(v0, v6) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L3f93f0.  return @kind void;
}
