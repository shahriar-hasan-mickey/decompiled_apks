record `io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.defaultItem` @AccessFlag FINAL;
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.downstream` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.item` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$LastSubscriber;.<init>:(Lio/reactivex/SingleObserver;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fe2a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fe2ae.  v0.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.downstream` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L3fe2b2.  v0.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.defaultItem` @type ^`java.lang.Object` := v2 @kind object;
  #L3fe2b6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$LastSubscriber;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe2c8.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fe2cc.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L3fe2d2.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L3fe2d6.  v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L3fe2da.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$LastSubscriber;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe284.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fe288.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L3fe28c.  if v0 != v1 then goto L3fe294;
  #L3fe290.  v0:= 1I;
  #L3fe292.  goto L3fe296;
  #L3fe294.  v0:= 0I;
  #L3fe296.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$LastSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe2ec.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L3fe2f0.  v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L3fe2f4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.item` @type ^`java.lang.Object` @kind object;
  #L3fe2f8.  if v0 == 0 then goto L3fe30e;
  #L3fe2fc.  v1:= 0I;
  #L3fe2fe.  v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.item` @type ^`java.lang.Object` := v1 @kind object;
  #L3fe302.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3fe306.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L3fe30c.  goto L3fe336;
  #L3fe30e.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.defaultItem` @type ^`java.lang.Object` @kind object;
  #L3fe312.  if v0 == 0 then goto L3fe322;
  #L3fe316.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3fe31a.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L3fe320.  goto L3fe336;
  #L3fe322.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3fe326.  v1:= new `java.util.NoSuchElementException`;
  #L3fe32a.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3fe330.  call `onError`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3fe336.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$LastSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe348.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L3fe34c.  v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L3fe350.  v0:= 0I;
  #L3fe352.  v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.item` @type ^`java.lang.Object` := v0 @kind object;
  #L3fe356.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3fe35a.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3fe360.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$LastSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3fe374.  v0.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.item` @type ^`java.lang.Object` := v1 @kind object;
  #L3fe378.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$LastSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe38c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L3fe390.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L3fe396.  v0:= temp;
  #L3fe398.  if v0 == 0 then goto L3fe3ba;
  #L3fe39c.  v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L3fe3a0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L3fe3a4.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3fe3aa.  v0:= 9223372036854775807L;
  #L3fe3b4.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L3fe3ba.  return @kind void;
}
