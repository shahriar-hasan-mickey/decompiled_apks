record `io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.subscribers.DisposableSubscriber` @kind class {
  `io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber` `io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber.parent` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferExactBoundary$BufferBoundarySubscriber;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableBufferExactBoundary$BufferExactBoundarySubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3efc7c.  call `<init>`(v0) @signature `Lio/reactivex/subscribers/DisposableSubscriber;.<init>:()V` @kind direct;
  #L3efc82.  v0.`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber` := v1 @kind object;
  #L3efc86.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferExactBoundary$BufferBoundarySubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3efc98.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber` @kind object;
  #L3efc9c.  call `onComplete`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferExactBoundary$BufferExactBoundarySubscriber;.onComplete:()V` @kind virtual;
  #L3efca2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferExactBoundary$BufferBoundarySubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3efcb4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber` @kind object;
  #L3efcb8.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferExactBoundary$BufferExactBoundarySubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3efcbe.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferExactBoundary$BufferBoundarySubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3efcd0.  v1:= v0.`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber` @kind object;
  #L3efcd4.  call `next`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableBufferExactBoundary$BufferExactBoundarySubscriber;.next:()V` @kind virtual;
  #L3efcda.  return @kind void;
}
