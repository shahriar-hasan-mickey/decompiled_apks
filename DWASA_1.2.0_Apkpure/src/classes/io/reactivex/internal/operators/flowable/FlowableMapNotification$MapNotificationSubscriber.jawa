record `io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.SinglePostCompleteSubscriber` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.onCompleteSupplier` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.onErrorMapper` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.onNextMapper` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$MapNotificationSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fe8f0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L3fe8f6.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.onNextMapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L3fe8fa.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.onErrorMapper` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L3fe8fe.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.onCompleteSupplier` @type ^`java.util.concurrent.Callable` := v4 @kind object;
  #L3fe902.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$MapNotificationSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe914.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.onCompleteSupplier` @type ^`java.util.concurrent.Callable` @kind object;
  #L3fe918.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L3fe91e.  v0:= temp @kind object;
  #L3fe920.  v1:= "The onComplete publisher returned is null" @kind object;
  #L3fe924.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe92a.  v0:= temp @kind object;
  #L3fe92c.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$MapNotificationSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L3fe932.  return @kind void;
  #L3fe934.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe936.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3fe93c.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fe940.  call `onError`(v1, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3fe946.  return @kind void;
  catch `java.lang.Throwable` @[L3fe914..L3fe92c] goto L3fe934;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$MapNotificationSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fe964.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.onErrorMapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L3fe968.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3fe96e.  v0:= temp @kind object;
  #L3fe970.  v1:= "The onError publisher returned is null" @kind object;
  #L3fe974.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe97a.  v6:= temp @kind object;
  #L3fe97c.  call `complete`(v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$MapNotificationSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L3fe982.  return @kind void;
  #L3fe984.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe986.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3fe98c.  v1:= v5.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fe990.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L3fe994.  v3:= 2I;
  #L3fe996.  v3:= new `java.lang.Throwable`[v3];
  #L3fe99a.  v4:= 0I;
  #L3fe99c.  v3[v4]:= v6 @kind object;
  #L3fe9a0.  v6:= 1I;
  #L3fe9a2.  v3[v6]:= v0 @kind object;
  #L3fe9a6.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L3fe9ac.  call `onError`(v1, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3fe9b2.  return @kind void;
  catch `java.lang.Throwable` @[L3fe964..L3fe97c] goto L3fe984;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$MapNotificationSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe9d0.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.onNextMapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L3fe9d4.  call temp:= `apply`(v0, v5) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3fe9da.  v5:= temp @kind object;
  #L3fe9dc.  v0:= "The onNext publisher returned is null" @kind object;
  #L3fe9e0.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3fe9e6.  v5:= temp @kind object;
  #L3fe9e8.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.produced` @type ^`long` @kind wide;
  #L3fe9ec.  v2:= 1L;
  #L3fe9f0.  v0:= v0 + v2 @kind long;
  #L3fe9f2.  v4.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L3fe9f6.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fe9fa.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L3fea00.  return @kind void;
  #L3fea02.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fea04.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3fea0a.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L3fea0e.  call `onError`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3fea14.  return @kind void;
  catch `java.lang.Throwable` @[L3fe9d0..L3fe9e8] goto L3fea02;
}
