record `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.reducer` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.upstream` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.value` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$ReduceSeedObserver;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/BiFunction;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4034ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4034f2.  v0.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.downstream` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L4034f6.  v0.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.value` @type ^`java.lang.Object` := v3 @kind object;
  #L4034fa.  v0.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.reducer` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L4034fe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$ReduceSeedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403510.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L403514.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L40351a.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L40351e.  v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L403522.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$ReduceSeedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4034c8.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4034cc.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4034d0.  if v0 != v1 then goto L4034d8;
  #L4034d4.  v0:= 1I;
  #L4034d6.  goto L4034da;
  #L4034d8.  v0:= 0I;
  #L4034da.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$ReduceSeedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L403534.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.value` @type ^`java.lang.Object` @kind object;
  #L403538.  if v0 == 0 then goto L403554;
  #L40353c.  v1:= 0I;
  #L40353e.  v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.value` @type ^`java.lang.Object` := v1 @kind object;
  #L403542.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L403546.  v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.upstream` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L40354a.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L40354e.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L403554.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$ReduceSeedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403568.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.value` @type ^`java.lang.Object` @kind object;
  #L40356c.  if v0 == 0 then goto L40358a;
  #L403570.  v0:= 0I;
  #L403572.  v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.value` @type ^`java.lang.Object` := v0 @kind object;
  #L403576.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L40357a.  v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L40357e.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L403582.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L403588.  goto L403590;
  #L40358a.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L403590.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$ReduceSeedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4035a4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.value` @type ^`java.lang.Object` @kind object;
  #L4035a8.  if v0 == 0 then goto L4035e2;
  #L4035ac.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.reducer` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L4035b0.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4035b6.  v3:= temp @kind object;
  #L4035b8.  v0:= "The reducer returned a null value" @kind object;
  #L4035bc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4035c2.  v3:= temp @kind object;
  #L4035c4.  v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.value` @type ^`java.lang.Object` := v3 @kind object;
  #L4035c8.  goto L4035e2;
  #L4035ca.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4035cc.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4035d2.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4035d6.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4035dc.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$ReduceSeedObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4035e2.  return @kind void;
  catch `java.lang.Throwable` @[L4035ac..L4035c8] goto L4035ca;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduceSeedSingle$ReduceSeedObserver;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L403600.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L403604.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L40360a.  v0:= temp;
  #L40360c.  if v0 == 0 then goto L40362e;
  #L403610.  v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L403614.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver.downstream` @type ^`io.reactivex.SingleObserver` @kind object;
  #L403618.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L40361e.  v0:= 9223372036854775807L;
  #L403628.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L40362e.  return @kind void;
}
