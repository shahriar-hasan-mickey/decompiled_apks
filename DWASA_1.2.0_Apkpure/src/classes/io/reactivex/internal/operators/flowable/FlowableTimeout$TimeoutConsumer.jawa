record `io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `long` `io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.idx` @AccessFlag FINAL;
  `io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport` `io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer` v0 @kind this, `long` v1 , `io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.<init>:(JLio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutSelectorSupport;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40a864.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L40a86a.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.idx` @type ^`long` := v1 @kind wide;
  #L40a86e.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport` := v3 @kind object;
  #L40a872.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L40a884.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L40a88a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a83c.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.get:()Ljava/lang/Object;` @kind virtual;
  #L40a842.  v0:= temp @kind object;
  #L40a844.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L40a848.  call temp:= `isCancelled`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.isCancelled:(Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L40a84e.  v0:= temp;
  #L40a850.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer` v3 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40a89c.  call temp:= `get`(v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.get:()Ljava/lang/Object;` @kind virtual;
  #L40a8a2.  v0:= temp @kind object;
  #L40a8a4.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L40a8a8.  if v0 == v1 then goto L40a8c4;
  #L40a8ac.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L40a8b0.  call `lazySet`(v3, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L40a8b6.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport` @kind object;
  #L40a8ba.  v1:= v3.`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.idx` @type ^`long` @kind wide;
  #L40a8be.  call `onTimeout`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutSelectorSupport;.onTimeout:(J)V` @kind interface;
  #L40a8c4.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40a8d8.  call temp:= `get`(v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.get:()Ljava/lang/Object;` @kind virtual;
  #L40a8de.  v0:= temp @kind object;
  #L40a8e0.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L40a8e4.  if v0 == v1 then goto L40a902;
  #L40a8e8.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L40a8ec.  call `lazySet`(v3, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L40a8f2.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport` @kind object;
  #L40a8f6.  v1:= v3.`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.idx` @type ^`long` @kind wide;
  #L40a8fa.  call `onTimeoutError`(v0, v1, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutSelectorSupport;.onTimeoutError:(JLjava/lang/Throwable;)V` @kind interface;
  #L40a900.  goto L40a908;
  #L40a902.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L40a908.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40a91c.  call temp:= `get`(v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.get:()Ljava/lang/Object;` @kind virtual;
  #L40a922.  v3:= temp @kind object;
  #L40a924.  v3:= (`org.reactivestreams.Subscription`) v3 @kind object;
  #L40a928.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L40a92c.  if v3 == v0 then goto L40a94e;
  #L40a930.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L40a936.  v3:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L40a93a.  call `lazySet`(v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L40a940.  v3:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport` @kind object;
  #L40a944.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer.idx` @type ^`long` @kind wide;
  #L40a948.  call `onTimeout`(v3, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutSelectorSupport;.onTimeout:(J)V` @kind interface;
  #L40a94e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$TimeoutConsumer;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40a960.  v0:= 9223372036854775807L;
  #L40a96a.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L40a970.  return @kind void;
}
