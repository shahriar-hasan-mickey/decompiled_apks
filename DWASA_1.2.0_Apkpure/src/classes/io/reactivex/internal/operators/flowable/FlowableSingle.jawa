record `io.reactivex.internal.operators.flowable.FlowableSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableSingle.defaultValue` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableSingle.failOnEmpty` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableSingle` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `java.lang.Object` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableSingle;.<init>:(Lio/reactivex/Flowable;Ljava/lang/Object;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L407bd8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L407bde.  v0.`io.reactivex.internal.operators.flowable.FlowableSingle.defaultValue` @type ^`java.lang.Object` := v2 @kind object;
  #L407be2.  v0.`io.reactivex.internal.operators.flowable.FlowableSingle.failOnEmpty` @type ^`boolean` := v3 @kind boolean;
  #L407be6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableSingle` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableSingle;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L407bf8.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableSingle.source` @type ^`io.reactivex.Flowable` @kind object;
  #L407bfc.  v1:= new `io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber`;
  #L407c00.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableSingle.defaultValue` @type ^`java.lang.Object` @kind object;
  #L407c04.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableSingle.failOnEmpty` @type ^`boolean` @kind boolean;
  #L407c08.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableSingle$SingleElementSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Z)V` @kind direct;
  #L407c0e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L407c14.  return @kind void;
}
