record `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther.main` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther.other` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f53c8.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L3f53ce.  v0.`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther.main` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L3f53d2.  v0.`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther.other` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L3f53d6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f53e8.  v0:= new `io.reactivex.internal.subscriptions.SubscriptionArbiter`;
  #L3f53ec.  call `<init>`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionArbiter;.<init>:()V` @kind direct;
  #L3f53f2.  call `onSubscribe`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L3f53f8.  v1:= new `io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$DelaySubscriber`;
  #L3f53fc.  call `<init>`(v1, v2, v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther$DelaySubscriber;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther;Lio/reactivex/internal/subscriptions/SubscriptionArbiter;Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L3f5402.  v3:= v2.`io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther.other` @type ^`org.reactivestreams.Publisher` @kind object;
  #L3f5406.  call `subscribe`(v3, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L3f540c.  return @kind void;
}
