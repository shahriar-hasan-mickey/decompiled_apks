record `io.reactivex.internal.operators.flowable.FlowableThrottleLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream` @kind class {
  `boolean` `io.reactivex.internal.operators.flowable.FlowableThrottleLatest.emitLast` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableThrottleLatest.scheduler` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableThrottleLatest.timeout` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableThrottleLatest.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableThrottleLatest` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleLatest;.<init>:(Lio/reactivex/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40a664.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L40a66a.  v0.`io.reactivex.internal.operators.flowable.FlowableThrottleLatest.timeout` @type ^`long` := v2 @kind wide;
  #L40a66e.  v0.`io.reactivex.internal.operators.flowable.FlowableThrottleLatest.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L40a672.  v0.`io.reactivex.internal.operators.flowable.FlowableThrottleLatest.scheduler` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L40a676.  v0.`io.reactivex.internal.operators.flowable.FlowableThrottleLatest.emitLast` @type ^`boolean` := v6 @kind boolean;
  #L40a67a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableThrottleLatest` v9 @kind this, `org.reactivestreams.Subscriber` v10 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleLatest;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L40a68c.  v0:= v9.`io.reactivex.internal.operators.flowable.FlowableThrottleLatest.source` @type ^`io.reactivex.Flowable` @kind object;
  #L40a690.  v8:= new `io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber`;
  #L40a694.  v3:= v9.`io.reactivex.internal.operators.flowable.FlowableThrottleLatest.timeout` @type ^`long` @kind wide;
  #L40a698.  v5:= v9.`io.reactivex.internal.operators.flowable.FlowableThrottleLatest.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L40a69c.  v1:= v9.`io.reactivex.internal.operators.flowable.FlowableThrottleLatest.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L40a6a0.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L40a6a6.  v6:= temp @kind object;
  #L40a6a8.  v7:= v9.`io.reactivex.internal.operators.flowable.FlowableThrottleLatest.emitLast` @type ^`boolean` @kind boolean;
  #L40a6ac.  v1:= v8 @kind object;
  #L40a6ae.  v2:= v10 @kind object;
  #L40a6b0.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleLatest$ThrottleLatestSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Z)V` @kind direct;
  #L40a6b6.  call `subscribe`(v0, v8) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L40a6bc.  return @kind void;
}
