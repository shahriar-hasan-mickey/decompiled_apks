record `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.other` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.scheduler` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.timeout` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed;.<init>:(Lio/reactivex/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40b524.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L40b52a.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.timeout` @type ^`long` := v2 @kind wide;
  #L40b52e.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L40b532.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.scheduler` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L40b536.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.other` @type ^`org.reactivestreams.Publisher` := v6 @kind object;
  #L40b53a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed` v10 @kind this, `org.reactivestreams.Subscriber` v11 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L40b54c.  v0:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.other` @type ^`org.reactivestreams.Publisher` @kind object;
  #L40b550.  v1:= 0L;
  #L40b554.  if v0 != 0 then goto L40b592;
  #L40b558.  v0:= new `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber`;
  #L40b55c.  v5:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.timeout` @type ^`long` @kind wide;
  #L40b560.  v7:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L40b564.  v3:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L40b568.  call temp:= `createWorker`(v3) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L40b56e.  v8:= temp @kind object;
  #L40b570.  v3:= v0 @kind object;
  #L40b572.  v4:= v11 @kind object;
  #L40b574.  call `<init>`(v3, v4, v5, v7, v8) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$TimeoutSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L40b57a.  call `onSubscribe`(v11, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L40b580.  call `startTimeout`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$TimeoutSubscriber;.startTimeout:(J)V` @kind virtual;
  #L40b586.  v11:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.source` @type ^`io.reactivex.Flowable` @kind object;
  #L40b58a.  call `subscribe`(v11, v0) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L40b590.  goto L40b5ce;
  #L40b592.  v0:= new `io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber`;
  #L40b596.  v5:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.timeout` @type ^`long` @kind wide;
  #L40b59a.  v7:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L40b59e.  v3:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.scheduler` @type ^`io.reactivex.Scheduler` @kind object;
  #L40b5a2.  call temp:= `createWorker`(v3) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L40b5a8.  v8:= temp @kind object;
  #L40b5aa.  v9:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.other` @type ^`org.reactivestreams.Publisher` @kind object;
  #L40b5ae.  v3:= v0 @kind object;
  #L40b5b0.  v4:= v11 @kind object;
  #L40b5b2.  call `<init>`(v3, v4, v5, v7, v8, v9) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$TimeoutFallbackSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L40b5b8.  call `onSubscribe`(v11, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L40b5be.  call `startTimeout`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeoutTimed$TimeoutFallbackSubscriber;.startTimeout:(J)V` @kind virtual;
  #L40b5c4.  v11:= v10.`io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.source` @type ^`io.reactivex.Flowable` @kind object;
  #L40b5c8.  call `subscribe`(v11, v0) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L40b5ce.  return @kind void;
}
