record `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @AccessFlag PRIVATE;
  `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber` `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator` v0 @kind this, `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$MostRecentSubscriber$Iterator;.<init>:(Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$MostRecentSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ed608.  v0.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.this$0` @type ^`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber` := v1 @kind object;
  #L3ed60c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ed612.  return @kind void;
}
procedure `boolean` `hasNext`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$MostRecentSubscriber$Iterator;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ed540.  v0:= v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.this$0` @type ^`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber` @kind object;
  #L3ed544.  v0:= v0.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L3ed548.  v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` := v0 @kind object;
  #L3ed54c.  v0:= v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L3ed550.  call temp:= `isComplete`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L3ed556.  v0:= temp;
  #L3ed558.  v0:= v0 ^~ 1;
  #L3ed55c.  return v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$MostRecentSubscriber$Iterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ed570.  v0:= 0I;
  #L3ed572.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L3ed576.  if v1 != 0 then goto L3ed586;
  #L3ed57a.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.this$0` @type ^`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber` @kind object;
  #L3ed57e.  v1:= v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L3ed582.  v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` := v1 @kind object;
  #L3ed586.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L3ed58a.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L3ed590.  v1:= temp;
  #L3ed592.  if v1 != 0 then goto L3ed5ce;
  #L3ed596.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L3ed59a.  call temp:= `isError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L3ed5a0.  v1:= temp;
  #L3ed5a2.  if v1 != 0 then goto L3ed5b8;
  #L3ed5a6.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L3ed5aa.  call temp:= `getValue`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ed5b0.  v1:= temp @kind object;
  #L3ed5b2.  v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` := v0 @kind object;
  #L3ed5b6.  return v1 @kind object;
  #L3ed5b8.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` @kind object;
  #L3ed5bc.  call temp:= `getError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L3ed5c2.  v1:= temp @kind object;
  #L3ed5c4.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3ed5ca.  v1:= temp @kind object;
  #L3ed5cc.  throw v1;
  #L3ed5ce.  v1:= new `java.util.NoSuchElementException`;
  #L3ed5d2.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3ed5d8.  throw v1;
  #L3ed5da.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ed5dc.  v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator.buf` @type ^`java.lang.Object` := v0 @kind object;
  #L3ed5e0.  throw v1;
  catch `java.lang.Throwable` @[L3ed572..L3ed5b2] goto L3ed5da;
  catch `java.lang.Throwable` @[L3ed5b8..L3ed5da] goto L3ed5da;
}
procedure `void` `remove`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$MostRecentSubscriber$Iterator;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ed624.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3ed628.  v1:= "Read only iterator" @kind object;
  #L3ed62c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ed632.  throw v0;
}
