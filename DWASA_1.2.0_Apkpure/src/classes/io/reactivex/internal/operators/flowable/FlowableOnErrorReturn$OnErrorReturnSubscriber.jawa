record `io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.SinglePostCompleteSubscriber` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.valueSupplier` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$OnErrorReturnSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L401650.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L401656.  v0.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.valueSupplier` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L40165a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$OnErrorReturnSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40166c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L401670.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L401676.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$OnErrorReturnSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L401688.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.valueSupplier` @type ^`io.reactivex.functions.Function` @kind object;
  #L40168c.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L401692.  v0:= temp @kind object;
  #L401694.  v1:= "The valueSupplier returned a null value" @kind object;
  #L401698.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40169e.  v6:= temp @kind object;
  #L4016a0.  call `complete`(v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$OnErrorReturnSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4016a6.  return @kind void;
  #L4016a8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4016aa.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4016b0.  v1:= v5.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4016b4.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L4016b8.  v3:= 2I;
  #L4016ba.  v3:= new `java.lang.Throwable`[v3];
  #L4016be.  v4:= 0I;
  #L4016c0.  v3[v4]:= v6 @kind object;
  #L4016c4.  v6:= 1I;
  #L4016c6.  v3[v6]:= v0 @kind object;
  #L4016ca.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4016d0.  call `onError`(v1, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4016d6.  return @kind void;
  catch `java.lang.Throwable` @[L401688..L4016a0] goto L4016a8;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$OnErrorReturnSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4016f4.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.produced` @type ^`long` @kind wide;
  #L4016f8.  v2:= 1L;
  #L4016fc.  v0:= v0 + v2 @kind long;
  #L4016fe.  v4.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L401702.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L401706.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L40170c.  return @kind void;
}
