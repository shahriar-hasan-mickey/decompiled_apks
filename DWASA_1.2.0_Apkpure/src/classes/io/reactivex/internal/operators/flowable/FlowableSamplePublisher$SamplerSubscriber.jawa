record `io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface {
  `io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber` `io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber.parent` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplerSubscriber;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplePublisherSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40601c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L406022.  v0.`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber` := v1 @kind object;
  #L406026.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplerSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406038.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber` @kind object;
  #L40603c.  call `complete`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplePublisherSubscriber;.complete:()V` @kind virtual;
  #L406042.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplerSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406054.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber` @kind object;
  #L406058.  call `error`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplePublisherSubscriber;.error:(Ljava/lang/Throwable;)V` @kind virtual;
  #L40605e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplerSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L406070.  v1:= v0.`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber` @kind object;
  #L406074.  call `run`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplePublisherSubscriber;.run:()V` @kind virtual;
  #L40607a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplerSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40608c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber.parent` @type ^`io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber` @kind object;
  #L406090.  call `setOther`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableSamplePublisher$SamplePublisherSubscriber;.setOther:(Lorg/reactivestreams/Subscription;)V` @kind virtual;
  #L406096.  return @kind void;
}
