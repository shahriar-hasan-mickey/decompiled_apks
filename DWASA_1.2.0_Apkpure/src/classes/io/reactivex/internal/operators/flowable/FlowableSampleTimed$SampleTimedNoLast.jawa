record `io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber` @kind class {
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableSampleTimed$SampleTimedNoLast;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4061c4.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableSampleTimed$SampleTimedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L4061ca.  return @kind void;
}
procedure `void` `complete`(`io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableSampleTimed$SampleTimedNoLast;.complete:()V` @AccessFlag  {
    temp;
    v0;

  #L4061dc.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4061e0.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4061e6.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableSampleTimed$SampleTimedNoLast;.run:()V` @AccessFlag PUBLIC {
    temp;

  #L4061f8.  call `emit`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableSampleTimed$SampleTimedNoLast;.emit:()V` @kind virtual;
  #L4061fe.  return @kind void;
}
