record `io.reactivex.internal.operators.mixed.ScalarXMapZHelper` @kind class @AccessFlag FINAL {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.mixed.ScalarXMapZHelper` v2 @kind this) @signature `Lio/reactivex/internal/operators/mixed/ScalarXMapZHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L41b980.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41b986.  v0:= new `java.lang.IllegalStateException`;
  #L41b98a.  v1:= "No instances!" @kind object;
  #L41b98e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41b994.  throw v0;
}
procedure `boolean` `tryAsCompletable`(`java.lang.Object` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.CompletableObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/mixed/ScalarXMapZHelper;.tryAsCompletable:(Ljava/lang/Object;Lio/reactivex/functions/Function;Lio/reactivex/CompletableObserver;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L41b7fc.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L41b800.  if v0 == 0 then goto L41b856;
  #L41b804.  v2:= (`java.util.concurrent.Callable`) v2 @kind object;
  #L41b808.  v0:= 0I;
  #L41b80a.  v1:= 1I;
  #L41b80c.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L41b812.  v2:= temp @kind object;
  #L41b814.  if v2 == 0 then goto L41b832;
  #L41b818.  call temp:= `apply`(v3, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41b81e.  v2:= temp @kind object;
  #L41b820.  v3:= "The mapper returned a null CompletableSource" @kind object;
  #L41b824.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41b82a.  v2:= temp @kind object;
  #L41b82c.  v0:= v2 @kind object;
  #L41b82e.  v0:= (`io.reactivex.CompletableSource`) v0 @kind object;
  #L41b832.  if v0 != 0 then goto L41b83e;
  #L41b836.  call `complete`(v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/CompletableObserver;)V` @kind static;
  #L41b83c.  goto L41b844;
  #L41b83e.  call `subscribe`(v0, v4) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L41b844.  return v1;
  #L41b846.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41b848.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41b84e.  call `error`(v2, v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L41b854.  return v1;
  #L41b856.  v2:= 0I;
  #L41b858.  return v2;
  catch `java.lang.Throwable` @[L41b80c..L41b832] goto L41b846;
}
procedure `boolean` `tryAsMaybe`(`java.lang.Object` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/mixed/ScalarXMapZHelper;.tryAsMaybe:(Ljava/lang/Object;Lio/reactivex/functions/Function;Lio/reactivex/Observer;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L41b878.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L41b87c.  if v0 == 0 then goto L41b8da;
  #L41b880.  v2:= (`java.util.concurrent.Callable`) v2 @kind object;
  #L41b884.  v0:= 0I;
  #L41b886.  v1:= 1I;
  #L41b888.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L41b88e.  v2:= temp @kind object;
  #L41b890.  if v2 == 0 then goto L41b8ae;
  #L41b894.  call temp:= `apply`(v3, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41b89a.  v2:= temp @kind object;
  #L41b89c.  v3:= "The mapper returned a null MaybeSource" @kind object;
  #L41b8a0.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41b8a6.  v2:= temp @kind object;
  #L41b8a8.  v0:= v2 @kind object;
  #L41b8aa.  v0:= (`io.reactivex.MaybeSource`) v0 @kind object;
  #L41b8ae.  if v0 != 0 then goto L41b8ba;
  #L41b8b2.  call `complete`(v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L41b8b8.  goto L41b8c8;
  #L41b8ba.  call temp:= `create`(v4) @signature `Lio/reactivex/internal/operators/maybe/MaybeToObservable;.create:(Lio/reactivex/Observer;)Lio/reactivex/MaybeObserver;` @kind static;
  #L41b8c0.  v2:= temp @kind object;
  #L41b8c2.  call `subscribe`(v0, v2) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L41b8c8.  return v1;
  #L41b8ca.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41b8cc.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41b8d2.  call `error`(v2, v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L41b8d8.  return v1;
  #L41b8da.  v2:= 0I;
  #L41b8dc.  return v2;
  catch `java.lang.Throwable` @[L41b888..L41b8ae] goto L41b8ca;
}
procedure `boolean` `tryAsSingle`(`java.lang.Object` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/mixed/ScalarXMapZHelper;.tryAsSingle:(Ljava/lang/Object;Lio/reactivex/functions/Function;Lio/reactivex/Observer;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L41b8fc.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L41b900.  if v0 == 0 then goto L41b95e;
  #L41b904.  v2:= (`java.util.concurrent.Callable`) v2 @kind object;
  #L41b908.  v0:= 0I;
  #L41b90a.  v1:= 1I;
  #L41b90c.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L41b912.  v2:= temp @kind object;
  #L41b914.  if v2 == 0 then goto L41b932;
  #L41b918.  call temp:= `apply`(v3, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41b91e.  v2:= temp @kind object;
  #L41b920.  v3:= "The mapper returned a null SingleSource" @kind object;
  #L41b924.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41b92a.  v2:= temp @kind object;
  #L41b92c.  v0:= v2 @kind object;
  #L41b92e.  v0:= (`io.reactivex.SingleSource`) v0 @kind object;
  #L41b932.  if v0 != 0 then goto L41b93e;
  #L41b936.  call `complete`(v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L41b93c.  goto L41b94c;
  #L41b93e.  call temp:= `create`(v4) @signature `Lio/reactivex/internal/operators/single/SingleToObservable;.create:(Lio/reactivex/Observer;)Lio/reactivex/SingleObserver;` @kind static;
  #L41b944.  v2:= temp @kind object;
  #L41b946.  call `subscribe`(v0, v2) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L41b94c.  return v1;
  #L41b94e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41b950.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L41b956.  call `error`(v2, v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L41b95c.  return v1;
  #L41b95e.  v2:= 0I;
  #L41b960.  return v2;
  catch `java.lang.Throwable` @[L41b90c..L41b932] goto L41b94e;
}
