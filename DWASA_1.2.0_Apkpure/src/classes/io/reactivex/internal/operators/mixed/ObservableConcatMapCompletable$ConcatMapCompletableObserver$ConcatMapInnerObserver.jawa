record `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver` `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver` v0 @kind this, `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver;.<init>:(Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable$ConcatMapCompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L419d84.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L419d8a.  v0.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver.parent` @type ^`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver` := v1 @kind object;
  #L419d8e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver;.dispose:()V` @AccessFlag  {
    temp;

  #L419da0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L419da6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L419db8.  v0:= v1.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver.parent` @type ^`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver` @kind object;
  #L419dbc.  call `innerComplete`(v0) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable$ConcatMapCompletableObserver;.innerComplete:()V` @kind virtual;
  #L419dc2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L419dd4.  v0:= v1.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver.parent` @type ^`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver` @kind object;
  #L419dd8.  call `innerError`(v0, v2) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable$ConcatMapCompletableObserver;.innerError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L419dde.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L419df0.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L419df6.  return @kind void;
}
