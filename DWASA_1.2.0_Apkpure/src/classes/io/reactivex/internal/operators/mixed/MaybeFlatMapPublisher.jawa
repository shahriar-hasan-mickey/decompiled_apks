record `io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher.mapper` @AccessFlag FINAL;
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L419d38.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L419d3e.  v0.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher.source` @type ^`io.reactivex.MaybeSource` := v1 @kind object;
  #L419d42.  v0.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher.mapper` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L419d46.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L419d58.  v0:= v3.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L419d5c.  v1:= new `io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber`;
  #L419d60.  v2:= v3.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher.mapper` @type ^`io.reactivex.functions.Function` @kind object;
  #L419d64.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V` @kind direct;
  #L419d6a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L419d70.  return @kind void;
}
