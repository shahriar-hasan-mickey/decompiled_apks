record `io.reactivex.internal.schedulers.NewThreadWorker` @kind class @AccessFlag PUBLIC extends `io.reactivex.Scheduler$Worker` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
  `boolean` `io.reactivex.internal.schedulers.NewThreadWorker.disposed` @AccessFlag VOLATILE;
  `java.util.concurrent.ScheduledExecutorService` `io.reactivex.internal.schedulers.NewThreadWorker.executor` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.NewThreadWorker` v0 @kind this, `java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L441164.  call `<init>`(v0) @signature `Lio/reactivex/Scheduler$Worker;.<init>:()V` @kind direct;
  #L44116a.  call temp:= `create`(v1) @signature `Lio/reactivex/internal/schedulers/SchedulerPoolFactory;.create:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L441170.  v1:= temp @kind object;
  #L441172.  v0.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` := v1 @kind object;
  #L441176.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.NewThreadWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441188.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.disposed` @type ^`boolean` @kind boolean;
  #L44118c.  if v0 != 0 then goto L4411a0;
  #L441190.  v0:= 1I;
  #L441192.  v1.`io.reactivex.internal.schedulers.NewThreadWorker.disposed` @type ^`boolean` := v0 @kind boolean;
  #L441196.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L44119a.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L4411a0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.NewThreadWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440f44.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.disposed` @type ^`boolean` @kind boolean;
  #L440f48.  return v0;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.NewThreadWorker` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedule:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L440f5c.  v0:= 0L;
  #L440f60.  v2:= 0I;
  #L440f62.  call temp:= `schedule`(v3, v4, v0, v2) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L440f68.  v4:= temp @kind object;
  #L440f6a.  return v4 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.NewThreadWorker` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L440f7c.  v0:= v6.`io.reactivex.internal.schedulers.NewThreadWorker.disposed` @type ^`boolean` @kind boolean;
  #L440f80.  if v0 == 0 then goto L440f8a;
  #L440f84.  v7:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L440f88.  return v7 @kind object;
  #L440f8a.  v5:= 0I;
  #L440f8c.  v0:= v6 @kind object;
  #L440f8e.  v1:= v7 @kind object;
  #L440f90.  v2:= v8 @kind wide;
  #L440f92.  v4:= v10 @kind object;
  #L440f94.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L440f9a.  v7:= temp @kind object;
  #L440f9c.  return v7 @kind object;
}
procedure `io.reactivex.internal.schedulers.ScheduledRunnable` `scheduleActual`(`io.reactivex.internal.schedulers.NewThreadWorker` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object, `io.reactivex.internal.disposables.DisposableContainer` v8 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4410dc.  call temp:= `onSchedule`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L4410e2.  v4:= temp @kind object;
  #L4410e4.  v0:= new `io.reactivex.internal.schedulers.ScheduledRunnable`;
  #L4410e8.  call `<init>`(v0, v4, v8) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.<init>:(Ljava/lang/Runnable;Lio/reactivex/internal/disposables/DisposableContainer;)V` @kind direct;
  #L4410ee.  if v8 == 0 then goto L441100;
  #L4410f2.  call temp:= `add`(v8, v0) @signature `Lio/reactivex/internal/disposables/DisposableContainer;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind interface;
  #L4410f8.  v4:= temp;
  #L4410fa.  if v4 != 0 then goto L441100;
  #L4410fe.  return v0 @kind object;
  #L441100.  v1:= 0L;
  #L441104.  v4:= lcmp(v5, v1);
  #L441108.  if v4 > 0 then goto L44111a;
  #L44110c.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L441110.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L441116.  v4:= temp @kind object;
  #L441118.  goto L441126;
  #L44111a.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L44111e.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L441124.  v4:= temp @kind object;
  #L441126.  call `setFuture`(v0, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L44112c.  goto L441140;
  #L44112e.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L441130.  if v8 == 0 then goto L44113a;
  #L441134.  call temp:= `remove`(v8, v0) @signature `Lio/reactivex/internal/disposables/DisposableContainer;.remove:(Lio/reactivex/disposables/Disposable;)Z` @kind interface;
  #L44113a.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L441140.  return v0 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L44110c..L44112c] goto L44112e;
}
procedure `io.reactivex.disposables.Disposable` `scheduleDirect`(`io.reactivex.internal.schedulers.NewThreadWorker` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L440fb0.  v0:= new `io.reactivex.internal.schedulers.ScheduledDirectTask`;
  #L440fb4.  call temp:= `onSchedule`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L440fba.  v4:= temp @kind object;
  #L440fbc.  call `<init>`(v0, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L440fc2.  v1:= 0L;
  #L440fc6.  v4:= lcmp(v5, v1);
  #L440fca.  if v4 > 0 then goto L440fdc;
  #L440fce.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L440fd2.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L440fd8.  v4:= temp @kind object;
  #L440fda.  goto L440fe8;
  #L440fdc.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L440fe0.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L440fe6.  v4:= temp @kind object;
  #L440fe8.  call `setFuture`(v0, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L440fee.  return v0 @kind object;
  #L440ff0.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L440ff2.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L440ff8.  v4:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L440ffc.  return v4 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L440fce..L440fee] goto L440ff0;
}
procedure `io.reactivex.disposables.Disposable` `schedulePeriodicallyDirect`(`io.reactivex.internal.schedulers.NewThreadWorker` v8 @kind this, `java.lang.Runnable` v9 @kind object, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L441020.  call temp:= `onSchedule`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L441026.  v9:= temp @kind object;
  #L441028.  v0:= 0L;
  #L44102c.  v2:= lcmp(v12, v0);
  #L441030.  if v2 > 0 then goto L44107a;
  #L441034.  v12:= new `io.reactivex.internal.schedulers.InstantPeriodicTask`;
  #L441038.  v13:= v8.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L44103c.  call `<init>`(v12, v9, v13) @signature `Lio/reactivex/internal/schedulers/InstantPeriodicTask;.<init>:(Ljava/lang/Runnable;Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L441042.  v9:= lcmp(v10, v0);
  #L441046.  if v9 > 0 then goto L441058;
  #L44104a.  v9:= v8.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L44104e.  call temp:= `submit`(v9, v12) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L441054.  v9:= temp @kind object;
  #L441056.  goto L441064;
  #L441058.  v9:= v8.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L44105c.  call temp:= `schedule`(v9, v12, v10, v14) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L441062.  v9:= temp @kind object;
  #L441064.  call `setFirst`(v12, v9) @signature `Lio/reactivex/internal/schedulers/InstantPeriodicTask;.setFirst:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L44106a.  return v12 @kind object;
  #L44106c.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L44106e.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L441074.  v9:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L441078.  return v9 @kind object;
  #L44107a.  v7:= new `io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask`;
  #L44107e.  call `<init>`(v7, v9) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectPeriodicTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L441084.  v0:= v8.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L441088.  v1:= v7 @kind object;
  #L44108a.  v2:= v10 @kind wide;
  #L44108c.  v4:= v12 @kind wide;
  #L44108e.  v6:= v14 @kind object;
  #L441090.  call temp:= `scheduleAtFixedRate`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L441096.  v9:= temp @kind object;
  #L441098.  call `setFuture`(v7, v9) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectPeriodicTask;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L44109e.  return v7 @kind object;
  #L4410a0.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L4410a2.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4410a8.  v9:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4410ac.  return v9 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L44104a..L44106a] goto L44106c;
  catch `java.util.concurrent.RejectedExecutionException` @[L441084..L44109e] goto L4410a0;
}
procedure `void` `shutdown`(`io.reactivex.internal.schedulers.NewThreadWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4411b4.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.disposed` @type ^`boolean` @kind boolean;
  #L4411b8.  if v0 != 0 then goto L4411cc;
  #L4411bc.  v0:= 1I;
  #L4411be.  v1.`io.reactivex.internal.schedulers.NewThreadWorker.disposed` @type ^`boolean` := v0 @kind boolean;
  #L4411c2.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L4411c6.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L4411cc.  return @kind void;
}
