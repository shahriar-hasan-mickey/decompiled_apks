record `io.reactivex.internal.schedulers.ScheduledRunnable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `java.lang.Runnable` @kind interface, `java.util.concurrent.Callable` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `java.lang.Runnable` `io.reactivex.internal.schedulers.ScheduledRunnable.actual` @AccessFlag FINAL;
}
global `java.lang.Object` `@@io.reactivex.internal.schedulers.ScheduledRunnable.ASYNC_DISPOSED` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @AccessFlag STATIC_FINAL;
global `int` `@@io.reactivex.internal.schedulers.ScheduledRunnable.FUTURE_INDEX` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@io.reactivex.internal.schedulers.ScheduledRunnable.PARENT_DISPOSED` @AccessFlag STATIC_FINAL;
global `int` `@@io.reactivex.internal.schedulers.ScheduledRunnable.PARENT_INDEX` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@io.reactivex.internal.schedulers.ScheduledRunnable.SYNC_DISPOSED` @AccessFlag STATIC_FINAL;
global `int` `@@io.reactivex.internal.schedulers.ScheduledRunnable.THREAD_INDEX` @AccessFlag STATIC_FINAL;
global `long` `@@io.reactivex.internal.schedulers.ScheduledRunnable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L441484.  v0:= new `java.lang.Object`;
  #L441488.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44148e.  `@@io.reactivex.internal.schedulers.ScheduledRunnable.PARENT_DISPOSED` @type ^`java.lang.Object` := v0 @kind object;
  #L441492.  v0:= new `java.lang.Object`;
  #L441496.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44149c.  `@@io.reactivex.internal.schedulers.ScheduledRunnable.SYNC_DISPOSED` @type ^`java.lang.Object` := v0 @kind object;
  #L4414a0.  v0:= new `java.lang.Object`;
  #L4414a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4414aa.  `@@io.reactivex.internal.schedulers.ScheduledRunnable.ASYNC_DISPOSED` @type ^`java.lang.Object` := v0 @kind object;
  #L4414ae.  v0:= new `java.lang.Object`;
  #L4414b2.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4414b8.  `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @type ^`java.lang.Object` := v0 @kind object;
  #L4414bc.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.ScheduledRunnable` v1 @kind this, `java.lang.Runnable` v2 @kind object, `io.reactivex.internal.disposables.DisposableContainer` v3 @kind object) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.<init>:(Ljava/lang/Runnable;Lio/reactivex/internal/disposables/DisposableContainer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4414d0.  v0:= 3I;
  #L4414d2.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L4414d8.  v1.`io.reactivex.internal.schedulers.ScheduledRunnable.actual` @type ^`java.lang.Runnable` := v2 @kind object;
  #L4414dc.  v2:= 0I;
  #L4414de.  call `lazySet`(v1, v2, v3) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L4414e4.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.schedulers.ScheduledRunnable` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441468.  call `run`(v1) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.run:()V` @kind virtual;
  #L44146e.  v0:= 0I;
  #L441470.  return v0 @kind object;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.ScheduledRunnable` v5 @kind this) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4414f8.  v0:= 1I;
  #L4414fa.  call temp:= `get`(v5, v0) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L441500.  v1:= temp @kind object;
  #L441502.  v2:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @type ^`java.lang.Object` @kind object;
  #L441506.  v3:= 0I;
  #L441508.  if v1 == v2 then goto L441562;
  #L44150c.  v2:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.SYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L441510.  if v1 == v2 then goto L441562;
  #L441514.  v2:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.ASYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L441518.  if v1 != v2 then goto L44151e;
  #L44151c.  goto L441562;
  #L44151e.  v2:= 2I;
  #L441520.  call temp:= `get`(v5, v2) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L441526.  v2:= temp @kind object;
  #L441528.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L44152e.  v4:= temp @kind object;
  #L441530.  if v2 == v4 then goto L441538;
  #L441534.  v2:= 1I;
  #L441536.  goto L44153a;
  #L441538.  v2:= 0I;
  #L44153a.  if v2 == 0 then goto L441544;
  #L44153e.  v4:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.ASYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L441542.  goto L441548;
  #L441544.  v4:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.SYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L441548.  call temp:= `compareAndSet`(v5, v0, v1, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L44154e.  v0:= temp;
  #L441550.  if v0 == 0 then goto L4414f8;
  #L441554.  if v1 == 0 then goto L441562;
  #L441558.  v1:= (`java.util.concurrent.Future`) v1 @kind object;
  #L44155c.  call temp:= `cancel`(v1, v2) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L441562.  call temp:= `get`(v5, v3) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L441568.  v0:= temp @kind object;
  #L44156a.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @type ^`java.lang.Object` @kind object;
  #L44156e.  if v0 == v1 then goto L441596;
  #L441572.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.PARENT_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L441576.  if v0 == v1 then goto L441596;
  #L44157a.  if v0 != 0 then goto L441580;
  #L44157e.  goto L441596;
  #L441580.  call temp:= `compareAndSet`(v5, v3, v0, v1) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L441586.  v1:= temp;
  #L441588.  if v1 == 0 then goto L441562;
  #L44158c.  v0:= (`io.reactivex.internal.disposables.DisposableContainer`) v0 @kind object;
  #L441590.  call temp:= `delete`(v0, v5) @signature `Lio/reactivex/internal/disposables/DisposableContainer;.delete:(Lio/reactivex/disposables/Disposable;)Z` @kind interface;
  #L441596.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.ScheduledRunnable` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L441438.  v0:= 0I;
  #L44143a.  call temp:= `get`(v3, v0) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L441440.  v1:= temp @kind object;
  #L441442.  v2:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.PARENT_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L441446.  if v1 == v2 then goto L441452;
  #L44144a.  v2:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @type ^`java.lang.Object` @kind object;
  #L44144e.  if v1 != v2 then goto L441454;
  #L441452.  v0:= 1I;
  #L441454.  return v0;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.ScheduledRunnable` v5 @kind this) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4415a8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4415ae.  v0:= temp @kind object;
  #L4415b0.  v1:= 2I;
  #L4415b2.  call `lazySet`(v5, v1, v0) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L4415b8.  v0:= 0I;
  #L4415ba.  v2:= 1I;
  #L4415bc.  v3:= 0I;
  #L4415be.  v4:= v5.`io.reactivex.internal.schedulers.ScheduledRunnable.actual` @type ^`java.lang.Runnable` @kind object;
  #L4415c2.  call `run`(v4) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L4415c8.  goto L4415d2;
  #L4415ca.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4415cc.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4415d2.  call `lazySet`(v5, v1, v0) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L4415d8.  call temp:= `get`(v5, v3) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4415de.  v0:= temp @kind object;
  #L4415e0.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.PARENT_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L4415e4.  if v0 == v1 then goto L441606;
  #L4415e8.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @type ^`java.lang.Object` @kind object;
  #L4415ec.  call temp:= `compareAndSet`(v5, v3, v0, v1) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4415f2.  v1:= temp;
  #L4415f4.  if v1 == 0 then goto L441606;
  #L4415f8.  if v0 == 0 then goto L441606;
  #L4415fc.  v0:= (`io.reactivex.internal.disposables.DisposableContainer`) v0 @kind object;
  #L441600.  call temp:= `delete`(v0, v5) @signature `Lio/reactivex/internal/disposables/DisposableContainer;.delete:(Lio/reactivex/disposables/Disposable;)Z` @kind interface;
  #L441606.  call temp:= `get`(v5, v2) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L44160c.  v0:= temp @kind object;
  #L44160e.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.SYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L441612.  if v0 == v1 then goto L44162e;
  #L441616.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.ASYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L44161a.  if v0 == v1 then goto L44162e;
  #L44161e.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @type ^`java.lang.Object` @kind object;
  #L441622.  call temp:= `compareAndSet`(v5, v2, v0, v1) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L441628.  v0:= temp;
  #L44162a.  if v0 == 0 then goto L441606;
  #L44162e.  return @kind void;
  #L441630.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441632.  call `lazySet`(v5, v1, v0) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L441638.  call temp:= `get`(v5, v3) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L44163e.  v0:= temp @kind object;
  #L441640.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.PARENT_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L441644.  if v0 == v1 then goto L441666;
  #L441648.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @type ^`java.lang.Object` @kind object;
  #L44164c.  call temp:= `compareAndSet`(v5, v3, v0, v1) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L441652.  v1:= temp;
  #L441654.  if v1 == 0 then goto L441666;
  #L441658.  if v0 == 0 then goto L441666;
  #L44165c.  v0:= (`io.reactivex.internal.disposables.DisposableContainer`) v0 @kind object;
  #L441660.  call temp:= `delete`(v0, v5) @signature `Lio/reactivex/internal/disposables/DisposableContainer;.delete:(Lio/reactivex/disposables/Disposable;)Z` @kind interface;
  #L441666.  call temp:= `get`(v5, v2) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L44166c.  v0:= temp @kind object;
  #L44166e.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.SYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L441672.  if v0 == v1 then goto L441690;
  #L441676.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.ASYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L44167a.  if v0 == v1 then goto L441690;
  #L44167e.  v1:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @type ^`java.lang.Object` @kind object;
  #L441682.  call temp:= `compareAndSet`(v5, v2, v0, v1) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L441688.  v0:= temp;
  #L44168a.  if v0 != 0 then goto L441690;
  #L44168e.  goto L441666;
  #L441690.  goto L441694;
  #L441692.  throw v4;
  #L441694.  goto L441692;
  catch `java.lang.Throwable` @[L4415be..L4415c8] goto L4415ca;
  catch `java.lang.Throwable` @[L4415cc..L4415d2] goto L441630;
}
procedure `void` `setFuture`(`io.reactivex.internal.schedulers.ScheduledRunnable` v3 @kind this, `java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.setFuture:(Ljava/util/concurrent/Future;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4416c0.  v0:= 1I;
  #L4416c2.  call temp:= `get`(v3, v0) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4416c8.  v1:= temp @kind object;
  #L4416ca.  v2:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.DONE` @type ^`java.lang.Object` @kind object;
  #L4416ce.  if v1 != v2 then goto L4416d4;
  #L4416d2.  return @kind void;
  #L4416d4.  v2:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.SYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L4416d8.  if v1 != v2 then goto L4416e6;
  #L4416dc.  v0:= 0I;
  #L4416de.  call temp:= `cancel`(v4, v0) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L4416e4.  return @kind void;
  #L4416e6.  v2:= `@@io.reactivex.internal.schedulers.ScheduledRunnable.ASYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L4416ea.  if v1 != v2 then goto L4416f6;
  #L4416ee.  call temp:= `cancel`(v4, v0) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L4416f4.  return @kind void;
  #L4416f6.  call temp:= `compareAndSet`(v3, v0, v1, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4416fc.  v0:= temp;
  #L4416fe.  if v0 == 0 then goto L4416c0;
  #L441702.  return @kind void;
}
