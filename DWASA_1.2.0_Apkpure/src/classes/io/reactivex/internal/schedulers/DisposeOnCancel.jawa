record `io.reactivex.internal.schedulers.DisposeOnCancel` @kind class @AccessFlag FINAL extends `java.util.concurrent.Future` @kind interface {
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.schedulers.DisposeOnCancel.upstream` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.DisposeOnCancel` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/DisposeOnCancel;.<init>:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43fee4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43feea.  v0.`io.reactivex.internal.schedulers.DisposeOnCancel.upstream` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L43feee.  return @kind void;
}
procedure `boolean` `cancel`(`io.reactivex.internal.schedulers.DisposeOnCancel` v0 @kind this, `boolean` v1 ) @signature `Lio/reactivex/internal/schedulers/DisposeOnCancel;.cancel:(Z)Z` @AccessFlag PUBLIC {
    temp;

  #L43fe74.  v1:= v0.`io.reactivex.internal.schedulers.DisposeOnCancel.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L43fe78.  call `dispose`(v1) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L43fe7e.  v1:= 0I;
  #L43fe80.  return v1;
}
procedure `java.lang.Object` `get`(`io.reactivex.internal.schedulers.DisposeOnCancel` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/DisposeOnCancel;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43febc.  v0:= 0I;
  #L43febe.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`io.reactivex.internal.schedulers.DisposeOnCancel` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/internal/schedulers/DisposeOnCancel;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L43fed0.  v1:= 0I;
  #L43fed2.  return v1 @kind object;
}
procedure `boolean` `isCancelled`(`io.reactivex.internal.schedulers.DisposeOnCancel` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/DisposeOnCancel;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fe94.  v0:= 0I;
  #L43fe96.  return v0;
}
procedure `boolean` `isDone`(`io.reactivex.internal.schedulers.DisposeOnCancel` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/DisposeOnCancel;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fea8.  v0:= 0I;
  #L43feaa.  return v0;
}
