record `io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker` `io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask.this$0` @AccessFlag FINAL_SYNTHETIC;
  `io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable` `io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask.timedRunnable` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask` v0 @kind this, `io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker` v1 @kind object, `io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/TrampolineScheduler$TrampolineWorker$AppendToQueueTask;.<init>:(Lio/reactivex/internal/schedulers/TrampolineScheduler$TrampolineWorker;Lio/reactivex/internal/schedulers/TrampolineScheduler$TimedRunnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4423c0.  v0.`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask.this$0` @type ^`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker` := v1 @kind object;
  #L4423c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4423ca.  v0.`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask.timedRunnable` @type ^`io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable` := v2 @kind object;
  #L4423ce.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/TrampolineScheduler$TrampolineWorker$AppendToQueueTask;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4423e0.  v0:= v2.`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask.timedRunnable` @type ^`io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable` @kind object;
  #L4423e4.  v1:= 1I;
  #L4423e6.  v0.`io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable.disposed` @type ^`boolean` := v1 @kind boolean;
  #L4423ea.  v0:= v2.`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask.this$0` @type ^`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker` @kind object;
  #L4423ee.  v0:= v0.`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker.queue` @type ^`java.util.concurrent.PriorityBlockingQueue` @kind object;
  #L4423f2.  v1:= v2.`io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask.timedRunnable` @type ^`io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable` @kind object;
  #L4423f6.  call temp:= `remove`(v0, v1) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L4423fc.  return @kind void;
}
