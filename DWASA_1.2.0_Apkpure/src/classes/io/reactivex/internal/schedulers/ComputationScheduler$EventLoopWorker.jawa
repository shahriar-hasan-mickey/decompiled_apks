record `io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker` @kind class @AccessFlag FINAL extends `io.reactivex.Scheduler$Worker` @kind class {
  `io.reactivex.internal.disposables.ListCompositeDisposable` `io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.both` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.disposed` @AccessFlag VOLATILE;
  `io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker` `io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.poolWorker` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.disposables.ListCompositeDisposable` `io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.serial` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.timed` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker` v1 @kind this, `io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$EventLoopWorker;.<init>:(Lio/reactivex/internal/schedulers/ComputationScheduler$PoolWorker;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L43fa20.  call `<init>`(v1) @signature `Lio/reactivex/Scheduler$Worker;.<init>:()V` @kind direct;
  #L43fa26.  v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.poolWorker` @type ^`io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker` := v2 @kind object;
  #L43fa2a.  v2:= new `io.reactivex.internal.disposables.ListCompositeDisposable`;
  #L43fa2e.  call `<init>`(v2) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L43fa34.  v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.serial` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` := v2 @kind object;
  #L43fa38.  v2:= new `io.reactivex.disposables.CompositeDisposable`;
  #L43fa3c.  call `<init>`(v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L43fa42.  v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.timed` @type ^`io.reactivex.disposables.CompositeDisposable` := v2 @kind object;
  #L43fa46.  v2:= new `io.reactivex.internal.disposables.ListCompositeDisposable`;
  #L43fa4a.  call `<init>`(v2) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L43fa50.  v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.both` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` := v2 @kind object;
  #L43fa54.  v2:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.both` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` @kind object;
  #L43fa58.  v0:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.serial` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` @kind object;
  #L43fa5c.  call temp:= `add`(v2, v0) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L43fa62.  v2:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.both` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` @kind object;
  #L43fa66.  v0:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.timed` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L43fa6a.  call temp:= `add`(v2, v0) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L43fa70.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$EventLoopWorker;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fa84.  v0:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.disposed` @type ^`boolean` @kind boolean;
  #L43fa88.  if v0 != 0 then goto L43fa9c;
  #L43fa8c.  v0:= 1I;
  #L43fa8e.  v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.disposed` @type ^`boolean` := v0 @kind boolean;
  #L43fa92.  v0:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.both` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` @kind object;
  #L43fa96.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.dispose:()V` @kind virtual;
  #L43fa9c.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$EventLoopWorker;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43f994.  v0:= v1.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.disposed` @type ^`boolean` @kind boolean;
  #L43f998.  return v0;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker` v6 @kind this, `java.lang.Runnable` v7 @kind object) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$EventLoopWorker;.schedule:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L43f9ac.  v0:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.disposed` @type ^`boolean` @kind boolean;
  #L43f9b0.  if v0 == 0 then goto L43f9ba;
  #L43f9b4.  v7:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L43f9b8.  return v7 @kind object;
  #L43f9ba.  v0:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.poolWorker` @type ^`io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker` @kind object;
  #L43f9be.  v2:= 0L;
  #L43f9c2.  v4:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L43f9c6.  v5:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.serial` @type ^`io.reactivex.internal.disposables.ListCompositeDisposable` @kind object;
  #L43f9ca.  v1:= v7 @kind object;
  #L43f9cc.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$PoolWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L43f9d2.  v7:= temp @kind object;
  #L43f9d4.  return v7 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$EventLoopWorker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L43f9e8.  v0:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.disposed` @type ^`boolean` @kind boolean;
  #L43f9ec.  if v0 == 0 then goto L43f9f6;
  #L43f9f0.  v7:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L43f9f4.  return v7 @kind object;
  #L43f9f6.  v0:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.poolWorker` @type ^`io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker` @kind object;
  #L43f9fa.  v5:= v6.`io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker.timed` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L43f9fe.  v1:= v7 @kind object;
  #L43fa00.  v2:= v8 @kind wide;
  #L43fa02.  v4:= v10 @kind object;
  #L43fa04.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler$PoolWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L43fa0a.  v7:= temp @kind object;
  #L43fa0c.  return v7 @kind object;
}
