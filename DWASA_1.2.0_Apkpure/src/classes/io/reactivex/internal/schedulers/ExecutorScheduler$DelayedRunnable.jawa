record `io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `java.lang.Runnable` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.schedulers.SchedulerRunnableIntrospection` @kind interface {
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.direct` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.timed` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43ff9c.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L43ffa2.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L43ffa6.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L43ffac.  v0.`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.timed` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L43ffb0.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L43ffb4.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L43ffba.  v0.`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.direct` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L43ffbe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43ffd0.  v0:= 0I;
  #L43ffd2.  call temp:= `getAndSet`(v1, v0) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L43ffd8.  v0:= temp @kind object;
  #L43ffda.  if v0 == 0 then goto L43fff2;
  #L43ffde.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.timed` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L43ffe2.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L43ffe8.  v0:= v1.`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.direct` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L43ffec.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L43fff2.  return @kind void;
}
procedure `java.lang.Runnable` `getWrappedRunnable`(`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.getWrappedRunnable:()Ljava/lang/Runnable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43ff74.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.get:()Ljava/lang/Object;` @kind virtual;
  #L43ff7a.  v0:= temp @kind object;
  #L43ff7c.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L43ff80.  if v0 == 0 then goto L43ff86;
  #L43ff84.  goto L43ff8a;
  #L43ff86.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_RUNNABLE` @type ^`java.lang.Runnable` @kind object;
  #L43ff8a.  return v0 @kind object;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43ff50.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.get:()Ljava/lang/Object;` @kind virtual;
  #L43ff56.  v0:= temp @kind object;
  #L43ff58.  if v0 != 0 then goto L43ff60;
  #L43ff5c.  v0:= 1I;
  #L43ff5e.  goto L43ff62;
  #L43ff60.  v0:= 0I;
  #L43ff62.  return v0;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L440004.  call temp:= `get`(v3) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.get:()Ljava/lang/Object;` @kind virtual;
  #L44000a.  v0:= temp @kind object;
  #L44000c.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L440010.  if v0 == 0 then goto L440066;
  #L440014.  v1:= 0I;
  #L440016.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L44001c.  call `lazySet`(v3, v1) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L440022.  v0:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.timed` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L440026.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L44002a.  call `lazySet`(v0, v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L440030.  v0:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.direct` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L440034.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L440038.  call `lazySet`(v0, v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L44003e.  goto L440066;
  #L440040.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L440042.  call `lazySet`(v3, v1) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler$DelayedRunnable;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L440048.  v1:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.timed` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L44004c.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L440050.  call `lazySet`(v1, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L440056.  v1:= v3.`io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable.direct` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L44005a.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L44005e.  call `lazySet`(v1, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L440064.  throw v0;
  #L440066.  return @kind void;
  catch `java.lang.Throwable` @[L440016..L44001c] goto L440040;
}
