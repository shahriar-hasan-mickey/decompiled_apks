record `io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties` @kind class @AccessFlag FINAL {
  `boolean` `io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties.purgeEnable` @AccessFlag ;
  `int` `io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties.purgePeriod` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/SchedulerPoolFactory$PurgeProperties;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L441714.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44171a.  return @kind void;
}
procedure `void` `load`(`io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties` v3 @kind this, `java.util.Properties` v4 @kind object) @signature `Lio/reactivex/internal/schedulers/SchedulerPoolFactory$PurgeProperties;.load:(Ljava/util/Properties;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L44172c.  v0:= "rx2.purge-enabled" @kind object;
  #L441730.  call temp:= `containsKey`(v4, v0) @signature `Ljava/util/Properties;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L441736.  v1:= temp;
  #L441738.  v2:= 1I;
  #L44173a.  if v1 == 0 then goto L441754;
  #L44173e.  call temp:= `getProperty`(v4, v0) @signature `Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L441744.  v0:= temp @kind object;
  #L441746.  call temp:= `parseBoolean`(v0) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L44174c.  v0:= temp;
  #L44174e.  v3.`io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties.purgeEnable` @type ^`boolean` := v0 @kind boolean;
  #L441752.  goto L441758;
  #L441754.  v3.`io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties.purgeEnable` @type ^`boolean` := v2 @kind boolean;
  #L441758.  v0:= v3.`io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties.purgeEnable` @type ^`boolean` @kind boolean;
  #L44175c.  if v0 == 0 then goto L44178c;
  #L441760.  v0:= "rx2.purge-period-seconds" @kind object;
  #L441764.  call temp:= `containsKey`(v4, v0) @signature `Ljava/util/Properties;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L44176a.  v1:= temp;
  #L44176c.  if v1 == 0 then goto L44178c;
  #L441770.  call temp:= `getProperty`(v4, v0) @signature `Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L441776.  v4:= temp @kind object;
  #L441778.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L44177e.  v4:= temp;
  #L441780.  v3.`io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties.purgePeriod` @type ^`int` := v4;
  #L441784.  goto L441790;
  #L441786.  v3.`io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties.purgePeriod` @type ^`int` := v2;
  #L44178a.  goto L441790;
  #L44178c.  v3.`io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties.purgePeriod` @type ^`int` := v2;
  #L441790.  return @kind void;
  catch `java.lang.NumberFormatException` @[L441770..L441784] goto L441786;
}
