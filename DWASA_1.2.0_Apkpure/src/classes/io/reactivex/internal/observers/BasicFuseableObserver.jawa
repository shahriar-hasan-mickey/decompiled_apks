record `io.reactivex.internal.observers.BasicFuseableObserver` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.Observer` @kind interface, `io.reactivex.internal.fuseable.QueueDisposable` @kind interface {
  `boolean` `io.reactivex.internal.observers.BasicFuseableObserver.done` @AccessFlag PROTECTED;
  `io.reactivex.Observer` `io.reactivex.internal.observers.BasicFuseableObserver.downstream` @AccessFlag PROTECTED_FINAL;
  `io.reactivex.internal.fuseable.QueueDisposable` `io.reactivex.internal.observers.BasicFuseableObserver.qd` @AccessFlag PROTECTED;
  `int` `io.reactivex.internal.observers.BasicFuseableObserver.sourceMode` @AccessFlag PROTECTED;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.observers.BasicFuseableObserver.upstream` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.BasicFuseableObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e7588.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e758e.  v0.`io.reactivex.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L3e7592.  return @kind void;
}
procedure `void` `afterDownstream`(`io.reactivex.internal.observers.BasicFuseableObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.afterDownstream:()V` @AccessFlag PROTECTED {
    temp;

  #L3e75a4.  return @kind void;
}
procedure `boolean` `beforeDownstream`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.beforeDownstream:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3e74bc.  v0:= 1I;
  #L3e74be.  return v0;
}
procedure `void` `clear`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e75b8.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L3e75bc.  call `clear`(v0) @signature `Lio/reactivex/internal/fuseable/QueueDisposable;.clear:()V` @kind interface;
  #L3e75c2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e75d4.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e75d8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e75de.  return @kind void;
}
procedure `void` `fail`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.fail:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L3e75f0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e75f6.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e75fa.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e7600.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3e7606.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e74d0.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e74d4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L3e74da.  v0:= temp;
  #L3e74dc.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e74f0.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L3e74f4.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/fuseable/QueueDisposable;.isEmpty:()Z` @kind interface;
  #L3e74fa.  v0:= temp;
  #L3e74fc.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e7510.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3e7514.  v0:= "Should not be called!" @kind object;
  #L3e7518.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e751e.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.internal.observers.BasicFuseableObserver` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e7530.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3e7534.  v2:= "Should not be called!" @kind object;
  #L3e7538.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e753e.  throw v1;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7618.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.done` @type ^`boolean` @kind boolean;
  #L3e761c.  if v0 == 0 then goto L3e7622;
  #L3e7620.  return @kind void;
  #L3e7622.  v0:= 1I;
  #L3e7624.  v1.`io.reactivex.internal.observers.BasicFuseableObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L3e7628.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L3e762c.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L3e7632.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7644.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.done` @type ^`boolean` @kind boolean;
  #L3e7648.  if v0 == 0 then goto L3e7654;
  #L3e764c.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e7652.  return @kind void;
  #L3e7654.  v0:= 1I;
  #L3e7656.  v1.`io.reactivex.internal.observers.BasicFuseableObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L3e765a.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L3e765e.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3e7664.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.BasicFuseableObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e7678.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e767c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e7682.  v0:= temp;
  #L3e7684.  if v0 == 0 then goto L3e76b8;
  #L3e7688.  v1.`io.reactivex.internal.observers.BasicFuseableObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L3e768c.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind boolean;
  #L3e7690.  if v0 == 0 then goto L3e769c;
  #L3e7694.  v2:= (`io.reactivex.internal.fuseable.QueueDisposable`) v2 @kind object;
  #L3e7698.  v1.`io.reactivex.internal.observers.BasicFuseableObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` := v2 @kind object;
  #L3e769c.  call temp:= `beforeDownstream`(v1) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.beforeDownstream:()Z` @kind virtual;
  #L3e76a2.  v2:= temp;
  #L3e76a4.  if v2 == 0 then goto L3e76b8;
  #L3e76a8.  v2:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L3e76ac.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3e76b2.  call `afterDownstream`(v1) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.afterDownstream:()V` @kind virtual;
  #L3e76b8.  return @kind void;
}
procedure `int` `transitiveBoundaryFusion`(`io.reactivex.internal.observers.BasicFuseableObserver` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.transitiveBoundaryFusion:(I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L3e7550.  v0:= v2.`io.reactivex.internal.observers.BasicFuseableObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L3e7554.  if v0 == 0 then goto L3e7572;
  #L3e7558.  v1:= v3 ^& 4;
  #L3e755c.  if v1 != 0 then goto L3e7572;
  #L3e7560.  call temp:= `requestFusion`(v0, v3) @signature `Lio/reactivex/internal/fuseable/QueueDisposable;.requestFusion:(I)I` @kind interface;
  #L3e7566.  v3:= temp;
  #L3e7568.  if v3 == 0 then goto L3e7570;
  #L3e756c.  v2.`io.reactivex.internal.observers.BasicFuseableObserver.sourceMode` @type ^`int` := v3;
  #L3e7570.  return v3;
  #L3e7572.  v3:= 0I;
  #L3e7574.  return v3;
}
