record `io.reactivex.internal.observers.BlockingLastObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.observers.BlockingBaseObserver` @kind class {
}
procedure `void` `<init>`(`io.reactivex.internal.observers.BlockingLastObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e7a04.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.<init>:()V` @kind direct;
  #L3e7a0a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.BlockingLastObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7a1c.  v0:= 0I;
  #L3e7a1e.  v1.`io.reactivex.internal.observers.BlockingLastObserver.value` @type ^`java.lang.Object` := v0 @kind object;
  #L3e7a22.  v1.`io.reactivex.internal.observers.BlockingLastObserver.error` @type ^`java.lang.Throwable` := v2 @kind object;
  #L3e7a26.  call `countDown`(v1) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.countDown:()V` @kind virtual;
  #L3e7a2c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.BlockingLastObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3e7a40.  v0.`io.reactivex.internal.observers.BlockingLastObserver.value` @type ^`java.lang.Object` := v1 @kind object;
  #L3e7a44.  return @kind void;
}
