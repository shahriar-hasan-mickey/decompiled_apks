record `io.reactivex.internal.observers.ConsumerSingleObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.observers.LambdaConsumerIntrospection` @kind interface {
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.ConsumerSingleObserver.onError` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.ConsumerSingleObserver.onSuccess` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.observers.ConsumerSingleObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.ConsumerSingleObserver` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8018.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3e801e.  v0.`io.reactivex.internal.observers.ConsumerSingleObserver.onSuccess` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L3e8022.  v0.`io.reactivex.internal.observers.ConsumerSingleObserver.onError` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L3e8026.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.ConsumerSingleObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L3e8038.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3e803e.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.internal.observers.ConsumerSingleObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7fcc.  v0:= v2.`io.reactivex.internal.observers.ConsumerSingleObserver.onError` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e7fd0.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e7fd4.  if v0 == v1 then goto L3e7fdc;
  #L3e7fd8.  v0:= 1I;
  #L3e7fda.  goto L3e7fde;
  #L3e7fdc.  v0:= 0I;
  #L3e7fde.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.ConsumerSingleObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7ff0.  call temp:= `get`(v2) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e7ff6.  v0:= temp @kind object;
  #L3e7ff8.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e7ffc.  if v0 != v1 then goto L3e8004;
  #L3e8000.  v0:= 1I;
  #L3e8002.  goto L3e8006;
  #L3e8004.  v0:= 0I;
  #L3e8006.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.observers.ConsumerSingleObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8050.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e8054.  call `lazySet`(v4, v0) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L3e805a.  v0:= v4.`io.reactivex.internal.observers.ConsumerSingleObserver.onError` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e805e.  call `accept`(v0, v5) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3e8064.  goto L3e8090;
  #L3e8066.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8068.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e806e.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L3e8072.  v2:= 2I;
  #L3e8074.  v2:= new `java.lang.Throwable`[v2];
  #L3e8078.  v3:= 0I;
  #L3e807a.  v2[v3]:= v5 @kind object;
  #L3e807e.  v5:= 1I;
  #L3e8080.  v2[v5]:= v0 @kind object;
  #L3e8084.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L3e808a.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e8090.  return @kind void;
  catch `java.lang.Throwable` @[L3e805a..L3e8064] goto L3e8066;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.ConsumerSingleObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L3e80b0.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e80b6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.observers.ConsumerSingleObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e80c8.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e80cc.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L3e80d2.  v0:= v1.`io.reactivex.internal.observers.ConsumerSingleObserver.onSuccess` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e80d6.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3e80dc.  goto L3e80ec;
  #L3e80de.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e80e0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e80e6.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e80ec.  return @kind void;
  catch `java.lang.Throwable` @[L3e80d2..L3e80dc] goto L3e80de;
}
