record `io.reactivex.internal.observers.DisposableLambdaObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.observers.DisposableLambdaObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.observers.DisposableLambdaObserver.onDispose` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.DisposableLambdaObserver.onSubscribe` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.observers.DisposableLambdaObserver.upstream` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.DisposableLambdaObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8400.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e8406.  v0.`io.reactivex.internal.observers.DisposableLambdaObserver.downstream` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L3e840a.  v0.`io.reactivex.internal.observers.DisposableLambdaObserver.onSubscribe` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L3e840e.  v0.`io.reactivex.internal.observers.DisposableLambdaObserver.onDispose` @type ^`io.reactivex.functions.Action` := v3 @kind object;
  #L3e8412.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8424.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.onDispose` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e8428.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L3e842e.  goto L3e843e;
  #L3e8430.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8432.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e8438.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e843e.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e8442.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e8448.  return @kind void;
  catch `java.lang.Throwable` @[L3e8424..L3e842e] goto L3e8430;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e83e0.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e83e4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L3e83ea.  v0:= temp;
  #L3e83ec.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.DisposableLambdaObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8468.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e846c.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e8470.  if v0 == v1 then goto L3e847e;
  #L3e8474.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L3e8478.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L3e847e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.DisposableLambdaObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8490.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e8494.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e8498.  if v0 == v1 then goto L3e84a8;
  #L3e849c.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L3e84a0.  call `onError`(v0, v3) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L3e84a6.  goto L3e84ae;
  #L3e84a8.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e84ae.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e84c0.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L3e84c4.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L3e84ca.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e84dc.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.onSubscribe` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e84e0.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3e84e6.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e84ea.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e84f0.  v0:= temp;
  #L3e84f2.  if v0 == 0 then goto L3e8504;
  #L3e84f6.  v1.`io.reactivex.internal.observers.DisposableLambdaObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L3e84fa.  v2:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L3e84fe.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L3e8504.  return @kind void;
  #L3e8506.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8508.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e850e.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e8514.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e8518.  v1.`io.reactivex.internal.observers.DisposableLambdaObserver.upstream` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L3e851c.  v2:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L3e8520.  call `error`(v0, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L3e8526.  return @kind void;
  catch `java.lang.Throwable` @[L3e84dc..L3e84e6] goto L3e8506;
}
