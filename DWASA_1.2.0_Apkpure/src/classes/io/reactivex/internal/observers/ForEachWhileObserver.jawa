record `io.reactivex.internal.observers.ForEachWhileObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `boolean` `io.reactivex.internal.observers.ForEachWhileObserver.done` @AccessFlag ;
  `io.reactivex.functions.Action` `io.reactivex.internal.observers.ForEachWhileObserver.onComplete` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.ForEachWhileObserver.onError` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.observers.ForEachWhileObserver.onNext` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.observers.ForEachWhileObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.ForEachWhileObserver` v0 @kind this, `io.reactivex.functions.Predicate` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.<init>:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8638.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3e863e.  v0.`io.reactivex.internal.observers.ForEachWhileObserver.onNext` @type ^`io.reactivex.functions.Predicate` := v1 @kind object;
  #L3e8642.  v0.`io.reactivex.internal.observers.ForEachWhileObserver.onError` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L3e8646.  v0.`io.reactivex.internal.observers.ForEachWhileObserver.onComplete` @type ^`io.reactivex.functions.Action` := v3 @kind object;
  #L3e864a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.ForEachWhileObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L3e865c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3e8662.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.ForEachWhileObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8610.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e8616.  v0:= temp @kind object;
  #L3e8618.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3e861c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e8622.  v0:= temp;
  #L3e8624.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.ForEachWhileObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8674.  v0:= v1.`io.reactivex.internal.observers.ForEachWhileObserver.done` @type ^`boolean` @kind boolean;
  #L3e8678.  if v0 == 0 then goto L3e867e;
  #L3e867c.  return @kind void;
  #L3e867e.  v0:= 1I;
  #L3e8680.  v1.`io.reactivex.internal.observers.ForEachWhileObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L3e8684.  v0:= v1.`io.reactivex.internal.observers.ForEachWhileObserver.onComplete` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e8688.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L3e868e.  goto L3e869e;
  #L3e8690.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8692.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e8698.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e869e.  return @kind void;
  catch `java.lang.Throwable` @[L3e8684..L3e868e] goto L3e8690;
}
procedure `void` `onError`(`io.reactivex.internal.observers.ForEachWhileObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e86bc.  v0:= v5.`io.reactivex.internal.observers.ForEachWhileObserver.done` @type ^`boolean` @kind boolean;
  #L3e86c0.  if v0 == 0 then goto L3e86cc;
  #L3e86c4.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e86ca.  return @kind void;
  #L3e86cc.  v0:= 1I;
  #L3e86ce.  v5.`io.reactivex.internal.observers.ForEachWhileObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L3e86d2.  v1:= v5.`io.reactivex.internal.observers.ForEachWhileObserver.onError` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e86d6.  call `accept`(v1, v6) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3e86dc.  goto L3e8706;
  #L3e86de.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e86e0.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e86e6.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L3e86ea.  v3:= 2I;
  #L3e86ec.  v3:= new `java.lang.Throwable`[v3];
  #L3e86f0.  v4:= 0I;
  #L3e86f2.  v3[v4]:= v6 @kind object;
  #L3e86f6.  v3[v0]:= v1 @kind object;
  #L3e86fa.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L3e8700.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e8706.  return @kind void;
  catch `java.lang.Throwable` @[L3e86d2..L3e86dc] goto L3e86de;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.ForEachWhileObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8724.  v0:= v1.`io.reactivex.internal.observers.ForEachWhileObserver.done` @type ^`boolean` @kind boolean;
  #L3e8728.  if v0 == 0 then goto L3e872e;
  #L3e872c.  return @kind void;
  #L3e872e.  v0:= v1.`io.reactivex.internal.observers.ForEachWhileObserver.onNext` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L3e8732.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L3e8738.  v2:= temp;
  #L3e873a.  if v2 != 0 then goto L3e874a;
  #L3e873e.  call `dispose`(v1) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.dispose:()V` @kind virtual;
  #L3e8744.  call `onComplete`(v1) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.onComplete:()V` @kind virtual;
  #L3e874a.  return @kind void;
  #L3e874c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e874e.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e8754.  call `dispose`(v1) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.dispose:()V` @kind virtual;
  #L3e875a.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3e8760.  return @kind void;
  catch `java.lang.Throwable` @[L3e872e..L3e873a] goto L3e874c;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.ForEachWhileObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L3e8780.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e8786.  return @kind void;
}
