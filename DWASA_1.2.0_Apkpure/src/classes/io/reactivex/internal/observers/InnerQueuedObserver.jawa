record `io.reactivex.internal.observers.InnerQueuedObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `boolean` `io.reactivex.internal.observers.InnerQueuedObserver.done` @AccessFlag VOLATILE;
  `int` `io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @AccessFlag ;
  `io.reactivex.internal.observers.InnerQueuedObserverSupport` `io.reactivex.internal.observers.InnerQueuedObserver.parent` @AccessFlag FINAL;
  `int` `io.reactivex.internal.observers.InnerQueuedObserver.prefetch` @AccessFlag FINAL;
  `io.reactivex.internal.fuseable.SimpleQueue` `io.reactivex.internal.observers.InnerQueuedObserver.queue` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.observers.InnerQueuedObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.InnerQueuedObserver` v0 @kind this, `io.reactivex.internal.observers.InnerQueuedObserverSupport` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.<init>:(Lio/reactivex/internal/observers/InnerQueuedObserverSupport;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8db0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3e8db6.  v0.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` := v1 @kind object;
  #L3e8dba.  v0.`io.reactivex.internal.observers.InnerQueuedObserver.prefetch` @type ^`int` := v2;
  #L3e8dbe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.InnerQueuedObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L3e8dd0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3e8dd6.  return @kind void;
}
procedure `int` `fusionMode`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.fusionMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8d80.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @type ^`int`;
  #L3e8d84.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8d40.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e8d46.  v0:= temp @kind object;
  #L3e8d48.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3e8d4c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e8d52.  v0:= temp;
  #L3e8d54.  return v0;
}
procedure `boolean` `isDone`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8d68.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.done` @type ^`boolean` @kind boolean;
  #L3e8d6c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8de8.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L3e8dec.  call `innerComplete`(v0, v1) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.innerComplete:(Lio/reactivex/internal/observers/InnerQueuedObserver;)V` @kind interface;
  #L3e8df2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8e04.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L3e8e08.  call `innerError`(v0, v1, v2) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.innerError:(Lio/reactivex/internal/observers/InnerQueuedObserver;Ljava/lang/Throwable;)V` @kind interface;
  #L3e8e0e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8e20.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @type ^`int`;
  #L3e8e24.  if v0 != 0 then goto L3e8e34;
  #L3e8e28.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L3e8e2c.  call `innerNext`(v0, v1, v2) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.innerNext:(Lio/reactivex/internal/observers/InnerQueuedObserver;Ljava/lang/Object;)V` @kind interface;
  #L3e8e32.  goto L3e8e3e;
  #L3e8e34.  v2:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L3e8e38.  call `drain`(v2) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.drain:()V` @kind interface;
  #L3e8e3e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.InnerQueuedObserver` v2 @kind this, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8e50.  call temp:= `setOnce`(v2, v3) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e8e56.  v0:= temp;
  #L3e8e58.  if v0 == 0 then goto L3e8eb2;
  #L3e8e5c.  v0:= instanceof @variable v3 @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind boolean;
  #L3e8e60.  if v0 == 0 then goto L3e8ea0;
  #L3e8e64.  v3:= (`io.reactivex.internal.fuseable.QueueDisposable`) v3 @kind object;
  #L3e8e68.  v0:= 3I;
  #L3e8e6a.  call temp:= `requestFusion`(v3, v0) @signature `Lio/reactivex/internal/fuseable/QueueDisposable;.requestFusion:(I)I` @kind interface;
  #L3e8e70.  v0:= temp;
  #L3e8e72.  v1:= 1I;
  #L3e8e74.  if v0 != v1 then goto L3e8e90;
  #L3e8e78.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @type ^`int` := v0;
  #L3e8e7c.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.queue` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v3 @kind object;
  #L3e8e80.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.done` @type ^`boolean` := v1 @kind boolean;
  #L3e8e84.  v3:= v2.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L3e8e88.  call `innerComplete`(v3, v2) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.innerComplete:(Lio/reactivex/internal/observers/InnerQueuedObserver;)V` @kind interface;
  #L3e8e8e.  return @kind void;
  #L3e8e90.  v1:= 2I;
  #L3e8e92.  if v0 != v1 then goto L3e8ea0;
  #L3e8e96.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @type ^`int` := v0;
  #L3e8e9a.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.queue` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v3 @kind object;
  #L3e8e9e.  return @kind void;
  #L3e8ea0.  v3:= v2.`io.reactivex.internal.observers.InnerQueuedObserver.prefetch` @type ^`int`;
  #L3e8ea4.  v3:= -v3 @kind int;
  #L3e8ea6.  call temp:= `createQueue`(v3) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.createQueue:(I)Lio/reactivex/internal/fuseable/SimpleQueue;` @kind static;
  #L3e8eac.  v3:= temp @kind object;
  #L3e8eae.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.queue` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v3 @kind object;
  #L3e8eb2.  return @kind void;
}
procedure `io.reactivex.internal.fuseable.SimpleQueue` `queue`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.queue:()Lio/reactivex/internal/fuseable/SimpleQueue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8d98.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.queue` @type ^`io.reactivex.internal.fuseable.SimpleQueue` @kind object;
  #L3e8d9c.  return v0 @kind object;
}
procedure `void` `setDone`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.setDone:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8ec4.  v0:= 1I;
  #L3e8ec6.  v1.`io.reactivex.internal.observers.InnerQueuedObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L3e8eca.  return @kind void;
}
