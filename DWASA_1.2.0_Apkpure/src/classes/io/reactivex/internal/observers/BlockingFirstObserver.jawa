record `io.reactivex.internal.observers.BlockingFirstObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.observers.BlockingBaseObserver` @kind class {
}
procedure `void` `<init>`(`io.reactivex.internal.observers.BlockingFirstObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e7998.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.<init>:()V` @kind direct;
  #L3e799e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.BlockingFirstObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e79b0.  v0:= v1.`io.reactivex.internal.observers.BlockingFirstObserver.value` @type ^`java.lang.Object` @kind object;
  #L3e79b4.  if v0 != 0 then goto L3e79bc;
  #L3e79b8.  v1.`io.reactivex.internal.observers.BlockingFirstObserver.error` @type ^`java.lang.Throwable` := v2 @kind object;
  #L3e79bc.  call `countDown`(v1) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.countDown:()V` @kind virtual;
  #L3e79c2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.BlockingFirstObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e79d4.  v0:= v1.`io.reactivex.internal.observers.BlockingFirstObserver.value` @type ^`java.lang.Object` @kind object;
  #L3e79d8.  if v0 != 0 then goto L3e79f0;
  #L3e79dc.  v1.`io.reactivex.internal.observers.BlockingFirstObserver.value` @type ^`java.lang.Object` := v2 @kind object;
  #L3e79e0.  v2:= v1.`io.reactivex.internal.observers.BlockingFirstObserver.upstream` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e79e4.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e79ea.  call `countDown`(v1) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.countDown:()V` @kind virtual;
  #L3e79f0.  return @kind void;
}
