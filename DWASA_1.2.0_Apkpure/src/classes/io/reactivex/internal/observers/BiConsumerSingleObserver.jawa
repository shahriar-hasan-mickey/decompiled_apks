record `io.reactivex.internal.observers.BiConsumerSingleObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.functions.BiConsumer` `io.reactivex.internal.observers.BiConsumerSingleObserver.onCallback` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.observers.BiConsumerSingleObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v0 @kind this, `io.reactivex.functions.BiConsumer` v1 @kind object) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.<init>:(Lio/reactivex/functions/BiConsumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e77a4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3e77aa.  v0.`io.reactivex.internal.observers.BiConsumerSingleObserver.onCallback` @type ^`io.reactivex.functions.BiConsumer` := v1 @kind object;
  #L3e77ae.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L3e77c0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3e77c6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e777c.  call temp:= `get`(v2) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e7782.  v0:= temp @kind object;
  #L3e7784.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e7788.  if v0 != v1 then goto L3e7790;
  #L3e778c.  v0:= 1I;
  #L3e778e.  goto L3e7792;
  #L3e7790.  v0:= 0I;
  #L3e7792.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e77d8.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e77dc.  call `lazySet`(v4, v0) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L3e77e2.  v0:= v4.`io.reactivex.internal.observers.BiConsumerSingleObserver.onCallback` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L3e77e6.  v1:= 0I;
  #L3e77e8.  call `accept`(v0, v1, v5) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3e77ee.  goto L3e781a;
  #L3e77f0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e77f2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e77f8.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L3e77fc.  v2:= 2I;
  #L3e77fe.  v2:= new `java.lang.Throwable`[v2];
  #L3e7802.  v3:= 0I;
  #L3e7804.  v2[v3]:= v5 @kind object;
  #L3e7808.  v5:= 1I;
  #L3e780a.  v2[v5]:= v0 @kind object;
  #L3e780e.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L3e7814.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e781a.  return @kind void;
  catch `java.lang.Throwable` @[L3e77d8..L3e77ee] goto L3e77f0;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L3e7838.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e783e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7850.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e7854.  call `lazySet`(v2, v0) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L3e785a.  v0:= v2.`io.reactivex.internal.observers.BiConsumerSingleObserver.onCallback` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L3e785e.  v1:= 0I;
  #L3e7860.  call `accept`(v0, v3, v1) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3e7866.  goto L3e7876;
  #L3e7868.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e786a.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e7870.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e7876.  return @kind void;
  catch `java.lang.Throwable` @[L3e7850..L3e7866] goto L3e7868;
}
