record `io.reactivex.internal.observers.LambdaObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.observers.LambdaConsumerIntrospection` @kind interface {
  `io.reactivex.functions.Action` `io.reactivex.internal.observers.LambdaObserver.onComplete` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.LambdaObserver.onError` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.LambdaObserver.onNext` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.LambdaObserver.onSubscribe` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.observers.LambdaObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.LambdaObserver` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8f28.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3e8f2e.  v0.`io.reactivex.internal.observers.LambdaObserver.onNext` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L3e8f32.  v0.`io.reactivex.internal.observers.LambdaObserver.onError` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L3e8f36.  v0.`io.reactivex.internal.observers.LambdaObserver.onComplete` @type ^`io.reactivex.functions.Action` := v3 @kind object;
  #L3e8f3a.  v0.`io.reactivex.internal.observers.LambdaObserver.onSubscribe` @type ^`io.reactivex.functions.Consumer` := v4 @kind object;
  #L3e8f3e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.LambdaObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/LambdaObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L3e8f50.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L3e8f56.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.internal.observers.LambdaObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/LambdaObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8edc.  v0:= v2.`io.reactivex.internal.observers.LambdaObserver.onError` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e8ee0.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e8ee4.  if v0 == v1 then goto L3e8eec;
  #L3e8ee8.  v0:= 1I;
  #L3e8eea.  goto L3e8eee;
  #L3e8eec.  v0:= 0I;
  #L3e8eee.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.LambdaObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/LambdaObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8f00.  call temp:= `get`(v2) @signature `Lio/reactivex/internal/observers/LambdaObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e8f06.  v0:= temp @kind object;
  #L3e8f08.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e8f0c.  if v0 != v1 then goto L3e8f14;
  #L3e8f10.  v0:= 1I;
  #L3e8f12.  goto L3e8f16;
  #L3e8f14.  v0:= 0I;
  #L3e8f16.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.LambdaObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/LambdaObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8f68.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/observers/LambdaObserver;.isDisposed:()Z` @kind virtual;
  #L3e8f6e.  v0:= temp;
  #L3e8f70.  if v0 != 0 then goto L3e8f98;
  #L3e8f74.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e8f78.  call `lazySet`(v1, v0) @signature `Lio/reactivex/internal/observers/LambdaObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L3e8f7e.  v0:= v1.`io.reactivex.internal.observers.LambdaObserver.onComplete` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e8f82.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L3e8f88.  goto L3e8f98;
  #L3e8f8a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8f8c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e8f92.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e8f98.  return @kind void;
  catch `java.lang.Throwable` @[L3e8f7e..L3e8f88] goto L3e8f8a;
}
procedure `void` `onError`(`io.reactivex.internal.observers.LambdaObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/observers/LambdaObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8fb8.  call temp:= `isDisposed`(v4) @signature `Lio/reactivex/internal/observers/LambdaObserver;.isDisposed:()Z` @kind virtual;
  #L3e8fbe.  v0:= temp;
  #L3e8fc0.  if v0 != 0 then goto L3e9006;
  #L3e8fc4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e8fc8.  call `lazySet`(v4, v0) @signature `Lio/reactivex/internal/observers/LambdaObserver;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L3e8fce.  v0:= v4.`io.reactivex.internal.observers.LambdaObserver.onError` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e8fd2.  call `accept`(v0, v5) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3e8fd8.  goto L3e900c;
  #L3e8fda.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8fdc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e8fe2.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L3e8fe6.  v2:= 2I;
  #L3e8fe8.  v2:= new `java.lang.Throwable`[v2];
  #L3e8fec.  v3:= 0I;
  #L3e8fee.  v2[v3]:= v5 @kind object;
  #L3e8ff2.  v5:= 1I;
  #L3e8ff4.  v2[v5]:= v0 @kind object;
  #L3e8ff8.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L3e8ffe.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e9004.  goto L3e900c;
  #L3e9006.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e900c.  return @kind void;
  catch `java.lang.Throwable` @[L3e8fce..L3e8fd8] goto L3e8fda;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.LambdaObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/LambdaObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e902c.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/observers/LambdaObserver;.isDisposed:()Z` @kind virtual;
  #L3e9032.  v0:= temp;
  #L3e9034.  if v0 != 0 then goto L3e9064;
  #L3e9038.  v0:= v1.`io.reactivex.internal.observers.LambdaObserver.onNext` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e903c.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3e9042.  goto L3e9064;
  #L3e9044.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e9046.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e904c.  call temp:= `get`(v1) @signature `Lio/reactivex/internal/observers/LambdaObserver;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e9052.  v0:= temp @kind object;
  #L3e9054.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3e9058.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e905e.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/observers/LambdaObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3e9064.  return @kind void;
  catch `java.lang.Throwable` @[L3e9038..L3e9042] goto L3e9044;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.LambdaObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/observers/LambdaObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9084.  call temp:= `setOnce`(v1, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L3e908a.  v0:= temp;
  #L3e908c.  if v0 == 0 then goto L3e90b0;
  #L3e9090.  v0:= v1.`io.reactivex.internal.observers.LambdaObserver.onSubscribe` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e9094.  call `accept`(v0, v1) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3e909a.  goto L3e90b0;
  #L3e909c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e909e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e90a4.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e90aa.  call `onError`(v1, v0) @signature `Lio/reactivex/internal/observers/LambdaObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3e90b0.  return @kind void;
  catch `java.lang.Throwable` @[L3e9090..L3e909a] goto L3e909c;
}
