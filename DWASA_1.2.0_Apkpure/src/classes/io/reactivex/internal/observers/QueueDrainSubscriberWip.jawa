record `io.reactivex.internal.observers.QueueDrainSubscriberWip` @kind class @AccessFlag  extends `io.reactivex.internal.observers.QueueDrainSubscriberPad0` @kind class {
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.internal.observers.QueueDrainSubscriberWip.wip` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.QueueDrainSubscriberWip` v1 @kind this) @signature `Lio/reactivex/internal/observers/QueueDrainSubscriberWip;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e92f4.  call `<init>`(v1) @signature `Lio/reactivex/internal/observers/QueueDrainSubscriberPad0;.<init>:()V` @kind direct;
  #L3e92fa.  v0:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L3e92fe.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L3e9304.  v1.`io.reactivex.internal.observers.QueueDrainSubscriberWip.wip` @type ^`java.util.concurrent.atomic.AtomicInteger` := v0 @kind object;
  #L3e9308.  return @kind void;
}
