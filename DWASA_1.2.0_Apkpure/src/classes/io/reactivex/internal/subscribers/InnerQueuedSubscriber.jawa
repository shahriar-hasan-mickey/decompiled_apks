record `io.reactivex.internal.subscribers.InnerQueuedSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `boolean` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.done` @AccessFlag VOLATILE;
  `int` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.fusionMode` @AccessFlag ;
  `int` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.limit` @AccessFlag FINAL;
  `io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.parent` @AccessFlag FINAL;
  `int` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.prefetch` @AccessFlag FINAL;
  `long` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.produced` @AccessFlag ;
  `io.reactivex.internal.fuseable.SimpleQueue` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.queue` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.internal.subscribers.InnerQueuedSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v0 @kind this, `io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.<init>:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4435e0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4435e6.  v0.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.parent` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` := v1 @kind object;
  #L4435ea.  v0.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.prefetch` @type ^`int` := v2;
  #L4435ee.  v1:= v2 ^> 2;
  #L4435f2.  v2:= v2 - v1 @kind int;
  #L4435f4.  v0.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.limit` @type ^`int` := v2;
  #L4435f8.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L44360c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L443612.  return @kind void;
}
procedure `boolean` `isDone`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4435b0.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.done` @type ^`boolean` @kind boolean;
  #L4435b4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L443624.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.parent` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L443628.  call `innerComplete`(v0, v1) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerComplete:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;)V` @kind interface;
  #L44362e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L443640.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.parent` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L443644.  call `innerError`(v0, v1, v2) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerError:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;Ljava/lang/Throwable;)V` @kind interface;
  #L44364a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44365c.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.fusionMode` @type ^`int`;
  #L443660.  if v0 != 0 then goto L443670;
  #L443664.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.parent` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L443668.  call `innerNext`(v0, v1, v2) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerNext:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;Ljava/lang/Object;)V` @kind interface;
  #L44366e.  goto L44367a;
  #L443670.  v2:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.parent` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L443674.  call `drain`(v2) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.drain:()V` @kind interface;
  #L44367a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v3 @kind this, `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L44368c.  call temp:= `setOnce`(v3, v4) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L443692.  v0:= temp;
  #L443694.  if v0 == 0 then goto L443702;
  #L443698.  v0:= instanceof @variable v4 @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind boolean;
  #L44369c.  if v0 == 0 then goto L4436e8;
  #L4436a0.  v0:= v4 @kind object;
  #L4436a2.  v0:= (`io.reactivex.internal.fuseable.QueueSubscription`) v0 @kind object;
  #L4436a6.  v1:= 3I;
  #L4436a8.  call temp:= `requestFusion`(v0, v1) @signature `Lio/reactivex/internal/fuseable/QueueSubscription;.requestFusion:(I)I` @kind interface;
  #L4436ae.  v1:= temp;
  #L4436b0.  v2:= 1I;
  #L4436b2.  if v1 != v2 then goto L4436ce;
  #L4436b6.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.fusionMode` @type ^`int` := v1;
  #L4436ba.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.queue` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4436be.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.done` @type ^`boolean` := v2 @kind boolean;
  #L4436c2.  v4:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.parent` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L4436c6.  call `innerComplete`(v4, v3) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerComplete:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;)V` @kind interface;
  #L4436cc.  return @kind void;
  #L4436ce.  v2:= 2I;
  #L4436d0.  if v1 != v2 then goto L4436e8;
  #L4436d4.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.fusionMode` @type ^`int` := v1;
  #L4436d8.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.queue` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4436dc.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.prefetch` @type ^`int`;
  #L4436e0.  call `request`(v4, v0) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @kind static;
  #L4436e6.  return @kind void;
  #L4436e8.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.prefetch` @type ^`int`;
  #L4436ec.  call temp:= `createQueue`(v0) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.createQueue:(I)Lio/reactivex/internal/fuseable/SimpleQueue;` @kind static;
  #L4436f2.  v0:= temp @kind object;
  #L4436f4.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.queue` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4436f8.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.prefetch` @type ^`int`;
  #L4436fc.  call `request`(v4, v0) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @kind static;
  #L443702.  return @kind void;
}
procedure `io.reactivex.internal.fuseable.SimpleQueue` `queue`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.queue:()Lio/reactivex/internal/fuseable/SimpleQueue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4435c8.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.queue` @type ^`io.reactivex.internal.fuseable.SimpleQueue` @kind object;
  #L4435cc.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L443714.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.fusionMode` @type ^`int`;
  #L443718.  v1:= 1I;
  #L44371a.  if v0 == v1 then goto L443752;
  #L44371e.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.produced` @type ^`long` @kind wide;
  #L443722.  v0:= v0 + v4 @kind long;
  #L443724.  v4:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.limit` @type ^`int`;
  #L443728.  v4:= (`long`) v4 @kind i2l;
  #L44372a.  v2:= lcmp(v0, v4);
  #L44372e.  if v2 < 0 then goto L44374e;
  #L443732.  v4:= 0L;
  #L443736.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.produced` @type ^`long` := v4 @kind wide;
  #L44373a.  call temp:= `get`(v3) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.get:()Ljava/lang/Object;` @kind virtual;
  #L443740.  v4:= temp @kind object;
  #L443742.  v4:= (`org.reactivestreams.Subscription`) v4 @kind object;
  #L443746.  call `request`(v4, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L44374c.  goto L443752;
  #L44374e.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L443752.  return @kind void;
}
procedure `void` `requestOne`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v5 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.requestOne:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L443764.  v0:= v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.fusionMode` @type ^`int`;
  #L443768.  v1:= 1I;
  #L44376a.  if v0 == v1 then goto L4437a6;
  #L44376e.  v0:= v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.produced` @type ^`long` @kind wide;
  #L443772.  v2:= 1L;
  #L443776.  v0:= v0 + v2 @kind long;
  #L443778.  v2:= v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.limit` @type ^`int`;
  #L44377c.  v2:= (`long`) v2 @kind i2l;
  #L44377e.  v4:= lcmp(v0, v2);
  #L443782.  if v4 != 0 then goto L4437a2;
  #L443786.  v2:= 0L;
  #L44378a.  v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.produced` @type ^`long` := v2 @kind wide;
  #L44378e.  call temp:= `get`(v5) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.get:()Ljava/lang/Object;` @kind virtual;
  #L443794.  v2:= temp @kind object;
  #L443796.  v2:= (`org.reactivestreams.Subscription`) v2 @kind object;
  #L44379a.  call `request`(v2, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4437a0.  goto L4437a6;
  #L4437a2.  v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L4437a6.  return @kind void;
}
procedure `void` `setDone`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.setDone:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4437b8.  v0:= 1I;
  #L4437ba.  v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4437be.  return @kind void;
}
