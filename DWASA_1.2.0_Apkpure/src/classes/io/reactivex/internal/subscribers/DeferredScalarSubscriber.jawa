record `io.reactivex.internal.subscribers.DeferredScalarSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `boolean` `io.reactivex.internal.subscribers.DeferredScalarSubscriber.hasValue` @AccessFlag PROTECTED;
  `org.reactivestreams.Subscription` `io.reactivex.internal.subscribers.DeferredScalarSubscriber.upstream` @AccessFlag PROTECTED;
}
global `long` `@@io.reactivex.internal.subscribers.DeferredScalarSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L443040.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L443046.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L443058.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L44305e.  v0:= v1.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L443062.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L443068.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44307c.  v0:= v1.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.hasValue` @type ^`boolean` @kind boolean;
  #L443080.  if v0 == 0 then goto L443090;
  #L443084.  v0:= v1.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L443088.  call `complete`(v1, v0) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L44308e.  goto L44309a;
  #L443090.  v0:= v1.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L443094.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L44309a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4430ac.  v0:= 0I;
  #L4430ae.  v1.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.value` @type ^`java.lang.Object` := v0 @kind object;
  #L4430b2.  v0:= v1.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4430b6.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4430bc.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4430d0.  v0:= v2.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4430d4.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4430da.  v0:= temp;
  #L4430dc.  if v0 == 0 then goto L4430fe;
  #L4430e0.  v2.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4430e4.  v0:= v2.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4430e8.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4430ee.  v0:= 9223372036854775807L;
  #L4430f8.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4430fe.  return @kind void;
}
