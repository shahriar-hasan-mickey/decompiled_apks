record `io.reactivex.internal.subscribers.BasicFuseableSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.internal.fuseable.QueueSubscription` @kind interface {
  `boolean` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @AccessFlag PROTECTED;
  `org.reactivestreams.Subscriber` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @AccessFlag PROTECTED_FINAL;
  `io.reactivex.internal.fuseable.QueueSubscription` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @AccessFlag PROTECTED;
  `int` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.sourceMode` @AccessFlag PROTECTED;
  `org.reactivestreams.Subscription` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L442948.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44294e.  v0.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L442952.  return @kind void;
}
procedure `void` `afterDownstream`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.afterDownstream:()V` @AccessFlag PROTECTED {
    temp;

  #L442964.  return @kind void;
}
procedure `boolean` `beforeDownstream`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.beforeDownstream:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L44289c.  v0:= 1I;
  #L44289e.  return v0;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L442978.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L44297c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L442982.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L442994.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind object;
  #L442998.  call `clear`(v0) @signature `Lio/reactivex/internal/fuseable/QueueSubscription;.clear:()V` @kind interface;
  #L44299e.  return @kind void;
}
procedure `void` `fail`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4429b0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4429b6.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4429ba.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4429c0.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4429c6.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4428b0.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind object;
  #L4428b4.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/fuseable/QueueSubscription;.isEmpty:()Z` @kind interface;
  #L4428ba.  v0:= temp;
  #L4428bc.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4428d0.  v2:= new `java.lang.UnsupportedOperationException`;
  #L4428d4.  v0:= "Should not be called!" @kind object;
  #L4428d8.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4428de.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4428f0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L4428f4.  v2:= "Should not be called!" @kind object;
  #L4428f8.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4428fe.  throw v1;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4429d8.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L4429dc.  if v0 == 0 then goto L4429e2;
  #L4429e0.  return @kind void;
  #L4429e2.  v0:= 1I;
  #L4429e4.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4429e8.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4429ec.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4429f2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L442a04.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L442a08.  if v0 == 0 then goto L442a14;
  #L442a0c.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L442a12.  return @kind void;
  #L442a14.  v0:= 1I;
  #L442a16.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L442a1a.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L442a1e.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L442a24.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L442a38.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L442a3c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L442a42.  v0:= temp;
  #L442a44.  if v0 == 0 then goto L442a78;
  #L442a48.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L442a4c.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind boolean;
  #L442a50.  if v0 == 0 then goto L442a5c;
  #L442a54.  v2:= (`io.reactivex.internal.fuseable.QueueSubscription`) v2 @kind object;
  #L442a58.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` := v2 @kind object;
  #L442a5c.  call temp:= `beforeDownstream`(v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.beforeDownstream:()Z` @kind virtual;
  #L442a62.  v2:= temp;
  #L442a64.  if v2 == 0 then goto L442a78;
  #L442a68.  v2:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L442a6c.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L442a72.  call `afterDownstream`(v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.afterDownstream:()V` @kind virtual;
  #L442a78.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L442a8c.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L442a90.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L442a96.  return @kind void;
}
procedure `int` `transitiveBoundaryFusion`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L442910.  v0:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind object;
  #L442914.  if v0 == 0 then goto L442932;
  #L442918.  v1:= v3 ^& 4;
  #L44291c.  if v1 != 0 then goto L442932;
  #L442920.  call temp:= `requestFusion`(v0, v3) @signature `Lio/reactivex/internal/fuseable/QueueSubscription;.requestFusion:(I)I` @kind interface;
  #L442926.  v3:= temp;
  #L442928.  if v3 == 0 then goto L442930;
  #L44292c.  v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int` := v3;
  #L442930.  return v3;
  #L442932.  v3:= 0I;
  #L442934.  return v3;
}
