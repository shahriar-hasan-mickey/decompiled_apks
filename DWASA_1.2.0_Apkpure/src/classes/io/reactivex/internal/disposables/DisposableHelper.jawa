record `io.reactivex.internal.disposables.DisposableHelper` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
}
global `io.reactivex.internal.disposables.DisposableHelper`[] `@@io.reactivex.internal.disposables.DisposableHelper.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.disposables.DisposableHelper` `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3e5688.  v0:= new `io.reactivex.internal.disposables.DisposableHelper`;
  #L3e568c.  v1:= 0I;
  #L3e568e.  v2:= "DISPOSED" @kind object;
  #L3e5692.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3e5698.  `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` := v0 @kind object;
  #L3e569c.  v0:= 1I;
  #L3e569e.  v0:= new `io.reactivex.internal.disposables.DisposableHelper`[v0];
  #L3e56a2.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e56a6.  v0[v1]:= v2 @kind object;
  #L3e56aa.  `@@io.reactivex.internal.disposables.DisposableHelper.$VALUES` @type ^`io.reactivex.internal.disposables.DisposableHelper`[] := v0 @kind object;
  #L3e56ae.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.disposables.DisposableHelper` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3e56c0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3e56c6.  return @kind void;
}
procedure `boolean` `dispose`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e5468.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e546e.  v0:= temp @kind object;
  #L3e5470.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3e5474.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e5478.  if v0 == v1 then goto L3e549a;
  #L3e547c.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e5482.  v2:= temp @kind object;
  #L3e5484.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L3e5488.  if v2 == v1 then goto L3e549a;
  #L3e548c.  if v2 == 0 then goto L3e5496;
  #L3e5490.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e5496.  v2:= 1I;
  #L3e5498.  return v2;
  #L3e549a.  v2:= 0I;
  #L3e549c.  return v2;
}
procedure `boolean` `isDisposed`(`io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e54c4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e54c8.  if v1 != v0 then goto L3e54d0;
  #L3e54cc.  v1:= 1I;
  #L3e54ce.  goto L3e54d2;
  #L3e54d0.  v1:= 0I;
  #L3e54d2.  return v1;
}
procedure `boolean` `replace`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e54e4.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e54ea.  v0:= temp @kind object;
  #L3e54ec.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3e54f0.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e54f4.  if v0 != v1 then goto L3e5506;
  #L3e54f8.  if v3 == 0 then goto L3e5502;
  #L3e54fc.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e5502.  v2:= 0I;
  #L3e5504.  return v2;
  #L3e5506.  call temp:= `compareAndSet`(v2, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3e550c.  v0:= temp;
  #L3e550e.  if v0 == 0 then goto L3e54e4;
  #L3e5512.  v2:= 1I;
  #L3e5514.  return v2;
}
procedure `void` `reportDisposableSet`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.reportDisposableSet:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e56ec.  v0:= new `io.reactivex.exceptions.ProtocolViolationException`;
  #L3e56f0.  v1:= "Disposable already set!" @kind object;
  #L3e56f4.  call `<init>`(v0, v1) @signature `Lio/reactivex/exceptions/ProtocolViolationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e56fa.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e5700.  return @kind void;
}
procedure `boolean` `set`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e5528.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e552e.  v0:= temp @kind object;
  #L3e5530.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3e5534.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e5538.  if v0 != v1 then goto L3e554a;
  #L3e553c.  if v3 == 0 then goto L3e5546;
  #L3e5540.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e5546.  v2:= 0I;
  #L3e5548.  return v2;
  #L3e554a.  call temp:= `compareAndSet`(v2, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3e5550.  v1:= temp;
  #L3e5552.  if v1 == 0 then goto L3e5528;
  #L3e5556.  if v0 == 0 then goto L3e5560;
  #L3e555a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e5560.  v2:= 1I;
  #L3e5562.  return v2;
}
procedure `boolean` `setOnce`(`java.util.concurrent.atomic.AtomicReference` v1 @kind object, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5574.  v0:= "d is null" @kind object;
  #L3e5578.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e557e.  v0:= 0I;
  #L3e5580.  call temp:= `compareAndSet`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3e5586.  v0:= temp;
  #L3e5588.  if v0 != 0 then goto L3e55ac;
  #L3e558c.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e5592.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e5598.  v1:= temp @kind object;
  #L3e559a.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e559e.  if v1 == v2 then goto L3e55a8;
  #L3e55a2.  call `reportDisposableSet`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.reportDisposableSet:()V` @kind static;
  #L3e55a8.  v1:= 0I;
  #L3e55aa.  return v1;
  #L3e55ac.  v1:= 1I;
  #L3e55ae.  return v1;
}
procedure `boolean` `trySet`(`java.util.concurrent.atomic.AtomicReference` v1 @kind object, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.trySet:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e55c0.  v0:= 0I;
  #L3e55c2.  call temp:= `compareAndSet`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3e55c8.  v0:= temp;
  #L3e55ca.  if v0 != 0 then goto L3e55e8;
  #L3e55ce.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e55d4.  v1:= temp @kind object;
  #L3e55d6.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e55da.  if v1 != v0 then goto L3e55e4;
  #L3e55de.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e55e4.  v1:= 0I;
  #L3e55e6.  return v1;
  #L3e55e8.  v1:= 1I;
  #L3e55ea.  return v1;
}
procedure `boolean` `validate`(`io.reactivex.disposables.Disposable` v1 @kind object, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e55fc.  v0:= 0I;
  #L3e55fe.  if v2 != 0 then goto L3e5618;
  #L3e5602.  v1:= new `java.lang.NullPointerException`;
  #L3e5606.  v2:= "next is null" @kind object;
  #L3e560a.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e5610.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e5616.  return v0;
  #L3e5618.  if v1 == 0 then goto L3e562a;
  #L3e561c.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e5622.  call `reportDisposableSet`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.reportDisposableSet:()V` @kind static;
  #L3e5628.  return v0;
  #L3e562a.  v1:= 1I;
  #L3e562c.  return v1;
}
procedure `io.reactivex.internal.disposables.DisposableHelper` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/disposables/DisposableHelper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5640.  v0:= constclass @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L3e5644.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3e564a.  v1:= temp @kind object;
  #L3e564c.  v1:= (`io.reactivex.internal.disposables.DisposableHelper`) v1 @kind object;
  #L3e5650.  return v1 @kind object;
}
procedure `io.reactivex.internal.disposables.DisposableHelper`[] `values`() @signature `Lio/reactivex/internal/disposables/DisposableHelper;.values:()[Lio/reactivex/internal/disposables/DisposableHelper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5664.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.$VALUES` @type ^`io.reactivex.internal.disposables.DisposableHelper`[] @kind object;
  #L3e5668.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/disposables/DisposableHelper;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3e566e.  v0:= temp @kind object;
  #L3e5670.  v0:= (`io.reactivex.internal.disposables.DisposableHelper`[]) v0 @kind object;
  #L3e5674.  return v0 @kind object;
}
procedure `void` `dispose`(`io.reactivex.internal.disposables.DisposableHelper` v0 @kind this) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L3e56d8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.disposables.DisposableHelper` v1 @kind this) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e54b0.  v0:= 1I;
  #L3e54b2.  return v0;
}
