record `io.reactivex.Scheduler$Worker$PeriodicTask` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface, `io.reactivex.schedulers.SchedulerRunnableIntrospection` @kind interface {
  `long` `io.reactivex.Scheduler$Worker$PeriodicTask.count` @AccessFlag ;
  `java.lang.Runnable` `io.reactivex.Scheduler$Worker$PeriodicTask.decoratedRun` @AccessFlag FINAL;
  `long` `io.reactivex.Scheduler$Worker$PeriodicTask.lastNowNanoseconds` @AccessFlag ;
  `long` `io.reactivex.Scheduler$Worker$PeriodicTask.periodInNanoseconds` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.Scheduler$Worker$PeriodicTask.sd` @AccessFlag FINAL;
  `long` `io.reactivex.Scheduler$Worker$PeriodicTask.startInNanoseconds` @AccessFlag ;
  `io.reactivex.Scheduler$Worker` `io.reactivex.Scheduler$Worker$PeriodicTask.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.Scheduler$Worker$PeriodicTask` v0 @kind this, `io.reactivex.Scheduler$Worker` v1 @kind object, `long` v2 , `java.lang.Runnable` v4 @kind object, `long` v5 , `io.reactivex.internal.disposables.SequentialDisposable` v7 @kind object, `long` v8 ) @signature `Lio/reactivex/Scheduler$Worker$PeriodicTask;.<init>:(Lio/reactivex/Scheduler$Worker;JLjava/lang/Runnable;JLio/reactivex/internal/disposables/SequentialDisposable;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e17f0.  v0.`io.reactivex.Scheduler$Worker$PeriodicTask.this$0` @type ^`io.reactivex.Scheduler$Worker` := v1 @kind object;
  #L3e17f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e17fa.  v0.`io.reactivex.Scheduler$Worker$PeriodicTask.decoratedRun` @type ^`java.lang.Runnable` := v4 @kind object;
  #L3e17fe.  v0.`io.reactivex.Scheduler$Worker$PeriodicTask.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v7 @kind object;
  #L3e1802.  v0.`io.reactivex.Scheduler$Worker$PeriodicTask.periodInNanoseconds` @type ^`long` := v8 @kind wide;
  #L3e1806.  v0.`io.reactivex.Scheduler$Worker$PeriodicTask.lastNowNanoseconds` @type ^`long` := v5 @kind wide;
  #L3e180a.  v0.`io.reactivex.Scheduler$Worker$PeriodicTask.startInNanoseconds` @type ^`long` := v2 @kind wide;
  #L3e180e.  return @kind void;
}
procedure `java.lang.Runnable` `getWrappedRunnable`(`io.reactivex.Scheduler$Worker$PeriodicTask` v1 @kind this) @signature `Lio/reactivex/Scheduler$Worker$PeriodicTask;.getWrappedRunnable:()Ljava/lang/Runnable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e17d8.  v0:= v1.`io.reactivex.Scheduler$Worker$PeriodicTask.decoratedRun` @type ^`java.lang.Runnable` @kind object;
  #L3e17dc.  return v0 @kind object;
}
procedure `void` `run`(`io.reactivex.Scheduler$Worker$PeriodicTask` v10 @kind this) @signature `Lio/reactivex/Scheduler$Worker$PeriodicTask;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e1820.  v0:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.decoratedRun` @type ^`java.lang.Runnable` @kind object;
  #L3e1824.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3e182a.  v0:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L3e182e.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L3e1834.  v0:= temp;
  #L3e1836.  if v0 != 0 then goto L3e18d0;
  #L3e183a.  v0:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.this$0` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L3e183e.  v1:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e1842.  call temp:= `now`(v0, v1) @signature `Lio/reactivex/Scheduler$Worker;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L3e1848.  v0:= temp @kind wide;
  #L3e184a.  v2:= `@@io.reactivex.Scheduler.CLOCK_DRIFT_TOLERANCE_NANOSECONDS` @type ^`long` @kind wide;
  #L3e184e.  v2:= v2 + v0 @kind long;
  #L3e1850.  v4:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.lastNowNanoseconds` @type ^`long` @kind wide;
  #L3e1854.  v6:= 1L;
  #L3e1858.  v8:= lcmp(v2, v4);
  #L3e185c.  if v8 < 0 then goto L3e1890;
  #L3e1860.  v2:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.periodInNanoseconds` @type ^`long` @kind wide;
  #L3e1864.  v4:= v4 + v2 @kind long;
  #L3e1866.  v2:= `@@io.reactivex.Scheduler.CLOCK_DRIFT_TOLERANCE_NANOSECONDS` @type ^`long` @kind wide;
  #L3e186a.  v4:= v4 + v2 @kind long;
  #L3e186c.  v2:= lcmp(v0, v4);
  #L3e1870.  if v2 < 0 then goto L3e1876;
  #L3e1874.  goto L3e1890;
  #L3e1876.  v2:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.startInNanoseconds` @type ^`long` @kind wide;
  #L3e187a.  v4:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.count` @type ^`long` @kind wide;
  #L3e187e.  v4:= v4 + v6 @kind long;
  #L3e1880.  v10.`io.reactivex.Scheduler$Worker$PeriodicTask.count` @type ^`long` := v4 @kind wide;
  #L3e1884.  v6:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.periodInNanoseconds` @type ^`long` @kind wide;
  #L3e1888.  v4:= v4 * v6 @kind long;
  #L3e188c.  v2:= v2 + v4 @kind long;
  #L3e188e.  goto L3e18b0;
  #L3e1890.  v2:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.periodInNanoseconds` @type ^`long` @kind wide;
  #L3e1894.  v4:= v0 + v2 @kind long;
  #L3e1898.  v8:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.count` @type ^`long` @kind wide;
  #L3e189c.  v8:= v8 + v6 @kind long;
  #L3e189e.  v10.`io.reactivex.Scheduler$Worker$PeriodicTask.count` @type ^`long` := v8 @kind wide;
  #L3e18a2.  v2:= v2 * v8 @kind long;
  #L3e18a6.  v2:= v4 - v2 @kind long;
  #L3e18aa.  v10.`io.reactivex.Scheduler$Worker$PeriodicTask.startInNanoseconds` @type ^`long` := v2 @kind wide;
  #L3e18ae.  v2:= v4 @kind wide;
  #L3e18b0.  v10.`io.reactivex.Scheduler$Worker$PeriodicTask.lastNowNanoseconds` @type ^`long` := v0 @kind wide;
  #L3e18b4.  v2:= v2 - v0 @kind long;
  #L3e18b6.  v0:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L3e18ba.  v1:= v10.`io.reactivex.Scheduler$Worker$PeriodicTask.this$0` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L3e18be.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e18c2.  call temp:= `schedule`(v1, v10, v2, v4) @signature `Lio/reactivex/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e18c8.  v1:= temp @kind object;
  #L3e18ca.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L3e18d0.  return @kind void;
}
