record `io.reactivex.Scheduler$PeriodicDirectTask` @kind class @AccessFlag FINAL extends `io.reactivex.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface, `io.reactivex.schedulers.SchedulerRunnableIntrospection` @kind interface {
  `boolean` `io.reactivex.Scheduler$PeriodicDirectTask.disposed` @AccessFlag VOLATILE;
  `java.lang.Runnable` `io.reactivex.Scheduler$PeriodicDirectTask.run` @AccessFlag FINAL;
  `io.reactivex.Scheduler$Worker` `io.reactivex.Scheduler$PeriodicDirectTask.worker` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.Scheduler$PeriodicDirectTask` v0 @kind this, `java.lang.Runnable` v1 @kind object, `io.reactivex.Scheduler$Worker` v2 @kind object) @signature `Lio/reactivex/Scheduler$PeriodicDirectTask;.<init>:(Ljava/lang/Runnable;Lio/reactivex/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e1744.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e174a.  v0.`io.reactivex.Scheduler$PeriodicDirectTask.run` @type ^`java.lang.Runnable` := v1 @kind object;
  #L3e174e.  v0.`io.reactivex.Scheduler$PeriodicDirectTask.worker` @type ^`io.reactivex.Scheduler$Worker` := v2 @kind object;
  #L3e1752.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.Scheduler$PeriodicDirectTask` v1 @kind this) @signature `Lio/reactivex/Scheduler$PeriodicDirectTask;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1764.  v0:= 1I;
  #L3e1766.  v1.`io.reactivex.Scheduler$PeriodicDirectTask.disposed` @type ^`boolean` := v0 @kind boolean;
  #L3e176a.  v0:= v1.`io.reactivex.Scheduler$PeriodicDirectTask.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L3e176e.  call `dispose`(v0) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L3e1774.  return @kind void;
}
procedure `java.lang.Runnable` `getWrappedRunnable`(`io.reactivex.Scheduler$PeriodicDirectTask` v1 @kind this) @signature `Lio/reactivex/Scheduler$PeriodicDirectTask;.getWrappedRunnable:()Ljava/lang/Runnable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e172c.  v0:= v1.`io.reactivex.Scheduler$PeriodicDirectTask.run` @type ^`java.lang.Runnable` @kind object;
  #L3e1730.  return v0 @kind object;
}
procedure `boolean` `isDisposed`(`io.reactivex.Scheduler$PeriodicDirectTask` v1 @kind this) @signature `Lio/reactivex/Scheduler$PeriodicDirectTask;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1714.  v0:= v1.`io.reactivex.Scheduler$PeriodicDirectTask.disposed` @type ^`boolean` @kind boolean;
  #L3e1718.  return v0;
}
procedure `void` `run`(`io.reactivex.Scheduler$PeriodicDirectTask` v2 @kind this) @signature `Lio/reactivex/Scheduler$PeriodicDirectTask;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1788.  v0:= v2.`io.reactivex.Scheduler$PeriodicDirectTask.disposed` @type ^`boolean` @kind boolean;
  #L3e178c.  if v0 != 0 then goto L3e17b8;
  #L3e1790.  v0:= v2.`io.reactivex.Scheduler$PeriodicDirectTask.run` @type ^`java.lang.Runnable` @kind object;
  #L3e1794.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3e179a.  goto L3e17b8;
  #L3e179c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e179e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e17a4.  v1:= v2.`io.reactivex.Scheduler$PeriodicDirectTask.worker` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L3e17a8.  call `dispose`(v1) @signature `Lio/reactivex/Scheduler$Worker;.dispose:()V` @kind virtual;
  #L3e17ae.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3e17b4.  v0:= temp @kind object;
  #L3e17b6.  throw v0;
  #L3e17b8.  return @kind void;
  catch `java.lang.Throwable` @[L3e1790..L3e179a] goto L3e179c;
}
