record `io.reactivex.parallel.ParallelFailureHandling` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.functions.BiFunction` @kind interface {
}
global `io.reactivex.parallel.ParallelFailureHandling`[] `@@io.reactivex.parallel.ParallelFailureHandling.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.parallel.ParallelFailureHandling` `@@io.reactivex.parallel.ParallelFailureHandling.ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.parallel.ParallelFailureHandling` `@@io.reactivex.parallel.ParallelFailureHandling.RETRY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.parallel.ParallelFailureHandling` `@@io.reactivex.parallel.ParallelFailureHandling.SKIP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.parallel.ParallelFailureHandling` `@@io.reactivex.parallel.ParallelFailureHandling.STOP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L44a6dc.  v0:= new `io.reactivex.parallel.ParallelFailureHandling`;
  #L44a6e0.  v1:= 0I;
  #L44a6e2.  v2:= "STOP" @kind object;
  #L44a6e6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L44a6ec.  `@@io.reactivex.parallel.ParallelFailureHandling.STOP` @type ^`io.reactivex.parallel.ParallelFailureHandling` := v0 @kind object;
  #L44a6f0.  v0:= new `io.reactivex.parallel.ParallelFailureHandling`;
  #L44a6f4.  v2:= 1I;
  #L44a6f6.  v3:= "ERROR" @kind object;
  #L44a6fa.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L44a700.  `@@io.reactivex.parallel.ParallelFailureHandling.ERROR` @type ^`io.reactivex.parallel.ParallelFailureHandling` := v0 @kind object;
  #L44a704.  v0:= new `io.reactivex.parallel.ParallelFailureHandling`;
  #L44a708.  v3:= 2I;
  #L44a70a.  v4:= "SKIP" @kind object;
  #L44a70e.  call `<init>`(v0, v4, v3) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L44a714.  `@@io.reactivex.parallel.ParallelFailureHandling.SKIP` @type ^`io.reactivex.parallel.ParallelFailureHandling` := v0 @kind object;
  #L44a718.  v0:= new `io.reactivex.parallel.ParallelFailureHandling`;
  #L44a71c.  v4:= 3I;
  #L44a71e.  v5:= "RETRY" @kind object;
  #L44a722.  call `<init>`(v0, v5, v4) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L44a728.  `@@io.reactivex.parallel.ParallelFailureHandling.RETRY` @type ^`io.reactivex.parallel.ParallelFailureHandling` := v0 @kind object;
  #L44a72c.  v0:= 4I;
  #L44a72e.  v0:= new `io.reactivex.parallel.ParallelFailureHandling`[v0];
  #L44a732.  v5:= `@@io.reactivex.parallel.ParallelFailureHandling.STOP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L44a736.  v0[v1]:= v5 @kind object;
  #L44a73a.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.ERROR` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L44a73e.  v0[v2]:= v1 @kind object;
  #L44a742.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.SKIP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L44a746.  v0[v3]:= v1 @kind object;
  #L44a74a.  v1:= `@@io.reactivex.parallel.ParallelFailureHandling.RETRY` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L44a74e.  v0[v4]:= v1 @kind object;
  #L44a752.  `@@io.reactivex.parallel.ParallelFailureHandling.$VALUES` @type ^`io.reactivex.parallel.ParallelFailureHandling`[] := v0 @kind object;
  #L44a756.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.parallel.ParallelFailureHandling` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L44a768.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L44a76e.  return @kind void;
}
procedure `io.reactivex.parallel.ParallelFailureHandling` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.valueOf:(Ljava/lang/String;)Lio/reactivex/parallel/ParallelFailureHandling;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L44a670.  v0:= constclass @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L44a674.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L44a67a.  v1:= temp @kind object;
  #L44a67c.  v1:= (`io.reactivex.parallel.ParallelFailureHandling`) v1 @kind object;
  #L44a680.  return v1 @kind object;
}
procedure `io.reactivex.parallel.ParallelFailureHandling`[] `values`() @signature `Lio/reactivex/parallel/ParallelFailureHandling;.values:()[Lio/reactivex/parallel/ParallelFailureHandling;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L44a694.  v0:= `@@io.reactivex.parallel.ParallelFailureHandling.$VALUES` @type ^`io.reactivex.parallel.ParallelFailureHandling`[] @kind object;
  #L44a698.  call temp:= `clone`(v0) @signature `[Lio/reactivex/parallel/ParallelFailureHandling;.clone:()Ljava/lang/Object;` @kind virtual;
  #L44a69e.  v0:= temp @kind object;
  #L44a6a0.  v0:= (`io.reactivex.parallel.ParallelFailureHandling`[]) v0 @kind object;
  #L44a6a4.  return v0 @kind object;
}
procedure `io.reactivex.parallel.ParallelFailureHandling` `apply`(`io.reactivex.parallel.ParallelFailureHandling` v0 @kind this, `java.lang.Long` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.apply:(Ljava/lang/Long;Ljava/lang/Throwable;)Lio/reactivex/parallel/ParallelFailureHandling;` @AccessFlag PUBLIC {
    temp;

  #L44a65c.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.parallel.ParallelFailureHandling` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L44a6b8.  v1:= (`java.lang.Long`) v1 @kind object;
  #L44a6bc.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L44a6c0.  call temp:= `apply`(v0, v1, v2) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.apply:(Ljava/lang/Long;Ljava/lang/Throwable;)Lio/reactivex/parallel/ParallelFailureHandling;` @kind virtual;
  #L44a6c6.  v1:= temp @kind object;
  #L44a6c8.  return v1 @kind object;
}
