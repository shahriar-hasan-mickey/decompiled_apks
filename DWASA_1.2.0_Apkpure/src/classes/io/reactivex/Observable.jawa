record `io.reactivex.Observable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.ObservableSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.Observable` v0 @kind this) @signature `Lio/reactivex/Observable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e147c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e1482.  return @kind void;
}
procedure `io.reactivex.Observable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Observable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3daf5c.  v0:= "sources is null" @kind object;
  #L3daf60.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3daf66.  v0:= new `io.reactivex.internal.operators.observable.ObservableAmb`;
  #L3daf6a.  v1:= 0I;
  #L3daf6c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3daf72.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3daf78.  v2:= temp @kind object;
  #L3daf7a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `ambArray`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.ambArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3daf8c.  v0:= "sources is null" @kind object;
  #L3daf90.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3daf96.  v0:= length @variable v2;
  #L3daf98.  if v0 != 0 then goto L3dafa6;
  #L3daf9c.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3dafa2.  v2:= temp @kind object;
  #L3dafa4.  return v2 @kind object;
  #L3dafa6.  v1:= 1I;
  #L3dafa8.  if v0 != v1 then goto L3dafbc;
  #L3dafac.  v0:= 0I;
  #L3dafae.  v2:= v2[v0] @kind object;
  #L3dafb2.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dafb8.  v2:= temp @kind object;
  #L3dafba.  return v2 @kind object;
  #L3dafbc.  v0:= new `io.reactivex.internal.operators.observable.ObservableAmb`;
  #L3dafc0.  v1:= 0I;
  #L3dafc2.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L3dafc8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dafce.  v2:= temp @kind object;
  #L3dafd0.  return v2 @kind object;
}
procedure `int` `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dac24.  call temp:= `bufferSize`() @signature `Lio/reactivex/Flowable;.bufferSize:()I` @kind static;
  #L3dac2a.  v0:= temp;
  #L3dac2c.  return v0;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object, `io.reactivex.functions.Function9` v12 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function9;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3db454.  v0:= "source1 is null" @kind object;
  #L3db458.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db45e.  v0:= "source2 is null" @kind object;
  #L3db462.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db468.  v0:= "source3 is null" @kind object;
  #L3db46c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db472.  v0:= "source4 is null" @kind object;
  #L3db476.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db47c.  v0:= "source5 is null" @kind object;
  #L3db480.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db486.  v0:= "source6 is null" @kind object;
  #L3db48a.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db490.  v0:= "source7 is null" @kind object;
  #L3db494.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db49a.  v0:= "source8 is null" @kind object;
  #L3db49e.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db4a4.  v0:= "source9 is null" @kind object;
  #L3db4a8.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db4ae.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function9;)Lio/reactivex/functions/Function;` @kind static;
  #L3db4b4.  v12:= temp @kind object;
  #L3db4b6.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db4bc.  v0:= temp;
  #L3db4be.  v1:= 9I;
  #L3db4c2.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3db4c6.  v2:= 0I;
  #L3db4c8.  v1[v2]:= v3 @kind object;
  #L3db4cc.  v3:= 1I;
  #L3db4ce.  v1[v3]:= v4 @kind object;
  #L3db4d2.  v3:= 2I;
  #L3db4d4.  v1[v3]:= v5 @kind object;
  #L3db4d8.  v3:= 3I;
  #L3db4da.  v1[v3]:= v6 @kind object;
  #L3db4de.  v3:= 4I;
  #L3db4e0.  v1[v3]:= v7 @kind object;
  #L3db4e4.  v3:= 5I;
  #L3db4e6.  v1[v3]:= v8 @kind object;
  #L3db4ea.  v3:= 6I;
  #L3db4ec.  v1[v3]:= v9 @kind object;
  #L3db4f0.  v3:= 7I;
  #L3db4f2.  v1[v3]:= v10 @kind object;
  #L3db4f6.  v3:= 8I;
  #L3db4fa.  v1[v3]:= v11 @kind object;
  #L3db4fe.  call temp:= `combineLatest`(v12, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3db504.  v3:= temp @kind object;
  #L3db506.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.functions.Function8` v11 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function8;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3db518.  v0:= "source1 is null" @kind object;
  #L3db51c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db522.  v0:= "source2 is null" @kind object;
  #L3db526.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db52c.  v0:= "source3 is null" @kind object;
  #L3db530.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db536.  v0:= "source4 is null" @kind object;
  #L3db53a.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db540.  v0:= "source5 is null" @kind object;
  #L3db544.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db54a.  v0:= "source6 is null" @kind object;
  #L3db54e.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db554.  v0:= "source7 is null" @kind object;
  #L3db558.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db55e.  v0:= "source8 is null" @kind object;
  #L3db562.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db568.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function8;)Lio/reactivex/functions/Function;` @kind static;
  #L3db56e.  v11:= temp @kind object;
  #L3db570.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db576.  v0:= temp;
  #L3db578.  v1:= 8I;
  #L3db57c.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3db580.  v2:= 0I;
  #L3db582.  v1[v2]:= v3 @kind object;
  #L3db586.  v3:= 1I;
  #L3db588.  v1[v3]:= v4 @kind object;
  #L3db58c.  v3:= 2I;
  #L3db58e.  v1[v3]:= v5 @kind object;
  #L3db592.  v3:= 3I;
  #L3db594.  v1[v3]:= v6 @kind object;
  #L3db598.  v3:= 4I;
  #L3db59a.  v1[v3]:= v7 @kind object;
  #L3db59e.  v3:= 5I;
  #L3db5a0.  v1[v3]:= v8 @kind object;
  #L3db5a4.  v3:= 6I;
  #L3db5a6.  v1[v3]:= v9 @kind object;
  #L3db5aa.  v3:= 7I;
  #L3db5ac.  v1[v3]:= v10 @kind object;
  #L3db5b0.  call temp:= `combineLatest`(v11, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3db5b6.  v3:= temp @kind object;
  #L3db5b8.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.functions.Function7` v10 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function7;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3db5cc.  v0:= "source1 is null" @kind object;
  #L3db5d0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db5d6.  v0:= "source2 is null" @kind object;
  #L3db5da.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db5e0.  v0:= "source3 is null" @kind object;
  #L3db5e4.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db5ea.  v0:= "source4 is null" @kind object;
  #L3db5ee.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db5f4.  v0:= "source5 is null" @kind object;
  #L3db5f8.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db5fe.  v0:= "source6 is null" @kind object;
  #L3db602.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db608.  v0:= "source7 is null" @kind object;
  #L3db60c.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db612.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function7;)Lio/reactivex/functions/Function;` @kind static;
  #L3db618.  v10:= temp @kind object;
  #L3db61a.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db620.  v0:= temp;
  #L3db622.  v1:= 7I;
  #L3db624.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3db628.  v2:= 0I;
  #L3db62a.  v1[v2]:= v3 @kind object;
  #L3db62e.  v3:= 1I;
  #L3db630.  v1[v3]:= v4 @kind object;
  #L3db634.  v3:= 2I;
  #L3db636.  v1[v3]:= v5 @kind object;
  #L3db63a.  v3:= 3I;
  #L3db63c.  v1[v3]:= v6 @kind object;
  #L3db640.  v3:= 4I;
  #L3db642.  v1[v3]:= v7 @kind object;
  #L3db646.  v3:= 5I;
  #L3db648.  v1[v3]:= v8 @kind object;
  #L3db64c.  v3:= 6I;
  #L3db64e.  v1[v3]:= v9 @kind object;
  #L3db652.  call temp:= `combineLatest`(v10, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3db658.  v3:= temp @kind object;
  #L3db65a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function6` v9 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function6;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3db66c.  v0:= "source1 is null" @kind object;
  #L3db670.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db676.  v0:= "source2 is null" @kind object;
  #L3db67a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db680.  v0:= "source3 is null" @kind object;
  #L3db684.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db68a.  v0:= "source4 is null" @kind object;
  #L3db68e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db694.  v0:= "source5 is null" @kind object;
  #L3db698.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db69e.  v0:= "source6 is null" @kind object;
  #L3db6a2.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db6a8.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function6;)Lio/reactivex/functions/Function;` @kind static;
  #L3db6ae.  v9:= temp @kind object;
  #L3db6b0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db6b6.  v0:= temp;
  #L3db6b8.  v1:= 6I;
  #L3db6ba.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3db6be.  v2:= 0I;
  #L3db6c0.  v1[v2]:= v3 @kind object;
  #L3db6c4.  v3:= 1I;
  #L3db6c6.  v1[v3]:= v4 @kind object;
  #L3db6ca.  v3:= 2I;
  #L3db6cc.  v1[v3]:= v5 @kind object;
  #L3db6d0.  v3:= 3I;
  #L3db6d2.  v1[v3]:= v6 @kind object;
  #L3db6d6.  v3:= 4I;
  #L3db6d8.  v1[v3]:= v7 @kind object;
  #L3db6dc.  v3:= 5I;
  #L3db6de.  v1[v3]:= v8 @kind object;
  #L3db6e2.  call temp:= `combineLatest`(v9, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3db6e8.  v3:= temp @kind object;
  #L3db6ea.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.functions.Function5` v8 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3db6fc.  v0:= "source1 is null" @kind object;
  #L3db700.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db706.  v0:= "source2 is null" @kind object;
  #L3db70a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db710.  v0:= "source3 is null" @kind object;
  #L3db714.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db71a.  v0:= "source4 is null" @kind object;
  #L3db71e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db724.  v0:= "source5 is null" @kind object;
  #L3db728.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db72e.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L3db734.  v8:= temp @kind object;
  #L3db736.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db73c.  v0:= temp;
  #L3db73e.  v1:= 5I;
  #L3db740.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3db744.  v2:= 0I;
  #L3db746.  v1[v2]:= v3 @kind object;
  #L3db74a.  v3:= 1I;
  #L3db74c.  v1[v3]:= v4 @kind object;
  #L3db750.  v3:= 2I;
  #L3db752.  v1[v3]:= v5 @kind object;
  #L3db756.  v3:= 3I;
  #L3db758.  v1[v3]:= v6 @kind object;
  #L3db75c.  v3:= 4I;
  #L3db75e.  v1[v3]:= v7 @kind object;
  #L3db762.  call temp:= `combineLatest`(v8, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3db768.  v3:= temp @kind object;
  #L3db76a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.functions.Function4` v7 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3db77c.  v0:= "source1 is null" @kind object;
  #L3db780.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db786.  v0:= "source2 is null" @kind object;
  #L3db78a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db790.  v0:= "source3 is null" @kind object;
  #L3db794.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db79a.  v0:= "source4 is null" @kind object;
  #L3db79e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db7a4.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L3db7aa.  v7:= temp @kind object;
  #L3db7ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db7b2.  v0:= temp;
  #L3db7b4.  v1:= 4I;
  #L3db7b6.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3db7ba.  v2:= 0I;
  #L3db7bc.  v1[v2]:= v3 @kind object;
  #L3db7c0.  v3:= 1I;
  #L3db7c2.  v1[v3]:= v4 @kind object;
  #L3db7c6.  v3:= 2I;
  #L3db7c8.  v1[v3]:= v5 @kind object;
  #L3db7cc.  v3:= 3I;
  #L3db7ce.  v1[v3]:= v6 @kind object;
  #L3db7d2.  call temp:= `combineLatest`(v7, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3db7d8.  v3:= temp @kind object;
  #L3db7da.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.functions.Function3` v6 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3db7ec.  v0:= "source1 is null" @kind object;
  #L3db7f0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db7f6.  v0:= "source2 is null" @kind object;
  #L3db7fa.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db800.  v0:= "source3 is null" @kind object;
  #L3db804.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db80a.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L3db810.  v6:= temp @kind object;
  #L3db812.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db818.  v0:= temp;
  #L3db81a.  v1:= 3I;
  #L3db81c.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3db820.  v2:= 0I;
  #L3db822.  v1[v2]:= v3 @kind object;
  #L3db826.  v3:= 1I;
  #L3db828.  v1[v3]:= v4 @kind object;
  #L3db82c.  v3:= 2I;
  #L3db82e.  v1[v3]:= v5 @kind object;
  #L3db832.  call temp:= `combineLatest`(v6, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3db838.  v3:= temp @kind object;
  #L3db83a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3db84c.  v0:= "source1 is null" @kind object;
  #L3db850.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db856.  v0:= "source2 is null" @kind object;
  #L3db85a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db860.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3db866.  v5:= temp @kind object;
  #L3db868.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db86e.  v0:= temp;
  #L3db870.  v1:= 2I;
  #L3db872.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3db876.  v2:= 0I;
  #L3db878.  v1[v2]:= v3 @kind object;
  #L3db87c.  v3:= 1I;
  #L3db87e.  v1[v3]:= v4 @kind object;
  #L3db882.  call temp:= `combineLatest`(v5, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3db888.  v3:= temp @kind object;
  #L3db88a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.functions.Function` v0 @kind object, `int` v1 , `io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3db920.  call temp:= `combineLatest`(v2, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3db926.  v0:= temp @kind object;
  #L3db928.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3db93c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db942.  v0:= temp;
  #L3db944.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3db94a.  v1:= temp @kind object;
  #L3db94c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3db960.  v0:= "sources is null" @kind object;
  #L3db964.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db96a.  v0:= "combiner is null" @kind object;
  #L3db96e.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db974.  v0:= "bufferSize" @kind object;
  #L3db978.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3db97e.  v5:= v9 ^< 1;
  #L3db982.  v9:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L3db986.  v2:= 0I;
  #L3db988.  v6:= 0I;
  #L3db98a.  v1:= v9 @kind object;
  #L3db98c.  v3:= v7 @kind object;
  #L3db98e.  v4:= v8 @kind object;
  #L3db990.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3db996.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3db99c.  v7:= temp @kind object;
  #L3db99e.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource`[] v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3db89c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db8a2.  v0:= temp;
  #L3db8a4.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3db8aa.  v1:= temp @kind object;
  #L3db8ac.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource`[] v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3db8c0.  v0:= "sources is null" @kind object;
  #L3db8c4.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db8ca.  v0:= length @variable v7;
  #L3db8cc.  if v0 != 0 then goto L3db8da;
  #L3db8d0.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3db8d6.  v7:= temp @kind object;
  #L3db8d8.  return v7 @kind object;
  #L3db8da.  v0:= "combiner is null" @kind object;
  #L3db8de.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db8e4.  v0:= "bufferSize" @kind object;
  #L3db8e8.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3db8ee.  v5:= v9 ^< 1;
  #L3db8f2.  v9:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L3db8f6.  v3:= 0I;
  #L3db8f8.  v6:= 0I;
  #L3db8fa.  v1:= v9 @kind object;
  #L3db8fc.  v2:= v7 @kind object;
  #L3db8fe.  v4:= v8 @kind object;
  #L3db900.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3db906.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3db90c.  v7:= temp @kind object;
  #L3db90e.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`io.reactivex.functions.Function` v0 @kind object, `int` v1 , `io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3dba2c.  call temp:= `combineLatestDelayError`(v2, v0, v1) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3dba32.  v0:= temp @kind object;
  #L3dba34.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dba48.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dba4e.  v0:= temp;
  #L3dba50.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3dba56.  v1:= temp @kind object;
  #L3dba58.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dba6c.  v0:= "sources is null" @kind object;
  #L3dba70.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dba76.  v0:= "combiner is null" @kind object;
  #L3dba7a.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dba80.  v0:= "bufferSize" @kind object;
  #L3dba84.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dba8a.  v5:= v9 ^< 1;
  #L3dba8e.  v9:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L3dba92.  v2:= 0I;
  #L3dba94.  v6:= 1I;
  #L3dba96.  v1:= v9 @kind object;
  #L3dba98.  v3:= v7 @kind object;
  #L3dba9a.  v4:= v8 @kind object;
  #L3dba9c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3dbaa2.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dbaa8.  v7:= temp @kind object;
  #L3dbaaa.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`io.reactivex.ObservableSource`[] v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3db9b0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3db9b6.  v0:= temp;
  #L3db9b8.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L3db9be.  v1:= temp @kind object;
  #L3db9c0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`io.reactivex.ObservableSource`[] v6 @kind object, `io.reactivex.functions.Function` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3db9d4.  v0:= "bufferSize" @kind object;
  #L3db9d8.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3db9de.  v0:= "combiner is null" @kind object;
  #L3db9e2.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db9e8.  v0:= length @variable v6;
  #L3db9ea.  if v0 != 0 then goto L3db9f8;
  #L3db9ee.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3db9f4.  v6:= temp @kind object;
  #L3db9f6.  return v6 @kind object;
  #L3db9f8.  v4:= v8 ^< 1;
  #L3db9fc.  v8:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L3dba00.  v2:= 0I;
  #L3dba02.  v5:= 1I;
  #L3dba04.  v0:= v8 @kind object;
  #L3dba06.  v1:= v6 @kind object;
  #L3dba08.  v3:= v7 @kind object;
  #L3dba0a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3dba10.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dba16.  v6:= temp @kind object;
  #L3dba18.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dbaf0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbaf6.  v0:= temp;
  #L3dbaf8.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L3dbafe.  v1:= temp @kind object;
  #L3dbb00.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3dbb14.  v0:= "sources is null" @kind object;
  #L3dbb18.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbb1e.  v0:= "prefetch" @kind object;
  #L3dbb22.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dbb28.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3dbb2c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dbb32.  v1:= temp @kind object;
  #L3dbb34.  v2:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dbb38.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3dbb3e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dbb44.  v3:= temp @kind object;
  #L3dbb46.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbb58.  v0:= "source1 is null" @kind object;
  #L3dbb5c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbb62.  v0:= "source2 is null" @kind object;
  #L3dbb66.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbb6c.  v0:= 2I;
  #L3dbb6e.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3dbb72.  v1:= 0I;
  #L3dbb74.  v0[v1]:= v2 @kind object;
  #L3dbb78.  v2:= 1I;
  #L3dbb7a.  v0[v2]:= v3 @kind object;
  #L3dbb7e.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbb84.  v2:= temp @kind object;
  #L3dbb86.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbb98.  v0:= "source1 is null" @kind object;
  #L3dbb9c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbba2.  v0:= "source2 is null" @kind object;
  #L3dbba6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbbac.  v0:= "source3 is null" @kind object;
  #L3dbbb0.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbbb6.  v0:= 3I;
  #L3dbbb8.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3dbbbc.  v1:= 0I;
  #L3dbbbe.  v0[v1]:= v2 @kind object;
  #L3dbbc2.  v2:= 1I;
  #L3dbbc4.  v0[v2]:= v3 @kind object;
  #L3dbbc8.  v2:= 2I;
  #L3dbbca.  v0[v2]:= v4 @kind object;
  #L3dbbce.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbbd4.  v2:= temp @kind object;
  #L3dbbd6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbbe8.  v0:= "source1 is null" @kind object;
  #L3dbbec.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbbf2.  v0:= "source2 is null" @kind object;
  #L3dbbf6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbbfc.  v0:= "source3 is null" @kind object;
  #L3dbc00.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbc06.  v0:= "source4 is null" @kind object;
  #L3dbc0a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbc10.  v0:= 4I;
  #L3dbc12.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3dbc16.  v1:= 0I;
  #L3dbc18.  v0[v1]:= v2 @kind object;
  #L3dbc1c.  v2:= 1I;
  #L3dbc1e.  v0[v2]:= v3 @kind object;
  #L3dbc22.  v2:= 2I;
  #L3dbc24.  v0[v2]:= v4 @kind object;
  #L3dbc28.  v2:= 3I;
  #L3dbc2a.  v0[v2]:= v5 @kind object;
  #L3dbc2e.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbc34.  v2:= temp @kind object;
  #L3dbc36.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/Observable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3dbc48.  v0:= "sources is null" @kind object;
  #L3dbc4c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbc52.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3dbc58.  v3:= temp @kind object;
  #L3dbc5a.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dbc60.  v0:= temp @kind object;
  #L3dbc62.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbc68.  v1:= temp;
  #L3dbc6a.  v2:= 0I;
  #L3dbc6c.  call temp:= `concatMapDelayError`(v3, v0, v1, v2) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;IZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dbc72.  v3:= temp @kind object;
  #L3dbc74.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatArray`(`io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dbc88.  v0:= length @variable v4;
  #L3dbc8a.  if v0 != 0 then goto L3dbc98;
  #L3dbc8e.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3dbc94.  v4:= temp @kind object;
  #L3dbc96.  return v4 @kind object;
  #L3dbc98.  v0:= length @variable v4;
  #L3dbc9a.  v1:= 1I;
  #L3dbc9c.  if v0 != v1 then goto L3dbcb0;
  #L3dbca0.  v0:= 0I;
  #L3dbca2.  v4:= v4[v0] @kind object;
  #L3dbca6.  call temp:= `wrap`(v4) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbcac.  v4:= temp @kind object;
  #L3dbcae.  return v4 @kind object;
  #L3dbcb0.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3dbcb4.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dbcba.  v4:= temp @kind object;
  #L3dbcbc.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dbcc2.  v1:= temp @kind object;
  #L3dbcc4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbcca.  v2:= temp;
  #L3dbccc.  v3:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dbcd0.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3dbcd6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dbcdc.  v4:= temp @kind object;
  #L3dbcde.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayDelayError`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.concatArrayDelayError:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbcf0.  v0:= length @variable v2;
  #L3dbcf2.  if v0 != 0 then goto L3dbd00;
  #L3dbcf6.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3dbcfc.  v2:= temp @kind object;
  #L3dbcfe.  return v2 @kind object;
  #L3dbd00.  v0:= length @variable v2;
  #L3dbd02.  v1:= 1I;
  #L3dbd04.  if v0 != v1 then goto L3dbd18;
  #L3dbd08.  v0:= 0I;
  #L3dbd0a.  v2:= v2[v0] @kind object;
  #L3dbd0e.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbd14.  v2:= temp @kind object;
  #L3dbd16.  return v2 @kind object;
  #L3dbd18.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dbd1e.  v2:= temp @kind object;
  #L3dbd20.  call temp:= `concatDelayError`(v2) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbd26.  v2:= temp @kind object;
  #L3dbd28.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEager`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEager:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbd3c.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dbd42.  v4:= temp @kind object;
  #L3dbd44.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dbd4a.  v0:= temp @kind object;
  #L3dbd4c.  v1:= 0I;
  #L3dbd4e.  call temp:= `concatMapEagerDelayError`(v4, v0, v2, v3, v1) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dbd54.  v2:= temp @kind object;
  #L3dbd56.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEager`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEager:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbd68.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbd6e.  v0:= temp;
  #L3dbd70.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbd76.  v1:= temp;
  #L3dbd78.  call temp:= `concatArrayEager`(v0, v1, v2) @signature `Lio/reactivex/Observable;.concatArrayEager:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbd7e.  v2:= temp @kind object;
  #L3dbd80.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEagerDelayError`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEagerDelayError:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbd94.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dbd9a.  v4:= temp @kind object;
  #L3dbd9c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dbda2.  v0:= temp @kind object;
  #L3dbda4.  v1:= 1I;
  #L3dbda6.  call temp:= `concatMapEagerDelayError`(v4, v0, v2, v3, v1) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dbdac.  v2:= temp @kind object;
  #L3dbdae.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEagerDelayError`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEagerDelayError:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbdc0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbdc6.  v0:= temp;
  #L3dbdc8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbdce.  v1:= temp;
  #L3dbdd0.  call temp:= `concatArrayEagerDelayError`(v0, v1, v2) @signature `Lio/reactivex/Observable;.concatArrayEagerDelayError:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbdd6.  v2:= temp @kind object;
  #L3dbdd8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatDelayError`(`io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbdec.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbdf2.  v0:= temp;
  #L3dbdf4.  v1:= 1I;
  #L3dbdf6.  call temp:= `concatDelayError`(v2, v0, v1) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;IZ)Lio/reactivex/Observable;` @kind static;
  #L3dbdfc.  v2:= temp @kind object;
  #L3dbdfe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatDelayError`(`io.reactivex.ObservableSource` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;IZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbe10.  v0:= "sources is null" @kind object;
  #L3dbe14.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbe1a.  v0:= "prefetch is null" @kind object;
  #L3dbe1e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dbe24.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3dbe28.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dbe2e.  v1:= temp @kind object;
  #L3dbe30.  if v4 == 0 then goto L3dbe3a;
  #L3dbe34.  v4:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dbe38.  goto L3dbe3e;
  #L3dbe3a.  v4:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dbe3e.  call `<init>`(v0, v2, v1, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3dbe44.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dbe4a.  v2:= temp @kind object;
  #L3dbe4c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Observable;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dbe60.  v0:= "sources is null" @kind object;
  #L3dbe64.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbe6a.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3dbe70.  v1:= temp @kind object;
  #L3dbe72.  call temp:= `concatDelayError`(v1) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbe78.  v1:= temp @kind object;
  #L3dbe7a.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatEager:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbe8c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbe92.  v0:= temp;
  #L3dbe94.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbe9a.  v1:= temp;
  #L3dbe9c.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/Observable;.concatEager:(Lio/reactivex/ObservableSource;II)Lio/reactivex/Observable;` @kind static;
  #L3dbea2.  v2:= temp @kind object;
  #L3dbea4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`io.reactivex.ObservableSource` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/reactivex/Observable;.concatEager:(Lio/reactivex/ObservableSource;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dbeb8.  call temp:= `wrap`(v1) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbebe.  v1:= temp @kind object;
  #L3dbec0.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dbec6.  v0:= temp @kind object;
  #L3dbec8.  call temp:= `concatMapEager`(v1, v0, v2, v3) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;II)Lio/reactivex/Observable;` @kind virtual;
  #L3dbece.  v1:= temp @kind object;
  #L3dbed0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Observable;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbee4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbeea.  v0:= temp;
  #L3dbeec.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbef2.  v1:= temp;
  #L3dbef4.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @kind static;
  #L3dbefa.  v2:= temp @kind object;
  #L3dbefc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dbf10.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3dbf16.  v2:= temp @kind object;
  #L3dbf18.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dbf1e.  v0:= temp @kind object;
  #L3dbf20.  v1:= 0I;
  #L3dbf22.  call temp:= `concatMapEagerDelayError`(v2, v0, v3, v4, v1) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dbf28.  v2:= temp @kind object;
  #L3dbf2a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `create`(`io.reactivex.ObservableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/Observable;.create:(Lio/reactivex/ObservableOnSubscribe;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dc42c.  v0:= "source is null" @kind object;
  #L3dc430.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc436.  v0:= new `io.reactivex.internal.operators.observable.ObservableCreate`;
  #L3dc43a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCreate;.<init>:(Lio/reactivex/ObservableOnSubscribe;)V` @kind direct;
  #L3dc440.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc446.  v1:= temp @kind object;
  #L3dc448.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `defer`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Observable;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dc520.  v0:= "supplier is null" @kind object;
  #L3dc524.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc52a.  v0:= new `io.reactivex.internal.operators.observable.ObservableDefer`;
  #L3dc52e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3dc534.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc53a.  v1:= temp @kind object;
  #L3dc53c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `doOnEach`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Consumer` v8 @kind object, `io.reactivex.functions.Consumer` v9 @kind object, `io.reactivex.functions.Action` v10 @kind object, `io.reactivex.functions.Action` v11 @kind object) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dc984.  v0:= "onNext is null" @kind object;
  #L3dc988.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc98e.  v0:= "onError is null" @kind object;
  #L3dc992.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc998.  v0:= "onComplete is null" @kind object;
  #L3dc99c.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc9a2.  v0:= "onAfterTerminate is null" @kind object;
  #L3dc9a6.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc9ac.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoOnEach`;
  #L3dc9b0.  v1:= v0 @kind object;
  #L3dc9b2.  v2:= v7 @kind object;
  #L3dc9b4.  v3:= v8 @kind object;
  #L3dc9b6.  v4:= v9 @kind object;
  #L3dc9b8.  v5:= v10 @kind object;
  #L3dc9ba.  v6:= v11 @kind object;
  #L3dc9bc.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3dc9c2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc9c8.  v8:= temp @kind object;
  #L3dc9ca.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dcac4.  v0:= `@@io.reactivex.internal.operators.observable.ObservableEmpty.INSTANCE` @type ^`io.reactivex.Observable` @kind object;
  #L3dcac8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dcace.  v0:= temp @kind object;
  #L3dcad0.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Observable;.error:(Ljava/lang/Throwable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dcae4.  v0:= "e is null" @kind object;
  #L3dcae8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcaee.  call temp:= `justCallable`(v1) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L3dcaf4.  v1:= temp @kind object;
  #L3dcaf6.  call temp:= `error`(v1) @signature `Lio/reactivex/Observable;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind static;
  #L3dcafc.  v1:= temp @kind object;
  #L3dcafe.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `error`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Observable;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dcb10.  v0:= "errorSupplier is null" @kind object;
  #L3dcb14.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcb1a.  v0:= new `io.reactivex.internal.operators.observable.ObservableError`;
  #L3dcb1e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableError;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3dcb24.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dcb2a.  v1:= temp @kind object;
  #L3dcb2c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromArray`(`java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dcf04.  v0:= "items is null" @kind object;
  #L3dcf08.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcf0e.  v0:= length @variable v2;
  #L3dcf10.  if v0 != 0 then goto L3dcf1e;
  #L3dcf14.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3dcf1a.  v2:= temp @kind object;
  #L3dcf1c.  return v2 @kind object;
  #L3dcf1e.  v0:= length @variable v2;
  #L3dcf20.  v1:= 1I;
  #L3dcf22.  if v0 != v1 then goto L3dcf36;
  #L3dcf26.  v0:= 0I;
  #L3dcf28.  v2:= v2[v0] @kind object;
  #L3dcf2c.  call temp:= `just`(v2) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dcf32.  v2:= temp @kind object;
  #L3dcf34.  return v2 @kind object;
  #L3dcf36.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromArray`;
  #L3dcf3a.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFromArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L3dcf40.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dcf46.  v2:= temp @kind object;
  #L3dcf48.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Observable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dcf5c.  v0:= "supplier is null" @kind object;
  #L3dcf60.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcf66.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromCallable`;
  #L3dcf6a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3dcf70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dcf76.  v1:= temp @kind object;
  #L3dcf78.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dcf8c.  v0:= "future is null" @kind object;
  #L3dcf90.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcf96.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromFuture`;
  #L3dcf9a.  v1:= 0L;
  #L3dcf9e.  v3:= 0I;
  #L3dcfa0.  call `<init>`(v0, v4, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L3dcfa6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dcfac.  v4:= temp @kind object;
  #L3dcfae.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dcfec.  v0:= "future is null" @kind object;
  #L3dcff0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcff6.  v0:= "unit is null" @kind object;
  #L3dcffa.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd000.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromFuture`;
  #L3dd004.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L3dd00a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd010.  v1:= temp @kind object;
  #L3dd012.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dd024.  v0:= "scheduler is null" @kind object;
  #L3dd028.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd02e.  call temp:= `fromFuture`(v1, v2, v4) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind static;
  #L3dd034.  v1:= temp @kind object;
  #L3dd036.  call temp:= `subscribeOn`(v1, v5) @signature `Lio/reactivex/Observable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3dd03c.  v1:= temp @kind object;
  #L3dd03e.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dcfc0.  v0:= "scheduler is null" @kind object;
  #L3dcfc4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcfca.  call temp:= `fromFuture`(v1) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Observable;` @kind static;
  #L3dcfd0.  v1:= temp @kind object;
  #L3dcfd2.  call temp:= `subscribeOn`(v1, v2) @signature `Lio/reactivex/Observable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3dcfd8.  v1:= temp @kind object;
  #L3dcfda.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromIterable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dd050.  v0:= "source is null" @kind object;
  #L3dd054.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd05a.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromIterable`;
  #L3dd05e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L3dd064.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd06a.  v1:= temp @kind object;
  #L3dd06c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Observable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dd080.  v0:= "publisher is null" @kind object;
  #L3dd084.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd08a.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromPublisher`;
  #L3dd08e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L3dd094.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd09a.  v1:= temp @kind object;
  #L3dd09c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Observable;.generate:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd0b0.  v0:= "generator  is null" @kind object;
  #L3dd0b4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd0ba.  call temp:= `nullSupplier`() @signature `Lio/reactivex/internal/functions/Functions;.nullSupplier:()Ljava/util/concurrent/Callable;` @kind static;
  #L3dd0c0.  v0:= temp @kind object;
  #L3dd0c2.  call temp:= `simpleGenerator`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.simpleGenerator:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/BiFunction;` @kind static;
  #L3dd0c8.  v2:= temp @kind object;
  #L3dd0ca.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dd0d0.  v1:= temp @kind object;
  #L3dd0d2.  call temp:= `generate`(v0, v2, v1) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L3dd0d8.  v2:= temp @kind object;
  #L3dd0da.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dd0ec.  v0:= "generator  is null" @kind object;
  #L3dd0f0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd0f6.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/functions/BiFunction;` @kind static;
  #L3dd0fc.  v2:= temp @kind object;
  #L3dd0fe.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dd104.  v0:= temp @kind object;
  #L3dd106.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L3dd10c.  v1:= temp @kind object;
  #L3dd10e.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiConsumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dd120.  v0:= "generator  is null" @kind object;
  #L3dd124.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd12a.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/functions/BiFunction;` @kind static;
  #L3dd130.  v2:= temp @kind object;
  #L3dd132.  call temp:= `generate`(v1, v2, v3) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L3dd138.  v1:= temp @kind object;
  #L3dd13a.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dd14c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dd152.  v0:= temp @kind object;
  #L3dd154.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L3dd15a.  v1:= temp @kind object;
  #L3dd15c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dd170.  v0:= "initialState is null" @kind object;
  #L3dd174.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd17a.  v0:= "generator  is null" @kind object;
  #L3dd17e.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd184.  v0:= "disposeState is null" @kind object;
  #L3dd188.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd18e.  v0:= new `io.reactivex.internal.operators.observable.ObservableGenerate`;
  #L3dd192.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableGenerate;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3dd198.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd19e.  v1:= temp @kind object;
  #L3dd1a0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v6 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dd36c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dd372.  v5:= temp @kind object;
  #L3dd374.  v0:= v6 @kind wide;
  #L3dd376.  v2:= v8 @kind wide;
  #L3dd378.  v4:= v10 @kind object;
  #L3dd37a.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3dd380.  v6:= temp @kind object;
  #L3dd382.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v8 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dd394.  v0:= "unit is null" @kind object;
  #L3dd398.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd39e.  v0:= "scheduler is null" @kind object;
  #L3dd3a2.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd3a8.  v0:= new `io.reactivex.internal.operators.observable.ObservableInterval`;
  #L3dd3ac.  v1:= 0L;
  #L3dd3b0.  call temp:= `max`(v1, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3dd3b6.  v8:= temp @kind wide;
  #L3dd3b8.  call temp:= `max`(v1, v10) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3dd3be.  v4:= temp @kind wide;
  #L3dd3c0.  v1:= v0 @kind object;
  #L3dd3c2.  v2:= v8 @kind wide;
  #L3dd3c4.  v6:= v12 @kind object;
  #L3dd3c6.  v7:= v13 @kind object;
  #L3dd3c8.  call `<init>`(v1, v2, v4, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableInterval;.<init>:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3dd3ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd3d4.  v8:= temp @kind object;
  #L3dd3d6.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/reactivex/Observable;.interval:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dd320.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dd326.  v5:= temp @kind object;
  #L3dd328.  v0:= v6 @kind wide;
  #L3dd32a.  v2:= v6 @kind wide;
  #L3dd32c.  v4:= v8 @kind object;
  #L3dd32e.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3dd334.  v6:= temp @kind object;
  #L3dd336.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object, `io.reactivex.Scheduler` v9 @kind object) @signature `Lio/reactivex/Observable;.interval:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dd348.  v0:= v6 @kind wide;
  #L3dd34a.  v2:= v6 @kind wide;
  #L3dd34c.  v4:= v8 @kind object;
  #L3dd34e.  v5:= v9 @kind object;
  #L3dd350.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3dd356.  v6:= temp @kind object;
  #L3dd358.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `intervalRange`(`long` v10 , `long` v12 , `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object) @signature `Lio/reactivex/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3dd3e8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dd3ee.  v9:= temp @kind object;
  #L3dd3f0.  v0:= v10 @kind wide;
  #L3dd3f2.  v2:= v12 @kind wide;
  #L3dd3f4.  v4:= v14 @kind wide;
  #L3dd3f6.  v6:= v16 @kind wide;
  #L3dd3fa.  v8:= v18 @kind object;
  #L3dd3fe.  call temp:= `intervalRange`(v0, v2, v4, v6, v8, v9) @signature `Lio/reactivex/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3dd404.  v0:= temp @kind object;
  #L3dd406.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `intervalRange`(`long` v16 , `long` v18 , `long` v20 , `long` v22 , `java.util.concurrent.TimeUnit` v24 @kind object, `io.reactivex.Scheduler` v25 @kind object) @signature `Lio/reactivex/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3dd418.  v0:= v18 @kind wide;
  #L3dd41c.  v2:= v20 @kind wide;
  #L3dd420.  v9:= v24 @kind object;
  #L3dd424.  v10:= v25 @kind object;
  #L3dd428.  v4:= 0L;
  #L3dd42c.  v6:= lcmp(v0, v4);
  #L3dd430.  if v6 < 0 then goto L3dd4ca;
  #L3dd434.  v6:= lcmp(v0, v4);
  #L3dd438.  if v6 != 0 then goto L3dd44e;
  #L3dd43c.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3dd442.  v0:= temp @kind object;
  #L3dd444.  call temp:= `delay`(v0, v2, v9, v10) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3dd44a.  v0:= temp @kind object;
  #L3dd44c.  return v0 @kind object;
  #L3dd44e.  v6:= 1L;
  #L3dd452.  v0:= v0 - v6 @kind long;
  #L3dd454.  v6:= v16 + v0 @kind long;
  #L3dd458.  v0:= lcmp(v16, v4);
  #L3dd45c.  if v0 <= 0 then goto L3dd47a;
  #L3dd460.  v0:= lcmp(v6, v4);
  #L3dd464.  if v0 < 0 then goto L3dd46a;
  #L3dd468.  goto L3dd47a;
  #L3dd46a.  v0:= new `java.lang.IllegalArgumentException`;
  #L3dd46e.  v1:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L3dd472.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd478.  throw v0;
  #L3dd47a.  v0:= "unit is null" @kind object;
  #L3dd47e.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd484.  v0:= "scheduler is null" @kind object;
  #L3dd488.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd48e.  v11:= new `io.reactivex.internal.operators.observable.ObservableIntervalRange`;
  #L3dd492.  call temp:= `max`(v4, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3dd498.  v12:= temp @kind wide;
  #L3dd49a.  v0:= v22 @kind wide;
  #L3dd49e.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3dd4a4.  v14:= temp @kind wide;
  #L3dd4a6.  v0:= v11 @kind object;
  #L3dd4a8.  v1:= v16 @kind wide;
  #L3dd4ac.  v3:= v6 @kind wide;
  #L3dd4ae.  v5:= v12 @kind wide;
  #L3dd4b0.  v7:= v14 @kind wide;
  #L3dd4b2.  v9:= v24 @kind object;
  #L3dd4b6.  v10:= v25 @kind object;
  #L3dd4ba.  call `<init>`(v0, v1, v3, v5, v7, v9, v10) @signature `Lio/reactivex/internal/operators/observable/ObservableIntervalRange;.<init>:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3dd4c0.  call temp:= `onAssembly`(v11) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd4c6.  v0:= temp @kind object;
  #L3dd4c8.  return v0 @kind object;
  #L3dd4ca.  v2:= new `java.lang.IllegalArgumentException`;
  #L3dd4ce.  v3:= new `java.lang.StringBuilder`;
  #L3dd4d2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dd4d8.  v4:= "count >= 0 required but it was " @kind object;
  #L3dd4dc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd4e2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd4e8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dd4ee.  v0:= temp @kind object;
  #L3dd4f0.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd4f6.  throw v2;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dd560.  v0:= "The item is null" @kind object;
  #L3dd564.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd56a.  v0:= new `io.reactivex.internal.operators.observable.ObservableJust`;
  #L3dd56e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3dd574.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd57a.  v1:= temp @kind object;
  #L3dd57c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd590.  v0:= "The first item is null" @kind object;
  #L3dd594.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd59a.  v0:= "The second item is null" @kind object;
  #L3dd59e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd5a4.  v0:= 2I;
  #L3dd5a6.  v0:= new `java.lang.Object`[v0];
  #L3dd5aa.  v1:= 0I;
  #L3dd5ac.  v0[v1]:= v2 @kind object;
  #L3dd5b0.  v2:= 1I;
  #L3dd5b2.  v0[v2]:= v3 @kind object;
  #L3dd5b6.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dd5bc.  v2:= temp @kind object;
  #L3dd5be.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd5d0.  v0:= "The first item is null" @kind object;
  #L3dd5d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd5da.  v0:= "The second item is null" @kind object;
  #L3dd5de.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd5e4.  v0:= "The third item is null" @kind object;
  #L3dd5e8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd5ee.  v0:= 3I;
  #L3dd5f0.  v0:= new `java.lang.Object`[v0];
  #L3dd5f4.  v1:= 0I;
  #L3dd5f6.  v0[v1]:= v2 @kind object;
  #L3dd5fa.  v2:= 1I;
  #L3dd5fc.  v0[v2]:= v3 @kind object;
  #L3dd600.  v2:= 2I;
  #L3dd602.  v0[v2]:= v4 @kind object;
  #L3dd606.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dd60c.  v2:= temp @kind object;
  #L3dd60e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd620.  v0:= "The first item is null" @kind object;
  #L3dd624.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd62a.  v0:= "The second item is null" @kind object;
  #L3dd62e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd634.  v0:= "The third item is null" @kind object;
  #L3dd638.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd63e.  v0:= "The fourth item is null" @kind object;
  #L3dd642.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd648.  v0:= 4I;
  #L3dd64a.  v0:= new `java.lang.Object`[v0];
  #L3dd64e.  v1:= 0I;
  #L3dd650.  v0[v1]:= v2 @kind object;
  #L3dd654.  v2:= 1I;
  #L3dd656.  v0[v2]:= v3 @kind object;
  #L3dd65a.  v2:= 2I;
  #L3dd65c.  v0[v2]:= v4 @kind object;
  #L3dd660.  v2:= 3I;
  #L3dd662.  v0[v2]:= v5 @kind object;
  #L3dd666.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dd66c.  v2:= temp @kind object;
  #L3dd66e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd680.  v0:= "The first item is null" @kind object;
  #L3dd684.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd68a.  v0:= "The second item is null" @kind object;
  #L3dd68e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd694.  v0:= "The third item is null" @kind object;
  #L3dd698.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd69e.  v0:= "The fourth item is null" @kind object;
  #L3dd6a2.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd6a8.  v0:= "The fifth item is null" @kind object;
  #L3dd6ac.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd6b2.  v0:= 5I;
  #L3dd6b4.  v0:= new `java.lang.Object`[v0];
  #L3dd6b8.  v1:= 0I;
  #L3dd6ba.  v0[v1]:= v2 @kind object;
  #L3dd6be.  v2:= 1I;
  #L3dd6c0.  v0[v2]:= v3 @kind object;
  #L3dd6c4.  v2:= 2I;
  #L3dd6c6.  v0[v2]:= v4 @kind object;
  #L3dd6ca.  v2:= 3I;
  #L3dd6cc.  v0[v2]:= v5 @kind object;
  #L3dd6d0.  v2:= 4I;
  #L3dd6d2.  v0[v2]:= v6 @kind object;
  #L3dd6d6.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dd6dc.  v2:= temp @kind object;
  #L3dd6de.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd6f0.  v0:= "The first item is null" @kind object;
  #L3dd6f4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd6fa.  v0:= "The second item is null" @kind object;
  #L3dd6fe.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd704.  v0:= "The third item is null" @kind object;
  #L3dd708.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd70e.  v0:= "The fourth item is null" @kind object;
  #L3dd712.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd718.  v0:= "The fifth item is null" @kind object;
  #L3dd71c.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd722.  v0:= "The sixth item is null" @kind object;
  #L3dd726.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd72c.  v0:= 6I;
  #L3dd72e.  v0:= new `java.lang.Object`[v0];
  #L3dd732.  v1:= 0I;
  #L3dd734.  v0[v1]:= v2 @kind object;
  #L3dd738.  v2:= 1I;
  #L3dd73a.  v0[v2]:= v3 @kind object;
  #L3dd73e.  v2:= 2I;
  #L3dd740.  v0[v2]:= v4 @kind object;
  #L3dd744.  v2:= 3I;
  #L3dd746.  v0[v2]:= v5 @kind object;
  #L3dd74a.  v2:= 4I;
  #L3dd74c.  v0[v2]:= v6 @kind object;
  #L3dd750.  v2:= 5I;
  #L3dd752.  v0[v2]:= v7 @kind object;
  #L3dd756.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dd75c.  v2:= temp @kind object;
  #L3dd75e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd770.  v0:= "The first item is null" @kind object;
  #L3dd774.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd77a.  v0:= "The second item is null" @kind object;
  #L3dd77e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd784.  v0:= "The third item is null" @kind object;
  #L3dd788.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd78e.  v0:= "The fourth item is null" @kind object;
  #L3dd792.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd798.  v0:= "The fifth item is null" @kind object;
  #L3dd79c.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd7a2.  v0:= "The sixth item is null" @kind object;
  #L3dd7a6.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd7ac.  v0:= "The seventh item is null" @kind object;
  #L3dd7b0.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd7b6.  v0:= 7I;
  #L3dd7b8.  v0:= new `java.lang.Object`[v0];
  #L3dd7bc.  v1:= 0I;
  #L3dd7be.  v0[v1]:= v2 @kind object;
  #L3dd7c2.  v2:= 1I;
  #L3dd7c4.  v0[v2]:= v3 @kind object;
  #L3dd7c8.  v2:= 2I;
  #L3dd7ca.  v0[v2]:= v4 @kind object;
  #L3dd7ce.  v2:= 3I;
  #L3dd7d0.  v0[v2]:= v5 @kind object;
  #L3dd7d4.  v2:= 4I;
  #L3dd7d6.  v0[v2]:= v6 @kind object;
  #L3dd7da.  v2:= 5I;
  #L3dd7dc.  v0[v2]:= v7 @kind object;
  #L3dd7e0.  v2:= 6I;
  #L3dd7e2.  v0[v2]:= v8 @kind object;
  #L3dd7e6.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dd7ec.  v2:= temp @kind object;
  #L3dd7ee.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd800.  v0:= "The first item is null" @kind object;
  #L3dd804.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd80a.  v0:= "The second item is null" @kind object;
  #L3dd80e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd814.  v0:= "The third item is null" @kind object;
  #L3dd818.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd81e.  v0:= "The fourth item is null" @kind object;
  #L3dd822.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd828.  v0:= "The fifth item is null" @kind object;
  #L3dd82c.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd832.  v0:= "The sixth item is null" @kind object;
  #L3dd836.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd83c.  v0:= "The seventh item is null" @kind object;
  #L3dd840.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd846.  v0:= "The eighth item is null" @kind object;
  #L3dd84a.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd850.  v0:= 8I;
  #L3dd854.  v0:= new `java.lang.Object`[v0];
  #L3dd858.  v1:= 0I;
  #L3dd85a.  v0[v1]:= v2 @kind object;
  #L3dd85e.  v2:= 1I;
  #L3dd860.  v0[v2]:= v3 @kind object;
  #L3dd864.  v2:= 2I;
  #L3dd866.  v0[v2]:= v4 @kind object;
  #L3dd86a.  v2:= 3I;
  #L3dd86c.  v0[v2]:= v5 @kind object;
  #L3dd870.  v2:= 4I;
  #L3dd872.  v0[v2]:= v6 @kind object;
  #L3dd876.  v2:= 5I;
  #L3dd878.  v0[v2]:= v7 @kind object;
  #L3dd87c.  v2:= 6I;
  #L3dd87e.  v0[v2]:= v8 @kind object;
  #L3dd882.  v2:= 7I;
  #L3dd884.  v0[v2]:= v9 @kind object;
  #L3dd888.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dd88e.  v2:= temp @kind object;
  #L3dd890.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd8a4.  v0:= "The first item is null" @kind object;
  #L3dd8a8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd8ae.  v0:= "The second item is null" @kind object;
  #L3dd8b2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd8b8.  v0:= "The third item is null" @kind object;
  #L3dd8bc.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd8c2.  v0:= "The fourth item is null" @kind object;
  #L3dd8c6.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd8cc.  v0:= "The fifth item is null" @kind object;
  #L3dd8d0.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd8d6.  v0:= "The sixth item is null" @kind object;
  #L3dd8da.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd8e0.  v0:= "The seventh item is null" @kind object;
  #L3dd8e4.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd8ea.  v0:= "The eighth item is null" @kind object;
  #L3dd8ee.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd8f4.  v0:= "The ninth item is null" @kind object;
  #L3dd8f8.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd8fe.  v0:= 9I;
  #L3dd902.  v0:= new `java.lang.Object`[v0];
  #L3dd906.  v1:= 0I;
  #L3dd908.  v0[v1]:= v2 @kind object;
  #L3dd90c.  v2:= 1I;
  #L3dd90e.  v0[v2]:= v3 @kind object;
  #L3dd912.  v2:= 2I;
  #L3dd914.  v0[v2]:= v4 @kind object;
  #L3dd918.  v2:= 3I;
  #L3dd91a.  v0[v2]:= v5 @kind object;
  #L3dd91e.  v2:= 4I;
  #L3dd920.  v0[v2]:= v6 @kind object;
  #L3dd924.  v2:= 5I;
  #L3dd926.  v0[v2]:= v7 @kind object;
  #L3dd92a.  v2:= 6I;
  #L3dd92c.  v0[v2]:= v8 @kind object;
  #L3dd930.  v2:= 7I;
  #L3dd932.  v0[v2]:= v9 @kind object;
  #L3dd936.  v2:= 8I;
  #L3dd93a.  v0[v2]:= v10 @kind object;
  #L3dd93e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dd944.  v2:= temp @kind object;
  #L3dd946.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3dd958.  v0:= "The first item is null" @kind object;
  #L3dd95c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd962.  v0:= "The second item is null" @kind object;
  #L3dd966.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd96c.  v0:= "The third item is null" @kind object;
  #L3dd970.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd976.  v0:= "The fourth item is null" @kind object;
  #L3dd97a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd980.  v0:= "The fifth item is null" @kind object;
  #L3dd984.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd98a.  v0:= "The sixth item is null" @kind object;
  #L3dd98e.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd994.  v0:= "The seventh item is null" @kind object;
  #L3dd998.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd99e.  v0:= "The eighth item is null" @kind object;
  #L3dd9a2.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd9a8.  v0:= "The ninth item is null" @kind object;
  #L3dd9ac.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd9b2.  v0:= "The tenth item is null" @kind object;
  #L3dd9b6.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd9bc.  v0:= 10I;
  #L3dd9c0.  v0:= new `java.lang.Object`[v0];
  #L3dd9c4.  v1:= 0I;
  #L3dd9c6.  v0[v1]:= v2 @kind object;
  #L3dd9ca.  v2:= 1I;
  #L3dd9cc.  v0[v2]:= v3 @kind object;
  #L3dd9d0.  v2:= 2I;
  #L3dd9d2.  v0[v2]:= v4 @kind object;
  #L3dd9d6.  v2:= 3I;
  #L3dd9d8.  v0[v2]:= v5 @kind object;
  #L3dd9dc.  v2:= 4I;
  #L3dd9de.  v0[v2]:= v6 @kind object;
  #L3dd9e2.  v2:= 5I;
  #L3dd9e4.  v0[v2]:= v7 @kind object;
  #L3dd9e8.  v2:= 6I;
  #L3dd9ea.  v0[v2]:= v8 @kind object;
  #L3dd9ee.  v2:= 7I;
  #L3dd9f0.  v0[v2]:= v9 @kind object;
  #L3dd9f4.  v2:= 8I;
  #L3dd9f8.  v0[v2]:= v10 @kind object;
  #L3dd9fc.  v2:= 9I;
  #L3dda00.  v0[v2]:= v11 @kind object;
  #L3dda04.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dda0a.  v2:= temp @kind object;
  #L3dda0c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v7 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ddaa4.  v0:= "sources is null" @kind object;
  #L3ddaa8.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddaae.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3ddab2.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddab8.  v3:= temp @kind object;
  #L3ddaba.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3ddac0.  v6:= temp;
  #L3ddac2.  v4:= 0I;
  #L3ddac4.  v5:= 2147483647I;
  #L3ddaca.  v1:= v0 @kind object;
  #L3ddacc.  v2:= v7 @kind object;
  #L3ddace.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3ddad4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3ddada.  v7:= temp @kind object;
  #L3ddadc.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ddaf0.  v0:= "sources is null" @kind object;
  #L3ddaf4.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddafa.  v0:= "maxConcurrency" @kind object;
  #L3ddafe.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3ddb04.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3ddb08.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddb0e.  v3:= temp @kind object;
  #L3ddb10.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3ddb16.  v6:= temp;
  #L3ddb18.  v4:= 0I;
  #L3ddb1a.  v1:= v0 @kind object;
  #L3ddb1c.  v2:= v7 @kind object;
  #L3ddb1e.  v5:= v8;
  #L3ddb20.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3ddb26.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3ddb2c.  v7:= temp @kind object;
  #L3ddb2e.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ddb40.  v0:= "source1 is null" @kind object;
  #L3ddb44.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddb4a.  v0:= "source2 is null" @kind object;
  #L3ddb4e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddb54.  v0:= 2I;
  #L3ddb56.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3ddb5a.  v2:= 0I;
  #L3ddb5c.  v1[v2]:= v3 @kind object;
  #L3ddb60.  v3:= 1I;
  #L3ddb62.  v1[v3]:= v4 @kind object;
  #L3ddb66.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3ddb6c.  v3:= temp @kind object;
  #L3ddb6e.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddb74.  v4:= temp @kind object;
  #L3ddb76.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3ddb7c.  v3:= temp @kind object;
  #L3ddb7e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ddb90.  v0:= "source1 is null" @kind object;
  #L3ddb94.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddb9a.  v0:= "source2 is null" @kind object;
  #L3ddb9e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddba4.  v0:= "source3 is null" @kind object;
  #L3ddba8.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddbae.  v0:= 3I;
  #L3ddbb0.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3ddbb4.  v2:= 0I;
  #L3ddbb6.  v1[v2]:= v3 @kind object;
  #L3ddbba.  v3:= 1I;
  #L3ddbbc.  v1[v3]:= v4 @kind object;
  #L3ddbc0.  v3:= 2I;
  #L3ddbc2.  v1[v3]:= v5 @kind object;
  #L3ddbc6.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3ddbcc.  v3:= temp @kind object;
  #L3ddbce.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddbd4.  v4:= temp @kind object;
  #L3ddbd6.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3ddbdc.  v3:= temp @kind object;
  #L3ddbde.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ddbf0.  v0:= "source1 is null" @kind object;
  #L3ddbf4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddbfa.  v0:= "source2 is null" @kind object;
  #L3ddbfe.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddc04.  v0:= "source3 is null" @kind object;
  #L3ddc08.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddc0e.  v0:= "source4 is null" @kind object;
  #L3ddc12.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddc18.  v0:= 4I;
  #L3ddc1a.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3ddc1e.  v2:= 0I;
  #L3ddc20.  v1[v2]:= v3 @kind object;
  #L3ddc24.  v3:= 1I;
  #L3ddc26.  v1[v3]:= v4 @kind object;
  #L3ddc2a.  v3:= 2I;
  #L3ddc2c.  v1[v3]:= v5 @kind object;
  #L3ddc30.  v3:= 3I;
  #L3ddc32.  v1[v3]:= v6 @kind object;
  #L3ddc36.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3ddc3c.  v3:= temp @kind object;
  #L3ddc3e.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddc44.  v4:= temp @kind object;
  #L3ddc46.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3ddc4c.  v3:= temp @kind object;
  #L3ddc4e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Observable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ddc60.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3ddc66.  v1:= temp @kind object;
  #L3ddc68.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddc6e.  v0:= temp @kind object;
  #L3ddc70.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3ddc76.  v1:= temp @kind object;
  #L3ddc78.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Observable;.merge:(Ljava/lang/Iterable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ddc8c.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3ddc92.  v1:= temp @kind object;
  #L3ddc94.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddc9a.  v0:= temp @kind object;
  #L3ddc9c.  call temp:= `flatMap`(v1, v0, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3ddca2.  v1:= temp @kind object;
  #L3ddca4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.merge:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ddcb8.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3ddcbe.  v2:= temp @kind object;
  #L3ddcc0.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddcc6.  v0:= temp @kind object;
  #L3ddcc8.  v1:= 0I;
  #L3ddcca.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3ddcd0.  v2:= temp @kind object;
  #L3ddcd2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArray`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.mergeArray:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ddce4.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3ddcea.  v4:= temp @kind object;
  #L3ddcec.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddcf2.  v0:= temp @kind object;
  #L3ddcf4.  v1:= 0I;
  #L3ddcf6.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3ddcfc.  v2:= temp @kind object;
  #L3ddcfe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArray`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.mergeArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ddd10.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3ddd16.  v0:= temp @kind object;
  #L3ddd18.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddd1e.  v1:= temp @kind object;
  #L3ddd20.  v2:= length @variable v2;
  #L3ddd22.  call temp:= `flatMap`(v0, v1, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3ddd28.  v2:= temp @kind object;
  #L3ddd2a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArrayDelayError`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.mergeArrayDelayError:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ddd3c.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3ddd42.  v4:= temp @kind object;
  #L3ddd44.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddd4a.  v0:= temp @kind object;
  #L3ddd4c.  v1:= 1I;
  #L3ddd4e.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3ddd54.  v2:= temp @kind object;
  #L3ddd56.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArrayDelayError`(`io.reactivex.ObservableSource`[] v3 @kind object) @signature `Lio/reactivex/Observable;.mergeArrayDelayError:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ddd68.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3ddd6e.  v0:= temp @kind object;
  #L3ddd70.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddd76.  v1:= temp @kind object;
  #L3ddd78.  v3:= length @variable v3;
  #L3ddd7a.  v2:= 1I;
  #L3ddd7c.  call temp:= `flatMap`(v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3ddd82.  v3:= temp @kind object;
  #L3ddd84.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v7 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ddd98.  v0:= "sources is null" @kind object;
  #L3ddd9c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddda2.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3ddda6.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dddac.  v3:= temp @kind object;
  #L3dddae.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dddb4.  v6:= temp;
  #L3dddb6.  v4:= 1I;
  #L3dddb8.  v5:= 2147483647I;
  #L3dddbe.  v1:= v0 @kind object;
  #L3dddc0.  v2:= v7 @kind object;
  #L3dddc2.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3dddc8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dddce.  v7:= temp @kind object;
  #L3dddd0.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ddde4.  v0:= "sources is null" @kind object;
  #L3ddde8.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dddee.  v0:= "maxConcurrency" @kind object;
  #L3dddf2.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dddf8.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3dddfc.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dde02.  v3:= temp @kind object;
  #L3dde04.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dde0a.  v6:= temp;
  #L3dde0c.  v4:= 1I;
  #L3dde0e.  v1:= v0 @kind object;
  #L3dde10.  v2:= v7 @kind object;
  #L3dde12.  v5:= v8;
  #L3dde14.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3dde1a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dde20.  v7:= temp @kind object;
  #L3dde22.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3dde34.  v0:= "source1 is null" @kind object;
  #L3dde38.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dde3e.  v0:= "source2 is null" @kind object;
  #L3dde42.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dde48.  v0:= 2I;
  #L3dde4a.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3dde4e.  v2:= 0I;
  #L3dde50.  v1[v2]:= v3 @kind object;
  #L3dde54.  v3:= 1I;
  #L3dde56.  v1[v3]:= v4 @kind object;
  #L3dde5a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dde60.  v4:= temp @kind object;
  #L3dde62.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dde68.  v1:= temp @kind object;
  #L3dde6a.  call temp:= `flatMap`(v4, v1, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dde70.  v3:= temp @kind object;
  #L3dde72.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3dde84.  v0:= "source1 is null" @kind object;
  #L3dde88.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dde8e.  v0:= "source2 is null" @kind object;
  #L3dde92.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dde98.  v0:= "source3 is null" @kind object;
  #L3dde9c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddea2.  v0:= 3I;
  #L3ddea4.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3ddea8.  v2:= 0I;
  #L3ddeaa.  v1[v2]:= v3 @kind object;
  #L3ddeae.  v3:= 1I;
  #L3ddeb0.  v1[v3]:= v4 @kind object;
  #L3ddeb4.  v4:= 2I;
  #L3ddeb6.  v1[v4]:= v5 @kind object;
  #L3ddeba.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3ddec0.  v4:= temp @kind object;
  #L3ddec2.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddec8.  v5:= temp @kind object;
  #L3ddeca.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dded0.  v3:= temp @kind object;
  #L3dded2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ddee4.  v0:= "source1 is null" @kind object;
  #L3ddee8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddeee.  v0:= "source2 is null" @kind object;
  #L3ddef2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddef8.  v0:= "source3 is null" @kind object;
  #L3ddefc.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddf02.  v0:= "source4 is null" @kind object;
  #L3ddf06.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddf0c.  v0:= 4I;
  #L3ddf0e.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L3ddf12.  v2:= 0I;
  #L3ddf14.  v1[v2]:= v3 @kind object;
  #L3ddf18.  v3:= 1I;
  #L3ddf1a.  v1[v3]:= v4 @kind object;
  #L3ddf1e.  v4:= 2I;
  #L3ddf20.  v1[v4]:= v5 @kind object;
  #L3ddf24.  v4:= 3I;
  #L3ddf26.  v1[v4]:= v6 @kind object;
  #L3ddf2a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3ddf30.  v4:= temp @kind object;
  #L3ddf32.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddf38.  v5:= temp @kind object;
  #L3ddf3a.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3ddf40.  v3:= temp @kind object;
  #L3ddf42.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ddf54.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3ddf5a.  v2:= temp @kind object;
  #L3ddf5c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddf62.  v0:= temp @kind object;
  #L3ddf64.  v1:= 1I;
  #L3ddf66.  call temp:= `flatMap`(v2, v0, v1) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3ddf6c.  v2:= temp @kind object;
  #L3ddf6e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.mergeDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ddf80.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3ddf86.  v2:= temp @kind object;
  #L3ddf88.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddf8e.  v0:= temp @kind object;
  #L3ddf90.  v1:= 1I;
  #L3ddf92.  call temp:= `flatMap`(v2, v0, v1, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3ddf98.  v2:= temp @kind object;
  #L3ddf9a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.mergeDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ddfac.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3ddfb2.  v2:= temp @kind object;
  #L3ddfb4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ddfba.  v0:= temp @kind object;
  #L3ddfbc.  v1:= 1I;
  #L3ddfbe.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3ddfc4.  v2:= temp @kind object;
  #L3ddfc6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `never`() @signature `Lio/reactivex/Observable;.never:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3de08c.  v0:= `@@io.reactivex.internal.operators.observable.ObservableNever.INSTANCE` @type ^`io.reactivex.Observable` @kind object;
  #L3de090.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de096.  v0:= temp @kind object;
  #L3de098.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `range`(`int` v5 , `int` v6 ) @signature `Lio/reactivex/Observable;.range:(II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3de2a4.  if v6 < 0 then goto L3de30a;
  #L3de2a8.  if v6 != 0 then goto L3de2b6;
  #L3de2ac.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3de2b2.  v5:= temp @kind object;
  #L3de2b4.  return v5 @kind object;
  #L3de2b6.  v0:= 1I;
  #L3de2b8.  if v6 != v0 then goto L3de2ce;
  #L3de2bc.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3de2c2.  v5:= temp @kind object;
  #L3de2c4.  call temp:= `just`(v5) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3de2ca.  v5:= temp @kind object;
  #L3de2cc.  return v5 @kind object;
  #L3de2ce.  v0:= (`long`) v5 @kind i2l;
  #L3de2d0.  v2:= v6 + -1;
  #L3de2d4.  v2:= (`long`) v2 @kind i2l;
  #L3de2d6.  v0:= v0 + v2 @kind long;
  #L3de2d8.  v2:= 2147483647L;
  #L3de2de.  v4:= lcmp(v0, v2);
  #L3de2e2.  if v4 > 0 then goto L3de2fa;
  #L3de2e6.  v0:= new `io.reactivex.internal.operators.observable.ObservableRange`;
  #L3de2ea.  call `<init>`(v0, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableRange;.<init>:(II)V` @kind direct;
  #L3de2f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de2f6.  v5:= temp @kind object;
  #L3de2f8.  return v5 @kind object;
  #L3de2fa.  v5:= new `java.lang.IllegalArgumentException`;
  #L3de2fe.  v6:= "Integer overflow" @kind object;
  #L3de302.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3de308.  throw v5;
  #L3de30a.  v5:= new `java.lang.IllegalArgumentException`;
  #L3de30e.  v0:= new `java.lang.StringBuilder`;
  #L3de312.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3de318.  v1:= "count >= 0 required but it was " @kind object;
  #L3de31c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3de322.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3de328.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3de32e.  v6:= temp @kind object;
  #L3de330.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3de336.  throw v5;
}
procedure `io.reactivex.Observable` `rangeLong`(`long` v5 , `long` v7 ) @signature `Lio/reactivex/Observable;.rangeLong:(JJ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3de348.  v0:= 0L;
  #L3de34c.  v2:= lcmp(v7, v0);
  #L3de350.  if v2 < 0 then goto L3de3c0;
  #L3de354.  v2:= lcmp(v7, v0);
  #L3de358.  if v2 != 0 then goto L3de366;
  #L3de35c.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3de362.  v5:= temp @kind object;
  #L3de364.  return v5 @kind object;
  #L3de366.  v2:= 1L;
  #L3de36a.  v4:= lcmp(v7, v2);
  #L3de36e.  if v4 != 0 then goto L3de384;
  #L3de372.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3de378.  v5:= temp @kind object;
  #L3de37a.  call temp:= `just`(v5) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3de380.  v5:= temp @kind object;
  #L3de382.  return v5 @kind object;
  #L3de384.  v2:= v7 - v2 @kind long;
  #L3de388.  v2:= v2 + v5 @kind long;
  #L3de38a.  v4:= lcmp(v5, v0);
  #L3de38e.  if v4 <= 0 then goto L3de3ac;
  #L3de392.  v4:= lcmp(v2, v0);
  #L3de396.  if v4 < 0 then goto L3de39c;
  #L3de39a.  goto L3de3ac;
  #L3de39c.  v5:= new `java.lang.IllegalArgumentException`;
  #L3de3a0.  v6:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L3de3a4.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3de3aa.  throw v5;
  #L3de3ac.  v0:= new `io.reactivex.internal.operators.observable.ObservableRangeLong`;
  #L3de3b0.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableRangeLong;.<init>:(JJ)V` @kind direct;
  #L3de3b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de3bc.  v5:= temp @kind object;
  #L3de3be.  return v5 @kind object;
  #L3de3c0.  v5:= new `java.lang.IllegalArgumentException`;
  #L3de3c4.  v6:= new `java.lang.StringBuilder`;
  #L3de3c8.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3de3ce.  v0:= "count >= 0 required but it was " @kind object;
  #L3de3d2.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3de3d8.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3de3de.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3de3e4.  v6:= temp @kind object;
  #L3de3e6.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3de3ec.  throw v5;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e0ae4.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L3e0aea.  v0:= temp @kind object;
  #L3e0aec.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e0af2.  v1:= temp;
  #L3e0af4.  call temp:= `sequenceEqual`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @kind static;
  #L3e0afa.  v2:= temp @kind object;
  #L3e0afc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;I)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e0b10.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L3e0b16.  v0:= temp @kind object;
  #L3e0b18.  call temp:= `sequenceEqual`(v1, v2, v0, v3) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @kind static;
  #L3e0b1e.  v1:= temp @kind object;
  #L3e0b20.  return v1 @kind object;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e0b34.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e0b3a.  v0:= temp;
  #L3e0b3c.  call temp:= `sequenceEqual`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @kind static;
  #L3e0b42.  v1:= temp @kind object;
  #L3e0b44.  return v1 @kind object;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiPredicate` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e0b58.  v0:= "source1 is null" @kind object;
  #L3e0b5c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0b62.  v0:= "source2 is null" @kind object;
  #L3e0b66.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0b6c.  v0:= "isEqual is null" @kind object;
  #L3e0b70.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0b76.  v0:= "bufferSize" @kind object;
  #L3e0b7a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e0b80.  v0:= new `io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle`;
  #L3e0b84.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableSequenceEqualSingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)V` @kind direct;
  #L3e0b8a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0b90.  v1:= temp @kind object;
  #L3e0b92.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNext`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.switchOnNext:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3df078.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3df07e.  v0:= temp;
  #L3df080.  call temp:= `switchOnNext`(v1, v0) @signature `Lio/reactivex/Observable;.switchOnNext:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L3df086.  v1:= temp @kind object;
  #L3df088.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNext`(`io.reactivex.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchOnNext:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3df09c.  v0:= "sources is null" @kind object;
  #L3df0a0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df0a6.  v0:= "bufferSize" @kind object;
  #L3df0aa.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3df0b0.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L3df0b4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3df0ba.  v1:= temp @kind object;
  #L3df0bc.  v2:= 0I;
  #L3df0be.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3df0c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df0ca.  v3:= temp @kind object;
  #L3df0cc.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNextDelayError`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.switchOnNextDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3df0e0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3df0e6.  v0:= temp;
  #L3df0e8.  call temp:= `switchOnNextDelayError`(v1, v0) @signature `Lio/reactivex/Observable;.switchOnNextDelayError:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L3df0ee.  v1:= temp @kind object;
  #L3df0f0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNextDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchOnNextDelayError:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3df104.  v0:= "sources is null" @kind object;
  #L3df108.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df10e.  v0:= "prefetch" @kind object;
  #L3df112.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3df118.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L3df11c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3df122.  v1:= temp @kind object;
  #L3df124.  v2:= 1I;
  #L3df126.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3df12c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df132.  v3:= temp @kind object;
  #L3df134.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `timeout0`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.ObservableSource` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object) @signature `Lio/reactivex/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3df8bc.  v0:= "timeUnit is null" @kind object;
  #L3df8c0.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df8c6.  v0:= "scheduler is null" @kind object;
  #L3df8ca.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df8d0.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed`;
  #L3df8d4.  v1:= v0 @kind object;
  #L3df8d6.  v2:= v8 @kind object;
  #L3df8d8.  v3:= v9 @kind wide;
  #L3df8da.  v5:= v11 @kind object;
  #L3df8dc.  v6:= v13 @kind object;
  #L3df8de.  v7:= v12 @kind object;
  #L3df8e0.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.<init>:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3df8e6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df8ec.  v9:= temp @kind object;
  #L3df8ee.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `timeout0`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.timeout0:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3df88c.  v0:= "itemTimeoutIndicator is null" @kind object;
  #L3df890.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df896.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeout`;
  #L3df89a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout;.<init>:(Lio/reactivex/Observable;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3df8a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df8a6.  v2:= temp @kind object;
  #L3df8a8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3df900.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df906.  v0:= temp @kind object;
  #L3df908.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3df90e.  v1:= temp @kind object;
  #L3df910.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `timer`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler` v6 @kind object) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3df924.  v0:= "unit is null" @kind object;
  #L3df928.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df92e.  v0:= "scheduler is null" @kind object;
  #L3df932.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df938.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimer`;
  #L3df93c.  v1:= 0L;
  #L3df940.  call temp:= `max`(v3, v1) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3df946.  v3:= temp @kind wide;
  #L3df948.  call `<init>`(v0, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3df94e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df954.  v3:= temp @kind object;
  #L3df956.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `unsafeCreate`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.unsafeCreate:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dfa0c.  v0:= "source is null" @kind object;
  #L3dfa10.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfa16.  v0:= "onSubscribe is null" @kind object;
  #L3dfa1a.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfa20.  v0:= instanceof @variable v1 @type ^`io.reactivex.Observable` @kind boolean;
  #L3dfa24.  if v0 != 0 then goto L3dfa3c;
  #L3dfa28.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromUnsafeSource`;
  #L3dfa2c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3dfa32.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dfa38.  v1:= temp @kind object;
  #L3dfa3a.  return v1 @kind object;
  #L3dfa3c.  v1:= new `java.lang.IllegalArgumentException`;
  #L3dfa40.  v0:= "unsafeCreate(Observable) should be upgraded" @kind object;
  #L3dfa44.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dfa4a.  throw v1;
}
procedure `io.reactivex.Observable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dfa8c.  v0:= 1I;
  #L3dfa8e.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Observable;` @kind static;
  #L3dfa94.  v1:= temp @kind object;
  #L3dfa96.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dfaa8.  v0:= "resourceSupplier is null" @kind object;
  #L3dfaac.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfab2.  v0:= "sourceSupplier is null" @kind object;
  #L3dfab6.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfabc.  v0:= "disposer is null" @kind object;
  #L3dfac0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfac6.  v0:= new `io.reactivex.internal.operators.observable.ObservableUsing`;
  #L3dfaca.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L3dfad0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dfad6.  v1:= temp @kind object;
  #L3dfad8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `wrap`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e00d0.  v0:= "source is null" @kind object;
  #L3e00d4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e00da.  v0:= instanceof @variable v1 @type ^`io.reactivex.Observable` @kind boolean;
  #L3e00de.  if v0 == 0 then goto L3e00f0;
  #L3e00e2.  v1:= (`io.reactivex.Observable`) v1 @kind object;
  #L3e00e6.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e00ec.  v1:= temp @kind object;
  #L3e00ee.  return v1 @kind object;
  #L3e00f0.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromUnsafeSource`;
  #L3e00f4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3e00fa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e0100.  v1:= temp @kind object;
  #L3e0102.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object, `io.reactivex.functions.Function9` v12 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function9;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e0114.  v0:= "source1 is null" @kind object;
  #L3e0118.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e011e.  v0:= "source2 is null" @kind object;
  #L3e0122.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0128.  v0:= "source3 is null" @kind object;
  #L3e012c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0132.  v0:= "source4 is null" @kind object;
  #L3e0136.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e013c.  v0:= "source5 is null" @kind object;
  #L3e0140.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0146.  v0:= "source6 is null" @kind object;
  #L3e014a.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0150.  v0:= "source7 is null" @kind object;
  #L3e0154.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e015a.  v0:= "source8 is null" @kind object;
  #L3e015e.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0164.  v0:= "source9 is null" @kind object;
  #L3e0168.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e016e.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function9;)Lio/reactivex/functions/Function;` @kind static;
  #L3e0174.  v12:= temp @kind object;
  #L3e0176.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e017c.  v0:= temp;
  #L3e017e.  v1:= 9I;
  #L3e0182.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3e0186.  v2:= 0I;
  #L3e0188.  v1[v2]:= v3 @kind object;
  #L3e018c.  v3:= 1I;
  #L3e018e.  v1[v3]:= v4 @kind object;
  #L3e0192.  v3:= 2I;
  #L3e0194.  v1[v3]:= v5 @kind object;
  #L3e0198.  v3:= 3I;
  #L3e019a.  v1[v3]:= v6 @kind object;
  #L3e019e.  v3:= 4I;
  #L3e01a0.  v1[v3]:= v7 @kind object;
  #L3e01a4.  v3:= 5I;
  #L3e01a6.  v1[v3]:= v8 @kind object;
  #L3e01aa.  v3:= 6I;
  #L3e01ac.  v1[v3]:= v9 @kind object;
  #L3e01b0.  v3:= 7I;
  #L3e01b2.  v1[v3]:= v10 @kind object;
  #L3e01b6.  v3:= 8I;
  #L3e01ba.  v1[v3]:= v11 @kind object;
  #L3e01be.  call temp:= `zipArray`(v12, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e01c4.  v3:= temp @kind object;
  #L3e01c6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.functions.Function8` v11 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function8;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e01d8.  v0:= "source1 is null" @kind object;
  #L3e01dc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e01e2.  v0:= "source2 is null" @kind object;
  #L3e01e6.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e01ec.  v0:= "source3 is null" @kind object;
  #L3e01f0.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e01f6.  v0:= "source4 is null" @kind object;
  #L3e01fa.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0200.  v0:= "source5 is null" @kind object;
  #L3e0204.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e020a.  v0:= "source6 is null" @kind object;
  #L3e020e.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0214.  v0:= "source7 is null" @kind object;
  #L3e0218.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e021e.  v0:= "source8 is null" @kind object;
  #L3e0222.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0228.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function8;)Lio/reactivex/functions/Function;` @kind static;
  #L3e022e.  v11:= temp @kind object;
  #L3e0230.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e0236.  v0:= temp;
  #L3e0238.  v1:= 8I;
  #L3e023c.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3e0240.  v2:= 0I;
  #L3e0242.  v1[v2]:= v3 @kind object;
  #L3e0246.  v3:= 1I;
  #L3e0248.  v1[v3]:= v4 @kind object;
  #L3e024c.  v3:= 2I;
  #L3e024e.  v1[v3]:= v5 @kind object;
  #L3e0252.  v3:= 3I;
  #L3e0254.  v1[v3]:= v6 @kind object;
  #L3e0258.  v3:= 4I;
  #L3e025a.  v1[v3]:= v7 @kind object;
  #L3e025e.  v3:= 5I;
  #L3e0260.  v1[v3]:= v8 @kind object;
  #L3e0264.  v3:= 6I;
  #L3e0266.  v1[v3]:= v9 @kind object;
  #L3e026a.  v3:= 7I;
  #L3e026c.  v1[v3]:= v10 @kind object;
  #L3e0270.  call temp:= `zipArray`(v11, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e0276.  v3:= temp @kind object;
  #L3e0278.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.functions.Function7` v10 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function7;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e028c.  v0:= "source1 is null" @kind object;
  #L3e0290.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0296.  v0:= "source2 is null" @kind object;
  #L3e029a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e02a0.  v0:= "source3 is null" @kind object;
  #L3e02a4.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e02aa.  v0:= "source4 is null" @kind object;
  #L3e02ae.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e02b4.  v0:= "source5 is null" @kind object;
  #L3e02b8.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e02be.  v0:= "source6 is null" @kind object;
  #L3e02c2.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e02c8.  v0:= "source7 is null" @kind object;
  #L3e02cc.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e02d2.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function7;)Lio/reactivex/functions/Function;` @kind static;
  #L3e02d8.  v10:= temp @kind object;
  #L3e02da.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e02e0.  v0:= temp;
  #L3e02e2.  v1:= 7I;
  #L3e02e4.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3e02e8.  v2:= 0I;
  #L3e02ea.  v1[v2]:= v3 @kind object;
  #L3e02ee.  v3:= 1I;
  #L3e02f0.  v1[v3]:= v4 @kind object;
  #L3e02f4.  v3:= 2I;
  #L3e02f6.  v1[v3]:= v5 @kind object;
  #L3e02fa.  v3:= 3I;
  #L3e02fc.  v1[v3]:= v6 @kind object;
  #L3e0300.  v3:= 4I;
  #L3e0302.  v1[v3]:= v7 @kind object;
  #L3e0306.  v3:= 5I;
  #L3e0308.  v1[v3]:= v8 @kind object;
  #L3e030c.  v3:= 6I;
  #L3e030e.  v1[v3]:= v9 @kind object;
  #L3e0312.  call temp:= `zipArray`(v10, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e0318.  v3:= temp @kind object;
  #L3e031a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function6` v9 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function6;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e032c.  v0:= "source1 is null" @kind object;
  #L3e0330.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0336.  v0:= "source2 is null" @kind object;
  #L3e033a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0340.  v0:= "source3 is null" @kind object;
  #L3e0344.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e034a.  v0:= "source4 is null" @kind object;
  #L3e034e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0354.  v0:= "source5 is null" @kind object;
  #L3e0358.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e035e.  v0:= "source6 is null" @kind object;
  #L3e0362.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0368.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function6;)Lio/reactivex/functions/Function;` @kind static;
  #L3e036e.  v9:= temp @kind object;
  #L3e0370.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e0376.  v0:= temp;
  #L3e0378.  v1:= 6I;
  #L3e037a.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3e037e.  v2:= 0I;
  #L3e0380.  v1[v2]:= v3 @kind object;
  #L3e0384.  v3:= 1I;
  #L3e0386.  v1[v3]:= v4 @kind object;
  #L3e038a.  v3:= 2I;
  #L3e038c.  v1[v3]:= v5 @kind object;
  #L3e0390.  v3:= 3I;
  #L3e0392.  v1[v3]:= v6 @kind object;
  #L3e0396.  v3:= 4I;
  #L3e0398.  v1[v3]:= v7 @kind object;
  #L3e039c.  v3:= 5I;
  #L3e039e.  v1[v3]:= v8 @kind object;
  #L3e03a2.  call temp:= `zipArray`(v9, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e03a8.  v3:= temp @kind object;
  #L3e03aa.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.functions.Function5` v8 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e03bc.  v0:= "source1 is null" @kind object;
  #L3e03c0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e03c6.  v0:= "source2 is null" @kind object;
  #L3e03ca.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e03d0.  v0:= "source3 is null" @kind object;
  #L3e03d4.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e03da.  v0:= "source4 is null" @kind object;
  #L3e03de.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e03e4.  v0:= "source5 is null" @kind object;
  #L3e03e8.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e03ee.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L3e03f4.  v8:= temp @kind object;
  #L3e03f6.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e03fc.  v0:= temp;
  #L3e03fe.  v1:= 5I;
  #L3e0400.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3e0404.  v2:= 0I;
  #L3e0406.  v1[v2]:= v3 @kind object;
  #L3e040a.  v3:= 1I;
  #L3e040c.  v1[v3]:= v4 @kind object;
  #L3e0410.  v3:= 2I;
  #L3e0412.  v1[v3]:= v5 @kind object;
  #L3e0416.  v3:= 3I;
  #L3e0418.  v1[v3]:= v6 @kind object;
  #L3e041c.  v3:= 4I;
  #L3e041e.  v1[v3]:= v7 @kind object;
  #L3e0422.  call temp:= `zipArray`(v8, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e0428.  v3:= temp @kind object;
  #L3e042a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.functions.Function4` v7 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e043c.  v0:= "source1 is null" @kind object;
  #L3e0440.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0446.  v0:= "source2 is null" @kind object;
  #L3e044a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0450.  v0:= "source3 is null" @kind object;
  #L3e0454.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e045a.  v0:= "source4 is null" @kind object;
  #L3e045e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0464.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L3e046a.  v7:= temp @kind object;
  #L3e046c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e0472.  v0:= temp;
  #L3e0474.  v1:= 4I;
  #L3e0476.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3e047a.  v2:= 0I;
  #L3e047c.  v1[v2]:= v3 @kind object;
  #L3e0480.  v3:= 1I;
  #L3e0482.  v1[v3]:= v4 @kind object;
  #L3e0486.  v3:= 2I;
  #L3e0488.  v1[v3]:= v5 @kind object;
  #L3e048c.  v3:= 3I;
  #L3e048e.  v1[v3]:= v6 @kind object;
  #L3e0492.  call temp:= `zipArray`(v7, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e0498.  v3:= temp @kind object;
  #L3e049a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.functions.Function3` v6 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e04ac.  v0:= "source1 is null" @kind object;
  #L3e04b0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e04b6.  v0:= "source2 is null" @kind object;
  #L3e04ba.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e04c0.  v0:= "source3 is null" @kind object;
  #L3e04c4.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e04ca.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L3e04d0.  v6:= temp @kind object;
  #L3e04d2.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e04d8.  v0:= temp;
  #L3e04da.  v1:= 3I;
  #L3e04dc.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3e04e0.  v2:= 0I;
  #L3e04e2.  v1[v2]:= v3 @kind object;
  #L3e04e6.  v3:= 1I;
  #L3e04e8.  v1[v3]:= v4 @kind object;
  #L3e04ec.  v3:= 2I;
  #L3e04ee.  v1[v3]:= v5 @kind object;
  #L3e04f2.  call temp:= `zipArray`(v6, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e04f8.  v3:= temp @kind object;
  #L3e04fa.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e050c.  v0:= "source1 is null" @kind object;
  #L3e0510.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0516.  v0:= "source2 is null" @kind object;
  #L3e051a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0520.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3e0526.  v5:= temp @kind object;
  #L3e0528.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e052e.  v0:= temp;
  #L3e0530.  v1:= 2I;
  #L3e0532.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3e0536.  v2:= 0I;
  #L3e0538.  v1[v2]:= v3 @kind object;
  #L3e053c.  v3:= 1I;
  #L3e053e.  v1[v3]:= v4 @kind object;
  #L3e0542.  call temp:= `zipArray`(v5, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e0548.  v3:= temp @kind object;
  #L3e054a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e055c.  v0:= "source1 is null" @kind object;
  #L3e0560.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0566.  v0:= "source2 is null" @kind object;
  #L3e056a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0570.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3e0576.  v5:= temp @kind object;
  #L3e0578.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e057e.  v0:= temp;
  #L3e0580.  v1:= 2I;
  #L3e0582.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L3e0586.  v2:= 0I;
  #L3e0588.  v1[v2]:= v3 @kind object;
  #L3e058c.  v3:= 1I;
  #L3e058e.  v1[v3]:= v4 @kind object;
  #L3e0592.  call temp:= `zipArray`(v5, v6, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e0598.  v3:= temp @kind object;
  #L3e059a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.functions.BiFunction` v4 @kind object, `boolean` v5 , `int` v6 ) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e05ac.  v0:= "source1 is null" @kind object;
  #L3e05b0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e05b6.  v0:= "source2 is null" @kind object;
  #L3e05ba.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e05c0.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3e05c6.  v4:= temp @kind object;
  #L3e05c8.  v0:= 2I;
  #L3e05ca.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3e05ce.  v1:= 0I;
  #L3e05d0.  v0[v1]:= v2 @kind object;
  #L3e05d4.  v2:= 1I;
  #L3e05d6.  v0[v2]:= v3 @kind object;
  #L3e05da.  call temp:= `zipArray`(v4, v5, v6, v0) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3e05e0.  v2:= temp @kind object;
  #L3e05e2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e05f4.  v0:= "zipper is null" @kind object;
  #L3e05f8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e05fe.  v0:= "sources is null" @kind object;
  #L3e0602.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0608.  v0:= new `io.reactivex.internal.operators.observable.ObservableToList`;
  #L3e060c.  v1:= 16I;
  #L3e0610.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3e0616.  call temp:= `zipIterable`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.zipIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L3e061c.  v2:= temp @kind object;
  #L3e061e.  call temp:= `flatMap`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3e0624.  v2:= temp @kind object;
  #L3e0626.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e062c.  v2:= temp @kind object;
  #L3e062e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object) @signature `Lio/reactivex/Observable;.zip:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e0640.  v0:= "zipper is null" @kind object;
  #L3e0644.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e064a.  v0:= "sources is null" @kind object;
  #L3e064e.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0654.  v0:= new `io.reactivex.internal.operators.observable.ObservableZip`;
  #L3e0658.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e065e.  v5:= temp;
  #L3e0660.  v2:= 0I;
  #L3e0662.  v6:= 0I;
  #L3e0664.  v1:= v0 @kind object;
  #L3e0666.  v3:= v7 @kind object;
  #L3e0668.  v4:= v8 @kind object;
  #L3e066a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3e0670.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e0676.  v7:= temp @kind object;
  #L3e0678.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `zipArray`(`io.reactivex.functions.Function` v7 @kind object, `boolean` v8 , `int` v9 , `io.reactivex.ObservableSource`[] v10 @kind object) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e068c.  v0:= length @variable v10;
  #L3e068e.  if v0 != 0 then goto L3e069c;
  #L3e0692.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3e0698.  v7:= temp @kind object;
  #L3e069a.  return v7 @kind object;
  #L3e069c.  v0:= "zipper is null" @kind object;
  #L3e06a0.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e06a6.  v0:= "bufferSize" @kind object;
  #L3e06aa.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e06b0.  v0:= new `io.reactivex.internal.operators.observable.ObservableZip`;
  #L3e06b4.  v3:= 0I;
  #L3e06b6.  v1:= v0 @kind object;
  #L3e06b8.  v2:= v10 @kind object;
  #L3e06ba.  v4:= v7 @kind object;
  #L3e06bc.  v5:= v9;
  #L3e06be.  v6:= v8;
  #L3e06c0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3e06c6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e06cc.  v7:= temp @kind object;
  #L3e06ce.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `zipIterable`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/Observable;.zipIterable:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e06e0.  v0:= "zipper is null" @kind object;
  #L3e06e4.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e06ea.  v0:= "sources is null" @kind object;
  #L3e06ee.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e06f4.  v0:= "bufferSize" @kind object;
  #L3e06f8.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e06fe.  v0:= new `io.reactivex.internal.operators.observable.ObservableZip`;
  #L3e0702.  v2:= 0I;
  #L3e0704.  v1:= v0 @kind object;
  #L3e0706.  v3:= v7 @kind object;
  #L3e0708.  v4:= v8 @kind object;
  #L3e070a.  v5:= v10;
  #L3e070c.  v6:= v9;
  #L3e070e.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3e0714.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e071a.  v7:= temp @kind object;
  #L3e071c.  return v7 @kind object;
}
procedure `io.reactivex.Single` `all`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.all:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e07dc.  v0:= "predicate is null" @kind object;
  #L3e07e0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e07e6.  v0:= new `io.reactivex.internal.operators.observable.ObservableAllSingle`;
  #L3e07ea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3e07f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e07f6.  v2:= temp @kind object;
  #L3e07f8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `ambWith`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.ambWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dafe4.  v0:= "other is null" @kind object;
  #L3dafe8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dafee.  v0:= 2I;
  #L3daff0.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3daff4.  v1:= 0I;
  #L3daff6.  v0[v1]:= v2 @kind object;
  #L3daffa.  v1:= 1I;
  #L3daffc.  v0[v1]:= v3 @kind object;
  #L3db000.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/Observable;.ambArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3db006.  v3:= temp @kind object;
  #L3db008.  return v3 @kind object;
}
procedure `io.reactivex.Single` `any`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.any:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e080c.  v0:= "predicate is null" @kind object;
  #L3e0810.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0816.  v0:= new `io.reactivex.internal.operators.observable.ObservableAnySingle`;
  #L3e081a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3e0820.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0826.  v2:= temp @kind object;
  #L3e0828.  return v2 @kind object;
}
procedure `java.lang.Object` `as`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableConverter` v2 @kind object) @signature `Lio/reactivex/Observable;.as:(Lio/reactivex/ObservableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e12b0.  v0:= "converter is null" @kind object;
  #L3e12b4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e12ba.  v2:= temp @kind object;
  #L3e12bc.  v2:= (`io.reactivex.ObservableConverter`) v2 @kind object;
  #L3e12c0.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/ObservableConverter;.apply:(Lio/reactivex/Observable;)Ljava/lang/Object;` @kind interface;
  #L3e12c6.  v2:= temp @kind object;
  #L3e12c8.  return v2 @kind object;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingFirst:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e12dc.  v0:= new `io.reactivex.internal.observers.BlockingFirstObserver`;
  #L3e12e0.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L3e12e6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e12ec.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3e12f2.  v0:= temp @kind object;
  #L3e12f4.  if v0 == 0 then goto L3e12fa;
  #L3e12f8.  return v0 @kind object;
  #L3e12fa.  v0:= new `java.util.NoSuchElementException`;
  #L3e12fe.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3e1304.  throw v0;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.blockingFirst:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1318.  v0:= new `io.reactivex.internal.observers.BlockingFirstObserver`;
  #L3e131c.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L3e1322.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e1328.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3e132e.  v0:= temp @kind object;
  #L3e1330.  if v0 == 0 then goto L3e1336;
  #L3e1334.  v2:= v0 @kind object;
  #L3e1336.  return v2 @kind object;
}
procedure `void` `blockingForEach`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingForEach:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e1494.  call temp:= `blockingIterable`(v2) @signature `Lio/reactivex/Observable;.blockingIterable:()Ljava/lang/Iterable;` @kind virtual;
  #L3e149a.  v0:= temp @kind object;
  #L3e149c.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e14a2.  v0:= temp @kind object;
  #L3e14a4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e14aa.  v1:= temp;
  #L3e14ac.  if v1 == 0 then goto L3e14dc;
  #L3e14b0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e14b6.  v1:= temp @kind object;
  #L3e14b8.  call `accept`(v3, v1) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L3e14be.  goto L3e14a4;
  #L3e14c0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e14c2.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e14c8.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L3e14cc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L3e14d2.  call temp:= `wrapOrThrow`(v3) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3e14d8.  v3:= temp @kind object;
  #L3e14da.  throw v3;
  #L3e14dc.  return @kind void;
  catch `java.lang.Throwable` @[L3e14b0..L3e14be] goto L3e14c0;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingIterable:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1210.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3e1216.  v0:= temp;
  #L3e1218.  call temp:= `blockingIterable`(v1, v0) @signature `Lio/reactivex/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L3e121e.  v0:= temp @kind object;
  #L3e1220.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1234.  v0:= "bufferSize" @kind object;
  #L3e1238.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e123e.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableIterable`;
  #L3e1242.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableIterable;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3e1248.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingLast:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1348.  v0:= new `io.reactivex.internal.observers.BlockingLastObserver`;
  #L3e134c.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L3e1352.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e1358.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3e135e.  v0:= temp @kind object;
  #L3e1360.  if v0 == 0 then goto L3e1366;
  #L3e1364.  return v0 @kind object;
  #L3e1366.  v0:= new `java.util.NoSuchElementException`;
  #L3e136a.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3e1370.  throw v0;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.blockingLast:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1384.  v0:= new `io.reactivex.internal.observers.BlockingLastObserver`;
  #L3e1388.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L3e138e.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e1394.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3e139a.  v0:= temp @kind object;
  #L3e139c.  if v0 == 0 then goto L3e13a2;
  #L3e13a0.  v2:= v0 @kind object;
  #L3e13a2.  return v2 @kind object;
}
procedure `java.lang.Iterable` `blockingLatest`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingLatest:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e125c.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableLatest`;
  #L3e1260.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableLatest;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3e1266.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingMostRecent`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.blockingMostRecent:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1278.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableMostRecent`;
  #L3e127c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3e1282.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingNext`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingNext:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1294.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableNext`;
  #L3e1298.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableNext;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3e129e.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingSingle:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e13b4.  call temp:= `singleElement`(v1) @signature `Lio/reactivex/Observable;.singleElement:()Lio/reactivex/Maybe;` @kind virtual;
  #L3e13ba.  v0:= temp @kind object;
  #L3e13bc.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/Maybe;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3e13c2.  v0:= temp @kind object;
  #L3e13c4.  if v0 == 0 then goto L3e13ca;
  #L3e13c8.  return v0 @kind object;
  #L3e13ca.  v0:= new `java.util.NoSuchElementException`;
  #L3e13ce.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3e13d4.  throw v0;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.Observable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Observable;.blockingSingle:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e13e8.  call temp:= `single`(v0, v1) @signature `Lio/reactivex/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/Single;` @kind virtual;
  #L3e13ee.  v1:= temp @kind object;
  #L3e13f0.  call temp:= `blockingGet`(v1) @signature `Lio/reactivex/Single;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L3e13f6.  v1:= temp @kind object;
  #L3e13f8.  return v1 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v0 @kind this) @signature `Lio/reactivex/Observable;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e14fc.  call `subscribe`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;)V` @kind static;
  #L3e1502.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e1514.  call `subscribe`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/Observer;)V` @kind static;
  #L3e151a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e152c.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e1530.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e1534.  call `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind static;
  #L3e153a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e154c.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e1550.  call `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind static;
  #L3e1556.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e1568.  call `subscribe`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind static;
  #L3e156e.  return @kind void;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/Observable;.buffer:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3db01c.  call temp:= `buffer`(v0, v1, v1) @signature `Lio/reactivex/Observable;.buffer:(II)Lio/reactivex/Observable;` @kind virtual;
  #L3db022.  v1:= temp @kind object;
  #L3db024.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/Observable;.buffer:(II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db038.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3db03e.  v0:= temp @kind object;
  #L3db040.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.buffer:(IILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3db046.  v2:= temp @kind object;
  #L3db048.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `int` v2 , `int` v3 , `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.buffer:(IILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db05c.  v0:= "count" @kind object;
  #L3db060.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3db066.  v0:= "skip" @kind object;
  #L3db06a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3db070.  v0:= "bufferSupplier is null" @kind object;
  #L3db074.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db07a.  v0:= new `io.reactivex.internal.operators.observable.ObservableBuffer`;
  #L3db07e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableBuffer;.<init>:(Lio/reactivex/ObservableSource;IILjava/util/concurrent/Callable;)V` @kind direct;
  #L3db084.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3db08a.  v2:= temp @kind object;
  #L3db08c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v0 @kind this, `int` v1 , `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.buffer:(ILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3db0a0.  call temp:= `buffer`(v0, v1, v1, v2) @signature `Lio/reactivex/Observable;.buffer:(IILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3db0a6.  v1:= temp @kind object;
  #L3db0a8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3db330.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3db336.  v6:= temp @kind object;
  #L3db338.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3db33e.  v7:= temp @kind object;
  #L3db340.  v0:= v8 @kind object;
  #L3db342.  v1:= v9 @kind wide;
  #L3db344.  v3:= v11 @kind wide;
  #L3db346.  v5:= v13 @kind object;
  #L3db348.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3db34e.  v9:= temp @kind object;
  #L3db350.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.Scheduler` v14 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3db364.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3db36a.  v7:= temp @kind object;
  #L3db36c.  v0:= v8 @kind object;
  #L3db36e.  v1:= v9 @kind wide;
  #L3db370.  v3:= v11 @kind wide;
  #L3db372.  v5:= v13 @kind object;
  #L3db374.  v6:= v14 @kind object;
  #L3db376.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3db37c.  v9:= temp @kind object;
  #L3db37e.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v12 @kind this, `long` v13 , `long` v15 , `java.util.concurrent.TimeUnit` v17 @kind object, `io.reactivex.Scheduler` v18 @kind object, `java.util.concurrent.Callable` v19 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3db390.  v0:= "unit is null" @kind object;
  #L3db394.  v7:= v17 @kind object;
  #L3db398.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db39e.  v0:= "scheduler is null" @kind object;
  #L3db3a2.  v8:= v18 @kind object;
  #L3db3a6.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db3ac.  v0:= "bufferSupplier is null" @kind object;
  #L3db3b0.  v9:= v19 @kind object;
  #L3db3b4.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db3ba.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed`;
  #L3db3be.  v10:= 2147483647I;
  #L3db3c4.  v11:= 0I;
  #L3db3c6.  v1:= v0 @kind object;
  #L3db3c8.  v2:= v12 @kind object;
  #L3db3ca.  v3:= v13 @kind wide;
  #L3db3cc.  v5:= v15 @kind wide;
  #L3db3ce.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;IZ)V` @kind direct;
  #L3db3d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3db3da.  v0:= temp @kind object;
  #L3db3dc.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3db208.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3db20e.  v4:= temp @kind object;
  #L3db210.  v5:= 2147483647I;
  #L3db216.  v0:= v6 @kind object;
  #L3db218.  v1:= v7 @kind wide;
  #L3db21a.  v3:= v9 @kind object;
  #L3db21c.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L3db222.  v7:= temp @kind object;
  #L3db224.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `int` v10 ) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3db238.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3db23e.  v4:= temp @kind object;
  #L3db240.  v0:= v6 @kind object;
  #L3db242.  v1:= v7 @kind wide;
  #L3db244.  v3:= v9 @kind object;
  #L3db246.  v5:= v10;
  #L3db248.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L3db24e.  v7:= temp @kind object;
  #L3db250.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3db264.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3db26a.  v6:= temp @kind object;
  #L3db26c.  v5:= 2147483647I;
  #L3db272.  v7:= 0I;
  #L3db274.  v0:= v8 @kind object;
  #L3db276.  v1:= v9 @kind wide;
  #L3db278.  v3:= v11 @kind object;
  #L3db27a.  v4:= v12 @kind object;
  #L3db27c.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ILjava/util/concurrent/Callable;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3db282.  v9:= temp @kind object;
  #L3db284.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `int` v13 ) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3db298.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3db29e.  v6:= temp @kind object;
  #L3db2a0.  v7:= 0I;
  #L3db2a2.  v0:= v8 @kind object;
  #L3db2a4.  v1:= v9 @kind wide;
  #L3db2a6.  v3:= v11 @kind object;
  #L3db2a8.  v4:= v12 @kind object;
  #L3db2aa.  v5:= v13;
  #L3db2ac.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ILjava/util/concurrent/Callable;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3db2b2.  v9:= temp @kind object;
  #L3db2b4.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v12 @kind this, `long` v13 , `java.util.concurrent.TimeUnit` v15 @kind object, `io.reactivex.Scheduler` v16 @kind object, `int` v17 , `java.util.concurrent.Callable` v18 @kind object, `boolean` v19 ) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ILjava/util/concurrent/Callable;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3db2c8.  v0:= "unit is null" @kind object;
  #L3db2cc.  v7:= v15 @kind object;
  #L3db2ce.  call temp:= `requireNonNull`(v15, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db2d4.  v0:= "scheduler is null" @kind object;
  #L3db2d8.  v8:= v16 @kind object;
  #L3db2dc.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db2e2.  v0:= "bufferSupplier is null" @kind object;
  #L3db2e6.  v9:= v18 @kind object;
  #L3db2ea.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db2f0.  v0:= "count" @kind object;
  #L3db2f4.  v10:= v17;
  #L3db2f8.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3db2fe.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed`;
  #L3db302.  v1:= v0 @kind object;
  #L3db304.  v2:= v12 @kind object;
  #L3db306.  v3:= v13 @kind wide;
  #L3db308.  v5:= v13 @kind wide;
  #L3db30a.  v11:= v19;
  #L3db30e.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;IZ)V` @kind direct;
  #L3db314.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3db31a.  v0:= temp @kind object;
  #L3db31c.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db0bc.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3db0c2.  v0:= temp @kind object;
  #L3db0c4.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3db0ca.  v2:= temp @kind object;
  #L3db0cc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db0e0.  v0:= "initialCapacity" @kind object;
  #L3db0e4.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3db0ea.  call temp:= `createArrayList`(v3) @signature `Lio/reactivex/internal/functions/Functions;.createArrayList:(I)Ljava/util/concurrent/Callable;` @kind static;
  #L3db0f0.  v3:= temp @kind object;
  #L3db0f2.  call temp:= `buffer`(v1, v2, v3) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3db0f8.  v2:= temp @kind object;
  #L3db0fa.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db10c.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3db112.  v0:= temp @kind object;
  #L3db114.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3db11a.  v2:= temp @kind object;
  #L3db11c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db130.  v0:= "openingIndicator is null" @kind object;
  #L3db134.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db13a.  v0:= "closingIndicator is null" @kind object;
  #L3db13e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db144.  v0:= "bufferSupplier is null" @kind object;
  #L3db148.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db14e.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferBoundary`;
  #L3db152.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3db158.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3db15e.  v2:= temp @kind object;
  #L3db160.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db174.  v0:= "boundary is null" @kind object;
  #L3db178.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db17e.  v0:= "bufferSupplier is null" @kind object;
  #L3db182.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db188.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferExactBoundary`;
  #L3db18c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3db192.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3db198.  v2:= temp @kind object;
  #L3db19a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db1ac.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3db1b2.  v0:= temp @kind object;
  #L3db1b4.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/Observable;.buffer:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3db1ba.  v2:= temp @kind object;
  #L3db1bc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db1d0.  v0:= "boundarySupplier is null" @kind object;
  #L3db1d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db1da.  v0:= "bufferSupplier is null" @kind object;
  #L3db1de.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db1e4.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier`;
  #L3db1e8.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferBoundarySupplier;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3db1ee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3db1f4.  v2:= temp @kind object;
  #L3db1f6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `cache`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.cache:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db3f0.  call temp:= `from`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCache;.from:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3db3f6.  v0:= temp @kind object;
  #L3db3f8.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `cacheWithInitialCapacity`(`io.reactivex.Observable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/Observable;.cacheWithInitialCapacity:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3db40c.  call temp:= `from`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCache;.from:(Lio/reactivex/Observable;I)Lio/reactivex/Observable;` @kind static;
  #L3db412.  v1:= temp @kind object;
  #L3db414.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `cast`(`io.reactivex.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3db428.  v0:= "clazz is null" @kind object;
  #L3db42c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3db432.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/functions/Function;` @kind static;
  #L3db438.  v2:= temp @kind object;
  #L3db43a.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3db440.  v2:= temp @kind object;
  #L3db442.  return v2 @kind object;
}
procedure `io.reactivex.Single` `collect`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e083c.  v0:= "initialValueSupplier is null" @kind object;
  #L3e0840.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0846.  v0:= "collector is null" @kind object;
  #L3e084a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0850.  v0:= new `io.reactivex.internal.operators.observable.ObservableCollectSingle`;
  #L3e0854.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCollectSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L3e085a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0860.  v2:= temp @kind object;
  #L3e0862.  return v2 @kind object;
}
procedure `io.reactivex.Single` `collectInto`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/Observable;.collectInto:(Ljava/lang/Object;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0874.  v0:= "initialValue is null" @kind object;
  #L3e0878.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e087e.  call temp:= `justCallable`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L3e0884.  v2:= temp @kind object;
  #L3e0886.  call temp:= `collect`(v1, v2, v3) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3e088c.  v2:= temp @kind object;
  #L3e088e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `compose`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableTransformer` v2 @kind object) @signature `Lio/reactivex/Observable;.compose:(Lio/reactivex/ObservableTransformer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dbabc.  v0:= "composer is null" @kind object;
  #L3dbac0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbac6.  v2:= temp @kind object;
  #L3dbac8.  v2:= (`io.reactivex.ObservableTransformer`) v2 @kind object;
  #L3dbacc.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/ObservableTransformer;.apply:(Lio/reactivex/Observable;)Lio/reactivex/ObservableSource;` @kind interface;
  #L3dbad2.  v2:= temp @kind object;
  #L3dbad4.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dbada.  v2:= temp @kind object;
  #L3dbadc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dbf3c.  v0:= 2I;
  #L3dbf3e.  call temp:= `concatMap`(v1, v2, v0) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3dbf44.  v2:= temp @kind object;
  #L3dbf46.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dbf58.  v0:= "mapper is null" @kind object;
  #L3dbf5c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbf62.  v0:= "prefetch" @kind object;
  #L3dbf66.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dbf6c.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3dbf70.  if v0 == 0 then goto L3dbf9a;
  #L3dbf74.  v4:= v2 @kind object;
  #L3dbf76.  v4:= (`io.reactivex.internal.fuseable.ScalarCallable`) v4 @kind object;
  #L3dbf7a.  call temp:= `call`(v4) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3dbf80.  v4:= temp @kind object;
  #L3dbf82.  if v4 != 0 then goto L3dbf90;
  #L3dbf86.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3dbf8c.  v3:= temp @kind object;
  #L3dbf8e.  return v3 @kind object;
  #L3dbf90.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3dbf96.  v3:= temp @kind object;
  #L3dbf98.  return v3 @kind object;
  #L3dbf9a.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3dbf9e.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dbfa2.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3dbfa8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dbfae.  v3:= temp @kind object;
  #L3dbfb0.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dac40.  v0:= 2I;
  #L3dac42.  call temp:= `concatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/Observable;.concatMapCompletable:(Lio/reactivex/functions/Function;I)Lio/reactivex/Completable;` @kind virtual;
  #L3dac48.  v2:= temp @kind object;
  #L3dac4a.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletable`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapCompletable:(Lio/reactivex/functions/Function;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dac5c.  v0:= "mapper is null" @kind object;
  #L3dac60.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dac66.  v0:= "capacityHint" @kind object;
  #L3dac6a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dac70.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable`;
  #L3dac74.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dac78.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L3dac7e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3dac84.  v3:= temp @kind object;
  #L3dac86.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletableDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dac98.  v0:= 1I;
  #L3dac9a.  v1:= 2I;
  #L3dac9c.  call temp:= `concatMapCompletableDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Completable;` @kind virtual;
  #L3daca2.  v3:= temp @kind object;
  #L3daca4.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletableDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dacb8.  v0:= 2I;
  #L3dacba.  call temp:= `concatMapCompletableDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Completable;` @kind virtual;
  #L3dacc0.  v2:= temp @kind object;
  #L3dacc2.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletableDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dacd4.  v0:= "mapper is null" @kind object;
  #L3dacd8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dacde.  v0:= "prefetch" @kind object;
  #L3dace2.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dace8.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable`;
  #L3dacec.  if v3 == 0 then goto L3dacf6;
  #L3dacf0.  v3:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dacf4.  goto L3dacfa;
  #L3dacf6.  v3:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dacfa.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L3dad00.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3dad06.  v2:= temp @kind object;
  #L3dad08.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dbfc4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dbfca.  v0:= temp;
  #L3dbfcc.  v1:= 1I;
  #L3dbfce.  call temp:= `concatMapDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;IZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dbfd4.  v3:= temp @kind object;
  #L3dbfd6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;IZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dbfe8.  v0:= "mapper is null" @kind object;
  #L3dbfec.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dbff2.  v0:= "prefetch" @kind object;
  #L3dbff6.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dbffc.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3dc000.  if v0 == 0 then goto L3dc02a;
  #L3dc004.  v3:= v1 @kind object;
  #L3dc006.  v3:= (`io.reactivex.internal.fuseable.ScalarCallable`) v3 @kind object;
  #L3dc00a.  call temp:= `call`(v3) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3dc010.  v3:= temp @kind object;
  #L3dc012.  if v3 != 0 then goto L3dc020;
  #L3dc016.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3dc01c.  v2:= temp @kind object;
  #L3dc01e.  return v2 @kind object;
  #L3dc020.  call temp:= `scalarXMap`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3dc026.  v2:= temp @kind object;
  #L3dc028.  return v2 @kind object;
  #L3dc02a.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L3dc02e.  if v4 == 0 then goto L3dc038;
  #L3dc032.  v4:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc036.  goto L3dc03c;
  #L3dc038.  v4:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc03c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L3dc042.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc048.  v2:= temp @kind object;
  #L3dc04a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEager`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dc05c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dc062.  v0:= temp;
  #L3dc064.  v1:= 2147483647I;
  #L3dc06a.  call temp:= `concatMapEager`(v2, v3, v1, v0) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;II)Lio/reactivex/Observable;` @kind virtual;
  #L3dc070.  v3:= temp @kind object;
  #L3dc072.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEager`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dc084.  v0:= "mapper is null" @kind object;
  #L3dc088.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc08e.  v0:= "maxConcurrency" @kind object;
  #L3dc092.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dc098.  v0:= "prefetch" @kind object;
  #L3dc09c.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dc0a2.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMapEager`;
  #L3dc0a6.  v4:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc0aa.  v1:= v0 @kind object;
  #L3dc0ac.  v2:= v7 @kind object;
  #L3dc0ae.  v3:= v8 @kind object;
  #L3dc0b0.  v5:= v9;
  #L3dc0b2.  v6:= v10;
  #L3dc0b4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;II)V` @kind direct;
  #L3dc0ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc0c0.  v8:= temp @kind object;
  #L3dc0c2.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEagerDelayError`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `int` v9 , `int` v10 , `boolean` v11 ) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dc0fc.  v0:= "mapper is null" @kind object;
  #L3dc100.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc106.  v0:= "maxConcurrency" @kind object;
  #L3dc10a.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dc110.  v0:= "prefetch" @kind object;
  #L3dc114.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dc11a.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMapEager`;
  #L3dc11e.  if v11 == 0 then goto L3dc128;
  #L3dc122.  v11:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc126.  goto L3dc12c;
  #L3dc128.  v11:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc12c.  v4:= v11 @kind object;
  #L3dc12e.  v1:= v0 @kind object;
  #L3dc130.  v2:= v7 @kind object;
  #L3dc132.  v3:= v8 @kind object;
  #L3dc134.  v5:= v9;
  #L3dc136.  v6:= v10;
  #L3dc138.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;II)V` @kind direct;
  #L3dc13e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc144.  v8:= temp @kind object;
  #L3dc146.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEagerDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dc0d4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dc0da.  v0:= temp;
  #L3dc0dc.  v1:= 2147483647I;
  #L3dc0e2.  call temp:= `concatMapEagerDelayError`(v2, v3, v1, v0, v4) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dc0e8.  v3:= temp @kind object;
  #L3dc0ea.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapIterable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc158.  v0:= "mapper is null" @kind object;
  #L3dc15c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc162.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlattenIterable`;
  #L3dc166.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3dc16c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc172.  v2:= temp @kind object;
  #L3dc174.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapIterable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.concatMapIterable:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc188.  v0:= "mapper is null" @kind object;
  #L3dc18c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc192.  v0:= "prefetch" @kind object;
  #L3dc196.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dc19c.  call temp:= `flatMapIntoIterable`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L3dc1a2.  v2:= temp @kind object;
  #L3dc1a4.  call temp:= `concatMap`(v1, v2, v3) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3dc1aa.  v2:= temp @kind object;
  #L3dc1ac.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc1c0.  v0:= 2I;
  #L3dc1c2.  call temp:= `concatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/Observable;.concatMapMaybe:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3dc1c8.  v2:= temp @kind object;
  #L3dc1ca.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapMaybe:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dc1dc.  v0:= "mapper is null" @kind object;
  #L3dc1e0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc1e6.  v0:= "prefetch" @kind object;
  #L3dc1ea.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dc1f0.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe`;
  #L3dc1f4.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc1f8.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L3dc1fe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc204.  v3:= temp @kind object;
  #L3dc206.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybeDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dc218.  v0:= 1I;
  #L3dc21a.  v1:= 2I;
  #L3dc21c.  call temp:= `concatMapMaybeDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dc222.  v3:= temp @kind object;
  #L3dc224.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybeDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc238.  v0:= 2I;
  #L3dc23a.  call temp:= `concatMapMaybeDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dc240.  v2:= temp @kind object;
  #L3dc242.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybeDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc254.  v0:= "mapper is null" @kind object;
  #L3dc258.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc25e.  v0:= "prefetch" @kind object;
  #L3dc262.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dc268.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe`;
  #L3dc26c.  if v3 == 0 then goto L3dc276;
  #L3dc270.  v3:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc274.  goto L3dc27a;
  #L3dc276.  v3:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc27a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L3dc280.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc286.  v2:= temp @kind object;
  #L3dc288.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMapSingle:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc29c.  v0:= 2I;
  #L3dc29e.  call temp:= `concatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/Observable;.concatMapSingle:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3dc2a4.  v2:= temp @kind object;
  #L3dc2a6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingle`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapSingle:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dc2b8.  v0:= "mapper is null" @kind object;
  #L3dc2bc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc2c2.  v0:= "prefetch" @kind object;
  #L3dc2c6.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dc2cc.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapSingle`;
  #L3dc2d0.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc2d4.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L3dc2da.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc2e0.  v3:= temp @kind object;
  #L3dc2e2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingleDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dc2f4.  v0:= 1I;
  #L3dc2f6.  v1:= 2I;
  #L3dc2f8.  call temp:= `concatMapSingleDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dc2fe.  v3:= temp @kind object;
  #L3dc300.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingleDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc314.  v0:= 2I;
  #L3dc316.  call temp:= `concatMapSingleDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dc31c.  v2:= temp @kind object;
  #L3dc31e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingleDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc330.  v0:= "mapper is null" @kind object;
  #L3dc334.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc33a.  v0:= "prefetch" @kind object;
  #L3dc33e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dc344.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapSingle`;
  #L3dc348.  if v3 == 0 then goto L3dc352;
  #L3dc34c.  v3:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc350.  goto L3dc356;
  #L3dc352.  v3:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L3dc356.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L3dc35c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc362.  v2:= temp @kind object;
  #L3dc364.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc378.  v0:= "other is null" @kind object;
  #L3dc37c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc382.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatWithCompletable`;
  #L3dc386.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3dc38c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc392.  v2:= temp @kind object;
  #L3dc394.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.MaybeSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/MaybeSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc3a8.  v0:= "other is null" @kind object;
  #L3dc3ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc3b2.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatWithMaybe`;
  #L3dc3b6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/MaybeSource;)V` @kind direct;
  #L3dc3bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc3c2.  v2:= temp @kind object;
  #L3dc3c4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc3d8.  v0:= "other is null" @kind object;
  #L3dc3dc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc3e2.  call temp:= `concat`(v1, v2) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dc3e8.  v2:= temp @kind object;
  #L3dc3ea.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc3fc.  v0:= "other is null" @kind object;
  #L3dc400.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc406.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatWithSingle`;
  #L3dc40a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/SingleSource;)V` @kind direct;
  #L3dc410.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc416.  v2:= temp @kind object;
  #L3dc418.  return v2 @kind object;
}
procedure `io.reactivex.Single` `contains`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.contains:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e08a0.  v0:= "element is null" @kind object;
  #L3e08a4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e08aa.  call temp:= `equalsWith`(v2) @signature `Lio/reactivex/internal/functions/Functions;.equalsWith:(Ljava/lang/Object;)Lio/reactivex/functions/Predicate;` @kind static;
  #L3e08b0.  v2:= temp @kind object;
  #L3e08b2.  call temp:= `any`(v1, v2) @signature `Lio/reactivex/Observable;.any:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @kind virtual;
  #L3e08b8.  v2:= temp @kind object;
  #L3e08ba.  return v2 @kind object;
}
procedure `io.reactivex.Single` `count`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.count:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e08cc.  v0:= new `io.reactivex.internal.operators.observable.ObservableCountSingle`;
  #L3e08d0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCountSingle;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3e08d6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e08dc.  v0:= temp @kind object;
  #L3e08de.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `debounce`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc48c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dc492.  v0:= temp @kind object;
  #L3dc494.  call temp:= `debounce`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc49a.  v2:= temp @kind object;
  #L3dc49c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `debounce`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dc4b0.  v0:= "unit is null" @kind object;
  #L3dc4b4.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc4ba.  v0:= "scheduler is null" @kind object;
  #L3dc4be.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc4c4.  v0:= new `io.reactivex.internal.operators.observable.ObservableDebounceTimed`;
  #L3dc4c8.  v1:= v0 @kind object;
  #L3dc4ca.  v2:= v7 @kind object;
  #L3dc4cc.  v3:= v8 @kind wide;
  #L3dc4ce.  v5:= v10 @kind object;
  #L3dc4d0.  v6:= v11 @kind object;
  #L3dc4d2.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3dc4d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc4de.  v8:= temp @kind object;
  #L3dc4e0.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `debounce`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.debounce:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc45c.  v0:= "debounceSelector is null" @kind object;
  #L3dc460.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc466.  v0:= new `io.reactivex.internal.operators.observable.ObservableDebounce`;
  #L3dc46a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3dc470.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc476.  v2:= temp @kind object;
  #L3dc478.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `defaultIfEmpty`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.defaultIfEmpty:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc4f4.  v0:= "defaultItem is null" @kind object;
  #L3dc4f8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc4fe.  call temp:= `just`(v2) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dc504.  v2:= temp @kind object;
  #L3dc506.  call temp:= `switchIfEmpty`(v1, v2) @signature `Lio/reactivex/Observable;.switchIfEmpty:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc50c.  v2:= temp @kind object;
  #L3dc50e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dc5a0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dc5a6.  v4:= temp @kind object;
  #L3dc5a8.  v5:= 0I;
  #L3dc5aa.  v0:= v6 @kind object;
  #L3dc5ac.  v1:= v7 @kind wide;
  #L3dc5ae.  v3:= v9 @kind object;
  #L3dc5b0.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3dc5b6.  v7:= temp @kind object;
  #L3dc5b8.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dc5f8.  v5:= 0I;
  #L3dc5fa.  v0:= v6 @kind object;
  #L3dc5fc.  v1:= v7 @kind wide;
  #L3dc5fe.  v3:= v9 @kind object;
  #L3dc600.  v4:= v10 @kind object;
  #L3dc602.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3dc608.  v7:= temp @kind object;
  #L3dc60a.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dc61c.  v0:= "unit is null" @kind object;
  #L3dc620.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc626.  v0:= "scheduler is null" @kind object;
  #L3dc62a.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc630.  v0:= new `io.reactivex.internal.operators.observable.ObservableDelay`;
  #L3dc634.  v1:= v0 @kind object;
  #L3dc636.  v2:= v8 @kind object;
  #L3dc638.  v3:= v9 @kind wide;
  #L3dc63a.  v5:= v11 @kind object;
  #L3dc63c.  v6:= v12 @kind object;
  #L3dc63e.  v7:= v13;
  #L3dc640.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3dc646.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc64c.  v9:= temp @kind object;
  #L3dc64e.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dc5cc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dc5d2.  v4:= temp @kind object;
  #L3dc5d4.  v0:= v6 @kind object;
  #L3dc5d6.  v1:= v7 @kind wide;
  #L3dc5d8.  v3:= v9 @kind object;
  #L3dc5da.  v5:= v10;
  #L3dc5dc.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3dc5e2.  v7:= temp @kind object;
  #L3dc5e4.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.delay:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3dc550.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/Observable;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc556.  v1:= temp @kind object;
  #L3dc558.  call temp:= `delay`(v1, v2) @signature `Lio/reactivex/Observable;.delay:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc55e.  v1:= temp @kind object;
  #L3dc560.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.delay:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc574.  v0:= "itemDelay is null" @kind object;
  #L3dc578.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc57e.  call temp:= `itemDelay`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.itemDelay:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L3dc584.  v2:= temp @kind object;
  #L3dc586.  call temp:= `flatMap`(v1, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc58c.  v2:= temp @kind object;
  #L3dc58e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `delaySubscription`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc690.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dc696.  v0:= temp @kind object;
  #L3dc698.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc69e.  v2:= temp @kind object;
  #L3dc6a0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `delaySubscription`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3dc6b4.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3dc6ba.  v1:= temp @kind object;
  #L3dc6bc.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/Observable;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc6c2.  v1:= temp @kind object;
  #L3dc6c4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `delaySubscription`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc660.  v0:= "other is null" @kind object;
  #L3dc664.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc66a.  v0:= new `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther`;
  #L3dc66e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3dc674.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc67a.  v2:= temp @kind object;
  #L3dc67c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `dematerialize`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.dematerialize:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc6d8.  v0:= new `io.reactivex.internal.operators.observable.ObservableDematerialize`;
  #L3dc6dc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3dc6e2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc6e8.  v0:= temp @kind object;
  #L3dc6ea.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `distinct`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.distinct:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dc6fc.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dc702.  v0:= temp @kind object;
  #L3dc704.  call temp:= `createHashSet`() @signature `Lio/reactivex/internal/functions/Functions;.createHashSet:()Ljava/util/concurrent/Callable;` @kind static;
  #L3dc70a.  v1:= temp @kind object;
  #L3dc70c.  call temp:= `distinct`(v2, v0, v1) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc712.  v0:= temp @kind object;
  #L3dc714.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `distinct`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc728.  call temp:= `createHashSet`() @signature `Lio/reactivex/internal/functions/Functions;.createHashSet:()Ljava/util/concurrent/Callable;` @kind static;
  #L3dc72e.  v0:= temp @kind object;
  #L3dc730.  call temp:= `distinct`(v1, v2, v0) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc736.  v2:= temp @kind object;
  #L3dc738.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `distinct`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc74c.  v0:= "keySelector is null" @kind object;
  #L3dc750.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc756.  v0:= "collectionSupplier is null" @kind object;
  #L3dc75a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc760.  v0:= new `io.reactivex.internal.operators.observable.ObservableDistinct`;
  #L3dc764.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDistinct;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3dc76a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc770.  v2:= temp @kind object;
  #L3dc772.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `distinctUntilChanged`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.distinctUntilChanged:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc784.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dc78a.  v0:= temp @kind object;
  #L3dc78c.  call temp:= `distinctUntilChanged`(v1, v0) @signature `Lio/reactivex/Observable;.distinctUntilChanged:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc792.  v0:= temp @kind object;
  #L3dc794.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `distinctUntilChanged`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/Observable;.distinctUntilChanged:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dc7a8.  v0:= "comparer is null" @kind object;
  #L3dc7ac.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc7b2.  v0:= new `io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L3dc7b6.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dc7bc.  v1:= temp @kind object;
  #L3dc7be.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L3dc7c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc7ca.  v3:= temp @kind object;
  #L3dc7cc.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `distinctUntilChanged`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.distinctUntilChanged:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dc7e0.  v0:= "keySelector is null" @kind object;
  #L3dc7e4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc7ea.  v0:= new `io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L3dc7ee.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L3dc7f4.  v1:= temp @kind object;
  #L3dc7f6.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L3dc7fc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc802.  v3:= temp @kind object;
  #L3dc804.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `doAfterNext`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Observable;.doAfterNext:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc818.  v0:= "onAfterNext is null" @kind object;
  #L3dc81c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc822.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoAfterNext`;
  #L3dc826.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoAfterNext;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3dc82c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc832.  v2:= temp @kind object;
  #L3dc834.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doAfterTerminate`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.doAfterTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dc848.  v0:= "onFinally is null" @kind object;
  #L3dc84c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc852.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc858.  v0:= temp @kind object;
  #L3dc85a.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc860.  v1:= temp @kind object;
  #L3dc862.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dc866.  call temp:= `doOnEach`(v3, v0, v1, v2, v4) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3dc86c.  v4:= temp @kind object;
  #L3dc86e.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doFinally`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Observable;.doFinally:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc880.  v0:= "onFinally is null" @kind object;
  #L3dc884.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc88a.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoFinally`;
  #L3dc88e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3dc894.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dc89a.  v2:= temp @kind object;
  #L3dc89c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnComplete`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnComplete:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dc8b0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc8b6.  v0:= temp @kind object;
  #L3dc8b8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc8be.  v1:= temp @kind object;
  #L3dc8c0.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dc8c4.  call temp:= `doOnEach`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3dc8ca.  v4:= temp @kind object;
  #L3dc8cc.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnDispose`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Observable;.doOnDispose:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dc8e0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc8e6.  v0:= temp @kind object;
  #L3dc8e8.  call temp:= `doOnLifecycle`(v1, v0, v2) @signature `Lio/reactivex/Observable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind virtual;
  #L3dc8ee.  v2:= temp @kind object;
  #L3dc8f0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnEach`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/Observer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dc904.  v0:= "observer is null" @kind object;
  #L3dc908.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc90e.  call temp:= `observerOnNext`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.observerOnNext:(Lio/reactivex/Observer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc914.  v0:= temp @kind object;
  #L3dc916.  call temp:= `observerOnError`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.observerOnError:(Lio/reactivex/Observer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc91c.  v1:= temp @kind object;
  #L3dc91e.  call temp:= `observerOnComplete`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.observerOnComplete:(Lio/reactivex/Observer;)Lio/reactivex/functions/Action;` @kind static;
  #L3dc924.  v4:= temp @kind object;
  #L3dc926.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dc92a.  call temp:= `doOnEach`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3dc930.  v4:= temp @kind object;
  #L3dc932.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnEach`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dc944.  v0:= "consumer is null" @kind object;
  #L3dc948.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dc94e.  call temp:= `notificationOnNext`(v4) @signature `Lio/reactivex/internal/functions/Functions;.notificationOnNext:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc954.  v0:= temp @kind object;
  #L3dc956.  call temp:= `notificationOnError`(v4) @signature `Lio/reactivex/internal/functions/Functions;.notificationOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc95c.  v1:= temp @kind object;
  #L3dc95e.  call temp:= `notificationOnComplete`(v4) @signature `Lio/reactivex/internal/functions/Functions;.notificationOnComplete:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Action;` @kind static;
  #L3dc964.  v4:= temp @kind object;
  #L3dc966.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dc96a.  call temp:= `doOnEach`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3dc970.  v4:= temp @kind object;
  #L3dc972.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnError`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dc9dc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dc9e2.  v0:= temp @kind object;
  #L3dc9e4.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dc9e8.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dc9ec.  call temp:= `doOnEach`(v3, v0, v4, v1, v2) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3dc9f2.  v4:= temp @kind object;
  #L3dc9f4.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnLifecycle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/Observable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dca08.  v0:= "onSubscribe is null" @kind object;
  #L3dca0c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dca12.  v0:= "onDispose is null" @kind object;
  #L3dca16.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dca1c.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoOnLifecycle`;
  #L3dca20.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnLifecycle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3dca26.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dca2c.  v2:= temp @kind object;
  #L3dca2e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnNext`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnNext:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dca40.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dca46.  v0:= temp @kind object;
  #L3dca48.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dca4c.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dca50.  call temp:= `doOnEach`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3dca56.  v4:= temp @kind object;
  #L3dca58.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnSubscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Observable;.doOnSubscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dca6c.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dca70.  call temp:= `doOnLifecycle`(v1, v2, v0) @signature `Lio/reactivex/Observable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind virtual;
  #L3dca76.  v2:= temp @kind object;
  #L3dca78.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnTerminate`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dca8c.  v0:= "onTerminate is null" @kind object;
  #L3dca90.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dca96.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3dca9c.  v0:= temp @kind object;
  #L3dca9e.  call temp:= `actionConsumer`(v4) @signature `Lio/reactivex/internal/functions/Functions;.actionConsumer:(Lio/reactivex/functions/Action;)Lio/reactivex/functions/Consumer;` @kind static;
  #L3dcaa4.  v1:= temp @kind object;
  #L3dcaa6.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3dcaaa.  call temp:= `doOnEach`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L3dcab0.  v4:= temp @kind object;
  #L3dcab2.  return v4 @kind object;
}
procedure `io.reactivex.Maybe` `elementAt`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.elementAt:(J)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dae64.  v0:= 0L;
  #L3dae68.  v2:= lcmp(v4, v0);
  #L3dae6c.  if v2 < 0 then goto L3dae84;
  #L3dae70.  v0:= new `io.reactivex.internal.operators.observable.ObservableElementAtMaybe`;
  #L3dae74.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtMaybe;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L3dae7a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3dae80.  v4:= temp @kind object;
  #L3dae82.  return v4 @kind object;
  #L3dae84.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3dae88.  v1:= new `java.lang.StringBuilder`;
  #L3dae8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dae92.  v2:= "index >= 0 required but it was " @kind object;
  #L3dae96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dae9c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3daea2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3daea8.  v4:= temp @kind object;
  #L3daeaa.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3daeb0.  throw v0;
}
procedure `io.reactivex.Single` `elementAt`(`io.reactivex.Observable` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3e08f0.  v0:= 0L;
  #L3e08f4.  v2:= lcmp(v4, v0);
  #L3e08f8.  if v2 < 0 then goto L3e091a;
  #L3e08fc.  v0:= "defaultItem is null" @kind object;
  #L3e0900.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0906.  v0:= new `io.reactivex.internal.operators.observable.ObservableElementAtSingle`;
  #L3e090a.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L3e0910.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0916.  v4:= temp @kind object;
  #L3e0918.  return v4 @kind object;
  #L3e091a.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L3e091e.  v0:= new `java.lang.StringBuilder`;
  #L3e0922.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0928.  v1:= "index >= 0 required but it was " @kind object;
  #L3e092c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0932.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0938.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e093e.  v4:= temp @kind object;
  #L3e0940.  call `<init>`(v6, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e0946.  throw v6;
}
procedure `io.reactivex.Single` `elementAtOrError`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.elementAtOrError:(J)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3e0958.  v0:= 0L;
  #L3e095c.  v2:= lcmp(v4, v0);
  #L3e0960.  if v2 < 0 then goto L3e097a;
  #L3e0964.  v0:= new `io.reactivex.internal.operators.observable.ObservableElementAtSingle`;
  #L3e0968.  v1:= 0I;
  #L3e096a.  call `<init>`(v0, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L3e0970.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0976.  v4:= temp @kind object;
  #L3e0978.  return v4 @kind object;
  #L3e097a.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3e097e.  v1:= new `java.lang.StringBuilder`;
  #L3e0982.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0988.  v2:= "index >= 0 required but it was " @kind object;
  #L3e098c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0992.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0998.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e099e.  v4:= temp @kind object;
  #L3e09a0.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e09a6.  throw v0;
}
procedure `io.reactivex.Observable` `filter`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dcb40.  v0:= "predicate is null" @kind object;
  #L3dcb44.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcb4a.  v0:= new `io.reactivex.internal.operators.observable.ObservableFilter`;
  #L3dcb4e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFilter;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3dcb54.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dcb5a.  v2:= temp @kind object;
  #L3dcb5c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `first`(`io.reactivex.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Observable;.first:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e09b8.  v0:= 0L;
  #L3e09bc.  call temp:= `elementAt`(v2, v0, v3) @signature `Lio/reactivex/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/Single;` @kind virtual;
  #L3e09c2.  v3:= temp @kind object;
  #L3e09c4.  return v3 @kind object;
}
procedure `io.reactivex.Maybe` `firstElement`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.firstElement:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3daec4.  v0:= 0L;
  #L3daec8.  call temp:= `elementAt`(v2, v0) @signature `Lio/reactivex/Observable;.elementAt:(J)Lio/reactivex/Maybe;` @kind virtual;
  #L3daece.  v0:= temp @kind object;
  #L3daed0.  return v0 @kind object;
}
procedure `io.reactivex.Single` `firstOrError`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.firstOrError:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e09d8.  v0:= 0L;
  #L3e09dc.  call temp:= `elementAtOrError`(v2, v0) @signature `Lio/reactivex/Observable;.elementAtOrError:(J)Lio/reactivex/Single;` @kind virtual;
  #L3e09e2.  v0:= temp @kind object;
  #L3e09e4.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dcb70.  v0:= 0I;
  #L3dcb72.  call temp:= `flatMap`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3dcb78.  v2:= temp @kind object;
  #L3dcb7a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dcc4c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dcc52.  v0:= temp;
  #L3dcc54.  v1:= 0I;
  #L3dcc56.  call temp:= `flatMap`(v2, v3, v1, v4, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3dcc5c.  v3:= temp @kind object;
  #L3dcc5e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dcc70.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dcc76.  v4:= temp;
  #L3dcc78.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dcc7e.  v5:= temp;
  #L3dcc80.  v3:= 0I;
  #L3dcc82.  v0:= v6 @kind object;
  #L3dcc84.  v1:= v7 @kind object;
  #L3dcc86.  v2:= v8 @kind object;
  #L3dcc88.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3dcc8e.  v7:= temp @kind object;
  #L3dcc90.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dcd3c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dcd42.  v5:= temp;
  #L3dcd44.  v3:= 0I;
  #L3dcd46.  v0:= v6 @kind object;
  #L3dcd48.  v1:= v7 @kind object;
  #L3dcd4a.  v2:= v8 @kind object;
  #L3dcd4c.  v4:= v9;
  #L3dcd4e.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3dcd54.  v7:= temp @kind object;
  #L3dcd56.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object, `boolean` v9 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dcca4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dccaa.  v4:= temp;
  #L3dccac.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dccb2.  v5:= temp;
  #L3dccb4.  v0:= v6 @kind object;
  #L3dccb6.  v1:= v7 @kind object;
  #L3dccb8.  v2:= v8 @kind object;
  #L3dccba.  v3:= v9;
  #L3dccbc.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3dccc2.  v7:= temp @kind object;
  #L3dccc4.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dccd8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dccde.  v5:= temp;
  #L3dcce0.  v0:= v6 @kind object;
  #L3dcce2.  v1:= v7 @kind object;
  #L3dcce4.  v2:= v8 @kind object;
  #L3dcce6.  v3:= v9;
  #L3dcce8.  v4:= v10;
  #L3dccea.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3dccf0.  v7:= temp @kind object;
  #L3dccf2.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dcd04.  v0:= "mapper is null" @kind object;
  #L3dcd08.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcd0e.  v0:= "combiner is null" @kind object;
  #L3dcd12.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcd18.  call temp:= `flatMapWithCombiner`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.flatMapWithCombiner:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L3dcd1e.  v2:= temp @kind object;
  #L3dcd20.  call temp:= `flatMap`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3dcd26.  v2:= temp @kind object;
  #L3dcd28.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dcd68.  v0:= "onNextMapper is null" @kind object;
  #L3dcd6c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcd72.  v0:= "onErrorMapper is null" @kind object;
  #L3dcd76.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcd7c.  v0:= "onCompleteSupplier is null" @kind object;
  #L3dcd80.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcd86.  v0:= new `io.reactivex.internal.operators.observable.ObservableMapNotification`;
  #L3dcd8a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3dcd90.  call temp:= `merge`(v0) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dcd96.  v2:= temp @kind object;
  #L3dcd98.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object, `int` v5 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dcdac.  v0:= "onNextMapper is null" @kind object;
  #L3dcdb0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcdb6.  v0:= "onErrorMapper is null" @kind object;
  #L3dcdba.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcdc0.  v0:= "onCompleteSupplier is null" @kind object;
  #L3dcdc4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcdca.  v0:= new `io.reactivex.internal.operators.observable.ObservableMapNotification`;
  #L3dcdce.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3dcdd4.  call temp:= `merge`(v0, v5) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L3dcdda.  v2:= temp @kind object;
  #L3dcddc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dcb8c.  v0:= 2147483647I;
  #L3dcb92.  call temp:= `flatMap`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dcb98.  v2:= temp @kind object;
  #L3dcb9a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dcbac.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dcbb2.  v0:= temp;
  #L3dcbb4.  call temp:= `flatMap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3dcbba.  v2:= temp @kind object;
  #L3dcbbc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dcbd0.  v0:= "mapper is null" @kind object;
  #L3dcbd4.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcbda.  v0:= "maxConcurrency" @kind object;
  #L3dcbde.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dcbe4.  v0:= "bufferSize" @kind object;
  #L3dcbe8.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dcbee.  v0:= instanceof @variable v7 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3dcbf2.  if v0 == 0 then goto L3dcc1c;
  #L3dcbf6.  v9:= v7 @kind object;
  #L3dcbf8.  v9:= (`io.reactivex.internal.fuseable.ScalarCallable`) v9 @kind object;
  #L3dcbfc.  call temp:= `call`(v9) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3dcc02.  v9:= temp @kind object;
  #L3dcc04.  if v9 != 0 then goto L3dcc12;
  #L3dcc08.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3dcc0e.  v8:= temp @kind object;
  #L3dcc10.  return v8 @kind object;
  #L3dcc12.  call temp:= `scalarXMap`(v9, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3dcc18.  v8:= temp @kind object;
  #L3dcc1a.  return v8 @kind object;
  #L3dcc1c.  v6:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L3dcc20.  v0:= v6 @kind object;
  #L3dcc22.  v1:= v7 @kind object;
  #L3dcc24.  v2:= v8 @kind object;
  #L3dcc26.  v3:= v9;
  #L3dcc28.  v4:= v10;
  #L3dcc2a.  v5:= v11;
  #L3dcc2c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L3dcc32.  call temp:= `onAssembly`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dcc38.  v8:= temp @kind object;
  #L3dcc3a.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `flatMapCompletable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dad1c.  v0:= 0I;
  #L3dad1e.  call temp:= `flatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMapCompletable:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Completable;` @kind virtual;
  #L3dad24.  v2:= temp @kind object;
  #L3dad26.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `flatMapCompletable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMapCompletable:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dad38.  v0:= "mapper is null" @kind object;
  #L3dad3c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dad42.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable`;
  #L3dad46.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3dad4c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3dad52.  v2:= temp @kind object;
  #L3dad54.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapIterable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dcdf0.  v0:= "mapper is null" @kind object;
  #L3dcdf4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcdfa.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlattenIterable`;
  #L3dcdfe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3dce04.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dce0a.  v2:= temp @kind object;
  #L3dce0c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapIterable`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `io.reactivex.functions.BiFunction` v9 @kind object) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dce20.  v0:= "mapper is null" @kind object;
  #L3dce24.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dce2a.  v0:= "resultSelector is null" @kind object;
  #L3dce2e.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dce34.  call temp:= `flatMapIntoIterable`(v8) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L3dce3a.  v2:= temp @kind object;
  #L3dce3c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dce42.  v5:= temp;
  #L3dce44.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dce4a.  v6:= temp;
  #L3dce4c.  v4:= 0I;
  #L3dce4e.  v1:= v7 @kind object;
  #L3dce50.  v3:= v9 @kind object;
  #L3dce52.  call temp:= `flatMap`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L3dce58.  v8:= temp @kind object;
  #L3dce5a.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `flatMapMaybe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dce6c.  v0:= 0I;
  #L3dce6e.  call temp:= `flatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMapMaybe:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3dce74.  v2:= temp @kind object;
  #L3dce76.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapMaybe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMapMaybe:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dce88.  v0:= "mapper is null" @kind object;
  #L3dce8c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dce92.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapMaybe`;
  #L3dce96.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapMaybe;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3dce9c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dcea2.  v2:= temp @kind object;
  #L3dcea4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapSingle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapSingle:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dceb8.  v0:= 0I;
  #L3dceba.  call temp:= `flatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMapSingle:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3dcec0.  v2:= temp @kind object;
  #L3dcec2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapSingle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMapSingle:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dced4.  v0:= "mapper is null" @kind object;
  #L3dced8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dcede.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapSingle`;
  #L3dcee2.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapSingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3dcee8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dceee.  v2:= temp @kind object;
  #L3dcef0.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEach`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object) @signature `Lio/reactivex/Observable;.forEach:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e0eb0.  call temp:= `subscribe`(v0, v1) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e0eb6.  v1:= temp @kind object;
  #L3e0eb8.  return v1 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEachWhile`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e0ecc.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e0ed0.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e0ed4.  call temp:= `forEachWhile`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e0eda.  v3:= temp @kind object;
  #L3e0edc.  return v3 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEachWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0ef0.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e0ef4.  call temp:= `forEachWhile`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e0efa.  v2:= temp @kind object;
  #L3e0efc.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEachWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0f10.  v0:= "onNext is null" @kind object;
  #L3e0f14.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0f1a.  v0:= "onError is null" @kind object;
  #L3e0f1e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0f24.  v0:= "onComplete is null" @kind object;
  #L3e0f28.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0f2e.  v0:= new `io.reactivex.internal.observers.ForEachWhileObserver`;
  #L3e0f32.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.<init>:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind direct;
  #L3e0f38.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e0f3e.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dd1b4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dd1ba.  v0:= temp @kind object;
  #L3dd1bc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dd1c2.  v1:= temp;
  #L3dd1c4.  v2:= 0I;
  #L3dd1c6.  call temp:= `groupBy`(v3, v4, v0, v2, v1) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dd1cc.  v4:= temp @kind object;
  #L3dd1ce.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dd20c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dd212.  v0:= temp;
  #L3dd214.  v1:= 0I;
  #L3dd216.  call temp:= `groupBy`(v2, v3, v4, v1, v0) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dd21c.  v3:= temp @kind object;
  #L3dd21e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dd230.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dd236.  v0:= temp;
  #L3dd238.  call temp:= `groupBy`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dd23e.  v2:= temp @kind object;
  #L3dd240.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `io.reactivex.functions.Function` v9 @kind object, `boolean` v10 , `int` v11 ) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dd254.  v0:= "keySelector is null" @kind object;
  #L3dd258.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd25e.  v0:= "valueSelector is null" @kind object;
  #L3dd262.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd268.  v0:= "bufferSize" @kind object;
  #L3dd26c.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dd272.  v0:= new `io.reactivex.internal.operators.observable.ObservableGroupBy`;
  #L3dd276.  v1:= v0 @kind object;
  #L3dd278.  v2:= v7 @kind object;
  #L3dd27a.  v3:= v8 @kind object;
  #L3dd27c.  v4:= v9 @kind object;
  #L3dd27e.  v5:= v11;
  #L3dd280.  v6:= v10;
  #L3dd282.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3dd288.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd28e.  v8:= temp @kind object;
  #L3dd290.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dd1e0.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3dd1e6.  v0:= temp @kind object;
  #L3dd1e8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dd1ee.  v1:= temp;
  #L3dd1f0.  call temp:= `groupBy`(v2, v3, v0, v4, v1) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dd1f6.  v3:= temp @kind object;
  #L3dd1f8.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `groupJoin`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function` v9 @kind object, `io.reactivex.functions.Function` v10 @kind object, `io.reactivex.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/Observable;.groupJoin:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dd2a4.  v0:= "other is null" @kind object;
  #L3dd2a8.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd2ae.  v0:= "leftEnd is null" @kind object;
  #L3dd2b2.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd2b8.  v0:= "rightEnd is null" @kind object;
  #L3dd2bc.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd2c2.  v0:= "resultSelector is null" @kind object;
  #L3dd2c6.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd2cc.  v0:= new `io.reactivex.internal.operators.observable.ObservableGroupJoin`;
  #L3dd2d0.  v1:= v0 @kind object;
  #L3dd2d2.  v2:= v7 @kind object;
  #L3dd2d4.  v3:= v8 @kind object;
  #L3dd2d6.  v4:= v9 @kind object;
  #L3dd2d8.  v5:= v10 @kind object;
  #L3dd2da.  v6:= v11 @kind object;
  #L3dd2dc.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupJoin;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3dd2e2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd2e8.  v8:= temp @kind object;
  #L3dd2ea.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `hide`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.hide:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dd2fc.  v0:= new `io.reactivex.internal.operators.observable.ObservableHide`;
  #L3dd300.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableHide;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3dd306.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd30c.  v0:= temp @kind object;
  #L3dd30e.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `ignoreElements`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.ignoreElements:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dad68.  v0:= new `io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable`;
  #L3dad6c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3dad72.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3dad78.  v0:= temp @kind object;
  #L3dad7a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `isEmpty`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.isEmpty:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e09f8.  call temp:= `alwaysFalse`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysFalse:()Lio/reactivex/functions/Predicate;` @kind static;
  #L3e09fe.  v0:= temp @kind object;
  #L3e0a00.  call temp:= `all`(v1, v0) @signature `Lio/reactivex/Observable;.all:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @kind virtual;
  #L3e0a06.  v0:= temp @kind object;
  #L3e0a08.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `join`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function` v9 @kind object, `io.reactivex.functions.Function` v10 @kind object, `io.reactivex.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/Observable;.join:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dd508.  v0:= "other is null" @kind object;
  #L3dd50c.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd512.  v0:= "leftEnd is null" @kind object;
  #L3dd516.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd51c.  v0:= "rightEnd is null" @kind object;
  #L3dd520.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd526.  v0:= "resultSelector is null" @kind object;
  #L3dd52a.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dd530.  v0:= new `io.reactivex.internal.operators.observable.ObservableJoin`;
  #L3dd534.  v1:= v0 @kind object;
  #L3dd536.  v2:= v7 @kind object;
  #L3dd538.  v3:= v8 @kind object;
  #L3dd53a.  v4:= v9 @kind object;
  #L3dd53c.  v5:= v10 @kind object;
  #L3dd53e.  v6:= v11 @kind object;
  #L3dd540.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableJoin;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3dd546.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dd54c.  v8:= temp @kind object;
  #L3dd54e.  return v8 @kind object;
}
procedure `io.reactivex.Single` `last`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.last:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0a1c.  v0:= "defaultItem is null" @kind object;
  #L3e0a20.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0a26.  v0:= new `io.reactivex.internal.operators.observable.ObservableLastSingle`;
  #L3e0a2a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3e0a30.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0a36.  v2:= temp @kind object;
  #L3e0a38.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `lastElement`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.lastElement:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3daee4.  v0:= new `io.reactivex.internal.operators.observable.ObservableLastMaybe`;
  #L3daee8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3daeee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3daef4.  v0:= temp @kind object;
  #L3daef6.  return v0 @kind object;
}
procedure `io.reactivex.Single` `lastOrError`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.lastOrError:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e0a4c.  v0:= new `io.reactivex.internal.operators.observable.ObservableLastSingle`;
  #L3e0a50.  v1:= 0I;
  #L3e0a52.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3e0a58.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0a5e.  v0:= temp @kind object;
  #L3e0a60.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `lift`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableOperator` v2 @kind object) @signature `Lio/reactivex/Observable;.lift:(Lio/reactivex/ObservableOperator;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dda20.  v0:= "onLift is null" @kind object;
  #L3dda24.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dda2a.  v0:= new `io.reactivex.internal.operators.observable.ObservableLift`;
  #L3dda2e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableLift;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableOperator;)V` @kind direct;
  #L3dda34.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dda3a.  v2:= temp @kind object;
  #L3dda3c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `map`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dda50.  v0:= "mapper is null" @kind object;
  #L3dda54.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dda5a.  v0:= new `io.reactivex.internal.operators.observable.ObservableMap`;
  #L3dda5e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3dda64.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dda6a.  v2:= temp @kind object;
  #L3dda6c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `materialize`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.materialize:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dda80.  v0:= new `io.reactivex.internal.operators.observable.ObservableMaterialize`;
  #L3dda84.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableMaterialize;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3dda8a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dda90.  v0:= temp @kind object;
  #L3dda92.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `mergeWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ddfd8.  v0:= "other is null" @kind object;
  #L3ddfdc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ddfe2.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable`;
  #L3ddfe6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L3ddfec.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3ddff2.  v2:= temp @kind object;
  #L3ddff4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.MaybeSource` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeWith:(Lio/reactivex/MaybeSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de008.  v0:= "other is null" @kind object;
  #L3de00c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de012.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithMaybe`;
  #L3de016.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/MaybeSource;)V` @kind direct;
  #L3de01c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de022.  v2:= temp @kind object;
  #L3de024.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de038.  v0:= "other is null" @kind object;
  #L3de03c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de042.  call temp:= `merge`(v1, v2) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3de048.  v2:= temp @kind object;
  #L3de04a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de05c.  v0:= "other is null" @kind object;
  #L3de060.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de066.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithSingle`;
  #L3de06a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/SingleSource;)V` @kind direct;
  #L3de070.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de076.  v2:= temp @kind object;
  #L3de078.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `observeOn`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3de0ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3de0b2.  v0:= temp;
  #L3de0b4.  v1:= 0I;
  #L3de0b6.  call temp:= `observeOn`(v2, v3, v1, v0) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3de0bc.  v3:= temp @kind object;
  #L3de0be.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `observeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de0d0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3de0d6.  v0:= temp;
  #L3de0d8.  call temp:= `observeOn`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3de0de.  v2:= temp @kind object;
  #L3de0e0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `observeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de0f4.  v0:= "scheduler is null" @kind object;
  #L3de0f8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de0fe.  v0:= "bufferSize" @kind object;
  #L3de102.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3de108.  v0:= new `io.reactivex.internal.operators.observable.ObservableObserveOn`;
  #L3de10c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableObserveOn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;ZI)V` @kind direct;
  #L3de112.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de118.  v2:= temp @kind object;
  #L3de11a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `ofType`(`io.reactivex.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/Observable;.ofType:(Ljava/lang/Class;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de12c.  v0:= "clazz is null" @kind object;
  #L3de130.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de136.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/functions/Predicate;` @kind static;
  #L3de13c.  v0:= temp @kind object;
  #L3de13e.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/Observable;.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3de144.  v0:= temp @kind object;
  #L3de146.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/Observable;` @kind virtual;
  #L3de14c.  v2:= temp @kind object;
  #L3de14e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onErrorResumeNext`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.onErrorResumeNext:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de160.  v0:= "next is null" @kind object;
  #L3de164.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de16a.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L3de170.  v2:= temp @kind object;
  #L3de172.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/Observable;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3de178.  v2:= temp @kind object;
  #L3de17a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onErrorResumeNext`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3de18c.  v0:= "resumeFunction is null" @kind object;
  #L3de190.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de196.  v0:= new `io.reactivex.internal.operators.observable.ObservableOnErrorNext`;
  #L3de19a.  v1:= 0I;
  #L3de19c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorNext;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3de1a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de1a8.  v3:= temp @kind object;
  #L3de1aa.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `onErrorReturn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.onErrorReturn:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de1bc.  v0:= "valueSupplier is null" @kind object;
  #L3de1c0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de1c6.  v0:= new `io.reactivex.internal.operators.observable.ObservableOnErrorReturn`;
  #L3de1ca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3de1d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de1d6.  v2:= temp @kind object;
  #L3de1d8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onErrorReturnItem`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de1ec.  v0:= "item is null" @kind object;
  #L3de1f0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de1f6.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L3de1fc.  v2:= temp @kind object;
  #L3de1fe.  call temp:= `onErrorReturn`(v1, v2) @signature `Lio/reactivex/Observable;.onErrorReturn:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3de204.  v2:= temp @kind object;
  #L3de206.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onExceptionResumeNext`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.onExceptionResumeNext:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3de218.  v0:= "next is null" @kind object;
  #L3de21c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de222.  v0:= new `io.reactivex.internal.operators.observable.ObservableOnErrorNext`;
  #L3de226.  call temp:= `justFunction`(v3) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L3de22c.  v3:= temp @kind object;
  #L3de22e.  v1:= 1I;
  #L3de230.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorNext;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3de236.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de23c.  v3:= temp @kind object;
  #L3de23e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `onTerminateDetach`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.onTerminateDetach:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de250.  v0:= new `io.reactivex.internal.operators.observable.ObservableDetach`;
  #L3de254.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDetach;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3de25a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de260.  v0:= temp @kind object;
  #L3de262.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `publish`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.publish:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de274.  v0:= "selector is null" @kind object;
  #L3de278.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de27e.  v0:= new `io.reactivex.internal.operators.observable.ObservablePublishSelector`;
  #L3de282.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3de288.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de28e.  v2:= temp @kind object;
  #L3de290.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `publish`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.publish:()Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1048.  call temp:= `create`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservablePublish;.create:(Lio/reactivex/ObservableSource;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3e104e.  v0:= temp @kind object;
  #L3e1050.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `reduce`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Observable;.reduce:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3daf08.  v0:= "reducer is null" @kind object;
  #L3daf0c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3daf12.  v0:= new `io.reactivex.internal.operators.observable.ObservableReduceMaybe`;
  #L3daf16.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceMaybe;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3daf1c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3daf22.  v2:= temp @kind object;
  #L3daf24.  return v2 @kind object;
}
procedure `io.reactivex.Single` `reduce`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.reduce:(Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0a74.  v0:= "seed is null" @kind object;
  #L3e0a78.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0a7e.  v0:= "reducer is null" @kind object;
  #L3e0a82.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0a88.  v0:= new `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle`;
  #L3e0a8c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3e0a92.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0a98.  v2:= temp @kind object;
  #L3e0a9a.  return v2 @kind object;
}
procedure `io.reactivex.Single` `reduceWith`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.reduceWith:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0aac.  v0:= "seedSupplier is null" @kind object;
  #L3e0ab0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0ab6.  v0:= "reducer is null" @kind object;
  #L3e0aba.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0ac0.  v0:= new `io.reactivex.internal.operators.observable.ObservableReduceWithSingle`;
  #L3e0ac4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceWithSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3e0aca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0ad0.  v2:= temp @kind object;
  #L3e0ad2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `repeat`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.repeat:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3de400.  v0:= 9223372036854775807L;
  #L3de40a.  call temp:= `repeat`(v2, v0) @signature `Lio/reactivex/Observable;.repeat:(J)Lio/reactivex/Observable;` @kind virtual;
  #L3de410.  v0:= temp @kind object;
  #L3de412.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `repeat`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.repeat:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3de424.  v0:= 0L;
  #L3de428.  v2:= lcmp(v4, v0);
  #L3de42c.  if v2 < 0 then goto L3de456;
  #L3de430.  v2:= lcmp(v4, v0);
  #L3de434.  if v2 != 0 then goto L3de442;
  #L3de438.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3de43e.  v4:= temp @kind object;
  #L3de440.  return v4 @kind object;
  #L3de442.  v0:= new `io.reactivex.internal.operators.observable.ObservableRepeat`;
  #L3de446.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat;.<init>:(Lio/reactivex/Observable;J)V` @kind direct;
  #L3de44c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de452.  v4:= temp @kind object;
  #L3de454.  return v4 @kind object;
  #L3de456.  v0:= new `java.lang.IllegalArgumentException`;
  #L3de45a.  v1:= new `java.lang.StringBuilder`;
  #L3de45e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3de464.  v2:= "times >= 0 required but it was " @kind object;
  #L3de468.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3de46e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3de474.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3de47a.  v4:= temp @kind object;
  #L3de47c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3de482.  throw v0;
}
procedure `io.reactivex.Observable` `repeatUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/Observable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de494.  v0:= "stop is null" @kind object;
  #L3de498.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de49e.  v0:= new `io.reactivex.internal.operators.observable.ObservableRepeatUntil`;
  #L3de4a2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/BooleanSupplier;)V` @kind direct;
  #L3de4a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de4ae.  v2:= temp @kind object;
  #L3de4b0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `repeatWhen`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de4c4.  v0:= "handler is null" @kind object;
  #L3de4c8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de4ce.  v0:= new `io.reactivex.internal.operators.observable.ObservableRepeatWhen`;
  #L3de4d2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatWhen;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3de4d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de4de.  v2:= temp @kind object;
  #L3de4e0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de4f4.  v0:= "selector is null" @kind object;
  #L3de4f8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de4fe.  call temp:= `replayCallable`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;)Ljava/util/concurrent/Callable;` @kind static;
  #L3de504.  v0:= temp @kind object;
  #L3de506.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3de50c.  v2:= temp @kind object;
  #L3de50e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de520.  v0:= "selector is null" @kind object;
  #L3de524.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de52a.  v0:= "bufferSize" @kind object;
  #L3de52e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3de534.  call temp:= `replayCallable`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;I)Ljava/util/concurrent/Callable;` @kind static;
  #L3de53a.  v3:= temp @kind object;
  #L3de53c.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3de542.  v2:= temp @kind object;
  #L3de544.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3de5a0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3de5a6.  v6:= temp @kind object;
  #L3de5a8.  v0:= v7 @kind object;
  #L3de5aa.  v1:= v8 @kind object;
  #L3de5ac.  v2:= v9;
  #L3de5ae.  v3:= v10 @kind wide;
  #L3de5b0.  v5:= v12 @kind object;
  #L3de5b2.  call temp:= `replay`(v0, v1, v2, v3, v5, v6) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3de5b8.  v8:= temp @kind object;
  #L3de5ba.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `int` v8 , `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3de5cc.  v0:= "selector is null" @kind object;
  #L3de5d0.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de5d6.  v0:= "bufferSize" @kind object;
  #L3de5da.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3de5e0.  v0:= "unit is null" @kind object;
  #L3de5e4.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de5ea.  v0:= "scheduler is null" @kind object;
  #L3de5ee.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de5f4.  v0:= v6 @kind object;
  #L3de5f6.  v1:= v8;
  #L3de5f8.  v2:= v9 @kind wide;
  #L3de5fa.  v4:= v11 @kind object;
  #L3de5fc.  v5:= v12 @kind object;
  #L3de5fe.  call temp:= `replayCallable`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable;` @kind static;
  #L3de604.  v8:= temp @kind object;
  #L3de606.  call temp:= `multicastSelector`(v8, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3de60c.  v7:= temp @kind object;
  #L3de60e.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;ILio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de558.  v0:= "selector is null" @kind object;
  #L3de55c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de562.  v0:= "scheduler is null" @kind object;
  #L3de566.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de56c.  v0:= "bufferSize" @kind object;
  #L3de570.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3de576.  call temp:= `replayCallable`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;I)Ljava/util/concurrent/Callable;` @kind static;
  #L3de57c.  v3:= temp @kind object;
  #L3de57e.  call temp:= `replayFunction`(v2, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayFunction:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;` @kind static;
  #L3de584.  v2:= temp @kind object;
  #L3de586.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3de58c.  v2:= temp @kind object;
  #L3de58e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3de660.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3de666.  v5:= temp @kind object;
  #L3de668.  v0:= v6 @kind object;
  #L3de66a.  v1:= v7 @kind object;
  #L3de66c.  v2:= v8 @kind wide;
  #L3de66e.  v4:= v10 @kind object;
  #L3de670.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3de676.  v7:= temp @kind object;
  #L3de678.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler` v6 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de68c.  v0:= "selector is null" @kind object;
  #L3de690.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de696.  v0:= "unit is null" @kind object;
  #L3de69a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de6a0.  v0:= "scheduler is null" @kind object;
  #L3de6a4.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de6aa.  call temp:= `replayCallable`(v1, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable;` @kind static;
  #L3de6b0.  v3:= temp @kind object;
  #L3de6b2.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3de6b8.  v2:= temp @kind object;
  #L3de6ba.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de620.  v0:= "selector is null" @kind object;
  #L3de624.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de62a.  v0:= "scheduler is null" @kind object;
  #L3de62e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de634.  call temp:= `replayCallable`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;)Ljava/util/concurrent/Callable;` @kind static;
  #L3de63a.  v0:= temp @kind object;
  #L3de63c.  call temp:= `replayFunction`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayFunction:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;` @kind static;
  #L3de642.  v2:= temp @kind object;
  #L3de644.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3de64a.  v2:= temp @kind object;
  #L3de64c.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.replay:()Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1064.  call temp:= `createFrom`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.createFrom:(Lio/reactivex/ObservableSource;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3e106a.  v0:= temp @kind object;
  #L3e106c.  return v0 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.replay:(I)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1080.  v0:= "bufferSize" @kind object;
  #L3e1084.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e108a.  call temp:= `create`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/ObservableSource;I)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3e1090.  v2:= temp @kind object;
  #L3e1092.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e10d0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e10d6.  v5:= temp @kind object;
  #L3e10d8.  v0:= v6 @kind object;
  #L3e10da.  v1:= v7;
  #L3e10dc.  v2:= v8 @kind wide;
  #L3e10de.  v4:= v10 @kind object;
  #L3e10e0.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3e10e6.  v7:= temp @kind object;
  #L3e10e8.  return v7 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e10fc.  v0:= "bufferSize" @kind object;
  #L3e1100.  call temp:= `verifyPositive`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e1106.  v0:= "unit is null" @kind object;
  #L3e110a.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1110.  v0:= "scheduler is null" @kind object;
  #L3e1114.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e111a.  v0:= v6 @kind object;
  #L3e111c.  v1:= v8 @kind wide;
  #L3e111e.  v3:= v10 @kind object;
  #L3e1120.  v4:= v11 @kind object;
  #L3e1122.  v5:= v7;
  #L3e1124.  call temp:= `create`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3e112a.  v7:= temp @kind object;
  #L3e112c.  return v7 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `int` v2 , `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.replay:(ILio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e10a4.  v0:= "bufferSize" @kind object;
  #L3e10a8.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e10ae.  call temp:= `replay`(v1, v2) @signature `Lio/reactivex/Observable;.replay:(I)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3e10b4.  v2:= temp @kind object;
  #L3e10b6.  call temp:= `observeOn`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.observeOn:(Lio/reactivex/observables/ConnectableObservable;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3e10bc.  v2:= temp @kind object;
  #L3e10be.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.replay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e116c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e1172.  v0:= temp @kind object;
  #L3e1174.  call temp:= `replay`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3e117a.  v2:= temp @kind object;
  #L3e117c.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1190.  v0:= "unit is null" @kind object;
  #L3e1194.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e119a.  v0:= "scheduler is null" @kind object;
  #L3e119e.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e11a4.  call temp:= `create`(v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3e11aa.  v2:= temp @kind object;
  #L3e11ac.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1140.  v0:= "scheduler is null" @kind object;
  #L3e1144.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e114a.  call temp:= `replay`(v1) @signature `Lio/reactivex/Observable;.replay:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3e1150.  v0:= temp @kind object;
  #L3e1152.  call temp:= `observeOn`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.observeOn:(Lio/reactivex/observables/ConnectableObservable;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L3e1158.  v2:= temp @kind object;
  #L3e115a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v3 @kind this) @signature `Lio/reactivex/Observable;.retry:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3de6cc.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/functions/Predicate;` @kind static;
  #L3de6d2.  v0:= temp @kind object;
  #L3de6d4.  v1:= 9223372036854775807L;
  #L3de6de.  call temp:= `retry`(v3, v1, v0) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3de6e4.  v0:= temp @kind object;
  #L3de6e6.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Observable;.retry:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de74c.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/functions/Predicate;` @kind static;
  #L3de752.  v0:= temp @kind object;
  #L3de754.  call temp:= `retry`(v1, v2, v0) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3de75a.  v2:= temp @kind object;
  #L3de75c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v3 @kind this, `long` v4 , `io.reactivex.functions.Predicate` v6 @kind object) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3de770.  v0:= 0L;
  #L3de774.  v2:= lcmp(v4, v0);
  #L3de778.  if v2 < 0 then goto L3de79a;
  #L3de77c.  v0:= "predicate is null" @kind object;
  #L3de780.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de786.  v0:= new `io.reactivex.internal.operators.observable.ObservableRetryPredicate`;
  #L3de78a.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryPredicate;.<init>:(Lio/reactivex/Observable;JLio/reactivex/functions/Predicate;)V` @kind direct;
  #L3de790.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de796.  v4:= temp @kind object;
  #L3de798.  return v4 @kind object;
  #L3de79a.  v6:= new `java.lang.IllegalArgumentException`;
  #L3de79e.  v0:= new `java.lang.StringBuilder`;
  #L3de7a2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3de7a8.  v1:= "times >= 0 required but it was " @kind object;
  #L3de7ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3de7b2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3de7b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3de7be.  v4:= temp @kind object;
  #L3de7c0.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3de7c6.  throw v6;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/Observable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de6f8.  v0:= "predicate is null" @kind object;
  #L3de6fc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de702.  v0:= new `io.reactivex.internal.operators.observable.ObservableRetryBiPredicate`;
  #L3de706.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryBiPredicate;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L3de70c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de712.  v2:= temp @kind object;
  #L3de714.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/Observable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3de728.  v0:= 9223372036854775807L;
  #L3de732.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3de738.  v3:= temp @kind object;
  #L3de73a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `retryUntil`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/Observable;.retryUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3de7d8.  v0:= "stop is null" @kind object;
  #L3de7dc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de7e2.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/functions/Predicate;` @kind static;
  #L3de7e8.  v3:= temp @kind object;
  #L3de7ea.  v0:= 9223372036854775807L;
  #L3de7f4.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L3de7fa.  v3:= temp @kind object;
  #L3de7fc.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `retryWhen`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de810.  v0:= "handler is null" @kind object;
  #L3de814.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de81a.  v0:= new `io.reactivex.internal.operators.observable.ObservableRetryWhen`;
  #L3de81e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryWhen;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3de824.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de82a.  v2:= temp @kind object;
  #L3de82c.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/Observable;.safeSubscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1580.  v0:= "s is null" @kind object;
  #L3e1584.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e158a.  v0:= instanceof @variable v2 @type ^`io.reactivex.observers.SafeObserver` @kind boolean;
  #L3e158e.  if v0 == 0 then goto L3e159a;
  #L3e1592.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e1598.  goto L3e15aa;
  #L3e159a.  v0:= new `io.reactivex.observers.SafeObserver`;
  #L3e159e.  call `<init>`(v0, v2) @signature `Lio/reactivex/observers/SafeObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L3e15a4.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e15aa.  return @kind void;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de8a0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3de8a6.  v0:= temp @kind object;
  #L3de8a8.  call temp:= `sample`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3de8ae.  v2:= temp @kind object;
  #L3de8b0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3de8f0.  v0:= "unit is null" @kind object;
  #L3de8f4.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de8fa.  v0:= "scheduler is null" @kind object;
  #L3de8fe.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de904.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleTimed`;
  #L3de908.  v7:= 0I;
  #L3de90a.  v1:= v0 @kind object;
  #L3de90c.  v2:= v8 @kind object;
  #L3de90e.  v3:= v9 @kind wide;
  #L3de910.  v5:= v11 @kind object;
  #L3de912.  v6:= v12 @kind object;
  #L3de914.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3de91a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de920.  v9:= temp @kind object;
  #L3de922.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3de934.  v0:= "unit is null" @kind object;
  #L3de938.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de93e.  v0:= "scheduler is null" @kind object;
  #L3de942.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de948.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleTimed`;
  #L3de94c.  v1:= v0 @kind object;
  #L3de94e.  v2:= v8 @kind object;
  #L3de950.  v3:= v9 @kind wide;
  #L3de952.  v5:= v11 @kind object;
  #L3de954.  v6:= v12 @kind object;
  #L3de956.  v7:= v13;
  #L3de958.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3de95e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de964.  v9:= temp @kind object;
  #L3de966.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3de8c4.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3de8ca.  v4:= temp @kind object;
  #L3de8cc.  v0:= v6 @kind object;
  #L3de8ce.  v1:= v7 @kind wide;
  #L3de8d0.  v3:= v9 @kind object;
  #L3de8d2.  v5:= v10;
  #L3de8d4.  call temp:= `sample`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3de8da.  v7:= temp @kind object;
  #L3de8dc.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.sample:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3de840.  v0:= "sampler is null" @kind object;
  #L3de844.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de84a.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleWithObservable`;
  #L3de84e.  v1:= 0I;
  #L3de850.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Z)V` @kind direct;
  #L3de856.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de85c.  v3:= temp @kind object;
  #L3de85e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.sample:(Lio/reactivex/ObservableSource;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de870.  v0:= "sampler is null" @kind object;
  #L3de874.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de87a.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleWithObservable`;
  #L3de87e.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Z)V` @kind direct;
  #L3de884.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de88a.  v2:= temp @kind object;
  #L3de88c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `scan`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Observable;.scan:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de978.  v0:= "accumulator is null" @kind object;
  #L3de97c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de982.  v0:= new `io.reactivex.internal.operators.observable.ObservableScan`;
  #L3de986.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableScan;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3de98c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de992.  v2:= temp @kind object;
  #L3de994.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `scan`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.scan:(Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de9a8.  v0:= "seed is null" @kind object;
  #L3de9ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de9b2.  call temp:= `justCallable`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L3de9b8.  v2:= temp @kind object;
  #L3de9ba.  call temp:= `scanWith`(v1, v2, v3) @signature `Lio/reactivex/Observable;.scanWith:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @kind virtual;
  #L3de9c0.  v2:= temp @kind object;
  #L3de9c2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `scanWith`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.scanWith:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3de9d4.  v0:= "seedSupplier is null" @kind object;
  #L3de9d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de9de.  v0:= "accumulator is null" @kind object;
  #L3de9e2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de9e8.  v0:= new `io.reactivex.internal.operators.observable.ObservableScanSeed`;
  #L3de9ec.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScanSeed;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3de9f2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3de9f8.  v2:= temp @kind object;
  #L3de9fa.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `serialize`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.serialize:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dea0c.  v0:= new `io.reactivex.internal.operators.observable.ObservableSerialized`;
  #L3dea10.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSerialized;.<init>:(Lio/reactivex/Observable;)V` @kind direct;
  #L3dea16.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dea1c.  v0:= temp @kind object;
  #L3dea1e.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `share`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.share:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dea30.  call temp:= `publish`(v1) @signature `Lio/reactivex/Observable;.publish:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L3dea36.  v0:= temp @kind object;
  #L3dea38.  call temp:= `refCount`(v0) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:()Lio/reactivex/Observable;` @kind virtual;
  #L3dea3e.  v0:= temp @kind object;
  #L3dea40.  return v0 @kind object;
}
procedure `io.reactivex.Single` `single`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0ba4.  v0:= "defaultItem is null" @kind object;
  #L3e0ba8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0bae.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleSingle`;
  #L3e0bb2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3e0bb8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0bbe.  v2:= temp @kind object;
  #L3e0bc0.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `singleElement`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.singleElement:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3daf38.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleMaybe`;
  #L3daf3c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleMaybe;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3daf42.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L3daf48.  v0:= temp @kind object;
  #L3daf4a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `singleOrError`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.singleOrError:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e0bd4.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleSingle`;
  #L3e0bd8.  v1:= 0I;
  #L3e0bda.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L3e0be0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0be6.  v0:= temp @kind object;
  #L3e0be8.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `skip`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.skip:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dea54.  v0:= 0L;
  #L3dea58.  v2:= lcmp(v4, v0);
  #L3dea5c.  if v2 > 0 then goto L3dea6a;
  #L3dea60.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dea66.  v4:= temp @kind object;
  #L3dea68.  return v4 @kind object;
  #L3dea6a.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkip`;
  #L3dea6e.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableSkip;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L3dea74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dea7a.  v4:= temp @kind object;
  #L3dea7c.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `skip`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.skip:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3dea90.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind static;
  #L3dea96.  v1:= temp @kind object;
  #L3dea98.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/Observable;.skipUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3dea9e.  v1:= temp @kind object;
  #L3deaa0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `skip`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.skip:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3deab4.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3deaba.  v1:= temp @kind object;
  #L3deabc.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/Observable;.skipUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3deac2.  v1:= temp @kind object;
  #L3deac4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/Observable;.skipLast:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3dead8.  if v4 < 0 then goto L3deafe;
  #L3deadc.  if v4 != 0 then goto L3deaea;
  #L3deae0.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3deae6.  v4:= temp @kind object;
  #L3deae8.  return v4 @kind object;
  #L3deaea.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkipLast`;
  #L3deaee.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLast;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3deaf4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3deafa.  v4:= temp @kind object;
  #L3deafc.  return v4 @kind object;
  #L3deafe.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3deb02.  v1:= new `java.lang.StringBuilder`;
  #L3deb06.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3deb0c.  v2:= "count >= 0 required but it was " @kind object;
  #L3deb10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3deb16.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3deb1c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3deb22.  v4:= temp @kind object;
  #L3deb24.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3deb2a.  throw v0;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3deb3c.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3deb42.  v4:= temp @kind object;
  #L3deb44.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3deb4a.  v6:= temp;
  #L3deb4c.  v5:= 0I;
  #L3deb4e.  v0:= v7 @kind object;
  #L3deb50.  v1:= v8 @kind wide;
  #L3deb52.  v3:= v10 @kind object;
  #L3deb54.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3deb5a.  v8:= temp @kind object;
  #L3deb5c.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3deba4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3debaa.  v6:= temp;
  #L3debac.  v5:= 0I;
  #L3debae.  v0:= v7 @kind object;
  #L3debb0.  v1:= v8 @kind wide;
  #L3debb2.  v3:= v10 @kind object;
  #L3debb4.  v4:= v11 @kind object;
  #L3debb6.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3debbc.  v8:= temp @kind object;
  #L3debbe.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3debd0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3debd6.  v6:= temp;
  #L3debd8.  v0:= v7 @kind object;
  #L3debda.  v1:= v8 @kind wide;
  #L3debdc.  v3:= v10 @kind object;
  #L3debde.  v4:= v11 @kind object;
  #L3debe0.  v5:= v12;
  #L3debe2.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3debe8.  v8:= temp @kind object;
  #L3debea.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3debfc.  v0:= "unit is null" @kind object;
  #L3dec00.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dec06.  v0:= "scheduler is null" @kind object;
  #L3dec0a.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dec10.  v0:= "bufferSize" @kind object;
  #L3dec14.  call temp:= `verifyPositive`(v15, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dec1a.  v7:= v15 ^< 1;
  #L3dec1e.  v15:= new `io.reactivex.internal.operators.observable.ObservableSkipLastTimed`;
  #L3dec22.  v1:= v15 @kind object;
  #L3dec24.  v2:= v9 @kind object;
  #L3dec26.  v3:= v10 @kind wide;
  #L3dec28.  v5:= v12 @kind object;
  #L3dec2a.  v6:= v13 @kind object;
  #L3dec2c.  v8:= v14;
  #L3dec2e.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLastTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L3dec34.  call temp:= `onAssembly`(v15) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dec3a.  v10:= temp @kind object;
  #L3dec3c.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3deb70.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3deb76.  v4:= temp @kind object;
  #L3deb78.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3deb7e.  v6:= temp;
  #L3deb80.  v0:= v7 @kind object;
  #L3deb82.  v1:= v8 @kind wide;
  #L3deb84.  v3:= v10 @kind object;
  #L3deb86.  v5:= v11;
  #L3deb88.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3deb8e.  v8:= temp @kind object;
  #L3deb90.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.skipUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dec50.  v0:= "other is null" @kind object;
  #L3dec54.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dec5a.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkipUntil`;
  #L3dec5e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3dec64.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dec6a.  v2:= temp @kind object;
  #L3dec6c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `skipWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.skipWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dec80.  v0:= "predicate is null" @kind object;
  #L3dec84.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dec8a.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkipWhile`;
  #L3dec8e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3dec94.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dec9a.  v2:= temp @kind object;
  #L3dec9c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `sorted`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.sorted:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3decb0.  call temp:= `toList`(v2) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @kind virtual;
  #L3decb6.  v0:= temp @kind object;
  #L3decb8.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L3decbe.  v0:= temp @kind object;
  #L3decc0.  call temp:= `naturalComparator`() @signature `Lio/reactivex/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L3decc6.  v1:= temp @kind object;
  #L3decc8.  call temp:= `listSorter`(v1) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L3decce.  v1:= temp @kind object;
  #L3decd0.  call temp:= `map`(v0, v1) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3decd6.  v0:= temp @kind object;
  #L3decd8.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3decde.  v1:= temp @kind object;
  #L3dece0.  call temp:= `flatMapIterable`(v0, v1) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3dece6.  v0:= temp @kind object;
  #L3dece8.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `sorted`(`io.reactivex.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/Observable;.sorted:(Ljava/util/Comparator;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3decfc.  v0:= "sortFunction is null" @kind object;
  #L3ded00.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ded06.  call temp:= `toList`(v1) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @kind virtual;
  #L3ded0c.  v0:= temp @kind object;
  #L3ded0e.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L3ded14.  v0:= temp @kind object;
  #L3ded16.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L3ded1c.  v2:= temp @kind object;
  #L3ded1e.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3ded24.  v2:= temp @kind object;
  #L3ded26.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3ded2c.  v0:= temp @kind object;
  #L3ded2e.  call temp:= `flatMapIterable`(v2, v0) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3ded34.  v2:= temp @kind object;
  #L3ded36.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.startWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ded48.  v0:= "other is null" @kind object;
  #L3ded4c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3ded52.  v0:= 2I;
  #L3ded54.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3ded58.  v1:= 0I;
  #L3ded5a.  v0[v1]:= v3 @kind object;
  #L3ded5e.  v3:= 1I;
  #L3ded60.  v0[v3]:= v2 @kind object;
  #L3ded64.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3ded6a.  v3:= temp @kind object;
  #L3ded6c.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Observable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/Observable;.startWith:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ded80.  v0:= 2I;
  #L3ded82.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3ded86.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L3ded8c.  v3:= temp @kind object;
  #L3ded8e.  v1:= 0I;
  #L3ded90.  v0[v1]:= v3 @kind object;
  #L3ded94.  v3:= 1I;
  #L3ded96.  v0[v3]:= v2 @kind object;
  #L3ded9a.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3deda0.  v3:= temp @kind object;
  #L3deda2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Observable;.startWith:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dedb4.  v0:= "item is null" @kind object;
  #L3dedb8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dedbe.  v0:= 2I;
  #L3dedc0.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3dedc4.  call temp:= `just`(v3) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dedca.  v3:= temp @kind object;
  #L3dedcc.  v1:= 0I;
  #L3dedce.  v0[v1]:= v3 @kind object;
  #L3dedd2.  v3:= 1I;
  #L3dedd4.  v0[v3]:= v2 @kind object;
  #L3dedd8.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dedde.  v3:= temp @kind object;
  #L3dede0.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `startWithArray`(`io.reactivex.Observable` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lio/reactivex/Observable;.startWithArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dedf4.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L3dedfa.  v3:= temp @kind object;
  #L3dedfc.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3dee02.  v0:= temp @kind object;
  #L3dee04.  if v3 != v0 then goto L3dee12;
  #L3dee08.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dee0e.  v3:= temp @kind object;
  #L3dee10.  return v3 @kind object;
  #L3dee12.  v0:= 2I;
  #L3dee14.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3dee18.  v1:= 0I;
  #L3dee1a.  v0[v1]:= v3 @kind object;
  #L3dee1e.  v3:= 1I;
  #L3dee20.  v0[v3]:= v2 @kind object;
  #L3dee24.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L3dee2a.  v3:= temp @kind object;
  #L3dee2c.  return v3 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v4 @kind this) @signature `Lio/reactivex/Observable;.subscribe:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e0f50.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3e0f56.  v0:= temp @kind object;
  #L3e0f58.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e0f5c.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e0f60.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3e0f66.  v3:= temp @kind object;
  #L3e0f68.  call temp:= `subscribe`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e0f6e.  v0:= temp @kind object;
  #L3e0f70.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3e0f84.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L3e0f88.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e0f8c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3e0f92.  v2:= temp @kind object;
  #L3e0f94.  call temp:= `subscribe`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e0f9a.  v4:= temp @kind object;
  #L3e0f9c.  return v4 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e0fb0.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L3e0fb4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3e0fba.  v1:= temp @kind object;
  #L3e0fbc.  call temp:= `subscribe`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e0fc2.  v3:= temp @kind object;
  #L3e0fc4.  return v3 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0fd8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3e0fde.  v0:= temp @kind object;
  #L3e0fe0.  call temp:= `subscribe`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L3e0fe6.  v2:= temp @kind object;
  #L3e0fe8.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object, `io.reactivex.functions.Consumer` v5 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0ffc.  v0:= "onNext is null" @kind object;
  #L3e1000.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1006.  v0:= "onError is null" @kind object;
  #L3e100a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1010.  v0:= "onComplete is null" @kind object;
  #L3e1014.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e101a.  v0:= "onSubscribe is null" @kind object;
  #L3e101e.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1024.  v0:= new `io.reactivex.internal.observers.LambdaObserver`;
  #L3e1028.  call `<init>`(v0, v2, v3, v4, v5) @signature `Lio/reactivex/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L3e102e.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e1034.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e15bc.  v0:= "observer is null" @kind object;
  #L3e15c0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e15c6.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Observable;Lio/reactivex/Observer;)Lio/reactivex/Observer;` @kind static;
  #L3e15cc.  v3:= temp @kind object;
  #L3e15ce.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null Observer. Please change the handler provided to RxJavaPlugins.setOnObservableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L3e15d2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e15d8.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/Observable;.subscribeActual:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e15de.  return @kind void;
  #L3e15e0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e15e2.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e15e8.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L3e15ee.  v0:= new `java.lang.NullPointerException`;
  #L3e15f2.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L3e15f6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e15fc.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3e1602.  throw v0;
  #L3e1604.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L3e1606.  throw v3;
  catch `java.lang.NullPointerException` @[L3e15c6..L3e15de] goto L3e1604;
  catch `java.lang.Throwable` @[L3e15c6..L3e15de] goto L3e15e0;
}
procedure `void` `subscribeActual`(`io.reactivex.Observer` v0 @kind object) @signature `Lio/reactivex/Observable;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.Observable` `subscribeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dee40.  v0:= "scheduler is null" @kind object;
  #L3dee44.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dee4a.  v0:= new `io.reactivex.internal.operators.observable.ObservableSubscribeOn`;
  #L3dee4e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3dee54.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dee5a.  v2:= temp @kind object;
  #L3dee5c.  return v2 @kind object;
}
procedure `io.reactivex.Observer` `subscribeWith`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/Observable;.subscribeWith:(Lio/reactivex/Observer;)Lio/reactivex/Observer;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e07c4.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e07ca.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchIfEmpty`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.switchIfEmpty:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dee70.  v0:= "other is null" @kind object;
  #L3dee74.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dee7a.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty`;
  #L3dee7e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchIfEmpty;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3dee84.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dee8a.  v2:= temp @kind object;
  #L3dee8c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `switchMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.switchMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3deea0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3deea6.  v0:= temp;
  #L3deea8.  call temp:= `switchMap`(v1, v2, v0) @signature `Lio/reactivex/Observable;.switchMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3deeae.  v2:= temp @kind object;
  #L3deeb0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `switchMap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3deec4.  v0:= "mapper is null" @kind object;
  #L3deec8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3deece.  v0:= "bufferSize" @kind object;
  #L3deed2.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3deed8.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3deedc.  if v0 == 0 then goto L3def06;
  #L3deee0.  v4:= v2 @kind object;
  #L3deee2.  v4:= (`io.reactivex.internal.fuseable.ScalarCallable`) v4 @kind object;
  #L3deee6.  call temp:= `call`(v4) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3deeec.  v4:= temp @kind object;
  #L3deeee.  if v4 != 0 then goto L3deefc;
  #L3deef2.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3deef8.  v3:= temp @kind object;
  #L3deefa.  return v3 @kind object;
  #L3deefc.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3def02.  v3:= temp @kind object;
  #L3def04.  return v3 @kind object;
  #L3def06.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L3def0a.  v1:= 0I;
  #L3def0c.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3def12.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3def18.  v3:= temp @kind object;
  #L3def1a.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `switchMapCompletable`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dad8c.  v0:= "mapper is null" @kind object;
  #L3dad90.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dad96.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable`;
  #L3dad9a.  v1:= 0I;
  #L3dad9c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3dada2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3dada8.  v3:= temp @kind object;
  #L3dadaa.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `switchMapCompletableDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapCompletableDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dadbc.  v0:= "mapper is null" @kind object;
  #L3dadc0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dadc6.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable`;
  #L3dadca.  v1:= 1I;
  #L3dadcc.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3dadd2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L3dadd8.  v3:= temp @kind object;
  #L3dadda.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.switchMapDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3def2c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3def32.  v0:= temp;
  #L3def34.  call temp:= `switchMapDelayError`(v1, v2, v0) @signature `Lio/reactivex/Observable;.switchMapDelayError:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3def3a.  v2:= temp @kind object;
  #L3def3c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `switchMapDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchMapDelayError:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3def50.  v0:= "mapper is null" @kind object;
  #L3def54.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3def5a.  v0:= "bufferSize" @kind object;
  #L3def5e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3def64.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L3def68.  if v0 == 0 then goto L3def92;
  #L3def6c.  v4:= v2 @kind object;
  #L3def6e.  v4:= (`io.reactivex.internal.fuseable.ScalarCallable`) v4 @kind object;
  #L3def72.  call temp:= `call`(v4) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L3def78.  v4:= temp @kind object;
  #L3def7a.  if v4 != 0 then goto L3def88;
  #L3def7e.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L3def84.  v3:= temp @kind object;
  #L3def86.  return v3 @kind object;
  #L3def88.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L3def8e.  v3:= temp @kind object;
  #L3def90.  return v3 @kind object;
  #L3def92.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L3def96.  v1:= 1I;
  #L3def98.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L3def9e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3defa4.  v3:= temp @kind object;
  #L3defa6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapMaybe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3defb8.  v0:= "mapper is null" @kind object;
  #L3defbc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3defc2.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe`;
  #L3defc6.  v1:= 0I;
  #L3defc8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3defce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3defd4.  v3:= temp @kind object;
  #L3defd6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapMaybeDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapMaybeDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3defe8.  v0:= "mapper is null" @kind object;
  #L3defec.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3deff2.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe`;
  #L3deff6.  v1:= 1I;
  #L3deff8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3deffe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df004.  v3:= temp @kind object;
  #L3df006.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapSingle`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapSingle:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3df018.  v0:= "mapper is null" @kind object;
  #L3df01c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df022.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle`;
  #L3df026.  v1:= 0I;
  #L3df028.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3df02e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df034.  v3:= temp @kind object;
  #L3df036.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapSingleDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapSingleDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3df048.  v0:= "mapper is null" @kind object;
  #L3df04c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df052.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle`;
  #L3df056.  v1:= 1I;
  #L3df058.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L3df05e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df064.  v3:= temp @kind object;
  #L3df066.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `take`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.take:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3df148.  v0:= 0L;
  #L3df14c.  v2:= lcmp(v4, v0);
  #L3df150.  if v2 < 0 then goto L3df168;
  #L3df154.  v0:= new `io.reactivex.internal.operators.observable.ObservableTake`;
  #L3df158.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTake;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L3df15e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df164.  v4:= temp @kind object;
  #L3df166.  return v4 @kind object;
  #L3df168.  v0:= new `java.lang.IllegalArgumentException`;
  #L3df16c.  v1:= new `java.lang.StringBuilder`;
  #L3df170.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df176.  v2:= "count >= 0 required but it was " @kind object;
  #L3df17a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df180.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df186.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df18c.  v4:= temp @kind object;
  #L3df18e.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3df194.  throw v0;
}
procedure `io.reactivex.Observable` `take`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.take:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3df1a8.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind static;
  #L3df1ae.  v1:= temp @kind object;
  #L3df1b0.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3df1b6.  v1:= temp @kind object;
  #L3df1b8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `take`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.take:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3df1cc.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L3df1d2.  v1:= temp @kind object;
  #L3df1d4.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L3df1da.  v1:= temp @kind object;
  #L3df1dc.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/Observable;.takeLast:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3df1f0.  if v4 < 0 then goto L3df23a;
  #L3df1f4.  if v4 != 0 then goto L3df20c;
  #L3df1f8.  v4:= new `io.reactivex.internal.operators.observable.ObservableIgnoreElements`;
  #L3df1fc.  call `<init>`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3df202.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df208.  v4:= temp @kind object;
  #L3df20a.  return v4 @kind object;
  #L3df20c.  v0:= 1I;
  #L3df20e.  if v4 != v0 then goto L3df226;
  #L3df212.  v4:= new `io.reactivex.internal.operators.observable.ObservableTakeLastOne`;
  #L3df216.  call `<init>`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3df21c.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df222.  v4:= temp @kind object;
  #L3df224.  return v4 @kind object;
  #L3df226.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeLast`;
  #L3df22a.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLast;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3df230.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df236.  v4:= temp @kind object;
  #L3df238.  return v4 @kind object;
  #L3df23a.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3df23e.  v1:= new `java.lang.StringBuilder`;
  #L3df242.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df248.  v2:= "count >= 0 required but it was " @kind object;
  #L3df24c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df252.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df258.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df25e.  v4:= temp @kind object;
  #L3df260.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3df266.  throw v0;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3df368.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3df36e.  v6:= temp @kind object;
  #L3df370.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3df376.  v8:= temp;
  #L3df378.  v7:= 0I;
  #L3df37a.  v0:= v9 @kind object;
  #L3df37c.  v1:= v10 @kind wide;
  #L3df37e.  v3:= v12 @kind wide;
  #L3df380.  v5:= v14 @kind object;
  #L3df382.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3df388.  v10:= temp @kind object;
  #L3df38a.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object, `io.reactivex.Scheduler` v15 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3df39c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3df3a2.  v8:= temp;
  #L3df3a4.  v7:= 0I;
  #L3df3a6.  v0:= v9 @kind object;
  #L3df3a8.  v1:= v10 @kind wide;
  #L3df3aa.  v3:= v12 @kind wide;
  #L3df3ac.  v5:= v14 @kind object;
  #L3df3ae.  v6:= v15 @kind object;
  #L3df3b0.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3df3b6.  v10:= temp @kind object;
  #L3df3b8.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v11 @kind this, `long` v12 , `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.Scheduler` v17 @kind object, `boolean` v18 , `int` v19 ) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3df3cc.  v2:= v12 @kind wide;
  #L3df3ce.  v0:= "unit is null" @kind object;
  #L3df3d2.  v6:= v16 @kind object;
  #L3df3d6.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df3dc.  v0:= "scheduler is null" @kind object;
  #L3df3e0.  v7:= v17 @kind object;
  #L3df3e4.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df3ea.  v0:= "bufferSize" @kind object;
  #L3df3ee.  v8:= v19;
  #L3df3f2.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3df3f8.  v0:= 0L;
  #L3df3fc.  v4:= lcmp(v2, v0);
  #L3df400.  if v4 < 0 then goto L3df430;
  #L3df404.  v10:= new `io.reactivex.internal.operators.observable.ObservableTakeLastTimed`;
  #L3df408.  v0:= v10 @kind object;
  #L3df40a.  v1:= v11 @kind object;
  #L3df40c.  v2:= v12 @kind wide;
  #L3df40e.  v4:= v14 @kind wide;
  #L3df410.  v6:= v16 @kind object;
  #L3df414.  v7:= v17 @kind object;
  #L3df418.  v8:= v19;
  #L3df41c.  v9:= v18;
  #L3df420.  call `<init>`(v0, v1, v2, v4, v6, v7, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L3df426.  call temp:= `onAssembly`(v10) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df42c.  v0:= temp @kind object;
  #L3df42e.  return v0 @kind object;
  #L3df430.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3df434.  v1:= new `java.lang.StringBuilder`;
  #L3df438.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df43e.  v4:= "count >= 0 required but it was " @kind object;
  #L3df442.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df448.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df44e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df454.  v1:= temp @kind object;
  #L3df456.  call `<init>`(v0, v1) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3df45c.  throw v0;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3df278.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3df27e.  v4:= temp @kind object;
  #L3df280.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3df286.  v6:= temp;
  #L3df288.  v5:= 0I;
  #L3df28a.  v0:= v7 @kind object;
  #L3df28c.  v1:= v8 @kind wide;
  #L3df28e.  v3:= v10 @kind object;
  #L3df290.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3df296.  v8:= temp @kind object;
  #L3df298.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3df2e0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3df2e6.  v6:= temp;
  #L3df2e8.  v5:= 0I;
  #L3df2ea.  v0:= v7 @kind object;
  #L3df2ec.  v1:= v8 @kind wide;
  #L3df2ee.  v3:= v10 @kind object;
  #L3df2f0.  v4:= v11 @kind object;
  #L3df2f2.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3df2f8.  v8:= temp @kind object;
  #L3df2fa.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3df30c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3df312.  v6:= temp;
  #L3df314.  v0:= v7 @kind object;
  #L3df316.  v1:= v8 @kind wide;
  #L3df318.  v3:= v10 @kind object;
  #L3df31a.  v4:= v11 @kind object;
  #L3df31c.  v5:= v12;
  #L3df31e.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3df324.  v8:= temp @kind object;
  #L3df326.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3df338.  v1:= 9223372036854775807L;
  #L3df342.  v0:= v9 @kind object;
  #L3df344.  v3:= v10 @kind wide;
  #L3df346.  v5:= v12 @kind object;
  #L3df348.  v6:= v13 @kind object;
  #L3df34a.  v7:= v14;
  #L3df34c.  v8:= v15;
  #L3df34e.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3df354.  v10:= temp @kind object;
  #L3df356.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3df2ac.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3df2b2.  v4:= temp @kind object;
  #L3df2b4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3df2ba.  v6:= temp;
  #L3df2bc.  v0:= v7 @kind object;
  #L3df2be.  v1:= v8 @kind wide;
  #L3df2c0.  v3:= v10 @kind object;
  #L3df2c2.  v5:= v11;
  #L3df2c4.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L3df2ca.  v8:= temp @kind object;
  #L3df2cc.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df470.  v0:= "other is null" @kind object;
  #L3df474.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df47a.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeUntil`;
  #L3df47e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntil;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3df484.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df48a.  v2:= temp @kind object;
  #L3df48c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `takeUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df4a0.  v0:= "predicate is null" @kind object;
  #L3df4a4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df4aa.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate`;
  #L3df4ae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntilPredicate;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3df4b4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df4ba.  v2:= temp @kind object;
  #L3df4bc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `takeWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.takeWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df4d0.  v0:= "predicate is null" @kind object;
  #L3df4d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df4da.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeWhile`;
  #L3df4de.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeWhile;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L3df4e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df4ea.  v2:= temp @kind object;
  #L3df4ec.  return v2 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.test:()Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e11c0.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3e11c4.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3e11ca.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e11d0.  return v0 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Observable` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/Observable;.test:(Z)Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e11e4.  v0:= new `io.reactivex.observers.TestObserver`;
  #L3e11e8.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L3e11ee.  if v2 == 0 then goto L3e11f8;
  #L3e11f2.  call `dispose`(v0) @signature `Lio/reactivex/observers/TestObserver;.dispose:()V` @kind virtual;
  #L3e11f8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L3e11fe.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `throttleFirst`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df500.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df506.  v0:= temp @kind object;
  #L3df508.  call temp:= `throttleFirst`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3df50e.  v2:= temp @kind object;
  #L3df510.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `throttleFirst`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3df524.  v0:= "unit is null" @kind object;
  #L3df528.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df52e.  v0:= "scheduler is null" @kind object;
  #L3df532.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df538.  v0:= new `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed`;
  #L3df53c.  v1:= v0 @kind object;
  #L3df53e.  v2:= v7 @kind object;
  #L3df540.  v3:= v8 @kind wide;
  #L3df542.  v5:= v10 @kind object;
  #L3df544.  v6:= v11 @kind object;
  #L3df546.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3df54c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df552.  v8:= temp @kind object;
  #L3df554.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `throttleLast`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3df568.  call temp:= `sample`(v0, v1, v3) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind virtual;
  #L3df56e.  v1:= temp @kind object;
  #L3df570.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `throttleLast`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3df584.  call temp:= `sample`(v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3df58a.  v1:= temp @kind object;
  #L3df58c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `throttleLatest`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3df5a0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df5a6.  v4:= temp @kind object;
  #L3df5a8.  v5:= 0I;
  #L3df5aa.  v0:= v6 @kind object;
  #L3df5ac.  v1:= v7 @kind wide;
  #L3df5ae.  v3:= v9 @kind object;
  #L3df5b0.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3df5b6.  v7:= temp @kind object;
  #L3df5b8.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `throttleLatest`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3df5f8.  v5:= 0I;
  #L3df5fa.  v0:= v6 @kind object;
  #L3df5fc.  v1:= v7 @kind wide;
  #L3df5fe.  v3:= v9 @kind object;
  #L3df600.  v4:= v10 @kind object;
  #L3df602.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3df608.  v7:= temp @kind object;
  #L3df60a.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `throttleLatest`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3df61c.  v0:= "unit is null" @kind object;
  #L3df620.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df626.  v0:= "scheduler is null" @kind object;
  #L3df62a.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df630.  v0:= new `io.reactivex.internal.operators.observable.ObservableThrottleLatest`;
  #L3df634.  v1:= v0 @kind object;
  #L3df636.  v2:= v8 @kind object;
  #L3df638.  v3:= v9 @kind wide;
  #L3df63a.  v5:= v11 @kind object;
  #L3df63c.  v6:= v12 @kind object;
  #L3df63e.  v7:= v13;
  #L3df640.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleLatest;.<init>:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L3df646.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df64c.  v9:= temp @kind object;
  #L3df64e.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `throttleLatest`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3df5cc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df5d2.  v4:= temp @kind object;
  #L3df5d4.  v0:= v6 @kind object;
  #L3df5d6.  v1:= v7 @kind wide;
  #L3df5d8.  v3:= v9 @kind object;
  #L3df5da.  v5:= v10;
  #L3df5dc.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L3df5e2.  v7:= temp @kind object;
  #L3df5e4.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `throttleWithTimeout`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3df660.  call temp:= `debounce`(v0, v1, v3) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind virtual;
  #L3df666.  v1:= temp @kind object;
  #L3df668.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `throttleWithTimeout`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3df67c.  call temp:= `debounce`(v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3df682.  v1:= temp @kind object;
  #L3df684.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.timeInterval:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3df698.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3df69c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df6a2.  v1:= temp @kind object;
  #L3df6a4.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3df6aa.  v0:= temp @kind object;
  #L3df6ac.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.timeInterval:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df6c0.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3df6c4.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3df6ca.  v2:= temp @kind object;
  #L3df6cc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df6e0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df6e6.  v0:= temp @kind object;
  #L3df6e8.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3df6ee.  v2:= temp @kind object;
  #L3df6f0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df704.  v0:= "unit is null" @kind object;
  #L3df708.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df70e.  v0:= "scheduler is null" @kind object;
  #L3df712.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df718.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeInterval`;
  #L3df71c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeInterval;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3df722.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3df728.  v2:= temp @kind object;
  #L3df72a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3df7d8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df7de.  v5:= temp @kind object;
  #L3df7e0.  v4:= 0I;
  #L3df7e2.  v0:= v6 @kind object;
  #L3df7e4.  v1:= v7 @kind wide;
  #L3df7e6.  v3:= v9 @kind object;
  #L3df7e8.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L3df7ee.  v7:= temp @kind object;
  #L3df7f0.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3df804.  v0:= "other is null" @kind object;
  #L3df808.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df80e.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df814.  v6:= temp @kind object;
  #L3df816.  v1:= v7 @kind object;
  #L3df818.  v2:= v8 @kind wide;
  #L3df81a.  v4:= v10 @kind object;
  #L3df81c.  v5:= v11 @kind object;
  #L3df81e.  call temp:= `timeout0`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L3df824.  v8:= temp @kind object;
  #L3df826.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3df838.  v4:= 0I;
  #L3df83a.  v0:= v6 @kind object;
  #L3df83c.  v1:= v7 @kind wide;
  #L3df83e.  v3:= v9 @kind object;
  #L3df840.  v5:= v10 @kind object;
  #L3df842.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L3df848.  v7:= temp @kind object;
  #L3df84a.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3df85c.  v0:= "other is null" @kind object;
  #L3df860.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df866.  v0:= v6 @kind object;
  #L3df868.  v1:= v7 @kind wide;
  #L3df86a.  v3:= v9 @kind object;
  #L3df86c.  v4:= v11 @kind object;
  #L3df86e.  v5:= v10 @kind object;
  #L3df870.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L3df876.  v7:= temp @kind object;
  #L3df878.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df73c.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L3df740.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df746.  v0:= 0I;
  #L3df748.  call temp:= `timeout0`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.timeout0:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L3df74e.  v2:= temp @kind object;
  #L3df750.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df764.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L3df768.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df76e.  v0:= "other is null" @kind object;
  #L3df772.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df778.  call temp:= `timeout0`(v1, v2, v3, v4) @signature `Lio/reactivex/Observable;.timeout0:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L3df77e.  v2:= temp @kind object;
  #L3df780.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df794.  v0:= 0I;
  #L3df796.  call temp:= `timeout0`(v1, v0, v2, v0) @signature `Lio/reactivex/Observable;.timeout0:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L3df79c.  v2:= temp @kind object;
  #L3df79e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df7b0.  v0:= "other is null" @kind object;
  #L3df7b4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df7ba.  v0:= 0I;
  #L3df7bc.  call temp:= `timeout0`(v1, v0, v2, v3) @signature `Lio/reactivex/Observable;.timeout0:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L3df7c2.  v2:= temp @kind object;
  #L3df7c4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.timestamp:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3df968.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3df96c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df972.  v1:= temp @kind object;
  #L3df974.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3df97a.  v0:= temp @kind object;
  #L3df97c.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.timestamp:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df990.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3df994.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3df99a.  v2:= temp @kind object;
  #L3df99c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df9b0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3df9b6.  v0:= temp @kind object;
  #L3df9b8.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L3df9be.  v2:= temp @kind object;
  #L3df9c0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3df9d4.  v0:= "unit is null" @kind object;
  #L3df9d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df9de.  v0:= "scheduler is null" @kind object;
  #L3df9e2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3df9e8.  call temp:= `timestampWith`(v2, v3) @signature `Lio/reactivex/internal/functions/Functions;.timestampWith:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;` @kind static;
  #L3df9ee.  v2:= temp @kind object;
  #L3df9f0.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3df9f6.  v2:= temp @kind object;
  #L3df9f8.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.to:(Lio/reactivex/functions/Function;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e140c.  v0:= "converter is null" @kind object;
  #L3e1410.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e1416.  v2:= temp @kind object;
  #L3e1418.  v2:= (`io.reactivex.functions.Function`) v2 @kind object;
  #L3e141c.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e1422.  v2:= temp @kind object;
  #L3e1424.  return v2 @kind object;
  #L3e1426.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e1428.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L3e142e.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3e1434.  v2:= temp @kind object;
  #L3e1436.  throw v2;
  catch `java.lang.Throwable` @[L3e140c..L3e1424] goto L3e1426;
}
procedure `io.reactivex.Flowable` `toFlowable`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.BackpressureStrategy` v3 @kind object) @signature `Lio/reactivex/Observable;.toFlowable:(Lio/reactivex/BackpressureStrategy;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dadec.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFromObservable`;
  #L3dadf0.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromObservable;.<init>:(Lio/reactivex/Observable;)V` @kind direct;
  #L3dadf6.  v1:= `@@io.reactivex.Observable$1.$SwitchMap$io$reactivex$BackpressureStrategy` @type ^`int`[] @kind object;
  #L3dadfa.  call temp:= `ordinal`(v3) @signature `Lio/reactivex/BackpressureStrategy;.ordinal:()I` @kind virtual;
  #L3dae00.  v3:= temp;
  #L3dae02.  v3:= v1[v3];
  #L3dae06.  v1:= 1I;
  #L3dae08.  if v3 == v1 then goto L3dae48;
  #L3dae0c.  v1:= 2I;
  #L3dae0e.  if v3 == v1 then goto L3dae3e;
  #L3dae12.  v1:= 3I;
  #L3dae14.  if v3 == v1 then goto L3dae3c;
  #L3dae18.  v1:= 4I;
  #L3dae1a.  if v3 == v1 then goto L3dae28;
  #L3dae1e.  call temp:= `onBackpressureBuffer`(v0) @signature `Lio/reactivex/Flowable;.onBackpressureBuffer:()Lio/reactivex/Flowable;` @kind virtual;
  #L3dae24.  v3:= temp @kind object;
  #L3dae26.  return v3 @kind object;
  #L3dae28.  v3:= new `io.reactivex.internal.operators.flowable.FlowableOnBackpressureError`;
  #L3dae2c.  call `<init>`(v3, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnBackpressureError;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L3dae32.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3dae38.  v3:= temp @kind object;
  #L3dae3a.  return v3 @kind object;
  #L3dae3c.  return v0 @kind object;
  #L3dae3e.  call temp:= `onBackpressureLatest`(v0) @signature `Lio/reactivex/Flowable;.onBackpressureLatest:()Lio/reactivex/Flowable;` @kind virtual;
  #L3dae44.  v3:= temp @kind object;
  #L3dae46.  return v3 @kind object;
  #L3dae48.  call temp:= `onBackpressureDrop`(v0) @signature `Lio/reactivex/Flowable;.onBackpressureDrop:()Lio/reactivex/Flowable;` @kind virtual;
  #L3dae4e.  v3:= temp @kind object;
  #L3dae50.  return v3 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e1454.  v0:= new `io.reactivex.internal.observers.FutureObserver`;
  #L3e1458.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/FutureObserver;.<init>:()V` @kind direct;
  #L3e145e.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/Observable;.subscribeWith:(Lio/reactivex/Observer;)Lio/reactivex/Observer;` @kind virtual;
  #L3e1464.  v0:= temp @kind object;
  #L3e1466.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L3e146a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toList`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0bfc.  v0:= 16I;
  #L3e0c00.  call temp:= `toList`(v1, v0) @signature `Lio/reactivex/Observable;.toList:(I)Lio/reactivex/Single;` @kind virtual;
  #L3e0c06.  v0:= temp @kind object;
  #L3e0c08.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toList`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.toList:(I)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0c1c.  v0:= "capacityHint" @kind object;
  #L3e0c20.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e0c26.  v0:= new `io.reactivex.internal.operators.observable.ObservableToListSingle`;
  #L3e0c2a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3e0c30.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0c36.  v2:= temp @kind object;
  #L3e0c38.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toList`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.toList:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0c4c.  v0:= "collectionSupplier is null" @kind object;
  #L3e0c50.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0c56.  v0:= new `io.reactivex.internal.operators.observable.ObservableToListSingle`;
  #L3e0c5a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3e0c60.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L3e0c66.  v2:= temp @kind object;
  #L3e0c68.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.toMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0c7c.  v0:= "keySelector is null" @kind object;
  #L3e0c80.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0c86.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3e0c8c.  v0:= temp @kind object;
  #L3e0c8e.  call temp:= `toMapKeySelector`(v2) @signature `Lio/reactivex/internal/functions/Functions;.toMapKeySelector:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L3e0c94.  v2:= temp @kind object;
  #L3e0c96.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3e0c9c.  v2:= temp @kind object;
  #L3e0c9e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.toMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0cb0.  v0:= "keySelector is null" @kind object;
  #L3e0cb4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0cba.  v0:= "valueSelector is null" @kind object;
  #L3e0cbe.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0cc4.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3e0cca.  v0:= temp @kind object;
  #L3e0ccc.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L3e0cd2.  v2:= temp @kind object;
  #L3e0cd4.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3e0cda.  v2:= temp @kind object;
  #L3e0cdc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.toMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0cf0.  v0:= "keySelector is null" @kind object;
  #L3e0cf4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0cfa.  v0:= "valueSelector is null" @kind object;
  #L3e0cfe.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0d04.  v0:= "mapSupplier is null" @kind object;
  #L3e0d08.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0d0e.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L3e0d14.  v2:= temp @kind object;
  #L3e0d16.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3e0d1c.  v2:= temp @kind object;
  #L3e0d1e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3e0d30.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L3e0d36.  v0:= temp @kind object;
  #L3e0d38.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3e0d3e.  v1:= temp @kind object;
  #L3e0d40.  call temp:= `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/functions/Function;` @kind static;
  #L3e0d46.  v2:= temp @kind object;
  #L3e0d48.  call temp:= `toMultimap`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3e0d4e.  v4:= temp @kind object;
  #L3e0d50.  return v4 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e0d64.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L3e0d6a.  v0:= temp @kind object;
  #L3e0d6c.  call temp:= `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/functions/Function;` @kind static;
  #L3e0d72.  v1:= temp @kind object;
  #L3e0d74.  call temp:= `toMultimap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3e0d7a.  v3:= temp @kind object;
  #L3e0d7c.  return v3 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0d90.  call temp:= `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/functions/Function;` @kind static;
  #L3e0d96.  v0:= temp @kind object;
  #L3e0d98.  call temp:= `toMultimap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3e0d9e.  v2:= temp @kind object;
  #L3e0da0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object, `io.reactivex.functions.Function` v5 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0db4.  v0:= "keySelector is null" @kind object;
  #L3e0db8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0dbe.  v0:= "valueSelector is null" @kind object;
  #L3e0dc2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0dc8.  v0:= "mapSupplier is null" @kind object;
  #L3e0dcc.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0dd2.  v0:= "collectionFactory is null" @kind object;
  #L3e0dd6.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0ddc.  call temp:= `toMultimapKeyValueSelector`(v2, v3, v5) @signature `Lio/reactivex/internal/functions/Functions;.toMultimapKeyValueSelector:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L3e0de2.  v2:= temp @kind object;
  #L3e0de4.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L3e0dea.  v2:= temp @kind object;
  #L3e0dec.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.toSortedList:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0e00.  call temp:= `naturalOrder`() @signature `Lio/reactivex/internal/functions/Functions;.naturalOrder:()Ljava/util/Comparator;` @kind static;
  #L3e0e06.  v0:= temp @kind object;
  #L3e0e08.  call temp:= `toSortedList`(v1, v0) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/Single;` @kind virtual;
  #L3e0e0e.  v0:= temp @kind object;
  #L3e0e10.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.toSortedList:(I)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0e24.  call temp:= `naturalOrder`() @signature `Lio/reactivex/internal/functions/Functions;.naturalOrder:()Ljava/util/Comparator;` @kind static;
  #L3e0e2a.  v0:= temp @kind object;
  #L3e0e2c.  call temp:= `toSortedList`(v1, v0, v2) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/Single;` @kind virtual;
  #L3e0e32.  v2:= temp @kind object;
  #L3e0e34.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0e48.  v0:= "comparator is null" @kind object;
  #L3e0e4c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0e52.  call temp:= `toList`(v1) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @kind virtual;
  #L3e0e58.  v0:= temp @kind object;
  #L3e0e5a.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L3e0e60.  v2:= temp @kind object;
  #L3e0e62.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3e0e68.  v2:= temp @kind object;
  #L3e0e6a.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0e7c.  v0:= "comparator is null" @kind object;
  #L3e0e80.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0e86.  call temp:= `toList`(v1, v3) @signature `Lio/reactivex/Observable;.toList:(I)Lio/reactivex/Single;` @kind virtual;
  #L3e0e8c.  v3:= temp @kind object;
  #L3e0e8e.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L3e0e94.  v2:= temp @kind object;
  #L3e0e96.  call temp:= `map`(v3, v2) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L3e0e9c.  v2:= temp @kind object;
  #L3e0e9e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `unsubscribeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.unsubscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dfa5c.  v0:= "scheduler is null" @kind object;
  #L3dfa60.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfa66.  v0:= new `io.reactivex.internal.operators.observable.ObservableUnsubscribeOn`;
  #L3dfa6a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableUnsubscribeOn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3dfa70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dfa76.  v2:= temp @kind object;
  #L3dfa78.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v6 @kind this, `long` v7 ) @signature `Lio/reactivex/Observable;.window:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dfc0c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dfc12.  v5:= temp;
  #L3dfc14.  v0:= v6 @kind object;
  #L3dfc16.  v1:= v7 @kind wide;
  #L3dfc18.  v3:= v7 @kind wide;
  #L3dfc1a.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/Observable;.window:(JJI)Lio/reactivex/Observable;` @kind virtual;
  #L3dfc20.  v7:= temp @kind object;
  #L3dfc22.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lio/reactivex/Observable;.window:(JJ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dfdb0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dfdb6.  v5:= temp;
  #L3dfdb8.  v0:= v6 @kind object;
  #L3dfdba.  v1:= v7 @kind wide;
  #L3dfdbc.  v3:= v9 @kind wide;
  #L3dfdbe.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/Observable;.window:(JJI)Lio/reactivex/Observable;` @kind virtual;
  #L3dfdc4.  v7:= temp @kind object;
  #L3dfdc6.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `int` v13 ) @signature `Lio/reactivex/Observable;.window:(JJI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dfdd8.  v0:= "count" @kind object;
  #L3dfddc.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3dfde2.  v0:= "skip" @kind object;
  #L3dfde6.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3dfdec.  v0:= "bufferSize" @kind object;
  #L3dfdf0.  call temp:= `verifyPositive`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dfdf6.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindow`;
  #L3dfdfa.  v1:= v0 @kind object;
  #L3dfdfc.  v2:= v8 @kind object;
  #L3dfdfe.  v3:= v9 @kind wide;
  #L3dfe00.  v5:= v11 @kind wide;
  #L3dfe02.  v7:= v13;
  #L3dfe04.  call `<init>`(v1, v2, v3, v5, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableWindow;.<init>:(Lio/reactivex/ObservableSource;JJI)V` @kind direct;
  #L3dfe0a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dfe10.  v9:= temp @kind object;
  #L3dfe12.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dfe24.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dfe2a.  v6:= temp @kind object;
  #L3dfe2c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dfe32.  v7:= temp;
  #L3dfe34.  v0:= v8 @kind object;
  #L3dfe36.  v1:= v9 @kind wide;
  #L3dfe38.  v3:= v11 @kind wide;
  #L3dfe3a.  v5:= v13 @kind object;
  #L3dfe3c.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L3dfe42.  v9:= temp @kind object;
  #L3dfe44.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.Scheduler` v14 @kind object) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dfe58.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dfe5e.  v7:= temp;
  #L3dfe60.  v0:= v8 @kind object;
  #L3dfe62.  v1:= v9 @kind wide;
  #L3dfe64.  v3:= v11 @kind wide;
  #L3dfe66.  v5:= v13 @kind object;
  #L3dfe68.  v6:= v14 @kind object;
  #L3dfe6a.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L3dfe70.  v9:= temp @kind object;
  #L3dfe72.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v13 @kind this, `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object, `io.reactivex.Scheduler` v19 @kind object, `int` v20 ) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3dfe84.  v0:= "timespan" @kind object;
  #L3dfe88.  v3:= v14 @kind wide;
  #L3dfe8a.  call temp:= `verifyPositive`(v14, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3dfe90.  v0:= "timeskip" @kind object;
  #L3dfe94.  v5:= v16 @kind wide;
  #L3dfe98.  call temp:= `verifyPositive`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3dfe9e.  v0:= "bufferSize" @kind object;
  #L3dfea2.  v11:= v20;
  #L3dfea6.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dfeac.  v0:= "scheduler is null" @kind object;
  #L3dfeb0.  v8:= v19 @kind object;
  #L3dfeb4.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfeba.  v0:= "unit is null" @kind object;
  #L3dfebe.  v7:= v18 @kind object;
  #L3dfec2.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfec8.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowTimed`;
  #L3dfecc.  v9:= 9223372036854775807L;
  #L3dfed6.  v12:= 0I;
  #L3dfed8.  v1:= v0 @kind object;
  #L3dfeda.  v2:= v13 @kind object;
  #L3dfedc.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JIZ)V` @kind direct;
  #L3dfee2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dfee8.  v0:= temp @kind object;
  #L3dfeea.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dfc34.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dfc3a.  v4:= temp @kind object;
  #L3dfc3c.  v5:= 9223372036854775807L;
  #L3dfc46.  v7:= 0I;
  #L3dfc48.  v0:= v8 @kind object;
  #L3dfc4a.  v1:= v9 @kind wide;
  #L3dfc4c.  v3:= v11 @kind object;
  #L3dfc4e.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dfc54.  v9:= temp @kind object;
  #L3dfc56.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dfd58.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dfd5e.  v4:= temp @kind object;
  #L3dfd60.  v7:= 0I;
  #L3dfd62.  v0:= v8 @kind object;
  #L3dfd64.  v1:= v9 @kind wide;
  #L3dfd66.  v3:= v11 @kind object;
  #L3dfd68.  v5:= v12 @kind wide;
  #L3dfd6a.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dfd70.  v9:= temp @kind object;
  #L3dfd72.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 , `boolean` v14 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;JZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dfd84.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3dfd8a.  v4:= temp @kind object;
  #L3dfd8c.  v0:= v8 @kind object;
  #L3dfd8e.  v1:= v9 @kind wide;
  #L3dfd90.  v3:= v11 @kind object;
  #L3dfd92.  v5:= v12 @kind wide;
  #L3dfd94.  v7:= v14;
  #L3dfd96.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dfd9c.  v9:= temp @kind object;
  #L3dfd9e.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dfc68.  v5:= 9223372036854775807L;
  #L3dfc72.  v7:= 0I;
  #L3dfc74.  v0:= v8 @kind object;
  #L3dfc76.  v1:= v9 @kind wide;
  #L3dfc78.  v3:= v11 @kind object;
  #L3dfc7a.  v4:= v12 @kind object;
  #L3dfc7c.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dfc82.  v9:= temp @kind object;
  #L3dfc84.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `long` v13 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dfc98.  v7:= 0I;
  #L3dfc9a.  v0:= v8 @kind object;
  #L3dfc9c.  v1:= v9 @kind wide;
  #L3dfc9e.  v3:= v11 @kind object;
  #L3dfca0.  v4:= v12 @kind object;
  #L3dfca2.  v5:= v13 @kind wide;
  #L3dfca4.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L3dfcaa.  v9:= temp @kind object;
  #L3dfcac.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object, `long` v14 , `boolean` v16 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3dfcc0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dfcc6.  v8:= temp;
  #L3dfcc8.  v0:= v9 @kind object;
  #L3dfcca.  v1:= v10 @kind wide;
  #L3dfccc.  v3:= v12 @kind object;
  #L3dfcce.  v4:= v13 @kind object;
  #L3dfcd0.  v5:= v14 @kind wide;
  #L3dfcd2.  v7:= v16;
  #L3dfcd6.  call temp:= `window`(v0, v1, v3, v4, v5, v7, v8) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZI)Lio/reactivex/Observable;` @kind virtual;
  #L3dfcdc.  v0:= temp @kind object;
  #L3dfcde.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v13 @kind this, `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.Scheduler` v17 @kind object, `long` v18 , `boolean` v20 , `int` v21 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3dfcf0.  v0:= "bufferSize" @kind object;
  #L3dfcf4.  v11:= v21;
  #L3dfcf8.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dfcfe.  v0:= "scheduler is null" @kind object;
  #L3dfd02.  v8:= v17 @kind object;
  #L3dfd06.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfd0c.  v0:= "unit is null" @kind object;
  #L3dfd10.  v7:= v16 @kind object;
  #L3dfd14.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfd1a.  v0:= "count" @kind object;
  #L3dfd1e.  v9:= v18 @kind wide;
  #L3dfd22.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L3dfd28.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowTimed`;
  #L3dfd2c.  v1:= v0 @kind object;
  #L3dfd2e.  v2:= v13 @kind object;
  #L3dfd30.  v3:= v14 @kind wide;
  #L3dfd32.  v5:= v14 @kind wide;
  #L3dfd34.  v12:= v20;
  #L3dfd38.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JIZ)V` @kind direct;
  #L3dfd3e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dfd44.  v0:= temp @kind object;
  #L3dfd46.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dfaec.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dfaf2.  v0:= temp;
  #L3dfaf4.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind virtual;
  #L3dfafa.  v2:= temp @kind object;
  #L3dfafc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dfb10.  v0:= "boundary is null" @kind object;
  #L3dfb14.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfb1a.  v0:= "bufferSize" @kind object;
  #L3dfb1e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dfb24.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundary`;
  #L3dfb28.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L3dfb2e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dfb34.  v2:= temp @kind object;
  #L3dfb36.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dfb48.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dfb4e.  v0:= temp;
  #L3dfb50.  call temp:= `window`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L3dfb56.  v2:= temp @kind object;
  #L3dfb58.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dfb6c.  v0:= "openingIndicator is null" @kind object;
  #L3dfb70.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfb76.  v0:= "closingIndicator is null" @kind object;
  #L3dfb7a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfb80.  v0:= "bufferSize" @kind object;
  #L3dfb84.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dfb8a.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector`;
  #L3dfb8e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)V` @kind direct;
  #L3dfb94.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dfb9a.  v2:= temp @kind object;
  #L3dfb9c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.window:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dfbb0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L3dfbb6.  v0:= temp;
  #L3dfbb8.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/Observable;.window:(Ljava/util/concurrent/Callable;I)Lio/reactivex/Observable;` @kind virtual;
  #L3dfbbe.  v2:= temp @kind object;
  #L3dfbc0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.window:(Ljava/util/concurrent/Callable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3dfbd4.  v0:= "boundary is null" @kind object;
  #L3dfbd8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfbde.  v0:= "bufferSize" @kind object;
  #L3dfbe2.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3dfbe8.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier`;
  #L3dfbec.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySupplier;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;I)V` @kind direct;
  #L3dfbf2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3dfbf8.  v2:= temp @kind object;
  #L3dfbfa.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.functions.Function5` v7 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dfefc.  v0:= "o1 is null" @kind object;
  #L3dff00.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dff06.  v0:= "o2 is null" @kind object;
  #L3dff0a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dff10.  v0:= "o3 is null" @kind object;
  #L3dff14.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dff1a.  v0:= "o4 is null" @kind object;
  #L3dff1e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dff24.  v0:= "combiner is null" @kind object;
  #L3dff28.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dff2e.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L3dff34.  v7:= temp @kind object;
  #L3dff36.  v0:= 4I;
  #L3dff38.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3dff3c.  v1:= 0I;
  #L3dff3e.  v0[v1]:= v3 @kind object;
  #L3dff42.  v3:= 1I;
  #L3dff44.  v0[v3]:= v4 @kind object;
  #L3dff48.  v3:= 2I;
  #L3dff4a.  v0[v3]:= v5 @kind object;
  #L3dff4e.  v3:= 3I;
  #L3dff50.  v0[v3]:= v6 @kind object;
  #L3dff54.  call temp:= `withLatestFrom`(v2, v0, v7) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3dff5a.  v3:= temp @kind object;
  #L3dff5c.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.functions.Function4` v6 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dff70.  v0:= "o1 is null" @kind object;
  #L3dff74.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dff7a.  v0:= "o2 is null" @kind object;
  #L3dff7e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dff84.  v0:= "o3 is null" @kind object;
  #L3dff88.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dff8e.  v0:= "combiner is null" @kind object;
  #L3dff92.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dff98.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L3dff9e.  v6:= temp @kind object;
  #L3dffa0.  v0:= 3I;
  #L3dffa2.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3dffa6.  v1:= 0I;
  #L3dffa8.  v0[v1]:= v3 @kind object;
  #L3dffac.  v3:= 1I;
  #L3dffae.  v0[v3]:= v4 @kind object;
  #L3dffb2.  v3:= 2I;
  #L3dffb4.  v0[v3]:= v5 @kind object;
  #L3dffb8.  call temp:= `withLatestFrom`(v2, v0, v6) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3dffbe.  v3:= temp @kind object;
  #L3dffc0.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.Function3` v5 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3dffd4.  v0:= "o1 is null" @kind object;
  #L3dffd8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dffde.  v0:= "o2 is null" @kind object;
  #L3dffe2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dffe8.  v0:= "combiner is null" @kind object;
  #L3dffec.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3dfff2.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L3dfff8.  v5:= temp @kind object;
  #L3dfffa.  v0:= 2I;
  #L3dfffc.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L3e0000.  v1:= 0I;
  #L3e0002.  v0[v1]:= v3 @kind object;
  #L3e0006.  v3:= 1I;
  #L3e0008.  v0[v3]:= v4 @kind object;
  #L3e000c.  call temp:= `withLatestFrom`(v2, v0, v5) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L3e0012.  v3:= temp @kind object;
  #L3e0014.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0028.  v0:= "other is null" @kind object;
  #L3e002c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0032.  v0:= "combiner is null" @kind object;
  #L3e0036.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e003c.  v0:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFrom`;
  #L3e0040.  call `<init>`(v0, v1, v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L3e0046.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e004c.  v2:= temp @kind object;
  #L3e004e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0098.  v0:= "others is null" @kind object;
  #L3e009c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e00a2.  v0:= "combiner is null" @kind object;
  #L3e00a6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e00ac.  v0:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany`;
  #L3e00b0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e00b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e00bc.  v2:= temp @kind object;
  #L3e00be.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource`[] v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0060.  v0:= "others is null" @kind object;
  #L3e0064.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e006a.  v0:= "combiner is null" @kind object;
  #L3e006e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0074.  v0:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany`;
  #L3e0078.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;[Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L3e007e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e0084.  v2:= temp @kind object;
  #L3e0086.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.zipWith:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e0730.  v0:= "other is null" @kind object;
  #L3e0734.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e073a.  call temp:= `zip`(v1, v2, v3) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @kind static;
  #L3e0740.  v2:= temp @kind object;
  #L3e0742.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.zipWith:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e0754.  call temp:= `zip`(v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @kind static;
  #L3e075a.  v1:= temp @kind object;
  #L3e075c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.zipWith:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e0770.  call temp:= `zip`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @kind static;
  #L3e0776.  v1:= temp @kind object;
  #L3e0778.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.zipWith:(Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e078c.  v0:= "other is null" @kind object;
  #L3e0790.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e0796.  v0:= "zipper is null" @kind object;
  #L3e079a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e07a0.  v0:= new `io.reactivex.internal.operators.observable.ObservableZipIterable`;
  #L3e07a4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable;.<init>:(Lio/reactivex/Observable;Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L3e07aa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L3e07b0.  v2:= temp @kind object;
  #L3e07b2.  return v2 @kind object;
}
