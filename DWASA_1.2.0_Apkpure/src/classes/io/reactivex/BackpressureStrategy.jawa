record `io.reactivex.BackpressureStrategy` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.reactivex.BackpressureStrategy`[] `@@io.reactivex.BackpressureStrategy.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.BUFFER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.DROP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.LATEST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.MISSING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/BackpressureStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d03e0.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L3d03e4.  v1:= 0I;
  #L3d03e6.  v2:= "MISSING" @kind object;
  #L3d03ea.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d03f0.  `@@io.reactivex.BackpressureStrategy.MISSING` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L3d03f4.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L3d03f8.  v2:= 1I;
  #L3d03fa.  v3:= "ERROR" @kind object;
  #L3d03fe.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d0404.  `@@io.reactivex.BackpressureStrategy.ERROR` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L3d0408.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L3d040c.  v3:= 2I;
  #L3d040e.  v4:= "BUFFER" @kind object;
  #L3d0412.  call `<init>`(v0, v4, v3) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d0418.  `@@io.reactivex.BackpressureStrategy.BUFFER` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L3d041c.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L3d0420.  v4:= 3I;
  #L3d0422.  v5:= "DROP" @kind object;
  #L3d0426.  call `<init>`(v0, v5, v4) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d042c.  `@@io.reactivex.BackpressureStrategy.DROP` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L3d0430.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L3d0434.  v5:= 4I;
  #L3d0436.  v6:= "LATEST" @kind object;
  #L3d043a.  call `<init>`(v0, v6, v5) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d0440.  `@@io.reactivex.BackpressureStrategy.LATEST` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L3d0444.  v0:= 5I;
  #L3d0446.  v0:= new `io.reactivex.BackpressureStrategy`[v0];
  #L3d044a.  v6:= `@@io.reactivex.BackpressureStrategy.MISSING` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3d044e.  v0[v1]:= v6 @kind object;
  #L3d0452.  v1:= `@@io.reactivex.BackpressureStrategy.ERROR` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3d0456.  v0[v2]:= v1 @kind object;
  #L3d045a.  v1:= `@@io.reactivex.BackpressureStrategy.BUFFER` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3d045e.  v0[v3]:= v1 @kind object;
  #L3d0462.  v1:= `@@io.reactivex.BackpressureStrategy.DROP` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3d0466.  v0[v4]:= v1 @kind object;
  #L3d046a.  v1:= `@@io.reactivex.BackpressureStrategy.LATEST` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3d046e.  v0[v5]:= v1 @kind object;
  #L3d0472.  `@@io.reactivex.BackpressureStrategy.$VALUES` @type ^`io.reactivex.BackpressureStrategy`[] := v0 @kind object;
  #L3d0476.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.BackpressureStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3d0488.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d048e.  return @kind void;
}
procedure `io.reactivex.BackpressureStrategy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/BackpressureStrategy;.valueOf:(Ljava/lang/String;)Lio/reactivex/BackpressureStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d0398.  v0:= constclass @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L3d039c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3d03a2.  v1:= temp @kind object;
  #L3d03a4.  v1:= (`io.reactivex.BackpressureStrategy`) v1 @kind object;
  #L3d03a8.  return v1 @kind object;
}
procedure `io.reactivex.BackpressureStrategy`[] `values`() @signature `Lio/reactivex/BackpressureStrategy;.values:()[Lio/reactivex/BackpressureStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d03bc.  v0:= `@@io.reactivex.BackpressureStrategy.$VALUES` @type ^`io.reactivex.BackpressureStrategy`[] @kind object;
  #L3d03c0.  call temp:= `clone`(v0) @signature `[Lio/reactivex/BackpressureStrategy;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3d03c6.  v0:= temp @kind object;
  #L3d03c8.  v0:= (`io.reactivex.BackpressureStrategy`[]) v0 @kind object;
  #L3d03cc.  return v0 @kind object;
}
