record `io.reactivex.flowables.ConnectableFlowable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.Flowable` @kind class {
}
procedure `void` `<init>`(`io.reactivex.flowables.ConnectableFlowable` v0 @kind this) @signature `Lio/reactivex/flowables/ConnectableFlowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e5258.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L3e525e.  return @kind void;
}
procedure `io.reactivex.Flowable` `autoConnect`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5098.  v0:= 1I;
  #L3e509a.  call temp:= `autoConnect`(v1, v0) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:(I)Lio/reactivex/Flowable;` @kind virtual;
  #L3e50a0.  v0:= temp @kind object;
  #L3e50a2.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `autoConnect`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:(I)Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e50b4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L3e50ba.  v0:= temp @kind object;
  #L3e50bc.  call temp:= `autoConnect`(v1, v2, v0) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:(ILio/reactivex/functions/Consumer;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e50c2.  v2:= temp @kind object;
  #L3e50c4.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `autoConnect`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this, `int` v2 , `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/flowables/ConnectableFlowable;.autoConnect:(ILio/reactivex/functions/Consumer;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e50d8.  if v2 > 0 then goto L3e50ec;
  #L3e50dc.  call `connect`(v1, v3) @signature `Lio/reactivex/flowables/ConnectableFlowable;.connect:(Lio/reactivex/functions/Consumer;)V` @kind virtual;
  #L3e50e2.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/flowables/ConnectableFlowable;)Lio/reactivex/flowables/ConnectableFlowable;` @kind static;
  #L3e50e8.  v2:= temp @kind object;
  #L3e50ea.  return v2 @kind object;
  #L3e50ec.  v0:= new `io.reactivex.internal.operators.flowable.FlowableAutoConnect`;
  #L3e50f0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableAutoConnect;.<init>:(Lio/reactivex/flowables/ConnectableFlowable;ILio/reactivex/functions/Consumer;)V` @kind direct;
  #L3e50f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e50fc.  v2:= temp @kind object;
  #L3e50fe.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `connect`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/flowables/ConnectableFlowable;.connect:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e5230.  v0:= new `io.reactivex.internal.util.ConnectConsumer`;
  #L3e5234.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/ConnectConsumer;.<init>:()V` @kind direct;
  #L3e523a.  call `connect`(v1, v0) @signature `Lio/reactivex/flowables/ConnectableFlowable;.connect:(Lio/reactivex/functions/Consumer;)V` @kind virtual;
  #L3e5240.  v0:= v0.`io.reactivex.internal.util.ConnectConsumer.disposable` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L3e5244.  return v0 @kind object;
}
procedure `void` `connect`(`io.reactivex.functions.Consumer` v0 @kind object) @signature `Lio/reactivex/flowables/ConnectableFlowable;.connect:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.reactivex.Flowable` `refCount`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5110.  v0:= new `io.reactivex.internal.operators.flowable.FlowableRefCount`;
  #L3e5114.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableRefCount;.<init>:(Lio/reactivex/flowables/ConnectableFlowable;)V` @kind direct;
  #L3e511a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e5120.  v0:= temp @kind object;
  #L3e5122.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `refCount`(`io.reactivex.flowables.ConnectableFlowable` v6 @kind this, `int` v7 ) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:(I)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e5134.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e5138.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L3e513e.  v5:= temp @kind object;
  #L3e5140.  v2:= 0L;
  #L3e5144.  v0:= v6 @kind object;
  #L3e5146.  v1:= v7;
  #L3e5148.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e514e.  v7:= temp @kind object;
  #L3e5150.  return v7 @kind object;
}
procedure `io.reactivex.Flowable` `refCount`(`io.reactivex.flowables.ConnectableFlowable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e5164.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e516a.  v5:= temp @kind object;
  #L3e516c.  v0:= v6 @kind object;
  #L3e516e.  v1:= v7;
  #L3e5170.  v2:= v8 @kind wide;
  #L3e5172.  v4:= v10 @kind object;
  #L3e5174.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e517a.  v7:= temp @kind object;
  #L3e517c.  return v7 @kind object;
}
procedure `io.reactivex.Flowable` `refCount`(`io.reactivex.flowables.ConnectableFlowable` v8 @kind this, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e5190.  v0:= "subscriberCount" @kind object;
  #L3e5194.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L3e519a.  v0:= "unit is null" @kind object;
  #L3e519e.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e51a4.  v0:= "scheduler is null" @kind object;
  #L3e51a8.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e51ae.  v0:= new `io.reactivex.internal.operators.flowable.FlowableRefCount`;
  #L3e51b2.  v1:= v0 @kind object;
  #L3e51b4.  v2:= v8 @kind object;
  #L3e51b6.  v3:= v9;
  #L3e51b8.  v4:= v10 @kind wide;
  #L3e51ba.  v6:= v12 @kind object;
  #L3e51bc.  v7:= v13 @kind object;
  #L3e51be.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lio/reactivex/internal/operators/flowable/FlowableRefCount;.<init>:(Lio/reactivex/flowables/ConnectableFlowable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L3e51c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L3e51ca.  v9:= temp @kind object;
  #L3e51cc.  return v9 @kind object;
}
procedure `io.reactivex.Flowable` `refCount`(`io.reactivex.flowables.ConnectableFlowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e51e0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L3e51e6.  v5:= temp @kind object;
  #L3e51e8.  v1:= 1I;
  #L3e51ea.  v0:= v6 @kind object;
  #L3e51ec.  v2:= v7 @kind wide;
  #L3e51ee.  v4:= v9 @kind object;
  #L3e51f0.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e51f6.  v7:= temp @kind object;
  #L3e51f8.  return v7 @kind object;
}
procedure `io.reactivex.Flowable` `refCount`(`io.reactivex.flowables.ConnectableFlowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e520c.  v1:= 1I;
  #L3e520e.  v0:= v6 @kind object;
  #L3e5210.  v2:= v7 @kind wide;
  #L3e5212.  v4:= v9 @kind object;
  #L3e5214.  v5:= v10 @kind object;
  #L3e5216.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind virtual;
  #L3e521c.  v7:= temp @kind object;
  #L3e521e.  return v7 @kind object;
}
