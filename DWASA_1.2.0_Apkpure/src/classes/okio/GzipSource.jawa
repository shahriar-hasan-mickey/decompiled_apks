record `okio.GzipSource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Source` @kind interface {
  `java.util.zip.CRC32` `okio.GzipSource.crc` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `okio.GzipSource.inflater` @AccessFlag PRIVATE_FINAL;
  `okio.InflaterSource` `okio.GzipSource.inflaterSource` @AccessFlag PRIVATE_FINAL;
  `int` `okio.GzipSource.section` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okio.GzipSource.source` @AccessFlag PRIVATE_FINAL;
}
global `byte` `@@okio.GzipSource.FCOMMENT` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okio.GzipSource.FEXTRA` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okio.GzipSource.FHCRC` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okio.GzipSource.FNAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okio.GzipSource.SECTION_BODY` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okio.GzipSource.SECTION_DONE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okio.GzipSource.SECTION_HEADER` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okio.GzipSource.SECTION_TRAILER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okio.GzipSource` v2 @kind this, `okio.Source` v3 @kind object) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L47cba0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47cba6.  v0:= 0I;
  #L47cba8.  v2.`okio.GzipSource.section` @type ^`int` := v0;
  #L47cbac.  v0:= new `java.util.zip.CRC32`;
  #L47cbb0.  call `<init>`(v0) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L47cbb6.  v2.`okio.GzipSource.crc` @type ^`java.util.zip.CRC32` := v0 @kind object;
  #L47cbba.  if v3 == 0 then goto L47cbf2;
  #L47cbbe.  v0:= new `java.util.zip.Inflater`;
  #L47cbc2.  v1:= 1I;
  #L47cbc4.  call `<init>`(v0, v1) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L47cbca.  v2.`okio.GzipSource.inflater` @type ^`java.util.zip.Inflater` := v0 @kind object;
  #L47cbce.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L47cbd4.  v3:= temp @kind object;
  #L47cbd6.  v2.`okio.GzipSource.source` @type ^`okio.BufferedSource` := v3 @kind object;
  #L47cbda.  v3:= new `okio.InflaterSource`;
  #L47cbde.  v0:= v2.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cbe2.  v1:= v2.`okio.GzipSource.inflater` @type ^`java.util.zip.Inflater` @kind object;
  #L47cbe6.  call `<init>`(v3, v0, v1) @signature `Lokio/InflaterSource;.<init>:(Lokio/BufferedSource;Ljava/util/zip/Inflater;)V` @kind direct;
  #L47cbec.  v2.`okio.GzipSource.inflaterSource` @type ^`okio.InflaterSource` := v3 @kind object;
  #L47cbf0.  return @kind void;
  #L47cbf2.  v3:= new `java.lang.IllegalArgumentException`;
  #L47cbf6.  v0:= "source == null" @kind object;
  #L47cbfa.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47cc00.  throw v3;
}
procedure `void` `checkEqual`(`okio.GzipSource` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lokio/GzipSource;.checkEqual:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47cc14.  if v6 != v5 then goto L47cc1a;
  #L47cc18.  return @kind void;
  #L47cc1a.  v0:= new `java.io.IOException`;
  #L47cc1e.  v1:= 3I;
  #L47cc20.  v1:= new `java.lang.Object`[v1];
  #L47cc24.  v2:= 0I;
  #L47cc26.  v1[v2]:= v4 @kind object;
  #L47cc2a.  v4:= 1I;
  #L47cc2c.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L47cc32.  v6:= temp @kind object;
  #L47cc34.  v1[v4]:= v6 @kind object;
  #L47cc38.  v4:= 2I;
  #L47cc3a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L47cc40.  v5:= temp @kind object;
  #L47cc42.  v1[v4]:= v5 @kind object;
  #L47cc46.  v4:= "%s: actual 0x%08x != expected 0x%08x" @kind object;
  #L47cc4a.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L47cc50.  v4:= temp @kind object;
  #L47cc52.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47cc58.  throw v0;
}
procedure `void` `consumeHeader`(`okio.GzipSource` v17 @kind this) @signature `Lokio/GzipSource;.consumeHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L47cc88.  v6:= v17 @kind object;
  #L47cc8c.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cc90.  v1:= 10L;
  #L47cc94.  call `require`(v0, v1) @signature `Lokio/BufferedSource;.require:(J)V` @kind interface;
  #L47cc9a.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cc9e.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L47cca4.  v0:= temp @kind object;
  #L47cca6.  v1:= 3L;
  #L47ccaa.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L47ccb0.  v7:= temp;
  #L47ccb2.  v0:= v7 ^> 1;
  #L47ccb6.  v8:= 1I;
  #L47ccb8.  v0:= v0 ^& v8 @kind int;
  #L47ccba.  v9:= 0I;
  #L47ccbc.  if v0 != v8 then goto L47ccc4;
  #L47ccc0.  v10:= 1I;
  #L47ccc2.  goto L47ccc6;
  #L47ccc4.  v10:= 0I;
  #L47ccc6.  if v10 == 0 then goto L47cce8;
  #L47ccca.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47ccce.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L47ccd4.  v1:= temp @kind object;
  #L47ccd6.  v2:= 0L;
  #L47ccda.  v4:= 10L;
  #L47ccde.  v0:= v17 @kind object;
  #L47cce2.  call `updateCrc`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.updateCrc:(Lokio/Buffer;JJ)V` @kind direct;
  #L47cce8.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47ccec.  call temp:= `readShort`(v0) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L47ccf2.  v0:= temp;
  #L47ccf4.  v1:= 8075I;
  #L47ccf8.  v2:= "ID1ID2" @kind object;
  #L47ccfc.  call `checkEqual`(v6, v2, v1, v0) @signature `Lokio/GzipSource;.checkEqual:(Ljava/lang/String;II)V` @kind direct;
  #L47cd02.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cd06.  v1:= 8L;
  #L47cd0a.  call `skip`(v0, v1) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L47cd10.  v0:= v7 ^> 2;
  #L47cd14.  v0:= v0 ^& v8 @kind int;
  #L47cd16.  if v0 != v8 then goto L47cd94;
  #L47cd1a.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cd1e.  v1:= 2L;
  #L47cd22.  call `require`(v0, v1) @signature `Lokio/BufferedSource;.require:(J)V` @kind interface;
  #L47cd28.  if v10 == 0 then goto L47cd4a;
  #L47cd2c.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cd30.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L47cd36.  v1:= temp @kind object;
  #L47cd38.  v2:= 0L;
  #L47cd3c.  v4:= 2L;
  #L47cd40.  v0:= v17 @kind object;
  #L47cd44.  call `updateCrc`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.updateCrc:(Lokio/Buffer;JJ)V` @kind direct;
  #L47cd4a.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cd4e.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L47cd54.  v0:= temp @kind object;
  #L47cd56.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L47cd5c.  v0:= temp;
  #L47cd5e.  v1:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cd62.  v11:= (`long`) v0 @kind i2l;
  #L47cd64.  call `require`(v1, v11) @signature `Lokio/BufferedSource;.require:(J)V` @kind interface;
  #L47cd6a.  if v10 == 0 then goto L47cd8a;
  #L47cd6e.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cd72.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L47cd78.  v1:= temp @kind object;
  #L47cd7a.  v2:= 0L;
  #L47cd7e.  v0:= v17 @kind object;
  #L47cd82.  v4:= v11 @kind wide;
  #L47cd84.  call `updateCrc`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.updateCrc:(Lokio/Buffer;JJ)V` @kind direct;
  #L47cd8a.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cd8e.  call `skip`(v0, v11) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L47cd94.  v0:= v7 ^> 3;
  #L47cd98.  v0:= v0 ^& v8 @kind int;
  #L47cd9a.  v11:= -1L;
  #L47cd9e.  v13:= 1L;
  #L47cda2.  if v0 != v8 then goto L47cdf8;
  #L47cda6.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cdaa.  call temp:= `indexOf`(v0, v9) @signature `Lokio/BufferedSource;.indexOf:(B)J` @kind interface;
  #L47cdb0.  v15:= temp @kind wide;
  #L47cdb2.  v0:= lcmp(v15, v11);
  #L47cdb6.  if v0 == 0 then goto L47cdec;
  #L47cdba.  if v10 == 0 then goto L47cddc;
  #L47cdbe.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cdc2.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L47cdc8.  v1:= temp @kind object;
  #L47cdca.  v2:= 0L;
  #L47cdce.  v4:= v15 + v13 @kind long;
  #L47cdd2.  v0:= v17 @kind object;
  #L47cdd6.  call `updateCrc`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.updateCrc:(Lokio/Buffer;JJ)V` @kind direct;
  #L47cddc.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cde0.  v1:= v15 + v13 @kind long;
  #L47cde4.  call `skip`(v0, v1) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L47cdea.  goto L47cdf8;
  #L47cdec.  v0:= new `java.io.EOFException`;
  #L47cdf0.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L47cdf6.  throw v0;
  #L47cdf8.  v0:= v7 ^> 4;
  #L47cdfc.  v0:= v0 ^& v8 @kind int;
  #L47cdfe.  if v0 != v8 then goto L47ce52;
  #L47ce02.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47ce06.  call temp:= `indexOf`(v0, v9) @signature `Lokio/BufferedSource;.indexOf:(B)J` @kind interface;
  #L47ce0c.  v7:= temp @kind wide;
  #L47ce0e.  v0:= lcmp(v7, v11);
  #L47ce12.  if v0 == 0 then goto L47ce46;
  #L47ce16.  if v10 == 0 then goto L47ce38;
  #L47ce1a.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47ce1e.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L47ce24.  v1:= temp @kind object;
  #L47ce26.  v2:= 0L;
  #L47ce2a.  v4:= v7 + v13 @kind long;
  #L47ce2e.  v0:= v17 @kind object;
  #L47ce32.  call `updateCrc`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.updateCrc:(Lokio/Buffer;JJ)V` @kind direct;
  #L47ce38.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47ce3c.  v7:= v7 + v13 @kind long;
  #L47ce3e.  call `skip`(v0, v7) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L47ce44.  goto L47ce52;
  #L47ce46.  v0:= new `java.io.EOFException`;
  #L47ce4a.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L47ce50.  throw v0;
  #L47ce52.  if v10 == 0 then goto L47ce86;
  #L47ce56.  v0:= v6.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47ce5a.  call temp:= `readShortLe`(v0) @signature `Lokio/BufferedSource;.readShortLe:()S` @kind interface;
  #L47ce60.  v0:= temp;
  #L47ce62.  v1:= v6.`okio.GzipSource.crc` @type ^`java.util.zip.CRC32` @kind object;
  #L47ce66.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L47ce6c.  v1:= temp @kind wide;
  #L47ce6e.  v2:= (`int`) v1 @kind l2i;
  #L47ce70.  v1:= (`short`) v2 @kind i2s;
  #L47ce72.  v2:= "FHCRC" @kind object;
  #L47ce76.  call `checkEqual`(v6, v2, v0, v1) @signature `Lokio/GzipSource;.checkEqual:(Ljava/lang/String;II)V` @kind direct;
  #L47ce7c.  v0:= v6.`okio.GzipSource.crc` @type ^`java.util.zip.CRC32` @kind object;
  #L47ce80.  call `reset`(v0) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L47ce86.  return @kind void;
}
procedure `void` `consumeTrailer`(`okio.GzipSource` v3 @kind this) @signature `Lokio/GzipSource;.consumeTrailer:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47ce98.  v0:= v3.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47ce9c.  call temp:= `readIntLe`(v0) @signature `Lokio/BufferedSource;.readIntLe:()I` @kind interface;
  #L47cea2.  v0:= temp;
  #L47cea4.  v1:= v3.`okio.GzipSource.crc` @type ^`java.util.zip.CRC32` @kind object;
  #L47cea8.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L47ceae.  v1:= temp @kind wide;
  #L47ceb0.  v2:= (`int`) v1 @kind l2i;
  #L47ceb2.  v1:= "CRC" @kind object;
  #L47ceb6.  call `checkEqual`(v3, v1, v0, v2) @signature `Lokio/GzipSource;.checkEqual:(Ljava/lang/String;II)V` @kind direct;
  #L47cebc.  v0:= v3.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cec0.  call temp:= `readIntLe`(v0) @signature `Lokio/BufferedSource;.readIntLe:()I` @kind interface;
  #L47cec6.  v0:= temp;
  #L47cec8.  v1:= v3.`okio.GzipSource.inflater` @type ^`java.util.zip.Inflater` @kind object;
  #L47cecc.  call temp:= `getBytesWritten`(v1) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L47ced2.  v1:= temp @kind wide;
  #L47ced4.  v2:= (`int`) v1 @kind l2i;
  #L47ced6.  v1:= "ISIZE" @kind object;
  #L47ceda.  call `checkEqual`(v3, v1, v0, v2) @signature `Lokio/GzipSource;.checkEqual:(Ljava/lang/String;II)V` @kind direct;
  #L47cee0.  return @kind void;
}
procedure `void` `updateCrc`(`okio.GzipSource` v4 @kind this, `okio.Buffer` v5 @kind object, `long` v6 , `long` v8 ) @signature `Lokio/GzipSource;.updateCrc:(Lokio/Buffer;JJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47cef4.  v5:= v5.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L47cef8.  v0:= v5.`okio.Segment.limit` @type ^`int`;
  #L47cefc.  v1:= v5.`okio.Segment.pos` @type ^`int`;
  #L47cf00.  v0:= v0 - v1 @kind int;
  #L47cf02.  v0:= (`long`) v0 @kind i2l;
  #L47cf04.  v2:= lcmp(v6, v0);
  #L47cf08.  if v2 < 0 then goto L47cf20;
  #L47cf0c.  v0:= v5.`okio.Segment.limit` @type ^`int`;
  #L47cf10.  v1:= v5.`okio.Segment.pos` @type ^`int`;
  #L47cf14.  v0:= v0 - v1 @kind int;
  #L47cf16.  v0:= (`long`) v0 @kind i2l;
  #L47cf18.  v6:= v6 - v0 @kind long;
  #L47cf1a.  v5:= v5.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L47cf1e.  goto L47cef8;
  #L47cf20.  v0:= 0L;
  #L47cf24.  v2:= lcmp(v8, v0);
  #L47cf28.  if v2 <= 0 then goto L47cf62;
  #L47cf2c.  v2:= v5.`okio.Segment.pos` @type ^`int`;
  #L47cf30.  v2:= (`long`) v2 @kind i2l;
  #L47cf32.  v2:= v2 + v6 @kind long;
  #L47cf34.  v6:= (`int`) v2 @kind l2i;
  #L47cf36.  v7:= v5.`okio.Segment.limit` @type ^`int`;
  #L47cf3a.  v7:= v7 - v6 @kind int;
  #L47cf3c.  v2:= (`long`) v7 @kind i2l;
  #L47cf3e.  call temp:= `min`(v2, v8) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L47cf44.  v2:= temp @kind wide;
  #L47cf46.  v7:= (`int`) v2 @kind l2i;
  #L47cf48.  v2:= v4.`okio.GzipSource.crc` @type ^`java.util.zip.CRC32` @kind object;
  #L47cf4c.  v3:= v5.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L47cf50.  call `update`(v2, v3, v6, v7) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L47cf56.  v6:= (`long`) v7 @kind i2l;
  #L47cf58.  v8:= v8 - v6 @kind long;
  #L47cf5a.  v5:= v5.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L47cf5e.  v6:= v0 @kind wide;
  #L47cf60.  goto L47cf24;
  #L47cf62.  return @kind void;
}
procedure `void` `close`(`okio.GzipSource` v1 @kind this) @signature `Lokio/GzipSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47cc6c.  v0:= v1.`okio.GzipSource.inflaterSource` @type ^`okio.InflaterSource` @kind object;
  #L47cc70.  call `close`(v0) @signature `Lokio/InflaterSource;.close:()V` @kind virtual;
  #L47cc76.  return @kind void;
}
procedure `long` `read`(`okio.GzipSource` v11 @kind this, `okio.Buffer` v12 @kind object, `long` v13 ) @signature `Lokio/GzipSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L47caa8.  v0:= 0L;
  #L47caac.  v2:= lcmp(v13, v0);
  #L47cab0.  if v2 < 0 then goto L47cb42;
  #L47cab4.  v2:= lcmp(v13, v0);
  #L47cab8.  if v2 != 0 then goto L47cabe;
  #L47cabc.  return v0 @kind wide;
  #L47cabe.  v0:= v11.`okio.GzipSource.section` @type ^`int`;
  #L47cac2.  v1:= 1I;
  #L47cac4.  if v0 != 0 then goto L47cad2;
  #L47cac8.  call `consumeHeader`(v11) @signature `Lokio/GzipSource;.consumeHeader:()V` @kind direct;
  #L47cace.  v11.`okio.GzipSource.section` @type ^`int` := v1;
  #L47cad2.  v0:= v11.`okio.GzipSource.section` @type ^`int`;
  #L47cad6.  v2:= -1L;
  #L47cada.  v4:= 2I;
  #L47cadc.  if v0 != v1 then goto L47cb0a;
  #L47cae0.  v7:= v12.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47cae4.  v0:= v11.`okio.GzipSource.inflaterSource` @type ^`okio.InflaterSource` @kind object;
  #L47cae8.  call temp:= `read`(v0, v12, v13) @signature `Lokio/InflaterSource;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L47caee.  v13:= temp @kind wide;
  #L47caf0.  v0:= lcmp(v13, v2);
  #L47caf4.  if v0 == 0 then goto L47cb06;
  #L47caf8.  v5:= v11 @kind object;
  #L47cafa.  v6:= v12 @kind object;
  #L47cafc.  v9:= v13 @kind wide;
  #L47cafe.  call `updateCrc`(v5, v6, v7, v9) @signature `Lokio/GzipSource;.updateCrc:(Lokio/Buffer;JJ)V` @kind direct;
  #L47cb04.  return v13 @kind wide;
  #L47cb06.  v11.`okio.GzipSource.section` @type ^`int` := v4;
  #L47cb0a.  v12:= v11.`okio.GzipSource.section` @type ^`int`;
  #L47cb0e.  if v12 != v4 then goto L47cb40;
  #L47cb12.  call `consumeTrailer`(v11) @signature `Lokio/GzipSource;.consumeTrailer:()V` @kind direct;
  #L47cb18.  v12:= 3I;
  #L47cb1a.  v11.`okio.GzipSource.section` @type ^`int` := v12;
  #L47cb1e.  v12:= v11.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cb22.  call temp:= `exhausted`(v12) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L47cb28.  v12:= temp;
  #L47cb2a.  if v12 == 0 then goto L47cb30;
  #L47cb2e.  goto L47cb40;
  #L47cb30.  v12:= new `java.io.IOException`;
  #L47cb34.  v13:= "gzip finished without exhausting source" @kind object;
  #L47cb38.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47cb3e.  throw v12;
  #L47cb40.  return v2 @kind wide;
  #L47cb42.  v12:= new `java.lang.IllegalArgumentException`;
  #L47cb46.  v0:= new `java.lang.StringBuilder`;
  #L47cb4a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47cb50.  v1:= "byteCount < 0: " @kind object;
  #L47cb54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47cb5a.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L47cb60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47cb66.  v13:= temp @kind object;
  #L47cb68.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47cb6e.  throw v12;
}
procedure `okio.Timeout` `timeout`(`okio.GzipSource` v1 @kind this) @signature `Lokio/GzipSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47cb80.  v0:= v1.`okio.GzipSource.source` @type ^`okio.BufferedSource` @kind object;
  #L47cb84.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L47cb8a.  v0:= temp @kind object;
  #L47cb8c.  return v0 @kind object;
}
