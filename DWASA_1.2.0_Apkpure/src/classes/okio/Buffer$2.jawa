record `okio.Buffer$2` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.Buffer` `okio.Buffer$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Buffer$2` v0 @kind this, `okio.Buffer` v1 @kind object) @signature `Lokio/Buffer$2;.<init>:(Lokio/Buffer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L478098.  v0.`okio.Buffer$2.this$0` @type ^`okio.Buffer` := v1 @kind object;
  #L47809c.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L4780a2.  return @kind void;
}
procedure `int` `available`(`okio.Buffer$2` v4 @kind this) @signature `Lokio/Buffer$2;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L477fd8.  v0:= v4.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L477fdc.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L477fe0.  v2:= 2147483647L;
  #L477fe6.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L477fec.  v0:= temp @kind wide;
  #L477fee.  v1:= (`int`) v0 @kind l2i;
  #L477ff0.  return v1;
}
procedure `void` `close`(`okio.Buffer$2` v0 @kind this) @signature `Lokio/Buffer$2;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L4780b4.  return @kind void;
}
procedure `int` `read`(`okio.Buffer$2` v5 @kind this) @signature `Lokio/Buffer$2;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L478004.  v0:= v5.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L478008.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47800c.  v2:= 0L;
  #L478010.  v4:= lcmp(v0, v2);
  #L478014.  if v4 <= 0 then goto L47802a;
  #L478018.  v0:= v5.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L47801c.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L478022.  v0:= temp;
  #L478024.  v0:= v0 ^& 255;
  #L478028.  return v0;
  #L47802a.  v0:= -1I;
  #L47802c.  return v0;
}
procedure `int` `read`(`okio.Buffer$2` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/Buffer$2;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L478040.  v0:= v1.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L478044.  call temp:= `read`(v0, v2, v3, v4) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L47804a.  v2:= temp;
  #L47804c.  return v2;
}
procedure `java.lang.String` `toString`(`okio.Buffer$2` v2 @kind this) @signature `Lokio/Buffer$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L478060.  v0:= new `java.lang.StringBuilder`;
  #L478064.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47806a.  v1:= v2.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L47806e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L478074.  v1:= ".inputStream()" @kind object;
  #L478078.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47807e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L478084.  v0:= temp @kind object;
  #L478086.  return v0 @kind object;
}
