record `okio.RealBufferedSource` @kind class @AccessFlag FINAL extends `okio.BufferedSource` @kind interface {
  `okio.Buffer` `okio.RealBufferedSource.buffer` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.RealBufferedSource.closed` @AccessFlag ;
  `okio.Source` `okio.RealBufferedSource.source` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okio.RealBufferedSource` v1 @kind this, `okio.Source` v2 @kind object) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L47fb34.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47fb3a.  v0:= new `okio.Buffer`;
  #L47fb3e.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L47fb44.  v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L47fb48.  if v2 == 0 then goto L47fb52;
  #L47fb4c.  v1.`okio.RealBufferedSource.source` @type ^`okio.Source` := v2 @kind object;
  #L47fb50.  return @kind void;
  #L47fb52.  v2:= new `java.lang.NullPointerException`;
  #L47fb56.  v0:= "source == null" @kind object;
  #L47fb5a.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47fb60.  throw v2;
}
procedure `okio.Buffer` `buffer`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.buffer:()Lokio/Buffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fa5c.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fa60.  return v0 @kind object;
}
procedure `void` `close`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fb74.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47fb78.  if v0 == 0 then goto L47fb7e;
  #L47fb7c.  return @kind void;
  #L47fb7e.  v0:= 1I;
  #L47fb80.  v1.`okio.RealBufferedSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L47fb84.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47fb88.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L47fb8e.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fb92.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L47fb98.  return @kind void;
}
procedure `boolean` `exhausted`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.exhausted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47ed64.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47ed68.  if v0 != 0 then goto L47eda4;
  #L47ed6c.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ed70.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L47ed76.  v0:= temp;
  #L47ed78.  if v0 == 0 then goto L47eda0;
  #L47ed7c.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47ed80.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ed84.  v2:= 8192L;
  #L47ed88.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47ed8e.  v0:= temp @kind wide;
  #L47ed90.  v2:= -1L;
  #L47ed94.  v4:= lcmp(v0, v2);
  #L47ed98.  if v4 != 0 then goto L47eda0;
  #L47ed9c.  v0:= 1I;
  #L47ed9e.  goto L47eda2;
  #L47eda0.  v0:= 0I;
  #L47eda2.  return v0;
  #L47eda4.  v0:= new `java.lang.IllegalStateException`;
  #L47eda8.  v1:= "closed" @kind object;
  #L47edac.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47edb2.  throw v0;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 ) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47f4d4.  v2:= 0L;
  #L47f4d8.  v4:= 9223372036854775807L;
  #L47f4e2.  v0:= v6 @kind object;
  #L47f4e4.  v1:= v7;
  #L47f4e6.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L47f4ec.  v0:= temp @kind wide;
  #L47f4ee.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 , `long` v8 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47f500.  v4:= 9223372036854775807L;
  #L47f50a.  v0:= v6 @kind object;
  #L47f50c.  v1:= v7;
  #L47f50e.  v2:= v8 @kind wide;
  #L47f510.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L47f516.  v7:= temp @kind wide;
  #L47f518.  return v7 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v9 @kind this, `byte` v10 , `long` v11 , `long` v13 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47f52c.  v0:= v9.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47f530.  if v0 != 0 then goto L47f5e4;
  #L47f534.  v0:= 0L;
  #L47f538.  v2:= lcmp(v11, v0);
  #L47f53c.  if v2 < 0 then goto L47f5aa;
  #L47f540.  v0:= lcmp(v13, v11);
  #L47f544.  if v0 < 0 then goto L47f5aa;
  #L47f548.  v7:= -1L;
  #L47f54c.  v0:= lcmp(v11, v13);
  #L47f550.  if v0 >= 0 then goto L47f5a8;
  #L47f554.  v1:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f558.  v2:= v10;
  #L47f55a.  v3:= v11 @kind wide;
  #L47f55c.  v5:= v13 @kind wide;
  #L47f55e.  call temp:= `indexOf`(v1, v2, v3, v5) @signature `Lokio/Buffer;.indexOf:(BJJ)J` @kind virtual;
  #L47f564.  v0:= temp @kind wide;
  #L47f566.  v2:= lcmp(v0, v7);
  #L47f56a.  if v2 == 0 then goto L47f570;
  #L47f56e.  return v0 @kind wide;
  #L47f570.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f574.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47f578.  v2:= lcmp(v0, v13);
  #L47f57c.  if v2 >= 0 then goto L47f5a8;
  #L47f580.  v2:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47f584.  v3:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f588.  v4:= 8192L;
  #L47f58c.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47f592.  v2:= temp @kind wide;
  #L47f594.  v4:= lcmp(v2, v7);
  #L47f598.  if v4 != 0 then goto L47f59e;
  #L47f59c.  goto L47f5a8;
  #L47f59e.  call temp:= `max`(v11, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L47f5a4.  v11:= temp @kind wide;
  #L47f5a6.  goto L47f548;
  #L47f5a8.  return v7 @kind wide;
  #L47f5aa.  v10:= new `java.lang.IllegalArgumentException`;
  #L47f5ae.  v0:= 2I;
  #L47f5b0.  v0:= new `java.lang.Object`[v0];
  #L47f5b4.  v1:= 0I;
  #L47f5b6.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L47f5bc.  v11:= temp @kind object;
  #L47f5be.  v0[v1]:= v11 @kind object;
  #L47f5c2.  v11:= 1I;
  #L47f5c4.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L47f5ca.  v12:= temp @kind object;
  #L47f5cc.  v0[v11]:= v12 @kind object;
  #L47f5d0.  v11:= "fromIndex=%s toIndex=%s" @kind object;
  #L47f5d4.  call temp:= `format`(v11, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L47f5da.  v11:= temp @kind object;
  #L47f5dc.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f5e2.  throw v10;
  #L47f5e4.  v10:= new `java.lang.IllegalStateException`;
  #L47f5e8.  v11:= "closed" @kind object;
  #L47f5ec.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f5f2.  goto L47f5f6;
  #L47f5f4.  throw v10;
  #L47f5f6.  goto L47f5f4;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f608.  v0:= 0L;
  #L47f60c.  call temp:= `indexOf`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L47f612.  v0:= temp @kind wide;
  #L47f614.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L47f628.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47f62c.  if v0 != 0 then goto L47f68c;
  #L47f630.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f634.  call temp:= `indexOf`(v0, v9, v10) @signature `Lokio/Buffer;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L47f63a.  v0:= temp @kind wide;
  #L47f63c.  v2:= -1L;
  #L47f640.  v4:= lcmp(v0, v2);
  #L47f644.  if v4 == 0 then goto L47f64a;
  #L47f648.  return v0 @kind wide;
  #L47f64a.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f64e.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47f652.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47f656.  v5:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f65a.  v6:= 8192L;
  #L47f65e.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47f664.  v4:= temp @kind wide;
  #L47f666.  v6:= lcmp(v4, v2);
  #L47f66a.  if v6 != 0 then goto L47f670;
  #L47f66e.  return v2 @kind wide;
  #L47f670.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L47f676.  v2:= temp;
  #L47f678.  v2:= (`long`) v2 @kind i2l;
  #L47f67a.  v0:= v0 - v2 @kind long;
  #L47f67c.  v2:= 1L;
  #L47f680.  v0:= v0 + v2 @kind long;
  #L47f682.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L47f688.  v10:= temp @kind wide;
  #L47f68a.  goto L47f630;
  #L47f68c.  v9:= new `java.lang.IllegalStateException`;
  #L47f690.  v10:= "closed" @kind object;
  #L47f694.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f69a.  goto L47f69e;
  #L47f69c.  throw v9;
  #L47f69e.  goto L47f69c;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f6b0.  v0:= 0L;
  #L47f6b4.  call temp:= `indexOfElement`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L47f6ba.  v0:= temp @kind wide;
  #L47f6bc.  return v0 @kind wide;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L47f6d0.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47f6d4.  if v0 != 0 then goto L47f722;
  #L47f6d8.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f6dc.  call temp:= `indexOfElement`(v0, v9, v10) @signature `Lokio/Buffer;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L47f6e2.  v0:= temp @kind wide;
  #L47f6e4.  v2:= -1L;
  #L47f6e8.  v4:= lcmp(v0, v2);
  #L47f6ec.  if v4 == 0 then goto L47f6f2;
  #L47f6f0.  return v0 @kind wide;
  #L47f6f2.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f6f6.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47f6fa.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47f6fe.  v5:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f702.  v6:= 8192L;
  #L47f706.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47f70c.  v4:= temp @kind wide;
  #L47f70e.  v6:= lcmp(v4, v2);
  #L47f712.  if v6 != 0 then goto L47f718;
  #L47f716.  return v2 @kind wide;
  #L47f718.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L47f71e.  v10:= temp @kind wide;
  #L47f720.  goto L47f6d8;
  #L47f722.  v9:= new `java.lang.IllegalStateException`;
  #L47f726.  v10:= "closed" @kind object;
  #L47f72a.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f730.  goto L47f734;
  #L47f732.  throw v9;
  #L47f734.  goto L47f732;
}
procedure `java.io.InputStream` `inputStream`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.inputStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f19c.  v0:= new `okio.RealBufferedSource$1`;
  #L47f1a0.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @kind direct;
  #L47f1a6.  return v0 @kind object;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v6 @kind this, `long` v7 , `okio.ByteString` v9 @kind object) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47edc4.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L47edca.  v5:= temp;
  #L47edcc.  v4:= 0I;
  #L47edce.  v0:= v6 @kind object;
  #L47edd0.  v1:= v7 @kind wide;
  #L47edd2.  v3:= v9 @kind object;
  #L47edd4.  call temp:= `rangeEquals`(v0, v1, v3, v4, v5) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @kind virtual;
  #L47edda.  v7:= temp;
  #L47eddc.  return v7;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v7 @kind this, `long` v8 , `okio.ByteString` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47edf0.  v0:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47edf4.  if v0 != 0 then goto L47ee66;
  #L47edf8.  v0:= 0L;
  #L47edfc.  v2:= 0I;
  #L47edfe.  v3:= lcmp(v8, v0);
  #L47ee02.  if v3 < 0 then goto L47ee64;
  #L47ee06.  if v11 < 0 then goto L47ee64;
  #L47ee0a.  if v12 < 0 then goto L47ee64;
  #L47ee0e.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L47ee14.  v0:= temp;
  #L47ee16.  v0:= v0 - v11 @kind int;
  #L47ee18.  if v0 >= v12 then goto L47ee1e;
  #L47ee1c.  goto L47ee64;
  #L47ee1e.  v0:= 0I;
  #L47ee20.  if v0 >= v12 then goto L47ee60;
  #L47ee24.  v3:= (`long`) v0 @kind i2l;
  #L47ee26.  v3:= v3 + v8 @kind long;
  #L47ee28.  v5:= 1L;
  #L47ee2c.  v5:= v5 + v3 @kind long;
  #L47ee2e.  call temp:= `request`(v7, v5) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L47ee34.  v1:= temp;
  #L47ee36.  if v1 != 0 then goto L47ee3c;
  #L47ee3a.  return v2;
  #L47ee3c.  v1:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ee40.  call temp:= `getByte`(v1, v3) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L47ee46.  v1:= temp;
  #L47ee48.  v3:= v11 + v0 @kind int;
  #L47ee4c.  call temp:= `getByte`(v10, v3) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L47ee52.  v3:= temp;
  #L47ee54.  if v1 == v3 then goto L47ee5a;
  #L47ee58.  return v2;
  #L47ee5a.  v0:= v0 + 1;
  #L47ee5e.  goto L47ee20;
  #L47ee60.  v8:= 1I;
  #L47ee62.  return v8;
  #L47ee64.  return v2;
  #L47ee66.  v8:= new `java.lang.IllegalStateException`;
  #L47ee6a.  v9:= "closed" @kind object;
  #L47ee6e.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47ee74.  goto L47ee78;
  #L47ee76.  throw v8;
  #L47ee78.  goto L47ee76;
}
procedure `int` `read`(`okio.RealBufferedSource` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/RealBufferedSource;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47efa4.  v0:= length @variable v3;
  #L47efa6.  v1:= 0I;
  #L47efa8.  call temp:= `read`(v2, v3, v1, v0) @signature `Lokio/RealBufferedSource;.read:([BII)I` @kind virtual;
  #L47efae.  v3:= temp;
  #L47efb0.  return v3;
}
procedure `int` `read`(`okio.RealBufferedSource` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47efc4.  v0:= length @variable v10;
  #L47efc6.  v1:= (`long`) v0 @kind i2l;
  #L47efc8.  v3:= (`long`) v11 @kind i2l;
  #L47efca.  v7:= (`long`) v12 @kind i2l;
  #L47efcc.  v5:= v7 @kind wide;
  #L47efce.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L47efd4.  v12:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47efd8.  v0:= v12.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47efdc.  v2:= 0L;
  #L47efe0.  v12:= lcmp(v0, v2);
  #L47efe4.  if v12 != 0 then goto L47f00c;
  #L47efe8.  v12:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47efec.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47eff0.  v1:= 8192L;
  #L47eff4.  call temp:= `read`(v12, v0, v1) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47effa.  v0:= temp @kind wide;
  #L47effc.  v2:= -1L;
  #L47f000.  v12:= lcmp(v0, v2);
  #L47f004.  if v12 != 0 then goto L47f00c;
  #L47f008.  v10:= -1I;
  #L47f00a.  return v10;
  #L47f00c.  v12:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f010.  v0:= v12.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47f014.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L47f01a.  v0:= temp @kind wide;
  #L47f01c.  v12:= (`int`) v0 @kind l2i;
  #L47f01e.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f022.  call temp:= `read`(v0, v10, v11, v12) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L47f028.  v10:= temp;
  #L47f02a.  return v10;
}
procedure `long` `read`(`okio.RealBufferedSource` v5 @kind this, `okio.Buffer` v6 @kind object, `long` v7 ) @signature `Lokio/RealBufferedSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47f748.  if v6 == 0 then goto L47f7ee;
  #L47f74c.  v0:= 0L;
  #L47f750.  v2:= lcmp(v7, v0);
  #L47f754.  if v2 < 0 then goto L47f7c0;
  #L47f758.  v2:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47f75c.  if v2 != 0 then goto L47f7b0;
  #L47f760.  v2:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f764.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47f768.  v4:= lcmp(v2, v0);
  #L47f76c.  if v4 != 0 then goto L47f792;
  #L47f770.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47f774.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f778.  v2:= 8192L;
  #L47f77c.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47f782.  v0:= temp @kind wide;
  #L47f784.  v2:= -1L;
  #L47f788.  v4:= lcmp(v0, v2);
  #L47f78c.  if v4 != 0 then goto L47f792;
  #L47f790.  return v2 @kind wide;
  #L47f792.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f796.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47f79a.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L47f7a0.  v7:= temp @kind wide;
  #L47f7a2.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f7a6.  call temp:= `read`(v0, v6, v7) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L47f7ac.  v6:= temp @kind wide;
  #L47f7ae.  return v6 @kind wide;
  #L47f7b0.  v6:= new `java.lang.IllegalStateException`;
  #L47f7b4.  v7:= "closed" @kind object;
  #L47f7b8.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f7be.  throw v6;
  #L47f7c0.  v6:= new `java.lang.IllegalArgumentException`;
  #L47f7c4.  v0:= new `java.lang.StringBuilder`;
  #L47f7c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47f7ce.  v1:= "byteCount < 0: " @kind object;
  #L47f7d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f7d8.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f7de.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47f7e4.  v7:= temp @kind object;
  #L47f7e6.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f7ec.  throw v6;
  #L47f7ee.  v6:= new `java.lang.IllegalArgumentException`;
  #L47f7f2.  v7:= "sink == null" @kind object;
  #L47f7f6.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f7fc.  throw v6;
}
procedure `long` `readAll`(`okio.RealBufferedSource` v9 @kind this, `okio.Sink` v10 @kind object) @signature `Lokio/RealBufferedSource;.readAll:(Lokio/Sink;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47f810.  if v10 == 0 then goto L47f892;
  #L47f814.  v0:= 0L;
  #L47f818.  v2:= v0 @kind wide;
  #L47f81a.  v4:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47f81e.  v5:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f822.  v6:= 8192L;
  #L47f826.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47f82c.  v4:= temp @kind wide;
  #L47f82e.  v6:= -1L;
  #L47f832.  v8:= lcmp(v4, v6);
  #L47f836.  if v8 == 0 then goto L47f85c;
  #L47f83a.  v4:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f83e.  call temp:= `completeSegmentByteCount`(v4) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L47f844.  v4:= temp @kind wide;
  #L47f846.  v6:= lcmp(v4, v0);
  #L47f84a.  if v6 <= 0 then goto L47f81a;
  #L47f84e.  v2:= v2 + v4 @kind long;
  #L47f850.  v6:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f854.  call `write`(v10, v6, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L47f85a.  goto L47f81a;
  #L47f85c.  v4:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f860.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L47f866.  v4:= temp @kind wide;
  #L47f868.  v6:= lcmp(v4, v0);
  #L47f86c.  if v6 <= 0 then goto L47f890;
  #L47f870.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f874.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L47f87a.  v0:= temp @kind wide;
  #L47f87c.  v2:= v2 + v0 @kind long;
  #L47f87e.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f882.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L47f888.  v4:= temp @kind wide;
  #L47f88a.  call `write`(v10, v0, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L47f890.  return v2 @kind wide;
  #L47f892.  v10:= new `java.lang.IllegalArgumentException`;
  #L47f896.  v0:= "sink == null" @kind object;
  #L47f89a.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f8a0.  goto L47f8a4;
  #L47f8a2.  throw v10;
  #L47f8a4.  goto L47f8a2;
}
procedure `byte` `readByte`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47ef2c.  v0:= 1L;
  #L47ef30.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47ef36.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ef3a.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L47ef40.  v0:= temp;
  #L47ef42.  return v0;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47ef54.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ef58.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47ef5c.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L47ef62.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ef66.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L47ef6c.  v0:= temp @kind object;
  #L47ef6e.  return v0 @kind object;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteArray:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ef80.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47ef86.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ef8a.  call temp:= `readByteArray`(v0, v2) @signature `Lokio/Buffer;.readByteArray:(J)[B` @kind virtual;
  #L47ef90.  v2:= temp @kind object;
  #L47ef92.  return v2 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteString:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fa74.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fa78.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47fa7c.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L47fa82.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fa86.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L47fa8c.  v0:= temp @kind object;
  #L47fa8e.  return v0 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteString:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47faa0.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47faa6.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47faaa.  call temp:= `readByteString`(v0, v2) @signature `Lokio/Buffer;.readByteString:(J)Lokio/ByteString;` @kind virtual;
  #L47fab0.  v2:= temp @kind object;
  #L47fab2.  return v2 @kind object;
}
procedure `long` `readDecimalLong`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.readDecimalLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47f8b8.  v0:= 1L;
  #L47f8bc.  call `require`(v6, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f8c2.  v0:= 0I;
  #L47f8c4.  v1:= 0I;
  #L47f8c6.  v2:= v1 + 1;
  #L47f8ca.  v3:= (`long`) v2 @kind i2l;
  #L47f8cc.  call temp:= `request`(v6, v3) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L47f8d2.  v3:= temp;
  #L47f8d4.  if v3 == 0 then goto L47f938;
  #L47f8d8.  v3:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f8dc.  v4:= (`long`) v1 @kind i2l;
  #L47f8de.  call temp:= `getByte`(v3, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L47f8e4.  v3:= temp;
  #L47f8e6.  v4:= 48I;
  #L47f8ea.  if v3 < v4 then goto L47f8f6;
  #L47f8ee.  v4:= 57I;
  #L47f8f2.  if v3 <= v4 then goto L47f904;
  #L47f8f6.  if v1 != 0 then goto L47f908;
  #L47f8fa.  v4:= 45I;
  #L47f8fe.  if v3 == v4 then goto L47f904;
  #L47f902.  goto L47f908;
  #L47f904.  v1:= v2;
  #L47f906.  goto L47f8c6;
  #L47f908.  if v1 == 0 then goto L47f90e;
  #L47f90c.  goto L47f938;
  #L47f90e.  v1:= new `java.lang.NumberFormatException`;
  #L47f912.  v2:= 1I;
  #L47f914.  v2:= new `java.lang.Object`[v2];
  #L47f918.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L47f91e.  v3:= temp @kind object;
  #L47f920.  v2[v0]:= v3 @kind object;
  #L47f924.  v0:= "Expected leading [0-9] or '-' character but was %#x" @kind object;
  #L47f928.  call temp:= `format`(v0, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L47f92e.  v0:= temp @kind object;
  #L47f930.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f936.  throw v1;
  #L47f938.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f93c.  call temp:= `readDecimalLong`(v0) @signature `Lokio/Buffer;.readDecimalLong:()J` @kind virtual;
  #L47f942.  v0:= temp @kind wide;
  #L47f944.  return v0 @kind wide;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokio/RealBufferedSource;.readFully:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fc28.  call `require`(v1, v3) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47fc2e.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fc32.  call `readFully`(v0, v2, v3) @signature `Lokio/Buffer;.readFully:(Lokio/Buffer;J)V` @kind virtual;
  #L47fc38.  return @kind void;
  #L47fc3a.  v3:= Exception @type ^`java.io.EOFException` @kind object;
  #L47fc3c.  v4:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fc40.  call temp:= `writeAll`(v2, v4) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L47fc46.  throw v3;
  catch `java.io.EOFException` @[L47fc28..L47fc2e] goto L47fc3a;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v7 @kind this, `byte`[] v8 @kind object) @signature `Lokio/RealBufferedSource;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47fbac.  v0:= length @variable v8;
  #L47fbae.  v0:= (`long`) v0 @kind i2l;
  #L47fbb0.  call `require`(v7, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47fbb6.  v0:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fbba.  call `readFully`(v0, v8) @signature `Lokio/Buffer;.readFully:([B)V` @kind virtual;
  #L47fbc0.  return @kind void;
  #L47fbc2.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L47fbc4.  v1:= 0I;
  #L47fbc6.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fbca.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47fbce.  v4:= 0L;
  #L47fbd2.  v6:= lcmp(v2, v4);
  #L47fbd6.  if v6 <= 0 then goto L47fc02;
  #L47fbda.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fbde.  v3:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47fbe2.  v4:= (`int`) v3 @kind l2i;
  #L47fbe4.  call temp:= `read`(v2, v8, v1, v4) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L47fbea.  v2:= temp;
  #L47fbec.  v3:= -1I;
  #L47fbee.  if v2 == v3 then goto L47fbf6;
  #L47fbf2.  v1:= v1 + v2 @kind int;
  #L47fbf4.  goto L47fbc6;
  #L47fbf6.  v8:= new `java.lang.AssertionError`;
  #L47fbfa.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L47fc00.  throw v8;
  #L47fc02.  goto L47fc06;
  #L47fc04.  throw v0;
  #L47fc06.  goto L47fc04;
  catch `java.io.EOFException` @[L47fbac..L47fbb6] goto L47fbc2;
}
procedure `long` `readHexadecimalUnsignedLong`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.readHexadecimalUnsignedLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47f958.  v0:= 1L;
  #L47f95c.  call `require`(v6, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f962.  v0:= 0I;
  #L47f964.  v1:= 0I;
  #L47f966.  v2:= v1 + 1;
  #L47f96a.  v3:= (`long`) v2 @kind i2l;
  #L47f96c.  call temp:= `request`(v6, v3) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L47f972.  v3:= temp;
  #L47f974.  if v3 == 0 then goto L47f9ec;
  #L47f978.  v3:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f97c.  v4:= (`long`) v1 @kind i2l;
  #L47f97e.  call temp:= `getByte`(v3, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L47f984.  v3:= temp;
  #L47f986.  v4:= 48I;
  #L47f98a.  if v3 < v4 then goto L47f996;
  #L47f98e.  v4:= 57I;
  #L47f992.  if v3 <= v4 then goto L47f9b8;
  #L47f996.  v4:= 97I;
  #L47f99a.  if v3 < v4 then goto L47f9a6;
  #L47f99e.  v4:= 102I;
  #L47f9a2.  if v3 <= v4 then goto L47f9b8;
  #L47f9a6.  v4:= 65I;
  #L47f9aa.  if v3 < v4 then goto L47f9bc;
  #L47f9ae.  v4:= 70I;
  #L47f9b2.  if v3 <= v4 then goto L47f9b8;
  #L47f9b6.  goto L47f9bc;
  #L47f9b8.  v1:= v2;
  #L47f9ba.  goto L47f966;
  #L47f9bc.  if v1 == 0 then goto L47f9c2;
  #L47f9c0.  goto L47f9ec;
  #L47f9c2.  v1:= new `java.lang.NumberFormatException`;
  #L47f9c6.  v2:= 1I;
  #L47f9c8.  v2:= new `java.lang.Object`[v2];
  #L47f9cc.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L47f9d2.  v3:= temp @kind object;
  #L47f9d4.  v2[v0]:= v3 @kind object;
  #L47f9d8.  v0:= "Expected leading [0-9a-fA-F] character but was %#x" @kind object;
  #L47f9dc.  call temp:= `format`(v0, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L47f9e2.  v0:= temp @kind object;
  #L47f9e4.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f9ea.  throw v1;
  #L47f9ec.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f9f0.  call temp:= `readHexadecimalUnsignedLong`(v0) @signature `Lokio/Buffer;.readHexadecimalUnsignedLong:()J` @kind virtual;
  #L47f9f6.  v0:= temp @kind wide;
  #L47f9f8.  return v0 @kind wide;
}
procedure `int` `readInt`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f03c.  v0:= 4L;
  #L47f040.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f046.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f04a.  call temp:= `readInt`(v0) @signature `Lokio/Buffer;.readInt:()I` @kind virtual;
  #L47f050.  v0:= temp;
  #L47f052.  return v0;
}
procedure `int` `readIntLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f064.  v0:= 4L;
  #L47f068.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f06e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f072.  call temp:= `readIntLe`(v0) @signature `Lokio/Buffer;.readIntLe:()I` @kind virtual;
  #L47f078.  v0:= temp;
  #L47f07a.  return v0;
}
procedure `long` `readLong`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fa0c.  v0:= 8L;
  #L47fa10.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47fa16.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fa1a.  call temp:= `readLong`(v0) @signature `Lokio/Buffer;.readLong:()J` @kind virtual;
  #L47fa20.  v0:= temp @kind wide;
  #L47fa22.  return v0 @kind wide;
}
procedure `long` `readLongLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLongLe:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fa34.  v0:= 8L;
  #L47fa38.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47fa3e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fa42.  call temp:= `readLongLe`(v0) @signature `Lokio/Buffer;.readLongLe:()J` @kind virtual;
  #L47fa48.  v0:= temp @kind wide;
  #L47fa4a.  return v0 @kind wide;
}
procedure `short` `readShort`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fae4.  v0:= 2L;
  #L47fae8.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47faee.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47faf2.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L47faf8.  v0:= temp;
  #L47fafa.  return v0;
}
procedure `short` `readShortLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShortLe:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fb0c.  v0:= 2L;
  #L47fb10.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47fb16.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fb1a.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L47fb20.  v0:= temp;
  #L47fb22.  return v0;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 , `java.nio.charset.Charset` v4 @kind object) @signature `Lokio/RealBufferedSource;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f1f8.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f1fe.  if v4 == 0 then goto L47f210;
  #L47f202.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f206.  call temp:= `readString`(v0, v2, v4) @signature `Lokio/Buffer;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L47f20c.  v2:= temp @kind object;
  #L47f20e.  return v2 @kind object;
  #L47f210.  v2:= new `java.lang.IllegalArgumentException`;
  #L47f214.  v3:= "charset == null" @kind object;
  #L47f218.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f21e.  throw v2;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/RealBufferedSource;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f1b8.  if v3 == 0 then goto L47f1d8;
  #L47f1bc.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f1c0.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47f1c4.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L47f1ca.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f1ce.  call temp:= `readString`(v0, v3) @signature `Lokio/Buffer;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L47f1d4.  v3:= temp @kind object;
  #L47f1d6.  return v3 @kind object;
  #L47f1d8.  v3:= new `java.lang.IllegalArgumentException`;
  #L47f1dc.  v0:= "charset == null" @kind object;
  #L47f1e0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f1e6.  throw v3;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f230.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f234.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47f238.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L47f23e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f242.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L47f248.  v0:= temp @kind object;
  #L47f24a.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f25c.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f262.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f266.  call temp:= `readUtf8`(v0, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L47f26c.  v2:= temp @kind object;
  #L47f26e.  return v2 @kind object;
}
procedure `int` `readUtf8CodePoint`(`okio.RealBufferedSource` v3 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8CodePoint:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47f08c.  v0:= 1L;
  #L47f090.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f096.  v0:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f09a.  v1:= 0L;
  #L47f09e.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L47f0a4.  v0:= temp;
  #L47f0a6.  v1:= v0 ^& 224;
  #L47f0aa.  v2:= 192I;
  #L47f0ae.  if v1 != v2 then goto L47f0be;
  #L47f0b2.  v0:= 2L;
  #L47f0b6.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f0bc.  goto L47f0ec;
  #L47f0be.  v1:= v0 ^& 240;
  #L47f0c2.  v2:= 224I;
  #L47f0c6.  if v1 != v2 then goto L47f0d6;
  #L47f0ca.  v0:= 3L;
  #L47f0ce.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f0d4.  goto L47f0ec;
  #L47f0d6.  v0:= v0 ^& 248;
  #L47f0da.  v1:= 240I;
  #L47f0de.  if v0 != v1 then goto L47f0ec;
  #L47f0e2.  v0:= 4L;
  #L47f0e6.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L47f0ec.  v0:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f0f0.  call temp:= `readUtf8CodePoint`(v0) @signature `Lokio/Buffer;.readUtf8CodePoint:()I` @kind virtual;
  #L47f0f6.  v0:= temp;
  #L47f0f8.  return v0;
}
procedure `java.lang.String` `readUtf8Line`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8Line:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47f280.  v0:= 10I;
  #L47f284.  call temp:= `indexOf`(v5, v0) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L47f28a.  v0:= temp @kind wide;
  #L47f28c.  v2:= -1L;
  #L47f290.  v4:= lcmp(v0, v2);
  #L47f294.  if v4 != 0 then goto L47f2c2;
  #L47f298.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f29c.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47f2a0.  v2:= 0L;
  #L47f2a4.  v4:= lcmp(v0, v2);
  #L47f2a8.  if v4 == 0 then goto L47f2be;
  #L47f2ac.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f2b0.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47f2b4.  call temp:= `readUtf8`(v5, v0) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L47f2ba.  v0:= temp @kind object;
  #L47f2bc.  goto L47f2c0;
  #L47f2be.  v0:= 0I;
  #L47f2c0.  return v0 @kind object;
  #L47f2c2.  v2:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f2c6.  call temp:= `readUtf8Line`(v2, v0) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L47f2cc.  v0:= temp @kind object;
  #L47f2ce.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f2e0.  v0:= 9223372036854775807L;
  #L47f2ea.  call temp:= `readUtf8LineStrict`(v2, v0) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @kind virtual;
  #L47f2f0.  v0:= temp @kind object;
  #L47f2f2.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v12 @kind this, `long` v13 ) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L47f304.  v0:= 0L;
  #L47f308.  v2:= lcmp(v13, v0);
  #L47f30c.  if v2 < 0 then goto L47f452;
  #L47f310.  v0:= 1L;
  #L47f314.  v2:= 9223372036854775807L;
  #L47f31e.  v4:= lcmp(v13, v2);
  #L47f322.  if v4 != 0 then goto L47f32a;
  #L47f326.  v4:= v2 @kind wide;
  #L47f328.  goto L47f32e;
  #L47f32a.  v4:= v13 + v0 @kind long;
  #L47f32e.  v7:= 10I;
  #L47f332.  v8:= 0L;
  #L47f336.  v6:= v12 @kind object;
  #L47f338.  v10:= v4 @kind wide;
  #L47f33a.  call temp:= `indexOf`(v6, v7, v8, v10) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L47f340.  v6:= temp @kind wide;
  #L47f342.  v8:= -1L;
  #L47f346.  v10:= lcmp(v6, v8);
  #L47f34a.  if v10 == 0 then goto L47f35c;
  #L47f34e.  v13:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f352.  call temp:= `readUtf8Line`(v13, v6) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L47f358.  v13:= temp @kind object;
  #L47f35a.  return v13 @kind object;
  #L47f35c.  v6:= lcmp(v4, v2);
  #L47f360.  if v6 >= 0 then goto L47f3b8;
  #L47f364.  call temp:= `request`(v12, v4) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L47f36a.  v2:= temp;
  #L47f36c.  if v2 == 0 then goto L47f3b8;
  #L47f370.  v2:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f374.  v6:= v4 - v0 @kind long;
  #L47f378.  call temp:= `getByte`(v2, v6) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L47f37e.  v2:= temp;
  #L47f380.  v3:= 13I;
  #L47f384.  if v2 != v3 then goto L47f3b8;
  #L47f388.  v0:= v0 + v4 @kind long;
  #L47f38a.  call temp:= `request`(v12, v0) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L47f390.  v0:= temp;
  #L47f392.  if v0 == 0 then goto L47f3b8;
  #L47f396.  v0:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f39a.  call temp:= `getByte`(v0, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L47f3a0.  v0:= temp;
  #L47f3a2.  v1:= 10I;
  #L47f3a6.  if v0 != v1 then goto L47f3b8;
  #L47f3aa.  v13:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f3ae.  call temp:= `readUtf8Line`(v13, v4) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L47f3b4.  v13:= temp @kind object;
  #L47f3b6.  return v13 @kind object;
  #L47f3b8.  v6:= new `okio.Buffer`;
  #L47f3bc.  call `<init>`(v6) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L47f3c2.  v0:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f3c6.  v2:= 0L;
  #L47f3ca.  v4:= 32L;
  #L47f3ce.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L47f3d4.  v7:= temp @kind wide;
  #L47f3d6.  call temp:= `min`(v4, v7) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L47f3dc.  v4:= temp @kind wide;
  #L47f3de.  v1:= v6 @kind object;
  #L47f3e0.  call temp:= `copyTo`(v0, v1, v2, v4) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L47f3e6.  v0:= new `java.io.EOFException`;
  #L47f3ea.  v1:= new `java.lang.StringBuilder`;
  #L47f3ee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47f3f4.  v2:= "\\n not found: limit=" @kind object;
  #L47f3f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f3fe.  v2:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f402.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L47f408.  v2:= temp @kind wide;
  #L47f40a.  call temp:= `min`(v2, v13) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L47f410.  v13:= temp @kind wide;
  #L47f412.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f418.  v13:= " content=" @kind object;
  #L47f41c.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f422.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L47f428.  v13:= temp @kind object;
  #L47f42a.  call temp:= `hex`(v13) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L47f430.  v13:= temp @kind object;
  #L47f432.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f438.  v13:= 8230I;
  #L47f43c.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f442.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47f448.  v13:= temp @kind object;
  #L47f44a.  call `<init>`(v0, v13) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f450.  throw v0;
  #L47f452.  v0:= new `java.lang.IllegalArgumentException`;
  #L47f456.  v1:= new `java.lang.StringBuilder`;
  #L47f45a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47f460.  v2:= "limit < 0: " @kind object;
  #L47f464.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f46a.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f470.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47f476.  v13:= temp @kind object;
  #L47f478.  call `<init>`(v0, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f47e.  throw v0;
}
procedure `boolean` `request`(`okio.RealBufferedSource` v5 @kind this, `long` v6 ) @signature `Lokio/RealBufferedSource;.request:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47ee8c.  v0:= 0L;
  #L47ee90.  v2:= lcmp(v6, v0);
  #L47ee94.  if v2 < 0 then goto L47eee8;
  #L47ee98.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47ee9c.  if v0 != 0 then goto L47eed8;
  #L47eea0.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47eea4.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47eea8.  v2:= lcmp(v0, v6);
  #L47eeac.  if v2 >= 0 then goto L47eed4;
  #L47eeb0.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47eeb4.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47eeb8.  v2:= 8192L;
  #L47eebc.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47eec2.  v0:= temp @kind wide;
  #L47eec4.  v2:= -1L;
  #L47eec8.  v4:= lcmp(v0, v2);
  #L47eecc.  if v4 != 0 then goto L47eea0;
  #L47eed0.  v6:= 0I;
  #L47eed2.  return v6;
  #L47eed4.  v6:= 1I;
  #L47eed6.  return v6;
  #L47eed8.  v6:= new `java.lang.IllegalStateException`;
  #L47eedc.  v7:= "closed" @kind object;
  #L47eee0.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47eee6.  throw v6;
  #L47eee8.  v0:= new `java.lang.IllegalArgumentException`;
  #L47eeec.  v1:= new `java.lang.StringBuilder`;
  #L47eef0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47eef6.  v2:= "byteCount < 0: " @kind object;
  #L47eefa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47ef00.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L47ef06.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47ef0c.  v6:= temp @kind object;
  #L47ef0e.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47ef14.  goto L47ef18;
  #L47ef16.  throw v0;
  #L47ef18.  goto L47ef16;
}
procedure `void` `require`(`okio.RealBufferedSource` v0 @kind this, `long` v1 ) @signature `Lokio/RealBufferedSource;.require:(J)V` @AccessFlag PUBLIC {
    temp;

  #L47fc68.  call temp:= `request`(v0, v1) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L47fc6e.  v1:= temp;
  #L47fc70.  if v1 == 0 then goto L47fc76;
  #L47fc74.  return @kind void;
  #L47fc76.  v1:= new `java.io.EOFException`;
  #L47fc7a.  call `<init>`(v1) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L47fc80.  throw v1;
}
procedure `int` `select`(`okio.RealBufferedSource` v7 @kind this, `okio.Options` v8 @kind object) @signature `Lokio/RealBufferedSource;.select:(Lokio/Options;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47f10c.  v0:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47f110.  if v0 != 0 then goto L47f178;
  #L47f114.  v0:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f118.  call temp:= `selectPrefix`(v0, v8) @signature `Lokio/Buffer;.selectPrefix:(Lokio/Options;)I` @kind virtual;
  #L47f11e.  v0:= temp;
  #L47f120.  v1:= -1I;
  #L47f122.  if v0 != v1 then goto L47f128;
  #L47f126.  return v1;
  #L47f128.  v2:= v8.`okio.Options.byteStrings` @type ^`okio.ByteString`[] @kind object;
  #L47f12c.  v2:= v2[v0] @kind object;
  #L47f130.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L47f136.  v2:= temp;
  #L47f138.  v2:= (`long`) v2 @kind i2l;
  #L47f13a.  v4:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f13e.  v4:= v4.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47f142.  v6:= lcmp(v2, v4);
  #L47f146.  if v6 > 0 then goto L47f156;
  #L47f14a.  v8:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f14e.  call `skip`(v8, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L47f154.  return v0;
  #L47f156.  v0:= v7.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47f15a.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47f15e.  v3:= 8192L;
  #L47f162.  call temp:= `read`(v0, v2, v3) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47f168.  v2:= temp @kind wide;
  #L47f16a.  v4:= -1L;
  #L47f16e.  v0:= lcmp(v2, v4);
  #L47f172.  if v0 != 0 then goto L47f114;
  #L47f176.  return v1;
  #L47f178.  v8:= new `java.lang.IllegalStateException`;
  #L47f17c.  v0:= "closed" @kind object;
  #L47f180.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47f186.  goto L47f18a;
  #L47f188.  throw v8;
  #L47f18a.  goto L47f188;
}
procedure `void` `skip`(`okio.RealBufferedSource` v5 @kind this, `long` v6 ) @signature `Lokio/RealBufferedSource;.skip:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47fc94.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47fc98.  if v0 != 0 then goto L47fd0a;
  #L47fc9c.  v0:= 0L;
  #L47fca0.  v2:= lcmp(v6, v0);
  #L47fca4.  if v2 <= 0 then goto L47fd08;
  #L47fca8.  v2:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fcac.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47fcb0.  v4:= lcmp(v2, v0);
  #L47fcb4.  if v4 != 0 then goto L47fce6;
  #L47fcb8.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47fcbc.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fcc0.  v2:= 8192L;
  #L47fcc4.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47fcca.  v0:= temp @kind wide;
  #L47fccc.  v2:= -1L;
  #L47fcd0.  v4:= lcmp(v0, v2);
  #L47fcd4.  if v4 == 0 then goto L47fcda;
  #L47fcd8.  goto L47fce6;
  #L47fcda.  v6:= new `java.io.EOFException`;
  #L47fcde.  call `<init>`(v6) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L47fce4.  throw v6;
  #L47fce6.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fcea.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L47fcf0.  v0:= temp @kind wide;
  #L47fcf2.  call temp:= `min`(v6, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L47fcf8.  v0:= temp @kind wide;
  #L47fcfa.  v2:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47fcfe.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L47fd04.  v6:= v6 - v0 @kind long;
  #L47fd06.  goto L47fc9c;
  #L47fd08.  return @kind void;
  #L47fd0a.  v6:= new `java.lang.IllegalStateException`;
  #L47fd0e.  v7:= "closed" @kind object;
  #L47fd12.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47fd18.  goto L47fd1c;
  #L47fd1a.  throw v6;
  #L47fd1c.  goto L47fd1a;
}
procedure `okio.Timeout` `timeout`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fac4.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47fac8.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L47face.  v0:= temp @kind object;
  #L47fad0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f490.  v0:= new `java.lang.StringBuilder`;
  #L47f494.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47f49a.  v1:= "buffer(" @kind object;
  #L47f49e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f4a4.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47f4a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f4ae.  v1:= ")" @kind object;
  #L47f4b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47f4b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47f4be.  v0:= temp @kind object;
  #L47f4c0.  return v0 @kind object;
}
