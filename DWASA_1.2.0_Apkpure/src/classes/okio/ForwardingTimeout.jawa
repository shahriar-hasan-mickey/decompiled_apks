record `okio.ForwardingTimeout` @kind class @AccessFlag PUBLIC extends `okio.Timeout` @kind class {
  `okio.Timeout` `okio.ForwardingTimeout.delegate` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okio.ForwardingTimeout` v1 @kind this, `okio.Timeout` v2 @kind object) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L47c7bc.  call `<init>`(v1) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L47c7c2.  if v2 == 0 then goto L47c7cc;
  #L47c7c6.  v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` := v2 @kind object;
  #L47c7ca.  return @kind void;
  #L47c7cc.  v2:= new `java.lang.IllegalArgumentException`;
  #L47c7d0.  v0:= "delegate == null" @kind object;
  #L47c7d4.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47c7da.  throw v2;
}
procedure `okio.Timeout` `clearDeadline`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.clearDeadline:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47c724.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L47c728.  call temp:= `clearDeadline`(v0) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L47c72e.  v0:= temp @kind object;
  #L47c730.  return v0 @kind object;
}
procedure `okio.Timeout` `clearTimeout`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.clearTimeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47c744.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L47c748.  call temp:= `clearTimeout`(v0) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #L47c74e.  v0:= temp @kind object;
  #L47c750.  return v0 @kind object;
}
procedure `long` `deadlineNanoTime`(`okio.ForwardingTimeout` v2 @kind this) @signature `Lokio/ForwardingTimeout;.deadlineNanoTime:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47c6b8.  v0:= v2.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L47c6bc.  call temp:= `deadlineNanoTime`(v0) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L47c6c2.  v0:= temp @kind wide;
  #L47c6c4.  return v0 @kind wide;
}
procedure `okio.Timeout` `deadlineNanoTime`(`okio.ForwardingTimeout` v1 @kind this, `long` v2 ) @signature `Lokio/ForwardingTimeout;.deadlineNanoTime:(J)Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47c764.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L47c768.  call temp:= `deadlineNanoTime`(v0, v2) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L47c76e.  v2:= temp @kind object;
  #L47c770.  return v2 @kind object;
}
procedure `okio.Timeout` `delegate`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.delegate:()Lokio/Timeout;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47c784.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L47c788.  return v0 @kind object;
}
procedure `boolean` `hasDeadline`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.hasDeadline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47c698.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L47c69c.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L47c6a2.  v0:= temp;
  #L47c6a4.  return v0;
}
procedure `okio.ForwardingTimeout` `setDelegate`(`okio.ForwardingTimeout` v1 @kind this, `okio.Timeout` v2 @kind object) @signature `Lokio/ForwardingTimeout;.setDelegate:(Lokio/Timeout;)Lokio/ForwardingTimeout;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L47c6f8.  if v2 == 0 then goto L47c702;
  #L47c6fc.  v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` := v2 @kind object;
  #L47c700.  return v1 @kind object;
  #L47c702.  v2:= new `java.lang.IllegalArgumentException`;
  #L47c706.  v0:= "delegate == null" @kind object;
  #L47c70a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47c710.  throw v2;
}
procedure `void` `throwIfReached`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.throwIfReached:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47c7ec.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L47c7f0.  call `throwIfReached`(v0) @signature `Lokio/Timeout;.throwIfReached:()V` @kind virtual;
  #L47c7f6.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.ForwardingTimeout` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lokio/ForwardingTimeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47c79c.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L47c7a0.  call temp:= `timeout`(v0, v2, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L47c7a6.  v2:= temp @kind object;
  #L47c7a8.  return v2 @kind object;
}
procedure `long` `timeoutNanos`(`okio.ForwardingTimeout` v2 @kind this) @signature `Lokio/ForwardingTimeout;.timeoutNanos:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47c6d8.  v0:= v2.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L47c6dc.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L47c6e2.  v0:= temp @kind wide;
  #L47c6e4.  return v0 @kind wide;
}
