record `okio.RealBufferedSink$1` @kind class @AccessFlag  extends `java.io.OutputStream` @kind class {
  `okio.RealBufferedSink` `okio.RealBufferedSink$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSink$1` v0 @kind this, `okio.RealBufferedSink` v1 @kind object) @signature `Lokio/RealBufferedSink$1;.<init>:(Lokio/RealBufferedSink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47e36c.  v0.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` := v1 @kind object;
  #L47e370.  call `<init>`(v0) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L47e376.  return @kind void;
}
procedure `void` `close`(`okio.RealBufferedSink$1` v1 @kind this) @signature `Lokio/RealBufferedSink$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e388.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e38c.  call `close`(v0) @signature `Lokio/RealBufferedSink;.close:()V` @kind virtual;
  #L47e392.  return @kind void;
}
procedure `void` `flush`(`okio.RealBufferedSink$1` v1 @kind this) @signature `Lokio/RealBufferedSink$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e3a4.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e3a8.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L47e3ac.  if v0 != 0 then goto L47e3ba;
  #L47e3b0.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e3b4.  call `flush`(v0) @signature `Lokio/RealBufferedSink;.flush:()V` @kind virtual;
  #L47e3ba.  return @kind void;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSink$1` v2 @kind this) @signature `Lokio/RealBufferedSink$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47e334.  v0:= new `java.lang.StringBuilder`;
  #L47e338.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47e33e.  v1:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e342.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e348.  v1:= ".outputStream()" @kind object;
  #L47e34c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e352.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47e358.  v0:= temp @kind object;
  #L47e35a.  return v0 @kind object;
}
procedure `void` `write`(`okio.RealBufferedSink$1` v1 @kind this, `int` v2 ) @signature `Lokio/RealBufferedSink$1;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e414.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e418.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L47e41c.  if v0 != 0 then goto L47e43c;
  #L47e420.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e424.  v0:= v0.`okio.RealBufferedSink.buffer` @type ^`okio.Buffer` @kind object;
  #L47e428.  v2:= (`byte`) v2 @kind i2b;
  #L47e42a.  call temp:= `writeByte`(v0, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L47e430.  v2:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e434.  call temp:= `emitCompleteSegments`(v2) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L47e43a.  return @kind void;
  #L47e43c.  v2:= new `java.io.IOException`;
  #L47e440.  v0:= "closed" @kind object;
  #L47e444.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47e44a.  throw v2;
}
procedure `void` `write`(`okio.RealBufferedSink$1` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/RealBufferedSink$1;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e3cc.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e3d0.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L47e3d4.  if v0 != 0 then goto L47e3f2;
  #L47e3d8.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e3dc.  v0:= v0.`okio.RealBufferedSink.buffer` @type ^`okio.Buffer` @kind object;
  #L47e3e0.  call temp:= `write`(v0, v2, v3, v4) @signature `Lokio/Buffer;.write:([BII)Lokio/Buffer;` @kind virtual;
  #L47e3e6.  v2:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L47e3ea.  call temp:= `emitCompleteSegments`(v2) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L47e3f0.  return @kind void;
  #L47e3f2.  v2:= new `java.io.IOException`;
  #L47e3f6.  v3:= "closed" @kind object;
  #L47e3fa.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47e400.  throw v2;
}
