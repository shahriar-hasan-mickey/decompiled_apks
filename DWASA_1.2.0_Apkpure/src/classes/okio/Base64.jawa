record `okio.Base64` @kind class @AccessFlag FINAL {
}
global `byte`[] `@@okio.Base64.MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.Base64.URL_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Base64;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L477e44.  v0:= 64I;
  #L477e48.  v1:= new `byte`[v0];
  #L477e4c.  goto L477e68;
  #L477e52.  `@@okio.Base64.MAP` @type ^`byte`[] := v1 @kind object;
  #L477e56.  v0:= new `byte`[v0];
  #L477e5a.  goto L477eb0;
  #L477e60.  `@@okio.Base64.URL_MAP` @type ^`byte`[] := v0 @kind object;
  #L477e64.  return @kind void;
  #L477e66.  
  #L477e68.  v1:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L477eaf.  goto L477e52;
  #L477eb0.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L477ef7.  goto L477e60;
}
procedure `void` `<init>`(`okio.Base64` v0 @kind this) @signature `Lokio/Base64;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L477f08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L477f0e.  return @kind void;
}
procedure `byte`[] `decode`(`java.lang.String` v14 @kind object) @signature `Lokio/Base64;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L477ac0.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L477ac6.  v0:= temp;
  #L477ac8.  v1:= 9I;
  #L477acc.  v2:= 32I;
  #L477ad0.  v3:= 13I;
  #L477ad4.  v4:= 10I;
  #L477ad8.  if v0 <= 0 then goto L477b08;
  #L477adc.  v5:= v0 + -1;
  #L477ae0.  call temp:= `charAt`(v14, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L477ae6.  v5:= temp;
  #L477ae8.  v6:= 61I;
  #L477aec.  if v5 == v6 then goto L477b02;
  #L477af0.  if v5 == v4 then goto L477b02;
  #L477af4.  if v5 == v3 then goto L477b02;
  #L477af8.  if v5 == v2 then goto L477b02;
  #L477afc.  if v5 == v1 then goto L477b02;
  #L477b00.  goto L477b08;
  #L477b02.  v0:= v0 + -1;
  #L477b06.  goto L477ac8;
  #L477b08.  v5:= (`long`) v0 @kind i2l;
  #L477b0a.  v7:= 6L;
  #L477b0e.  v5:= v5 * v7 @kind long;
  #L477b12.  v7:= 8L;
  #L477b16.  v5:= v5 / v7 @kind long;
  #L477b18.  v6:= (`int`) v5 @kind l2i;
  #L477b1a.  v5:= new `byte`[v6];
  #L477b1e.  v6:= 0I;
  #L477b20.  v7:= 0I;
  #L477b22.  v8:= 0I;
  #L477b24.  v9:= 0I;
  #L477b26.  v10:= 0I;
  #L477b28.  v11:= 0I;
  #L477b2a.  if v7 >= v0 then goto L477bfc;
  #L477b2e.  call temp:= `charAt`(v14, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L477b34.  v12:= temp;
  #L477b36.  v13:= 65I;
  #L477b3a.  if v12 < v13 then goto L477b4c;
  #L477b3e.  v13:= 90I;
  #L477b42.  if v12 > v13 then goto L477b4c;
  #L477b46.  v12:= v12 + -65;
  #L477b4a.  goto L477bba;
  #L477b4c.  v13:= 97I;
  #L477b50.  if v12 < v13 then goto L477b62;
  #L477b54.  v13:= 122I;
  #L477b58.  if v12 > v13 then goto L477b62;
  #L477b5c.  v12:= v12 + -71;
  #L477b60.  goto L477bba;
  #L477b62.  v13:= 48I;
  #L477b66.  if v12 < v13 then goto L477b78;
  #L477b6a.  v13:= 57I;
  #L477b6e.  if v12 > v13 then goto L477b78;
  #L477b72.  v12:= v12 + 4;
  #L477b76.  goto L477bba;
  #L477b78.  v13:= 43I;
  #L477b7c.  if v12 == v13 then goto L477bb6;
  #L477b80.  v13:= 45I;
  #L477b84.  if v12 != v13 then goto L477b8a;
  #L477b88.  goto L477bb6;
  #L477b8a.  v13:= 47I;
  #L477b8e.  if v12 == v13 then goto L477bb0;
  #L477b92.  v13:= 95I;
  #L477b96.  if v12 != v13 then goto L477b9c;
  #L477b9a.  goto L477bb0;
  #L477b9c.  if v12 == v4 then goto L477bf6;
  #L477ba0.  if v12 == v3 then goto L477bf6;
  #L477ba4.  if v12 == v2 then goto L477bf6;
  #L477ba8.  if v12 != v1 then goto L477bae;
  #L477bac.  goto L477bf6;
  #L477bae.  return v11 @kind object;
  #L477bb0.  v12:= 63I;
  #L477bb4.  goto L477bba;
  #L477bb6.  v12:= 62I;
  #L477bba.  v9:= v9 ^< 6;
  #L477bbe.  v11:= (`byte`) v12 @kind i2b;
  #L477bc0.  v9:= v9 ^| v11 @kind int;
  #L477bc2.  v8:= v8 + 1;
  #L477bc6.  v11:= v8 %% 4;
  #L477bca.  if v11 != 0 then goto L477bf6;
  #L477bce.  v11:= v10 + 1;
  #L477bd2.  v12:= v9 ^> 16;
  #L477bd6.  v12:= (`byte`) v12 @kind i2b;
  #L477bd8.  v5[v10]:= v12 @kind byte;
  #L477bdc.  v10:= v11 + 1;
  #L477be0.  v12:= v9 ^> 8;
  #L477be4.  v12:= (`byte`) v12 @kind i2b;
  #L477be6.  v5[v11]:= v12 @kind byte;
  #L477bea.  v11:= v10 + 1;
  #L477bee.  v12:= (`byte`) v9 @kind i2b;
  #L477bf0.  v5[v10]:= v12 @kind byte;
  #L477bf4.  v10:= v11;
  #L477bf6.  v7:= v7 + 1;
  #L477bfa.  goto L477b28;
  #L477bfc.  v8:= v8 %% 4;
  #L477c00.  v14:= 1I;
  #L477c02.  if v8 != v14 then goto L477c08;
  #L477c06.  return v11 @kind object;
  #L477c08.  v14:= 2I;
  #L477c0a.  if v8 != v14 then goto L477c24;
  #L477c0e.  v14:= v9 ^< 12;
  #L477c12.  v0:= v10 + 1;
  #L477c16.  v14:= v14 ^> 16;
  #L477c1a.  v14:= (`byte`) v14 @kind i2b;
  #L477c1c.  v5[v10]:= v14 @kind byte;
  #L477c20.  v10:= v0;
  #L477c22.  goto L477c4a;
  #L477c24.  v14:= 3I;
  #L477c26.  if v8 != v14 then goto L477c4a;
  #L477c2a.  v14:= v9 ^< 6;
  #L477c2e.  v0:= v10 + 1;
  #L477c32.  v1:= v14 ^> 16;
  #L477c36.  v1:= (`byte`) v1 @kind i2b;
  #L477c38.  v5[v10]:= v1 @kind byte;
  #L477c3c.  v10:= v0 + 1;
  #L477c40.  v14:= v14 ^> 8;
  #L477c44.  v14:= (`byte`) v14 @kind i2b;
  #L477c46.  v5[v0]:= v14 @kind byte;
  #L477c4a.  v14:= length @variable v5;
  #L477c4c.  if v10 != v14 then goto L477c52;
  #L477c50.  return v5 @kind object;
  #L477c52.  v14:= new `byte`[v10];
  #L477c56.  call `arraycopy`(v5, v6, v14, v6, v10) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L477c5c.  return v14 @kind object;
}
procedure `java.lang.String` `encode`(`byte`[] v1 @kind object) @signature `Lokio/Base64;.encode:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477c70.  v0:= `@@okio.Base64.MAP` @type ^`byte`[] @kind object;
  #L477c74.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L477c7a.  v1:= temp @kind object;
  #L477c7c.  return v1 @kind object;
}
procedure `java.lang.String` `encode`(`byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L477c90.  v0:= length @variable v9;
  #L477c92.  v1:= 2I;
  #L477c94.  v0:= v0 + v1 @kind int;
  #L477c96.  v0:= v0 / 3;
  #L477c9a.  v0:= v0 * 4;
  #L477c9e.  v0:= new `byte`[v0];
  #L477ca2.  v2:= length @variable v9;
  #L477ca4.  v3:= length @variable v9;
  #L477ca6.  v3:= v3 %% 3;
  #L477caa.  v2:= v2 - v3 @kind int;
  #L477cac.  v3:= 0I;
  #L477cae.  v4:= 0I;
  #L477cb0.  if v3 >= v2 then goto L477d36;
  #L477cb4.  v5:= v4 + 1;
  #L477cb8.  v6:= v9[v3] @kind byte;
  #L477cbc.  v6:= v6 ^& 255;
  #L477cc0.  v6:= v6 ^> v1 @kind int;
  #L477cc2.  v6:= v10[v6] @kind byte;
  #L477cc6.  v0[v4]:= v6 @kind byte;
  #L477cca.  v4:= v5 + 1;
  #L477cce.  v6:= v9[v3] @kind byte;
  #L477cd2.  v6:= v6 ^& 3;
  #L477cd6.  v6:= v6 ^< 4;
  #L477cda.  v7:= v3 + 1;
  #L477cde.  v8:= v9[v7] @kind byte;
  #L477ce2.  v8:= v8 ^& 255;
  #L477ce6.  v8:= v8 ^> 4;
  #L477cea.  v6:= v6 ^| v8 @kind int;
  #L477cec.  v6:= v10[v6] @kind byte;
  #L477cf0.  v0[v5]:= v6 @kind byte;
  #L477cf4.  v5:= v4 + 1;
  #L477cf8.  v6:= v9[v7] @kind byte;
  #L477cfc.  v6:= v6 ^& 15;
  #L477d00.  v6:= v6 ^< v1 @kind int;
  #L477d02.  v7:= v3 + 2;
  #L477d06.  v8:= v9[v7] @kind byte;
  #L477d0a.  v8:= v8 ^& 255;
  #L477d0e.  v8:= v8 ^> 6;
  #L477d12.  v6:= v6 ^| v8 @kind int;
  #L477d14.  v6:= v10[v6] @kind byte;
  #L477d18.  v0[v4]:= v6 @kind byte;
  #L477d1c.  v4:= v5 + 1;
  #L477d20.  v6:= v9[v7] @kind byte;
  #L477d24.  v6:= v6 ^& 63;
  #L477d28.  v6:= v10[v6] @kind byte;
  #L477d2c.  v0[v5]:= v6 @kind byte;
  #L477d30.  v3:= v3 + 3;
  #L477d34.  goto L477cb0;
  #L477d36.  v3:= length @variable v9;
  #L477d38.  v3:= v3 %% 3;
  #L477d3c.  v5:= 61I;
  #L477d40.  v6:= 1I;
  #L477d42.  if v3 == v6 then goto L477da6;
  #L477d46.  if v3 == v1 then goto L477d4c;
  #L477d4a.  goto L477de2;
  #L477d4c.  v3:= v4 + 1;
  #L477d50.  v7:= v9[v2] @kind byte;
  #L477d54.  v7:= v7 ^& 255;
  #L477d58.  v7:= v7 ^> v1 @kind int;
  #L477d5a.  v7:= v10[v7] @kind byte;
  #L477d5e.  v0[v4]:= v7 @kind byte;
  #L477d62.  v4:= v3 + 1;
  #L477d66.  v7:= v9[v2] @kind byte;
  #L477d6a.  v7:= v7 ^& 3;
  #L477d6e.  v7:= v7 ^< 4;
  #L477d72.  v2:= v2 + v6 @kind int;
  #L477d74.  v6:= v9[v2] @kind byte;
  #L477d78.  v6:= v6 ^& 255;
  #L477d7c.  v6:= v6 ^> 4;
  #L477d80.  v6:= v6 ^| v7 @kind int;
  #L477d82.  v6:= v10[v6] @kind byte;
  #L477d86.  v0[v3]:= v6 @kind byte;
  #L477d8a.  v3:= v4 + 1;
  #L477d8e.  v9:= v9[v2] @kind byte;
  #L477d92.  v9:= v9 ^& 15;
  #L477d96.  v9:= v9 ^< v1 @kind int;
  #L477d98.  v9:= v10[v9] @kind byte;
  #L477d9c.  v0[v4]:= v9 @kind byte;
  #L477da0.  v0[v3]:= v5 @kind byte;
  #L477da4.  goto L477de2;
  #L477da6.  v3:= v4 + 1;
  #L477daa.  v6:= v9[v2] @kind byte;
  #L477dae.  v6:= v6 ^& 255;
  #L477db2.  v1:= v6 ^> 2;
  #L477db6.  v1:= v10[v1] @kind byte;
  #L477dba.  v0[v4]:= v1 @kind byte;
  #L477dbe.  v1:= v3 + 1;
  #L477dc2.  v9:= v9[v2] @kind byte;
  #L477dc6.  v9:= v9 ^& 3;
  #L477dca.  v9:= v9 ^< 4;
  #L477dce.  v9:= v10[v9] @kind byte;
  #L477dd2.  v0[v3]:= v9 @kind byte;
  #L477dd6.  v9:= v1 + 1;
  #L477dda.  v0[v1]:= v5 @kind byte;
  #L477dde.  v0[v9]:= v5 @kind byte;
  #L477de2.  v9:= new `java.lang.String`;
  #L477de6.  v10:= "US-ASCII" @kind object;
  #L477dea.  call `<init>`(v9, v0, v10) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L477df0.  return v9 @kind object;
  #L477df2.  v9:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L477df4.  v10:= new `java.lang.AssertionError`;
  #L477df8.  call `<init>`(v10, v9) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L477dfe.  goto L477e02;
  #L477e00.  throw v10;
  #L477e02.  goto L477e00;
  catch `java.io.UnsupportedEncodingException` @[L477de2..L477df0] goto L477df2;
}
procedure `java.lang.String` `encodeUrl`(`byte`[] v1 @kind object) @signature `Lokio/Base64;.encodeUrl:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L477e24.  v0:= `@@okio.Base64.URL_MAP` @type ^`byte`[] @kind object;
  #L477e28.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L477e2e.  v1:= temp @kind object;
  #L477e30.  return v1 @kind object;
}
