record `okio.Utf8` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okio.Utf8` v0 @kind this) @signature `Lokio/Utf8;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L480da8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L480dae.  return @kind void;
}
procedure `long` `size`(`java.lang.String` v2 @kind object) @signature `Lokio/Utf8;.size:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L480c04.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L480c0a.  v0:= temp;
  #L480c0c.  v1:= 0I;
  #L480c0e.  call temp:= `size`(v2, v1, v0) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @kind static;
  #L480c14.  v0:= temp @kind wide;
  #L480c16.  return v0 @kind wide;
}
procedure `long` `size`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L480c28.  if v9 == 0 then goto L480d84;
  #L480c2c.  if v10 < 0 then goto L480d56;
  #L480c30.  if v11 < v10 then goto L480d18;
  #L480c34.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L480c3a.  v0:= temp;
  #L480c3c.  if v11 > v0 then goto L480cd2;
  #L480c40.  v0:= 0L;
  #L480c44.  if v10 >= v11 then goto L480cd0;
  #L480c48.  call temp:= `charAt`(v9, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L480c4e.  v2:= temp;
  #L480c50.  v3:= 128I;
  #L480c54.  v4:= 1L;
  #L480c58.  if v2 >= v3 then goto L480c64;
  #L480c5c.  v0:= v0 + v4 @kind long;
  #L480c5e.  v10:= v10 + 1;
  #L480c62.  goto L480c44;
  #L480c64.  v3:= 2048I;
  #L480c68.  if v2 >= v3 then goto L480c74;
  #L480c6c.  v2:= 2L;
  #L480c70.  v0:= v0 + v2 @kind long;
  #L480c72.  goto L480c5e;
  #L480c74.  v3:= 55296I;
  #L480c7a.  if v2 < v3 then goto L480cca;
  #L480c7e.  v3:= 57343I;
  #L480c84.  if v2 <= v3 then goto L480c8a;
  #L480c88.  goto L480cca;
  #L480c8a.  v6:= v10 + 1;
  #L480c8e.  if v6 >= v11 then goto L480c9c;
  #L480c92.  call temp:= `charAt`(v9, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L480c98.  v7:= temp;
  #L480c9a.  goto L480c9e;
  #L480c9c.  v7:= 0I;
  #L480c9e.  v8:= 56319I;
  #L480ca4.  if v2 > v8 then goto L480cc4;
  #L480ca8.  v2:= 56320I;
  #L480cae.  if v7 < v2 then goto L480cc4;
  #L480cb2.  if v7 <= v3 then goto L480cb8;
  #L480cb6.  goto L480cc4;
  #L480cb8.  v2:= 4L;
  #L480cbc.  v0:= v0 + v2 @kind long;
  #L480cbe.  v10:= v10 + 2;
  #L480cc2.  goto L480c44;
  #L480cc4.  v0:= v0 + v4 @kind long;
  #L480cc6.  v10:= v6;
  #L480cc8.  goto L480c44;
  #L480cca.  v2:= 3L;
  #L480cce.  goto L480c70;
  #L480cd0.  return v0 @kind wide;
  #L480cd2.  v10:= new `java.lang.IllegalArgumentException`;
  #L480cd6.  v0:= new `java.lang.StringBuilder`;
  #L480cda.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L480ce0.  v1:= "endIndex > string.length: " @kind object;
  #L480ce4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480cea.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L480cf0.  v11:= " > " @kind object;
  #L480cf4.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480cfa.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L480d00.  v9:= temp;
  #L480d02.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L480d08.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L480d0e.  v9:= temp @kind object;
  #L480d10.  call `<init>`(v10, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480d16.  throw v10;
  #L480d18.  v9:= new `java.lang.IllegalArgumentException`;
  #L480d1c.  v0:= new `java.lang.StringBuilder`;
  #L480d20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L480d26.  v1:= "endIndex < beginIndex: " @kind object;
  #L480d2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480d30.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L480d36.  v11:= " < " @kind object;
  #L480d3a.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480d40.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L480d46.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L480d4c.  v10:= temp @kind object;
  #L480d4e.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480d54.  throw v9;
  #L480d56.  v9:= new `java.lang.IllegalArgumentException`;
  #L480d5a.  v11:= new `java.lang.StringBuilder`;
  #L480d5e.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L480d64.  v0:= "beginIndex < 0: " @kind object;
  #L480d68.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480d6e.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L480d74.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L480d7a.  v10:= temp @kind object;
  #L480d7c.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480d82.  throw v9;
  #L480d84.  v9:= new `java.lang.IllegalArgumentException`;
  #L480d88.  v10:= "string == null" @kind object;
  #L480d8c.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480d92.  goto L480d96;
  #L480d94.  throw v9;
  #L480d96.  goto L480d94;
}
