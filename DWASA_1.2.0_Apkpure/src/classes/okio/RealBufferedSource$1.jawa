record `okio.RealBufferedSource$1` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.RealBufferedSource` `okio.RealBufferedSource$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSource$1` v0 @kind this, `okio.RealBufferedSource` v1 @kind object) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47ed2c.  v0.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` := v1 @kind object;
  #L47ed30.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L47ed36.  return @kind void;
}
procedure `int` `available`(`okio.RealBufferedSource$1` v4 @kind this) @signature `Lokio/RealBufferedSource$1;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47eb90.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47eb94.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47eb98.  if v0 != 0 then goto L47ebba;
  #L47eb9c.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47eba0.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47eba4.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47eba8.  v2:= 2147483647L;
  #L47ebae.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L47ebb4.  v0:= temp @kind wide;
  #L47ebb6.  v1:= (`int`) v0 @kind l2i;
  #L47ebb8.  return v1;
  #L47ebba.  v0:= new `java.io.IOException`;
  #L47ebbe.  v1:= "closed" @kind object;
  #L47ebc2.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47ebc8.  throw v0;
}
procedure `void` `close`(`okio.RealBufferedSource$1` v1 @kind this) @signature `Lokio/RealBufferedSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ed48.  v0:= v1.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ed4c.  call `close`(v0) @signature `Lokio/RealBufferedSource;.close:()V` @kind virtual;
  #L47ed52.  return @kind void;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v5 @kind this) @signature `Lokio/RealBufferedSource$1;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47ebdc.  v0:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ebe0.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47ebe4.  if v0 != 0 then goto L47ec42;
  #L47ebe8.  v0:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ebec.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ebf0.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47ebf4.  v2:= 0L;
  #L47ebf8.  v4:= lcmp(v0, v2);
  #L47ebfc.  if v4 != 0 then goto L47ec2c;
  #L47ec00.  v0:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ec04.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47ec08.  v1:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ec0c.  v1:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ec10.  v2:= 8192L;
  #L47ec14.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47ec1a.  v0:= temp @kind wide;
  #L47ec1c.  v2:= -1L;
  #L47ec20.  v4:= lcmp(v0, v2);
  #L47ec24.  if v4 != 0 then goto L47ec2c;
  #L47ec28.  v0:= -1I;
  #L47ec2a.  return v0;
  #L47ec2c.  v0:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ec30.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ec34.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L47ec3a.  v0:= temp;
  #L47ec3c.  v0:= v0 ^& 255;
  #L47ec40.  return v0;
  #L47ec42.  v0:= new `java.io.IOException`;
  #L47ec46.  v1:= "closed" @kind object;
  #L47ec4a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47ec50.  throw v0;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/RealBufferedSource$1;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47ec64.  v0:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ec68.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L47ec6c.  if v0 != 0 then goto L47ecd4;
  #L47ec70.  v0:= length @variable v8;
  #L47ec72.  v1:= (`long`) v0 @kind i2l;
  #L47ec74.  v3:= (`long`) v9 @kind i2l;
  #L47ec76.  v5:= (`long`) v10 @kind i2l;
  #L47ec78.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L47ec7e.  v0:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ec82.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ec86.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L47ec8a.  v2:= 0L;
  #L47ec8e.  v4:= lcmp(v0, v2);
  #L47ec92.  if v4 != 0 then goto L47ecc2;
  #L47ec96.  v0:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ec9a.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L47ec9e.  v1:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47eca2.  v1:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47eca6.  v2:= 8192L;
  #L47ecaa.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L47ecb0.  v0:= temp @kind wide;
  #L47ecb2.  v2:= -1L;
  #L47ecb6.  v4:= lcmp(v0, v2);
  #L47ecba.  if v4 != 0 then goto L47ecc2;
  #L47ecbe.  v8:= -1I;
  #L47ecc0.  return v8;
  #L47ecc2.  v0:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ecc6.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L47ecca.  call temp:= `read`(v0, v8, v9, v10) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L47ecd0.  v8:= temp;
  #L47ecd2.  return v8;
  #L47ecd4.  v8:= new `java.io.IOException`;
  #L47ecd8.  v9:= "closed" @kind object;
  #L47ecdc.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47ece2.  throw v8;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource$1` v2 @kind this) @signature `Lokio/RealBufferedSource$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47ecf4.  v0:= new `java.lang.StringBuilder`;
  #L47ecf8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47ecfe.  v1:= v2.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L47ed02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47ed08.  v1:= ".inputStream()" @kind object;
  #L47ed0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47ed12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47ed18.  v0:= temp @kind object;
  #L47ed1a.  return v0 @kind object;
}
