record `rx.Single$8` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Func7` `rx.Single$8.val$zipFunction` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Single$8` v0 @kind this, `rx.functions.Func7` v1 @kind object) @signature `Lrx/Single$8;.<init>:(Lrx/functions/Func7;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48f10c.  v0.`rx.Single$8.val$zipFunction` @type ^`rx.functions.Func7` := v1 @kind object;
  #L48f110.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48f116.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.Single$8` v8 @kind this, `java.lang.Object`[] v9 @kind object) @signature `Lrx/Single$8;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L48f0c4.  v0:= v8.`rx.Single$8.val$zipFunction` @type ^`rx.functions.Func7` @kind object;
  #L48f0c8.  v1:= 0I;
  #L48f0ca.  v1:= v9[v1] @kind object;
  #L48f0ce.  v2:= 1I;
  #L48f0d0.  v2:= v9[v2] @kind object;
  #L48f0d4.  v3:= 2I;
  #L48f0d6.  v3:= v9[v3] @kind object;
  #L48f0da.  v4:= 3I;
  #L48f0dc.  v4:= v9[v4] @kind object;
  #L48f0e0.  v5:= 4I;
  #L48f0e2.  v5:= v9[v5] @kind object;
  #L48f0e6.  v6:= 5I;
  #L48f0e8.  v6:= v9[v6] @kind object;
  #L48f0ec.  v7:= 6I;
  #L48f0ee.  v7:= v9[v7] @kind object;
  #L48f0f2.  call temp:= `call`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lrx/functions/Func7;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48f0f8.  v9:= temp @kind object;
  #L48f0fa.  return v9 @kind object;
}
