record `rx.BackpressureOverflow$DropLatest` @kind class @AccessFlag  extends `rx.BackpressureOverflow$Strategy` @kind interface {
}
global `rx.BackpressureOverflow$DropLatest` `@@rx.BackpressureOverflow$DropLatest.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/BackpressureOverflow$DropLatest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L486468.  v0:= new `rx.BackpressureOverflow$DropLatest`;
  #L48646c.  call `<init>`(v0) @signature `Lrx/BackpressureOverflow$DropLatest;.<init>:()V` @kind direct;
  #L486472.  `@@rx.BackpressureOverflow$DropLatest.INSTANCE` @type ^`rx.BackpressureOverflow$DropLatest` := v0 @kind object;
  #L486476.  return @kind void;
}
procedure `void` `<init>`(`rx.BackpressureOverflow$DropLatest` v0 @kind this) @signature `Lrx/BackpressureOverflow$DropLatest;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L486488.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48648e.  return @kind void;
}
procedure `boolean` `mayAttemptDrop`(`rx.BackpressureOverflow$DropLatest` v1 @kind this) @signature `Lrx/BackpressureOverflow$DropLatest;.mayAttemptDrop:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486454.  v0:= 0I;
  #L486456.  return v0;
}
