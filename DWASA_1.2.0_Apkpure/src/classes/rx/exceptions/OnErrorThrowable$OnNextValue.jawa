record `rx.exceptions.OnErrorThrowable$OnNextValue` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
  `java.lang.Object` `rx.exceptions.OnErrorThrowable$OnNextValue.value` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@rx.exceptions.OnErrorThrowable$OnNextValue.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.exceptions.OnErrorThrowable$OnNextValue` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lrx/exceptions/OnErrorThrowable$OnNextValue;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L491450.  v0:= new `java.lang.StringBuilder`;
  #L491454.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49145a.  v1:= "OnError while emitting onNext value: " @kind object;
  #L49145e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491464.  call temp:= `renderValue`(v3) @signature `Lrx/exceptions/OnErrorThrowable$OnNextValue;.renderValue:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L49146a.  v1:= temp @kind object;
  #L49146c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491472.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L491478.  v0:= temp @kind object;
  #L49147a.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L491480.  v2.`rx.exceptions.OnErrorThrowable$OnNextValue.value` @type ^`java.lang.Object` := v3 @kind object;
  #L491484.  return @kind void;
}
procedure `java.lang.String` `renderValue`(`java.lang.Object` v2 @kind object) @signature `Lrx/exceptions/OnErrorThrowable$OnNextValue;.renderValue:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L49139c.  if v2 != 0 then goto L4913a6;
  #L4913a0.  v2:= "null" @kind object;
  #L4913a4.  return v2 @kind object;
  #L4913a6.  v0:= `@@rx.exceptions.OnErrorThrowable$OnNextValue$Primitives.INSTANCE` @type ^`java.util.Set` @kind object;
  #L4913aa.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4913b0.  v1:= temp @kind object;
  #L4913b2.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4913b8.  v0:= temp;
  #L4913ba.  if v0 == 0 then goto L4913c8;
  #L4913be.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4913c4.  v2:= temp @kind object;
  #L4913c6.  return v2 @kind object;
  #L4913c8.  v0:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L4913cc.  if v0 == 0 then goto L4913d6;
  #L4913d0.  v2:= (`java.lang.String`) v2 @kind object;
  #L4913d4.  return v2 @kind object;
  #L4913d6.  v0:= instanceof @variable v2 @type ^`java.lang.Enum` @kind boolean;
  #L4913da.  if v0 == 0 then goto L4913ec;
  #L4913de.  v2:= (`java.lang.Enum`) v2 @kind object;
  #L4913e2.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L4913e8.  v2:= temp @kind object;
  #L4913ea.  return v2 @kind object;
  #L4913ec.  call temp:= `getInstance`() @signature `Lrx/plugins/RxJavaPlugins;.getInstance:()Lrx/plugins/RxJavaPlugins;` @kind static;
  #L4913f2.  v0:= temp @kind object;
  #L4913f4.  call temp:= `getErrorHandler`(v0) @signature `Lrx/plugins/RxJavaPlugins;.getErrorHandler:()Lrx/plugins/RxJavaErrorHandler;` @kind virtual;
  #L4913fa.  v0:= temp @kind object;
  #L4913fc.  call temp:= `handleOnNextValueRendering`(v0, v2) @signature `Lrx/plugins/RxJavaErrorHandler;.handleOnNextValueRendering:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L491402.  v0:= temp @kind object;
  #L491404.  if v0 == 0 then goto L49140a;
  #L491408.  return v0 @kind object;
  #L49140a.  v0:= new `java.lang.StringBuilder`;
  #L49140e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L491414.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L49141a.  v2:= temp @kind object;
  #L49141c.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L491422.  v2:= temp @kind object;
  #L491424.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49142a.  v2:= ".class" @kind object;
  #L49142e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491434.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49143a.  v2:= temp @kind object;
  #L49143c.  return v2 @kind object;
}
procedure `java.lang.Object` `getValue`(`rx.exceptions.OnErrorThrowable$OnNextValue` v1 @kind this) @signature `Lrx/exceptions/OnErrorThrowable$OnNextValue;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L491384.  v0:= v1.`rx.exceptions.OnErrorThrowable$OnNextValue.value` @type ^`java.lang.Object` @kind object;
  #L491388.  return v0 @kind object;
}
