record `rx.exceptions.OnCompletedFailedException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.RuntimeException` @kind class {
}
global `long` `@@rx.exceptions.OnCompletedFailedException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.exceptions.OnCompletedFailedException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lrx/exceptions/OnCompletedFailedException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4911d0.  if v2 == 0 then goto L4911d6;
  #L4911d4.  goto L4911e0;
  #L4911d6.  v2:= new `java.lang.NullPointerException`;
  #L4911da.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L4911e0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4911e6.  return @kind void;
}
procedure `void` `<init>`(`rx.exceptions.OnCompletedFailedException` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lrx/exceptions/OnCompletedFailedException;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4911f8.  if v1 == 0 then goto L4911fe;
  #L4911fc.  goto L491208;
  #L4911fe.  v1:= new `java.lang.NullPointerException`;
  #L491202.  call `<init>`(v1) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L491208.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L49120e.  return @kind void;
}
