record `rx.exceptions.CompositeException$WrappedPrintStream` @kind class @AccessFlag FINAL extends `rx.exceptions.CompositeException$PrintStreamOrWriter` @kind class {
  `java.io.PrintStream` `rx.exceptions.CompositeException$WrappedPrintStream.printStream` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.exceptions.CompositeException$WrappedPrintStream` v0 @kind this, `java.io.PrintStream` v1 @kind object) @signature `Lrx/exceptions/CompositeException$WrappedPrintStream;.<init>:(Ljava/io/PrintStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L490938.  call `<init>`(v0) @signature `Lrx/exceptions/CompositeException$PrintStreamOrWriter;.<init>:()V` @kind direct;
  #L49093e.  v0.`rx.exceptions.CompositeException$WrappedPrintStream.printStream` @type ^`java.io.PrintStream` := v1 @kind object;
  #L490942.  return @kind void;
}
procedure `java.lang.Object` `lock`(`rx.exceptions.CompositeException$WrappedPrintStream` v1 @kind this) @signature `Lrx/exceptions/CompositeException$WrappedPrintStream;.lock:()Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L490920.  v0:= v1.`rx.exceptions.CompositeException$WrappedPrintStream.printStream` @type ^`java.io.PrintStream` @kind object;
  #L490924.  return v0 @kind object;
}
procedure `void` `println`(`rx.exceptions.CompositeException$WrappedPrintStream` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/exceptions/CompositeException$WrappedPrintStream;.println:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L490954.  v0:= v1.`rx.exceptions.CompositeException$WrappedPrintStream.printStream` @type ^`java.io.PrintStream` @kind object;
  #L490958.  call `println`(v0, v2) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/Object;)V` @kind virtual;
  #L49095e.  return @kind void;
}
