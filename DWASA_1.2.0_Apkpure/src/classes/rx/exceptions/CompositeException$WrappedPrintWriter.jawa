record `rx.exceptions.CompositeException$WrappedPrintWriter` @kind class @AccessFlag FINAL extends `rx.exceptions.CompositeException$PrintStreamOrWriter` @kind class {
  `java.io.PrintWriter` `rx.exceptions.CompositeException$WrappedPrintWriter.printWriter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.exceptions.CompositeException$WrappedPrintWriter` v0 @kind this, `java.io.PrintWriter` v1 @kind object) @signature `Lrx/exceptions/CompositeException$WrappedPrintWriter;.<init>:(Ljava/io/PrintWriter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L490988.  call `<init>`(v0) @signature `Lrx/exceptions/CompositeException$PrintStreamOrWriter;.<init>:()V` @kind direct;
  #L49098e.  v0.`rx.exceptions.CompositeException$WrappedPrintWriter.printWriter` @type ^`java.io.PrintWriter` := v1 @kind object;
  #L490992.  return @kind void;
}
procedure `java.lang.Object` `lock`(`rx.exceptions.CompositeException$WrappedPrintWriter` v1 @kind this) @signature `Lrx/exceptions/CompositeException$WrappedPrintWriter;.lock:()Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L490970.  v0:= v1.`rx.exceptions.CompositeException$WrappedPrintWriter.printWriter` @type ^`java.io.PrintWriter` @kind object;
  #L490974.  return v0 @kind object;
}
procedure `void` `println`(`rx.exceptions.CompositeException$WrappedPrintWriter` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/exceptions/CompositeException$WrappedPrintWriter;.println:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L4909a4.  v0:= v1.`rx.exceptions.CompositeException$WrappedPrintWriter.printWriter` @type ^`java.io.PrintWriter` @kind object;
  #L4909a8.  call `println`(v0, v2) @signature `Ljava/io/PrintWriter;.println:(Ljava/lang/Object;)V` @kind virtual;
  #L4909ae.  return @kind void;
}
