record `rx.exceptions.OnErrorThrowable$OnNextValue$Primitives` @kind class @AccessFlag FINAL {
}
global `java.util.Set` `@@rx.exceptions.OnErrorThrowable$OnNextValue$Primitives.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/exceptions/OnErrorThrowable$OnNextValue$Primitives;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L49134c.  call temp:= `create`() @signature `Lrx/exceptions/OnErrorThrowable$OnNextValue$Primitives;.create:()Ljava/util/Set;` @kind static;
  #L491352.  v0:= temp @kind object;
  #L491354.  `@@rx.exceptions.OnErrorThrowable$OnNextValue$Primitives.INSTANCE` @type ^`java.util.Set` := v0 @kind object;
  #L491358.  return @kind void;
}
procedure `void` `<init>`(`rx.exceptions.OnErrorThrowable$OnNextValue$Primitives` v0 @kind this) @signature `Lrx/exceptions/OnErrorThrowable$OnNextValue$Primitives;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49136c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L491372.  return @kind void;
}
procedure `java.util.Set` `create`() @signature `Lrx/exceptions/OnErrorThrowable$OnNextValue$Primitives;.create:()Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4912e0.  v0:= new `java.util.HashSet`;
  #L4912e4.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L4912ea.  v1:= constclass @type ^`java.lang.Boolean` @kind object;
  #L4912ee.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4912f4.  v1:= constclass @type ^`java.lang.Character` @kind object;
  #L4912f8.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4912fe.  v1:= constclass @type ^`java.lang.Byte` @kind object;
  #L491302.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L491308.  v1:= constclass @type ^`java.lang.Short` @kind object;
  #L49130c.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L491312.  v1:= constclass @type ^`java.lang.Integer` @kind object;
  #L491316.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L49131c.  v1:= constclass @type ^`java.lang.Long` @kind object;
  #L491320.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L491326.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L49132a.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L491330.  v1:= constclass @type ^`java.lang.Double` @kind object;
  #L491334.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L49133a.  return v0 @kind object;
}
