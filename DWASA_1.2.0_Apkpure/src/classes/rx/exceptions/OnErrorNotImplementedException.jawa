record `rx.exceptions.OnErrorNotImplementedException` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
}
global `long` `@@rx.exceptions.OnErrorNotImplementedException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.exceptions.OnErrorNotImplementedException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lrx/exceptions/OnErrorNotImplementedException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L491280.  if v2 == 0 then goto L491286;
  #L491284.  goto L491290;
  #L491286.  v2:= new `java.lang.NullPointerException`;
  #L49128a.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L491290.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L491296.  return @kind void;
}
procedure `void` `<init>`(`rx.exceptions.OnErrorNotImplementedException` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/exceptions/OnErrorNotImplementedException;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4912a8.  if v2 == 0 then goto L4912b6;
  #L4912ac.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L4912b2.  v0:= temp @kind object;
  #L4912b4.  goto L4912b8;
  #L4912b6.  v0:= 0I;
  #L4912b8.  if v2 == 0 then goto L4912be;
  #L4912bc.  goto L4912c8;
  #L4912be.  v2:= new `java.lang.NullPointerException`;
  #L4912c2.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L4912c8.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4912ce.  return @kind void;
}
