record `rx.exceptions.UnsubscribeFailedException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.RuntimeException` @kind class {
}
global `long` `@@rx.exceptions.UnsubscribeFailedException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.exceptions.UnsubscribeFailedException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lrx/exceptions/UnsubscribeFailedException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4915b8.  if v2 == 0 then goto L4915be;
  #L4915bc.  goto L4915c8;
  #L4915be.  v2:= new `java.lang.NullPointerException`;
  #L4915c2.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L4915c8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4915ce.  return @kind void;
}
procedure `void` `<init>`(`rx.exceptions.UnsubscribeFailedException` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lrx/exceptions/UnsubscribeFailedException;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4915e0.  if v1 == 0 then goto L4915e6;
  #L4915e4.  goto L4915f0;
  #L4915e6.  v1:= new `java.lang.NullPointerException`;
  #L4915ea.  call `<init>`(v1) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L4915f0.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4915f6.  return @kind void;
}
