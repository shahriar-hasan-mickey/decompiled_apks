record `rx.Single$17` @kind class @AccessFlag FINAL extends `rx.Single$OnSubscribe` @kind interface {
  `java.util.concurrent.Callable` `rx.Single$17.val$singleFactory` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Single$17` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lrx/Single$17;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48ed7c.  v0.`rx.Single$17.val$singleFactory` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L48ed80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48ed86.  return @kind void;
}
procedure `void` `call`(`rx.Single$17` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Single$17;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48ed98.  v1:= (`rx.SingleSubscriber`) v1 @kind object;
  #L48ed9c.  call `call`(v0, v1) @signature `Lrx/Single$17;.call:(Lrx/SingleSubscriber;)V` @kind virtual;
  #L48eda2.  return @kind void;
}
procedure `void` `call`(`rx.Single$17` v1 @kind this, `rx.SingleSubscriber` v2 @kind object) @signature `Lrx/Single$17;.call:(Lrx/SingleSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48edb4.  v0:= v1.`rx.Single$17.val$singleFactory` @type ^`java.util.concurrent.Callable` @kind object;
  #L48edb8.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L48edbe.  v0:= temp @kind object;
  #L48edc0.  v0:= (`rx.Single`) v0 @kind object;
  #L48edc4.  call temp:= `subscribe`(v0, v2) @signature `Lrx/Single;.subscribe:(Lrx/SingleSubscriber;)Lrx/Subscription;` @kind virtual;
  #L48edca.  return @kind void;
  #L48edcc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48edce.  call `throwIfFatal`(v0) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48edd4.  call `onError`(v2, v0) @signature `Lrx/SingleSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48edda.  return @kind void;
  catch `java.lang.Throwable` @[L48edb4..L48edc4] goto L48edcc;
}
