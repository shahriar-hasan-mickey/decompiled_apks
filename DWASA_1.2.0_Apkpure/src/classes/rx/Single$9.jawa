record `rx.Single$9` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Func8` `rx.Single$9.val$zipFunction` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Single$9` v0 @kind this, `rx.functions.Func8` v1 @kind object) @signature `Lrx/Single$9;.<init>:(Lrx/functions/Func8;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48f178.  v0.`rx.Single$9.val$zipFunction` @type ^`rx.functions.Func8` := v1 @kind object;
  #L48f17c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48f182.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.Single$9` v9 @kind this, `java.lang.Object`[] v10 @kind object) @signature `Lrx/Single$9;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48f128.  v0:= v9.`rx.Single$9.val$zipFunction` @type ^`rx.functions.Func8` @kind object;
  #L48f12c.  v1:= 0I;
  #L48f12e.  v1:= v10[v1] @kind object;
  #L48f132.  v2:= 1I;
  #L48f134.  v2:= v10[v2] @kind object;
  #L48f138.  v3:= 2I;
  #L48f13a.  v3:= v10[v3] @kind object;
  #L48f13e.  v4:= 3I;
  #L48f140.  v4:= v10[v4] @kind object;
  #L48f144.  v5:= 4I;
  #L48f146.  v5:= v10[v5] @kind object;
  #L48f14a.  v6:= 5I;
  #L48f14c.  v6:= v10[v6] @kind object;
  #L48f150.  v7:= 6I;
  #L48f152.  v7:= v10[v7] @kind object;
  #L48f156.  v8:= 7I;
  #L48f158.  v8:= v10[v8] @kind object;
  #L48f15c.  call temp:= `call`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lrx/functions/Func8;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48f162.  v10:= temp @kind object;
  #L48f164.  return v10 @kind object;
}
