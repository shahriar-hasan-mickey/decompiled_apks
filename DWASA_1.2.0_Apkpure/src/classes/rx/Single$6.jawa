record `rx.Single$6` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Func5` `rx.Single$6.val$zipFunction` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Single$6` v0 @kind this, `rx.functions.Func5` v1 @kind object) @signature `Lrx/Single$6;.<init>:(Lrx/functions/Func5;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48f048.  v0.`rx.Single$6.val$zipFunction` @type ^`rx.functions.Func5` := v1 @kind object;
  #L48f04c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48f052.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.Single$6` v6 @kind this, `java.lang.Object`[] v7 @kind object) @signature `Lrx/Single$6;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48f00c.  v0:= v6.`rx.Single$6.val$zipFunction` @type ^`rx.functions.Func5` @kind object;
  #L48f010.  v1:= 0I;
  #L48f012.  v1:= v7[v1] @kind object;
  #L48f016.  v2:= 1I;
  #L48f018.  v2:= v7[v2] @kind object;
  #L48f01c.  v3:= 2I;
  #L48f01e.  v3:= v7[v3] @kind object;
  #L48f022.  v4:= 3I;
  #L48f024.  v4:= v7[v4] @kind object;
  #L48f028.  v5:= 4I;
  #L48f02a.  v5:= v7[v5] @kind object;
  #L48f02e.  call temp:= `call`(v0, v1, v2, v3, v4, v5) @signature `Lrx/functions/Func5;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48f034.  v7:= temp @kind object;
  #L48f036.  return v7 @kind object;
}
