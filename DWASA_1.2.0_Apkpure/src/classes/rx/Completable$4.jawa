record `rx.Completable$4` @kind class @AccessFlag FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `java.lang.Iterable` `rx.Completable$4.val$sources` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$4` v0 @kind this, `java.lang.Iterable` v1 @kind object) @signature `Lrx/Completable$4;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L488358.  v0.`rx.Completable$4.val$sources` @type ^`java.lang.Iterable` := v1 @kind object;
  #L48835c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L488362.  return @kind void;
}
procedure `void` `call`(`rx.Completable$4` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$4;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L488374.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L488378.  call `call`(v0, v1) @signature `Lrx/Completable$4;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L48837e.  return @kind void;
}
procedure `void` `call`(`rx.Completable$4` v8 @kind this, `rx.CompletableSubscriber` v9 @kind object) @signature `Lrx/Completable$4;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L488390.  v0:= new `rx.subscriptions.CompositeSubscription`;
  #L488394.  call `<init>`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.<init>:()V` @kind direct;
  #L48839a.  call `onSubscribe`(v9, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L4883a0.  v1:= v8.`rx.Completable$4.val$sources` @type ^`java.lang.Iterable` @kind object;
  #L4883a4.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4883aa.  v1:= temp @kind object;
  #L4883ac.  if v1 != 0 then goto L4883c6;
  #L4883b0.  v0:= new `java.lang.NullPointerException`;
  #L4883b4.  v1:= "The iterator returned is null" @kind object;
  #L4883b8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4883be.  call `onError`(v9, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4883c4.  return @kind void;
  #L4883c6.  v2:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4883ca.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4883d0.  v3:= new `rx.Completable$4$1`;
  #L4883d4.  call `<init>`(v3, v8, v2, v0, v9) @signature `Lrx/Completable$4$1;.<init>:(Lrx/Completable$4;Ljava/util/concurrent/atomic/AtomicBoolean;Lrx/subscriptions/CompositeSubscription;Lrx/CompletableSubscriber;)V` @kind direct;
  #L4883da.  v4:= 0I;
  #L4883dc.  v5:= 1I;
  #L4883de.  v6:= 1I;
  #L4883e0.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4883e6.  v7:= temp;
  #L4883e8.  if v7 != 0 then goto L4884da;
  #L4883ec.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L4883f2.  v7:= temp;
  #L4883f4.  if v7 == 0 then goto L4883fc;
  #L4883f8.  goto L4884da;
  #L4883fc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L488402.  v7:= temp;
  #L488404.  if v7 != 0 then goto L488414;
  #L488408.  if v6 == 0 then goto L488412;
  #L48840c.  call `onCompleted`(v9) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L488412.  return @kind void;
  #L488414.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L48841a.  v6:= temp;
  #L48841c.  if v6 != 0 then goto L4884b6;
  #L488420.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L488426.  v6:= temp;
  #L488428.  if v6 == 0 then goto L48842e;
  #L48842c.  goto L4884b6;
  #L48842e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L488434.  v6:= temp @kind object;
  #L488436.  v6:= (`rx.Completable`) v6 @kind object;
  #L48843a.  if v6 != 0 then goto L48846e;
  #L48843e.  v1:= new `java.lang.NullPointerException`;
  #L488442.  v3:= "One of the sources is null" @kind object;
  #L488446.  call `<init>`(v1, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48844c.  call temp:= `compareAndSet`(v2, v4, v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L488452.  v2:= temp;
  #L488454.  if v2 == 0 then goto L488466;
  #L488458.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L48845e.  call `onError`(v9, v1) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L488464.  goto L48846c;
  #L488466.  call `onError`(v1) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48846c.  return @kind void;
  #L48846e.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L488474.  v7:= temp;
  #L488476.  if v7 != 0 then goto L488492;
  #L48847a.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L488480.  v7:= temp;
  #L488482.  if v7 == 0 then goto L488488;
  #L488486.  goto L488492;
  #L488488.  call `unsafeSubscribe`(v6, v3) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L48848e.  v6:= 0I;
  #L488490.  goto L4883e0;
  #L488492.  return @kind void;
  #L488494.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L488496.  call temp:= `compareAndSet`(v2, v4, v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L48849c.  v2:= temp;
  #L48849e.  if v2 == 0 then goto L4884b0;
  #L4884a2.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L4884a8.  call `onError`(v9, v1) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4884ae.  goto L4884b6;
  #L4884b0.  call `onError`(v1) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4884b6.  return @kind void;
  #L4884b8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4884ba.  call temp:= `compareAndSet`(v2, v4, v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4884c0.  v2:= temp;
  #L4884c2.  if v2 == 0 then goto L4884d4;
  #L4884c6.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L4884cc.  call `onError`(v9, v1) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4884d2.  goto L4884da;
  #L4884d4.  call `onError`(v1) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4884da.  return @kind void;
  #L4884dc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4884de.  call `onError`(v9, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4884e4.  return @kind void;
  catch `java.lang.Throwable` @[L4883a0..L4883ac] goto L4884dc;
  catch `java.lang.Throwable` @[L4883fc..L488404] goto L4884b8;
  catch `java.lang.Throwable` @[L48842e..L48843a] goto L488494;
}
