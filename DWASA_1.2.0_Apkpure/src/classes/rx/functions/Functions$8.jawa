record `rx.functions.Functions$8` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Func7` `rx.functions.Functions$8.val$f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.functions.Functions$8` v0 @kind this, `rx.functions.Func7` v1 @kind object) @signature `Lrx/functions/Functions$8;.<init>:(Lrx/functions/Func7;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4923d4.  v0.`rx.functions.Functions$8.val$f` @type ^`rx.functions.Func7` := v1 @kind object;
  #L4923d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4923de.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.functions.Functions$8` v10 @kind this, `java.lang.Object`[] v11 @kind object) @signature `Lrx/functions/Functions$8;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L492374.  v0:= length @variable v11;
  #L492376.  v1:= 7I;
  #L492378.  if v0 != v1 then goto L4923b4;
  #L49237c.  v2:= v10.`rx.functions.Functions$8.val$f` @type ^`rx.functions.Func7` @kind object;
  #L492380.  v0:= 0I;
  #L492382.  v3:= v11[v0] @kind object;
  #L492386.  v0:= 1I;
  #L492388.  v4:= v11[v0] @kind object;
  #L49238c.  v0:= 2I;
  #L49238e.  v5:= v11[v0] @kind object;
  #L492392.  v0:= 3I;
  #L492394.  v6:= v11[v0] @kind object;
  #L492398.  v0:= 4I;
  #L49239a.  v7:= v11[v0] @kind object;
  #L49239e.  v0:= 5I;
  #L4923a0.  v8:= v11[v0] @kind object;
  #L4923a4.  v0:= 6I;
  #L4923a6.  v9:= v11[v0] @kind object;
  #L4923aa.  call temp:= `call`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lrx/functions/Func7;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4923b0.  v11:= temp @kind object;
  #L4923b2.  return v11 @kind object;
  #L4923b4.  v11:= new `java.lang.IllegalArgumentException`;
  #L4923b8.  v0:= "Func7 expecting 7 arguments." @kind object;
  #L4923bc.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4923c2.  throw v11;
}
