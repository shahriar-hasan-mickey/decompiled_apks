record `rx.functions.Functions$9` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Func8` `rx.functions.Functions$9.val$f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.functions.Functions$9` v0 @kind this, `rx.functions.Func8` v1 @kind object) @signature `Lrx/functions/Functions$9;.<init>:(Lrx/functions/Func8;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L492458.  v0.`rx.functions.Functions$9.val$f` @type ^`rx.functions.Func8` := v1 @kind object;
  #L49245c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L492462.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.functions.Functions$9` v11 @kind this, `java.lang.Object`[] v12 @kind object) @signature `Lrx/functions/Functions$9;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4923f0.  v0:= length @variable v12;
  #L4923f2.  v1:= 8I;
  #L4923f6.  if v0 != v1 then goto L492438;
  #L4923fa.  v2:= v11.`rx.functions.Functions$9.val$f` @type ^`rx.functions.Func8` @kind object;
  #L4923fe.  v0:= 0I;
  #L492400.  v3:= v12[v0] @kind object;
  #L492404.  v0:= 1I;
  #L492406.  v4:= v12[v0] @kind object;
  #L49240a.  v0:= 2I;
  #L49240c.  v5:= v12[v0] @kind object;
  #L492410.  v0:= 3I;
  #L492412.  v6:= v12[v0] @kind object;
  #L492416.  v0:= 4I;
  #L492418.  v7:= v12[v0] @kind object;
  #L49241c.  v0:= 5I;
  #L49241e.  v8:= v12[v0] @kind object;
  #L492422.  v0:= 6I;
  #L492424.  v9:= v12[v0] @kind object;
  #L492428.  v0:= 7I;
  #L49242a.  v10:= v12[v0] @kind object;
  #L49242e.  call temp:= `call`(v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lrx/functions/Func8;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L492434.  v12:= temp @kind object;
  #L492436.  return v12 @kind object;
  #L492438.  v12:= new `java.lang.IllegalArgumentException`;
  #L49243c.  v0:= "Func8 expecting 8 arguments." @kind object;
  #L492440.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L492446.  throw v12;
}
