record `rx.functions.Functions$5` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Func4` `rx.functions.Functions$5.val$f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.functions.Functions$5` v0 @kind this, `rx.functions.Func4` v1 @kind object) @signature `Lrx/functions/Functions$5;.<init>:(Lrx/functions/Func4;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L492270.  v0.`rx.functions.Functions$5.val$f` @type ^`rx.functions.Func4` := v1 @kind object;
  #L492274.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49227a.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.functions.Functions$5` v5 @kind this, `java.lang.Object`[] v6 @kind object) @signature `Lrx/functions/Functions$5;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L492220.  v0:= length @variable v6;
  #L492222.  v1:= 4I;
  #L492224.  if v0 != v1 then goto L49224e;
  #L492228.  v0:= v5.`rx.functions.Functions$5.val$f` @type ^`rx.functions.Func4` @kind object;
  #L49222c.  v1:= 0I;
  #L49222e.  v1:= v6[v1] @kind object;
  #L492232.  v2:= 1I;
  #L492234.  v2:= v6[v2] @kind object;
  #L492238.  v3:= 2I;
  #L49223a.  v3:= v6[v3] @kind object;
  #L49223e.  v4:= 3I;
  #L492240.  v6:= v6[v4] @kind object;
  #L492244.  call temp:= `call`(v0, v1, v2, v3, v6) @signature `Lrx/functions/Func4;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49224a.  v6:= temp @kind object;
  #L49224c.  return v6 @kind object;
  #L49224e.  v6:= new `java.lang.IllegalArgumentException`;
  #L492252.  v0:= "Func4 expecting 4 arguments." @kind object;
  #L492256.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49225c.  throw v6;
}
