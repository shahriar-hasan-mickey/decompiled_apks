record `rx.functions.Actions$NotImplemented` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `rx.functions.Action1` @kind interface {
}
global `rx.functions.Actions$NotImplemented`[] `@@rx.functions.Actions$NotImplemented.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `rx.functions.Actions$NotImplemented` `@@rx.functions.Actions$NotImplemented.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lrx/functions/Actions$NotImplemented;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L491a9c.  v0:= new `rx.functions.Actions$NotImplemented`;
  #L491aa0.  v1:= 0I;
  #L491aa2.  v2:= "INSTANCE" @kind object;
  #L491aa6.  call `<init>`(v0, v2, v1) @signature `Lrx/functions/Actions$NotImplemented;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L491aac.  `@@rx.functions.Actions$NotImplemented.INSTANCE` @type ^`rx.functions.Actions$NotImplemented` := v0 @kind object;
  #L491ab0.  v0:= 1I;
  #L491ab2.  v0:= new `rx.functions.Actions$NotImplemented`[v0];
  #L491ab6.  v2:= `@@rx.functions.Actions$NotImplemented.INSTANCE` @type ^`rx.functions.Actions$NotImplemented` @kind object;
  #L491aba.  v0[v1]:= v2 @kind object;
  #L491abe.  `@@rx.functions.Actions$NotImplemented.$VALUES` @type ^`rx.functions.Actions$NotImplemented`[] := v0 @kind object;
  #L491ac2.  return @kind void;
}
procedure `void` `<init>`(`rx.functions.Actions$NotImplemented` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lrx/functions/Actions$NotImplemented;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L491ad4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L491ada.  return @kind void;
}
procedure `rx.functions.Actions$NotImplemented` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lrx/functions/Actions$NotImplemented;.valueOf:(Ljava/lang/String;)Lrx/functions/Actions$NotImplemented;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L491a54.  v0:= constclass @type ^`rx.functions.Actions$NotImplemented` @kind object;
  #L491a58.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L491a5e.  v1:= temp @kind object;
  #L491a60.  v1:= (`rx.functions.Actions$NotImplemented`) v1 @kind object;
  #L491a64.  return v1 @kind object;
}
procedure `rx.functions.Actions$NotImplemented`[] `values`() @signature `Lrx/functions/Actions$NotImplemented;.values:()[Lrx/functions/Actions$NotImplemented;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L491a78.  v0:= `@@rx.functions.Actions$NotImplemented.$VALUES` @type ^`rx.functions.Actions$NotImplemented`[] @kind object;
  #L491a7c.  call temp:= `clone`(v0) @signature `[Lrx/functions/Actions$NotImplemented;.clone:()Ljava/lang/Object;` @kind virtual;
  #L491a82.  v0:= temp @kind object;
  #L491a84.  v0:= (`rx.functions.Actions$NotImplemented`[]) v0 @kind object;
  #L491a88.  return v0 @kind object;
}
procedure `void` `call`(`rx.functions.Actions$NotImplemented` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/functions/Actions$NotImplemented;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L491aec.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L491af0.  call `call`(v0, v1) @signature `Lrx/functions/Actions$NotImplemented;.call:(Ljava/lang/Throwable;)V` @kind virtual;
  #L491af6.  return @kind void;
}
procedure `void` `call`(`rx.functions.Actions$NotImplemented` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/functions/Actions$NotImplemented;.call:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L491b08.  v0:= new `rx.exceptions.OnErrorNotImplementedException`;
  #L491b0c.  call `<init>`(v0, v2) @signature `Lrx/exceptions/OnErrorNotImplementedException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L491b12.  throw v0;
}
