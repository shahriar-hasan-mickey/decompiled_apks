record `rx.functions.Functions$10` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Func9` `rx.functions.Functions$10.val$f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.functions.Functions$10` v0 @kind this, `rx.functions.Func9` v1 @kind object) @signature `Lrx/functions/Functions$10;.<init>:(Lrx/functions/Func9;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L491ebc.  v0.`rx.functions.Functions$10.val$f` @type ^`rx.functions.Func9` := v1 @kind object;
  #L491ec0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L491ec6.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.functions.Functions$10` v12 @kind this, `java.lang.Object`[] v13 @kind object) @signature `Lrx/functions/Functions$10;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L491e4c.  v0:= length @variable v13;
  #L491e4e.  v1:= 9I;
  #L491e52.  if v0 != v1 then goto L491e9c;
  #L491e56.  v2:= v12.`rx.functions.Functions$10.val$f` @type ^`rx.functions.Func9` @kind object;
  #L491e5a.  v0:= 0I;
  #L491e5c.  v3:= v13[v0] @kind object;
  #L491e60.  v0:= 1I;
  #L491e62.  v4:= v13[v0] @kind object;
  #L491e66.  v0:= 2I;
  #L491e68.  v5:= v13[v0] @kind object;
  #L491e6c.  v0:= 3I;
  #L491e6e.  v6:= v13[v0] @kind object;
  #L491e72.  v0:= 4I;
  #L491e74.  v7:= v13[v0] @kind object;
  #L491e78.  v0:= 5I;
  #L491e7a.  v8:= v13[v0] @kind object;
  #L491e7e.  v0:= 6I;
  #L491e80.  v9:= v13[v0] @kind object;
  #L491e84.  v0:= 7I;
  #L491e86.  v10:= v13[v0] @kind object;
  #L491e8a.  v0:= 8I;
  #L491e8e.  v11:= v13[v0] @kind object;
  #L491e92.  call temp:= `call`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lrx/functions/Func9;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L491e98.  v13:= temp @kind object;
  #L491e9a.  return v13 @kind object;
  #L491e9c.  v13:= new `java.lang.IllegalArgumentException`;
  #L491ea0.  v0:= "Func9 expecting 9 arguments." @kind object;
  #L491ea4.  call `<init>`(v13, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L491eaa.  throw v13;
}
