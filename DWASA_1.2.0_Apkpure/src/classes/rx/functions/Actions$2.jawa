record `rx.functions.Actions$2` @kind class @AccessFlag FINAL extends `rx.functions.Func1` @kind interface {
  `rx.functions.Action1` `rx.functions.Actions$2.val$action` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `rx.functions.Actions$2.val$result` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.functions.Actions$2` v0 @kind this, `rx.functions.Action1` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lrx/functions/Actions$2;.<init>:(Lrx/functions/Action1;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L491708.  v0.`rx.functions.Actions$2.val$action` @type ^`rx.functions.Action1` := v1 @kind object;
  #L49170c.  v0.`rx.functions.Actions$2.val$result` @type ^`java.lang.Object` := v2 @kind object;
  #L491710.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L491716.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.functions.Actions$2` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/functions/Actions$2;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4916e8.  v0:= v1.`rx.functions.Actions$2.val$action` @type ^`rx.functions.Action1` @kind object;
  #L4916ec.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4916f2.  v2:= v1.`rx.functions.Actions$2.val$result` @type ^`java.lang.Object` @kind object;
  #L4916f6.  return v2 @kind object;
}
