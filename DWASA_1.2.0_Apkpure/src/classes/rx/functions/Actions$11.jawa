record `rx.functions.Actions$11` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.ActionN` `rx.functions.Actions$11.val$action` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `rx.functions.Actions$11.val$result` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.functions.Actions$11` v0 @kind this, `rx.functions.ActionN` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lrx/functions/Actions$11;.<init>:(Lrx/functions/ActionN;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L491688.  v0.`rx.functions.Actions$11.val$action` @type ^`rx.functions.ActionN` := v1 @kind object;
  #L49168c.  v0.`rx.functions.Actions$11.val$result` @type ^`java.lang.Object` := v2 @kind object;
  #L491690.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L491696.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.functions.Actions$11` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lrx/functions/Actions$11;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L491668.  v0:= v1.`rx.functions.Actions$11.val$action` @type ^`rx.functions.ActionN` @kind object;
  #L49166c.  call `call`(v0, v2) @signature `Lrx/functions/ActionN;.call:([Ljava/lang/Object;)V` @kind interface;
  #L491672.  v2:= v1.`rx.functions.Actions$11.val$result` @type ^`java.lang.Object` @kind object;
  #L491676.  return v2 @kind object;
}
