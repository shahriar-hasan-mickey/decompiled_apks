record `rx.functions.Functions$13` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Action2` `rx.functions.Functions$13.val$f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.functions.Functions$13` v0 @kind this, `rx.functions.Action2` v1 @kind object) @signature `Lrx/functions/Functions$13;.<init>:(Lrx/functions/Action2;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L492018.  v0.`rx.functions.Functions$13.val$f` @type ^`rx.functions.Action2` := v1 @kind object;
  #L49201c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L492022.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.functions.Functions$13` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lrx/functions/Functions$13;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L491fb8.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Functions$13;.call:([Ljava/lang/Object;)Ljava/lang/Void;` @kind virtual;
  #L491fbe.  v1:= temp @kind object;
  #L491fc0.  return v1 @kind object;
}
procedure `java.lang.Void` `call`(`rx.functions.Functions$13` v3 @kind this, `java.lang.Object`[] v4 @kind object) @signature `Lrx/functions/Functions$13;.call:([Ljava/lang/Object;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L491fd4.  v0:= length @variable v4;
  #L491fd6.  v1:= 2I;
  #L491fd8.  if v0 != v1 then goto L491ff6;
  #L491fdc.  v0:= v3.`rx.functions.Functions$13.val$f` @type ^`rx.functions.Action2` @kind object;
  #L491fe0.  v1:= 0I;
  #L491fe2.  v1:= v4[v1] @kind object;
  #L491fe6.  v2:= 1I;
  #L491fe8.  v4:= v4[v2] @kind object;
  #L491fec.  call `call`(v0, v1, v4) @signature `Lrx/functions/Action2;.call:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L491ff2.  v4:= 0I;
  #L491ff4.  return v4 @kind object;
  #L491ff6.  v4:= new `java.lang.IllegalArgumentException`;
  #L491ffa.  v0:= "Action3 expecting 2 arguments." @kind object;
  #L491ffe.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L492004.  throw v4;
}
