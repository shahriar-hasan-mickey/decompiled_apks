record `rx.BackpressureOverflow$DropOldest` @kind class @AccessFlag  extends `rx.BackpressureOverflow$Strategy` @kind interface {
}
global `rx.BackpressureOverflow$DropOldest` `@@rx.BackpressureOverflow$DropOldest.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/BackpressureOverflow$DropOldest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4864b4.  v0:= new `rx.BackpressureOverflow$DropOldest`;
  #L4864b8.  call `<init>`(v0) @signature `Lrx/BackpressureOverflow$DropOldest;.<init>:()V` @kind direct;
  #L4864be.  `@@rx.BackpressureOverflow$DropOldest.INSTANCE` @type ^`rx.BackpressureOverflow$DropOldest` := v0 @kind object;
  #L4864c2.  return @kind void;
}
procedure `void` `<init>`(`rx.BackpressureOverflow$DropOldest` v0 @kind this) @signature `Lrx/BackpressureOverflow$DropOldest;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4864d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4864da.  return @kind void;
}
procedure `boolean` `mayAttemptDrop`(`rx.BackpressureOverflow$DropOldest` v1 @kind this) @signature `Lrx/BackpressureOverflow$DropOldest;.mayAttemptDrop:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4864a0.  v0:= 1I;
  #L4864a2.  return v0;
}
