record `rx.Single$4` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Func3` `rx.Single$4.val$zipFunction` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Single$4` v0 @kind this, `rx.functions.Func3` v1 @kind object) @signature `Lrx/Single$4;.<init>:(Lrx/functions/Func3;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48ef9c.  v0.`rx.Single$4.val$zipFunction` @type ^`rx.functions.Func3` := v1 @kind object;
  #L48efa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48efa6.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.Single$4` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lrx/Single$4;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48ef6c.  v0:= v4.`rx.Single$4.val$zipFunction` @type ^`rx.functions.Func3` @kind object;
  #L48ef70.  v1:= 0I;
  #L48ef72.  v1:= v5[v1] @kind object;
  #L48ef76.  v2:= 1I;
  #L48ef78.  v2:= v5[v2] @kind object;
  #L48ef7c.  v3:= 2I;
  #L48ef7e.  v5:= v5[v3] @kind object;
  #L48ef82.  call temp:= `call`(v0, v1, v2, v5) @signature `Lrx/functions/Func3;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48ef88.  v5:= temp @kind object;
  #L48ef8a.  return v5 @kind object;
}
