record `rx.Completable$19` @kind class @AccessFlag  extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Completable` `rx.Completable$19.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action0` `rx.Completable$19.val$onAfterComplete` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action0` `rx.Completable$19.val$onComplete` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.Completable$19.val$onError` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.Completable$19.val$onSubscribe` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action0` `rx.Completable$19.val$onUnsubscribe` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$19` v0 @kind this, `rx.Completable` v1 @kind object, `rx.functions.Action0` v2 @kind object, `rx.functions.Action0` v3 @kind object, `rx.functions.Action1` v4 @kind object, `rx.functions.Action1` v5 @kind object, `rx.functions.Action0` v6 @kind object) @signature `Lrx/Completable$19;.<init>:(Lrx/Completable;Lrx/functions/Action0;Lrx/functions/Action0;Lrx/functions/Action1;Lrx/functions/Action1;Lrx/functions/Action0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48717c.  v0.`rx.Completable$19.this$0` @type ^`rx.Completable` := v1 @kind object;
  #L487180.  v0.`rx.Completable$19.val$onComplete` @type ^`rx.functions.Action0` := v2 @kind object;
  #L487184.  v0.`rx.Completable$19.val$onAfterComplete` @type ^`rx.functions.Action0` := v3 @kind object;
  #L487188.  v0.`rx.Completable$19.val$onError` @type ^`rx.functions.Action1` := v4 @kind object;
  #L48718c.  v0.`rx.Completable$19.val$onSubscribe` @type ^`rx.functions.Action1` := v5 @kind object;
  #L487190.  v0.`rx.Completable$19.val$onUnsubscribe` @type ^`rx.functions.Action0` := v6 @kind object;
  #L487194.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48719a.  return @kind void;
}
procedure `void` `call`(`rx.Completable$19` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$19;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4871ac.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L4871b0.  call `call`(v0, v1) @signature `Lrx/Completable$19;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L4871b6.  return @kind void;
}
procedure `void` `call`(`rx.Completable$19` v2 @kind this, `rx.CompletableSubscriber` v3 @kind object) @signature `Lrx/Completable$19;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4871c8.  v0:= v2.`rx.Completable$19.this$0` @type ^`rx.Completable` @kind object;
  #L4871cc.  v1:= new `rx.Completable$19$1`;
  #L4871d0.  call `<init>`(v1, v2, v3) @signature `Lrx/Completable$19$1;.<init>:(Lrx/Completable$19;Lrx/CompletableSubscriber;)V` @kind direct;
  #L4871d6.  call `unsafeSubscribe`(v0, v1) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L4871dc.  return @kind void;
}
