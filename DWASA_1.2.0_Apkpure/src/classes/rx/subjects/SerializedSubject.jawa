record `rx.subjects.SerializedSubject` @kind class @AccessFlag PUBLIC extends `rx.subjects.Subject` @kind class {
  `rx.subjects.Subject` `rx.subjects.SerializedSubject.actual` @AccessFlag PRIVATE_FINAL;
  `rx.observers.SerializedObserver` `rx.subjects.SerializedSubject.observer` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.subjects.SerializedSubject` v1 @kind this, `rx.subjects.Subject` v2 @kind object) @signature `Lrx/subjects/SerializedSubject;.<init>:(Lrx/subjects/Subject;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4c4fec.  v0:= new `rx.subjects.SerializedSubject$1`;
  #L4c4ff0.  call `<init>`(v0, v2) @signature `Lrx/subjects/SerializedSubject$1;.<init>:(Lrx/subjects/Subject;)V` @kind direct;
  #L4c4ff6.  call `<init>`(v1, v0) @signature `Lrx/subjects/Subject;.<init>:(Lrx/Observable$OnSubscribe;)V` @kind direct;
  #L4c4ffc.  v1.`rx.subjects.SerializedSubject.actual` @type ^`rx.subjects.Subject` := v2 @kind object;
  #L4c5000.  v0:= new `rx.observers.SerializedObserver`;
  #L4c5004.  call `<init>`(v0, v2) @signature `Lrx/observers/SerializedObserver;.<init>:(Lrx/Observer;)V` @kind direct;
  #L4c500a.  v1.`rx.subjects.SerializedSubject.observer` @type ^`rx.observers.SerializedObserver` := v0 @kind object;
  #L4c500e.  return @kind void;
}
procedure `boolean` `hasObservers`(`rx.subjects.SerializedSubject` v1 @kind this) @signature `Lrx/subjects/SerializedSubject;.hasObservers:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c4fcc.  v0:= v1.`rx.subjects.SerializedSubject.actual` @type ^`rx.subjects.Subject` @kind object;
  #L4c4fd0.  call temp:= `hasObservers`(v0) @signature `Lrx/subjects/Subject;.hasObservers:()Z` @kind virtual;
  #L4c4fd6.  v0:= temp;
  #L4c4fd8.  return v0;
}
procedure `void` `onCompleted`(`rx.subjects.SerializedSubject` v1 @kind this) @signature `Lrx/subjects/SerializedSubject;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c5020.  v0:= v1.`rx.subjects.SerializedSubject.observer` @type ^`rx.observers.SerializedObserver` @kind object;
  #L4c5024.  call `onCompleted`(v0) @signature `Lrx/observers/SerializedObserver;.onCompleted:()V` @kind virtual;
  #L4c502a.  return @kind void;
}
procedure `void` `onError`(`rx.subjects.SerializedSubject` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/subjects/SerializedSubject;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c503c.  v0:= v1.`rx.subjects.SerializedSubject.observer` @type ^`rx.observers.SerializedObserver` @kind object;
  #L4c5040.  call `onError`(v0, v2) @signature `Lrx/observers/SerializedObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c5046.  return @kind void;
}
procedure `void` `onNext`(`rx.subjects.SerializedSubject` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/subjects/SerializedSubject;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c5058.  v0:= v1.`rx.subjects.SerializedSubject.observer` @type ^`rx.observers.SerializedObserver` @kind object;
  #L4c505c.  call `onNext`(v0, v2) @signature `Lrx/observers/SerializedObserver;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4c5062.  return @kind void;
}
