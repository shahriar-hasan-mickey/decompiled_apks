record `rx.subjects.SubjectSubscriptionManager$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.subjects.SubjectSubscriptionManager` `rx.subjects.SubjectSubscriptionManager$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.subjects.SubjectSubscriptionManager$SubjectObserver` `rx.subjects.SubjectSubscriptionManager$1.val$bo` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.subjects.SubjectSubscriptionManager$1` v0 @kind this, `rx.subjects.SubjectSubscriptionManager` v1 @kind object, `rx.subjects.SubjectSubscriptionManager$SubjectObserver` v2 @kind object) @signature `Lrx/subjects/SubjectSubscriptionManager$1;.<init>:(Lrx/subjects/SubjectSubscriptionManager;Lrx/subjects/SubjectSubscriptionManager$SubjectObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c5074.  v0.`rx.subjects.SubjectSubscriptionManager$1.this$0` @type ^`rx.subjects.SubjectSubscriptionManager` := v1 @kind object;
  #L4c5078.  v0.`rx.subjects.SubjectSubscriptionManager$1.val$bo` @type ^`rx.subjects.SubjectSubscriptionManager$SubjectObserver` := v2 @kind object;
  #L4c507c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c5082.  return @kind void;
}
procedure `void` `call`(`rx.subjects.SubjectSubscriptionManager$1` v2 @kind this) @signature `Lrx/subjects/SubjectSubscriptionManager$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c5094.  v0:= v2.`rx.subjects.SubjectSubscriptionManager$1.this$0` @type ^`rx.subjects.SubjectSubscriptionManager` @kind object;
  #L4c5098.  v1:= v2.`rx.subjects.SubjectSubscriptionManager$1.val$bo` @type ^`rx.subjects.SubjectSubscriptionManager$SubjectObserver` @kind object;
  #L4c509c.  call `remove`(v0, v1) @signature `Lrx/subjects/SubjectSubscriptionManager;.remove:(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver;)V` @kind virtual;
  #L4c50a2.  return @kind void;
}
