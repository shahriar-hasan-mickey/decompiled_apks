record `rx.Single$11` @kind class @AccessFlag  extends `rx.SingleSubscriber` @kind class {
  `rx.Single` `rx.Single$11.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.Single$11.val$onError` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.Single$11.val$onSuccess` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Single$11` v0 @kind this, `rx.Single` v1 @kind object, `rx.functions.Action1` v2 @kind object, `rx.functions.Action1` v3 @kind object) @signature `Lrx/Single$11;.<init>:(Lrx/Single;Lrx/functions/Action1;Lrx/functions/Action1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48ea0c.  v0.`rx.Single$11.this$0` @type ^`rx.Single` := v1 @kind object;
  #L48ea10.  v0.`rx.Single$11.val$onError` @type ^`rx.functions.Action1` := v2 @kind object;
  #L48ea14.  v0.`rx.Single$11.val$onSuccess` @type ^`rx.functions.Action1` := v3 @kind object;
  #L48ea18.  call `<init>`(v0) @signature `Lrx/SingleSubscriber;.<init>:()V` @kind direct;
  #L48ea1e.  return @kind void;
}
procedure `void` `onError`(`rx.Single$11` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/Single$11;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L48ea30.  v0:= v1.`rx.Single$11.val$onError` @type ^`rx.functions.Action1` @kind object;
  #L48ea34.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L48ea3a.  call `unsubscribe`(v1) @signature `Lrx/Single$11;.unsubscribe:()V` @kind virtual;
  #L48ea40.  return @kind void;
  #L48ea42.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48ea44.  call `unsubscribe`(v1) @signature `Lrx/Single$11;.unsubscribe:()V` @kind virtual;
  #L48ea4a.  throw v2;
  catch `java.lang.Throwable` @[L48ea30..L48ea3a] goto L48ea42;
}
procedure `void` `onSuccess`(`rx.Single$11` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/Single$11;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L48ea68.  v0:= v1.`rx.Single$11.val$onSuccess` @type ^`rx.functions.Action1` @kind object;
  #L48ea6c.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L48ea72.  call `unsubscribe`(v1) @signature `Lrx/Single$11;.unsubscribe:()V` @kind virtual;
  #L48ea78.  return @kind void;
  #L48ea7a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48ea7c.  call `unsubscribe`(v1) @signature `Lrx/Single$11;.unsubscribe:()V` @kind virtual;
  #L48ea82.  throw v2;
  catch `java.lang.Throwable` @[L48ea68..L48ea72] goto L48ea7a;
}
