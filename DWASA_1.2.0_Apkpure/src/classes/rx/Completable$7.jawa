record `rx.Completable$7` @kind class @AccessFlag FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `java.lang.Throwable` `rx.Completable$7.val$error` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$7` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lrx/Completable$7;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L488658.  v0.`rx.Completable$7.val$error` @type ^`java.lang.Throwable` := v1 @kind object;
  #L48865c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L488662.  return @kind void;
}
procedure `void` `call`(`rx.Completable$7` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$7;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L488674.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L488678.  call `call`(v0, v1) @signature `Lrx/Completable$7;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L48867e.  return @kind void;
}
procedure `void` `call`(`rx.Completable$7` v1 @kind this, `rx.CompletableSubscriber` v2 @kind object) @signature `Lrx/Completable$7;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L488690.  call temp:= `unsubscribed`() @signature `Lrx/subscriptions/Subscriptions;.unsubscribed:()Lrx/Subscription;` @kind static;
  #L488696.  v0:= temp @kind object;
  #L488698.  call `onSubscribe`(v2, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L48869e.  v0:= v1.`rx.Completable$7.val$error` @type ^`java.lang.Throwable` @kind object;
  #L4886a2.  call `onError`(v2, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4886a8.  return @kind void;
}
