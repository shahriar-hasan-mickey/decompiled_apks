record `rx.Completable$13` @kind class @AccessFlag FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.functions.Func1` `rx.Completable$13.val$completableFunc1` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.Completable$13.val$disposer` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `rx.Completable$13.val$eager` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Func0` `rx.Completable$13.val$resourceFunc0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$13` v0 @kind this, `rx.functions.Func0` v1 @kind object, `rx.functions.Func1` v2 @kind object, `rx.functions.Action1` v3 @kind object, `boolean` v4 ) @signature `Lrx/Completable$13;.<init>:(Lrx/functions/Func0;Lrx/functions/Func1;Lrx/functions/Action1;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L486a14.  v0.`rx.Completable$13.val$resourceFunc0` @type ^`rx.functions.Func0` := v1 @kind object;
  #L486a18.  v0.`rx.Completable$13.val$completableFunc1` @type ^`rx.functions.Func1` := v2 @kind object;
  #L486a1c.  v0.`rx.Completable$13.val$disposer` @type ^`rx.functions.Action1` := v3 @kind object;
  #L486a20.  v0.`rx.Completable$13.val$eager` @type ^`boolean` := v4 @kind boolean;
  #L486a24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486a2a.  return @kind void;
}
procedure `void` `call`(`rx.Completable$13` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$13;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L486a3c.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L486a40.  call `call`(v0, v1) @signature `Lrx/Completable$13;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L486a46.  return @kind void;
}
procedure `void` `call`(`rx.Completable$13` v7 @kind this, `rx.CompletableSubscriber` v8 @kind object) @signature `Lrx/Completable$13;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L486a58.  v0:= "The completable supplied is null" @kind object;
  #L486a5c.  v1:= v7.`rx.Completable$13.val$resourceFunc0` @type ^`rx.functions.Func0` @kind object;
  #L486a60.  call temp:= `call`(v1) @signature `Lrx/functions/Func0;.call:()Ljava/lang/Object;` @kind interface;
  #L486a66.  v1:= temp @kind object;
  #L486a68.  v2:= 1I;
  #L486a6a.  v3:= 0I;
  #L486a6c.  v4:= 2I;
  #L486a6e.  v5:= v7.`rx.Completable$13.val$completableFunc1` @type ^`rx.functions.Func1` @kind object;
  #L486a72.  call temp:= `call`(v5, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486a78.  v5:= temp @kind object;
  #L486a7a.  v5:= (`rx.Completable`) v5 @kind object;
  #L486a7e.  if v5 != 0 then goto L486af2;
  #L486a82.  v5:= v7.`rx.Completable$13.val$disposer` @type ^`rx.functions.Action1` @kind object;
  #L486a86.  call `call`(v5, v1) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L486a8c.  call temp:= `unsubscribed`() @signature `Lrx/subscriptions/Subscriptions;.unsubscribed:()Lrx/Subscription;` @kind static;
  #L486a92.  v1:= temp @kind object;
  #L486a94.  call `onSubscribe`(v8, v1) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L486a9a.  v1:= new `java.lang.NullPointerException`;
  #L486a9e.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L486aa4.  call `onError`(v8, v1) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L486aaa.  return @kind void;
  #L486aac.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L486aae.  call `throwIfFatal`(v1) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L486ab4.  call temp:= `unsubscribed`() @signature `Lrx/subscriptions/Subscriptions;.unsubscribed:()Lrx/Subscription;` @kind static;
  #L486aba.  v5:= temp @kind object;
  #L486abc.  call `onSubscribe`(v8, v5) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L486ac2.  v5:= new `rx.exceptions.CompositeException`;
  #L486ac6.  v4:= new `java.lang.Throwable`[v4];
  #L486aca.  v6:= new `java.lang.NullPointerException`;
  #L486ace.  call `<init>`(v6, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L486ad4.  v4[v3]:= v6 @kind object;
  #L486ad8.  v4[v2]:= v1 @kind object;
  #L486adc.  call temp:= `asList`(v4) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L486ae2.  v0:= temp @kind object;
  #L486ae4.  call `<init>`(v5, v0) @signature `Lrx/exceptions/CompositeException;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L486aea.  call `onError`(v8, v5) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L486af0.  return @kind void;
  #L486af2.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L486af6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L486afc.  v2:= new `rx.Completable$13$1`;
  #L486b00.  call `<init>`(v2, v7, v0, v1, v8) @signature `Lrx/Completable$13$1;.<init>:(Lrx/Completable$13;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/lang/Object;Lrx/CompletableSubscriber;)V` @kind direct;
  #L486b06.  call `unsafeSubscribe`(v5, v2) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L486b0c.  return @kind void;
  #L486b0e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L486b10.  v5:= v7.`rx.Completable$13.val$disposer` @type ^`rx.functions.Action1` @kind object;
  #L486b14.  call `call`(v5, v1) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L486b1a.  call `throwIfFatal`(v0) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L486b20.  call temp:= `unsubscribed`() @signature `Lrx/subscriptions/Subscriptions;.unsubscribed:()Lrx/Subscription;` @kind static;
  #L486b26.  v1:= temp @kind object;
  #L486b28.  call `onSubscribe`(v8, v1) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L486b2e.  call `onError`(v8, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L486b34.  return @kind void;
  #L486b36.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L486b38.  call `throwIfFatal`(v0) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L486b3e.  call `throwIfFatal`(v1) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L486b44.  call temp:= `unsubscribed`() @signature `Lrx/subscriptions/Subscriptions;.unsubscribed:()Lrx/Subscription;` @kind static;
  #L486b4a.  v5:= temp @kind object;
  #L486b4c.  call `onSubscribe`(v8, v5) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L486b52.  v5:= new `rx.exceptions.CompositeException`;
  #L486b56.  v4:= new `java.lang.Throwable`[v4];
  #L486b5a.  v4[v3]:= v0 @kind object;
  #L486b5e.  v4[v2]:= v1 @kind object;
  #L486b62.  call temp:= `asList`(v4) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L486b68.  v0:= temp @kind object;
  #L486b6a.  call `<init>`(v5, v0) @signature `Lrx/exceptions/CompositeException;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L486b70.  call `onError`(v8, v5) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L486b76.  return @kind void;
  #L486b78.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L486b7a.  call temp:= `unsubscribed`() @signature `Lrx/subscriptions/Subscriptions;.unsubscribed:()Lrx/Subscription;` @kind static;
  #L486b80.  v1:= temp @kind object;
  #L486b82.  call `onSubscribe`(v8, v1) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L486b88.  call `onError`(v8, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L486b8e.  return @kind void;
  catch `java.lang.Throwable` @[L486a5c..L486a68] goto L486b78;
  catch `java.lang.Throwable` @[L486a6e..L486a7e] goto L486b0e;
  catch `java.lang.Throwable` @[L486a82..L486a8c] goto L486aac;
  catch `java.lang.Throwable` @[L486b10..L486b1a] goto L486b36;
}
