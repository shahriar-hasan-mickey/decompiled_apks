record `rx.Completable$35$1$1$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.Completable$35$1$1` `rx.Completable$35$1$1$1.this$3` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler$Worker` `rx.Completable$35$1$1$1.val$w` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$35$1$1$1` v0 @kind this, `rx.Completable$35$1$1` v1 @kind object, `rx.Scheduler$Worker` v2 @kind object) @signature `Lrx/Completable$35$1$1$1;.<init>:(Lrx/Completable$35$1$1;Lrx/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L488000.  v0.`rx.Completable$35$1$1$1.this$3` @type ^`rx.Completable$35$1$1` := v1 @kind object;
  #L488004.  v0.`rx.Completable$35$1$1$1.val$w` @type ^`rx.Scheduler$Worker` := v2 @kind object;
  #L488008.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48800e.  return @kind void;
}
procedure `void` `call`(`rx.Completable$35$1$1$1` v2 @kind this) @signature `Lrx/Completable$35$1$1$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L488020.  v0:= v2.`rx.Completable$35$1$1$1.this$3` @type ^`rx.Completable$35$1$1` @kind object;
  #L488024.  v0:= v0.`rx.Completable$35$1$1.val$d` @type ^`rx.Subscription` @kind object;
  #L488028.  call `unsubscribe`(v0) @signature `Lrx/Subscription;.unsubscribe:()V` @kind interface;
  #L48802e.  v0:= v2.`rx.Completable$35$1$1$1.val$w` @type ^`rx.Scheduler$Worker` @kind object;
  #L488032.  call `unsubscribe`(v0) @signature `Lrx/Scheduler$Worker;.unsubscribe:()V` @kind virtual;
  #L488038.  return @kind void;
  #L48803a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48803c.  v1:= v2.`rx.Completable$35$1$1$1.val$w` @type ^`rx.Scheduler$Worker` @kind object;
  #L488040.  call `unsubscribe`(v1) @signature `Lrx/Scheduler$Worker;.unsubscribe:()V` @kind virtual;
  #L488046.  throw v0;
  catch `java.lang.Throwable` @[L488020..L48802e] goto L48803a;
}
