record `rx.Completable$10` @kind class @AccessFlag FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Observable` `rx.Completable$10.val$flowable` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$10` v0 @kind this, `rx.Observable` v1 @kind object) @signature `Lrx/Completable$10;.<init>:(Lrx/Observable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4865fc.  v0.`rx.Completable$10.val$flowable` @type ^`rx.Observable` := v1 @kind object;
  #L486600.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486606.  return @kind void;
}
procedure `void` `call`(`rx.Completable$10` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$10;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L486618.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L48661c.  call `call`(v0, v1) @signature `Lrx/Completable$10;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L486622.  return @kind void;
}
procedure `void` `call`(`rx.Completable$10` v1 @kind this, `rx.CompletableSubscriber` v2 @kind object) @signature `Lrx/Completable$10;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486634.  v0:= new `rx.Completable$10$1`;
  #L486638.  call `<init>`(v0, v1, v2) @signature `Lrx/Completable$10$1;.<init>:(Lrx/Completable$10;Lrx/CompletableSubscriber;)V` @kind direct;
  #L48663e.  call `onSubscribe`(v2, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L486644.  v2:= v1.`rx.Completable$10.val$flowable` @type ^`rx.Observable` @kind object;
  #L486648.  call temp:= `unsafeSubscribe`(v2, v0) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L48664e.  return @kind void;
}
