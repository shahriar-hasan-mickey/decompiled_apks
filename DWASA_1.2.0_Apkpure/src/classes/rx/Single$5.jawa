record `rx.Single$5` @kind class @AccessFlag FINAL extends `rx.functions.FuncN` @kind interface {
  `rx.functions.Func4` `rx.Single$5.val$zipFunction` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Single$5` v0 @kind this, `rx.functions.Func4` v1 @kind object) @signature `Lrx/Single$5;.<init>:(Lrx/functions/Func4;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48eff0.  v0.`rx.Single$5.val$zipFunction` @type ^`rx.functions.Func4` := v1 @kind object;
  #L48eff4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48effa.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.Single$5` v5 @kind this, `java.lang.Object`[] v6 @kind object) @signature `Lrx/Single$5;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48efb8.  v0:= v5.`rx.Single$5.val$zipFunction` @type ^`rx.functions.Func4` @kind object;
  #L48efbc.  v1:= 0I;
  #L48efbe.  v1:= v6[v1] @kind object;
  #L48efc2.  v2:= 1I;
  #L48efc4.  v2:= v6[v2] @kind object;
  #L48efc8.  v3:= 2I;
  #L48efca.  v3:= v6[v3] @kind object;
  #L48efce.  v4:= 3I;
  #L48efd0.  v6:= v6[v4] @kind object;
  #L48efd4.  call temp:= `call`(v0, v1, v2, v3, v6) @signature `Lrx/functions/Func4;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48efda.  v6:= temp @kind object;
  #L48efdc.  return v6 @kind object;
}
