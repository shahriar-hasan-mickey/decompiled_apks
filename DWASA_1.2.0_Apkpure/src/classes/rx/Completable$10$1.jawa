record `rx.Completable$10$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.Completable$10` `rx.Completable$10$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.CompletableSubscriber` `rx.Completable$10$1.val$cs` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$10$1` v0 @kind this, `rx.Completable$10` v1 @kind object, `rx.CompletableSubscriber` v2 @kind object) @signature `Lrx/Completable$10$1;.<init>:(Lrx/Completable$10;Lrx/CompletableSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L486590.  v0.`rx.Completable$10$1.this$0` @type ^`rx.Completable$10` := v1 @kind object;
  #L486594.  v0.`rx.Completable$10$1.val$cs` @type ^`rx.CompletableSubscriber` := v2 @kind object;
  #L486598.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L48659e.  return @kind void;
}
procedure `void` `onCompleted`(`rx.Completable$10$1` v1 @kind this) @signature `Lrx/Completable$10$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4865b0.  v0:= v1.`rx.Completable$10$1.val$cs` @type ^`rx.CompletableSubscriber` @kind object;
  #L4865b4.  call `onCompleted`(v0) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L4865ba.  return @kind void;
}
procedure `void` `onError`(`rx.Completable$10$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/Completable$10$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4865cc.  v0:= v1.`rx.Completable$10$1.val$cs` @type ^`rx.CompletableSubscriber` @kind object;
  #L4865d0.  call `onError`(v0, v2) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4865d6.  return @kind void;
}
procedure `void` `onNext`(`rx.Completable$10$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$10$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4865e8.  return @kind void;
}
