record `rx.Completable$12` @kind class @AccessFlag FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `long` `rx.Completable$12.val$delay` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler` `rx.Completable$12.val$scheduler` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.TimeUnit` `rx.Completable$12.val$unit` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$12` v0 @kind this, `rx.Scheduler` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lrx/Completable$12;.<init>:(Lrx/Scheduler;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L486780.  v0.`rx.Completable$12.val$scheduler` @type ^`rx.Scheduler` := v1 @kind object;
  #L486784.  v0.`rx.Completable$12.val$delay` @type ^`long` := v2 @kind wide;
  #L486788.  v0.`rx.Completable$12.val$unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L48678c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486792.  return @kind void;
}
procedure `void` `call`(`rx.Completable$12` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$12;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4867a4.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L4867a8.  call `call`(v0, v1) @signature `Lrx/Completable$12;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L4867ae.  return @kind void;
}
procedure `void` `call`(`rx.Completable$12` v4 @kind this, `rx.CompletableSubscriber` v5 @kind object) @signature `Lrx/Completable$12;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4867c0.  v0:= new `rx.subscriptions.MultipleAssignmentSubscription`;
  #L4867c4.  call `<init>`(v0) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.<init>:()V` @kind direct;
  #L4867ca.  call `onSubscribe`(v5, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L4867d0.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L4867d6.  v1:= temp;
  #L4867d8.  if v1 != 0 then goto L486806;
  #L4867dc.  v1:= v4.`rx.Completable$12.val$scheduler` @type ^`rx.Scheduler` @kind object;
  #L4867e0.  call temp:= `createWorker`(v1) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L4867e6.  v1:= temp @kind object;
  #L4867e8.  call `set`(v0, v1) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L4867ee.  v0:= new `rx.Completable$12$1`;
  #L4867f2.  call `<init>`(v0, v4, v5, v1) @signature `Lrx/Completable$12$1;.<init>:(Lrx/Completable$12;Lrx/CompletableSubscriber;Lrx/Scheduler$Worker;)V` @kind direct;
  #L4867f8.  v2:= v4.`rx.Completable$12.val$delay` @type ^`long` @kind wide;
  #L4867fc.  v5:= v4.`rx.Completable$12.val$unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L486800.  call temp:= `schedule`(v1, v0, v2, v5) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L486806.  return @kind void;
}
