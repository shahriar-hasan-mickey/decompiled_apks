record `rx.Completable$27` @kind class @AccessFlag  extends `rx.CompletableSubscriber` @kind interface {
  `rx.Completable` `rx.Completable$27.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.subscriptions.MultipleAssignmentSubscription` `rx.Completable$27.val$mad` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$27` v0 @kind this, `rx.Completable` v1 @kind object, `rx.subscriptions.MultipleAssignmentSubscription` v2 @kind object) @signature `Lrx/Completable$27;.<init>:(Lrx/Completable;Lrx/subscriptions/MultipleAssignmentSubscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L487950.  v0.`rx.Completable$27.this$0` @type ^`rx.Completable` := v1 @kind object;
  #L487954.  v0.`rx.Completable$27.val$mad` @type ^`rx.subscriptions.MultipleAssignmentSubscription` := v2 @kind object;
  #L487958.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48795e.  return @kind void;
}
procedure `void` `onCompleted`(`rx.Completable$27` v1 @kind this) @signature `Lrx/Completable$27;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487970.  v0:= v1.`rx.Completable$27.val$mad` @type ^`rx.subscriptions.MultipleAssignmentSubscription` @kind object;
  #L487974.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.unsubscribe:()V` @kind virtual;
  #L48797a.  return @kind void;
}
procedure `void` `onError`(`rx.Completable$27` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/Completable$27;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48798c.  call `onError`(v2) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L487992.  v0:= v1.`rx.Completable$27.val$mad` @type ^`rx.subscriptions.MultipleAssignmentSubscription` @kind object;
  #L487996.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.unsubscribe:()V` @kind virtual;
  #L48799c.  call `deliverUncaughtException`(v2) @signature `Lrx/Completable;.deliverUncaughtException:(Ljava/lang/Throwable;)V` @kind static;
  #L4879a2.  return @kind void;
}
procedure `void` `onSubscribe`(`rx.Completable$27` v1 @kind this, `rx.Subscription` v2 @kind object) @signature `Lrx/Completable$27;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4879b4.  v0:= v1.`rx.Completable$27.val$mad` @type ^`rx.subscriptions.MultipleAssignmentSubscription` @kind object;
  #L4879b8.  call `set`(v0, v2) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L4879be.  return @kind void;
}
