record `rx.Completable$16$1` @kind class @AccessFlag  extends `rx.CompletableSubscriber` @kind interface {
  `rx.Completable$16` `rx.Completable$16$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `rx.CompletableSubscriber` `rx.Completable$16$1.val$s` @AccessFlag FINAL_SYNTHETIC;
  `rx.subscriptions.CompositeSubscription` `rx.Completable$16$1.val$set` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler$Worker` `rx.Completable$16$1.val$w` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$16$1` v0 @kind this, `rx.Completable$16` v1 @kind object, `rx.subscriptions.CompositeSubscription` v2 @kind object, `rx.Scheduler$Worker` v3 @kind object, `rx.CompletableSubscriber` v4 @kind object) @signature `Lrx/Completable$16$1;.<init>:(Lrx/Completable$16;Lrx/subscriptions/CompositeSubscription;Lrx/Scheduler$Worker;Lrx/CompletableSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L486d9c.  v0.`rx.Completable$16$1.this$1` @type ^`rx.Completable$16` := v1 @kind object;
  #L486da0.  v0.`rx.Completable$16$1.val$set` @type ^`rx.subscriptions.CompositeSubscription` := v2 @kind object;
  #L486da4.  v0.`rx.Completable$16$1.val$w` @type ^`rx.Scheduler$Worker` := v3 @kind object;
  #L486da8.  v0.`rx.Completable$16$1.val$s` @type ^`rx.CompletableSubscriber` := v4 @kind object;
  #L486dac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486db2.  return @kind void;
}
procedure `void` `onCompleted`(`rx.Completable$16$1` v6 @kind this) @signature `Lrx/Completable$16$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L486dc4.  v0:= v6.`rx.Completable$16$1.val$set` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L486dc8.  v1:= v6.`rx.Completable$16$1.val$w` @type ^`rx.Scheduler$Worker` @kind object;
  #L486dcc.  v2:= new `rx.Completable$16$1$1`;
  #L486dd0.  call `<init>`(v2, v6) @signature `Lrx/Completable$16$1$1;.<init>:(Lrx/Completable$16$1;)V` @kind direct;
  #L486dd6.  v3:= v6.`rx.Completable$16$1.this$1` @type ^`rx.Completable$16` @kind object;
  #L486dda.  v3:= v3.`rx.Completable$16.val$delay` @type ^`long` @kind wide;
  #L486dde.  v5:= v6.`rx.Completable$16$1.this$1` @type ^`rx.Completable$16` @kind object;
  #L486de2.  v5:= v5.`rx.Completable$16.val$unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L486de6.  call temp:= `schedule`(v1, v2, v3, v5) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L486dec.  v1:= temp @kind object;
  #L486dee.  call `add`(v0, v1) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L486df4.  return @kind void;
}
procedure `void` `onError`(`rx.Completable$16$1` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lrx/Completable$16$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L486e08.  v0:= v5.`rx.Completable$16$1.this$1` @type ^`rx.Completable$16` @kind object;
  #L486e0c.  v0:= v0.`rx.Completable$16.val$delayError` @type ^`boolean` @kind boolean;
  #L486e10.  if v0 == 0 then goto L486e46;
  #L486e14.  v0:= v5.`rx.Completable$16$1.val$set` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L486e18.  v1:= v5.`rx.Completable$16$1.val$w` @type ^`rx.Scheduler$Worker` @kind object;
  #L486e1c.  v2:= new `rx.Completable$16$1$2`;
  #L486e20.  call `<init>`(v2, v5, v6) @signature `Lrx/Completable$16$1$2;.<init>:(Lrx/Completable$16$1;Ljava/lang/Throwable;)V` @kind direct;
  #L486e26.  v6:= v5.`rx.Completable$16$1.this$1` @type ^`rx.Completable$16` @kind object;
  #L486e2a.  v3:= v6.`rx.Completable$16.val$delay` @type ^`long` @kind wide;
  #L486e2e.  v6:= v5.`rx.Completable$16$1.this$1` @type ^`rx.Completable$16` @kind object;
  #L486e32.  v6:= v6.`rx.Completable$16.val$unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L486e36.  call temp:= `schedule`(v1, v2, v3, v6) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L486e3c.  v6:= temp @kind object;
  #L486e3e.  call `add`(v0, v6) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L486e44.  goto L486e50;
  #L486e46.  v0:= v5.`rx.Completable$16$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L486e4a.  call `onError`(v0, v6) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L486e50.  return @kind void;
}
procedure `void` `onSubscribe`(`rx.Completable$16$1` v1 @kind this, `rx.Subscription` v2 @kind object) @signature `Lrx/Completable$16$1;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486e64.  v0:= v1.`rx.Completable$16$1.val$set` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L486e68.  call `add`(v0, v2) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L486e6e.  v2:= v1.`rx.Completable$16$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L486e72.  v0:= v1.`rx.Completable$16$1.val$set` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L486e76.  call `onSubscribe`(v2, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L486e7c.  return @kind void;
}
