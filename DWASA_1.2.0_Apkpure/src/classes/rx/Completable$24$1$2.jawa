record `rx.Completable$24$1$2` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.Completable$24$1` `rx.Completable$24$1$2.this$2` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Throwable` `rx.Completable$24$1$2.val$e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$24$1$2` v0 @kind this, `rx.Completable$24$1` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lrx/Completable$24$1$2;.<init>:(Lrx/Completable$24$1;Ljava/lang/Throwable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L487494.  v0.`rx.Completable$24$1$2.this$2` @type ^`rx.Completable$24$1` := v1 @kind object;
  #L487498.  v0.`rx.Completable$24$1$2.val$e` @type ^`java.lang.Throwable` := v2 @kind object;
  #L48749c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4874a2.  return @kind void;
}
procedure `void` `call`(`rx.Completable$24$1$2` v2 @kind this) @signature `Lrx/Completable$24$1$2;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4874b4.  v0:= v2.`rx.Completable$24$1$2.this$2` @type ^`rx.Completable$24$1` @kind object;
  #L4874b8.  v0:= v0.`rx.Completable$24$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L4874bc.  v1:= v2.`rx.Completable$24$1$2.val$e` @type ^`java.lang.Throwable` @kind object;
  #L4874c0.  call `onError`(v0, v1) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4874c6.  v0:= v2.`rx.Completable$24$1$2.this$2` @type ^`rx.Completable$24$1` @kind object;
  #L4874ca.  v0:= v0.`rx.Completable$24$1.val$ad` @type ^`rx.internal.util.SubscriptionList` @kind object;
  #L4874ce.  call `unsubscribe`(v0) @signature `Lrx/internal/util/SubscriptionList;.unsubscribe:()V` @kind virtual;
  #L4874d4.  return @kind void;
  #L4874d6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4874d8.  v1:= v2.`rx.Completable$24$1$2.this$2` @type ^`rx.Completable$24$1` @kind object;
  #L4874dc.  v1:= v1.`rx.Completable$24$1.val$ad` @type ^`rx.internal.util.SubscriptionList` @kind object;
  #L4874e0.  call `unsubscribe`(v1) @signature `Lrx/internal/util/SubscriptionList;.unsubscribe:()V` @kind virtual;
  #L4874e6.  throw v0;
  catch `java.lang.Throwable` @[L4874b4..L4874c6] goto L4874d6;
}
