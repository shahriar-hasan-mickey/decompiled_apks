record `rx.Single$14` @kind class @AccessFlag  extends `rx.functions.Action1` @kind interface {
  `rx.Single` `rx.Single$14.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.Single$14.val$onError` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Single$14` v0 @kind this, `rx.Single` v1 @kind object, `rx.functions.Action1` v2 @kind object) @signature `Lrx/Single$14;.<init>:(Lrx/Single;Lrx/functions/Action1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48ec80.  v0.`rx.Single$14.this$0` @type ^`rx.Single` := v1 @kind object;
  #L48ec84.  v0.`rx.Single$14.val$onError` @type ^`rx.functions.Action1` := v2 @kind object;
  #L48ec88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48ec8e.  return @kind void;
}
procedure `void` `call`(`rx.Single$14` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Single$14;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48eca0.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L48eca4.  call `call`(v0, v1) @signature `Lrx/Single$14;.call:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48ecaa.  return @kind void;
}
procedure `void` `call`(`rx.Single$14` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/Single$14;.call:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48ecbc.  v0:= v1.`rx.Single$14.val$onError` @type ^`rx.functions.Action1` @kind object;
  #L48ecc0.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L48ecc6.  return @kind void;
}
