record `rx.schedulers.Timestamped` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `rx.schedulers.Timestamped.timestampMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `rx.schedulers.Timestamped.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.schedulers.Timestamped` v0 @kind this, `long` v1 , `java.lang.Object` v3 @kind object) @signature `Lrx/schedulers/Timestamped;.<init>:(JLjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c2e24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c2e2a.  v0.`rx.schedulers.Timestamped.value` @type ^`java.lang.Object` := v3 @kind object;
  #L4c2e2e.  v0.`rx.schedulers.Timestamped.timestampMillis` @type ^`long` := v1 @kind wide;
  #L4c2e32.  return @kind void;
}
procedure `boolean` `equals`(`rx.schedulers.Timestamped` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lrx/schedulers/Timestamped;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4c2d08.  v0:= 1I;
  #L4c2d0a.  if v7 != v8 then goto L4c2d10;
  #L4c2d0e.  return v0;
  #L4c2d10.  v1:= 0I;
  #L4c2d12.  if v8 != 0 then goto L4c2d18;
  #L4c2d16.  return v1;
  #L4c2d18.  v2:= instanceof @variable v8 @type ^`rx.schedulers.Timestamped` @kind boolean;
  #L4c2d1c.  if v2 != 0 then goto L4c2d22;
  #L4c2d20.  return v1;
  #L4c2d22.  v8:= (`rx.schedulers.Timestamped`) v8 @kind object;
  #L4c2d26.  v2:= v7.`rx.schedulers.Timestamped.timestampMillis` @type ^`long` @kind wide;
  #L4c2d2a.  v4:= v8.`rx.schedulers.Timestamped.timestampMillis` @type ^`long` @kind wide;
  #L4c2d2e.  v6:= lcmp(v2, v4);
  #L4c2d32.  if v6 != 0 then goto L4c2d54;
  #L4c2d36.  v2:= v7.`rx.schedulers.Timestamped.value` @type ^`java.lang.Object` @kind object;
  #L4c2d3a.  v8:= v8.`rx.schedulers.Timestamped.value` @type ^`java.lang.Object` @kind object;
  #L4c2d3e.  if v2 == v8 then goto L4c2d56;
  #L4c2d42.  if v2 == 0 then goto L4c2d54;
  #L4c2d46.  call temp:= `equals`(v2, v8) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4c2d4c.  v8:= temp;
  #L4c2d4e.  if v8 == 0 then goto L4c2d54;
  #L4c2d52.  goto L4c2d56;
  #L4c2d54.  v0:= 0I;
  #L4c2d56.  return v0;
}
procedure `long` `getTimestampMillis`(`rx.schedulers.Timestamped` v2 @kind this) @signature `Lrx/schedulers/Timestamped;.getTimestampMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c2e0c.  v0:= v2.`rx.schedulers.Timestamped.timestampMillis` @type ^`long` @kind wide;
  #L4c2e10.  return v0 @kind wide;
}
procedure `java.lang.Object` `getValue`(`rx.schedulers.Timestamped` v1 @kind this) @signature `Lrx/schedulers/Timestamped;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2dac.  v0:= v1.`rx.schedulers.Timestamped.value` @type ^`java.lang.Object` @kind object;
  #L4c2db0.  return v0 @kind object;
}
procedure `int` `hashCode`(`rx.schedulers.Timestamped` v4 @kind this) @signature `Lrx/schedulers/Timestamped;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c2d68.  v0:= v4.`rx.schedulers.Timestamped.timestampMillis` @type ^`long` @kind wide;
  #L4c2d6c.  v2:= 32I;
  #L4c2d70.  v2:= v0 ^>> v2 @kind long;
  #L4c2d74.  v0:= v0 ^~ v2 @kind long;
  #L4c2d76.  v1:= (`int`) v0 @kind l2i;
  #L4c2d78.  v0:= 31I;
  #L4c2d7c.  v1:= v1 + v0 @kind int;
  #L4c2d7e.  v1:= v1 * 31;
  #L4c2d82.  v0:= v4.`rx.schedulers.Timestamped.value` @type ^`java.lang.Object` @kind object;
  #L4c2d86.  if v0 != 0 then goto L4c2d8e;
  #L4c2d8a.  v0:= 0I;
  #L4c2d8c.  goto L4c2d96;
  #L4c2d8e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4c2d94.  v0:= temp;
  #L4c2d96.  v1:= v1 + v0 @kind int;
  #L4c2d98.  return v1;
}
procedure `java.lang.String` `toString`(`rx.schedulers.Timestamped` v3 @kind this) @signature `Lrx/schedulers/Timestamped;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c2dc4.  v0:= 2I;
  #L4c2dc6.  v0:= new `java.lang.Object`[v0];
  #L4c2dca.  v1:= v3.`rx.schedulers.Timestamped.timestampMillis` @type ^`long` @kind wide;
  #L4c2dce.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c2dd4.  v1:= temp @kind object;
  #L4c2dd6.  v2:= 0I;
  #L4c2dd8.  v0[v2]:= v1 @kind object;
  #L4c2ddc.  v1:= v3.`rx.schedulers.Timestamped.value` @type ^`java.lang.Object` @kind object;
  #L4c2de0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c2de6.  v1:= temp @kind object;
  #L4c2de8.  v2:= 1I;
  #L4c2dea.  v0[v2]:= v1 @kind object;
  #L4c2dee.  v1:= "Timestamped(timestampMillis = %d, value = %s)" @kind object;
  #L4c2df2.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4c2df8.  v0:= temp @kind object;
  #L4c2dfa.  return v0 @kind object;
}
