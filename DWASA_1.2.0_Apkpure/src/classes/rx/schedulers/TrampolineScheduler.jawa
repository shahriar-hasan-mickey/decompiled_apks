record `rx.schedulers.TrampolineScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Scheduler` @kind class {
}
procedure `void` `<init>`(`rx.schedulers.TrampolineScheduler` v2 @kind this) @signature `Lrx/schedulers/TrampolineScheduler;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4c2e58.  call `<init>`(v2) @signature `Lrx/Scheduler;.<init>:()V` @kind direct;
  #L4c2e5e.  v0:= new `java.lang.IllegalStateException`;
  #L4c2e62.  v1:= "No instances!" @kind object;
  #L4c2e66.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c2e6c.  throw v0;
}
procedure `rx.Scheduler$Worker` `createWorker`(`rx.schedulers.TrampolineScheduler` v1 @kind this) @signature `Lrx/schedulers/TrampolineScheduler;.createWorker:()Lrx/Scheduler$Worker;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c2e44.  v0:= 0I;
  #L4c2e46.  return v0 @kind object;
}
