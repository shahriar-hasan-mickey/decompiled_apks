record `rx.Completable$35` @kind class @AccessFlag  extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Completable` `rx.Completable$35.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler` `rx.Completable$35.val$scheduler` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$35` v0 @kind this, `rx.Completable` v1 @kind object, `rx.Scheduler` v2 @kind object) @signature `Lrx/Completable$35;.<init>:(Lrx/Completable;Lrx/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L488144.  v0.`rx.Completable$35.this$0` @type ^`rx.Completable` := v1 @kind object;
  #L488148.  v0.`rx.Completable$35.val$scheduler` @type ^`rx.Scheduler` := v2 @kind object;
  #L48814c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L488152.  return @kind void;
}
procedure `void` `call`(`rx.Completable$35` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$35;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L488164.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L488168.  call `call`(v0, v1) @signature `Lrx/Completable$35;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L48816e.  return @kind void;
}
procedure `void` `call`(`rx.Completable$35` v2 @kind this, `rx.CompletableSubscriber` v3 @kind object) @signature `Lrx/Completable$35;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L488180.  v0:= v2.`rx.Completable$35.this$0` @type ^`rx.Completable` @kind object;
  #L488184.  v1:= new `rx.Completable$35$1`;
  #L488188.  call `<init>`(v1, v2, v3) @signature `Lrx/Completable$35$1;.<init>:(Lrx/Completable$35;Lrx/CompletableSubscriber;)V` @kind direct;
  #L48818e.  call `unsafeSubscribe`(v0, v1) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L488194.  return @kind void;
}
