record `rx.Completable$19$1` @kind class @AccessFlag  extends `rx.CompletableSubscriber` @kind interface {
  `rx.Completable$19` `rx.Completable$19$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `rx.CompletableSubscriber` `rx.Completable$19$1.val$s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$19$1` v0 @kind this, `rx.Completable$19` v1 @kind object, `rx.CompletableSubscriber` v2 @kind object) @signature `Lrx/Completable$19$1;.<init>:(Lrx/Completable$19;Lrx/CompletableSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L487024.  v0.`rx.Completable$19$1.this$1` @type ^`rx.Completable$19` := v1 @kind object;
  #L487028.  v0.`rx.Completable$19$1.val$s` @type ^`rx.CompletableSubscriber` := v2 @kind object;
  #L48702c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L487032.  return @kind void;
}
procedure `void` `onCompleted`(`rx.Completable$19$1` v2 @kind this) @signature `Lrx/Completable$19$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L487044.  v0:= v2.`rx.Completable$19$1.this$1` @type ^`rx.Completable$19` @kind object;
  #L487048.  v0:= v0.`rx.Completable$19.val$onComplete` @type ^`rx.functions.Action0` @kind object;
  #L48704c.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L487052.  v0:= v2.`rx.Completable$19$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L487056.  call `onCompleted`(v0) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L48705c.  v0:= v2.`rx.Completable$19$1.this$1` @type ^`rx.Completable$19` @kind object;
  #L487060.  v0:= v0.`rx.Completable$19.val$onAfterComplete` @type ^`rx.functions.Action0` @kind object;
  #L487064.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L48706a.  goto L487074;
  #L48706c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48706e.  call `onError`(v0) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L487074.  return @kind void;
  #L487076.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L487078.  v1:= v2.`rx.Completable$19$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L48707c.  call `onError`(v1, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L487082.  return @kind void;
  catch `java.lang.Throwable` @[L487044..L487052] goto L487076;
  catch `java.lang.Throwable` @[L48705c..L48706a] goto L48706c;
}
procedure `void` `onError`(`rx.Completable$19$1` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lrx/Completable$19$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4870ac.  v0:= v4.`rx.Completable$19$1.this$1` @type ^`rx.Completable$19` @kind object;
  #L4870b0.  v0:= v0.`rx.Completable$19.val$onError` @type ^`rx.functions.Action1` @kind object;
  #L4870b4.  call `call`(v0, v5) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4870ba.  goto L4870e4;
  #L4870bc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4870be.  v1:= new `rx.exceptions.CompositeException`;
  #L4870c2.  v2:= 2I;
  #L4870c4.  v2:= new `java.lang.Throwable`[v2];
  #L4870c8.  v3:= 0I;
  #L4870ca.  v2[v3]:= v5 @kind object;
  #L4870ce.  v5:= 1I;
  #L4870d0.  v2[v5]:= v0 @kind object;
  #L4870d4.  call temp:= `asList`(v2) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L4870da.  v5:= temp @kind object;
  #L4870dc.  call `<init>`(v1, v5) @signature `Lrx/exceptions/CompositeException;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4870e2.  v5:= v1 @kind object;
  #L4870e4.  v0:= v4.`rx.Completable$19$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L4870e8.  call `onError`(v0, v5) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4870ee.  return @kind void;
  catch `java.lang.Throwable` @[L4870ac..L4870ba] goto L4870bc;
}
procedure `void` `onSubscribe`(`rx.Completable$19$1` v2 @kind this, `rx.Subscription` v3 @kind object) @signature `Lrx/Completable$19$1;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48710c.  v0:= v2.`rx.Completable$19$1.this$1` @type ^`rx.Completable$19` @kind object;
  #L487110.  v0:= v0.`rx.Completable$19.val$onSubscribe` @type ^`rx.functions.Action1` @kind object;
  #L487114.  call `call`(v0, v3) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L48711a.  v0:= v2.`rx.Completable$19$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L48711e.  v1:= new `rx.Completable$19$1$1`;
  #L487122.  call `<init>`(v1, v2, v3) @signature `Lrx/Completable$19$1$1;.<init>:(Lrx/Completable$19$1;Lrx/Subscription;)V` @kind direct;
  #L487128.  call temp:= `create`(v1) @signature `Lrx/subscriptions/Subscriptions;.create:(Lrx/functions/Action0;)Lrx/Subscription;` @kind static;
  #L48712e.  v3:= temp @kind object;
  #L487130.  call `onSubscribe`(v0, v3) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L487136.  return @kind void;
  #L487138.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48713a.  call `unsubscribe`(v3) @signature `Lrx/Subscription;.unsubscribe:()V` @kind interface;
  #L487140.  v3:= v2.`rx.Completable$19$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L487144.  call temp:= `unsubscribed`() @signature `Lrx/subscriptions/Subscriptions;.unsubscribed:()Lrx/Subscription;` @kind static;
  #L48714a.  v1:= temp @kind object;
  #L48714c.  call `onSubscribe`(v3, v1) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L487152.  v3:= v2.`rx.Completable$19$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L487156.  call `onError`(v3, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48715c.  return @kind void;
  catch `java.lang.Throwable` @[L48710c..L48711a] goto L487138;
}
