record `rx.math.operators.OperatorMinMax` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`rx.math.operators.OperatorMinMax` v2 @kind this) @signature `Lrx/math/operators/OperatorMinMax;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4bb998.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bb99e.  v0:= new `java.lang.IllegalStateException`;
  #L4bb9a2.  v1:= "No instances!" @kind object;
  #L4bb9a6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4bb9ac.  throw v0;
}
procedure `rx.Observable` `max`(`rx.Observable` v2 @kind object) @signature `Lrx/math/operators/OperatorMinMax;.max:(Lrx/Observable;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4bb7f0.  v0:= 1L;
  #L4bb7f4.  call temp:= `minMax`(v2, v0) @signature `Lrx/math/operators/OperatorMinMax;.minMax:(Lrx/Observable;J)Lrx/Observable;` @kind static;
  #L4bb7fa.  v2:= temp @kind object;
  #L4bb7fc.  return v2 @kind object;
}
procedure `rx.Observable` `max`(`rx.Observable` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lrx/math/operators/OperatorMinMax;.max:(Lrx/Observable;Ljava/util/Comparator;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4bb810.  v0:= 1L;
  #L4bb814.  call temp:= `minMax`(v2, v3, v0) @signature `Lrx/math/operators/OperatorMinMax;.minMax:(Lrx/Observable;Ljava/util/Comparator;J)Lrx/Observable;` @kind static;
  #L4bb81a.  v2:= temp @kind object;
  #L4bb81c.  return v2 @kind object;
}
procedure `rx.Observable` `maxBy`(`rx.Observable` v2 @kind object, `rx.functions.Func1` v3 @kind object) @signature `Lrx/math/operators/OperatorMinMax;.maxBy:(Lrx/Observable;Lrx/functions/Func1;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4bb830.  v0:= 1L;
  #L4bb834.  call temp:= `minMaxBy`(v2, v3, v0) @signature `Lrx/math/operators/OperatorMinMax;.minMaxBy:(Lrx/Observable;Lrx/functions/Func1;J)Lrx/Observable;` @kind static;
  #L4bb83a.  v2:= temp @kind object;
  #L4bb83c.  return v2 @kind object;
}
procedure `rx.Observable` `maxBy`(`rx.Observable` v2 @kind object, `rx.functions.Func1` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lrx/math/operators/OperatorMinMax;.maxBy:(Lrx/Observable;Lrx/functions/Func1;Ljava/util/Comparator;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4bb850.  v0:= 1L;
  #L4bb854.  call temp:= `minMaxBy`(v2, v3, v4, v0) @signature `Lrx/math/operators/OperatorMinMax;.minMaxBy:(Lrx/Observable;Lrx/functions/Func1;Ljava/util/Comparator;J)Lrx/Observable;` @kind static;
  #L4bb85a.  v2:= temp @kind object;
  #L4bb85c.  return v2 @kind object;
}
procedure `rx.Observable` `min`(`rx.Observable` v2 @kind object) @signature `Lrx/math/operators/OperatorMinMax;.min:(Lrx/Observable;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4bb870.  v0:= -1L;
  #L4bb874.  call temp:= `minMax`(v2, v0) @signature `Lrx/math/operators/OperatorMinMax;.minMax:(Lrx/Observable;J)Lrx/Observable;` @kind static;
  #L4bb87a.  v2:= temp @kind object;
  #L4bb87c.  return v2 @kind object;
}
procedure `rx.Observable` `min`(`rx.Observable` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lrx/math/operators/OperatorMinMax;.min:(Lrx/Observable;Ljava/util/Comparator;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4bb890.  v0:= -1L;
  #L4bb894.  call temp:= `minMax`(v2, v3, v0) @signature `Lrx/math/operators/OperatorMinMax;.minMax:(Lrx/Observable;Ljava/util/Comparator;J)Lrx/Observable;` @kind static;
  #L4bb89a.  v2:= temp @kind object;
  #L4bb89c.  return v2 @kind object;
}
procedure `rx.Observable` `minBy`(`rx.Observable` v2 @kind object, `rx.functions.Func1` v3 @kind object) @signature `Lrx/math/operators/OperatorMinMax;.minBy:(Lrx/Observable;Lrx/functions/Func1;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4bb8b0.  v0:= -1L;
  #L4bb8b4.  call temp:= `minMaxBy`(v2, v3, v0) @signature `Lrx/math/operators/OperatorMinMax;.minMaxBy:(Lrx/Observable;Lrx/functions/Func1;J)Lrx/Observable;` @kind static;
  #L4bb8ba.  v2:= temp @kind object;
  #L4bb8bc.  return v2 @kind object;
}
procedure `rx.Observable` `minBy`(`rx.Observable` v2 @kind object, `rx.functions.Func1` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lrx/math/operators/OperatorMinMax;.minBy:(Lrx/Observable;Lrx/functions/Func1;Ljava/util/Comparator;)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4bb8d0.  v0:= -1L;
  #L4bb8d4.  call temp:= `minMaxBy`(v2, v3, v4, v0) @signature `Lrx/math/operators/OperatorMinMax;.minMaxBy:(Lrx/Observable;Lrx/functions/Func1;Ljava/util/Comparator;J)Lrx/Observable;` @kind static;
  #L4bb8da.  v2:= temp @kind object;
  #L4bb8dc.  return v2 @kind object;
}
procedure `rx.Observable` `minMax`(`rx.Observable` v1 @kind object, `long` v2 ) @signature `Lrx/math/operators/OperatorMinMax;.minMax:(Lrx/Observable;J)Lrx/Observable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4bb914.  v0:= new `rx.math.operators.OperatorMinMax$1`;
  #L4bb918.  call `<init>`(v0, v2) @signature `Lrx/math/operators/OperatorMinMax$1;.<init>:(J)V` @kind direct;
  #L4bb91e.  call temp:= `reduce`(v1, v0) @signature `Lrx/Observable;.reduce:(Lrx/functions/Func2;)Lrx/Observable;` @kind virtual;
  #L4bb924.  v1:= temp @kind object;
  #L4bb926.  return v1 @kind object;
}
procedure `rx.Observable` `minMax`(`rx.Observable` v1 @kind object, `java.util.Comparator` v2 @kind object, `long` v3 ) @signature `Lrx/math/operators/OperatorMinMax;.minMax:(Lrx/Observable;Ljava/util/Comparator;J)Lrx/Observable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4bb8f0.  v0:= new `rx.math.operators.OperatorMinMax$2`;
  #L4bb8f4.  call `<init>`(v0, v3, v2) @signature `Lrx/math/operators/OperatorMinMax$2;.<init>:(JLjava/util/Comparator;)V` @kind direct;
  #L4bb8fa.  call temp:= `reduce`(v1, v0) @signature `Lrx/Observable;.reduce:(Lrx/functions/Func2;)Lrx/Observable;` @kind virtual;
  #L4bb900.  v1:= temp @kind object;
  #L4bb902.  return v1 @kind object;
}
procedure `rx.Observable` `minMaxBy`(`rx.Observable` v2 @kind object, `rx.functions.Func1` v3 @kind object, `long` v4 ) @signature `Lrx/math/operators/OperatorMinMax;.minMaxBy:(Lrx/Observable;Lrx/functions/Func1;J)Lrx/Observable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4bb968.  v0:= new `java.util.ArrayList`;
  #L4bb96c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4bb972.  v1:= new `rx.math.operators.OperatorMinMax$3`;
  #L4bb976.  call `<init>`(v1, v3, v4) @signature `Lrx/math/operators/OperatorMinMax$3;.<init>:(Lrx/functions/Func1;J)V` @kind direct;
  #L4bb97c.  call temp:= `reduce`(v2, v0, v1) @signature `Lrx/Observable;.reduce:(Ljava/lang/Object;Lrx/functions/Func2;)Lrx/Observable;` @kind virtual;
  #L4bb982.  v2:= temp @kind object;
  #L4bb984.  return v2 @kind object;
}
procedure `rx.Observable` `minMaxBy`(`rx.Observable` v2 @kind object, `rx.functions.Func1` v3 @kind object, `java.util.Comparator` v4 @kind object, `long` v5 ) @signature `Lrx/math/operators/OperatorMinMax;.minMaxBy:(Lrx/Observable;Lrx/functions/Func1;Ljava/util/Comparator;J)Lrx/Observable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4bb938.  v0:= new `java.util.ArrayList`;
  #L4bb93c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4bb942.  v1:= new `rx.math.operators.OperatorMinMax$4`;
  #L4bb946.  call `<init>`(v1, v4, v3, v5) @signature `Lrx/math/operators/OperatorMinMax$4;.<init>:(Ljava/util/Comparator;Lrx/functions/Func1;J)V` @kind direct;
  #L4bb94c.  call temp:= `reduce`(v2, v0, v1) @signature `Lrx/Observable;.reduce:(Ljava/lang/Object;Lrx/functions/Func2;)Lrx/Observable;` @kind virtual;
  #L4bb952.  v2:= temp @kind object;
  #L4bb954.  return v2 @kind object;
}
