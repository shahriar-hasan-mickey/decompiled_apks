record `rx.math.operators.OperatorMinMax$2` @kind class @AccessFlag FINAL extends `rx.functions.Func2` @kind interface {
  `java.util.Comparator` `rx.math.operators.OperatorMinMax$2.val$comparator` @AccessFlag FINAL_SYNTHETIC;
  `long` `rx.math.operators.OperatorMinMax$2.val$flag` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.math.operators.OperatorMinMax$2` v0 @kind this, `long` v1 , `java.util.Comparator` v3 @kind object) @signature `Lrx/math/operators/OperatorMinMax$2;.<init>:(JLjava/util/Comparator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bb644.  v0.`rx.math.operators.OperatorMinMax$2.val$flag` @type ^`long` := v1 @kind wide;
  #L4bb648.  v0.`rx.math.operators.OperatorMinMax$2.val$comparator` @type ^`java.util.Comparator` := v3 @kind object;
  #L4bb64c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bb652.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.math.operators.OperatorMinMax$2` v5 @kind this, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lrx/math/operators/OperatorMinMax$2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4bb60c.  v0:= v5.`rx.math.operators.OperatorMinMax$2.val$flag` @type ^`long` @kind wide;
  #L4bb610.  v2:= v5.`rx.math.operators.OperatorMinMax$2.val$comparator` @type ^`java.util.Comparator` @kind object;
  #L4bb614.  call temp:= `compare`(v2, v6, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L4bb61a.  v2:= temp;
  #L4bb61c.  v2:= (`long`) v2 @kind i2l;
  #L4bb61e.  v0:= v0 * v2 @kind long;
  #L4bb622.  v2:= 0L;
  #L4bb626.  v4:= lcmp(v0, v2);
  #L4bb62a.  if v4 <= 0 then goto L4bb630;
  #L4bb62e.  return v6 @kind object;
  #L4bb630.  return v7 @kind object;
}
