record `rx.math.operators.OperatorMinMax$4` @kind class @AccessFlag FINAL extends `rx.functions.Func2` @kind interface {
  `java.util.Comparator` `rx.math.operators.OperatorMinMax$4.val$comparator` @AccessFlag FINAL_SYNTHETIC;
  `long` `rx.math.operators.OperatorMinMax$4.val$flag` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Func1` `rx.math.operators.OperatorMinMax$4.val$selector` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.math.operators.OperatorMinMax$4` v0 @kind this, `java.util.Comparator` v1 @kind object, `rx.functions.Func1` v2 @kind object, `long` v3 ) @signature `Lrx/math/operators/OperatorMinMax$4;.<init>:(Ljava/util/Comparator;Lrx/functions/Func1;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bb7cc.  v0.`rx.math.operators.OperatorMinMax$4.val$comparator` @type ^`java.util.Comparator` := v1 @kind object;
  #L4bb7d0.  v0.`rx.math.operators.OperatorMinMax$4.val$selector` @type ^`rx.functions.Func1` := v2 @kind object;
  #L4bb7d4.  v0.`rx.math.operators.OperatorMinMax$4.val$flag` @type ^`long` := v3 @kind wide;
  #L4bb7d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bb7de.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.math.operators.OperatorMinMax$4` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lrx/math/operators/OperatorMinMax$4;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4bb728.  v1:= (`java.util.List`) v1 @kind object;
  #L4bb72c.  call temp:= `call`(v0, v1, v2) @signature `Lrx/math/operators/OperatorMinMax$4;.call:(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;` @kind virtual;
  #L4bb732.  v1:= temp @kind object;
  #L4bb734.  return v1 @kind object;
}
procedure `java.util.List` `call`(`rx.math.operators.OperatorMinMax$4` v5 @kind this, `java.util.List` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lrx/math/operators/OperatorMinMax$4;.call:(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4bb748.  call temp:= `isEmpty`(v6) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4bb74e.  v0:= temp;
  #L4bb750.  if v0 == 0 then goto L4bb75c;
  #L4bb754.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4bb75a.  goto L4bb7b8;
  #L4bb75c.  v0:= v5.`rx.math.operators.OperatorMinMax$4.val$comparator` @type ^`java.util.Comparator` @kind object;
  #L4bb760.  v1:= v5.`rx.math.operators.OperatorMinMax$4.val$selector` @type ^`rx.functions.Func1` @kind object;
  #L4bb764.  v2:= 0I;
  #L4bb766.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4bb76c.  v2:= temp @kind object;
  #L4bb76e.  call temp:= `call`(v1, v2) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4bb774.  v1:= temp @kind object;
  #L4bb776.  v2:= v5.`rx.math.operators.OperatorMinMax$4.val$selector` @type ^`rx.functions.Func1` @kind object;
  #L4bb77a.  call temp:= `call`(v2, v7) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4bb780.  v2:= temp @kind object;
  #L4bb782.  call temp:= `compare`(v0, v1, v2) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L4bb788.  v0:= temp;
  #L4bb78a.  if v0 != 0 then goto L4bb796;
  #L4bb78e.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4bb794.  goto L4bb7b8;
  #L4bb796.  v1:= v5.`rx.math.operators.OperatorMinMax$4.val$flag` @type ^`long` @kind wide;
  #L4bb79a.  v3:= (`long`) v0 @kind i2l;
  #L4bb79c.  v1:= v1 * v3 @kind long;
  #L4bb7a0.  v3:= 0L;
  #L4bb7a4.  v0:= lcmp(v1, v3);
  #L4bb7a8.  if v0 >= 0 then goto L4bb7b8;
  #L4bb7ac.  call `clear`(v6) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4bb7b2.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4bb7b8.  return v6 @kind object;
}
