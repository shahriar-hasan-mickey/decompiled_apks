record `rx.Completable$25` @kind class @AccessFlag  extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Completable` `rx.Completable$25.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Func1` `rx.Completable$25.val$predicate` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$25` v0 @kind this, `rx.Completable` v1 @kind object, `rx.functions.Func1` v2 @kind object) @signature `Lrx/Completable$25;.<init>:(Lrx/Completable;Lrx/functions/Func1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4876f8.  v0.`rx.Completable$25.this$0` @type ^`rx.Completable` := v1 @kind object;
  #L4876fc.  v0.`rx.Completable$25.val$predicate` @type ^`rx.functions.Func1` := v2 @kind object;
  #L487700.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L487706.  return @kind void;
}
procedure `void` `call`(`rx.Completable$25` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$25;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L487718.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L48771c.  call `call`(v0, v1) @signature `Lrx/Completable$25;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L487722.  return @kind void;
}
procedure `void` `call`(`rx.Completable$25` v2 @kind this, `rx.CompletableSubscriber` v3 @kind object) @signature `Lrx/Completable$25;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L487734.  v0:= v2.`rx.Completable$25.this$0` @type ^`rx.Completable` @kind object;
  #L487738.  v1:= new `rx.Completable$25$1`;
  #L48773c.  call `<init>`(v1, v2, v3) @signature `Lrx/Completable$25$1;.<init>:(Lrx/Completable$25;Lrx/CompletableSubscriber;)V` @kind direct;
  #L487742.  call `unsafeSubscribe`(v0, v1) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L487748.  return @kind void;
}
