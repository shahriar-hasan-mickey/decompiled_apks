record `rx.Completable$11` @kind class @AccessFlag FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Single` `rx.Completable$11.val$single` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$11` v0 @kind this, `rx.Single` v1 @kind object) @signature `Lrx/Completable$11;.<init>:(Lrx/Single;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4866b8.  v0.`rx.Completable$11.val$single` @type ^`rx.Single` := v1 @kind object;
  #L4866bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4866c2.  return @kind void;
}
procedure `void` `call`(`rx.Completable$11` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$11;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4866d4.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L4866d8.  call `call`(v0, v1) @signature `Lrx/Completable$11;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L4866de.  return @kind void;
}
procedure `void` `call`(`rx.Completable$11` v1 @kind this, `rx.CompletableSubscriber` v2 @kind object) @signature `Lrx/Completable$11;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4866f0.  v0:= new `rx.Completable$11$1`;
  #L4866f4.  call `<init>`(v0, v1, v2) @signature `Lrx/Completable$11$1;.<init>:(Lrx/Completable$11;Lrx/CompletableSubscriber;)V` @kind direct;
  #L4866fa.  call `onSubscribe`(v2, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L486700.  v2:= v1.`rx.Completable$11.val$single` @type ^`rx.Single` @kind object;
  #L486704.  call temp:= `subscribe`(v2, v0) @signature `Lrx/Single;.subscribe:(Lrx/SingleSubscriber;)Lrx/Subscription;` @kind virtual;
  #L48670a.  return @kind void;
}
