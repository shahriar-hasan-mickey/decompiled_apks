record `rx.observables.AsyncOnSubscribe$AsyncOuterManager$2` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.observables.AsyncOnSubscribe$AsyncOuterManager` `rx.observables.AsyncOnSubscribe$AsyncOuterManager$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.observables.AsyncOnSubscribe$AsyncOuterManager$2.val$s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.observables.AsyncOnSubscribe$AsyncOuterManager$2` v0 @kind this, `rx.observables.AsyncOnSubscribe$AsyncOuterManager` v1 @kind object, `rx.Subscriber` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOuterManager$2;.<init>:(Lrx/observables/AsyncOnSubscribe$AsyncOuterManager;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bc168.  v0.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$2.this$0` @type ^`rx.observables.AsyncOnSubscribe$AsyncOuterManager` := v1 @kind object;
  #L4bc16c.  v0.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$2.val$s` @type ^`rx.Subscriber` := v2 @kind object;
  #L4bc170.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bc176.  return @kind void;
}
procedure `void` `call`(`rx.observables.AsyncOnSubscribe$AsyncOuterManager$2` v2 @kind this) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOuterManager$2;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bc188.  v0:= v2.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$2.this$0` @type ^`rx.observables.AsyncOnSubscribe$AsyncOuterManager` @kind object;
  #L4bc18c.  v0:= v0.`rx.observables.AsyncOnSubscribe$AsyncOuterManager.subscriptions` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4bc190.  v1:= v2.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$2.val$s` @type ^`rx.Subscriber` @kind object;
  #L4bc194.  call `remove`(v0, v1) @signature `Lrx/subscriptions/CompositeSubscription;.remove:(Lrx/Subscription;)V` @kind virtual;
  #L4bc19a.  return @kind void;
}
