record `rx.observables.AsyncOnSubscribe$7` @kind class @AccessFlag  extends `rx.functions.Func1` @kind interface {
  `rx.observables.AsyncOnSubscribe` `rx.observables.AsyncOnSubscribe$7.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.observables.AsyncOnSubscribe$7` v0 @kind this, `rx.observables.AsyncOnSubscribe` v1 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$7;.<init>:(Lrx/observables/AsyncOnSubscribe;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bbf9c.  v0.`rx.observables.AsyncOnSubscribe$7.this$0` @type ^`rx.observables.AsyncOnSubscribe` := v1 @kind object;
  #L4bbfa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bbfa6.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.observables.AsyncOnSubscribe$7` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$7;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4bbf60.  v1:= (`rx.Observable`) v1 @kind object;
  #L4bbf64.  call temp:= `call`(v0, v1) @signature `Lrx/observables/AsyncOnSubscribe$7;.call:(Lrx/Observable;)Lrx/Observable;` @kind virtual;
  #L4bbf6a.  v1:= temp @kind object;
  #L4bbf6c.  return v1 @kind object;
}
procedure `rx.Observable` `call`(`rx.observables.AsyncOnSubscribe$7` v0 @kind this, `rx.Observable` v1 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$7;.call:(Lrx/Observable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;

  #L4bbf80.  call temp:= `onBackpressureBuffer`(v1) @signature `Lrx/Observable;.onBackpressureBuffer:()Lrx/Observable;` @kind virtual;
  #L4bbf86.  v1:= temp @kind object;
  #L4bbf88.  return v1 @kind object;
}
