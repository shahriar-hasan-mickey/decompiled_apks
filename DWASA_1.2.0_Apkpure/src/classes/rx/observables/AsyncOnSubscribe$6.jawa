record `rx.observables.AsyncOnSubscribe$6` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.observables.AsyncOnSubscribe` `rx.observables.AsyncOnSubscribe$6.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.observables.AsyncOnSubscribe$6.val$actualSubscriber` @AccessFlag FINAL_SYNTHETIC;
  `rx.observables.AsyncOnSubscribe$AsyncOuterManager` `rx.observables.AsyncOnSubscribe$6.val$outerProducer` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.observables.AsyncOnSubscribe$6` v0 @kind this, `rx.observables.AsyncOnSubscribe` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.observables.AsyncOnSubscribe$AsyncOuterManager` v3 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$6;.<init>:(Lrx/observables/AsyncOnSubscribe;Lrx/Subscriber;Lrx/observables/AsyncOnSubscribe$AsyncOuterManager;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bbecc.  v0.`rx.observables.AsyncOnSubscribe$6.this$0` @type ^`rx.observables.AsyncOnSubscribe` := v1 @kind object;
  #L4bbed0.  v0.`rx.observables.AsyncOnSubscribe$6.val$actualSubscriber` @type ^`rx.Subscriber` := v2 @kind object;
  #L4bbed4.  v0.`rx.observables.AsyncOnSubscribe$6.val$outerProducer` @type ^`rx.observables.AsyncOnSubscribe$AsyncOuterManager` := v3 @kind object;
  #L4bbed8.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4bbede.  return @kind void;
}
procedure `void` `onCompleted`(`rx.observables.AsyncOnSubscribe$6` v1 @kind this) @signature `Lrx/observables/AsyncOnSubscribe$6;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bbef0.  v0:= v1.`rx.observables.AsyncOnSubscribe$6.val$actualSubscriber` @type ^`rx.Subscriber` @kind object;
  #L4bbef4.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4bbefa.  return @kind void;
}
procedure `void` `onError`(`rx.observables.AsyncOnSubscribe$6` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$6;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bbf0c.  v0:= v1.`rx.observables.AsyncOnSubscribe$6.val$actualSubscriber` @type ^`rx.Subscriber` @kind object;
  #L4bbf10.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bbf16.  return @kind void;
}
procedure `void` `onNext`(`rx.observables.AsyncOnSubscribe$6` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$6;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bbf28.  v0:= v1.`rx.observables.AsyncOnSubscribe$6.val$actualSubscriber` @type ^`rx.Subscriber` @kind object;
  #L4bbf2c.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4bbf32.  return @kind void;
}
procedure `void` `setProducer`(`rx.observables.AsyncOnSubscribe$6` v1 @kind this, `rx.Producer` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$6;.setProducer:(Lrx/Producer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bbf44.  v0:= v1.`rx.observables.AsyncOnSubscribe$6.val$outerProducer` @type ^`rx.observables.AsyncOnSubscribe$AsyncOuterManager` @kind object;
  #L4bbf48.  call `setConcatProducer`(v0, v2) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOuterManager;.setConcatProducer:(Lrx/Producer;)V` @kind virtual;
  #L4bbf4e.  return @kind void;
}
