record `rx.observables.AsyncOnSubscribe$AsyncOuterManager$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `long` `rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.remaining` @AccessFlag ;
  `rx.observables.AsyncOnSubscribe$AsyncOuterManager` `rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.operators.BufferUntilSubscriber` `rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.val$buffer` @AccessFlag FINAL_SYNTHETIC;
  `long` `rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.val$expected` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1` v0 @kind this, `rx.observables.AsyncOnSubscribe$AsyncOuterManager` v1 @kind object, `long` v2 , `rx.internal.operators.BufferUntilSubscriber` v4 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOuterManager$1;.<init>:(Lrx/observables/AsyncOnSubscribe$AsyncOuterManager;JLrx/internal/operators/BufferUntilSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bc0bc.  v0.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.this$0` @type ^`rx.observables.AsyncOnSubscribe$AsyncOuterManager` := v1 @kind object;
  #L4bc0c0.  v0.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.val$expected` @type ^`long` := v2 @kind wide;
  #L4bc0c4.  v0.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.val$buffer` @type ^`rx.internal.operators.BufferUntilSubscriber` := v4 @kind object;
  #L4bc0c8.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4bc0ce.  v1:= v0.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.val$expected` @type ^`long` @kind wide;
  #L4bc0d2.  v0.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.remaining` @type ^`long` := v1 @kind wide;
  #L4bc0d6.  return @kind void;
}
procedure `void` `onCompleted`(`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1` v5 @kind this) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOuterManager$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4bc0e8.  v0:= v5.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.val$buffer` @type ^`rx.internal.operators.BufferUntilSubscriber` @kind object;
  #L4bc0ec.  call `onCompleted`(v0) @signature `Lrx/internal/operators/BufferUntilSubscriber;.onCompleted:()V` @kind virtual;
  #L4bc0f2.  v0:= v5.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.remaining` @type ^`long` @kind wide;
  #L4bc0f6.  v2:= 0L;
  #L4bc0fa.  v4:= lcmp(v0, v2);
  #L4bc0fe.  if v4 <= 0 then goto L4bc10c;
  #L4bc102.  v2:= v5.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.this$0` @type ^`rx.observables.AsyncOnSubscribe$AsyncOuterManager` @kind object;
  #L4bc106.  call `requestRemaining`(v2, v0) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOuterManager;.requestRemaining:(J)V` @kind virtual;
  #L4bc10c.  return @kind void;
}
procedure `void` `onError`(`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOuterManager$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bc120.  v0:= v1.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.val$buffer` @type ^`rx.internal.operators.BufferUntilSubscriber` @kind object;
  #L4bc124.  call `onError`(v0, v2) @signature `Lrx/internal/operators/BufferUntilSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bc12a.  return @kind void;
}
procedure `void` `onNext`(`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOuterManager$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4bc13c.  v0:= v4.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.remaining` @type ^`long` @kind wide;
  #L4bc140.  v2:= 1L;
  #L4bc144.  v0:= v0 - v2 @kind long;
  #L4bc146.  v4.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.remaining` @type ^`long` := v0 @kind wide;
  #L4bc14a.  v0:= v4.`rx.observables.AsyncOnSubscribe$AsyncOuterManager$1.val$buffer` @type ^`rx.internal.operators.BufferUntilSubscriber` @kind object;
  #L4bc14e.  call `onNext`(v0, v5) @signature `Lrx/internal/operators/BufferUntilSubscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4bc154.  return @kind void;
}
