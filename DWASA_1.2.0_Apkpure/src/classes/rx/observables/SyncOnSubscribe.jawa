record `rx.observables.SyncOnSubscribe` @kind class @AccessFlag PUBLIC_ABSTRACT extends `rx.Observable$OnSubscribe` @kind interface {
}
procedure `void` `<init>`(`rx.observables.SyncOnSubscribe` v0 @kind this) @signature `Lrx/observables/SyncOnSubscribe;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4be1d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4be1de.  return @kind void;
}
procedure `rx.observables.SyncOnSubscribe` `createSingleState`(`rx.functions.Func0` v1 @kind object, `rx.functions.Action2` v2 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.createSingleState:(Lrx/functions/Func0;Lrx/functions/Action2;)Lrx/observables/SyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4be0f8.  v0:= new `rx.observables.SyncOnSubscribe$1`;
  #L4be0fc.  call `<init>`(v0, v2) @signature `Lrx/observables/SyncOnSubscribe$1;.<init>:(Lrx/functions/Action2;)V` @kind direct;
  #L4be102.  v2:= new `rx.observables.SyncOnSubscribe$SyncOnSubscribeImpl`;
  #L4be106.  call `<init>`(v2, v1, v0) @signature `Lrx/observables/SyncOnSubscribe$SyncOnSubscribeImpl;.<init>:(Lrx/functions/Func0;Lrx/functions/Func2;)V` @kind direct;
  #L4be10c.  return v2 @kind object;
}
procedure `rx.observables.SyncOnSubscribe` `createSingleState`(`rx.functions.Func0` v1 @kind object, `rx.functions.Action2` v2 @kind object, `rx.functions.Action1` v3 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.createSingleState:(Lrx/functions/Func0;Lrx/functions/Action2;Lrx/functions/Action1;)Lrx/observables/SyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4be120.  v0:= new `rx.observables.SyncOnSubscribe$2`;
  #L4be124.  call `<init>`(v0, v2) @signature `Lrx/observables/SyncOnSubscribe$2;.<init>:(Lrx/functions/Action2;)V` @kind direct;
  #L4be12a.  v2:= new `rx.observables.SyncOnSubscribe$SyncOnSubscribeImpl`;
  #L4be12e.  call `<init>`(v2, v1, v0, v3) @signature `Lrx/observables/SyncOnSubscribe$SyncOnSubscribeImpl;.<init>:(Lrx/functions/Func0;Lrx/functions/Func2;Lrx/functions/Action1;)V` @kind direct;
  #L4be134.  return v2 @kind object;
}
procedure `rx.observables.SyncOnSubscribe` `createStateful`(`rx.functions.Func0` v1 @kind object, `rx.functions.Func2` v2 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.createStateful:(Lrx/functions/Func0;Lrx/functions/Func2;)Lrx/observables/SyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4be148.  v0:= new `rx.observables.SyncOnSubscribe$SyncOnSubscribeImpl`;
  #L4be14c.  call `<init>`(v0, v1, v2) @signature `Lrx/observables/SyncOnSubscribe$SyncOnSubscribeImpl;.<init>:(Lrx/functions/Func0;Lrx/functions/Func2;)V` @kind direct;
  #L4be152.  return v0 @kind object;
}
procedure `rx.observables.SyncOnSubscribe` `createStateful`(`rx.functions.Func0` v1 @kind object, `rx.functions.Func2` v2 @kind object, `rx.functions.Action1` v3 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.createStateful:(Lrx/functions/Func0;Lrx/functions/Func2;Lrx/functions/Action1;)Lrx/observables/SyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4be164.  v0:= new `rx.observables.SyncOnSubscribe$SyncOnSubscribeImpl`;
  #L4be168.  call `<init>`(v0, v1, v2, v3) @signature `Lrx/observables/SyncOnSubscribe$SyncOnSubscribeImpl;.<init>:(Lrx/functions/Func0;Lrx/functions/Func2;Lrx/functions/Action1;)V` @kind direct;
  #L4be16e.  return v0 @kind object;
}
procedure `rx.observables.SyncOnSubscribe` `createStateless`(`rx.functions.Action1` v1 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.createStateless:(Lrx/functions/Action1;)Lrx/observables/SyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4be180.  v0:= new `rx.observables.SyncOnSubscribe$3`;
  #L4be184.  call `<init>`(v0, v1) @signature `Lrx/observables/SyncOnSubscribe$3;.<init>:(Lrx/functions/Action1;)V` @kind direct;
  #L4be18a.  v1:= new `rx.observables.SyncOnSubscribe$SyncOnSubscribeImpl`;
  #L4be18e.  call `<init>`(v1, v0) @signature `Lrx/observables/SyncOnSubscribe$SyncOnSubscribeImpl;.<init>:(Lrx/functions/Func2;)V` @kind direct;
  #L4be194.  return v1 @kind object;
}
procedure `rx.observables.SyncOnSubscribe` `createStateless`(`rx.functions.Action1` v1 @kind object, `rx.functions.Action0` v2 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.createStateless:(Lrx/functions/Action1;Lrx/functions/Action0;)Lrx/observables/SyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4be1a8.  v0:= new `rx.observables.SyncOnSubscribe$4`;
  #L4be1ac.  call `<init>`(v0, v1) @signature `Lrx/observables/SyncOnSubscribe$4;.<init>:(Lrx/functions/Action1;)V` @kind direct;
  #L4be1b2.  v1:= new `rx.observables.SyncOnSubscribe$5`;
  #L4be1b6.  call `<init>`(v1, v2) @signature `Lrx/observables/SyncOnSubscribe$5;.<init>:(Lrx/functions/Action0;)V` @kind direct;
  #L4be1bc.  v2:= new `rx.observables.SyncOnSubscribe$SyncOnSubscribeImpl`;
  #L4be1c0.  call `<init>`(v2, v0, v1) @signature `Lrx/observables/SyncOnSubscribe$SyncOnSubscribeImpl;.<init>:(Lrx/functions/Func2;Lrx/functions/Action1;)V` @kind direct;
  #L4be1c6.  return v2 @kind object;
}
procedure `void` `call`(`rx.observables.SyncOnSubscribe` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4be1f0.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4be1f4.  call `call`(v0, v1) @signature `Lrx/observables/SyncOnSubscribe;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L4be1fa.  return @kind void;
}
procedure `void` `call`(`rx.observables.SyncOnSubscribe` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4be20c.  call temp:= `generateState`(v2) @signature `Lrx/observables/SyncOnSubscribe;.generateState:()Ljava/lang/Object;` @kind virtual;
  #L4be212.  v0:= temp @kind object;
  #L4be214.  v1:= new `rx.observables.SyncOnSubscribe$SubscriptionProducer`;
  #L4be218.  call `<init>`(v1, v3, v2, v0) @signature `Lrx/observables/SyncOnSubscribe$SubscriptionProducer;.<init>:(Lrx/Subscriber;Lrx/observables/SyncOnSubscribe;Ljava/lang/Object;)V` @kind direct;
  #L4be21e.  call `add`(v3, v1) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4be224.  call `setProducer`(v3, v1) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4be22a.  return @kind void;
  #L4be22c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4be22e.  call `throwIfFatal`(v0) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4be234.  call `onError`(v3, v0) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4be23a.  return @kind void;
  catch `java.lang.Throwable` @[L4be20c..L4be214] goto L4be22c;
}
procedure `java.lang.Object` `generateState`() @signature `Lrx/observables/SyncOnSubscribe;.generateState:()Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `next`(`java.lang.Object` v0 @kind object, `rx.Observer` v1 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.next:(Ljava/lang/Object;Lrx/Observer;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `onUnsubscribe`(`rx.observables.SyncOnSubscribe` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/observables/SyncOnSubscribe;.onUnsubscribe:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L4be258.  return @kind void;
}
