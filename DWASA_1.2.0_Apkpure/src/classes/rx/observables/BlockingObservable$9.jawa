record `rx.observables.BlockingObservable$9` @kind class @AccessFlag  extends `rx.Observer` @kind interface {
  `rx.observables.BlockingObservable` `rx.observables.BlockingObservable$9.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action0` `rx.observables.BlockingObservable$9.val$onCompleted` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.observables.BlockingObservable$9.val$onError` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.observables.BlockingObservable$9.val$onNext` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.observables.BlockingObservable$9` v0 @kind this, `rx.observables.BlockingObservable` v1 @kind object, `rx.functions.Action1` v2 @kind object, `rx.functions.Action1` v3 @kind object, `rx.functions.Action0` v4 @kind object) @signature `Lrx/observables/BlockingObservable$9;.<init>:(Lrx/observables/BlockingObservable;Lrx/functions/Action1;Lrx/functions/Action1;Lrx/functions/Action0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bce1c.  v0.`rx.observables.BlockingObservable$9.this$0` @type ^`rx.observables.BlockingObservable` := v1 @kind object;
  #L4bce20.  v0.`rx.observables.BlockingObservable$9.val$onNext` @type ^`rx.functions.Action1` := v2 @kind object;
  #L4bce24.  v0.`rx.observables.BlockingObservable$9.val$onError` @type ^`rx.functions.Action1` := v3 @kind object;
  #L4bce28.  v0.`rx.observables.BlockingObservable$9.val$onCompleted` @type ^`rx.functions.Action0` := v4 @kind object;
  #L4bce2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bce32.  return @kind void;
}
procedure `void` `onCompleted`(`rx.observables.BlockingObservable$9` v1 @kind this) @signature `Lrx/observables/BlockingObservable$9;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bce44.  v0:= v1.`rx.observables.BlockingObservable$9.val$onCompleted` @type ^`rx.functions.Action0` @kind object;
  #L4bce48.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L4bce4e.  return @kind void;
}
procedure `void` `onError`(`rx.observables.BlockingObservable$9` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/observables/BlockingObservable$9;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bce60.  v0:= v1.`rx.observables.BlockingObservable$9.val$onError` @type ^`rx.functions.Action1` @kind object;
  #L4bce64.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4bce6a.  return @kind void;
}
procedure `void` `onNext`(`rx.observables.BlockingObservable$9` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/observables/BlockingObservable$9;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bce7c.  v0:= v1.`rx.observables.BlockingObservable$9.val$onNext` @type ^`rx.functions.Action1` @kind object;
  #L4bce80.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4bce86.  return @kind void;
}
