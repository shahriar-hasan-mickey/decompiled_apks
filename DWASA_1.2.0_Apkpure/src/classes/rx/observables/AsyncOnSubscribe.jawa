record `rx.observables.AsyncOnSubscribe` @kind class @AccessFlag PUBLIC_ABSTRACT extends `rx.Observable$OnSubscribe` @kind interface {
}
procedure `void` `<init>`(`rx.observables.AsyncOnSubscribe` v0 @kind this) @signature `Lrx/observables/AsyncOnSubscribe;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bc990.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bc996.  return @kind void;
}
procedure `rx.observables.AsyncOnSubscribe` `createSingleState`(`rx.functions.Func0` v1 @kind object, `rx.functions.Action3` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.createSingleState:(Lrx/functions/Func0;Lrx/functions/Action3;)Lrx/observables/AsyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4bc8b0.  v0:= new `rx.observables.AsyncOnSubscribe$1`;
  #L4bc8b4.  call `<init>`(v0, v2) @signature `Lrx/observables/AsyncOnSubscribe$1;.<init>:(Lrx/functions/Action3;)V` @kind direct;
  #L4bc8ba.  v2:= new `rx.observables.AsyncOnSubscribe$AsyncOnSubscribeImpl`;
  #L4bc8be.  call `<init>`(v2, v1, v0) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOnSubscribeImpl;.<init>:(Lrx/functions/Func0;Lrx/functions/Func3;)V` @kind direct;
  #L4bc8c4.  return v2 @kind object;
}
procedure `rx.observables.AsyncOnSubscribe` `createSingleState`(`rx.functions.Func0` v1 @kind object, `rx.functions.Action3` v2 @kind object, `rx.functions.Action1` v3 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.createSingleState:(Lrx/functions/Func0;Lrx/functions/Action3;Lrx/functions/Action1;)Lrx/observables/AsyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4bc8d8.  v0:= new `rx.observables.AsyncOnSubscribe$2`;
  #L4bc8dc.  call `<init>`(v0, v2) @signature `Lrx/observables/AsyncOnSubscribe$2;.<init>:(Lrx/functions/Action3;)V` @kind direct;
  #L4bc8e2.  v2:= new `rx.observables.AsyncOnSubscribe$AsyncOnSubscribeImpl`;
  #L4bc8e6.  call `<init>`(v2, v1, v0, v3) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOnSubscribeImpl;.<init>:(Lrx/functions/Func0;Lrx/functions/Func3;Lrx/functions/Action1;)V` @kind direct;
  #L4bc8ec.  return v2 @kind object;
}
procedure `rx.observables.AsyncOnSubscribe` `createStateful`(`rx.functions.Func0` v1 @kind object, `rx.functions.Func3` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.createStateful:(Lrx/functions/Func0;Lrx/functions/Func3;)Lrx/observables/AsyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4bc900.  v0:= new `rx.observables.AsyncOnSubscribe$AsyncOnSubscribeImpl`;
  #L4bc904.  call `<init>`(v0, v1, v2) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOnSubscribeImpl;.<init>:(Lrx/functions/Func0;Lrx/functions/Func3;)V` @kind direct;
  #L4bc90a.  return v0 @kind object;
}
procedure `rx.observables.AsyncOnSubscribe` `createStateful`(`rx.functions.Func0` v1 @kind object, `rx.functions.Func3` v2 @kind object, `rx.functions.Action1` v3 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.createStateful:(Lrx/functions/Func0;Lrx/functions/Func3;Lrx/functions/Action1;)Lrx/observables/AsyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4bc91c.  v0:= new `rx.observables.AsyncOnSubscribe$AsyncOnSubscribeImpl`;
  #L4bc920.  call `<init>`(v0, v1, v2, v3) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOnSubscribeImpl;.<init>:(Lrx/functions/Func0;Lrx/functions/Func3;Lrx/functions/Action1;)V` @kind direct;
  #L4bc926.  return v0 @kind object;
}
procedure `rx.observables.AsyncOnSubscribe` `createStateless`(`rx.functions.Action2` v1 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.createStateless:(Lrx/functions/Action2;)Lrx/observables/AsyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4bc938.  v0:= new `rx.observables.AsyncOnSubscribe$3`;
  #L4bc93c.  call `<init>`(v0, v1) @signature `Lrx/observables/AsyncOnSubscribe$3;.<init>:(Lrx/functions/Action2;)V` @kind direct;
  #L4bc942.  v1:= new `rx.observables.AsyncOnSubscribe$AsyncOnSubscribeImpl`;
  #L4bc946.  call `<init>`(v1, v0) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOnSubscribeImpl;.<init>:(Lrx/functions/Func3;)V` @kind direct;
  #L4bc94c.  return v1 @kind object;
}
procedure `rx.observables.AsyncOnSubscribe` `createStateless`(`rx.functions.Action2` v1 @kind object, `rx.functions.Action0` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.createStateless:(Lrx/functions/Action2;Lrx/functions/Action0;)Lrx/observables/AsyncOnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4bc960.  v0:= new `rx.observables.AsyncOnSubscribe$4`;
  #L4bc964.  call `<init>`(v0, v1) @signature `Lrx/observables/AsyncOnSubscribe$4;.<init>:(Lrx/functions/Action2;)V` @kind direct;
  #L4bc96a.  v1:= new `rx.observables.AsyncOnSubscribe$5`;
  #L4bc96e.  call `<init>`(v1, v2) @signature `Lrx/observables/AsyncOnSubscribe$5;.<init>:(Lrx/functions/Action0;)V` @kind direct;
  #L4bc974.  v2:= new `rx.observables.AsyncOnSubscribe$AsyncOnSubscribeImpl`;
  #L4bc978.  call `<init>`(v2, v0, v1) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOnSubscribeImpl;.<init>:(Lrx/functions/Func3;Lrx/functions/Action1;)V` @kind direct;
  #L4bc97e.  return v2 @kind object;
}
procedure `void` `call`(`rx.observables.AsyncOnSubscribe` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4bc9a8.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4bc9ac.  call `call`(v0, v1) @signature `Lrx/observables/AsyncOnSubscribe;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L4bc9b2.  return @kind void;
}
procedure `void` `call`(`rx.observables.AsyncOnSubscribe` v4 @kind this, `rx.Subscriber` v5 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4bc9c4.  call temp:= `generateState`(v4) @signature `Lrx/observables/AsyncOnSubscribe;.generateState:()Ljava/lang/Object;` @kind virtual;
  #L4bc9ca.  v0:= temp @kind object;
  #L4bc9cc.  call temp:= `create`() @signature `Lrx/observables/AsyncOnSubscribe$UnicastSubject;.create:()Lrx/observables/AsyncOnSubscribe$UnicastSubject;` @kind static;
  #L4bc9d2.  v1:= temp @kind object;
  #L4bc9d4.  v2:= new `rx.observables.AsyncOnSubscribe$AsyncOuterManager`;
  #L4bc9d8.  call `<init>`(v2, v4, v0, v1) @signature `Lrx/observables/AsyncOnSubscribe$AsyncOuterManager;.<init>:(Lrx/observables/AsyncOnSubscribe;Ljava/lang/Object;Lrx/observables/AsyncOnSubscribe$UnicastSubject;)V` @kind direct;
  #L4bc9de.  v0:= new `rx.observables.AsyncOnSubscribe$6`;
  #L4bc9e2.  call `<init>`(v0, v4, v5, v2) @signature `Lrx/observables/AsyncOnSubscribe$6;.<init>:(Lrx/observables/AsyncOnSubscribe;Lrx/Subscriber;Lrx/observables/AsyncOnSubscribe$AsyncOuterManager;)V` @kind direct;
  #L4bc9e8.  call temp:= `onBackpressureBuffer`(v1) @signature `Lrx/observables/AsyncOnSubscribe$UnicastSubject;.onBackpressureBuffer:()Lrx/Observable;` @kind virtual;
  #L4bc9ee.  v1:= temp @kind object;
  #L4bc9f0.  v3:= new `rx.observables.AsyncOnSubscribe$7`;
  #L4bc9f4.  call `<init>`(v3, v4) @signature `Lrx/observables/AsyncOnSubscribe$7;.<init>:(Lrx/observables/AsyncOnSubscribe;)V` @kind direct;
  #L4bc9fa.  call temp:= `concatMap`(v1, v3) @signature `Lrx/Observable;.concatMap:(Lrx/functions/Func1;)Lrx/Observable;` @kind virtual;
  #L4bca00.  v1:= temp @kind object;
  #L4bca02.  call temp:= `unsafeSubscribe`(v1, v0) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4bca08.  call `add`(v5, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4bca0e.  call `add`(v5, v2) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4bca14.  call `setProducer`(v5, v2) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4bca1a.  return @kind void;
  #L4bca1c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bca1e.  call `onError`(v5, v0) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bca24.  return @kind void;
  catch `java.lang.Throwable` @[L4bc9c4..L4bc9cc] goto L4bca1c;
}
procedure `java.lang.Object` `generateState`() @signature `Lrx/observables/AsyncOnSubscribe;.generateState:()Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `next`(`java.lang.Object` v0 @kind object, `long` v1 , `rx.Observer` v3 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.next:(Ljava/lang/Object;JLrx/Observer;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `onUnsubscribe`(`rx.observables.AsyncOnSubscribe` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/observables/AsyncOnSubscribe;.onUnsubscribe:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L4bca44.  return @kind void;
}
