record `rx.observables.GroupedObservable$1` @kind class @AccessFlag FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.Observable` `rx.observables.GroupedObservable$1.val$o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.observables.GroupedObservable$1` v0 @kind this, `rx.Observable` v1 @kind object) @signature `Lrx/observables/GroupedObservable$1;.<init>:(Lrx/Observable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bd6a0.  v0.`rx.observables.GroupedObservable$1.val$o` @type ^`rx.Observable` := v1 @kind object;
  #L4bd6a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bd6aa.  return @kind void;
}
procedure `void` `call`(`rx.observables.GroupedObservable$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/observables/GroupedObservable$1;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4bd6bc.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4bd6c0.  call `call`(v0, v1) @signature `Lrx/observables/GroupedObservable$1;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L4bd6c6.  return @kind void;
}
procedure `void` `call`(`rx.observables.GroupedObservable$1` v1 @kind this, `rx.Subscriber` v2 @kind object) @signature `Lrx/observables/GroupedObservable$1;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bd6d8.  v0:= v1.`rx.observables.GroupedObservable$1.val$o` @type ^`rx.Observable` @kind object;
  #L4bd6dc.  call temp:= `unsafeSubscribe`(v0, v2) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4bd6e2.  return @kind void;
}
