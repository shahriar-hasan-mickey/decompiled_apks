record `rx.observables.AsyncOnSubscribe$UnicastSubject` @kind class @AccessFlag FINAL extends `rx.Observable` @kind class, `rx.Observer` @kind interface {
  `rx.observables.AsyncOnSubscribe$UnicastSubject$State` `rx.observables.AsyncOnSubscribe$UnicastSubject.state` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.observables.AsyncOnSubscribe$UnicastSubject` v0 @kind this, `rx.observables.AsyncOnSubscribe$UnicastSubject$State` v1 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$UnicastSubject;.<init>:(Lrx/observables/AsyncOnSubscribe$UnicastSubject$State;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L4bc834.  call `<init>`(v0, v1) @signature `Lrx/Observable;.<init>:(Lrx/Observable$OnSubscribe;)V` @kind direct;
  #L4bc83a.  v0.`rx.observables.AsyncOnSubscribe$UnicastSubject.state` @type ^`rx.observables.AsyncOnSubscribe$UnicastSubject$State` := v1 @kind object;
  #L4bc83e.  return @kind void;
}
procedure `rx.observables.AsyncOnSubscribe$UnicastSubject` `create`() @signature `Lrx/observables/AsyncOnSubscribe$UnicastSubject;.create:()Lrx/observables/AsyncOnSubscribe$UnicastSubject;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4bc80c.  v0:= new `rx.observables.AsyncOnSubscribe$UnicastSubject`;
  #L4bc810.  v1:= new `rx.observables.AsyncOnSubscribe$UnicastSubject$State`;
  #L4bc814.  call `<init>`(v1) @signature `Lrx/observables/AsyncOnSubscribe$UnicastSubject$State;.<init>:()V` @kind direct;
  #L4bc81a.  call `<init>`(v0, v1) @signature `Lrx/observables/AsyncOnSubscribe$UnicastSubject;.<init>:(Lrx/observables/AsyncOnSubscribe$UnicastSubject$State;)V` @kind direct;
  #L4bc820.  return v0 @kind object;
}
procedure `void` `onCompleted`(`rx.observables.AsyncOnSubscribe$UnicastSubject` v1 @kind this) @signature `Lrx/observables/AsyncOnSubscribe$UnicastSubject;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bc850.  v0:= v1.`rx.observables.AsyncOnSubscribe$UnicastSubject.state` @type ^`rx.observables.AsyncOnSubscribe$UnicastSubject$State` @kind object;
  #L4bc854.  v0:= v0.`rx.observables.AsyncOnSubscribe$UnicastSubject$State.subscriber` @type ^`rx.Subscriber` @kind object;
  #L4bc858.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4bc85e.  return @kind void;
}
procedure `void` `onError`(`rx.observables.AsyncOnSubscribe$UnicastSubject` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$UnicastSubject;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bc870.  v0:= v1.`rx.observables.AsyncOnSubscribe$UnicastSubject.state` @type ^`rx.observables.AsyncOnSubscribe$UnicastSubject$State` @kind object;
  #L4bc874.  v0:= v0.`rx.observables.AsyncOnSubscribe$UnicastSubject$State.subscriber` @type ^`rx.Subscriber` @kind object;
  #L4bc878.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bc87e.  return @kind void;
}
procedure `void` `onNext`(`rx.observables.AsyncOnSubscribe$UnicastSubject` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/observables/AsyncOnSubscribe$UnicastSubject;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bc890.  v0:= v1.`rx.observables.AsyncOnSubscribe$UnicastSubject.state` @type ^`rx.observables.AsyncOnSubscribe$UnicastSubject$State` @kind object;
  #L4bc894.  v0:= v0.`rx.observables.AsyncOnSubscribe$UnicastSubject$State.subscriber` @type ^`rx.Subscriber` @kind object;
  #L4bc898.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4bc89e.  return @kind void;
}
