record `rx.observers.SerializedObserver$FastList` @kind class @AccessFlag FINAL {
  `java.lang.Object`[] `rx.observers.SerializedObserver$FastList.array` @AccessFlag ;
  `int` `rx.observers.SerializedObserver$FastList.size` @AccessFlag ;
}
procedure `void` `<init>`(`rx.observers.SerializedObserver$FastList` v0 @kind this) @signature `Lrx/observers/SerializedObserver$FastList;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bead0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bead6.  return @kind void;
}
procedure `void` `add`(`rx.observers.SerializedObserver$FastList` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lrx/observers/SerializedObserver$FastList;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4beae8.  v0:= v4.`rx.observers.SerializedObserver$FastList.size` @type ^`int`;
  #L4beaec.  v1:= v4.`rx.observers.SerializedObserver$FastList.array` @type ^`java.lang.Object`[] @kind object;
  #L4beaf0.  if v1 != 0 then goto L4beb02;
  #L4beaf4.  v1:= 16I;
  #L4beaf8.  v1:= new `java.lang.Object`[v1];
  #L4beafc.  v4.`rx.observers.SerializedObserver$FastList.array` @type ^`java.lang.Object`[] := v1 @kind object;
  #L4beb00.  goto L4beb20;
  #L4beb02.  v2:= length @variable v1;
  #L4beb04.  if v0 != v2 then goto L4beb20;
  #L4beb08.  v2:= v0 ^> 2;
  #L4beb0c.  v2:= v2 + v0 @kind int;
  #L4beb0e.  v2:= new `java.lang.Object`[v2];
  #L4beb12.  v3:= 0I;
  #L4beb14.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4beb1a.  v4.`rx.observers.SerializedObserver$FastList.array` @type ^`java.lang.Object`[] := v2 @kind object;
  #L4beb1e.  v1:= v2 @kind object;
  #L4beb20.  v1[v0]:= v5 @kind object;
  #L4beb24.  v0:= v0 + 1;
  #L4beb28.  v4.`rx.observers.SerializedObserver$FastList.size` @type ^`int` := v0;
  #L4beb2c.  return @kind void;
}
