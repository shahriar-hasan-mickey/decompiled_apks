record `rx.observers.Subscribers$2` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `rx.functions.Action1` `rx.observers.Subscribers$2.val$onNext` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.observers.Subscribers$2` v0 @kind this, `rx.functions.Action1` v1 @kind object) @signature `Lrx/observers/Subscribers$2;.<init>:(Lrx/functions/Action1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4beeb4.  v0.`rx.observers.Subscribers$2.val$onNext` @type ^`rx.functions.Action1` := v1 @kind object;
  #L4beeb8.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4beebe.  return @kind void;
}
procedure `void` `onCompleted`(`rx.observers.Subscribers$2` v0 @kind this) @signature `Lrx/observers/Subscribers$2;.onCompleted:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4beed0.  return @kind void;
}
procedure `void` `onError`(`rx.observers.Subscribers$2` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/observers/Subscribers$2;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4beee4.  v0:= new `rx.exceptions.OnErrorNotImplementedException`;
  #L4beee8.  call `<init>`(v0, v2) @signature `Lrx/exceptions/OnErrorNotImplementedException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4beeee.  throw v0;
}
procedure `void` `onNext`(`rx.observers.Subscribers$2` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/observers/Subscribers$2;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4bef00.  v0:= v1.`rx.observers.Subscribers$2.val$onNext` @type ^`rx.functions.Action1` @kind object;
  #L4bef04.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4bef0a.  return @kind void;
}
