record `rx.observers.Subscribers$5` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `rx.Subscriber` `rx.observers.Subscribers$5.val$subscriber` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.observers.Subscribers$5` v0 @kind this, `rx.Subscriber` v1 @kind object, `rx.Subscriber` v2 @kind object) @signature `Lrx/observers/Subscribers$5;.<init>:(Lrx/Subscriber;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bf000.  v0.`rx.observers.Subscribers$5.val$subscriber` @type ^`rx.Subscriber` := v2 @kind object;
  #L4bf004.  call `<init>`(v0, v1) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4bf00a.  return @kind void;
}
procedure `void` `onCompleted`(`rx.observers.Subscribers$5` v1 @kind this) @signature `Lrx/observers/Subscribers$5;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf01c.  v0:= v1.`rx.observers.Subscribers$5.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4bf020.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4bf026.  return @kind void;
}
procedure `void` `onError`(`rx.observers.Subscribers$5` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/observers/Subscribers$5;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf038.  v0:= v1.`rx.observers.Subscribers$5.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4bf03c.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bf042.  return @kind void;
}
procedure `void` `onNext`(`rx.observers.Subscribers$5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/observers/Subscribers$5;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4bf054.  v0:= v1.`rx.observers.Subscribers$5.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4bf058.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4bf05e.  return @kind void;
}
