record `rx.observers.Observers$4` @kind class @AccessFlag FINAL extends `rx.Observer` @kind interface {
  `rx.functions.Action0` `rx.observers.Observers$4.val$onComplete` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.observers.Observers$4.val$onError` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action1` `rx.observers.Observers$4.val$onNext` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.observers.Observers$4` v0 @kind this, `rx.functions.Action0` v1 @kind object, `rx.functions.Action1` v2 @kind object, `rx.functions.Action1` v3 @kind object) @signature `Lrx/observers/Observers$4;.<init>:(Lrx/functions/Action0;Lrx/functions/Action1;Lrx/functions/Action1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4be52c.  v0.`rx.observers.Observers$4.val$onComplete` @type ^`rx.functions.Action0` := v1 @kind object;
  #L4be530.  v0.`rx.observers.Observers$4.val$onError` @type ^`rx.functions.Action1` := v2 @kind object;
  #L4be534.  v0.`rx.observers.Observers$4.val$onNext` @type ^`rx.functions.Action1` := v3 @kind object;
  #L4be538.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4be53e.  return @kind void;
}
procedure `void` `onCompleted`(`rx.observers.Observers$4` v1 @kind this) @signature `Lrx/observers/Observers$4;.onCompleted:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4be550.  v0:= v1.`rx.observers.Observers$4.val$onComplete` @type ^`rx.functions.Action0` @kind object;
  #L4be554.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L4be55a.  return @kind void;
}
procedure `void` `onError`(`rx.observers.Observers$4` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/observers/Observers$4;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4be56c.  v0:= v1.`rx.observers.Observers$4.val$onError` @type ^`rx.functions.Action1` @kind object;
  #L4be570.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4be576.  return @kind void;
}
procedure `void` `onNext`(`rx.observers.Observers$4` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/observers/Observers$4;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4be588.  v0:= v1.`rx.observers.Observers$4.val$onNext` @type ^`rx.functions.Action1` @kind object;
  #L4be58c.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4be592.  return @kind void;
}
