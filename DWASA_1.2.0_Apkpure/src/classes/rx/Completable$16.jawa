record `rx.Completable$16` @kind class @AccessFlag  extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Completable` `rx.Completable$16.this$0` @AccessFlag FINAL_SYNTHETIC;
  `long` `rx.Completable$16.val$delay` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `rx.Completable$16.val$delayError` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler` `rx.Completable$16.val$scheduler` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.TimeUnit` `rx.Completable$16.val$unit` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$16` v0 @kind this, `rx.Completable` v1 @kind object, `rx.Scheduler` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `boolean` v6 ) @signature `Lrx/Completable$16;.<init>:(Lrx/Completable;Lrx/Scheduler;JLjava/util/concurrent/TimeUnit;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L486e90.  v0.`rx.Completable$16.this$0` @type ^`rx.Completable` := v1 @kind object;
  #L486e94.  v0.`rx.Completable$16.val$scheduler` @type ^`rx.Scheduler` := v2 @kind object;
  #L486e98.  v0.`rx.Completable$16.val$delay` @type ^`long` := v3 @kind wide;
  #L486e9c.  v0.`rx.Completable$16.val$unit` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L486ea0.  v0.`rx.Completable$16.val$delayError` @type ^`boolean` := v6 @kind boolean;
  #L486ea4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486eaa.  return @kind void;
}
procedure `void` `call`(`rx.Completable$16` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$16;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L486ebc.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L486ec0.  call `call`(v0, v1) @signature `Lrx/Completable$16;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L486ec6.  return @kind void;
}
procedure `void` `call`(`rx.Completable$16` v4 @kind this, `rx.CompletableSubscriber` v5 @kind object) @signature `Lrx/Completable$16;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L486ed8.  v0:= new `rx.subscriptions.CompositeSubscription`;
  #L486edc.  call `<init>`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.<init>:()V` @kind direct;
  #L486ee2.  v1:= v4.`rx.Completable$16.val$scheduler` @type ^`rx.Scheduler` @kind object;
  #L486ee6.  call temp:= `createWorker`(v1) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L486eec.  v1:= temp @kind object;
  #L486eee.  call `add`(v0, v1) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L486ef4.  v2:= v4.`rx.Completable$16.this$0` @type ^`rx.Completable` @kind object;
  #L486ef8.  v3:= new `rx.Completable$16$1`;
  #L486efc.  call `<init>`(v3, v4, v0, v1, v5) @signature `Lrx/Completable$16$1;.<init>:(Lrx/Completable$16;Lrx/subscriptions/CompositeSubscription;Lrx/Scheduler$Worker;Lrx/CompletableSubscriber;)V` @kind direct;
  #L486f02.  call `unsafeSubscribe`(v2, v3) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L486f08.  return @kind void;
}
