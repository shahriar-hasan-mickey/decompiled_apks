record `rx.Completable$28` @kind class @AccessFlag  extends `rx.CompletableSubscriber` @kind interface {
  `boolean` `rx.Completable$28.done` @AccessFlag ;
  `rx.Completable` `rx.Completable$28.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.subscriptions.MultipleAssignmentSubscription` `rx.Completable$28.val$mad` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action0` `rx.Completable$28.val$onComplete` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$28` v0 @kind this, `rx.Completable` v1 @kind object, `rx.functions.Action0` v2 @kind object, `rx.subscriptions.MultipleAssignmentSubscription` v3 @kind object) @signature `Lrx/Completable$28;.<init>:(Lrx/Completable;Lrx/functions/Action0;Lrx/subscriptions/MultipleAssignmentSubscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4879d0.  v0.`rx.Completable$28.this$0` @type ^`rx.Completable` := v1 @kind object;
  #L4879d4.  v0.`rx.Completable$28.val$onComplete` @type ^`rx.functions.Action0` := v2 @kind object;
  #L4879d8.  v0.`rx.Completable$28.val$mad` @type ^`rx.subscriptions.MultipleAssignmentSubscription` := v3 @kind object;
  #L4879dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4879e2.  return @kind void;
}
procedure `void` `onCompleted`(`rx.Completable$28` v2 @kind this) @signature `Lrx/Completable$28;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4879f4.  v0:= v2.`rx.Completable$28.done` @type ^`boolean` @kind boolean;
  #L4879f8.  if v0 != 0 then goto L487a36;
  #L4879fc.  v0:= 1I;
  #L4879fe.  v2.`rx.Completable$28.done` @type ^`boolean` := v0 @kind boolean;
  #L487a02.  v0:= v2.`rx.Completable$28.val$onComplete` @type ^`rx.functions.Action0` @kind object;
  #L487a06.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L487a0c.  v0:= v2.`rx.Completable$28.val$mad` @type ^`rx.subscriptions.MultipleAssignmentSubscription` @kind object;
  #L487a10.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.unsubscribe:()V` @kind virtual;
  #L487a16.  goto L487a36;
  #L487a18.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L487a1a.  call `onError`(v0) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L487a20.  call `deliverUncaughtException`(v0) @signature `Lrx/Completable;.deliverUncaughtException:(Ljava/lang/Throwable;)V` @kind static;
  #L487a26.  goto L487a0c;
  #L487a28.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L487a2a.  v1:= v2.`rx.Completable$28.val$mad` @type ^`rx.subscriptions.MultipleAssignmentSubscription` @kind object;
  #L487a2e.  call `unsubscribe`(v1) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.unsubscribe:()V` @kind virtual;
  #L487a34.  throw v0;
  #L487a36.  return @kind void;
  catch `java.lang.Throwable` @[L487a02..L487a0c] goto L487a18;
  catch `java.lang.Throwable` @[L487a1a..L487a26] goto L487a28;
}
procedure `void` `onError`(`rx.Completable$28` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/Completable$28;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487a60.  call `onError`(v2) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L487a66.  v0:= v1.`rx.Completable$28.val$mad` @type ^`rx.subscriptions.MultipleAssignmentSubscription` @kind object;
  #L487a6a.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.unsubscribe:()V` @kind virtual;
  #L487a70.  call `deliverUncaughtException`(v2) @signature `Lrx/Completable;.deliverUncaughtException:(Ljava/lang/Throwable;)V` @kind static;
  #L487a76.  return @kind void;
}
procedure `void` `onSubscribe`(`rx.Completable$28` v1 @kind this, `rx.Subscription` v2 @kind object) @signature `Lrx/Completable$28;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487a88.  v0:= v1.`rx.Completable$28.val$mad` @type ^`rx.subscriptions.MultipleAssignmentSubscription` @kind object;
  #L487a8c.  call `set`(v0, v2) @signature `Lrx/subscriptions/MultipleAssignmentSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L487a92.  return @kind void;
}
