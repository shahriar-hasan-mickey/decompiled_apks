record `rx.Completable$33$1` @kind class @AccessFlag  extends `rx.CompletableSubscriber` @kind interface {
  `rx.Completable$33` `rx.Completable$33$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `rx.SingleSubscriber` `rx.Completable$33$1.val$s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$33$1` v0 @kind this, `rx.Completable$33` v1 @kind object, `rx.SingleSubscriber` v2 @kind object) @signature `Lrx/Completable$33$1;.<init>:(Lrx/Completable$33;Lrx/SingleSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L487ea8.  v0.`rx.Completable$33$1.this$1` @type ^`rx.Completable$33` := v1 @kind object;
  #L487eac.  v0.`rx.Completable$33$1.val$s` @type ^`rx.SingleSubscriber` := v2 @kind object;
  #L487eb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L487eb6.  return @kind void;
}
procedure `void` `onCompleted`(`rx.Completable$33$1` v3 @kind this) @signature `Lrx/Completable$33$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L487ec8.  v0:= v3.`rx.Completable$33$1.this$1` @type ^`rx.Completable$33` @kind object;
  #L487ecc.  v0:= v0.`rx.Completable$33.val$completionValueFunc0` @type ^`rx.functions.Func0` @kind object;
  #L487ed0.  call temp:= `call`(v0) @signature `Lrx/functions/Func0;.call:()Ljava/lang/Object;` @kind interface;
  #L487ed6.  v0:= temp @kind object;
  #L487ed8.  if v0 != 0 then goto L487ef6;
  #L487edc.  v0:= v3.`rx.Completable$33$1.val$s` @type ^`rx.SingleSubscriber` @kind object;
  #L487ee0.  v1:= new `java.lang.NullPointerException`;
  #L487ee4.  v2:= "The value supplied is null" @kind object;
  #L487ee8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L487eee.  call `onError`(v0, v1) @signature `Lrx/SingleSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L487ef4.  goto L487f00;
  #L487ef6.  v1:= v3.`rx.Completable$33$1.val$s` @type ^`rx.SingleSubscriber` @kind object;
  #L487efa.  call `onSuccess`(v1, v0) @signature `Lrx/SingleSubscriber;.onSuccess:(Ljava/lang/Object;)V` @kind virtual;
  #L487f00.  return @kind void;
  #L487f02.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L487f04.  v1:= v3.`rx.Completable$33$1.val$s` @type ^`rx.SingleSubscriber` @kind object;
  #L487f08.  call `onError`(v1, v0) @signature `Lrx/SingleSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L487f0e.  return @kind void;
  catch `java.lang.Throwable` @[L487ec8..L487ed8] goto L487f02;
}
procedure `void` `onError`(`rx.Completable$33$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/Completable$33$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487f2c.  v0:= v1.`rx.Completable$33$1.val$s` @type ^`rx.SingleSubscriber` @kind object;
  #L487f30.  call `onError`(v0, v2) @signature `Lrx/SingleSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L487f36.  return @kind void;
}
procedure `void` `onSubscribe`(`rx.Completable$33$1` v1 @kind this, `rx.Subscription` v2 @kind object) @signature `Lrx/Completable$33$1;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487f48.  v0:= v1.`rx.Completable$33$1.val$s` @type ^`rx.SingleSubscriber` @kind object;
  #L487f4c.  call `add`(v0, v2) @signature `Lrx/SingleSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L487f52.  return @kind void;
}
