record `rx.internal.util.UtilityFunctions$AlwaysTrue` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `rx.functions.Func1` @kind interface {
}
global `rx.internal.util.UtilityFunctions$AlwaysTrue`[] `@@rx.internal.util.UtilityFunctions$AlwaysTrue.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `rx.internal.util.UtilityFunctions$AlwaysTrue` `@@rx.internal.util.UtilityFunctions$AlwaysTrue.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lrx/internal/util/UtilityFunctions$AlwaysTrue;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4b7aa4.  v0:= new `rx.internal.util.UtilityFunctions$AlwaysTrue`;
  #L4b7aa8.  v1:= 0I;
  #L4b7aaa.  v2:= "INSTANCE" @kind object;
  #L4b7aae.  call `<init>`(v0, v2, v1) @signature `Lrx/internal/util/UtilityFunctions$AlwaysTrue;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b7ab4.  `@@rx.internal.util.UtilityFunctions$AlwaysTrue.INSTANCE` @type ^`rx.internal.util.UtilityFunctions$AlwaysTrue` := v0 @kind object;
  #L4b7ab8.  v0:= 1I;
  #L4b7aba.  v0:= new `rx.internal.util.UtilityFunctions$AlwaysTrue`[v0];
  #L4b7abe.  v2:= `@@rx.internal.util.UtilityFunctions$AlwaysTrue.INSTANCE` @type ^`rx.internal.util.UtilityFunctions$AlwaysTrue` @kind object;
  #L4b7ac2.  v0[v1]:= v2 @kind object;
  #L4b7ac6.  `@@rx.internal.util.UtilityFunctions$AlwaysTrue.$VALUES` @type ^`rx.internal.util.UtilityFunctions$AlwaysTrue`[] := v0 @kind object;
  #L4b7aca.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.UtilityFunctions$AlwaysTrue` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lrx/internal/util/UtilityFunctions$AlwaysTrue;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4b7adc.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b7ae2.  return @kind void;
}
procedure `rx.internal.util.UtilityFunctions$AlwaysTrue` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lrx/internal/util/UtilityFunctions$AlwaysTrue;.valueOf:(Ljava/lang/String;)Lrx/internal/util/UtilityFunctions$AlwaysTrue;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b7a5c.  v0:= constclass @type ^`rx.internal.util.UtilityFunctions$AlwaysTrue` @kind object;
  #L4b7a60.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4b7a66.  v1:= temp @kind object;
  #L4b7a68.  v1:= (`rx.internal.util.UtilityFunctions$AlwaysTrue`) v1 @kind object;
  #L4b7a6c.  return v1 @kind object;
}
procedure `rx.internal.util.UtilityFunctions$AlwaysTrue`[] `values`() @signature `Lrx/internal/util/UtilityFunctions$AlwaysTrue;.values:()[Lrx/internal/util/UtilityFunctions$AlwaysTrue;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b7a80.  v0:= `@@rx.internal.util.UtilityFunctions$AlwaysTrue.$VALUES` @type ^`rx.internal.util.UtilityFunctions$AlwaysTrue`[] @kind object;
  #L4b7a84.  call temp:= `clone`(v0) @signature `[Lrx/internal/util/UtilityFunctions$AlwaysTrue;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4b7a8a.  v0:= temp @kind object;
  #L4b7a8c.  v0:= (`rx.internal.util.UtilityFunctions$AlwaysTrue`[]) v0 @kind object;
  #L4b7a90.  return v0 @kind object;
}
procedure `java.lang.Boolean` `call`(`rx.internal.util.UtilityFunctions$AlwaysTrue` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/UtilityFunctions$AlwaysTrue;.call:(Ljava/lang/Object;)Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;

  #L4b7a24.  v1:= 1I;
  #L4b7a26.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4b7a2c.  v1:= temp @kind object;
  #L4b7a2e.  return v1 @kind object;
}
procedure `java.lang.Object` `call`(`rx.internal.util.UtilityFunctions$AlwaysTrue` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/UtilityFunctions$AlwaysTrue;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b7a40.  call temp:= `call`(v0, v1) @signature `Lrx/internal/util/UtilityFunctions$AlwaysTrue;.call:(Ljava/lang/Object;)Ljava/lang/Boolean;` @kind virtual;
  #L4b7a46.  v1:= temp @kind object;
  #L4b7a48.  return v1 @kind object;
}
