record `rx.internal.util.ActionNotificationObserver` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observer` @kind interface {
  `rx.functions.Action1` `rx.internal.util.ActionNotificationObserver.onNotification` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.util.ActionNotificationObserver` v0 @kind this, `rx.functions.Action1` v1 @kind object) @signature `Lrx/internal/util/ActionNotificationObserver;.<init>:(Lrx/functions/Action1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b42b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b42b6.  v0.`rx.internal.util.ActionNotificationObserver.onNotification` @type ^`rx.functions.Action1` := v1 @kind object;
  #L4b42ba.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.util.ActionNotificationObserver` v2 @kind this) @signature `Lrx/internal/util/ActionNotificationObserver;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b42cc.  v0:= v2.`rx.internal.util.ActionNotificationObserver.onNotification` @type ^`rx.functions.Action1` @kind object;
  #L4b42d0.  call temp:= `createOnCompleted`() @signature `Lrx/Notification;.createOnCompleted:()Lrx/Notification;` @kind static;
  #L4b42d6.  v1:= temp @kind object;
  #L4b42d8.  call `call`(v0, v1) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4b42de.  return @kind void;
}
procedure `void` `onError`(`rx.internal.util.ActionNotificationObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/util/ActionNotificationObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b42f0.  v0:= v1.`rx.internal.util.ActionNotificationObserver.onNotification` @type ^`rx.functions.Action1` @kind object;
  #L4b42f4.  call temp:= `createOnError`(v2) @signature `Lrx/Notification;.createOnError:(Ljava/lang/Throwable;)Lrx/Notification;` @kind static;
  #L4b42fa.  v2:= temp @kind object;
  #L4b42fc.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4b4302.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.util.ActionNotificationObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/util/ActionNotificationObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4314.  v0:= v1.`rx.internal.util.ActionNotificationObserver.onNotification` @type ^`rx.functions.Action1` @kind object;
  #L4b4318.  call temp:= `createOnNext`(v2) @signature `Lrx/Notification;.createOnNext:(Ljava/lang/Object;)Lrx/Notification;` @kind static;
  #L4b431e.  v2:= temp @kind object;
  #L4b4320.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4b4326.  return @kind void;
}
