record `rx.internal.util.InternalObservableUtils$ReplaySupplierTime` @kind class @AccessFlag FINAL extends `rx.functions.Func0` @kind interface {
  `int` `rx.internal.util.InternalObservableUtils$ReplaySupplierTime.bufferSize` @AccessFlag PRIVATE_FINAL;
  `rx.Scheduler` `rx.internal.util.InternalObservableUtils$ReplaySupplierTime.scheduler` @AccessFlag PRIVATE_FINAL;
  `rx.Observable` `rx.internal.util.InternalObservableUtils$ReplaySupplierTime.source` @AccessFlag PRIVATE_FINAL;
  `long` `rx.internal.util.InternalObservableUtils$ReplaySupplierTime.time` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.TimeUnit` `rx.internal.util.InternalObservableUtils$ReplaySupplierTime.unit` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.internal.util.InternalObservableUtils$ReplaySupplierTime` v0 @kind this, `rx.Observable` v1 @kind object, `int` v2 , `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `rx.Scheduler` v6 @kind object) @signature `Lrx/internal/util/InternalObservableUtils$ReplaySupplierTime;.<init>:(Lrx/Observable;IJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b54e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b54ee.  v0.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.time` @type ^`long` := v3 @kind wide;
  #L4b54f2.  v0.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.unit` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L4b54f6.  v0.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.scheduler` @type ^`rx.Scheduler` := v6 @kind object;
  #L4b54fa.  v0.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.bufferSize` @type ^`int` := v2;
  #L4b54fe.  v0.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.source` @type ^`rx.Observable` := v1 @kind object;
  #L4b5502.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.util.InternalObservableUtils$ReplaySupplierTime` v1 @kind this) @signature `Lrx/internal/util/InternalObservableUtils$ReplaySupplierTime;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4b549c.  call temp:= `call`(v1) @signature `Lrx/internal/util/InternalObservableUtils$ReplaySupplierTime;.call:()Lrx/observables/ConnectableObservable;` @kind virtual;
  #L4b54a2.  v0:= temp @kind object;
  #L4b54a4.  return v0 @kind object;
}
procedure `rx.observables.ConnectableObservable` `call`(`rx.internal.util.InternalObservableUtils$ReplaySupplierTime` v6 @kind this) @signature `Lrx/internal/util/InternalObservableUtils$ReplaySupplierTime;.call:()Lrx/observables/ConnectableObservable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b54b8.  v0:= v6.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.source` @type ^`rx.Observable` @kind object;
  #L4b54bc.  v1:= v6.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.bufferSize` @type ^`int`;
  #L4b54c0.  v2:= v6.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.time` @type ^`long` @kind wide;
  #L4b54c4.  v4:= v6.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4b54c8.  v5:= v6.`rx.internal.util.InternalObservableUtils$ReplaySupplierTime.scheduler` @type ^`rx.Scheduler` @kind object;
  #L4b54cc.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lrx/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/observables/ConnectableObservable;` @kind virtual;
  #L4b54d2.  v0:= temp @kind object;
  #L4b54d4.  return v0 @kind object;
}
