record `rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe` @kind class @AccessFlag FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.functions.Func1` `rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe.onSchedule` @AccessFlag FINAL;
  `java.lang.Object` `rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe.value` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe` v0 @kind this, `java.lang.Object` v1 @kind object, `rx.functions.Func1` v2 @kind object) @signature `Lrx/internal/util/ScalarSynchronousObservable$ScalarAsyncOnSubscribe;.<init>:(Ljava/lang/Object;Lrx/functions/Func1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b6a64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b6a6a.  v0.`rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe.value` @type ^`java.lang.Object` := v1 @kind object;
  #L4b6a6e.  v0.`rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe.onSchedule` @type ^`rx.functions.Func1` := v2 @kind object;
  #L4b6a72.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/ScalarSynchronousObservable$ScalarAsyncOnSubscribe;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b6a84.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4b6a88.  call `call`(v0, v1) @signature `Lrx/internal/util/ScalarSynchronousObservable$ScalarAsyncOnSubscribe;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L4b6a8e.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe` v3 @kind this, `rx.Subscriber` v4 @kind object) @signature `Lrx/internal/util/ScalarSynchronousObservable$ScalarAsyncOnSubscribe;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b6aa0.  v0:= new `rx.internal.util.ScalarSynchronousObservable$ScalarAsyncProducer`;
  #L4b6aa4.  v1:= v3.`rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe.value` @type ^`java.lang.Object` @kind object;
  #L4b6aa8.  v2:= v3.`rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe.onSchedule` @type ^`rx.functions.Func1` @kind object;
  #L4b6aac.  call `<init>`(v0, v4, v1, v2) @signature `Lrx/internal/util/ScalarSynchronousObservable$ScalarAsyncProducer;.<init>:(Lrx/Subscriber;Ljava/lang/Object;Lrx/functions/Func1;)V` @kind direct;
  #L4b6ab2.  call `setProducer`(v4, v0) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4b6ab8.  return @kind void;
}
