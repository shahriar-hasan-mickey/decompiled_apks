record `rx.internal.util.RxRingBuffer$1` @kind class @AccessFlag FINAL extends `rx.internal.util.ObjectPool` @kind class {
}
procedure `void` `<init>`(`rx.internal.util.RxRingBuffer$1` v0 @kind this) @signature `Lrx/internal/util/RxRingBuffer$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b6240.  call `<init>`(v0) @signature `Lrx/internal/util/ObjectPool;.<init>:()V` @kind direct;
  #L4b6246.  return @kind void;
}
procedure `java.lang.Object` `createObject`(`rx.internal.util.RxRingBuffer$1` v1 @kind this) @signature `Lrx/internal/util/RxRingBuffer$1;.createObject:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L4b6204.  call temp:= `createObject`(v1) @signature `Lrx/internal/util/RxRingBuffer$1;.createObject:()Lrx/internal/util/unsafe/SpscArrayQueue;` @kind virtual;
  #L4b620a.  v0:= temp @kind object;
  #L4b620c.  return v0 @kind object;
}
procedure `rx.internal.util.unsafe.SpscArrayQueue` `createObject`(`rx.internal.util.RxRingBuffer$1` v2 @kind this) @signature `Lrx/internal/util/RxRingBuffer$1;.createObject:()Lrx/internal/util/unsafe/SpscArrayQueue;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4b6220.  v0:= new `rx.internal.util.unsafe.SpscArrayQueue`;
  #L4b6224.  v1:= `@@rx.internal.util.RxRingBuffer.SIZE` @type ^`int`;
  #L4b6228.  call `<init>`(v0, v1) @signature `Lrx/internal/util/unsafe/SpscArrayQueue;.<init>:(I)V` @kind direct;
  #L4b622e.  return v0 @kind object;
}
