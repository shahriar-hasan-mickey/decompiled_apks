record `rx.internal.util.ScalarSynchronousSingle$1` @kind class @AccessFlag  extends `rx.Single$OnSubscribe` @kind interface {
  `java.lang.Object` `rx.internal.util.ScalarSynchronousSingle$1.val$t` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.util.ScalarSynchronousSingle$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle$1;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b6e2c.  v0.`rx.internal.util.ScalarSynchronousSingle$1.val$t` @type ^`java.lang.Object` := v1 @kind object;
  #L4b6e30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b6e36.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.ScalarSynchronousSingle$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle$1;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b6e48.  v1:= (`rx.SingleSubscriber`) v1 @kind object;
  #L4b6e4c.  call `call`(v0, v1) @signature `Lrx/internal/util/ScalarSynchronousSingle$1;.call:(Lrx/SingleSubscriber;)V` @kind virtual;
  #L4b6e52.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.ScalarSynchronousSingle$1` v1 @kind this, `rx.SingleSubscriber` v2 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle$1;.call:(Lrx/SingleSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b6e64.  v0:= v1.`rx.internal.util.ScalarSynchronousSingle$1.val$t` @type ^`java.lang.Object` @kind object;
  #L4b6e68.  call `onSuccess`(v2, v0) @signature `Lrx/SingleSubscriber;.onSuccess:(Ljava/lang/Object;)V` @kind virtual;
  #L4b6e6e.  return @kind void;
}
