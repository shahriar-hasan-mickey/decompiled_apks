record `rx.internal.util.InternalObservableUtils$ErrorNotImplementedAction` @kind class @AccessFlag FINAL extends `rx.functions.Action1` @kind interface {
}
procedure `void` `<init>`(`rx.internal.util.InternalObservableUtils$ErrorNotImplementedAction` v0 @kind this) @signature `Lrx/internal/util/InternalObservableUtils$ErrorNotImplementedAction;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b50d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b50de.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.InternalObservableUtils$ErrorNotImplementedAction` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/InternalObservableUtils$ErrorNotImplementedAction;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b50f0.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L4b50f4.  call `call`(v0, v1) @signature `Lrx/internal/util/InternalObservableUtils$ErrorNotImplementedAction;.call:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b50fa.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.InternalObservableUtils$ErrorNotImplementedAction` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/util/InternalObservableUtils$ErrorNotImplementedAction;.call:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b510c.  v0:= new `rx.exceptions.OnErrorNotImplementedException`;
  #L4b5110.  call `<init>`(v0, v2) @signature `Lrx/exceptions/OnErrorNotImplementedException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4b5116.  throw v0;
}
