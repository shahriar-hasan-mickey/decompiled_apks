record `rx.internal.util.InternalObservableUtils$PlusOneLongFunc2` @kind class @AccessFlag FINAL extends `rx.functions.Func2` @kind interface {
}
procedure `void` `<init>`(`rx.internal.util.InternalObservableUtils$PlusOneLongFunc2` v0 @kind this) @signature `Lrx/internal/util/InternalObservableUtils$PlusOneLongFunc2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b52f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b52f6.  return @kind void;
}
procedure `java.lang.Long` `call`(`rx.internal.util.InternalObservableUtils$PlusOneLongFunc2` v2 @kind this, `java.lang.Long` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lrx/internal/util/InternalObservableUtils$PlusOneLongFunc2;.call:(Ljava/lang/Long;Ljava/lang/Object;)Ljava/lang/Long;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b52a8.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4b52ae.  v3:= temp @kind wide;
  #L4b52b0.  v0:= 1L;
  #L4b52b4.  v3:= v3 + v0 @kind long;
  #L4b52b6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4b52bc.  v3:= temp @kind object;
  #L4b52be.  return v3 @kind object;
}
procedure `java.lang.Object` `call`(`rx.internal.util.InternalObservableUtils$PlusOneLongFunc2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/util/InternalObservableUtils$PlusOneLongFunc2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b52d0.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4b52d4.  call temp:= `call`(v0, v1, v2) @signature `Lrx/internal/util/InternalObservableUtils$PlusOneLongFunc2;.call:(Ljava/lang/Long;Ljava/lang/Object;)Ljava/lang/Long;` @kind virtual;
  #L4b52da.  v1:= temp @kind object;
  #L4b52dc.  return v1 @kind object;
}
