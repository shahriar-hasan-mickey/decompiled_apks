record `rx.internal.util.ScalarSynchronousObservable$2` @kind class @AccessFlag  extends `rx.functions.Func1` @kind interface {
  `rx.internal.util.ScalarSynchronousObservable` `rx.internal.util.ScalarSynchronousObservable$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler` `rx.internal.util.ScalarSynchronousObservable$2.val$scheduler` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.util.ScalarSynchronousObservable$2` v0 @kind this, `rx.internal.util.ScalarSynchronousObservable` v1 @kind object, `rx.Scheduler` v2 @kind object) @signature `Lrx/internal/util/ScalarSynchronousObservable$2;.<init>:(Lrx/internal/util/ScalarSynchronousObservable;Lrx/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b6954.  v0.`rx.internal.util.ScalarSynchronousObservable$2.this$0` @type ^`rx.internal.util.ScalarSynchronousObservable` := v1 @kind object;
  #L4b6958.  v0.`rx.internal.util.ScalarSynchronousObservable$2.val$scheduler` @type ^`rx.Scheduler` := v2 @kind object;
  #L4b695c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b6962.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.util.ScalarSynchronousObservable$2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/ScalarSynchronousObservable$2;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b6904.  v1:= (`rx.functions.Action0`) v1 @kind object;
  #L4b6908.  call temp:= `call`(v0, v1) @signature `Lrx/internal/util/ScalarSynchronousObservable$2;.call:(Lrx/functions/Action0;)Lrx/Subscription;` @kind virtual;
  #L4b690e.  v1:= temp @kind object;
  #L4b6910.  return v1 @kind object;
}
procedure `rx.Subscription` `call`(`rx.internal.util.ScalarSynchronousObservable$2` v2 @kind this, `rx.functions.Action0` v3 @kind object) @signature `Lrx/internal/util/ScalarSynchronousObservable$2;.call:(Lrx/functions/Action0;)Lrx/Subscription;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b6924.  v0:= v2.`rx.internal.util.ScalarSynchronousObservable$2.val$scheduler` @type ^`rx.Scheduler` @kind object;
  #L4b6928.  call temp:= `createWorker`(v0) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L4b692e.  v0:= temp @kind object;
  #L4b6930.  v1:= new `rx.internal.util.ScalarSynchronousObservable$2$1`;
  #L4b6934.  call `<init>`(v1, v2, v3, v0) @signature `Lrx/internal/util/ScalarSynchronousObservable$2$1;.<init>:(Lrx/internal/util/ScalarSynchronousObservable$2;Lrx/functions/Action0;Lrx/Scheduler$Worker;)V` @kind direct;
  #L4b693a.  call temp:= `schedule`(v0, v1) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;)Lrx/Subscription;` @kind virtual;
  #L4b6940.  return v0 @kind object;
}
