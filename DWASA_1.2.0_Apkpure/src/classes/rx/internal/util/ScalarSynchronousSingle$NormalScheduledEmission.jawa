record `rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission` @kind class @AccessFlag FINAL extends `rx.Single$OnSubscribe` @kind interface {
  `rx.Scheduler` `rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission.scheduler` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission` v0 @kind this, `rx.Scheduler` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle$NormalScheduledEmission;.<init>:(Lrx/Scheduler;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b6fdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b6fe2.  v0.`rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission.scheduler` @type ^`rx.Scheduler` := v1 @kind object;
  #L4b6fe6.  v0.`rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission.value` @type ^`java.lang.Object` := v2 @kind object;
  #L4b6fea.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle$NormalScheduledEmission;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b6ffc.  v1:= (`rx.SingleSubscriber`) v1 @kind object;
  #L4b7000.  call `call`(v0, v1) @signature `Lrx/internal/util/ScalarSynchronousSingle$NormalScheduledEmission;.call:(Lrx/SingleSubscriber;)V` @kind virtual;
  #L4b7006.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission` v3 @kind this, `rx.SingleSubscriber` v4 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle$NormalScheduledEmission;.call:(Lrx/SingleSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b7018.  v0:= v3.`rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission.scheduler` @type ^`rx.Scheduler` @kind object;
  #L4b701c.  call temp:= `createWorker`(v0) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L4b7022.  v0:= temp @kind object;
  #L4b7024.  call `add`(v4, v0) @signature `Lrx/SingleSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4b702a.  v1:= new `rx.internal.util.ScalarSynchronousSingle$ScalarSynchronousSingleAction`;
  #L4b702e.  v2:= v3.`rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission.value` @type ^`java.lang.Object` @kind object;
  #L4b7032.  call `<init>`(v1, v4, v2) @signature `Lrx/internal/util/ScalarSynchronousSingle$ScalarSynchronousSingleAction;.<init>:(Lrx/SingleSubscriber;Ljava/lang/Object;)V` @kind direct;
  #L4b7038.  call temp:= `schedule`(v0, v1) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;)Lrx/Subscription;` @kind virtual;
  #L4b703e.  return @kind void;
}
