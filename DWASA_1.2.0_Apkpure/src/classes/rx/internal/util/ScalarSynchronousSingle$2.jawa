record `rx.internal.util.ScalarSynchronousSingle$2` @kind class @AccessFlag  extends `rx.Single$OnSubscribe` @kind interface {
  `rx.internal.util.ScalarSynchronousSingle` `rx.internal.util.ScalarSynchronousSingle$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Func1` `rx.internal.util.ScalarSynchronousSingle$2.val$func` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.util.ScalarSynchronousSingle$2` v0 @kind this, `rx.internal.util.ScalarSynchronousSingle` v1 @kind object, `rx.functions.Func1` v2 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle$2;.<init>:(Lrx/internal/util/ScalarSynchronousSingle;Lrx/functions/Func1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b6ed8.  v0.`rx.internal.util.ScalarSynchronousSingle$2.this$0` @type ^`rx.internal.util.ScalarSynchronousSingle` := v1 @kind object;
  #L4b6edc.  v0.`rx.internal.util.ScalarSynchronousSingle$2.val$func` @type ^`rx.functions.Func1` := v2 @kind object;
  #L4b6ee0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b6ee6.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.ScalarSynchronousSingle$2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle$2;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b6ef8.  v1:= (`rx.SingleSubscriber`) v1 @kind object;
  #L4b6efc.  call `call`(v0, v1) @signature `Lrx/internal/util/ScalarSynchronousSingle$2;.call:(Lrx/SingleSubscriber;)V` @kind virtual;
  #L4b6f02.  return @kind void;
}
procedure `void` `call`(`rx.internal.util.ScalarSynchronousSingle$2` v2 @kind this, `rx.SingleSubscriber` v3 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle$2;.call:(Lrx/SingleSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b6f14.  v0:= v2.`rx.internal.util.ScalarSynchronousSingle$2.val$func` @type ^`rx.functions.Func1` @kind object;
  #L4b6f18.  v1:= v2.`rx.internal.util.ScalarSynchronousSingle$2.this$0` @type ^`rx.internal.util.ScalarSynchronousSingle` @kind object;
  #L4b6f1c.  v1:= v1.`rx.internal.util.ScalarSynchronousSingle.value` @type ^`java.lang.Object` @kind object;
  #L4b6f20.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4b6f26.  v0:= temp @kind object;
  #L4b6f28.  v0:= (`rx.Single`) v0 @kind object;
  #L4b6f2c.  v1:= instanceof @variable v0 @type ^`rx.internal.util.ScalarSynchronousSingle` @kind boolean;
  #L4b6f30.  if v1 == 0 then goto L4b6f44;
  #L4b6f34.  v0:= (`rx.internal.util.ScalarSynchronousSingle`) v0 @kind object;
  #L4b6f38.  v0:= v0.`rx.internal.util.ScalarSynchronousSingle.value` @type ^`java.lang.Object` @kind object;
  #L4b6f3c.  call `onSuccess`(v3, v0) @signature `Lrx/SingleSubscriber;.onSuccess:(Ljava/lang/Object;)V` @kind virtual;
  #L4b6f42.  goto L4b6f5a;
  #L4b6f44.  v1:= new `rx.internal.util.ScalarSynchronousSingle$2$1`;
  #L4b6f48.  call `<init>`(v1, v2, v3) @signature `Lrx/internal/util/ScalarSynchronousSingle$2$1;.<init>:(Lrx/internal/util/ScalarSynchronousSingle$2;Lrx/SingleSubscriber;)V` @kind direct;
  #L4b6f4e.  call `add`(v3, v1) @signature `Lrx/SingleSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4b6f54.  call temp:= `subscribe`(v0, v1) @signature `Lrx/Single;.subscribe:(Lrx/SingleSubscriber;)Lrx/Subscription;` @kind virtual;
  #L4b6f5a.  return @kind void;
}
