record `rx.internal.util.ScalarSynchronousSingle` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Single` @kind class {
  `java.lang.Object` `rx.internal.util.ScalarSynchronousSingle.value` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.util.ScalarSynchronousSingle` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle;.<init>:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L4b7150.  v0:= new `rx.internal.util.ScalarSynchronousSingle$1`;
  #L4b7154.  call `<init>`(v0, v2) @signature `Lrx/internal/util/ScalarSynchronousSingle$1;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4b715a.  call `<init>`(v1, v0) @signature `Lrx/Single;.<init>:(Lrx/Single$OnSubscribe;)V` @kind direct;
  #L4b7160.  v1.`rx.internal.util.ScalarSynchronousSingle.value` @type ^`java.lang.Object` := v2 @kind object;
  #L4b7164.  return @kind void;
}
procedure `rx.internal.util.ScalarSynchronousSingle` `create`(`java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle;.create:(Ljava/lang/Object;)Lrx/internal/util/ScalarSynchronousSingle;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b7134.  v0:= new `rx.internal.util.ScalarSynchronousSingle`;
  #L4b7138.  call `<init>`(v0, v1) @signature `Lrx/internal/util/ScalarSynchronousSingle;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4b713e.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`rx.internal.util.ScalarSynchronousSingle` v1 @kind this) @signature `Lrx/internal/util/ScalarSynchronousSingle;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b70ac.  v0:= v1.`rx.internal.util.ScalarSynchronousSingle.value` @type ^`java.lang.Object` @kind object;
  #L4b70b0.  return v0 @kind object;
}
procedure `rx.Single` `scalarFlatMap`(`rx.internal.util.ScalarSynchronousSingle` v1 @kind this, `rx.functions.Func1` v2 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle;.scalarFlatMap:(Lrx/functions/Func1;)Lrx/Single;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b70c4.  v0:= new `rx.internal.util.ScalarSynchronousSingle$2`;
  #L4b70c8.  call `<init>`(v0, v1, v2) @signature `Lrx/internal/util/ScalarSynchronousSingle$2;.<init>:(Lrx/internal/util/ScalarSynchronousSingle;Lrx/functions/Func1;)V` @kind direct;
  #L4b70ce.  call temp:= `create`(v0) @signature `Lrx/internal/util/ScalarSynchronousSingle;.create:(Lrx/Single$OnSubscribe;)Lrx/Single;` @kind static;
  #L4b70d4.  v2:= temp @kind object;
  #L4b70d6.  return v2 @kind object;
}
procedure `rx.Single` `scalarScheduleOn`(`rx.internal.util.ScalarSynchronousSingle` v2 @kind this, `rx.Scheduler` v3 @kind object) @signature `Lrx/internal/util/ScalarSynchronousSingle;.scalarScheduleOn:(Lrx/Scheduler;)Lrx/Single;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b70e8.  v0:= instanceof @variable v3 @type ^`rx.internal.schedulers.EventLoopsScheduler` @kind boolean;
  #L4b70ec.  if v0 == 0 then goto L4b710c;
  #L4b70f0.  v3:= (`rx.internal.schedulers.EventLoopsScheduler`) v3 @kind object;
  #L4b70f4.  v0:= new `rx.internal.util.ScalarSynchronousSingle$DirectScheduledEmission`;
  #L4b70f8.  v1:= v2.`rx.internal.util.ScalarSynchronousSingle.value` @type ^`java.lang.Object` @kind object;
  #L4b70fc.  call `<init>`(v0, v3, v1) @signature `Lrx/internal/util/ScalarSynchronousSingle$DirectScheduledEmission;.<init>:(Lrx/internal/schedulers/EventLoopsScheduler;Ljava/lang/Object;)V` @kind direct;
  #L4b7102.  call temp:= `create`(v0) @signature `Lrx/internal/util/ScalarSynchronousSingle;.create:(Lrx/Single$OnSubscribe;)Lrx/Single;` @kind static;
  #L4b7108.  v3:= temp @kind object;
  #L4b710a.  return v3 @kind object;
  #L4b710c.  v0:= new `rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission`;
  #L4b7110.  v1:= v2.`rx.internal.util.ScalarSynchronousSingle.value` @type ^`java.lang.Object` @kind object;
  #L4b7114.  call `<init>`(v0, v3, v1) @signature `Lrx/internal/util/ScalarSynchronousSingle$NormalScheduledEmission;.<init>:(Lrx/Scheduler;Ljava/lang/Object;)V` @kind direct;
  #L4b711a.  call temp:= `create`(v0) @signature `Lrx/internal/util/ScalarSynchronousSingle;.create:(Lrx/Single$OnSubscribe;)Lrx/Single;` @kind static;
  #L4b7120.  v3:= temp @kind object;
  #L4b7122.  return v3 @kind object;
}
