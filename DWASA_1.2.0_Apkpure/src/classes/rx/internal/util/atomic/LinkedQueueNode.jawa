record `rx.internal.util.atomic.LinkedQueueNode` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class {
  `java.lang.Object` `rx.internal.util.atomic.LinkedQueueNode.value` @AccessFlag PRIVATE;
}
global `long` `@@rx.internal.util.atomic.LinkedQueueNode.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.internal.util.atomic.LinkedQueueNode` v0 @kind this) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b7fc8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4b7fce.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.atomic.LinkedQueueNode` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b7fe0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4b7fe6.  call `spValue`(v0, v1) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.spValue:(Ljava/lang/Object;)V` @kind virtual;
  #L4b7fec.  return @kind void;
}
procedure `java.lang.Object` `getAndNullValue`(`rx.internal.util.atomic.LinkedQueueNode` v2 @kind this) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.getAndNullValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b7f6c.  call temp:= `lpValue`(v2) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.lpValue:()Ljava/lang/Object;` @kind virtual;
  #L4b7f72.  v0:= temp @kind object;
  #L4b7f74.  v1:= 0I;
  #L4b7f76.  call `spValue`(v2, v1) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.spValue:(Ljava/lang/Object;)V` @kind virtual;
  #L4b7f7c.  return v0 @kind object;
}
procedure `java.lang.Object` `lpValue`(`rx.internal.util.atomic.LinkedQueueNode` v1 @kind this) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.lpValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7f90.  v0:= v1.`rx.internal.util.atomic.LinkedQueueNode.value` @type ^`java.lang.Object` @kind object;
  #L4b7f94.  return v0 @kind object;
}
procedure `rx.internal.util.atomic.LinkedQueueNode` `lvNext`(`rx.internal.util.atomic.LinkedQueueNode` v1 @kind this) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.lvNext:()Lrx/internal/util/atomic/LinkedQueueNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7fa8.  call temp:= `get`(v1) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b7fae.  v0:= temp @kind object;
  #L4b7fb0.  v0:= (`rx.internal.util.atomic.LinkedQueueNode`) v0 @kind object;
  #L4b7fb4.  return v0 @kind object;
}
procedure `void` `soNext`(`rx.internal.util.atomic.LinkedQueueNode` v0 @kind this, `rx.internal.util.atomic.LinkedQueueNode` v1 @kind object) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.soNext:(Lrx/internal/util/atomic/LinkedQueueNode;)V` @AccessFlag PUBLIC {
    temp;

  #L4b8000.  call `lazySet`(v0, v1) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4b8006.  return @kind void;
}
procedure `void` `spValue`(`rx.internal.util.atomic.LinkedQueueNode` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.spValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4b8018.  v0.`rx.internal.util.atomic.LinkedQueueNode.value` @type ^`java.lang.Object` := v1 @kind object;
  #L4b801c.  return @kind void;
}
