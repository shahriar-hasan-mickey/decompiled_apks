record `rx.internal.util.ActionObserver` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observer` @kind interface {
  `rx.functions.Action0` `rx.internal.util.ActionObserver.onCompleted` @AccessFlag FINAL;
  `rx.functions.Action1` `rx.internal.util.ActionObserver.onError` @AccessFlag FINAL;
  `rx.functions.Action1` `rx.internal.util.ActionObserver.onNext` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.util.ActionObserver` v0 @kind this, `rx.functions.Action1` v1 @kind object, `rx.functions.Action1` v2 @kind object, `rx.functions.Action0` v3 @kind object) @signature `Lrx/internal/util/ActionObserver;.<init>:(Lrx/functions/Action1;Lrx/functions/Action1;Lrx/functions/Action0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b4338.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b433e.  v0.`rx.internal.util.ActionObserver.onNext` @type ^`rx.functions.Action1` := v1 @kind object;
  #L4b4342.  v0.`rx.internal.util.ActionObserver.onError` @type ^`rx.functions.Action1` := v2 @kind object;
  #L4b4346.  v0.`rx.internal.util.ActionObserver.onCompleted` @type ^`rx.functions.Action0` := v3 @kind object;
  #L4b434a.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.util.ActionObserver` v1 @kind this) @signature `Lrx/internal/util/ActionObserver;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b435c.  v0:= v1.`rx.internal.util.ActionObserver.onCompleted` @type ^`rx.functions.Action0` @kind object;
  #L4b4360.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L4b4366.  return @kind void;
}
procedure `void` `onError`(`rx.internal.util.ActionObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/util/ActionObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4378.  v0:= v1.`rx.internal.util.ActionObserver.onError` @type ^`rx.functions.Action1` @kind object;
  #L4b437c.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4b4382.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.util.ActionObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/util/ActionObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4394.  v0:= v1.`rx.internal.util.ActionObserver.onNext` @type ^`rx.functions.Action1` @kind object;
  #L4b4398.  call `call`(v0, v2) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4b439e.  return @kind void;
}
