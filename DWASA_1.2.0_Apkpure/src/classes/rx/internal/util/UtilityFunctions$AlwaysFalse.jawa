record `rx.internal.util.UtilityFunctions$AlwaysFalse` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `rx.functions.Func1` @kind interface {
}
global `rx.internal.util.UtilityFunctions$AlwaysFalse`[] `@@rx.internal.util.UtilityFunctions$AlwaysFalse.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `rx.internal.util.UtilityFunctions$AlwaysFalse` `@@rx.internal.util.UtilityFunctions$AlwaysFalse.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lrx/internal/util/UtilityFunctions$AlwaysFalse;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4b79d4.  v0:= new `rx.internal.util.UtilityFunctions$AlwaysFalse`;
  #L4b79d8.  v1:= 0I;
  #L4b79da.  v2:= "INSTANCE" @kind object;
  #L4b79de.  call `<init>`(v0, v2, v1) @signature `Lrx/internal/util/UtilityFunctions$AlwaysFalse;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b79e4.  `@@rx.internal.util.UtilityFunctions$AlwaysFalse.INSTANCE` @type ^`rx.internal.util.UtilityFunctions$AlwaysFalse` := v0 @kind object;
  #L4b79e8.  v0:= 1I;
  #L4b79ea.  v0:= new `rx.internal.util.UtilityFunctions$AlwaysFalse`[v0];
  #L4b79ee.  v2:= `@@rx.internal.util.UtilityFunctions$AlwaysFalse.INSTANCE` @type ^`rx.internal.util.UtilityFunctions$AlwaysFalse` @kind object;
  #L4b79f2.  v0[v1]:= v2 @kind object;
  #L4b79f6.  `@@rx.internal.util.UtilityFunctions$AlwaysFalse.$VALUES` @type ^`rx.internal.util.UtilityFunctions$AlwaysFalse`[] := v0 @kind object;
  #L4b79fa.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.UtilityFunctions$AlwaysFalse` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lrx/internal/util/UtilityFunctions$AlwaysFalse;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4b7a0c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b7a12.  return @kind void;
}
procedure `rx.internal.util.UtilityFunctions$AlwaysFalse` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lrx/internal/util/UtilityFunctions$AlwaysFalse;.valueOf:(Ljava/lang/String;)Lrx/internal/util/UtilityFunctions$AlwaysFalse;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b798c.  v0:= constclass @type ^`rx.internal.util.UtilityFunctions$AlwaysFalse` @kind object;
  #L4b7990.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4b7996.  v1:= temp @kind object;
  #L4b7998.  v1:= (`rx.internal.util.UtilityFunctions$AlwaysFalse`) v1 @kind object;
  #L4b799c.  return v1 @kind object;
}
procedure `rx.internal.util.UtilityFunctions$AlwaysFalse`[] `values`() @signature `Lrx/internal/util/UtilityFunctions$AlwaysFalse;.values:()[Lrx/internal/util/UtilityFunctions$AlwaysFalse;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b79b0.  v0:= `@@rx.internal.util.UtilityFunctions$AlwaysFalse.$VALUES` @type ^`rx.internal.util.UtilityFunctions$AlwaysFalse`[] @kind object;
  #L4b79b4.  call temp:= `clone`(v0) @signature `[Lrx/internal/util/UtilityFunctions$AlwaysFalse;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4b79ba.  v0:= temp @kind object;
  #L4b79bc.  v0:= (`rx.internal.util.UtilityFunctions$AlwaysFalse`[]) v0 @kind object;
  #L4b79c0.  return v0 @kind object;
}
procedure `java.lang.Boolean` `call`(`rx.internal.util.UtilityFunctions$AlwaysFalse` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/UtilityFunctions$AlwaysFalse;.call:(Ljava/lang/Object;)Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;

  #L4b7954.  v1:= 0I;
  #L4b7956.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4b795c.  v1:= temp @kind object;
  #L4b795e.  return v1 @kind object;
}
procedure `java.lang.Object` `call`(`rx.internal.util.UtilityFunctions$AlwaysFalse` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/UtilityFunctions$AlwaysFalse;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b7970.  call temp:= `call`(v0, v1) @signature `Lrx/internal/util/UtilityFunctions$AlwaysFalse;.call:(Ljava/lang/Object;)Ljava/lang/Boolean;` @kind virtual;
  #L4b7976.  v1:= temp @kind object;
  #L4b7978.  return v1 @kind object;
}
