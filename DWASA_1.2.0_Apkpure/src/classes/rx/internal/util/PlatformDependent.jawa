record `rx.internal.util.PlatformDependent` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@rx.internal.util.PlatformDependent.ANDROID_API_VERSION` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@rx.internal.util.PlatformDependent.ANDROID_API_VERSION_IS_NOT_ANDROID` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@rx.internal.util.PlatformDependent.IS_ANDROID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/util/PlatformDependent;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b61ac.  call temp:= `resolveAndroidApiVersion`() @signature `Lrx/internal/util/PlatformDependent;.resolveAndroidApiVersion:()I` @kind static;
  #L4b61b2.  v0:= temp;
  #L4b61b4.  `@@rx.internal.util.PlatformDependent.ANDROID_API_VERSION` @type ^`int` := v0;
  #L4b61b8.  v0:= `@@rx.internal.util.PlatformDependent.ANDROID_API_VERSION` @type ^`int`;
  #L4b61bc.  if v0 == 0 then goto L4b61c4;
  #L4b61c0.  v0:= 1I;
  #L4b61c2.  goto L4b61c6;
  #L4b61c4.  v0:= 0I;
  #L4b61c6.  `@@rx.internal.util.PlatformDependent.IS_ANDROID` @type ^`boolean` := v0 @kind boolean;
  #L4b61ca.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.PlatformDependent` v2 @kind this) @signature `Lrx/internal/util/PlatformDependent;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4b61dc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b61e2.  v0:= new `java.lang.IllegalStateException`;
  #L4b61e6.  v1:= "No instances!" @kind object;
  #L4b61ea.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b61f0.  throw v0;
}
procedure `int` `getAndroidApiVersion`() @signature `Lrx/internal/util/PlatformDependent;.getAndroidApiVersion:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b60f4.  v0:= `@@rx.internal.util.PlatformDependent.ANDROID_API_VERSION` @type ^`int`;
  #L4b60f8.  return v0;
}
procedure `java.lang.ClassLoader` `getSystemClassLoader`() @signature `Lrx/internal/util/PlatformDependent;.getSystemClassLoader:()Ljava/lang/ClassLoader;` @AccessFlag STATIC {
    temp;
    v0;

  #L4b616c.  call temp:= `getSecurityManager`() @signature `Ljava/lang/System;.getSecurityManager:()Ljava/lang/SecurityManager;` @kind static;
  #L4b6172.  v0:= temp @kind object;
  #L4b6174.  if v0 != 0 then goto L4b6182;
  #L4b6178.  call temp:= `getSystemClassLoader`() @signature `Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;` @kind static;
  #L4b617e.  v0:= temp @kind object;
  #L4b6180.  return v0 @kind object;
  #L4b6182.  v0:= new `rx.internal.util.PlatformDependent$1`;
  #L4b6186.  call `<init>`(v0) @signature `Lrx/internal/util/PlatformDependent$1;.<init>:()V` @kind direct;
  #L4b618c.  call temp:= `doPrivileged`(v0) @signature `Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;` @kind static;
  #L4b6192.  v0:= temp @kind object;
  #L4b6194.  v0:= (`java.lang.ClassLoader`) v0 @kind object;
  #L4b6198.  return v0 @kind object;
}
procedure `boolean` `isAndroid`() @signature `Lrx/internal/util/PlatformDependent;.isAndroid:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b60dc.  v0:= `@@rx.internal.util.PlatformDependent.IS_ANDROID` @type ^`boolean` @kind boolean;
  #L4b60e0.  return v0;
}
procedure `int` `resolveAndroidApiVersion`() @signature `Lrx/internal/util/PlatformDependent;.resolveAndroidApiVersion:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4b610c.  v0:= "android.os.Build$VERSION" @kind object;
  #L4b6110.  v1:= 1I;
  #L4b6112.  call temp:= `getSystemClassLoader`() @signature `Lrx/internal/util/PlatformDependent;.getSystemClassLoader:()Ljava/lang/ClassLoader;` @kind static;
  #L4b6118.  v2:= temp @kind object;
  #L4b611a.  call temp:= `forName`(v0, v1, v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L4b6120.  v0:= temp @kind object;
  #L4b6122.  v1:= "SDK_INT" @kind object;
  #L4b6126.  call temp:= `getField`(v0, v1) @signature `Ljava/lang/Class;.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L4b612c.  v0:= temp @kind object;
  #L4b612e.  v1:= 0I;
  #L4b6130.  call temp:= `get`(v0, v1) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b6136.  v0:= temp @kind object;
  #L4b6138.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L4b613c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4b6142.  v0:= temp;
  #L4b6144.  return v0;
  #L4b6146.  v0:= 0I;
  #L4b6148.  return v0;
  catch `java.lang.Exception` @[L4b610c..L4b6144] goto L4b6146;
}
