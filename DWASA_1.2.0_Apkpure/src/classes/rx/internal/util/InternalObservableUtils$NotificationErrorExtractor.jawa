record `rx.internal.util.InternalObservableUtils$NotificationErrorExtractor` @kind class @AccessFlag FINAL extends `rx.functions.Func1` @kind interface {
}
procedure `void` `<init>`(`rx.internal.util.InternalObservableUtils$NotificationErrorExtractor` v0 @kind this) @signature `Lrx/internal/util/InternalObservableUtils$NotificationErrorExtractor;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b51c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b51ca.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.util.InternalObservableUtils$NotificationErrorExtractor` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/util/InternalObservableUtils$NotificationErrorExtractor;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b5188.  v1:= (`rx.Notification`) v1 @kind object;
  #L4b518c.  call temp:= `call`(v0, v1) @signature `Lrx/internal/util/InternalObservableUtils$NotificationErrorExtractor;.call:(Lrx/Notification;)Ljava/lang/Throwable;` @kind virtual;
  #L4b5192.  v1:= temp @kind object;
  #L4b5194.  return v1 @kind object;
}
procedure `java.lang.Throwable` `call`(`rx.internal.util.InternalObservableUtils$NotificationErrorExtractor` v0 @kind this, `rx.Notification` v1 @kind object) @signature `Lrx/internal/util/InternalObservableUtils$NotificationErrorExtractor;.call:(Lrx/Notification;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L4b51a8.  call temp:= `getThrowable`(v1) @signature `Lrx/Notification;.getThrowable:()Ljava/lang/Throwable;` @kind virtual;
  #L4b51ae.  v1:= temp @kind object;
  #L4b51b0.  return v1 @kind object;
}
