record `rx.internal.util.LinkedArrayList` @kind class @AccessFlag PUBLIC {
  `int` `rx.internal.util.LinkedArrayList.capacityHint` @AccessFlag FINAL;
  `java.lang.Object`[] `rx.internal.util.LinkedArrayList.head` @AccessFlag ;
  `int` `rx.internal.util.LinkedArrayList.indexInTail` @AccessFlag ;
  `int` `rx.internal.util.LinkedArrayList.size` @AccessFlag VOLATILE;
  `java.lang.Object`[] `rx.internal.util.LinkedArrayList.tail` @AccessFlag ;
}
procedure `void` `<init>`(`rx.internal.util.LinkedArrayList` v0 @kind this, `int` v1 ) @signature `Lrx/internal/util/LinkedArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b59c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b59c6.  v0.`rx.internal.util.LinkedArrayList.capacityHint` @type ^`int` := v1;
  #L4b59ca.  return @kind void;
}
procedure `void` `add`(`rx.internal.util.LinkedArrayList` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lrx/internal/util/LinkedArrayList;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b59dc.  v0:= v4.`rx.internal.util.LinkedArrayList.size` @type ^`int`;
  #L4b59e0.  v1:= 0I;
  #L4b59e2.  v2:= 1I;
  #L4b59e4.  if v0 != 0 then goto L4b5a0c;
  #L4b59e8.  v0:= v4.`rx.internal.util.LinkedArrayList.capacityHint` @type ^`int`;
  #L4b59ec.  v0:= v0 + v2 @kind int;
  #L4b59ee.  v0:= new `java.lang.Object`[v0];
  #L4b59f2.  v4.`rx.internal.util.LinkedArrayList.head` @type ^`java.lang.Object`[] := v0 @kind object;
  #L4b59f6.  v0:= v4.`rx.internal.util.LinkedArrayList.head` @type ^`java.lang.Object`[] @kind object;
  #L4b59fa.  v4.`rx.internal.util.LinkedArrayList.tail` @type ^`java.lang.Object`[] := v0 @kind object;
  #L4b59fe.  v0[v1]:= v5 @kind object;
  #L4b5a02.  v4.`rx.internal.util.LinkedArrayList.indexInTail` @type ^`int` := v2;
  #L4b5a06.  v4.`rx.internal.util.LinkedArrayList.size` @type ^`int` := v2;
  #L4b5a0a.  goto L4b5a58;
  #L4b5a0c.  v0:= v4.`rx.internal.util.LinkedArrayList.indexInTail` @type ^`int`;
  #L4b5a10.  v3:= v4.`rx.internal.util.LinkedArrayList.capacityHint` @type ^`int`;
  #L4b5a14.  if v0 != v3 then goto L4b5a40;
  #L4b5a18.  v0:= v3 + 1;
  #L4b5a1c.  v0:= new `java.lang.Object`[v0];
  #L4b5a20.  v0[v1]:= v5 @kind object;
  #L4b5a24.  v5:= v4.`rx.internal.util.LinkedArrayList.tail` @type ^`java.lang.Object`[] @kind object;
  #L4b5a28.  v5[v3]:= v0 @kind object;
  #L4b5a2c.  v4.`rx.internal.util.LinkedArrayList.tail` @type ^`java.lang.Object`[] := v0 @kind object;
  #L4b5a30.  v4.`rx.internal.util.LinkedArrayList.indexInTail` @type ^`int` := v2;
  #L4b5a34.  v5:= v4.`rx.internal.util.LinkedArrayList.size` @type ^`int`;
  #L4b5a38.  v5:= v5 + v2 @kind int;
  #L4b5a3a.  v4.`rx.internal.util.LinkedArrayList.size` @type ^`int` := v5;
  #L4b5a3e.  goto L4b5a58;
  #L4b5a40.  v1:= v4.`rx.internal.util.LinkedArrayList.tail` @type ^`java.lang.Object`[] @kind object;
  #L4b5a44.  v1[v0]:= v5 @kind object;
  #L4b5a48.  v0:= v0 + v2 @kind int;
  #L4b5a4a.  v4.`rx.internal.util.LinkedArrayList.indexInTail` @type ^`int` := v0;
  #L4b5a4e.  v5:= v4.`rx.internal.util.LinkedArrayList.size` @type ^`int`;
  #L4b5a52.  v5:= v5 + v2 @kind int;
  #L4b5a54.  v4.`rx.internal.util.LinkedArrayList.size` @type ^`int` := v5;
  #L4b5a58.  return @kind void;
}
procedure `int` `capacityHint`(`rx.internal.util.LinkedArrayList` v1 @kind this) @signature `Lrx/internal/util/LinkedArrayList;.capacityHint:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b58c4.  v0:= v1.`rx.internal.util.LinkedArrayList.capacityHint` @type ^`int`;
  #L4b58c8.  return v0;
}
procedure `java.lang.Object`[] `head`(`rx.internal.util.LinkedArrayList` v1 @kind this) @signature `Lrx/internal/util/LinkedArrayList;.head:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b590c.  v0:= v1.`rx.internal.util.LinkedArrayList.head` @type ^`java.lang.Object`[] @kind object;
  #L4b5910.  return v0 @kind object;
}
procedure `int` `indexInTail`(`rx.internal.util.LinkedArrayList` v1 @kind this) @signature `Lrx/internal/util/LinkedArrayList;.indexInTail:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b58dc.  v0:= v1.`rx.internal.util.LinkedArrayList.indexInTail` @type ^`int`;
  #L4b58e0.  return v0;
}
procedure `int` `size`(`rx.internal.util.LinkedArrayList` v1 @kind this) @signature `Lrx/internal/util/LinkedArrayList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b58f4.  v0:= v1.`rx.internal.util.LinkedArrayList.size` @type ^`int`;
  #L4b58f8.  return v0;
}
procedure `java.lang.Object`[] `tail`(`rx.internal.util.LinkedArrayList` v1 @kind this) @signature `Lrx/internal/util/LinkedArrayList;.tail:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b5924.  v0:= v1.`rx.internal.util.LinkedArrayList.tail` @type ^`java.lang.Object`[] @kind object;
  #L4b5928.  return v0 @kind object;
}
procedure `java.util.List` `toList`(`rx.internal.util.LinkedArrayList` v8 @kind this) @signature `Lrx/internal/util/LinkedArrayList;.toList:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4b5960.  v0:= v8.`rx.internal.util.LinkedArrayList.capacityHint` @type ^`int`;
  #L4b5964.  v1:= v8.`rx.internal.util.LinkedArrayList.size` @type ^`int`;
  #L4b5968.  v2:= new `java.util.ArrayList`;
  #L4b596c.  v3:= v1 + 1;
  #L4b5970.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4b5976.  call temp:= `head`(v8) @signature `Lrx/internal/util/LinkedArrayList;.head:()[Ljava/lang/Object;` @kind virtual;
  #L4b597c.  v3:= temp @kind object;
  #L4b597e.  v4:= 0I;
  #L4b5980.  v5:= v3 @kind object;
  #L4b5982.  v3:= 0I;
  #L4b5984.  v6:= 0I;
  #L4b5986.  if v3 >= v1 then goto L4b59ae;
  #L4b598a.  v7:= v5[v6] @kind object;
  #L4b598e.  call temp:= `add`(v2, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4b5994.  v3:= v3 + 1;
  #L4b5998.  v6:= v6 + 1;
  #L4b599c.  if v6 != v0 then goto L4b5986;
  #L4b59a0.  v5:= v5[v0] @kind object;
  #L4b59a4.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L4b59a8.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L4b59ac.  goto L4b5984;
  #L4b59ae.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`rx.internal.util.LinkedArrayList` v1 @kind this) @signature `Lrx/internal/util/LinkedArrayList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b593c.  call temp:= `toList`(v1) @signature `Lrx/internal/util/LinkedArrayList;.toList:()Ljava/util/List;` @kind virtual;
  #L4b5942.  v0:= temp @kind object;
  #L4b5944.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4b594a.  v0:= temp @kind object;
  #L4b594c.  return v0 @kind object;
}
