record `rx.internal.util.SynchronizedQueue` @kind class @AccessFlag PUBLIC extends `java.util.Queue` @kind interface, `java.lang.Cloneable` @kind interface {
  `java.util.Queue` `rx.internal.util.SynchronizedQueue.list` @AccessFlag PRIVATE_FINAL;
  `int` `rx.internal.util.SynchronizedQueue.size` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b78c8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b78ce.  v0:= new `java.util.LinkedList`;
  #L4b78d2.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4b78d8.  v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` := v0 @kind object;
  #L4b78dc.  v0:= -1I;
  #L4b78de.  v1.`rx.internal.util.SynchronizedQueue.size` @type ^`int` := v0;
  #L4b78e2.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.SynchronizedQueue` v1 @kind this, `int` v2 ) @signature `Lrx/internal/util/SynchronizedQueue;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b78f4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b78fa.  v0:= new `java.util.LinkedList`;
  #L4b78fe.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4b7904.  v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` := v0 @kind object;
  #L4b7908.  v1.`rx.internal.util.SynchronizedQueue.size` @type ^`int` := v2;
  #L4b790c.  return @kind void;
}
procedure `boolean` `add`(`rx.internal.util.SynchronizedQueue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7448.  @monitorenter v1
  #L4b744a.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b744e.  call temp:= `add`(v0, v2) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4b7454.  v2:= temp;
  #L4b7456.  @monitorexit v1
  #L4b7458.  return v2;
  #L4b745a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b745c.  @monitorexit v1
  #L4b745e.  throw v2;
  catch `java.lang.Throwable` @[L4b744a..L4b7456] goto L4b745a;
}
procedure `boolean` `addAll`(`rx.internal.util.SynchronizedQueue` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b747c.  @monitorenter v1
  #L4b747e.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7482.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/Queue;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4b7488.  v2:= temp;
  #L4b748a.  @monitorexit v1
  #L4b748c.  return v2;
  #L4b748e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7490.  @monitorexit v1
  #L4b7492.  throw v2;
  catch `java.lang.Throwable` @[L4b747e..L4b748a] goto L4b748e;
}
procedure `void` `clear`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7920.  @monitorenter v1
  #L4b7922.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7926.  call `clear`(v0) @signature `Ljava/util/Queue;.clear:()V` @kind interface;
  #L4b792c.  @monitorexit v1
  #L4b792e.  return @kind void;
  #L4b7930.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7932.  @monitorexit v1
  #L4b7934.  throw v0;
  catch `java.lang.Throwable` @[L4b7922..L4b792c] goto L4b7930;
}
procedure `java.lang.Object` `clone`(`rx.internal.util.SynchronizedQueue` v2 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b76e8.  @monitorenter v2
  #L4b76ea.  v0:= new `rx.internal.util.SynchronizedQueue`;
  #L4b76ee.  v1:= v2.`rx.internal.util.SynchronizedQueue.size` @type ^`int`;
  #L4b76f2.  call `<init>`(v0, v1) @signature `Lrx/internal/util/SynchronizedQueue;.<init>:(I)V` @kind direct;
  #L4b76f8.  v1:= v2.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b76fc.  call temp:= `addAll`(v0, v1) @signature `Lrx/internal/util/SynchronizedQueue;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L4b7702.  @monitorexit v2
  #L4b7704.  return v0 @kind object;
  #L4b7706.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7708.  @monitorexit v2
  #L4b770a.  throw v0;
  catch `java.lang.Throwable` @[L4b76ea..L4b7702] goto L4b7706;
}
procedure `boolean` `contains`(`rx.internal.util.SynchronizedQueue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b74b0.  @monitorenter v1
  #L4b74b2.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b74b6.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Queue;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4b74bc.  v2:= temp;
  #L4b74be.  @monitorexit v1
  #L4b74c0.  return v2;
  #L4b74c2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b74c4.  @monitorexit v1
  #L4b74c6.  throw v2;
  catch `java.lang.Throwable` @[L4b74b2..L4b74be] goto L4b74c2;
}
procedure `boolean` `containsAll`(`rx.internal.util.SynchronizedQueue` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b74e4.  @monitorenter v1
  #L4b74e6.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b74ea.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Queue;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4b74f0.  v2:= temp;
  #L4b74f2.  @monitorexit v1
  #L4b74f4.  return v2;
  #L4b74f6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b74f8.  @monitorexit v1
  #L4b74fa.  throw v2;
  catch `java.lang.Throwable` @[L4b74e6..L4b74f2] goto L4b74f6;
}
procedure `java.lang.Object` `element`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.element:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7728.  @monitorenter v1
  #L4b772a.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b772e.  call temp:= `element`(v0) @signature `Ljava/util/Queue;.element:()Ljava/lang/Object;` @kind interface;
  #L4b7734.  v0:= temp @kind object;
  #L4b7736.  @monitorexit v1
  #L4b7738.  return v0 @kind object;
  #L4b773a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b773c.  @monitorexit v1
  #L4b773e.  throw v0;
  catch `java.lang.Throwable` @[L4b772a..L4b7736] goto L4b773a;
}
procedure `boolean` `equals`(`rx.internal.util.SynchronizedQueue` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b7518.  if v3 != v4 then goto L4b7520;
  #L4b751c.  v4:= 1I;
  #L4b751e.  return v4;
  #L4b7520.  v0:= 0I;
  #L4b7522.  if v4 != 0 then goto L4b7528;
  #L4b7526.  return v0;
  #L4b7528.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4b752e.  v1:= temp @kind object;
  #L4b7530.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4b7536.  v2:= temp @kind object;
  #L4b7538.  if v1 == v2 then goto L4b753e;
  #L4b753c.  return v0;
  #L4b753e.  v4:= (`rx.internal.util.SynchronizedQueue`) v4 @kind object;
  #L4b7542.  v0:= v3.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7546.  v4:= v4.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b754a.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b7550.  v4:= temp;
  #L4b7552.  return v4;
}
procedure `int` `hashCode`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7694.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7698.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4b769e.  v0:= temp;
  #L4b76a0.  return v0;
}
procedure `boolean` `isEmpty`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7564.  @monitorenter v1
  #L4b7566.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b756a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L4b7570.  v0:= temp;
  #L4b7572.  @monitorexit v1
  #L4b7574.  return v0;
  #L4b7576.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7578.  @monitorexit v1
  #L4b757a.  throw v0;
  catch `java.lang.Throwable` @[L4b7566..L4b7572] goto L4b7576;
}
procedure `java.util.Iterator` `iterator`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7894.  @monitorenter v1
  #L4b7896.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b789a.  call temp:= `iterator`(v0) @signature `Ljava/util/Queue;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b78a0.  v0:= temp @kind object;
  #L4b78a2.  @monitorexit v1
  #L4b78a4.  return v0 @kind object;
  #L4b78a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b78a8.  @monitorexit v1
  #L4b78aa.  throw v0;
  catch `java.lang.Throwable` @[L4b7896..L4b78a2] goto L4b78a6;
}
procedure `boolean` `offer`(`rx.internal.util.SynchronizedQueue` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b7598.  @monitorenter v3
  #L4b759a.  v0:= v3.`rx.internal.util.SynchronizedQueue.size` @type ^`int`;
  #L4b759e.  v1:= -1I;
  #L4b75a0.  v2:= 1I;
  #L4b75a2.  if v0 <= v1 then goto L4b75bc;
  #L4b75a6.  v0:= v3.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b75aa.  call temp:= `size`(v0) @signature `Ljava/util/Queue;.size:()I` @kind interface;
  #L4b75b0.  v0:= temp;
  #L4b75b2.  v0:= v0 + v2 @kind int;
  #L4b75b4.  v1:= v3.`rx.internal.util.SynchronizedQueue.size` @type ^`int`;
  #L4b75b8.  if v0 > v1 then goto L4b75ce;
  #L4b75bc.  v0:= v3.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b75c0.  call temp:= `offer`(v0, v4) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4b75c6.  v4:= temp;
  #L4b75c8.  if v4 == 0 then goto L4b75ce;
  #L4b75cc.  goto L4b75d0;
  #L4b75ce.  v2:= 0I;
  #L4b75d0.  @monitorexit v3
  #L4b75d2.  return v2;
  #L4b75d4.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b75d6.  @monitorexit v3
  #L4b75d8.  throw v4;
  catch `java.lang.Throwable` @[L4b759a..L4b75c8] goto L4b75d4;
}
procedure `java.lang.Object` `peek`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.peek:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b775c.  @monitorenter v1
  #L4b775e.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7762.  call temp:= `peek`(v0) @signature `Ljava/util/Queue;.peek:()Ljava/lang/Object;` @kind interface;
  #L4b7768.  v0:= temp @kind object;
  #L4b776a.  @monitorexit v1
  #L4b776c.  return v0 @kind object;
  #L4b776e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7770.  @monitorexit v1
  #L4b7772.  throw v0;
  catch `java.lang.Throwable` @[L4b775e..L4b776a] goto L4b776e;
}
procedure `java.lang.Object` `poll`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7790.  @monitorenter v1
  #L4b7792.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7796.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4b779c.  v0:= temp @kind object;
  #L4b779e.  @monitorexit v1
  #L4b77a0.  return v0 @kind object;
  #L4b77a2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b77a4.  @monitorexit v1
  #L4b77a6.  throw v0;
  catch `java.lang.Throwable` @[L4b7792..L4b779e] goto L4b77a2;
}
procedure `java.lang.Object` `remove`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.remove:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b77c4.  @monitorenter v1
  #L4b77c6.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b77ca.  call temp:= `remove`(v0) @signature `Ljava/util/Queue;.remove:()Ljava/lang/Object;` @kind interface;
  #L4b77d0.  v0:= temp @kind object;
  #L4b77d2.  @monitorexit v1
  #L4b77d4.  return v0 @kind object;
  #L4b77d6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b77d8.  @monitorexit v1
  #L4b77da.  throw v0;
  catch `java.lang.Throwable` @[L4b77c6..L4b77d2] goto L4b77d6;
}
procedure `boolean` `remove`(`rx.internal.util.SynchronizedQueue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b75f8.  @monitorenter v1
  #L4b75fa.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b75fe.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Queue;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4b7604.  v2:= temp;
  #L4b7606.  @monitorexit v1
  #L4b7608.  return v2;
  #L4b760a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b760c.  @monitorexit v1
  #L4b760e.  throw v2;
  catch `java.lang.Throwable` @[L4b75fa..L4b7606] goto L4b760a;
}
procedure `boolean` `removeAll`(`rx.internal.util.SynchronizedQueue` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b762c.  @monitorenter v1
  #L4b762e.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7632.  call temp:= `removeAll`(v0, v2) @signature `Ljava/util/Queue;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4b7638.  v2:= temp;
  #L4b763a.  @monitorexit v1
  #L4b763c.  return v2;
  #L4b763e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7640.  @monitorexit v1
  #L4b7642.  throw v2;
  catch `java.lang.Throwable` @[L4b762e..L4b763a] goto L4b763e;
}
procedure `boolean` `retainAll`(`rx.internal.util.SynchronizedQueue` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7660.  @monitorenter v1
  #L4b7662.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7666.  call temp:= `retainAll`(v0, v2) @signature `Ljava/util/Queue;.retainAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4b766c.  v2:= temp;
  #L4b766e.  @monitorexit v1
  #L4b7670.  return v2;
  #L4b7672.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7674.  @monitorexit v1
  #L4b7676.  throw v2;
  catch `java.lang.Throwable` @[L4b7662..L4b766e] goto L4b7672;
}
procedure `int` `size`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b76b4.  @monitorenter v1
  #L4b76b6.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b76ba.  call temp:= `size`(v0) @signature `Ljava/util/Queue;.size:()I` @kind interface;
  #L4b76c0.  v0:= temp;
  #L4b76c2.  @monitorexit v1
  #L4b76c4.  return v0;
  #L4b76c6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b76c8.  @monitorexit v1
  #L4b76ca.  throw v0;
  catch `java.lang.Throwable` @[L4b76b6..L4b76c2] goto L4b76c6;
}
procedure `java.lang.Object`[] `toArray`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b77f8.  @monitorenter v1
  #L4b77fa.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b77fe.  call temp:= `toArray`(v0) @signature `Ljava/util/Queue;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L4b7804.  v0:= temp @kind object;
  #L4b7806.  @monitorexit v1
  #L4b7808.  return v0 @kind object;
  #L4b780a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b780c.  @monitorexit v1
  #L4b780e.  throw v0;
  catch `java.lang.Throwable` @[L4b77fa..L4b7806] goto L4b780a;
}
procedure `java.lang.Object`[] `toArray`(`rx.internal.util.SynchronizedQueue` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lrx/internal/util/SynchronizedQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b782c.  @monitorenter v1
  #L4b782e.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7832.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/Queue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L4b7838.  v2:= temp @kind object;
  #L4b783a.  @monitorexit v1
  #L4b783c.  return v2 @kind object;
  #L4b783e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7840.  @monitorexit v1
  #L4b7842.  throw v2;
  catch `java.lang.Throwable` @[L4b782e..L4b783a] goto L4b783e;
}
procedure `java.lang.String` `toString`(`rx.internal.util.SynchronizedQueue` v1 @kind this) @signature `Lrx/internal/util/SynchronizedQueue;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b7860.  @monitorenter v1
  #L4b7862.  v0:= v1.`rx.internal.util.SynchronizedQueue.list` @type ^`java.util.Queue` @kind object;
  #L4b7866.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4b786c.  v0:= temp @kind object;
  #L4b786e.  @monitorexit v1
  #L4b7870.  return v0 @kind object;
  #L4b7872.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b7874.  @monitorexit v1
  #L4b7876.  throw v0;
  catch `java.lang.Throwable` @[L4b7862..L4b786e] goto L4b7872;
}
