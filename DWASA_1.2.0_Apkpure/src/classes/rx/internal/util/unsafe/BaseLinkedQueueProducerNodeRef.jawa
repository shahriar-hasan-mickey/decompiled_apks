record `rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef` @kind class @AccessFlag ABSTRACT extends `rx.internal.util.unsafe.BaseLinkedQueuePad0` @kind class {
  `rx.internal.util.atomic.LinkedQueueNode` `rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef.producerNode` @AccessFlag PROTECTED;
}
global `long` `@@rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef.P_NODE_OFFSET` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/util/unsafe/BaseLinkedQueueProducerNodeRef;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4b96fc.  v0:= constclass @type ^`rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef` @kind object;
  #L4b9700.  v1:= "producerNode" @kind object;
  #L4b9704.  call temp:= `addressOf`(v0, v1) @signature `Lrx/internal/util/unsafe/UnsafeAccess;.addressOf:(Ljava/lang/Class;Ljava/lang/String;)J` @kind static;
  #L4b970a.  v0:= temp @kind wide;
  #L4b970c.  `@@rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef.P_NODE_OFFSET` @type ^`long` := v0 @kind wide;
  #L4b9710.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef` v0 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueueProducerNodeRef;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b9724.  call `<init>`(v0) @signature `Lrx/internal/util/unsafe/BaseLinkedQueuePad0;.<init>:()V` @kind direct;
  #L4b972a.  return @kind void;
}
procedure `rx.internal.util.atomic.LinkedQueueNode` `lpProducerNode`(`rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef` v1 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueueProducerNodeRef;.lpProducerNode:()Lrx/internal/util/atomic/LinkedQueueNode;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4b96bc.  v0:= v1.`rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef.producerNode` @type ^`rx.internal.util.atomic.LinkedQueueNode` @kind object;
  #L4b96c0.  return v0 @kind object;
}
procedure `rx.internal.util.atomic.LinkedQueueNode` `lvProducerNode`(`rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef` v3 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueueProducerNodeRef;.lvProducerNode:()Lrx/internal/util/atomic/LinkedQueueNode;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4b96d4.  v0:= `@@rx.internal.util.unsafe.UnsafeAccess.UNSAFE` @type ^`sun.misc.Unsafe` @kind object;
  #L4b96d8.  v1:= `@@rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef.P_NODE_OFFSET` @type ^`long` @kind wide;
  #L4b96dc.  call temp:= `getObjectVolatile`(v0, v3, v1) @signature `Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind virtual;
  #L4b96e2.  v0:= temp @kind object;
  #L4b96e4.  v0:= (`rx.internal.util.atomic.LinkedQueueNode`) v0 @kind object;
  #L4b96e8.  return v0 @kind object;
}
procedure `void` `spProducerNode`(`rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef` v0 @kind this, `rx.internal.util.atomic.LinkedQueueNode` v1 @kind object) @signature `Lrx/internal/util/unsafe/BaseLinkedQueueProducerNodeRef;.spProducerNode:(Lrx/internal/util/atomic/LinkedQueueNode;)V` @AccessFlag PROTECTED_FINAL {
    temp;

  #L4b973c.  v0.`rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef.producerNode` @type ^`rx.internal.util.atomic.LinkedQueueNode` := v1 @kind object;
  #L4b9740.  return @kind void;
}
