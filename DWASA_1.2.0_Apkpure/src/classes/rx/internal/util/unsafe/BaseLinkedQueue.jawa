record `rx.internal.util.unsafe.BaseLinkedQueue` @kind class @AccessFlag ABSTRACT extends `rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef` @kind class {
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p00` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p01` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p02` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p03` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p04` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p05` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p06` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p07` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p30` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p31` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p32` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p33` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p34` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p35` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p36` @AccessFlag ;
  `long` `rx.internal.util.unsafe.BaseLinkedQueue.p37` @AccessFlag ;
}
procedure `void` `<init>`(`rx.internal.util.unsafe.BaseLinkedQueue` v0 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueue;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b97e4.  call `<init>`(v0) @signature `Lrx/internal/util/unsafe/BaseLinkedQueueConsumerNodeRef;.<init>:()V` @kind direct;
  #L4b97ea.  return @kind void;
}
procedure `boolean` `isEmpty`(`rx.internal.util.unsafe.BaseLinkedQueue` v2 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueue;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4b9754.  call temp:= `lvConsumerNode`(v2) @signature `Lrx/internal/util/unsafe/BaseLinkedQueue;.lvConsumerNode:()Lrx/internal/util/atomic/LinkedQueueNode;` @kind virtual;
  #L4b975a.  v0:= temp @kind object;
  #L4b975c.  call temp:= `lvProducerNode`(v2) @signature `Lrx/internal/util/unsafe/BaseLinkedQueue;.lvProducerNode:()Lrx/internal/util/atomic/LinkedQueueNode;` @kind virtual;
  #L4b9762.  v1:= temp @kind object;
  #L4b9764.  if v0 != v1 then goto L4b976c;
  #L4b9768.  v0:= 1I;
  #L4b976a.  goto L4b976e;
  #L4b976c.  v0:= 0I;
  #L4b976e.  return v0;
}
procedure `java.util.Iterator` `iterator`(`rx.internal.util.unsafe.BaseLinkedQueue` v1 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueue;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4b97c8.  v0:= new `java.lang.UnsupportedOperationException`;
  #L4b97cc.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L4b97d2.  throw v0;
}
procedure `int` `size`(`rx.internal.util.unsafe.BaseLinkedQueue` v4 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueue;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b9780.  call temp:= `lvConsumerNode`(v4) @signature `Lrx/internal/util/unsafe/BaseLinkedQueue;.lvConsumerNode:()Lrx/internal/util/atomic/LinkedQueueNode;` @kind virtual;
  #L4b9786.  v0:= temp @kind object;
  #L4b9788.  call temp:= `lvProducerNode`(v4) @signature `Lrx/internal/util/unsafe/BaseLinkedQueue;.lvProducerNode:()Lrx/internal/util/atomic/LinkedQueueNode;` @kind virtual;
  #L4b978e.  v1:= temp @kind object;
  #L4b9790.  v2:= 0I;
  #L4b9792.  if v0 == v1 then goto L4b97b6;
  #L4b9796.  v3:= 2147483647I;
  #L4b979c.  if v2 >= v3 then goto L4b97b6;
  #L4b97a0.  call temp:= `lvNext`(v0) @signature `Lrx/internal/util/atomic/LinkedQueueNode;.lvNext:()Lrx/internal/util/atomic/LinkedQueueNode;` @kind virtual;
  #L4b97a6.  v3:= temp @kind object;
  #L4b97a8.  if v3 != 0 then goto L4b97ae;
  #L4b97ac.  goto L4b97a0;
  #L4b97ae.  v2:= v2 + 1;
  #L4b97b2.  v0:= v3 @kind object;
  #L4b97b4.  goto L4b9792;
  #L4b97b6.  return v2;
}
