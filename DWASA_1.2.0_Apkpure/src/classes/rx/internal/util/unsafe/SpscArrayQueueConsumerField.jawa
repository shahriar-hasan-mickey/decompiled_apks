record `rx.internal.util.unsafe.SpscArrayQueueConsumerField` @kind class @AccessFlag ABSTRACT extends `rx.internal.util.unsafe.SpscArrayQueueL2Pad` @kind class {
  `long` `rx.internal.util.unsafe.SpscArrayQueueConsumerField.consumerIndex` @AccessFlag PROTECTED;
}
global `long` `@@rx.internal.util.unsafe.SpscArrayQueueConsumerField.C_INDEX_OFFSET` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/util/unsafe/SpscArrayQueueConsumerField;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4ba4ac.  v0:= constclass @type ^`rx.internal.util.unsafe.SpscArrayQueueConsumerField` @kind object;
  #L4ba4b0.  v1:= "consumerIndex" @kind object;
  #L4ba4b4.  call temp:= `addressOf`(v0, v1) @signature `Lrx/internal/util/unsafe/UnsafeAccess;.addressOf:(Ljava/lang/Class;Ljava/lang/String;)J` @kind static;
  #L4ba4ba.  v0:= temp @kind wide;
  #L4ba4bc.  `@@rx.internal.util.unsafe.SpscArrayQueueConsumerField.C_INDEX_OFFSET` @type ^`long` := v0 @kind wide;
  #L4ba4c0.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.unsafe.SpscArrayQueueConsumerField` v0 @kind this, `int` v1 ) @signature `Lrx/internal/util/unsafe/SpscArrayQueueConsumerField;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ba4d4.  call `<init>`(v0, v1) @signature `Lrx/internal/util/unsafe/SpscArrayQueueL2Pad;.<init>:(I)V` @kind direct;
  #L4ba4da.  return @kind void;
}
