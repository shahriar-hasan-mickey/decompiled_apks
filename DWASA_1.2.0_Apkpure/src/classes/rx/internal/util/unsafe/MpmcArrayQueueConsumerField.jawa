record `rx.internal.util.unsafe.MpmcArrayQueueConsumerField` @kind class @AccessFlag ABSTRACT extends `rx.internal.util.unsafe.MpmcArrayQueueL2Pad` @kind class {
  `long` `rx.internal.util.unsafe.MpmcArrayQueueConsumerField.consumerIndex` @AccessFlag PRIVATE_VOLATILE;
}
global `long` `@@rx.internal.util.unsafe.MpmcArrayQueueConsumerField.C_INDEX_OFFSET` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/util/unsafe/MpmcArrayQueueConsumerField;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4b9bdc.  v0:= constclass @type ^`rx.internal.util.unsafe.MpmcArrayQueueConsumerField` @kind object;
  #L4b9be0.  v1:= "consumerIndex" @kind object;
  #L4b9be4.  call temp:= `addressOf`(v0, v1) @signature `Lrx/internal/util/unsafe/UnsafeAccess;.addressOf:(Ljava/lang/Class;Ljava/lang/String;)J` @kind static;
  #L4b9bea.  v0:= temp @kind wide;
  #L4b9bec.  `@@rx.internal.util.unsafe.MpmcArrayQueueConsumerField.C_INDEX_OFFSET` @type ^`long` := v0 @kind wide;
  #L4b9bf0.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.unsafe.MpmcArrayQueueConsumerField` v0 @kind this, `int` v1 ) @signature `Lrx/internal/util/unsafe/MpmcArrayQueueConsumerField;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b9c04.  call `<init>`(v0, v1) @signature `Lrx/internal/util/unsafe/MpmcArrayQueueL2Pad;.<init>:(I)V` @kind direct;
  #L4b9c0a.  return @kind void;
}
procedure `boolean` `casConsumerIndex`(`rx.internal.util.unsafe.MpmcArrayQueueConsumerField` v8 @kind this, `long` v9 , `long` v11 ) @signature `Lrx/internal/util/unsafe/MpmcArrayQueueConsumerField;.casConsumerIndex:(JJ)Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4b9b9c.  v0:= `@@rx.internal.util.unsafe.UnsafeAccess.UNSAFE` @type ^`sun.misc.Unsafe` @kind object;
  #L4b9ba0.  v2:= `@@rx.internal.util.unsafe.MpmcArrayQueueConsumerField.C_INDEX_OFFSET` @type ^`long` @kind wide;
  #L4b9ba4.  v1:= v8 @kind object;
  #L4b9ba6.  v4:= v9 @kind wide;
  #L4b9ba8.  v6:= v11 @kind wide;
  #L4b9baa.  call temp:= `compareAndSwapLong`(v0, v1, v2, v4, v6) @signature `Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z` @kind virtual;
  #L4b9bb0.  v9:= temp;
  #L4b9bb2.  return v9;
}
procedure `long` `lvConsumerIndex`(`rx.internal.util.unsafe.MpmcArrayQueueConsumerField` v2 @kind this) @signature `Lrx/internal/util/unsafe/MpmcArrayQueueConsumerField;.lvConsumerIndex:()J` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L4b9bc4.  v0:= v2.`rx.internal.util.unsafe.MpmcArrayQueueConsumerField.consumerIndex` @type ^`long` @kind wide;
  #L4b9bc8.  return v0 @kind wide;
}
