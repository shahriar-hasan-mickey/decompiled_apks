record `rx.internal.util.unsafe.MpmcArrayQueueL1Pad` @kind class @AccessFlag ABSTRACT extends `rx.internal.util.unsafe.ConcurrentSequencedCircularArrayQueue` @kind class {
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p10` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p11` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p12` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p13` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p14` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p15` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p16` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p30` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p31` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p32` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p33` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p34` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p35` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p36` @AccessFlag ;
  `long` `rx.internal.util.unsafe.MpmcArrayQueueL1Pad.p37` @AccessFlag ;
}
procedure `void` `<init>`(`rx.internal.util.unsafe.MpmcArrayQueueL1Pad` v0 @kind this, `int` v1 ) @signature `Lrx/internal/util/unsafe/MpmcArrayQueueL1Pad;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b9c1c.  call `<init>`(v0, v1) @signature `Lrx/internal/util/unsafe/ConcurrentSequencedCircularArrayQueue;.<init>:(I)V` @kind direct;
  #L4b9c22.  return @kind void;
}
