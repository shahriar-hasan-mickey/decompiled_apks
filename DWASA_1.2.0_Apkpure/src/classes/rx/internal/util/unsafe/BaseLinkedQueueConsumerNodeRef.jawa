record `rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef` @kind class @AccessFlag ABSTRACT extends `rx.internal.util.unsafe.BaseLinkedQueuePad1` @kind class {
  `rx.internal.util.atomic.LinkedQueueNode` `rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef.consumerNode` @AccessFlag PROTECTED;
}
global `long` `@@rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef.C_NODE_OFFSET` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/util/unsafe/BaseLinkedQueueConsumerNodeRef;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4b9634.  v0:= constclass @type ^`rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef` @kind object;
  #L4b9638.  v1:= "consumerNode" @kind object;
  #L4b963c.  call temp:= `addressOf`(v0, v1) @signature `Lrx/internal/util/unsafe/UnsafeAccess;.addressOf:(Ljava/lang/Class;Ljava/lang/String;)J` @kind static;
  #L4b9642.  v0:= temp @kind wide;
  #L4b9644.  `@@rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef.C_NODE_OFFSET` @type ^`long` := v0 @kind wide;
  #L4b9648.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef` v0 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueueConsumerNodeRef;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b965c.  call `<init>`(v0) @signature `Lrx/internal/util/unsafe/BaseLinkedQueuePad1;.<init>:()V` @kind direct;
  #L4b9662.  return @kind void;
}
procedure `rx.internal.util.atomic.LinkedQueueNode` `lpConsumerNode`(`rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef` v1 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueueConsumerNodeRef;.lpConsumerNode:()Lrx/internal/util/atomic/LinkedQueueNode;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4b95f4.  v0:= v1.`rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef.consumerNode` @type ^`rx.internal.util.atomic.LinkedQueueNode` @kind object;
  #L4b95f8.  return v0 @kind object;
}
procedure `rx.internal.util.atomic.LinkedQueueNode` `lvConsumerNode`(`rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef` v3 @kind this) @signature `Lrx/internal/util/unsafe/BaseLinkedQueueConsumerNodeRef;.lvConsumerNode:()Lrx/internal/util/atomic/LinkedQueueNode;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4b960c.  v0:= `@@rx.internal.util.unsafe.UnsafeAccess.UNSAFE` @type ^`sun.misc.Unsafe` @kind object;
  #L4b9610.  v1:= `@@rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef.C_NODE_OFFSET` @type ^`long` @kind wide;
  #L4b9614.  call temp:= `getObjectVolatile`(v0, v3, v1) @signature `Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind virtual;
  #L4b961a.  v0:= temp @kind object;
  #L4b961c.  v0:= (`rx.internal.util.atomic.LinkedQueueNode`) v0 @kind object;
  #L4b9620.  return v0 @kind object;
}
procedure `void` `spConsumerNode`(`rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef` v0 @kind this, `rx.internal.util.atomic.LinkedQueueNode` v1 @kind object) @signature `Lrx/internal/util/unsafe/BaseLinkedQueueConsumerNodeRef;.spConsumerNode:(Lrx/internal/util/atomic/LinkedQueueNode;)V` @AccessFlag PROTECTED_FINAL {
    temp;

  #L4b9674.  v0.`rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef.consumerNode` @type ^`rx.internal.util.atomic.LinkedQueueNode` := v1 @kind object;
  #L4b9678.  return @kind void;
}
