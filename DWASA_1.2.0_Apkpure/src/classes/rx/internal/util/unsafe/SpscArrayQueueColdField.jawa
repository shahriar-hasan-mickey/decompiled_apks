record `rx.internal.util.unsafe.SpscArrayQueueColdField` @kind class @AccessFlag ABSTRACT extends `rx.internal.util.unsafe.ConcurrentCircularArrayQueue` @kind class {
  `int` `rx.internal.util.unsafe.SpscArrayQueueColdField.lookAheadStep` @AccessFlag PROTECTED_FINAL;
}
global `java.lang.Integer` `@@rx.internal.util.unsafe.SpscArrayQueueColdField.MAX_LOOK_AHEAD_STEP` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/util/unsafe/SpscArrayQueueColdField;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4ba450.  v0:= "jctools.spsc.max.lookahead.step" @kind object;
  #L4ba454.  v1:= 4096I;
  #L4ba458.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L4ba45e.  v0:= temp @kind object;
  #L4ba460.  `@@rx.internal.util.unsafe.SpscArrayQueueColdField.MAX_LOOK_AHEAD_STEP` @type ^`java.lang.Integer` := v0 @kind object;
  #L4ba464.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.unsafe.SpscArrayQueueColdField` v1 @kind this, `int` v2 ) @signature `Lrx/internal/util/unsafe/SpscArrayQueueColdField;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ba478.  call `<init>`(v1, v2) @signature `Lrx/internal/util/unsafe/ConcurrentCircularArrayQueue;.<init>:(I)V` @kind direct;
  #L4ba47e.  v2:= v2 / 4;
  #L4ba482.  v0:= `@@rx.internal.util.unsafe.SpscArrayQueueColdField.MAX_LOOK_AHEAD_STEP` @type ^`java.lang.Integer` @kind object;
  #L4ba486.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4ba48c.  v0:= temp;
  #L4ba48e.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4ba494.  v2:= temp;
  #L4ba496.  v1.`rx.internal.util.unsafe.SpscArrayQueueColdField.lookAheadStep` @type ^`int` := v2;
  #L4ba49a.  return @kind void;
}
