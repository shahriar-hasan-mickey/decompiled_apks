record `rx.internal.util.unsafe.SpmcArrayQueueConsumerField` @kind class @AccessFlag ABSTRACT extends `rx.internal.util.unsafe.SpmcArrayQueueL2Pad` @kind class {
  `long` `rx.internal.util.unsafe.SpmcArrayQueueConsumerField.consumerIndex` @AccessFlag PRIVATE_VOLATILE;
}
global `long` `@@rx.internal.util.unsafe.SpmcArrayQueueConsumerField.C_INDEX_OFFSET` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/util/unsafe/SpmcArrayQueueConsumerField;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4ba118.  v0:= constclass @type ^`rx.internal.util.unsafe.SpmcArrayQueueConsumerField` @kind object;
  #L4ba11c.  v1:= "consumerIndex" @kind object;
  #L4ba120.  call temp:= `addressOf`(v0, v1) @signature `Lrx/internal/util/unsafe/UnsafeAccess;.addressOf:(Ljava/lang/Class;Ljava/lang/String;)J` @kind static;
  #L4ba126.  v0:= temp @kind wide;
  #L4ba128.  `@@rx.internal.util.unsafe.SpmcArrayQueueConsumerField.C_INDEX_OFFSET` @type ^`long` := v0 @kind wide;
  #L4ba12c.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.util.unsafe.SpmcArrayQueueConsumerField` v0 @kind this, `int` v1 ) @signature `Lrx/internal/util/unsafe/SpmcArrayQueueConsumerField;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ba140.  call `<init>`(v0, v1) @signature `Lrx/internal/util/unsafe/SpmcArrayQueueL2Pad;.<init>:(I)V` @kind direct;
  #L4ba146.  return @kind void;
}
procedure `boolean` `casHead`(`rx.internal.util.unsafe.SpmcArrayQueueConsumerField` v8 @kind this, `long` v9 , `long` v11 ) @signature `Lrx/internal/util/unsafe/SpmcArrayQueueConsumerField;.casHead:(JJ)Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ba0d8.  v0:= `@@rx.internal.util.unsafe.UnsafeAccess.UNSAFE` @type ^`sun.misc.Unsafe` @kind object;
  #L4ba0dc.  v2:= `@@rx.internal.util.unsafe.SpmcArrayQueueConsumerField.C_INDEX_OFFSET` @type ^`long` @kind wide;
  #L4ba0e0.  v1:= v8 @kind object;
  #L4ba0e2.  v4:= v9 @kind wide;
  #L4ba0e4.  v6:= v11 @kind wide;
  #L4ba0e6.  call temp:= `compareAndSwapLong`(v0, v1, v2, v4, v6) @signature `Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z` @kind virtual;
  #L4ba0ec.  v9:= temp;
  #L4ba0ee.  return v9;
}
procedure `long` `lvConsumerIndex`(`rx.internal.util.unsafe.SpmcArrayQueueConsumerField` v2 @kind this) @signature `Lrx/internal/util/unsafe/SpmcArrayQueueConsumerField;.lvConsumerIndex:()J` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L4ba100.  v0:= v2.`rx.internal.util.unsafe.SpmcArrayQueueConsumerField.consumerIndex` @type ^`long` @kind wide;
  #L4ba104.  return v0 @kind wide;
}
