record `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker` `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action0` `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2.val$action` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2` v0 @kind this, `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker` v1 @kind object, `rx.functions.Action0` v2 @kind object) @signature `Lrx/internal/schedulers/EventLoopsScheduler$EventLoopWorker$2;.<init>:(Lrx/internal/schedulers/EventLoopsScheduler$EventLoopWorker;Lrx/functions/Action0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b23ec.  v0.`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2.this$0` @type ^`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker` := v1 @kind object;
  #L4b23f0.  v0.`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2.val$action` @type ^`rx.functions.Action0` := v2 @kind object;
  #L4b23f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b23fa.  return @kind void;
}
procedure `void` `call`(`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2` v1 @kind this) @signature `Lrx/internal/schedulers/EventLoopsScheduler$EventLoopWorker$2;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b240c.  v0:= v1.`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2.this$0` @type ^`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker` @kind object;
  #L4b2410.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/internal/schedulers/EventLoopsScheduler$EventLoopWorker;.isUnsubscribed:()Z` @kind virtual;
  #L4b2416.  v0:= temp;
  #L4b2418.  if v0 == 0 then goto L4b241e;
  #L4b241c.  return @kind void;
  #L4b241e.  v0:= v1.`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2.val$action` @type ^`rx.functions.Action0` @kind object;
  #L4b2422.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L4b2428.  return @kind void;
}
