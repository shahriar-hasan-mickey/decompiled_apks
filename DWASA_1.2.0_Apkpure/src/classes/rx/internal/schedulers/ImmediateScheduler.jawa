record `rx.internal.schedulers.ImmediateScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Scheduler` @kind class {
}
global `rx.internal.schedulers.ImmediateScheduler` `@@rx.internal.schedulers.ImmediateScheduler.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/schedulers/ImmediateScheduler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b2ef8.  v0:= new `rx.internal.schedulers.ImmediateScheduler`;
  #L4b2efc.  call `<init>`(v0) @signature `Lrx/internal/schedulers/ImmediateScheduler;.<init>:()V` @kind direct;
  #L4b2f02.  `@@rx.internal.schedulers.ImmediateScheduler.INSTANCE` @type ^`rx.internal.schedulers.ImmediateScheduler` := v0 @kind object;
  #L4b2f06.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.schedulers.ImmediateScheduler` v0 @kind this) @signature `Lrx/internal/schedulers/ImmediateScheduler;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4b2f18.  call `<init>`(v0) @signature `Lrx/Scheduler;.<init>:()V` @kind direct;
  #L4b2f1e.  return @kind void;
}
procedure `rx.Scheduler$Worker` `createWorker`(`rx.internal.schedulers.ImmediateScheduler` v1 @kind this) @signature `Lrx/internal/schedulers/ImmediateScheduler;.createWorker:()Lrx/Scheduler$Worker;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2edc.  v0:= new `rx.internal.schedulers.ImmediateScheduler$InnerImmediateScheduler`;
  #L4b2ee0.  call `<init>`(v0, v1) @signature `Lrx/internal/schedulers/ImmediateScheduler$InnerImmediateScheduler;.<init>:(Lrx/internal/schedulers/ImmediateScheduler;)V` @kind direct;
  #L4b2ee6.  return v0 @kind object;
}
