record `rx.internal.schedulers.GenericScheduledExecutorServiceFactory` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `rx.internal.schedulers.GenericScheduledExecutorServiceFactory`[] `@@rx.internal.schedulers.GenericScheduledExecutorServiceFactory.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `rx.internal.util.RxThreadFactory` `@@rx.internal.schedulers.GenericScheduledExecutorServiceFactory.THREAD_FACTORY` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@rx.internal.schedulers.GenericScheduledExecutorServiceFactory.THREAD_NAME_PREFIX` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4b2c08.  v0:= 0I;
  #L4b2c0a.  v0:= new `rx.internal.schedulers.GenericScheduledExecutorServiceFactory`[v0];
  #L4b2c0e.  `@@rx.internal.schedulers.GenericScheduledExecutorServiceFactory.$VALUES` @type ^`rx.internal.schedulers.GenericScheduledExecutorServiceFactory`[] := v0 @kind object;
  #L4b2c12.  v0:= new `rx.internal.util.RxThreadFactory`;
  #L4b2c16.  v1:= "RxScheduledExecutorPool-" @kind object;
  #L4b2c1a.  call `<init>`(v0, v1) @signature `Lrx/internal/util/RxThreadFactory;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b2c20.  `@@rx.internal.schedulers.GenericScheduledExecutorServiceFactory.THREAD_FACTORY` @type ^`rx.internal.util.RxThreadFactory` := v0 @kind object;
  #L4b2c24.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.schedulers.GenericScheduledExecutorServiceFactory` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4b2c38.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b2c3e.  return @kind void;
}
procedure `java.util.concurrent.ScheduledExecutorService` `create`() @signature `Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.create:()Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b2b50.  call temp:= `getOnGenericScheduledExecutorService`() @signature `Lrx/plugins/RxJavaHooks;.getOnGenericScheduledExecutorService:()Lrx/functions/Func0;` @kind static;
  #L4b2b56.  v0:= temp @kind object;
  #L4b2b58.  if v0 != 0 then goto L4b2b66;
  #L4b2b5c.  call temp:= `createDefault`() @signature `Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.createDefault:()Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L4b2b62.  v0:= temp @kind object;
  #L4b2b64.  return v0 @kind object;
  #L4b2b66.  call temp:= `call`(v0) @signature `Lrx/functions/Func0;.call:()Ljava/lang/Object;` @kind interface;
  #L4b2b6c.  v0:= temp @kind object;
  #L4b2b6e.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L4b2b72.  return v0 @kind object;
}
procedure `java.util.concurrent.ScheduledExecutorService` `createDefault`() @signature `Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.createDefault:()Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4b2b84.  call temp:= `threadFactory`() @signature `Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.threadFactory:()Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L4b2b8a.  v0:= temp @kind object;
  #L4b2b8c.  v1:= 1I;
  #L4b2b8e.  call temp:= `newScheduledThreadPool`(v1, v0) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L4b2b94.  v0:= temp @kind object;
  #L4b2b96.  return v0 @kind object;
}
procedure `java.util.concurrent.ThreadFactory` `threadFactory`() @signature `Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.threadFactory:()Ljava/util/concurrent/ThreadFactory;` @AccessFlag STATIC {
    temp;
    v0;

  #L4b2ba8.  v0:= `@@rx.internal.schedulers.GenericScheduledExecutorServiceFactory.THREAD_FACTORY` @type ^`rx.internal.util.RxThreadFactory` @kind object;
  #L4b2bac.  return v0 @kind object;
}
procedure `rx.internal.schedulers.GenericScheduledExecutorServiceFactory` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.valueOf:(Ljava/lang/String;)Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b2bc0.  v0:= constclass @type ^`rx.internal.schedulers.GenericScheduledExecutorServiceFactory` @kind object;
  #L4b2bc4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4b2bca.  v1:= temp @kind object;
  #L4b2bcc.  v1:= (`rx.internal.schedulers.GenericScheduledExecutorServiceFactory`) v1 @kind object;
  #L4b2bd0.  return v1 @kind object;
}
procedure `rx.internal.schedulers.GenericScheduledExecutorServiceFactory`[] `values`() @signature `Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.values:()[Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b2be4.  v0:= `@@rx.internal.schedulers.GenericScheduledExecutorServiceFactory.$VALUES` @type ^`rx.internal.schedulers.GenericScheduledExecutorServiceFactory`[] @kind object;
  #L4b2be8.  call temp:= `clone`(v0) @signature `[Lrx/internal/schedulers/GenericScheduledExecutorServiceFactory;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4b2bee.  v0:= temp @kind object;
  #L4b2bf0.  v0:= (`rx.internal.schedulers.GenericScheduledExecutorServiceFactory`[]) v0 @kind object;
  #L4b2bf4.  return v0 @kind object;
}
