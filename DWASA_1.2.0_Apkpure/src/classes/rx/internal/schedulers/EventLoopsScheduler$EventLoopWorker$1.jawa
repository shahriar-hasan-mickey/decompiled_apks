record `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker` `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action0` `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1.val$action` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1` v0 @kind this, `rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker` v1 @kind object, `rx.functions.Action0` v2 @kind object) @signature `Lrx/internal/schedulers/EventLoopsScheduler$EventLoopWorker$1;.<init>:(Lrx/internal/schedulers/EventLoopsScheduler$EventLoopWorker;Lrx/functions/Action0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b239c.  v0.`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1.this$0` @type ^`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker` := v1 @kind object;
  #L4b23a0.  v0.`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1.val$action` @type ^`rx.functions.Action0` := v2 @kind object;
  #L4b23a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b23aa.  return @kind void;
}
procedure `void` `call`(`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1` v1 @kind this) @signature `Lrx/internal/schedulers/EventLoopsScheduler$EventLoopWorker$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b23bc.  v0:= v1.`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1.this$0` @type ^`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker` @kind object;
  #L4b23c0.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/internal/schedulers/EventLoopsScheduler$EventLoopWorker;.isUnsubscribed:()Z` @kind virtual;
  #L4b23c6.  v0:= temp;
  #L4b23c8.  if v0 == 0 then goto L4b23ce;
  #L4b23cc.  return @kind void;
  #L4b23ce.  v0:= v1.`rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1.val$action` @type ^`rx.functions.Action0` @kind object;
  #L4b23d2.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L4b23d8.  return @kind void;
}
