record `rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool$2` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool` `rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool$2` v0 @kind this, `rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool` v1 @kind object) @signature `Lrx/internal/schedulers/CachedThreadScheduler$CachedWorkerPool$2;.<init>:(Lrx/internal/schedulers/CachedThreadScheduler$CachedWorkerPool;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b1e2c.  v0.`rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool$2.this$0` @type ^`rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool` := v1 @kind object;
  #L4b1e30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b1e36.  return @kind void;
}
procedure `void` `run`(`rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool$2` v1 @kind this) @signature `Lrx/internal/schedulers/CachedThreadScheduler$CachedWorkerPool$2;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1e48.  v0:= v1.`rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool$2.this$0` @type ^`rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool` @kind object;
  #L4b1e4c.  call `evictExpiredWorkers`(v0) @signature `Lrx/internal/schedulers/CachedThreadScheduler$CachedWorkerPool;.evictExpiredWorkers:()V` @kind virtual;
  #L4b1e52.  return @kind void;
}
