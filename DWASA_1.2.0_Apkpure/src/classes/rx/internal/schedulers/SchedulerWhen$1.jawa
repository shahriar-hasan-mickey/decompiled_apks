record `rx.internal.schedulers.SchedulerWhen$1` @kind class @AccessFlag  extends `rx.functions.Func1` @kind interface {
  `rx.internal.schedulers.SchedulerWhen` `rx.internal.schedulers.SchedulerWhen$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler$Worker` `rx.internal.schedulers.SchedulerWhen$1.val$actualWorker` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.schedulers.SchedulerWhen$1` v0 @kind this, `rx.internal.schedulers.SchedulerWhen` v1 @kind object, `rx.Scheduler$Worker` v2 @kind object) @signature `Lrx/internal/schedulers/SchedulerWhen$1;.<init>:(Lrx/internal/schedulers/SchedulerWhen;Lrx/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b386c.  v0.`rx.internal.schedulers.SchedulerWhen$1.this$0` @type ^`rx.internal.schedulers.SchedulerWhen` := v1 @kind object;
  #L4b3870.  v0.`rx.internal.schedulers.SchedulerWhen$1.val$actualWorker` @type ^`rx.Scheduler$Worker` := v2 @kind object;
  #L4b3874.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b387a.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.schedulers.SchedulerWhen$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/schedulers/SchedulerWhen$1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b3828.  v1:= (`rx.internal.schedulers.SchedulerWhen$ScheduledAction`) v1 @kind object;
  #L4b382c.  call temp:= `call`(v0, v1) @signature `Lrx/internal/schedulers/SchedulerWhen$1;.call:(Lrx/internal/schedulers/SchedulerWhen$ScheduledAction;)Lrx/Completable;` @kind virtual;
  #L4b3832.  v1:= temp @kind object;
  #L4b3834.  return v1 @kind object;
}
procedure `rx.Completable` `call`(`rx.internal.schedulers.SchedulerWhen$1` v1 @kind this, `rx.internal.schedulers.SchedulerWhen$ScheduledAction` v2 @kind object) @signature `Lrx/internal/schedulers/SchedulerWhen$1;.call:(Lrx/internal/schedulers/SchedulerWhen$ScheduledAction;)Lrx/Completable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3848.  v0:= new `rx.internal.schedulers.SchedulerWhen$1$1`;
  #L4b384c.  call `<init>`(v0, v1, v2) @signature `Lrx/internal/schedulers/SchedulerWhen$1$1;.<init>:(Lrx/internal/schedulers/SchedulerWhen$1;Lrx/internal/schedulers/SchedulerWhen$ScheduledAction;)V` @kind direct;
  #L4b3852.  call temp:= `create`(v0) @signature `Lrx/Completable;.create:(Lrx/Completable$OnSubscribe;)Lrx/Completable;` @kind static;
  #L4b3858.  v2:= temp @kind object;
  #L4b385a.  return v2 @kind object;
}
