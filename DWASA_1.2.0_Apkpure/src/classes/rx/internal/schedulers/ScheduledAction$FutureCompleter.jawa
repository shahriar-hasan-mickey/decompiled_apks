record `rx.internal.schedulers.ScheduledAction$FutureCompleter` @kind class @AccessFlag FINAL extends `rx.Subscription` @kind interface {
  `java.util.concurrent.Future` `rx.internal.schedulers.ScheduledAction$FutureCompleter.f` @AccessFlag PRIVATE_FINAL;
  `rx.internal.schedulers.ScheduledAction` `rx.internal.schedulers.ScheduledAction$FutureCompleter.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.schedulers.ScheduledAction$FutureCompleter` v0 @kind this, `rx.internal.schedulers.ScheduledAction` v1 @kind object, `java.util.concurrent.Future` v2 @kind object) @signature `Lrx/internal/schedulers/ScheduledAction$FutureCompleter;.<init>:(Lrx/internal/schedulers/ScheduledAction;Ljava/util/concurrent/Future;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b3448.  v0.`rx.internal.schedulers.ScheduledAction$FutureCompleter.this$0` @type ^`rx.internal.schedulers.ScheduledAction` := v1 @kind object;
  #L4b344c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b3452.  v0.`rx.internal.schedulers.ScheduledAction$FutureCompleter.f` @type ^`java.util.concurrent.Future` := v2 @kind object;
  #L4b3456.  return @kind void;
}
procedure `boolean` `isUnsubscribed`(`rx.internal.schedulers.ScheduledAction$FutureCompleter` v1 @kind this) @signature `Lrx/internal/schedulers/ScheduledAction$FutureCompleter;.isUnsubscribed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3428.  v0:= v1.`rx.internal.schedulers.ScheduledAction$FutureCompleter.f` @type ^`java.util.concurrent.Future` @kind object;
  #L4b342c.  call temp:= `isCancelled`(v0) @signature `Ljava/util/concurrent/Future;.isCancelled:()Z` @kind interface;
  #L4b3432.  v0:= temp;
  #L4b3434.  return v0;
}
procedure `void` `unsubscribe`(`rx.internal.schedulers.ScheduledAction$FutureCompleter` v2 @kind this) @signature `Lrx/internal/schedulers/ScheduledAction$FutureCompleter;.unsubscribe:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b3468.  v0:= v2.`rx.internal.schedulers.ScheduledAction$FutureCompleter.this$0` @type ^`rx.internal.schedulers.ScheduledAction` @kind object;
  #L4b346c.  call temp:= `get`(v0) @signature `Lrx/internal/schedulers/ScheduledAction;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b3472.  v0:= temp @kind object;
  #L4b3474.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4b347a.  v1:= temp @kind object;
  #L4b347c.  if v0 == v1 then goto L4b348e;
  #L4b3480.  v0:= v2.`rx.internal.schedulers.ScheduledAction$FutureCompleter.f` @type ^`java.util.concurrent.Future` @kind object;
  #L4b3484.  v1:= 1I;
  #L4b3486.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L4b348c.  goto L4b349a;
  #L4b348e.  v0:= v2.`rx.internal.schedulers.ScheduledAction$FutureCompleter.f` @type ^`java.util.concurrent.Future` @kind object;
  #L4b3492.  v1:= 0I;
  #L4b3494.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L4b349a.  return @kind void;
}
