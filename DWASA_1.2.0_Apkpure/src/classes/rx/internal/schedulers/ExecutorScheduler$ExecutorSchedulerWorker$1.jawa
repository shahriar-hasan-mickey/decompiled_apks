record `rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker` `rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.subscriptions.MultipleAssignmentSubscription` `rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1.val$mas` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1` v0 @kind this, `rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker` v1 @kind object, `rx.subscriptions.MultipleAssignmentSubscription` v2 @kind object) @signature `Lrx/internal/schedulers/ExecutorScheduler$ExecutorSchedulerWorker$1;.<init>:(Lrx/internal/schedulers/ExecutorScheduler$ExecutorSchedulerWorker;Lrx/subscriptions/MultipleAssignmentSubscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b27cc.  v0.`rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1.this$0` @type ^`rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker` := v1 @kind object;
  #L4b27d0.  v0.`rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1.val$mas` @type ^`rx.subscriptions.MultipleAssignmentSubscription` := v2 @kind object;
  #L4b27d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b27da.  return @kind void;
}
procedure `void` `call`(`rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1` v2 @kind this) @signature `Lrx/internal/schedulers/ExecutorScheduler$ExecutorSchedulerWorker$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b27ec.  v0:= v2.`rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1.this$0` @type ^`rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker` @kind object;
  #L4b27f0.  v0:= v0.`rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker.tasks` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4b27f4.  v1:= v2.`rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1.val$mas` @type ^`rx.subscriptions.MultipleAssignmentSubscription` @kind object;
  #L4b27f8.  call `remove`(v0, v1) @signature `Lrx/subscriptions/CompositeSubscription;.remove:(Lrx/Subscription;)V` @kind virtual;
  #L4b27fe.  return @kind void;
}
