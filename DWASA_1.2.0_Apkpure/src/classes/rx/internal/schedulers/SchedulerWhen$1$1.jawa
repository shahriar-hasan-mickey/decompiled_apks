record `rx.internal.schedulers.SchedulerWhen$1$1` @kind class @AccessFlag  extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.internal.schedulers.SchedulerWhen$1` `rx.internal.schedulers.SchedulerWhen$1$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.schedulers.SchedulerWhen$ScheduledAction` `rx.internal.schedulers.SchedulerWhen$1$1.val$action` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.schedulers.SchedulerWhen$1$1` v0 @kind this, `rx.internal.schedulers.SchedulerWhen$1` v1 @kind object, `rx.internal.schedulers.SchedulerWhen$ScheduledAction` v2 @kind object) @signature `Lrx/internal/schedulers/SchedulerWhen$1$1;.<init>:(Lrx/internal/schedulers/SchedulerWhen$1;Lrx/internal/schedulers/SchedulerWhen$ScheduledAction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b37b8.  v0.`rx.internal.schedulers.SchedulerWhen$1$1.this$1` @type ^`rx.internal.schedulers.SchedulerWhen$1` := v1 @kind object;
  #L4b37bc.  v0.`rx.internal.schedulers.SchedulerWhen$1$1.val$action` @type ^`rx.internal.schedulers.SchedulerWhen$ScheduledAction` := v2 @kind object;
  #L4b37c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b37c6.  return @kind void;
}
procedure `void` `call`(`rx.internal.schedulers.SchedulerWhen$1$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/schedulers/SchedulerWhen$1$1;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b37d8.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L4b37dc.  call `call`(v0, v1) @signature `Lrx/internal/schedulers/SchedulerWhen$1$1;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L4b37e2.  return @kind void;
}
procedure `void` `call`(`rx.internal.schedulers.SchedulerWhen$1$1` v2 @kind this, `rx.CompletableSubscriber` v3 @kind object) @signature `Lrx/internal/schedulers/SchedulerWhen$1$1;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b37f4.  v0:= v2.`rx.internal.schedulers.SchedulerWhen$1$1.val$action` @type ^`rx.internal.schedulers.SchedulerWhen$ScheduledAction` @kind object;
  #L4b37f8.  call `onSubscribe`(v3, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L4b37fe.  v0:= v2.`rx.internal.schedulers.SchedulerWhen$1$1.val$action` @type ^`rx.internal.schedulers.SchedulerWhen$ScheduledAction` @kind object;
  #L4b3802.  v1:= v2.`rx.internal.schedulers.SchedulerWhen$1$1.this$1` @type ^`rx.internal.schedulers.SchedulerWhen$1` @kind object;
  #L4b3806.  v1:= v1.`rx.internal.schedulers.SchedulerWhen$1.val$actualWorker` @type ^`rx.Scheduler$Worker` @kind object;
  #L4b380a.  call `access$000`(v0, v1) @signature `Lrx/internal/schedulers/SchedulerWhen$ScheduledAction;.access$000:(Lrx/internal/schedulers/SchedulerWhen$ScheduledAction;Lrx/Scheduler$Worker;)V` @kind static;
  #L4b3810.  call `onCompleted`(v3) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L4b3816.  return @kind void;
}
