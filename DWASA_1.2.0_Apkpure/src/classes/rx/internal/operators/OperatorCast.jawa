record `rx.internal.operators.OperatorCast` @kind class @AccessFlag PUBLIC extends `rx.Observable$Operator` @kind interface {
  `java.lang.Class` `rx.internal.operators.OperatorCast.castClass` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorCast` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lrx/internal/operators/OperatorCast;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49f864.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49f86a.  v0.`rx.internal.operators.OperatorCast.castClass` @type ^`java.lang.Class` := v1 @kind object;
  #L49f86e.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorCast` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorCast;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49f81c.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L49f820.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorCast;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L49f826.  v1:= temp @kind object;
  #L49f828.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorCast` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorCast;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49f83c.  v0:= new `rx.internal.operators.OperatorCast$CastSubscriber`;
  #L49f840.  v1:= v2.`rx.internal.operators.OperatorCast.castClass` @type ^`java.lang.Class` @kind object;
  #L49f844.  call `<init>`(v0, v3, v1) @signature `Lrx/internal/operators/OperatorCast$CastSubscriber;.<init>:(Lrx/Subscriber;Ljava/lang/Class;)V` @kind direct;
  #L49f84a.  call `add`(v3, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49f850.  return v0 @kind object;
}
