record `rx.internal.operators.OnSubscribeRedo$RedoFinite$1` @kind class @AccessFlag  extends `rx.functions.Func1` @kind interface {
  `int` `rx.internal.operators.OnSubscribeRedo$RedoFinite$1.num` @AccessFlag ;
  `rx.internal.operators.OnSubscribeRedo$RedoFinite` `rx.internal.operators.OnSubscribeRedo$RedoFinite$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeRedo$RedoFinite$1` v0 @kind this, `rx.internal.operators.OnSubscribeRedo$RedoFinite` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RedoFinite$1;.<init>:(Lrx/internal/operators/OnSubscribeRedo$RedoFinite;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49c204.  v0.`rx.internal.operators.OnSubscribeRedo$RedoFinite$1.this$0` @type ^`rx.internal.operators.OnSubscribeRedo$RedoFinite` := v1 @kind object;
  #L49c208.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49c20e.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OnSubscribeRedo$RedoFinite$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RedoFinite$1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49c184.  v1:= (`rx.Notification`) v1 @kind object;
  #L49c188.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeRedo$RedoFinite$1;.call:(Lrx/Notification;)Lrx/Notification;` @kind virtual;
  #L49c18e.  v1:= temp @kind object;
  #L49c190.  return v1 @kind object;
}
procedure `rx.Notification` `call`(`rx.internal.operators.OnSubscribeRedo$RedoFinite$1` v5 @kind this, `rx.Notification` v6 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RedoFinite$1;.call:(Lrx/Notification;)Lrx/Notification;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49c1a4.  v0:= v5.`rx.internal.operators.OnSubscribeRedo$RedoFinite$1.this$0` @type ^`rx.internal.operators.OnSubscribeRedo$RedoFinite` @kind object;
  #L49c1a8.  v0:= v0.`rx.internal.operators.OnSubscribeRedo$RedoFinite.count` @type ^`long` @kind wide;
  #L49c1ac.  v2:= 0L;
  #L49c1b0.  v4:= lcmp(v0, v2);
  #L49c1b4.  if v4 != 0 then goto L49c1ba;
  #L49c1b8.  return v6 @kind object;
  #L49c1ba.  v0:= v5.`rx.internal.operators.OnSubscribeRedo$RedoFinite$1.num` @type ^`int`;
  #L49c1be.  v0:= v0 + 1;
  #L49c1c2.  v5.`rx.internal.operators.OnSubscribeRedo$RedoFinite$1.num` @type ^`int` := v0;
  #L49c1c6.  v0:= v5.`rx.internal.operators.OnSubscribeRedo$RedoFinite$1.num` @type ^`int`;
  #L49c1ca.  v0:= (`long`) v0 @kind i2l;
  #L49c1cc.  v2:= v5.`rx.internal.operators.OnSubscribeRedo$RedoFinite$1.this$0` @type ^`rx.internal.operators.OnSubscribeRedo$RedoFinite` @kind object;
  #L49c1d0.  v2:= v2.`rx.internal.operators.OnSubscribeRedo$RedoFinite.count` @type ^`long` @kind wide;
  #L49c1d4.  v4:= lcmp(v0, v2);
  #L49c1d8.  if v4 > 0 then goto L49c1f0;
  #L49c1dc.  v6:= v5.`rx.internal.operators.OnSubscribeRedo$RedoFinite$1.num` @type ^`int`;
  #L49c1e0.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c1e6.  v6:= temp @kind object;
  #L49c1e8.  call temp:= `createOnNext`(v6) @signature `Lrx/Notification;.createOnNext:(Ljava/lang/Object;)Lrx/Notification;` @kind static;
  #L49c1ee.  v6:= temp @kind object;
  #L49c1f0.  return v6 @kind object;
}
