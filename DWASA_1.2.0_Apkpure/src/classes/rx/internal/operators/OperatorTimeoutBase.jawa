record `rx.internal.operators.OperatorTimeoutBase` @kind class @AccessFlag  extends `rx.Observable$Operator` @kind interface {
  `rx.internal.operators.OperatorTimeoutBase$FirstTimeoutStub` `rx.internal.operators.OperatorTimeoutBase.firstTimeoutStub` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.OperatorTimeoutBase.other` @AccessFlag FINAL;
  `rx.Scheduler` `rx.internal.operators.OperatorTimeoutBase.scheduler` @AccessFlag FINAL;
  `rx.internal.operators.OperatorTimeoutBase$TimeoutStub` `rx.internal.operators.OperatorTimeoutBase.timeoutStub` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorTimeoutBase` v0 @kind this, `rx.internal.operators.OperatorTimeoutBase$FirstTimeoutStub` v1 @kind object, `rx.internal.operators.OperatorTimeoutBase$TimeoutStub` v2 @kind object, `rx.Observable` v3 @kind object, `rx.Scheduler` v4 @kind object) @signature `Lrx/internal/operators/OperatorTimeoutBase;.<init>:(Lrx/internal/operators/OperatorTimeoutBase$FirstTimeoutStub;Lrx/internal/operators/OperatorTimeoutBase$TimeoutStub;Lrx/Observable;Lrx/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ab1c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ab1ce.  v0.`rx.internal.operators.OperatorTimeoutBase.firstTimeoutStub` @type ^`rx.internal.operators.OperatorTimeoutBase$FirstTimeoutStub` := v1 @kind object;
  #L4ab1d2.  v0.`rx.internal.operators.OperatorTimeoutBase.timeoutStub` @type ^`rx.internal.operators.OperatorTimeoutBase$TimeoutStub` := v2 @kind object;
  #L4ab1d6.  v0.`rx.internal.operators.OperatorTimeoutBase.other` @type ^`rx.Observable` := v3 @kind object;
  #L4ab1da.  v0.`rx.internal.operators.OperatorTimeoutBase.scheduler` @type ^`rx.Scheduler` := v4 @kind object;
  #L4ab1de.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorTimeoutBase` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorTimeoutBase;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ab11c.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4ab120.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorTimeoutBase;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4ab126.  v1:= temp @kind object;
  #L4ab128.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorTimeoutBase` v9 @kind this, `rx.Subscriber` v10 @kind object) @signature `Lrx/internal/operators/OperatorTimeoutBase;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4ab13c.  v0:= v9.`rx.internal.operators.OperatorTimeoutBase.scheduler` @type ^`rx.Scheduler` @kind object;
  #L4ab140.  call temp:= `createWorker`(v0) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L4ab146.  v0:= temp @kind object;
  #L4ab148.  call `add`(v10, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4ab14e.  v7:= new `rx.observers.SerializedSubscriber`;
  #L4ab152.  call `<init>`(v7, v10) @signature `Lrx/observers/SerializedSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4ab158.  v10:= new `rx.subscriptions.SerialSubscription`;
  #L4ab15c.  call `<init>`(v10) @signature `Lrx/subscriptions/SerialSubscription;.<init>:()V` @kind direct;
  #L4ab162.  call `add`(v7, v10) @signature `Lrx/observers/SerializedSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4ab168.  v8:= new `rx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber`;
  #L4ab16c.  v3:= v9.`rx.internal.operators.OperatorTimeoutBase.timeoutStub` @type ^`rx.internal.operators.OperatorTimeoutBase$TimeoutStub` @kind object;
  #L4ab170.  v5:= v9.`rx.internal.operators.OperatorTimeoutBase.other` @type ^`rx.Observable` @kind object;
  #L4ab174.  v1:= v8 @kind object;
  #L4ab176.  v2:= v7 @kind object;
  #L4ab178.  v4:= v10 @kind object;
  #L4ab17a.  v6:= v0 @kind object;
  #L4ab17c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber;.<init>:(Lrx/observers/SerializedSubscriber;Lrx/internal/operators/OperatorTimeoutBase$TimeoutStub;Lrx/subscriptions/SerialSubscription;Lrx/Observable;Lrx/Scheduler$Worker;)V` @kind direct;
  #L4ab182.  call `add`(v7, v8) @signature `Lrx/observers/SerializedSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4ab188.  v1:= v8.`rx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber.arbiter` @type ^`rx.internal.producers.ProducerArbiter` @kind object;
  #L4ab18c.  call `setProducer`(v7, v1) @signature `Lrx/observers/SerializedSubscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4ab192.  v1:= v9.`rx.internal.operators.OperatorTimeoutBase.firstTimeoutStub` @type ^`rx.internal.operators.OperatorTimeoutBase$FirstTimeoutStub` @kind object;
  #L4ab196.  v2:= 0L;
  #L4ab19a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4ab1a0.  v2:= temp @kind object;
  #L4ab1a2.  call temp:= `call`(v1, v8, v2, v0) @signature `Lrx/internal/operators/OperatorTimeoutBase$FirstTimeoutStub;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ab1a8.  v0:= temp @kind object;
  #L4ab1aa.  v0:= (`rx.Subscription`) v0 @kind object;
  #L4ab1ae.  call `set`(v10, v0) @signature `Lrx/subscriptions/SerialSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L4ab1b4.  return v8 @kind object;
}
