record `rx.internal.operators.OnSubscribeFromEmitter$NoneEmitter` @kind class @AccessFlag FINAL extends `rx.internal.operators.OnSubscribeFromEmitter$BaseEmitter` @kind class {
}
global `long` `@@rx.internal.operators.OnSubscribeFromEmitter$NoneEmitter.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeFromEmitter$NoneEmitter` v0 @kind this, `rx.Subscriber` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeFromEmitter$NoneEmitter;.<init>:(Lrx/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4996a0.  call `<init>`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeFromEmitter$BaseEmitter;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4996a6.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribeFromEmitter$NoneEmitter` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lrx/internal/operators/OnSubscribeFromEmitter$NoneEmitter;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4996b8.  v0:= v4.`rx.internal.operators.OnSubscribeFromEmitter$NoneEmitter.actual` @type ^`rx.Subscriber` @kind object;
  #L4996bc.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/Subscriber;.isUnsubscribed:()Z` @kind virtual;
  #L4996c2.  v0:= temp;
  #L4996c4.  if v0 == 0 then goto L4996ca;
  #L4996c8.  return @kind void;
  #L4996ca.  v0:= v4.`rx.internal.operators.OnSubscribeFromEmitter$NoneEmitter.actual` @type ^`rx.Subscriber` @kind object;
  #L4996ce.  call `onNext`(v0, v5) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4996d4.  call temp:= `get`(v4) @signature `Lrx/internal/operators/OnSubscribeFromEmitter$NoneEmitter;.get:()J` @kind virtual;
  #L4996da.  v0:= temp @kind wide;
  #L4996dc.  v2:= 0L;
  #L4996e0.  v5:= lcmp(v0, v2);
  #L4996e4.  if v5 == 0 then goto L4996fc;
  #L4996e8.  v2:= 1L;
  #L4996ec.  v2:= v0 - v2 @kind long;
  #L4996f0.  call temp:= `compareAndSet`(v4, v0, v2) @signature `Lrx/internal/operators/OnSubscribeFromEmitter$NoneEmitter;.compareAndSet:(JJ)Z` @kind virtual;
  #L4996f6.  v5:= temp;
  #L4996f8.  if v5 == 0 then goto L4996d4;
  #L4996fc.  return @kind void;
}
