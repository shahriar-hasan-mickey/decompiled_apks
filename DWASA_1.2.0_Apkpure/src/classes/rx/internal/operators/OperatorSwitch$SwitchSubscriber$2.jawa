record `rx.internal.operators.OperatorSwitch$SwitchSubscriber$2` @kind class @AccessFlag  extends `rx.Producer` @kind interface {
  `rx.internal.operators.OperatorSwitch$SwitchSubscriber` `rx.internal.operators.OperatorSwitch$SwitchSubscriber$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorSwitch$SwitchSubscriber$2` v0 @kind this, `rx.internal.operators.OperatorSwitch$SwitchSubscriber` v1 @kind object) @signature `Lrx/internal/operators/OperatorSwitch$SwitchSubscriber$2;.<init>:(Lrx/internal/operators/OperatorSwitch$SwitchSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a92e0.  v0.`rx.internal.operators.OperatorSwitch$SwitchSubscriber$2.this$0` @type ^`rx.internal.operators.OperatorSwitch$SwitchSubscriber` := v1 @kind object;
  #L4a92e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a92ea.  return @kind void;
}
procedure `void` `request`(`rx.internal.operators.OperatorSwitch$SwitchSubscriber$2` v3 @kind this, `long` v4 ) @signature `Lrx/internal/operators/OperatorSwitch$SwitchSubscriber$2;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a92fc.  v0:= 0L;
  #L4a9300.  v2:= lcmp(v4, v0);
  #L4a9304.  if v2 <= 0 then goto L4a9314;
  #L4a9308.  v0:= v3.`rx.internal.operators.OperatorSwitch$SwitchSubscriber$2.this$0` @type ^`rx.internal.operators.OperatorSwitch$SwitchSubscriber` @kind object;
  #L4a930c.  call `childRequested`(v0, v4) @signature `Lrx/internal/operators/OperatorSwitch$SwitchSubscriber;.childRequested:(J)V` @kind virtual;
  #L4a9312.  goto L4a931c;
  #L4a9314.  v2:= lcmp(v4, v0);
  #L4a9318.  if v2 < 0 then goto L4a931e;
  #L4a931c.  return @kind void;
  #L4a931e.  v0:= new `java.lang.IllegalArgumentException`;
  #L4a9322.  v1:= new `java.lang.StringBuilder`;
  #L4a9326.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a932c.  v2:= "n >= 0 expected but it was " @kind object;
  #L4a9330.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a9336.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a933c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a9342.  v4:= temp @kind object;
  #L4a9344.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a934a.  throw v0;
}
