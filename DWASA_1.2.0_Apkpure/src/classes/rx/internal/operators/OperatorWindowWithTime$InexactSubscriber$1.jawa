record `rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OperatorWindowWithTime$InexactSubscriber` `rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$1.this$1` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$1` v0 @kind this, `rx.internal.operators.OperatorWindowWithTime$InexactSubscriber` v1 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithTime$InexactSubscriber$1;.<init>:(Lrx/internal/operators/OperatorWindowWithTime$InexactSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4adff0.  v0.`rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$1.this$1` @type ^`rx.internal.operators.OperatorWindowWithTime$InexactSubscriber` := v1 @kind object;
  #L4adff4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4adffa.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithTime$InexactSubscriber$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae00c.  v0:= v1.`rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$1.this$1` @type ^`rx.internal.operators.OperatorWindowWithTime$InexactSubscriber` @kind object;
  #L4ae010.  call `startNewChunk`(v0) @signature `Lrx/internal/operators/OperatorWindowWithTime$InexactSubscriber;.startNewChunk:()V` @kind virtual;
  #L4ae016.  return @kind void;
}
