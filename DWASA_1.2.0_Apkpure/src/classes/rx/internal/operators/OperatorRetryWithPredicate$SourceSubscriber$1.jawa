record `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Observable` `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.val$o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` v0 @kind this, `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` v1 @kind object, `rx.Observable` v2 @kind object) @signature `Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1;.<init>:(Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber;Lrx/Observable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a76d0.  v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` := v1 @kind object;
  #L4a76d4.  v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.val$o` @type ^`rx.Observable` := v2 @kind object;
  #L4a76d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a76de.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a76f0.  v0:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a76f4.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.attempts` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4a76f8.  call temp:= `incrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L4a76fe.  v0:= new `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1`;
  #L4a7702.  call `<init>`(v0, v2, v2) @signature `Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1$1;.<init>:(Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1;Lrx/functions/Action0;)V` @kind direct;
  #L4a7708.  v1:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a770c.  v1:= v1.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.serialSubscription` @type ^`rx.subscriptions.SerialSubscription` @kind object;
  #L4a7710.  call `set`(v1, v0) @signature `Lrx/subscriptions/SerialSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L4a7716.  v1:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.val$o` @type ^`rx.Observable` @kind object;
  #L4a771a.  call temp:= `unsafeSubscribe`(v1, v0) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4a7720.  return @kind void;
}
