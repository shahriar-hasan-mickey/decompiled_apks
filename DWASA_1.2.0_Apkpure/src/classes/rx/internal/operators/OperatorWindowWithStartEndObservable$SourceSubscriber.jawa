record `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `rx.Subscriber` `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.child` @AccessFlag FINAL;
  `java.util.List` `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.chunks` @AccessFlag FINAL;
  `rx.subscriptions.CompositeSubscription` `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @AccessFlag FINAL;
  `boolean` `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.done` @AccessFlag ;
  `java.lang.Object` `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.guard` @AccessFlag FINAL;
  `rx.internal.operators.OperatorWindowWithStartEndObservable` `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` v0 @kind this, `rx.internal.operators.OperatorWindowWithStartEndObservable` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.subscriptions.CompositeSubscription` v3 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.<init>:(Lrx/internal/operators/OperatorWindowWithStartEndObservable;Lrx/Subscriber;Lrx/subscriptions/CompositeSubscription;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ad454.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.this$0` @type ^`rx.internal.operators.OperatorWindowWithStartEndObservable` := v1 @kind object;
  #L4ad458.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4ad45e.  v1:= new `rx.observers.SerializedSubscriber`;
  #L4ad462.  call `<init>`(v1, v2) @signature `Lrx/observers/SerializedSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4ad468.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.child` @type ^`rx.Subscriber` := v1 @kind object;
  #L4ad46c.  v1:= new `java.lang.Object`;
  #L4ad470.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ad476.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.guard` @type ^`java.lang.Object` := v1 @kind object;
  #L4ad47a.  v1:= new `java.util.LinkedList`;
  #L4ad47e.  call `<init>`(v1) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4ad484.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.chunks` @type ^`java.util.List` := v1 @kind object;
  #L4ad488.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @type ^`rx.subscriptions.CompositeSubscription` := v3 @kind object;
  #L4ad48c.  return @kind void;
}
procedure `void` `beginWindow`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.beginWindow:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4ad4a0.  call temp:= `createSerializedSubject`(v3) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.createSerializedSubject:()Lrx/internal/operators/OperatorWindowWithStartEndObservable$SerializedSubject;` @kind virtual;
  #L4ad4a6.  v0:= temp @kind object;
  #L4ad4a8.  v1:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.guard` @type ^`java.lang.Object` @kind object;
  #L4ad4ac.  @monitorenter v1
  #L4ad4ae.  v2:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.done` @type ^`boolean` @kind boolean;
  #L4ad4b2.  if v2 == 0 then goto L4ad4ba;
  #L4ad4b6.  @monitorexit v1
  #L4ad4b8.  return @kind void;
  #L4ad4ba.  v2:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.chunks` @type ^`java.util.List` @kind object;
  #L4ad4be.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4ad4c4.  @monitorexit v1
  #L4ad4c6.  v1:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.child` @type ^`rx.Subscriber` @kind object;
  #L4ad4ca.  v2:= v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject.producer` @type ^`rx.Observable` @kind object;
  #L4ad4ce.  call `onNext`(v1, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4ad4d4.  v1:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.this$0` @type ^`rx.internal.operators.OperatorWindowWithStartEndObservable` @kind object;
  #L4ad4d8.  v1:= v1.`rx.internal.operators.OperatorWindowWithStartEndObservable.windowClosingSelector` @type ^`rx.functions.Func1` @kind object;
  #L4ad4dc.  call temp:= `call`(v1, v4) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ad4e2.  v4:= temp @kind object;
  #L4ad4e4.  v4:= (`rx.Observable`) v4 @kind object;
  #L4ad4e8.  v1:= new `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1`;
  #L4ad4ec.  call `<init>`(v1, v3, v0) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber$1;.<init>:(Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;Lrx/internal/operators/OperatorWindowWithStartEndObservable$SerializedSubject;)V` @kind direct;
  #L4ad4f2.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4ad4f6.  call `add`(v0, v1) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4ad4fc.  call temp:= `unsafeSubscribe`(v4, v1) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4ad502.  return @kind void;
  #L4ad504.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad506.  call `onError`(v3, v4) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ad50c.  return @kind void;
  #L4ad50e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad510.  @monitorexit v1
  #L4ad512.  throw v4;
  catch `java.lang.Throwable` @[L4ad4ae..L4ad4c6] goto L4ad50e;
  catch `java.lang.Throwable` @[L4ad4d4..L4ad4e8] goto L4ad504;
  catch `java.lang.Throwable` @[L4ad510..L4ad512] goto L4ad50e;
}
procedure `rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject` `createSerializedSubject`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` v2 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.createSerializedSubject:()Lrx/internal/operators/OperatorWindowWithStartEndObservable$SerializedSubject;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4ad430.  call temp:= `create`() @signature `Lrx/subjects/UnicastSubject;.create:()Lrx/subjects/UnicastSubject;` @kind static;
  #L4ad436.  v0:= temp @kind object;
  #L4ad438.  v1:= new `rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject`;
  #L4ad43c.  call `<init>`(v1, v0, v0) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SerializedSubject;.<init>:(Lrx/Observer;Lrx/Observable;)V` @kind direct;
  #L4ad442.  return v1 @kind object;
}
procedure `void` `endWindow`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` v3 @kind this, `rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject` v4 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.endWindow:(Lrx/internal/operators/OperatorWindowWithStartEndObservable$SerializedSubject;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4ad544.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.guard` @type ^`java.lang.Object` @kind object;
  #L4ad548.  @monitorenter v0
  #L4ad54a.  v1:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.done` @type ^`boolean` @kind boolean;
  #L4ad54e.  if v1 == 0 then goto L4ad556;
  #L4ad552.  @monitorexit v0
  #L4ad554.  return @kind void;
  #L4ad556.  v1:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.chunks` @type ^`java.util.List` @kind object;
  #L4ad55a.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ad560.  v1:= temp @kind object;
  #L4ad562.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ad568.  v2:= temp;
  #L4ad56a.  if v2 == 0 then goto L4ad588;
  #L4ad56e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ad574.  v2:= temp @kind object;
  #L4ad576.  v2:= (`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject`) v2 @kind object;
  #L4ad57a.  if v2 != v4 then goto L4ad562;
  #L4ad57e.  v2:= 1I;
  #L4ad580.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L4ad586.  goto L4ad58a;
  #L4ad588.  v2:= 0I;
  #L4ad58a.  @monitorexit v0
  #L4ad58c.  if v2 == 0 then goto L4ad59a;
  #L4ad590.  v4:= v4.`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject.consumer` @type ^`rx.Observer` @kind object;
  #L4ad594.  call `onCompleted`(v4) @signature `Lrx/Observer;.onCompleted:()V` @kind interface;
  #L4ad59a.  return @kind void;
  #L4ad59c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad59e.  @monitorexit v0
  #L4ad5a0.  goto L4ad5a4;
  #L4ad5a2.  throw v4;
  #L4ad5a4.  goto L4ad5a2;
  catch `java.lang.Throwable` @[L4ad54a..L4ad58c] goto L4ad59c;
  catch `java.lang.Throwable` @[L4ad59e..L4ad5a0] goto L4ad59c;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` v3 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ad5cc.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.guard` @type ^`java.lang.Object` @kind object;
  #L4ad5d0.  @monitorenter v0
  #L4ad5d2.  v1:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.done` @type ^`boolean` @kind boolean;
  #L4ad5d6.  if v1 == 0 then goto L4ad5e8;
  #L4ad5da.  @monitorexit v0
  #L4ad5dc.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4ad5e0.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L4ad5e6.  return @kind void;
  #L4ad5e8.  v1:= 1I;
  #L4ad5ea.  v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.done` @type ^`boolean` := v1 @kind boolean;
  #L4ad5ee.  v1:= new `java.util.ArrayList`;
  #L4ad5f2.  v2:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.chunks` @type ^`java.util.List` @kind object;
  #L4ad5f6.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4ad5fc.  v2:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.chunks` @type ^`java.util.List` @kind object;
  #L4ad600.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4ad606.  @monitorexit v0
  #L4ad608.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ad60e.  v0:= temp @kind object;
  #L4ad610.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ad616.  v1:= temp;
  #L4ad618.  if v1 == 0 then goto L4ad634;
  #L4ad61c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ad622.  v1:= temp @kind object;
  #L4ad624.  v1:= (`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject`) v1 @kind object;
  #L4ad628.  v1:= v1.`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject.consumer` @type ^`rx.Observer` @kind object;
  #L4ad62c.  call `onCompleted`(v1) @signature `Lrx/Observer;.onCompleted:()V` @kind interface;
  #L4ad632.  goto L4ad610;
  #L4ad634.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.child` @type ^`rx.Subscriber` @kind object;
  #L4ad638.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4ad63e.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4ad642.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L4ad648.  return @kind void;
  #L4ad64a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad64c.  @monitorexit v0
  #L4ad64e.  throw v1;
  #L4ad650.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad652.  v1:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4ad656.  call `unsubscribe`(v1) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L4ad65c.  goto L4ad660;
  #L4ad65e.  throw v0;
  #L4ad660.  goto L4ad65e;
  catch `java.lang.Throwable` @[L4ad5cc..L4ad5d2] goto L4ad650;
  catch `java.lang.Throwable` @[L4ad5d2..L4ad5dc] goto L4ad64a;
  catch `java.lang.Throwable` @[L4ad5ea..L4ad608] goto L4ad64a;
  catch `java.lang.Throwable` @[L4ad608..L4ad63e] goto L4ad650;
  catch `java.lang.Throwable` @[L4ad64c..L4ad64e] goto L4ad64a;
  catch `java.lang.Throwable` @[L4ad64e..L4ad650] goto L4ad650;
}
procedure `void` `onError`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ad6ac.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.guard` @type ^`java.lang.Object` @kind object;
  #L4ad6b0.  @monitorenter v0
  #L4ad6b2.  v1:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.done` @type ^`boolean` @kind boolean;
  #L4ad6b6.  if v1 == 0 then goto L4ad6c8;
  #L4ad6ba.  @monitorexit v0
  #L4ad6bc.  v4:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4ad6c0.  call `unsubscribe`(v4) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L4ad6c6.  return @kind void;
  #L4ad6c8.  v1:= 1I;
  #L4ad6ca.  v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.done` @type ^`boolean` := v1 @kind boolean;
  #L4ad6ce.  v1:= new `java.util.ArrayList`;
  #L4ad6d2.  v2:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.chunks` @type ^`java.util.List` @kind object;
  #L4ad6d6.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4ad6dc.  v2:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.chunks` @type ^`java.util.List` @kind object;
  #L4ad6e0.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4ad6e6.  @monitorexit v0
  #L4ad6e8.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ad6ee.  v0:= temp @kind object;
  #L4ad6f0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ad6f6.  v1:= temp;
  #L4ad6f8.  if v1 == 0 then goto L4ad714;
  #L4ad6fc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ad702.  v1:= temp @kind object;
  #L4ad704.  v1:= (`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject`) v1 @kind object;
  #L4ad708.  v1:= v1.`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject.consumer` @type ^`rx.Observer` @kind object;
  #L4ad70c.  call `onError`(v1, v4) @signature `Lrx/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ad712.  goto L4ad6f0;
  #L4ad714.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.child` @type ^`rx.Subscriber` @kind object;
  #L4ad718.  call `onError`(v0, v4) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ad71e.  v4:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4ad722.  call `unsubscribe`(v4) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L4ad728.  return @kind void;
  #L4ad72a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad72c.  @monitorexit v0
  #L4ad72e.  throw v4;
  #L4ad730.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad732.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4ad736.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L4ad73c.  goto L4ad740;
  #L4ad73e.  throw v4;
  #L4ad740.  goto L4ad73e;
  catch `java.lang.Throwable` @[L4ad6ac..L4ad6b2] goto L4ad730;
  catch `java.lang.Throwable` @[L4ad6b2..L4ad6bc] goto L4ad72a;
  catch `java.lang.Throwable` @[L4ad6ca..L4ad6e8] goto L4ad72a;
  catch `java.lang.Throwable` @[L4ad6e8..L4ad71e] goto L4ad730;
  catch `java.lang.Throwable` @[L4ad72c..L4ad72e] goto L4ad72a;
  catch `java.lang.Throwable` @[L4ad72e..L4ad730] goto L4ad730;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ad78c.  v0:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.guard` @type ^`java.lang.Object` @kind object;
  #L4ad790.  @monitorenter v0
  #L4ad792.  v1:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.done` @type ^`boolean` @kind boolean;
  #L4ad796.  if v1 == 0 then goto L4ad79e;
  #L4ad79a.  @monitorexit v0
  #L4ad79c.  return @kind void;
  #L4ad79e.  v1:= new `java.util.ArrayList`;
  #L4ad7a2.  v2:= v3.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.chunks` @type ^`java.util.List` @kind object;
  #L4ad7a6.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4ad7ac.  @monitorexit v0
  #L4ad7ae.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ad7b4.  v0:= temp @kind object;
  #L4ad7b6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ad7bc.  v1:= temp;
  #L4ad7be.  if v1 == 0 then goto L4ad7da;
  #L4ad7c2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ad7c8.  v1:= temp @kind object;
  #L4ad7ca.  v1:= (`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject`) v1 @kind object;
  #L4ad7ce.  v1:= v1.`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject.consumer` @type ^`rx.Observer` @kind object;
  #L4ad7d2.  call `onNext`(v1, v4) @signature `Lrx/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ad7d8.  goto L4ad7b6;
  #L4ad7da.  return @kind void;
  #L4ad7dc.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad7de.  @monitorexit v0
  #L4ad7e0.  goto L4ad7e4;
  #L4ad7e2.  throw v4;
  #L4ad7e4.  goto L4ad7e2;
  catch `java.lang.Throwable` @[L4ad792..L4ad7ae] goto L4ad7dc;
  catch `java.lang.Throwable` @[L4ad7de..L4ad7e0] goto L4ad7dc;
}
procedure `void` `onStart`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` v2 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad80c.  v0:= 9223372036854775807L;
  #L4ad816.  call `request`(v2, v0) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.request:(J)V` @kind virtual;
  #L4ad81c.  return @kind void;
}
