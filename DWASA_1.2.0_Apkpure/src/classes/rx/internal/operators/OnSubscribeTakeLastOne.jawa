record `rx.internal.operators.OnSubscribeTakeLastOne` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.Observable` `rx.internal.operators.OnSubscribeTakeLastOne.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeTakeLastOne` v0 @kind this, `rx.Observable` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne;.<init>:(Lrx/Observable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49d1b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49d1be.  v0.`rx.internal.operators.OnSubscribeTakeLastOne.source` @type ^`rx.Observable` := v1 @kind object;
  #L49d1c2.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeTakeLastOne` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49d1d4.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L49d1d8.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L49d1de.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeTakeLastOne` v1 @kind this, `rx.Subscriber` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49d1f0.  v0:= new `rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber`;
  #L49d1f4.  call `<init>`(v0, v2) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne$TakeLastOneSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49d1fa.  v2:= v1.`rx.internal.operators.OnSubscribeTakeLastOne.source` @type ^`rx.Observable` @kind object;
  #L49d1fe.  call `subscribeTo`(v0, v2) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne$TakeLastOneSubscriber;.subscribeTo:(Lrx/Observable;)V` @kind virtual;
  #L49d204.  return @kind void;
}
