record `rx.internal.operators.OnSubscribeRedo$RedoFinite` @kind class @AccessFlag PUBLIC_FINAL extends `rx.functions.Func1` @kind interface {
  `long` `rx.internal.operators.OnSubscribeRedo$RedoFinite.count` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeRedo$RedoFinite` v0 @kind this, `long` v1 ) @signature `Lrx/internal/operators/OnSubscribeRedo$RedoFinite;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49c26c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49c272.  v0.`rx.internal.operators.OnSubscribeRedo$RedoFinite.count` @type ^`long` := v1 @kind wide;
  #L49c276.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OnSubscribeRedo$RedoFinite` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RedoFinite;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49c220.  v1:= (`rx.Observable`) v1 @kind object;
  #L49c224.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeRedo$RedoFinite;.call:(Lrx/Observable;)Lrx/Observable;` @kind virtual;
  #L49c22a.  v1:= temp @kind object;
  #L49c22c.  return v1 @kind object;
}
procedure `rx.Observable` `call`(`rx.internal.operators.OnSubscribeRedo$RedoFinite` v1 @kind this, `rx.Observable` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RedoFinite;.call:(Lrx/Observable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49c240.  v0:= new `rx.internal.operators.OnSubscribeRedo$RedoFinite$1`;
  #L49c244.  call `<init>`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeRedo$RedoFinite$1;.<init>:(Lrx/internal/operators/OnSubscribeRedo$RedoFinite;)V` @kind direct;
  #L49c24a.  call temp:= `map`(v2, v0) @signature `Lrx/Observable;.map:(Lrx/functions/Func1;)Lrx/Observable;` @kind virtual;
  #L49c250.  v2:= temp @kind object;
  #L49c252.  call temp:= `dematerialize`(v2) @signature `Lrx/Observable;.dematerialize:()Lrx/Observable;` @kind virtual;
  #L49c258.  v2:= temp @kind object;
  #L49c25a.  return v2 @kind object;
}
