record `rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber` @kind class @AccessFlag FINAL extends `rx.internal.operators.DeferredScalarSubscriber` @kind class {
}
global `java.lang.Object` `@@rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber.EMPTY` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/operators/OnSubscribeTakeLastOne$TakeLastOneSubscriber;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L49d134.  v0:= new `java.lang.Object`;
  #L49d138.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49d13e.  `@@rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber.EMPTY` @type ^`java.lang.Object` := v0 @kind object;
  #L49d142.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber` v0 @kind this, `rx.Subscriber` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne$TakeLastOneSubscriber;.<init>:(Lrx/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49d154.  call `<init>`(v0, v1) @signature `Lrx/internal/operators/DeferredScalarSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49d15a.  v1:= `@@rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber.EMPTY` @type ^`java.lang.Object` @kind object;
  #L49d15e.  v0.`rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber.value` @type ^`java.lang.Object` := v1 @kind object;
  #L49d162.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber` v2 @kind this) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne$TakeLastOneSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49d174.  v0:= v2.`rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L49d178.  v1:= `@@rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber.EMPTY` @type ^`java.lang.Object` @kind object;
  #L49d17c.  if v0 != v1 then goto L49d188;
  #L49d180.  call `complete`(v2) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne$TakeLastOneSubscriber;.complete:()V` @kind virtual;
  #L49d186.  goto L49d18e;
  #L49d188.  call `complete`(v2, v0) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne$TakeLastOneSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L49d18e.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeTakeLastOne$TakeLastOneSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L49d1a0.  v0.`rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber.value` @type ^`java.lang.Object` := v1 @kind object;
  #L49d1a4.  return @kind void;
}
