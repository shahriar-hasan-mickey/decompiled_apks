record `rx.internal.operators.OperatorObserveOn$1` @kind class @AccessFlag FINAL extends `rx.Observable$Operator` @kind interface {
  `int` `rx.internal.operators.OperatorObserveOn$1.val$n` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorObserveOn$1` v0 @kind this, `int` v1 ) @signature `Lrx/internal/operators/OperatorObserveOn$1;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a3f10.  v0.`rx.internal.operators.OperatorObserveOn$1.val$n` @type ^`int` := v1;
  #L4a3f14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a3f1a.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorObserveOn$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorObserveOn$1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a3ec0.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a3ec4.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorObserveOn$1;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4a3eca.  v1:= temp @kind object;
  #L4a3ecc.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorObserveOn$1` v4 @kind this, `rx.Subscriber` v5 @kind object) @signature `Lrx/internal/operators/OperatorObserveOn$1;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a3ee0.  v0:= new `rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber`;
  #L4a3ee4.  call temp:= `immediate`() @signature `Lrx/schedulers/Schedulers;.immediate:()Lrx/Scheduler;` @kind static;
  #L4a3eea.  v1:= temp @kind object;
  #L4a3eec.  v2:= v4.`rx.internal.operators.OperatorObserveOn$1.val$n` @type ^`int`;
  #L4a3ef0.  v3:= 0I;
  #L4a3ef2.  call `<init>`(v0, v1, v5, v3, v2) @signature `Lrx/internal/operators/OperatorObserveOn$ObserveOnSubscriber;.<init>:(Lrx/Scheduler;Lrx/Subscriber;ZI)V` @kind direct;
  #L4a3ef8.  call `init`(v0) @signature `Lrx/internal/operators/OperatorObserveOn$ObserveOnSubscriber;.init:()V` @kind virtual;
  #L4a3efe.  return v0 @kind object;
}
