record `rx.internal.operators.OperatorMapPair` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.functions.Func1` `rx.internal.operators.OperatorMapPair.collectionSelector` @AccessFlag FINAL;
  `rx.functions.Func2` `rx.internal.operators.OperatorMapPair.resultSelector` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorMapPair` v0 @kind this, `rx.functions.Func1` v1 @kind object, `rx.functions.Func2` v2 @kind object) @signature `Lrx/internal/operators/OperatorMapPair;.<init>:(Lrx/functions/Func1;Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a2794.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a279a.  v0.`rx.internal.operators.OperatorMapPair.collectionSelector` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4a279e.  v0.`rx.internal.operators.OperatorMapPair.resultSelector` @type ^`rx.functions.Func2` := v2 @kind object;
  #L4a27a2.  return @kind void;
}
procedure `rx.functions.Func1` `convertSelector`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/internal/operators/OperatorMapPair;.convertSelector:(Lrx/functions/Func1;)Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2778.  v0:= new `rx.internal.operators.OperatorMapPair$1`;
  #L4a277c.  call `<init>`(v0, v1) @signature `Lrx/internal/operators/OperatorMapPair$1;.<init>:(Lrx/functions/Func1;)V` @kind direct;
  #L4a2782.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorMapPair` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorMapPair;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a272c.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a2730.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorMapPair;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4a2736.  v1:= temp @kind object;
  #L4a2738.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorMapPair` v3 @kind this, `rx.Subscriber` v4 @kind object) @signature `Lrx/internal/operators/OperatorMapPair;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a274c.  v0:= new `rx.internal.operators.OperatorMapPair$MapPairSubscriber`;
  #L4a2750.  v1:= v3.`rx.internal.operators.OperatorMapPair.collectionSelector` @type ^`rx.functions.Func1` @kind object;
  #L4a2754.  v2:= v3.`rx.internal.operators.OperatorMapPair.resultSelector` @type ^`rx.functions.Func2` @kind object;
  #L4a2758.  call `<init>`(v0, v4, v1, v2) @signature `Lrx/internal/operators/OperatorMapPair$MapPairSubscriber;.<init>:(Lrx/Subscriber;Lrx/functions/Func1;Lrx/functions/Func2;)V` @kind direct;
  #L4a275e.  call `add`(v4, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4a2764.  return v0 @kind object;
}
