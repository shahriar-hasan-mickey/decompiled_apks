record `rx.internal.operators.OperatorReplay$7` @kind class @AccessFlag FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.functions.Func0` `rx.internal.operators.OperatorReplay$7.val$bufferFactory` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicReference` `rx.internal.operators.OperatorReplay$7.val$curr` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorReplay$7` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object, `rx.functions.Func0` v2 @kind object) @signature `Lrx/internal/operators/OperatorReplay$7;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lrx/functions/Func0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a60f0.  v0.`rx.internal.operators.OperatorReplay$7.val$curr` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4a60f4.  v0.`rx.internal.operators.OperatorReplay$7.val$bufferFactory` @type ^`rx.functions.Func0` := v2 @kind object;
  #L4a60f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a60fe.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorReplay$7` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorReplay$7;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a6110.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a6114.  call `call`(v0, v1) @signature `Lrx/internal/operators/OperatorReplay$7;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L4a611a.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorReplay$7` v3 @kind this, `rx.Subscriber` v4 @kind object) @signature `Lrx/internal/operators/OperatorReplay$7;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a612c.  v0:= v3.`rx.internal.operators.OperatorReplay$7.val$curr` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a6130.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4a6136.  v0:= temp @kind object;
  #L4a6138.  v0:= (`rx.internal.operators.OperatorReplay$ReplaySubscriber`) v0 @kind object;
  #L4a613c.  if v0 != 0 then goto L4a6174;
  #L4a6140.  v1:= new `rx.internal.operators.OperatorReplay$ReplaySubscriber`;
  #L4a6144.  v2:= v3.`rx.internal.operators.OperatorReplay$7.val$bufferFactory` @type ^`rx.functions.Func0` @kind object;
  #L4a6148.  call temp:= `call`(v2) @signature `Lrx/functions/Func0;.call:()Ljava/lang/Object;` @kind interface;
  #L4a614e.  v2:= temp @kind object;
  #L4a6150.  v2:= (`rx.internal.operators.OperatorReplay$ReplayBuffer`) v2 @kind object;
  #L4a6154.  call `<init>`(v1, v2) @signature `Lrx/internal/operators/OperatorReplay$ReplaySubscriber;.<init>:(Lrx/internal/operators/OperatorReplay$ReplayBuffer;)V` @kind direct;
  #L4a615a.  call `init`(v1) @signature `Lrx/internal/operators/OperatorReplay$ReplaySubscriber;.init:()V` @kind virtual;
  #L4a6160.  v2:= v3.`rx.internal.operators.OperatorReplay$7.val$curr` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4a6164.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4a616a.  v0:= temp;
  #L4a616c.  if v0 != 0 then goto L4a6172;
  #L4a6170.  goto L4a612c;
  #L4a6172.  v0:= v1 @kind object;
  #L4a6174.  v1:= new `rx.internal.operators.OperatorReplay$InnerProducer`;
  #L4a6178.  call `<init>`(v1, v0, v4) @signature `Lrx/internal/operators/OperatorReplay$InnerProducer;.<init>:(Lrx/internal/operators/OperatorReplay$ReplaySubscriber;Lrx/Subscriber;)V` @kind direct;
  #L4a617e.  call temp:= `add`(v0, v1) @signature `Lrx/internal/operators/OperatorReplay$ReplaySubscriber;.add:(Lrx/internal/operators/OperatorReplay$InnerProducer;)Z` @kind virtual;
  #L4a6184.  call `add`(v4, v1) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4a618a.  v0:= v0.`rx.internal.operators.OperatorReplay$ReplaySubscriber.buffer` @type ^`rx.internal.operators.OperatorReplay$ReplayBuffer` @kind object;
  #L4a618e.  call `replay`(v0, v1) @signature `Lrx/internal/operators/OperatorReplay$ReplayBuffer;.replay:(Lrx/internal/operators/OperatorReplay$InnerProducer;)V` @kind interface;
  #L4a6194.  call `setProducer`(v4, v1) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4a619a.  return @kind void;
}
