record `rx.internal.operators.OperatorTimestamp` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.Scheduler` `rx.internal.operators.OperatorTimestamp.scheduler` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorTimestamp` v0 @kind this, `rx.Scheduler` v1 @kind object) @signature `Lrx/internal/operators/OperatorTimestamp;.<init>:(Lrx/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ab5b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ab5b6.  v0.`rx.internal.operators.OperatorTimestamp.scheduler` @type ^`rx.Scheduler` := v1 @kind object;
  #L4ab5ba.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorTimestamp` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorTimestamp;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ab574.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4ab578.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorTimestamp;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4ab57e.  v1:= temp @kind object;
  #L4ab580.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorTimestamp` v1 @kind this, `rx.Subscriber` v2 @kind object) @signature `Lrx/internal/operators/OperatorTimestamp;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab594.  v0:= new `rx.internal.operators.OperatorTimestamp$1`;
  #L4ab598.  call `<init>`(v0, v1, v2, v2) @signature `Lrx/internal/operators/OperatorTimestamp$1;.<init>:(Lrx/internal/operators/OperatorTimestamp;Lrx/Subscriber;Lrx/Subscriber;)V` @kind direct;
  #L4ab59e.  return v0 @kind object;
}
