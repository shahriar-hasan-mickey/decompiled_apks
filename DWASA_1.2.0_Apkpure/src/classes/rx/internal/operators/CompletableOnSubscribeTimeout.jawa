record `rx.internal.operators.CompletableOnSubscribeTimeout` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Completable` `rx.internal.operators.CompletableOnSubscribeTimeout.other` @AccessFlag FINAL;
  `rx.Scheduler` `rx.internal.operators.CompletableOnSubscribeTimeout.scheduler` @AccessFlag FINAL;
  `rx.Completable` `rx.internal.operators.CompletableOnSubscribeTimeout.source` @AccessFlag FINAL;
  `long` `rx.internal.operators.CompletableOnSubscribeTimeout.timeout` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `rx.internal.operators.CompletableOnSubscribeTimeout.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.CompletableOnSubscribeTimeout` v0 @kind this, `rx.Completable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `rx.Scheduler` v5 @kind object, `rx.Completable` v6 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout;.<init>:(Lrx/Completable;JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;Lrx/Completable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L495cf0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L495cf6.  v0.`rx.internal.operators.CompletableOnSubscribeTimeout.source` @type ^`rx.Completable` := v1 @kind object;
  #L495cfa.  v0.`rx.internal.operators.CompletableOnSubscribeTimeout.timeout` @type ^`long` := v2 @kind wide;
  #L495cfe.  v0.`rx.internal.operators.CompletableOnSubscribeTimeout.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L495d02.  v0.`rx.internal.operators.CompletableOnSubscribeTimeout.scheduler` @type ^`rx.Scheduler` := v5 @kind object;
  #L495d06.  v0.`rx.internal.operators.CompletableOnSubscribeTimeout.other` @type ^`rx.Completable` := v6 @kind object;
  #L495d0a.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeTimeout` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L495d1c.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L495d20.  call `call`(v0, v1) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L495d26.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeTimeout` v7 @kind this, `rx.CompletableSubscriber` v8 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L495d38.  v0:= new `rx.subscriptions.CompositeSubscription`;
  #L495d3c.  call `<init>`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.<init>:()V` @kind direct;
  #L495d42.  call `onSubscribe`(v8, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L495d48.  v1:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L495d4c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L495d52.  v2:= v7.`rx.internal.operators.CompletableOnSubscribeTimeout.scheduler` @type ^`rx.Scheduler` @kind object;
  #L495d56.  call temp:= `createWorker`(v2) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L495d5c.  v2:= temp @kind object;
  #L495d5e.  call `add`(v0, v2) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L495d64.  v3:= new `rx.internal.operators.CompletableOnSubscribeTimeout$1`;
  #L495d68.  call `<init>`(v3, v7, v1, v0, v8) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout$1;.<init>:(Lrx/internal/operators/CompletableOnSubscribeTimeout;Ljava/util/concurrent/atomic/AtomicBoolean;Lrx/subscriptions/CompositeSubscription;Lrx/CompletableSubscriber;)V` @kind direct;
  #L495d6e.  v4:= v7.`rx.internal.operators.CompletableOnSubscribeTimeout.timeout` @type ^`long` @kind wide;
  #L495d72.  v6:= v7.`rx.internal.operators.CompletableOnSubscribeTimeout.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L495d76.  call temp:= `schedule`(v2, v3, v4, v6) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L495d7c.  v2:= v7.`rx.internal.operators.CompletableOnSubscribeTimeout.source` @type ^`rx.Completable` @kind object;
  #L495d80.  v3:= new `rx.internal.operators.CompletableOnSubscribeTimeout$2`;
  #L495d84.  call `<init>`(v3, v7, v0, v1, v8) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout$2;.<init>:(Lrx/internal/operators/CompletableOnSubscribeTimeout;Lrx/subscriptions/CompositeSubscription;Ljava/util/concurrent/atomic/AtomicBoolean;Lrx/CompletableSubscriber;)V` @kind direct;
  #L495d8a.  call `unsafeSubscribe`(v2, v3) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L495d90.  return @kind void;
}
