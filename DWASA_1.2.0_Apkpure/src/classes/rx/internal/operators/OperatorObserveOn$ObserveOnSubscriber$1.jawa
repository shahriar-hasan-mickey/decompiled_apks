record `rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$1` @kind class @AccessFlag  extends `rx.Producer` @kind interface {
  `rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber` `rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$1` v0 @kind this, `rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber` v1 @kind object) @signature `Lrx/internal/operators/OperatorObserveOn$ObserveOnSubscriber$1;.<init>:(Lrx/internal/operators/OperatorObserveOn$ObserveOnSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a3f2c.  v0.`rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber` := v1 @kind object;
  #L4a3f30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a3f36.  return @kind void;
}
procedure `void` `request`(`rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$1` v3 @kind this, `long` v4 ) @signature `Lrx/internal/operators/OperatorObserveOn$ObserveOnSubscriber$1;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a3f48.  v0:= 0L;
  #L4a3f4c.  v2:= lcmp(v4, v0);
  #L4a3f50.  if v2 <= 0 then goto L4a3f6c;
  #L4a3f54.  v0:= v3.`rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber` @kind object;
  #L4a3f58.  v0:= v0.`rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.requested` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a3f5c.  call temp:= `getAndAddRequest`(v0, v4) @signature `Lrx/internal/operators/BackpressureUtils;.getAndAddRequest:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4a3f62.  v4:= v3.`rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber` @kind object;
  #L4a3f66.  call `schedule`(v4) @signature `Lrx/internal/operators/OperatorObserveOn$ObserveOnSubscriber;.schedule:()V` @kind virtual;
  #L4a3f6c.  return @kind void;
}
