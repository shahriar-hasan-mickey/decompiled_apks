record `rx.internal.operators.OperatorWindowWithTime$CountedSerializedSubject` @kind class @AccessFlag FINAL {
  `rx.Observer` `rx.internal.operators.OperatorWindowWithTime$CountedSerializedSubject.consumer` @AccessFlag FINAL;
  `int` `rx.internal.operators.OperatorWindowWithTime$CountedSerializedSubject.count` @AccessFlag ;
  `rx.Observable` `rx.internal.operators.OperatorWindowWithTime$CountedSerializedSubject.producer` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorWindowWithTime$CountedSerializedSubject` v1 @kind this, `rx.Observer` v2 @kind object, `rx.Observable` v3 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithTime$CountedSerializedSubject;.<init>:(Lrx/Observer;Lrx/Observable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ad8bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ad8c2.  v0:= new `rx.observers.SerializedObserver`;
  #L4ad8c6.  call `<init>`(v0, v2) @signature `Lrx/observers/SerializedObserver;.<init>:(Lrx/Observer;)V` @kind direct;
  #L4ad8cc.  v1.`rx.internal.operators.OperatorWindowWithTime$CountedSerializedSubject.consumer` @type ^`rx.Observer` := v0 @kind object;
  #L4ad8d0.  v1.`rx.internal.operators.OperatorWindowWithTime$CountedSerializedSubject.producer` @type ^`rx.Observable` := v3 @kind object;
  #L4ad8d4.  return @kind void;
}
