record `rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `rx.Subscription` `rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.ref` @AccessFlag PRIVATE_FINAL;
  `rx.Subscriber` `rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.subscriber` @AccessFlag FINAL;
  `rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc` `rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber` v0 @kind this, `rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Subscription` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber;.<init>:(Lrx/internal/operators/OnSubscribeGroupJoin$WindowObservableFunc;Lrx/Subscriber;Lrx/Subscription;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49a2ac.  v0.`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.this$0` @type ^`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc` := v1 @kind object;
  #L49a2b0.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49a2b6.  v0.`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.subscriber` @type ^`rx.Subscriber` := v2 @kind object;
  #L49a2ba.  v0.`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.ref` @type ^`rx.Subscription` := v3 @kind object;
  #L49a2be.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber` v1 @kind this) @signature `Lrx/internal/operators/OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49a2d0.  v0:= v1.`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.subscriber` @type ^`rx.Subscriber` @kind object;
  #L49a2d4.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L49a2da.  v0:= v1.`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.ref` @type ^`rx.Subscription` @kind object;
  #L49a2de.  call `unsubscribe`(v0) @signature `Lrx/Subscription;.unsubscribe:()V` @kind interface;
  #L49a2e4.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49a2f8.  v0:= v1.`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.subscriber` @type ^`rx.Subscriber` @kind object;
  #L49a2fc.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49a302.  v2:= v1.`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.ref` @type ^`rx.Subscription` @kind object;
  #L49a306.  call `unsubscribe`(v2) @signature `Lrx/Subscription;.unsubscribe:()V` @kind interface;
  #L49a30c.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49a320.  v0:= v1.`rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber.subscriber` @type ^`rx.Subscriber` @kind object;
  #L49a324.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L49a32a.  return @kind void;
}
