record `rx.internal.operators.OperatorReplay$UnboundedReplayBuffer` @kind class @AccessFlag FINAL extends `java.util.ArrayList` @kind class, `rx.internal.operators.OperatorReplay$ReplayBuffer` @kind interface {
  `int` `rx.internal.operators.OperatorReplay$UnboundedReplayBuffer.size` @AccessFlag VOLATILE;
}
global `long` `@@rx.internal.operators.OperatorReplay$UnboundedReplayBuffer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer` v0 @kind this, `int` v1 ) @signature `Lrx/internal/operators/OperatorReplay$UnboundedReplayBuffer;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a714c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4a7152.  return @kind void;
}
procedure `void` `complete`(`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer` v1 @kind this) @signature `Lrx/internal/operators/OperatorReplay$UnboundedReplayBuffer;.complete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a7164.  call temp:= `completed`() @signature `Lrx/internal/operators/NotificationLite;.completed:()Ljava/lang/Object;` @kind static;
  #L4a716a.  v0:= temp @kind object;
  #L4a716c.  call temp:= `add`(v1, v0) @signature `Lrx/internal/operators/OperatorReplay$UnboundedReplayBuffer;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a7172.  v0:= v1.`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer.size` @type ^`int`;
  #L4a7176.  v0:= v0 + 1;
  #L4a717a.  v1.`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer.size` @type ^`int` := v0;
  #L4a717e.  return @kind void;
}
procedure `void` `error`(`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lrx/internal/operators/OperatorReplay$UnboundedReplayBuffer;.error:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4a7190.  call temp:= `error`(v1) @signature `Lrx/internal/operators/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L4a7196.  v1:= temp @kind object;
  #L4a7198.  call temp:= `add`(v0, v1) @signature `Lrx/internal/operators/OperatorReplay$UnboundedReplayBuffer;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a719e.  v1:= v0.`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer.size` @type ^`int`;
  #L4a71a2.  v1:= v1 + 1;
  #L4a71a6.  v0.`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer.size` @type ^`int` := v1;
  #L4a71aa.  return @kind void;
}
procedure `void` `next`(`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorReplay$UnboundedReplayBuffer;.next:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4a71bc.  call temp:= `next`(v1) @signature `Lrx/internal/operators/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4a71c2.  v1:= temp @kind object;
  #L4a71c4.  call temp:= `add`(v0, v1) @signature `Lrx/internal/operators/OperatorReplay$UnboundedReplayBuffer;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a71ca.  v1:= v0.`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer.size` @type ^`int`;
  #L4a71ce.  v1:= v1 + 1;
  #L4a71d2.  v0.`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer.size` @type ^`int` := v1;
  #L4a71d6.  return @kind void;
}
procedure `void` `replay`(`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer` v12 @kind this, `rx.internal.operators.OperatorReplay$InnerProducer` v13 @kind object) @signature `Lrx/internal/operators/OperatorReplay$UnboundedReplayBuffer;.replay:(Lrx/internal/operators/OperatorReplay$InnerProducer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L4a71e8.  @monitorenter v13
  #L4a71ea.  v0:= v13.`rx.internal.operators.OperatorReplay$InnerProducer.emitting` @type ^`boolean` @kind boolean;
  #L4a71ee.  v1:= 1I;
  #L4a71f0.  if v0 == 0 then goto L4a71fc;
  #L4a71f4.  v13.`rx.internal.operators.OperatorReplay$InnerProducer.missed` @type ^`boolean` := v1 @kind boolean;
  #L4a71f8.  @monitorexit v13
  #L4a71fa.  return @kind void;
  #L4a71fc.  v13.`rx.internal.operators.OperatorReplay$InnerProducer.emitting` @type ^`boolean` := v1 @kind boolean;
  #L4a7200.  @monitorexit v13
  #L4a7202.  call temp:= `isUnsubscribed`(v13) @signature `Lrx/internal/operators/OperatorReplay$InnerProducer;.isUnsubscribed:()Z` @kind virtual;
  #L4a7208.  v0:= temp;
  #L4a720a.  if v0 == 0 then goto L4a7210;
  #L4a720e.  return @kind void;
  #L4a7210.  v0:= v12.`rx.internal.operators.OperatorReplay$UnboundedReplayBuffer.size` @type ^`int`;
  #L4a7214.  call temp:= `index`(v13) @signature `Lrx/internal/operators/OperatorReplay$InnerProducer;.index:()Ljava/lang/Object;` @kind virtual;
  #L4a721a.  v1:= temp @kind object;
  #L4a721c.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L4a7220.  v2:= 0I;
  #L4a7222.  if v1 == 0 then goto L4a7230;
  #L4a7226.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4a722c.  v1:= temp;
  #L4a722e.  goto L4a7232;
  #L4a7230.  v1:= 0I;
  #L4a7232.  v3:= v13.`rx.internal.operators.OperatorReplay$InnerProducer.child` @type ^`rx.Subscriber` @kind object;
  #L4a7236.  if v3 != 0 then goto L4a723c;
  #L4a723a.  return @kind void;
  #L4a723c.  call temp:= `get`(v13) @signature `Lrx/internal/operators/OperatorReplay$InnerProducer;.get:()J` @kind virtual;
  #L4a7242.  v4:= temp @kind wide;
  #L4a7244.  v6:= 0L;
  #L4a7248.  v8:= v6 @kind wide;
  #L4a724a.  v10:= lcmp(v8, v4);
  #L4a724e.  if v10 == 0 then goto L4a72c4;
  #L4a7252.  if v1 >= v0 then goto L4a72c4;
  #L4a7256.  call temp:= `get`(v12, v1) @signature `Lrx/internal/operators/OperatorReplay$UnboundedReplayBuffer;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4a725c.  v10:= temp @kind object;
  #L4a725e.  call temp:= `accept`(v3, v10) @signature `Lrx/internal/operators/NotificationLite;.accept:(Lrx/Observer;Ljava/lang/Object;)Z` @kind static;
  #L4a7264.  v10:= temp;
  #L4a7266.  if v10 == 0 then goto L4a726c;
  #L4a726a.  return @kind void;
  #L4a726c.  call temp:= `isUnsubscribed`(v13) @signature `Lrx/internal/operators/OperatorReplay$InnerProducer;.isUnsubscribed:()Z` @kind virtual;
  #L4a7272.  v10:= temp;
  #L4a7274.  if v10 == 0 then goto L4a727a;
  #L4a7278.  return @kind void;
  #L4a727a.  v1:= v1 + 1;
  #L4a727e.  v10:= 1L;
  #L4a7282.  v8:= v8 + v10 @kind long;
  #L4a7284.  goto L4a724a;
  #L4a7286.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a7288.  call `throwIfFatal`(v0) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a728e.  call `unsubscribe`(v13) @signature `Lrx/internal/operators/OperatorReplay$InnerProducer;.unsubscribe:()V` @kind virtual;
  #L4a7294.  call temp:= `isError`(v10) @signature `Lrx/internal/operators/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4a729a.  v13:= temp;
  #L4a729c.  if v13 != 0 then goto L4a72c2;
  #L4a72a0.  call temp:= `isCompleted`(v10) @signature `Lrx/internal/operators/NotificationLite;.isCompleted:(Ljava/lang/Object;)Z` @kind static;
  #L4a72a6.  v13:= temp;
  #L4a72a8.  if v13 != 0 then goto L4a72c2;
  #L4a72ac.  call temp:= `getValue`(v10) @signature `Lrx/internal/operators/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4a72b2.  v13:= temp @kind object;
  #L4a72b4.  call temp:= `addValueAsLastCause`(v0, v13) @signature `Lrx/exceptions/OnErrorThrowable;.addValueAsLastCause:(Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L4a72ba.  v13:= temp @kind object;
  #L4a72bc.  call `onError`(v3, v13) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a72c2.  return @kind void;
  #L4a72c4.  v0:= lcmp(v8, v6);
  #L4a72c8.  if v0 == 0 then goto L4a72f0;
  #L4a72cc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4a72d2.  v0:= temp @kind object;
  #L4a72d4.  v13.`rx.internal.operators.OperatorReplay$InnerProducer.index` @type ^`java.lang.Object` := v0 @kind object;
  #L4a72d8.  v0:= 9223372036854775807L;
  #L4a72e2.  v3:= lcmp(v4, v0);
  #L4a72e6.  if v3 == 0 then goto L4a72f0;
  #L4a72ea.  call temp:= `produced`(v13, v8) @signature `Lrx/internal/operators/OperatorReplay$InnerProducer;.produced:(J)J` @kind virtual;
  #L4a72f0.  @monitorenter v13
  #L4a72f2.  v0:= v13.`rx.internal.operators.OperatorReplay$InnerProducer.missed` @type ^`boolean` @kind boolean;
  #L4a72f6.  if v0 != 0 then goto L4a7302;
  #L4a72fa.  v13.`rx.internal.operators.OperatorReplay$InnerProducer.emitting` @type ^`boolean` := v2 @kind boolean;
  #L4a72fe.  @monitorexit v13
  #L4a7300.  return @kind void;
  #L4a7302.  v13.`rx.internal.operators.OperatorReplay$InnerProducer.missed` @type ^`boolean` := v2 @kind boolean;
  #L4a7306.  @monitorexit v13
  #L4a7308.  goto L4a7202;
  #L4a730c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a730e.  @monitorexit v13
  #L4a7310.  throw v0;
  #L4a7312.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a7314.  @monitorexit v13
  #L4a7316.  goto L4a731a;
  #L4a7318.  throw v0;
  #L4a731a.  goto L4a7318;
  catch `java.lang.Throwable` @[L4a71ea..L4a7202] goto L4a7312;
  catch `java.lang.Throwable` @[L4a725e..L4a7266] goto L4a7286;
  catch `java.lang.Throwable` @[L4a72f2..L4a7310] goto L4a730c;
  catch `java.lang.Throwable` @[L4a7314..L4a7316] goto L4a7312;
}
