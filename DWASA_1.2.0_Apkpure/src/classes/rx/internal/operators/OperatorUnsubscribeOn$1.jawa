record `rx.internal.operators.OperatorUnsubscribeOn$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorUnsubscribeOn` `rx.internal.operators.OperatorUnsubscribeOn$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorUnsubscribeOn$1.val$subscriber` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorUnsubscribeOn$1` v0 @kind this, `rx.internal.operators.OperatorUnsubscribeOn` v1 @kind object, `rx.Subscriber` v2 @kind object) @signature `Lrx/internal/operators/OperatorUnsubscribeOn$1;.<init>:(Lrx/internal/operators/OperatorUnsubscribeOn;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ab9b8.  v0.`rx.internal.operators.OperatorUnsubscribeOn$1.this$0` @type ^`rx.internal.operators.OperatorUnsubscribeOn` := v1 @kind object;
  #L4ab9bc.  v0.`rx.internal.operators.OperatorUnsubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` := v2 @kind object;
  #L4ab9c0.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4ab9c6.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorUnsubscribeOn$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorUnsubscribeOn$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab9d8.  v0:= v1.`rx.internal.operators.OperatorUnsubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4ab9dc.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4ab9e2.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorUnsubscribeOn$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorUnsubscribeOn$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab9f4.  v0:= v1.`rx.internal.operators.OperatorUnsubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4ab9f8.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ab9fe.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorUnsubscribeOn$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OperatorUnsubscribeOn$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aba10.  v0:= v1.`rx.internal.operators.OperatorUnsubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4aba14.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4aba1a.  return @kind void;
}
