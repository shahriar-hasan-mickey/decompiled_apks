record `rx.internal.operators.OnSubscribeConcatMap$1` @kind class @AccessFlag  extends `rx.Producer` @kind interface {
  `rx.internal.operators.OnSubscribeConcatMap` `rx.internal.operators.OnSubscribeConcatMap$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber` `rx.internal.operators.OnSubscribeConcatMap$1.val$parent` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeConcatMap$1` v0 @kind this, `rx.internal.operators.OnSubscribeConcatMap` v1 @kind object, `rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeConcatMap$1;.<init>:(Lrx/internal/operators/OnSubscribeConcatMap;Lrx/internal/operators/OnSubscribeConcatMap$ConcatMapSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4974a0.  v0.`rx.internal.operators.OnSubscribeConcatMap$1.this$0` @type ^`rx.internal.operators.OnSubscribeConcatMap` := v1 @kind object;
  #L4974a4.  v0.`rx.internal.operators.OnSubscribeConcatMap$1.val$parent` @type ^`rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber` := v2 @kind object;
  #L4974a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4974ae.  return @kind void;
}
procedure `void` `request`(`rx.internal.operators.OnSubscribeConcatMap$1` v1 @kind this, `long` v2 ) @signature `Lrx/internal/operators/OnSubscribeConcatMap$1;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4974c0.  v0:= v1.`rx.internal.operators.OnSubscribeConcatMap$1.val$parent` @type ^`rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber` @kind object;
  #L4974c4.  call `requestMore`(v0, v2) @signature `Lrx/internal/operators/OnSubscribeConcatMap$ConcatMapSubscriber;.requestMore:(J)V` @kind virtual;
  #L4974ca.  return @kind void;
}
