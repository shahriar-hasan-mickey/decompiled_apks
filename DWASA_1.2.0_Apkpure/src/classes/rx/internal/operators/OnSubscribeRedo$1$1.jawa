record `rx.internal.operators.OnSubscribeRedo$1$1` @kind class @AccessFlag  extends `rx.functions.Func1` @kind interface {
  `rx.internal.operators.OnSubscribeRedo$1` `rx.internal.operators.OnSubscribeRedo$1$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeRedo$1$1` v0 @kind this, `rx.internal.operators.OnSubscribeRedo$1` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$1$1;.<init>:(Lrx/internal/operators/OnSubscribeRedo$1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49bc1c.  v0.`rx.internal.operators.OnSubscribeRedo$1$1.this$0` @type ^`rx.internal.operators.OnSubscribeRedo$1` := v1 @kind object;
  #L49bc20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49bc26.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OnSubscribeRedo$1$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$1$1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49bbe0.  v1:= (`rx.Notification`) v1 @kind object;
  #L49bbe4.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeRedo$1$1;.call:(Lrx/Notification;)Lrx/Notification;` @kind virtual;
  #L49bbea.  v1:= temp @kind object;
  #L49bbec.  return v1 @kind object;
}
procedure `rx.Notification` `call`(`rx.internal.operators.OnSubscribeRedo$1$1` v0 @kind this, `rx.Notification` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$1$1;.call:(Lrx/Notification;)Lrx/Notification;` @AccessFlag PUBLIC {
    temp;

  #L49bc00.  v1:= 0I;
  #L49bc02.  call temp:= `createOnNext`(v1) @signature `Lrx/Notification;.createOnNext:(Ljava/lang/Object;)Lrx/Notification;` @kind static;
  #L49bc08.  v1:= temp @kind object;
  #L49bc0a.  return v1 @kind object;
}
