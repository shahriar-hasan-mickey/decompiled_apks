record `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `java.lang.Iterable` `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable.sources` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable` v0 @kind this, `java.lang.Iterable` v1 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L495574.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49557a.  v0.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable.sources` @type ^`java.lang.Iterable` := v1 @kind object;
  #L49557e.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L495590.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L495594.  call `call`(v0, v1) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L49559a.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable` v12 @kind this, `rx.CompletableSubscriber` v13 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L4955ac.  v6:= new `rx.subscriptions.CompositeSubscription`;
  #L4955b0.  call `<init>`(v6) @signature `Lrx/subscriptions/CompositeSubscription;.<init>:()V` @kind direct;
  #L4955b6.  call `onSubscribe`(v13, v6) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L4955bc.  v0:= v12.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable.sources` @type ^`java.lang.Iterable` @kind object;
  #L4955c0.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4955c6.  v7:= temp @kind object;
  #L4955c8.  if v7 != 0 then goto L4955e2;
  #L4955cc.  v0:= new `java.lang.NullPointerException`;
  #L4955d0.  v1:= "The source iterator returned is null" @kind object;
  #L4955d4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4955da.  call `onError`(v13, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4955e0.  return @kind void;
  #L4955e2.  v8:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L4955e6.  v0:= 1I;
  #L4955e8.  call `<init>`(v8, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L4955ee.  v9:= new `rx.internal.util.unsafe.MpscLinkedQueue`;
  #L4955f2.  call `<init>`(v9) @signature `Lrx/internal/util/unsafe/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L4955f8.  call temp:= `isUnsubscribed`(v6) @signature `Lrx/subscriptions/CompositeSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L4955fe.  v0:= temp;
  #L495600.  if v0 == 0 then goto L495606;
  #L495604.  return @kind void;
  #L495606.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L49560c.  v0:= temp;
  #L49560e.  if v0 != 0 then goto L495642;
  #L495612.  call temp:= `decrementAndGet`(v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L495618.  v0:= temp;
  #L49561a.  if v0 != 0 then goto L495640;
  #L49561e.  call temp:= `isEmpty`(v9) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L495624.  v0:= temp;
  #L495626.  if v0 == 0 then goto L495632;
  #L49562a.  call `onCompleted`(v13) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L495630.  goto L495640;
  #L495632.  call temp:= `collectErrors`(v9) @signature `Lrx/internal/operators/CompletableOnSubscribeMerge;.collectErrors:(Ljava/util/Queue;)Ljava/lang/Throwable;` @kind static;
  #L495638.  v0:= temp @kind object;
  #L49563a.  call `onError`(v13, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L495640.  return @kind void;
  #L495642.  call temp:= `isUnsubscribed`(v6) @signature `Lrx/subscriptions/CompositeSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L495648.  v0:= temp;
  #L49564a.  if v0 == 0 then goto L495650;
  #L49564e.  return @kind void;
  #L495650.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L495656.  v0:= temp @kind object;
  #L495658.  v10:= v0 @kind object;
  #L49565a.  v10:= (`rx.Completable`) v10 @kind object;
  #L49565e.  call temp:= `isUnsubscribed`(v6) @signature `Lrx/subscriptions/CompositeSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L495664.  v0:= temp;
  #L495666.  if v0 == 0 then goto L49566c;
  #L49566a.  return @kind void;
  #L49566c.  if v10 != 0 then goto L4956b4;
  #L495670.  v0:= new `java.lang.NullPointerException`;
  #L495674.  v1:= "A completable source is null" @kind object;
  #L495678.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49567e.  call temp:= `offer`(v9, v0) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L495684.  call temp:= `decrementAndGet`(v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L49568a.  v0:= temp;
  #L49568c.  if v0 != 0 then goto L4956b2;
  #L495690.  call temp:= `isEmpty`(v9) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L495696.  v0:= temp;
  #L495698.  if v0 == 0 then goto L4956a4;
  #L49569c.  call `onCompleted`(v13) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L4956a2.  goto L4956b2;
  #L4956a4.  call temp:= `collectErrors`(v9) @signature `Lrx/internal/operators/CompletableOnSubscribeMerge;.collectErrors:(Ljava/util/Queue;)Ljava/lang/Throwable;` @kind static;
  #L4956aa.  v0:= temp @kind object;
  #L4956ac.  call `onError`(v13, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4956b2.  return @kind void;
  #L4956b4.  call temp:= `getAndIncrement`(v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4956ba.  v11:= new `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1`;
  #L4956be.  v0:= v11 @kind object;
  #L4956c0.  v1:= v12 @kind object;
  #L4956c2.  v2:= v6 @kind object;
  #L4956c4.  v3:= v9 @kind object;
  #L4956c6.  v4:= v8 @kind object;
  #L4956c8.  v5:= v13 @kind object;
  #L4956ca.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable$1;.<init>:(Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable;Lrx/subscriptions/CompositeSubscription;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicInteger;Lrx/CompletableSubscriber;)V` @kind direct;
  #L4956d0.  call `unsafeSubscribe`(v10, v11) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L4956d6.  goto L4955f8;
  #L4956d8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4956da.  call temp:= `offer`(v9, v0) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4956e0.  call temp:= `decrementAndGet`(v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4956e6.  v0:= temp;
  #L4956e8.  if v0 != 0 then goto L49570e;
  #L4956ec.  call temp:= `isEmpty`(v9) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L4956f2.  v0:= temp;
  #L4956f4.  if v0 == 0 then goto L495700;
  #L4956f8.  call `onCompleted`(v13) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L4956fe.  goto L49570e;
  #L495700.  call temp:= `collectErrors`(v9) @signature `Lrx/internal/operators/CompletableOnSubscribeMerge;.collectErrors:(Ljava/util/Queue;)Ljava/lang/Throwable;` @kind static;
  #L495706.  v0:= temp @kind object;
  #L495708.  call `onError`(v13, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L49570e.  return @kind void;
  #L495710.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L495712.  call temp:= `offer`(v9, v0) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L495718.  call temp:= `decrementAndGet`(v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L49571e.  v0:= temp;
  #L495720.  if v0 != 0 then goto L495746;
  #L495724.  call temp:= `isEmpty`(v9) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L49572a.  v0:= temp;
  #L49572c.  if v0 == 0 then goto L495738;
  #L495730.  call `onCompleted`(v13) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L495736.  goto L495746;
  #L495738.  call temp:= `collectErrors`(v9) @signature `Lrx/internal/operators/CompletableOnSubscribeMerge;.collectErrors:(Ljava/util/Queue;)Ljava/lang/Throwable;` @kind static;
  #L49573e.  v0:= temp @kind object;
  #L495740.  call `onError`(v13, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L495746.  return @kind void;
  #L495748.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49574a.  call `onError`(v13, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L495750.  return @kind void;
  catch `java.lang.Throwable` @[L4955bc..L4955c8] goto L495748;
  catch `java.lang.Throwable` @[L495606..L49560e] goto L495710;
  catch `java.lang.Throwable` @[L495650..L49565e] goto L4956d8;
}
