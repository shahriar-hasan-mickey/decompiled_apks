record `rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorWindowWithObservable$SourceSubscriber` `rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber.sub` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber` v0 @kind this, `rx.internal.operators.OperatorWindowWithObservable$SourceSubscriber` v1 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithObservable$BoundarySubscriber;.<init>:(Lrx/internal/operators/OperatorWindowWithObservable$SourceSubscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4abb3c.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4abb42.  v0.`rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber.sub` @type ^`rx.internal.operators.OperatorWindowWithObservable$SourceSubscriber` := v1 @kind object;
  #L4abb46.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber` v1 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithObservable$BoundarySubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4abb58.  v0:= v1.`rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber.sub` @type ^`rx.internal.operators.OperatorWindowWithObservable$SourceSubscriber` @kind object;
  #L4abb5c.  call `onCompleted`(v0) @signature `Lrx/internal/operators/OperatorWindowWithObservable$SourceSubscriber;.onCompleted:()V` @kind virtual;
  #L4abb62.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithObservable$BoundarySubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4abb74.  v0:= v1.`rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber.sub` @type ^`rx.internal.operators.OperatorWindowWithObservable$SourceSubscriber` @kind object;
  #L4abb78.  call `onError`(v0, v2) @signature `Lrx/internal/operators/OperatorWindowWithObservable$SourceSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4abb7e.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithObservable$BoundarySubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4abb90.  v1:= v0.`rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber.sub` @type ^`rx.internal.operators.OperatorWindowWithObservable$SourceSubscriber` @kind object;
  #L4abb94.  call `replaceWindow`(v1) @signature `Lrx/internal/operators/OperatorWindowWithObservable$SourceSubscriber;.replaceWindow:()V` @kind virtual;
  #L4abb9a.  return @kind void;
}
procedure `void` `onStart`(`rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber` v2 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithObservable$BoundarySubscriber;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4abbac.  v0:= 9223372036854775807L;
  #L4abbb6.  call `request`(v2, v0) @signature `Lrx/internal/operators/OperatorWindowWithObservable$BoundarySubscriber;.request:(J)V` @kind virtual;
  #L4abbbc.  return @kind void;
}
