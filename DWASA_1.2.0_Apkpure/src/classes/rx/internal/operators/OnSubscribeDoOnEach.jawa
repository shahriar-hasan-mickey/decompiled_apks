record `rx.internal.operators.OnSubscribeDoOnEach` @kind class @AccessFlag PUBLIC extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.Observer` `rx.internal.operators.OnSubscribeDoOnEach.doOnEachObserver` @AccessFlag PRIVATE_FINAL;
  `rx.Observable` `rx.internal.operators.OnSubscribeDoOnEach.source` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeDoOnEach` v0 @kind this, `rx.Observable` v1 @kind object, `rx.Observer` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeDoOnEach;.<init>:(Lrx/Observable;Lrx/Observer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4983d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4983de.  v0.`rx.internal.operators.OnSubscribeDoOnEach.source` @type ^`rx.Observable` := v1 @kind object;
  #L4983e2.  v0.`rx.internal.operators.OnSubscribeDoOnEach.doOnEachObserver` @type ^`rx.Observer` := v2 @kind object;
  #L4983e6.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeDoOnEach` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeDoOnEach;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4983f8.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4983fc.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeDoOnEach;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L498402.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeDoOnEach` v3 @kind this, `rx.Subscriber` v4 @kind object) @signature `Lrx/internal/operators/OnSubscribeDoOnEach;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L498414.  v0:= v3.`rx.internal.operators.OnSubscribeDoOnEach.source` @type ^`rx.Observable` @kind object;
  #L498418.  v1:= new `rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber`;
  #L49841c.  v2:= v3.`rx.internal.operators.OnSubscribeDoOnEach.doOnEachObserver` @type ^`rx.Observer` @kind object;
  #L498420.  call `<init>`(v1, v4, v2) @signature `Lrx/internal/operators/OnSubscribeDoOnEach$DoOnEachSubscriber;.<init>:(Lrx/Subscriber;Lrx/Observer;)V` @kind direct;
  #L498426.  call temp:= `unsafeSubscribe`(v0, v1) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L49842c.  return @kind void;
}
