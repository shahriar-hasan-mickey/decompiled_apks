record `rx.internal.operators.OperatorWithLatestFrom` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.Observable` `rx.internal.operators.OperatorWithLatestFrom.other` @AccessFlag FINAL;
  `rx.functions.Func2` `rx.internal.operators.OperatorWithLatestFrom.resultSelector` @AccessFlag FINAL;
}
global `java.lang.Object` `@@rx.internal.operators.OperatorWithLatestFrom.EMPTY` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/operators/OperatorWithLatestFrom;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4aebac.  v0:= new `java.lang.Object`;
  #L4aebb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aebb6.  `@@rx.internal.operators.OperatorWithLatestFrom.EMPTY` @type ^`java.lang.Object` := v0 @kind object;
  #L4aebba.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorWithLatestFrom` v0 @kind this, `rx.Observable` v1 @kind object, `rx.functions.Func2` v2 @kind object) @signature `Lrx/internal/operators/OperatorWithLatestFrom;.<init>:(Lrx/Observable;Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4aebcc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aebd2.  v0.`rx.internal.operators.OperatorWithLatestFrom.other` @type ^`rx.Observable` := v1 @kind object;
  #L4aebd6.  v0.`rx.internal.operators.OperatorWithLatestFrom.resultSelector` @type ^`rx.functions.Func2` := v2 @kind object;
  #L4aebda.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorWithLatestFrom` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorWithLatestFrom;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4aeb24.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4aeb28.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorWithLatestFrom;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4aeb2e.  v1:= temp @kind object;
  #L4aeb30.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorWithLatestFrom` v8 @kind this, `rx.Subscriber` v9 @kind object) @signature `Lrx/internal/operators/OperatorWithLatestFrom;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4aeb44.  v6:= new `rx.observers.SerializedSubscriber`;
  #L4aeb48.  v0:= 0I;
  #L4aeb4a.  call `<init>`(v6, v9, v0) @signature `Lrx/observers/SerializedSubscriber;.<init>:(Lrx/Subscriber;Z)V` @kind direct;
  #L4aeb50.  call `add`(v9, v6) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4aeb56.  v9:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4aeb5a.  v0:= `@@rx.internal.operators.OperatorWithLatestFrom.EMPTY` @type ^`java.lang.Object` @kind object;
  #L4aeb5e.  call `<init>`(v9, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4aeb64.  v7:= new `rx.internal.operators.OperatorWithLatestFrom$1`;
  #L4aeb68.  v3:= 1I;
  #L4aeb6a.  v0:= v7 @kind object;
  #L4aeb6c.  v1:= v8 @kind object;
  #L4aeb6e.  v2:= v6 @kind object;
  #L4aeb70.  v4:= v9 @kind object;
  #L4aeb72.  v5:= v6 @kind object;
  #L4aeb74.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lrx/internal/operators/OperatorWithLatestFrom$1;.<init>:(Lrx/internal/operators/OperatorWithLatestFrom;Lrx/Subscriber;ZLjava/util/concurrent/atomic/AtomicReference;Lrx/observers/SerializedSubscriber;)V` @kind direct;
  #L4aeb7a.  v0:= new `rx.internal.operators.OperatorWithLatestFrom$2`;
  #L4aeb7e.  call `<init>`(v0, v8, v9, v6) @signature `Lrx/internal/operators/OperatorWithLatestFrom$2;.<init>:(Lrx/internal/operators/OperatorWithLatestFrom;Ljava/util/concurrent/atomic/AtomicReference;Lrx/observers/SerializedSubscriber;)V` @kind direct;
  #L4aeb84.  call `add`(v6, v7) @signature `Lrx/observers/SerializedSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4aeb8a.  call `add`(v6, v0) @signature `Lrx/observers/SerializedSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4aeb90.  v9:= v8.`rx.internal.operators.OperatorWithLatestFrom.other` @type ^`rx.Observable` @kind object;
  #L4aeb94.  call temp:= `unsafeSubscribe`(v9, v0) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4aeb9a.  return v7 @kind object;
}
