record `rx.internal.operators.OperatorDelay$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `boolean` `rx.internal.operators.OperatorDelay$1.done` @AccessFlag ;
  `rx.internal.operators.OperatorDelay` `rx.internal.operators.OperatorDelay$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorDelay$1.val$child` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler$Worker` `rx.internal.operators.OperatorDelay$1.val$worker` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDelay$1` v0 @kind this, `rx.internal.operators.OperatorDelay` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Scheduler$Worker` v3 @kind object, `rx.Subscriber` v4 @kind object) @signature `Lrx/internal/operators/OperatorDelay$1;.<init>:(Lrx/internal/operators/OperatorDelay;Lrx/Subscriber;Lrx/Scheduler$Worker;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49ff44.  v0.`rx.internal.operators.OperatorDelay$1.this$0` @type ^`rx.internal.operators.OperatorDelay` := v1 @kind object;
  #L49ff48.  v0.`rx.internal.operators.OperatorDelay$1.val$worker` @type ^`rx.Scheduler$Worker` := v3 @kind object;
  #L49ff4c.  v0.`rx.internal.operators.OperatorDelay$1.val$child` @type ^`rx.Subscriber` := v4 @kind object;
  #L49ff50.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49ff56.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorDelay$1` v5 @kind this) @signature `Lrx/internal/operators/OperatorDelay$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49ff68.  v0:= v5.`rx.internal.operators.OperatorDelay$1.val$worker` @type ^`rx.Scheduler$Worker` @kind object;
  #L49ff6c.  v1:= new `rx.internal.operators.OperatorDelay$1$1`;
  #L49ff70.  call `<init>`(v1, v5) @signature `Lrx/internal/operators/OperatorDelay$1$1;.<init>:(Lrx/internal/operators/OperatorDelay$1;)V` @kind direct;
  #L49ff76.  v2:= v5.`rx.internal.operators.OperatorDelay$1.this$0` @type ^`rx.internal.operators.OperatorDelay` @kind object;
  #L49ff7a.  v2:= v2.`rx.internal.operators.OperatorDelay.delay` @type ^`long` @kind wide;
  #L49ff7e.  v4:= v5.`rx.internal.operators.OperatorDelay$1.this$0` @type ^`rx.internal.operators.OperatorDelay` @kind object;
  #L49ff82.  v4:= v4.`rx.internal.operators.OperatorDelay.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L49ff86.  call temp:= `schedule`(v0, v1, v2, v4) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L49ff8c.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorDelay$1` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lrx/internal/operators/OperatorDelay$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49ffa0.  v0:= v2.`rx.internal.operators.OperatorDelay$1.val$worker` @type ^`rx.Scheduler$Worker` @kind object;
  #L49ffa4.  v1:= new `rx.internal.operators.OperatorDelay$1$2`;
  #L49ffa8.  call `<init>`(v1, v2, v3) @signature `Lrx/internal/operators/OperatorDelay$1$2;.<init>:(Lrx/internal/operators/OperatorDelay$1;Ljava/lang/Throwable;)V` @kind direct;
  #L49ffae.  call temp:= `schedule`(v0, v1) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;)Lrx/Subscription;` @kind virtual;
  #L49ffb4.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorDelay$1` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lrx/internal/operators/OperatorDelay$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49ffc8.  v0:= v4.`rx.internal.operators.OperatorDelay$1.val$worker` @type ^`rx.Scheduler$Worker` @kind object;
  #L49ffcc.  v1:= new `rx.internal.operators.OperatorDelay$1$3`;
  #L49ffd0.  call `<init>`(v1, v4, v5) @signature `Lrx/internal/operators/OperatorDelay$1$3;.<init>:(Lrx/internal/operators/OperatorDelay$1;Ljava/lang/Object;)V` @kind direct;
  #L49ffd6.  v5:= v4.`rx.internal.operators.OperatorDelay$1.this$0` @type ^`rx.internal.operators.OperatorDelay` @kind object;
  #L49ffda.  v2:= v5.`rx.internal.operators.OperatorDelay.delay` @type ^`long` @kind wide;
  #L49ffde.  v5:= v4.`rx.internal.operators.OperatorDelay$1.this$0` @type ^`rx.internal.operators.OperatorDelay` @kind object;
  #L49ffe2.  v5:= v5.`rx.internal.operators.OperatorDelay.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L49ffe6.  call temp:= `schedule`(v0, v1, v2, v5) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L49ffec.  return @kind void;
}
