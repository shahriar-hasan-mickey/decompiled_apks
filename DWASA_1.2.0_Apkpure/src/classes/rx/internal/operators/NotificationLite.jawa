record `rx.internal.operators.NotificationLite` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object` `@@rx.internal.operators.NotificationLite.ON_COMPLETED_SENTINEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object` `@@rx.internal.operators.NotificationLite.ON_NEXT_NULL_SENTINEL` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/operators/NotificationLite;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4964b0.  v0:= new `rx.internal.operators.NotificationLite$1`;
  #L4964b4.  call `<init>`(v0) @signature `Lrx/internal/operators/NotificationLite$1;.<init>:()V` @kind direct;
  #L4964ba.  `@@rx.internal.operators.NotificationLite.ON_COMPLETED_SENTINEL` @type ^`java.lang.Object` := v0 @kind object;
  #L4964be.  v0:= new `rx.internal.operators.NotificationLite$2`;
  #L4964c2.  call `<init>`(v0) @signature `Lrx/internal/operators/NotificationLite$2;.<init>:()V` @kind direct;
  #L4964c8.  `@@rx.internal.operators.NotificationLite.ON_NEXT_NULL_SENTINEL` @type ^`java.lang.Object` := v0 @kind object;
  #L4964cc.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.NotificationLite` v0 @kind this) @signature `Lrx/internal/operators/NotificationLite;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4964e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4964e6.  return @kind void;
}
procedure `boolean` `accept`(`rx.Observer` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lrx/internal/operators/NotificationLite;.accept:(Lrx/Observer;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L496328.  v0:= `@@rx.internal.operators.NotificationLite.ON_COMPLETED_SENTINEL` @type ^`java.lang.Object` @kind object;
  #L49632c.  v1:= 1I;
  #L49632e.  if v5 != v0 then goto L49633a;
  #L496332.  call `onCompleted`(v4) @signature `Lrx/Observer;.onCompleted:()V` @kind interface;
  #L496338.  return v1;
  #L49633a.  v0:= `@@rx.internal.operators.NotificationLite.ON_NEXT_NULL_SENTINEL` @type ^`java.lang.Object` @kind object;
  #L49633e.  v2:= 0I;
  #L496340.  if v5 != v0 then goto L49634e;
  #L496344.  v5:= 0I;
  #L496346.  call `onNext`(v4, v5) @signature `Lrx/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L49634c.  return v2;
  #L49634e.  if v5 == 0 then goto L49637a;
  #L496352.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L496358.  v0:= temp @kind object;
  #L49635a.  v3:= constclass @type ^`rx.internal.operators.NotificationLite$OnErrorSentinel` @kind object;
  #L49635e.  if v0 != v3 then goto L496372;
  #L496362.  v5:= (`rx.internal.operators.NotificationLite$OnErrorSentinel`) v5 @kind object;
  #L496366.  v5:= v5.`rx.internal.operators.NotificationLite$OnErrorSentinel.e` @type ^`java.lang.Throwable` @kind object;
  #L49636a.  call `onError`(v4, v5) @signature `Lrx/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L496370.  return v1;
  #L496372.  call `onNext`(v4, v5) @signature `Lrx/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L496378.  return v2;
  #L49637a.  v4:= new `java.lang.IllegalArgumentException`;
  #L49637e.  v5:= "The lite notification can not be null" @kind object;
  #L496382.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L496388.  throw v4;
}
procedure `java.lang.Object` `completed`() @signature `Lrx/internal/operators/NotificationLite;.completed:()Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496428.  v0:= `@@rx.internal.operators.NotificationLite.ON_COMPLETED_SENTINEL` @type ^`java.lang.Object` @kind object;
  #L49642c.  return v0 @kind object;
}
procedure `java.lang.Object` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lrx/internal/operators/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496440.  v0:= new `rx.internal.operators.NotificationLite$OnErrorSentinel`;
  #L496444.  call `<init>`(v0, v1) @signature `Lrx/internal/operators/NotificationLite$OnErrorSentinel;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L49644a.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getError`(`java.lang.Object` v0 @kind object) @signature `Lrx/internal/operators/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L496494.  v0:= (`rx.internal.operators.NotificationLite$OnErrorSentinel`) v0 @kind object;
  #L496498.  v0:= v0.`rx.internal.operators.NotificationLite$OnErrorSentinel.e` @type ^`java.lang.Throwable` @kind object;
  #L49649c.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49645c.  v0:= `@@rx.internal.operators.NotificationLite.ON_NEXT_NULL_SENTINEL` @type ^`java.lang.Object` @kind object;
  #L496460.  if v1 != v0 then goto L496466;
  #L496464.  v1:= 0I;
  #L496466.  return v1 @kind object;
}
procedure `boolean` `isCompleted`(`java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/NotificationLite;.isCompleted:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49639c.  v0:= `@@rx.internal.operators.NotificationLite.ON_COMPLETED_SENTINEL` @type ^`java.lang.Object` @kind object;
  #L4963a0.  if v1 != v0 then goto L4963a8;
  #L4963a4.  v1:= 1I;
  #L4963a6.  goto L4963aa;
  #L4963a8.  v1:= 0I;
  #L4963aa.  return v1;
}
procedure `boolean` `isError`(`java.lang.Object` v0 @kind object) @signature `Lrx/internal/operators/NotificationLite;.isError:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4963bc.  v0:= instanceof @variable v0 @type ^`rx.internal.operators.NotificationLite$OnErrorSentinel` @kind boolean;
  #L4963c0.  return v0;
}
procedure `boolean` `isNext`(`java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/NotificationLite;.isNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4963d4.  if v1 == 0 then goto L4963f4;
  #L4963d8.  call temp:= `isError`(v1) @signature `Lrx/internal/operators/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4963de.  v0:= temp;
  #L4963e0.  if v0 != 0 then goto L4963f4;
  #L4963e4.  call temp:= `isCompleted`(v1) @signature `Lrx/internal/operators/NotificationLite;.isCompleted:(Ljava/lang/Object;)Z` @kind static;
  #L4963ea.  v1:= temp;
  #L4963ec.  if v1 != 0 then goto L4963f4;
  #L4963f0.  v1:= 1I;
  #L4963f2.  goto L4963f6;
  #L4963f4.  v1:= 0I;
  #L4963f6.  return v1;
}
procedure `boolean` `isNull`(`java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/NotificationLite;.isNull:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496408.  v0:= `@@rx.internal.operators.NotificationLite.ON_NEXT_NULL_SENTINEL` @type ^`java.lang.Object` @kind object;
  #L49640c.  if v1 != v0 then goto L496414;
  #L496410.  v1:= 1I;
  #L496412.  goto L496416;
  #L496414.  v1:= 0I;
  #L496416.  return v1;
}
procedure `java.lang.Object` `next`(`java.lang.Object` v0 @kind object) @signature `Lrx/internal/operators/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L496478.  if v0 != 0 then goto L496480;
  #L49647c.  v0:= `@@rx.internal.operators.NotificationLite.ON_NEXT_NULL_SENTINEL` @type ^`java.lang.Object` @kind object;
  #L496480.  return v0 @kind object;
}
