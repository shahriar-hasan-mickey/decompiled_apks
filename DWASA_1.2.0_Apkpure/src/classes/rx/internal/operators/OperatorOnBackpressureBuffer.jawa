record `rx.internal.operators.OperatorOnBackpressureBuffer` @kind class @AccessFlag PUBLIC extends `rx.Observable$Operator` @kind interface {
  `java.lang.Long` `rx.internal.operators.OperatorOnBackpressureBuffer.capacity` @AccessFlag PRIVATE_FINAL;
  `rx.functions.Action0` `rx.internal.operators.OperatorOnBackpressureBuffer.onOverflow` @AccessFlag PRIVATE_FINAL;
  `rx.BackpressureOverflow$Strategy` `rx.internal.operators.OperatorOnBackpressureBuffer.overflowStrategy` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorOnBackpressureBuffer` v1 @kind this) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4a4728.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a472e.  v0:= 0I;
  #L4a4730.  v1.`rx.internal.operators.OperatorOnBackpressureBuffer.capacity` @type ^`java.lang.Long` := v0 @kind object;
  #L4a4734.  v1.`rx.internal.operators.OperatorOnBackpressureBuffer.onOverflow` @type ^`rx.functions.Action0` := v0 @kind object;
  #L4a4738.  v0:= `@@rx.BackpressureOverflow.ON_OVERFLOW_DEFAULT` @type ^`rx.BackpressureOverflow$Strategy` @kind object;
  #L4a473c.  v1.`rx.internal.operators.OperatorOnBackpressureBuffer.overflowStrategy` @type ^`rx.BackpressureOverflow$Strategy` := v0 @kind object;
  #L4a4740.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorOnBackpressureBuffer` v2 @kind this, `long` v3 ) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4a4754.  v0:= `@@rx.BackpressureOverflow.ON_OVERFLOW_DEFAULT` @type ^`rx.BackpressureOverflow$Strategy` @kind object;
  #L4a4758.  v1:= 0I;
  #L4a475a.  call `<init>`(v2, v3, v1, v0) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.<init>:(JLrx/functions/Action0;Lrx/BackpressureOverflow$Strategy;)V` @kind direct;
  #L4a4760.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorOnBackpressureBuffer` v1 @kind this, `long` v2 , `rx.functions.Action0` v4 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.<init>:(JLrx/functions/Action0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4a4774.  v0:= `@@rx.BackpressureOverflow.ON_OVERFLOW_DEFAULT` @type ^`rx.BackpressureOverflow$Strategy` @kind object;
  #L4a4778.  call `<init>`(v1, v2, v4, v0) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.<init>:(JLrx/functions/Action0;Lrx/BackpressureOverflow$Strategy;)V` @kind direct;
  #L4a477e.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorOnBackpressureBuffer` v3 @kind this, `long` v4 , `rx.functions.Action0` v6 @kind object, `rx.BackpressureOverflow$Strategy` v7 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.<init>:(JLrx/functions/Action0;Lrx/BackpressureOverflow$Strategy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4a4790.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a4796.  v0:= 0L;
  #L4a479a.  v2:= lcmp(v4, v0);
  #L4a479e.  if v2 <= 0 then goto L4a47cc;
  #L4a47a2.  if v7 == 0 then goto L4a47bc;
  #L4a47a6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4a47ac.  v4:= temp @kind object;
  #L4a47ae.  v3.`rx.internal.operators.OperatorOnBackpressureBuffer.capacity` @type ^`java.lang.Long` := v4 @kind object;
  #L4a47b2.  v3.`rx.internal.operators.OperatorOnBackpressureBuffer.onOverflow` @type ^`rx.functions.Action0` := v6 @kind object;
  #L4a47b6.  v3.`rx.internal.operators.OperatorOnBackpressureBuffer.overflowStrategy` @type ^`rx.BackpressureOverflow$Strategy` := v7 @kind object;
  #L4a47ba.  return @kind void;
  #L4a47bc.  v4:= new `java.lang.NullPointerException`;
  #L4a47c0.  v5:= "The BackpressureOverflow strategy must not be null" @kind object;
  #L4a47c4.  call `<init>`(v4, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a47ca.  throw v4;
  #L4a47cc.  v4:= new `java.lang.IllegalArgumentException`;
  #L4a47d0.  v5:= "Buffer capacity must be > 0" @kind object;
  #L4a47d4.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a47da.  throw v4;
}
procedure `rx.internal.operators.OperatorOnBackpressureBuffer` `instance`() @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.instance:()Lrx/internal/operators/OperatorOnBackpressureBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a4710.  v0:= `@@rx.internal.operators.OperatorOnBackpressureBuffer$Holder.INSTANCE` @type ^`rx.internal.operators.OperatorOnBackpressureBuffer` @kind object;
  #L4a4714.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorOnBackpressureBuffer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a46b4.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a46b8.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4a46be.  v1:= temp @kind object;
  #L4a46c0.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorOnBackpressureBuffer` v4 @kind this, `rx.Subscriber` v5 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a46d4.  v0:= new `rx.internal.operators.OperatorOnBackpressureBuffer$BufferSubscriber`;
  #L4a46d8.  v1:= v4.`rx.internal.operators.OperatorOnBackpressureBuffer.capacity` @type ^`java.lang.Long` @kind object;
  #L4a46dc.  v2:= v4.`rx.internal.operators.OperatorOnBackpressureBuffer.onOverflow` @type ^`rx.functions.Action0` @kind object;
  #L4a46e0.  v3:= v4.`rx.internal.operators.OperatorOnBackpressureBuffer.overflowStrategy` @type ^`rx.BackpressureOverflow$Strategy` @kind object;
  #L4a46e4.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer$BufferSubscriber;.<init>:(Lrx/Subscriber;Ljava/lang/Long;Lrx/functions/Action0;Lrx/BackpressureOverflow$Strategy;)V` @kind direct;
  #L4a46ea.  call `add`(v5, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4a46f0.  call temp:= `manager`(v0) @signature `Lrx/internal/operators/OperatorOnBackpressureBuffer$BufferSubscriber;.manager:()Lrx/Producer;` @kind virtual;
  #L4a46f6.  v1:= temp @kind object;
  #L4a46f8.  call `setProducer`(v5, v1) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4a46fe.  return v0 @kind object;
}
