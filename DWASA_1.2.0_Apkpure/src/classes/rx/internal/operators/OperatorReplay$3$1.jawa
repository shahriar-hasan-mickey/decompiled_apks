record `rx.internal.operators.OperatorReplay$3$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorReplay$3` `rx.internal.operators.OperatorReplay$3$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorReplay$3$1.val$child` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorReplay$3$1` v0 @kind this, `rx.internal.operators.OperatorReplay$3` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorReplay$3$1;.<init>:(Lrx/internal/operators/OperatorReplay$3;Lrx/Subscriber;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a5f24.  v0.`rx.internal.operators.OperatorReplay$3$1.this$0` @type ^`rx.internal.operators.OperatorReplay$3` := v1 @kind object;
  #L4a5f28.  v0.`rx.internal.operators.OperatorReplay$3$1.val$child` @type ^`rx.Subscriber` := v3 @kind object;
  #L4a5f2c.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4a5f32.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorReplay$3$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorReplay$3$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a5f44.  v0:= v1.`rx.internal.operators.OperatorReplay$3$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a5f48.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4a5f4e.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorReplay$3$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorReplay$3$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a5f60.  v0:= v1.`rx.internal.operators.OperatorReplay$3$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a5f64.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a5f6a.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorReplay$3$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OperatorReplay$3$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a5f7c.  v0:= v1.`rx.internal.operators.OperatorReplay$3$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a5f80.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4a5f86.  return @kind void;
}
