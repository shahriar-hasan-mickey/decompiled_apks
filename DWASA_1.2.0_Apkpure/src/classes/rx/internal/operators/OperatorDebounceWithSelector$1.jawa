record `rx.internal.operators.OperatorDebounceWithSelector$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.Subscriber` `rx.internal.operators.OperatorDebounceWithSelector$1.self` @AccessFlag FINAL;
  `rx.internal.operators.OperatorDebounceWithTime$DebounceState` `rx.internal.operators.OperatorDebounceWithSelector$1.state` @AccessFlag FINAL;
  `rx.internal.operators.OperatorDebounceWithSelector` `rx.internal.operators.OperatorDebounceWithSelector$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.observers.SerializedSubscriber` `rx.internal.operators.OperatorDebounceWithSelector$1.val$s` @AccessFlag FINAL_SYNTHETIC;
  `rx.subscriptions.SerialSubscription` `rx.internal.operators.OperatorDebounceWithSelector$1.val$serial` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDebounceWithSelector$1` v0 @kind this, `rx.internal.operators.OperatorDebounceWithSelector` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.observers.SerializedSubscriber` v3 @kind object, `rx.subscriptions.SerialSubscription` v4 @kind object) @signature `Lrx/internal/operators/OperatorDebounceWithSelector$1;.<init>:(Lrx/internal/operators/OperatorDebounceWithSelector;Lrx/Subscriber;Lrx/observers/SerializedSubscriber;Lrx/subscriptions/SerialSubscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49f914.  v0.`rx.internal.operators.OperatorDebounceWithSelector$1.this$0` @type ^`rx.internal.operators.OperatorDebounceWithSelector` := v1 @kind object;
  #L49f918.  v0.`rx.internal.operators.OperatorDebounceWithSelector$1.val$s` @type ^`rx.observers.SerializedSubscriber` := v3 @kind object;
  #L49f91c.  v0.`rx.internal.operators.OperatorDebounceWithSelector$1.val$serial` @type ^`rx.subscriptions.SerialSubscription` := v4 @kind object;
  #L49f920.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49f926.  v1:= new `rx.internal.operators.OperatorDebounceWithTime$DebounceState`;
  #L49f92a.  call `<init>`(v1) @signature `Lrx/internal/operators/OperatorDebounceWithTime$DebounceState;.<init>:()V` @kind direct;
  #L49f930.  v0.`rx.internal.operators.OperatorDebounceWithSelector$1.state` @type ^`rx.internal.operators.OperatorDebounceWithTime$DebounceState` := v1 @kind object;
  #L49f934.  v0.`rx.internal.operators.OperatorDebounceWithSelector$1.self` @type ^`rx.Subscriber` := v0 @kind object;
  #L49f938.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorDebounceWithSelector$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorDebounceWithSelector$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49f94c.  v0:= v2.`rx.internal.operators.OperatorDebounceWithSelector$1.state` @type ^`rx.internal.operators.OperatorDebounceWithTime$DebounceState` @kind object;
  #L49f950.  v1:= v2.`rx.internal.operators.OperatorDebounceWithSelector$1.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L49f954.  call `emitAndComplete`(v0, v1, v2) @signature `Lrx/internal/operators/OperatorDebounceWithTime$DebounceState;.emitAndComplete:(Lrx/Subscriber;Lrx/Subscriber;)V` @kind virtual;
  #L49f95a.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorDebounceWithSelector$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorDebounceWithSelector$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49f96c.  v0:= v1.`rx.internal.operators.OperatorDebounceWithSelector$1.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L49f970.  call `onError`(v0, v2) @signature `Lrx/observers/SerializedSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49f976.  call `unsubscribe`(v1) @signature `Lrx/internal/operators/OperatorDebounceWithSelector$1;.unsubscribe:()V` @kind virtual;
  #L49f97c.  v2:= v1.`rx.internal.operators.OperatorDebounceWithSelector$1.state` @type ^`rx.internal.operators.OperatorDebounceWithTime$DebounceState` @kind object;
  #L49f980.  call `clear`(v2) @signature `Lrx/internal/operators/OperatorDebounceWithTime$DebounceState;.clear:()V` @kind virtual;
  #L49f986.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorDebounceWithSelector$1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OperatorDebounceWithSelector$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49f998.  v0:= v2.`rx.internal.operators.OperatorDebounceWithSelector$1.this$0` @type ^`rx.internal.operators.OperatorDebounceWithSelector` @kind object;
  #L49f99c.  v0:= v0.`rx.internal.operators.OperatorDebounceWithSelector.selector` @type ^`rx.functions.Func1` @kind object;
  #L49f9a0.  call temp:= `call`(v0, v3) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49f9a6.  v0:= temp @kind object;
  #L49f9a8.  v0:= (`rx.Observable`) v0 @kind object;
  #L49f9ac.  v1:= v2.`rx.internal.operators.OperatorDebounceWithSelector$1.state` @type ^`rx.internal.operators.OperatorDebounceWithTime$DebounceState` @kind object;
  #L49f9b0.  call temp:= `next`(v1, v3) @signature `Lrx/internal/operators/OperatorDebounceWithTime$DebounceState;.next:(Ljava/lang/Object;)I` @kind virtual;
  #L49f9b6.  v3:= temp;
  #L49f9b8.  v1:= new `rx.internal.operators.OperatorDebounceWithSelector$1$1`;
  #L49f9bc.  call `<init>`(v1, v2, v3) @signature `Lrx/internal/operators/OperatorDebounceWithSelector$1$1;.<init>:(Lrx/internal/operators/OperatorDebounceWithSelector$1;I)V` @kind direct;
  #L49f9c2.  v3:= v2.`rx.internal.operators.OperatorDebounceWithSelector$1.val$serial` @type ^`rx.subscriptions.SerialSubscription` @kind object;
  #L49f9c6.  call `set`(v3, v1) @signature `Lrx/subscriptions/SerialSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L49f9cc.  call temp:= `unsafeSubscribe`(v0, v1) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L49f9d2.  return @kind void;
  #L49f9d4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49f9d6.  call `throwOrReport`(v3, v2) @signature `Lrx/exceptions/Exceptions;.throwOrReport:(Ljava/lang/Throwable;Lrx/Observer;)V` @kind static;
  #L49f9dc.  return @kind void;
  catch `java.lang.Throwable` @[L49f998..L49f9ac] goto L49f9d4;
}
procedure `void` `onStart`(`rx.internal.operators.OperatorDebounceWithSelector$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorDebounceWithSelector$1;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49f9fc.  v0:= 9223372036854775807L;
  #L49fa06.  call `request`(v2, v0) @signature `Lrx/internal/operators/OperatorDebounceWithSelector$1;.request:(J)V` @kind virtual;
  #L49fa0c.  return @kind void;
}
