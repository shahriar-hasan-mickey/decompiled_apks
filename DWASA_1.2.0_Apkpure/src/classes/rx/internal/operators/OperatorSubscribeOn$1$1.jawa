record `rx.internal.operators.OperatorSubscribeOn$1$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorSubscribeOn$1` `rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Thread` `rx.internal.operators.OperatorSubscribeOn$1$1.val$t` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorSubscribeOn$1$1` v0 @kind this, `rx.internal.operators.OperatorSubscribeOn$1` v1 @kind object, `rx.Subscriber` v2 @kind object, `java.lang.Thread` v3 @kind object) @signature `Lrx/internal/operators/OperatorSubscribeOn$1$1;.<init>:(Lrx/internal/operators/OperatorSubscribeOn$1;Lrx/Subscriber;Ljava/lang/Thread;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a8fac.  v0.`rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @type ^`rx.internal.operators.OperatorSubscribeOn$1` := v1 @kind object;
  #L4a8fb0.  v0.`rx.internal.operators.OperatorSubscribeOn$1$1.val$t` @type ^`java.lang.Thread` := v3 @kind object;
  #L4a8fb4.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4a8fba.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorSubscribeOn$1$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorSubscribeOn$1$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a8fcc.  v0:= v2.`rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @type ^`rx.internal.operators.OperatorSubscribeOn$1` @kind object;
  #L4a8fd0.  v0:= v0.`rx.internal.operators.OperatorSubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4a8fd4.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4a8fda.  v0:= v2.`rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @type ^`rx.internal.operators.OperatorSubscribeOn$1` @kind object;
  #L4a8fde.  v0:= v0.`rx.internal.operators.OperatorSubscribeOn$1.val$inner` @type ^`rx.Scheduler$Worker` @kind object;
  #L4a8fe2.  call `unsubscribe`(v0) @signature `Lrx/Scheduler$Worker;.unsubscribe:()V` @kind virtual;
  #L4a8fe8.  return @kind void;
  #L4a8fea.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a8fec.  v1:= v2.`rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @type ^`rx.internal.operators.OperatorSubscribeOn$1` @kind object;
  #L4a8ff0.  v1:= v1.`rx.internal.operators.OperatorSubscribeOn$1.val$inner` @type ^`rx.Scheduler$Worker` @kind object;
  #L4a8ff4.  call `unsubscribe`(v1) @signature `Lrx/Scheduler$Worker;.unsubscribe:()V` @kind virtual;
  #L4a8ffa.  throw v0;
  catch `java.lang.Throwable` @[L4a8fcc..L4a8fda] goto L4a8fea;
}
procedure `void` `onError`(`rx.internal.operators.OperatorSubscribeOn$1$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorSubscribeOn$1$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a9018.  v0:= v1.`rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @type ^`rx.internal.operators.OperatorSubscribeOn$1` @kind object;
  #L4a901c.  v0:= v0.`rx.internal.operators.OperatorSubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4a9020.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a9026.  v2:= v1.`rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @type ^`rx.internal.operators.OperatorSubscribeOn$1` @kind object;
  #L4a902a.  v2:= v2.`rx.internal.operators.OperatorSubscribeOn$1.val$inner` @type ^`rx.Scheduler$Worker` @kind object;
  #L4a902e.  call `unsubscribe`(v2) @signature `Lrx/Scheduler$Worker;.unsubscribe:()V` @kind virtual;
  #L4a9034.  return @kind void;
  #L4a9036.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a9038.  v0:= v1.`rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @type ^`rx.internal.operators.OperatorSubscribeOn$1` @kind object;
  #L4a903c.  v0:= v0.`rx.internal.operators.OperatorSubscribeOn$1.val$inner` @type ^`rx.Scheduler$Worker` @kind object;
  #L4a9040.  call `unsubscribe`(v0) @signature `Lrx/Scheduler$Worker;.unsubscribe:()V` @kind virtual;
  #L4a9046.  throw v2;
  catch `java.lang.Throwable` @[L4a9018..L4a9026] goto L4a9036;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorSubscribeOn$1$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OperatorSubscribeOn$1$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a9064.  v0:= v1.`rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @type ^`rx.internal.operators.OperatorSubscribeOn$1` @kind object;
  #L4a9068.  v0:= v0.`rx.internal.operators.OperatorSubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4a906c.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4a9072.  return @kind void;
}
procedure `void` `setProducer`(`rx.internal.operators.OperatorSubscribeOn$1$1` v2 @kind this, `rx.Producer` v3 @kind object) @signature `Lrx/internal/operators/OperatorSubscribeOn$1$1;.setProducer:(Lrx/Producer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a9084.  v0:= v2.`rx.internal.operators.OperatorSubscribeOn$1$1.this$1` @type ^`rx.internal.operators.OperatorSubscribeOn$1` @kind object;
  #L4a9088.  v0:= v0.`rx.internal.operators.OperatorSubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4a908c.  v1:= new `rx.internal.operators.OperatorSubscribeOn$1$1$1`;
  #L4a9090.  call `<init>`(v1, v2, v3) @signature `Lrx/internal/operators/OperatorSubscribeOn$1$1$1;.<init>:(Lrx/internal/operators/OperatorSubscribeOn$1$1;Lrx/Producer;)V` @kind direct;
  #L4a9096.  call `setProducer`(v0, v1) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4a909c.  return @kind void;
}
