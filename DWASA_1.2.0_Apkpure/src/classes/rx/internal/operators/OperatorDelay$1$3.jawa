record `rx.internal.operators.OperatorDelay$1$3` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OperatorDelay$1` `rx.internal.operators.OperatorDelay$1$3.this$1` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `rx.internal.operators.OperatorDelay$1$3.val$t` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDelay$1$3` v0 @kind this, `rx.internal.operators.OperatorDelay$1` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OperatorDelay$1$3;.<init>:(Lrx/internal/operators/OperatorDelay$1;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49fef4.  v0.`rx.internal.operators.OperatorDelay$1$3.this$1` @type ^`rx.internal.operators.OperatorDelay$1` := v1 @kind object;
  #L49fef8.  v0.`rx.internal.operators.OperatorDelay$1$3.val$t` @type ^`java.lang.Object` := v2 @kind object;
  #L49fefc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49ff02.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorDelay$1$3` v2 @kind this) @signature `Lrx/internal/operators/OperatorDelay$1$3;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49ff14.  v0:= v2.`rx.internal.operators.OperatorDelay$1$3.this$1` @type ^`rx.internal.operators.OperatorDelay$1` @kind object;
  #L49ff18.  v0:= v0.`rx.internal.operators.OperatorDelay$1.done` @type ^`boolean` @kind boolean;
  #L49ff1c.  if v0 != 0 then goto L49ff32;
  #L49ff20.  v0:= v2.`rx.internal.operators.OperatorDelay$1$3.this$1` @type ^`rx.internal.operators.OperatorDelay$1` @kind object;
  #L49ff24.  v0:= v0.`rx.internal.operators.OperatorDelay$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L49ff28.  v1:= v2.`rx.internal.operators.OperatorDelay$1$3.val$t` @type ^`java.lang.Object` @kind object;
  #L49ff2c.  call `onNext`(v0, v1) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L49ff32.  return @kind void;
}
