record `rx.internal.operators.BlockingOperatorLatest$1` @kind class @AccessFlag FINAL extends `java.lang.Iterable` @kind interface {
  `rx.Observable` `rx.internal.operators.BlockingOperatorLatest$1.val$source` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.BlockingOperatorLatest$1` v0 @kind this, `rx.Observable` v1 @kind object) @signature `Lrx/internal/operators/BlockingOperatorLatest$1;.<init>:(Lrx/Observable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L492a6c.  v0.`rx.internal.operators.BlockingOperatorLatest$1.val$source` @type ^`rx.Observable` := v1 @kind object;
  #L492a70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L492a76.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`rx.internal.operators.BlockingOperatorLatest$1` v2 @kind this) @signature `Lrx/internal/operators/BlockingOperatorLatest$1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L492a3c.  v0:= new `rx.internal.operators.BlockingOperatorLatest$LatestObserverIterator`;
  #L492a40.  call `<init>`(v0) @signature `Lrx/internal/operators/BlockingOperatorLatest$LatestObserverIterator;.<init>:()V` @kind direct;
  #L492a46.  v1:= v2.`rx.internal.operators.BlockingOperatorLatest$1.val$source` @type ^`rx.Observable` @kind object;
  #L492a4a.  call temp:= `materialize`(v1) @signature `Lrx/Observable;.materialize:()Lrx/Observable;` @kind virtual;
  #L492a50.  v1:= temp @kind object;
  #L492a52.  call temp:= `subscribe`(v1, v0) @signature `Lrx/Observable;.subscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L492a58.  return v0 @kind object;
}
