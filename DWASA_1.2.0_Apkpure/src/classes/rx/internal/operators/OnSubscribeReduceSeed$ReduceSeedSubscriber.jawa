record `rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber` @kind class @AccessFlag FINAL extends `rx.internal.operators.DeferredScalarSubscriber` @kind class {
  `rx.functions.Func2` `rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber.reducer` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber` v0 @kind this, `rx.Subscriber` v1 @kind object, `java.lang.Object` v2 @kind object, `rx.functions.Func2` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeReduceSeed$ReduceSeedSubscriber;.<init>:(Lrx/Subscriber;Ljava/lang/Object;Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49c8fc.  call `<init>`(v0, v1) @signature `Lrx/internal/operators/DeferredScalarSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49c902.  v0.`rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber.value` @type ^`java.lang.Object` := v2 @kind object;
  #L49c906.  v1:= 1I;
  #L49c908.  v0.`rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber.hasValue` @type ^`boolean` := v1 @kind boolean;
  #L49c90c.  v0.`rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber.reducer` @type ^`rx.functions.Func2` := v3 @kind object;
  #L49c910.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeReduceSeed$ReduceSeedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49c924.  v0:= v2.`rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber.reducer` @type ^`rx.functions.Func2` @kind object;
  #L49c928.  v1:= v2.`rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L49c92c.  call temp:= `call`(v0, v1, v3) @signature `Lrx/functions/Func2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49c932.  v3:= temp @kind object;
  #L49c934.  v2.`rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber.value` @type ^`java.lang.Object` := v3 @kind object;
  #L49c938.  goto L49c952;
  #L49c93a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49c93c.  call `throwIfFatal`(v3) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49c942.  call `unsubscribe`(v2) @signature `Lrx/internal/operators/OnSubscribeReduceSeed$ReduceSeedSubscriber;.unsubscribe:()V` @kind virtual;
  #L49c948.  v0:= v2.`rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber.actual` @type ^`rx.Subscriber` @kind object;
  #L49c94c.  call `onError`(v0, v3) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49c952.  return @kind void;
  catch `java.lang.Throwable` @[L49c924..L49c938] goto L49c93a;
}
