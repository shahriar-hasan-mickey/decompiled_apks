record `rx.internal.operators.OperatorSkipUntil$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorSkipUntil` `rx.internal.operators.OperatorSkipUntil$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicBoolean` `rx.internal.operators.OperatorSkipUntil$1.val$gate` @AccessFlag FINAL_SYNTHETIC;
  `rx.observers.SerializedSubscriber` `rx.internal.operators.OperatorSkipUntil$1.val$s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorSkipUntil$1` v0 @kind this, `rx.internal.operators.OperatorSkipUntil` v1 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v2 @kind object, `rx.observers.SerializedSubscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorSkipUntil$1;.<init>:(Lrx/internal/operators/OperatorSkipUntil;Ljava/util/concurrent/atomic/AtomicBoolean;Lrx/observers/SerializedSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a8af4.  v0.`rx.internal.operators.OperatorSkipUntil$1.this$0` @type ^`rx.internal.operators.OperatorSkipUntil` := v1 @kind object;
  #L4a8af8.  v0.`rx.internal.operators.OperatorSkipUntil$1.val$gate` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L4a8afc.  v0.`rx.internal.operators.OperatorSkipUntil$1.val$s` @type ^`rx.observers.SerializedSubscriber` := v3 @kind object;
  #L4a8b00.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4a8b06.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorSkipUntil$1` v0 @kind this) @signature `Lrx/internal/operators/OperatorSkipUntil$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;

  #L4a8b18.  call `unsubscribe`(v0) @signature `Lrx/internal/operators/OperatorSkipUntil$1;.unsubscribe:()V` @kind virtual;
  #L4a8b1e.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorSkipUntil$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorSkipUntil$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a8b30.  v0:= v1.`rx.internal.operators.OperatorSkipUntil$1.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L4a8b34.  call `onError`(v0, v2) @signature `Lrx/observers/SerializedSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a8b3a.  v2:= v1.`rx.internal.operators.OperatorSkipUntil$1.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L4a8b3e.  call `unsubscribe`(v2) @signature `Lrx/observers/SerializedSubscriber;.unsubscribe:()V` @kind virtual;
  #L4a8b44.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorSkipUntil$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OperatorSkipUntil$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a8b58.  v2:= v1.`rx.internal.operators.OperatorSkipUntil$1.val$gate` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4a8b5c.  v0:= 1I;
  #L4a8b5e.  call `set`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L4a8b64.  call `unsubscribe`(v1) @signature `Lrx/internal/operators/OperatorSkipUntil$1;.unsubscribe:()V` @kind virtual;
  #L4a8b6a.  return @kind void;
}
