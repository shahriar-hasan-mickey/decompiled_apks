record `rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Single$OnSubscribe` @kind interface {
  `rx.Single` `rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther.main` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther.other` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther` v0 @kind this, `rx.Single` v1 @kind object, `rx.Observable` v2 @kind object) @signature `Lrx/internal/operators/SingleOnSubscribeDelaySubscriptionOther;.<init>:(Lrx/Single;Lrx/Observable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4afeec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4afef2.  v0.`rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther.main` @type ^`rx.Single` := v1 @kind object;
  #L4afef6.  v0.`rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther.other` @type ^`rx.Observable` := v2 @kind object;
  #L4afefa.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/SingleOnSubscribeDelaySubscriptionOther;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4aff0c.  v1:= (`rx.SingleSubscriber`) v1 @kind object;
  #L4aff10.  call `call`(v0, v1) @signature `Lrx/internal/operators/SingleOnSubscribeDelaySubscriptionOther;.call:(Lrx/SingleSubscriber;)V` @kind virtual;
  #L4aff16.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther` v2 @kind this, `rx.SingleSubscriber` v3 @kind object) @signature `Lrx/internal/operators/SingleOnSubscribeDelaySubscriptionOther;.call:(Lrx/SingleSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aff28.  v0:= new `rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther$1`;
  #L4aff2c.  call `<init>`(v0, v2, v3) @signature `Lrx/internal/operators/SingleOnSubscribeDelaySubscriptionOther$1;.<init>:(Lrx/internal/operators/SingleOnSubscribeDelaySubscriptionOther;Lrx/SingleSubscriber;)V` @kind direct;
  #L4aff32.  v1:= new `rx.subscriptions.SerialSubscription`;
  #L4aff36.  call `<init>`(v1) @signature `Lrx/subscriptions/SerialSubscription;.<init>:()V` @kind direct;
  #L4aff3c.  call `add`(v3, v1) @signature `Lrx/SingleSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4aff42.  v3:= new `rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther$2`;
  #L4aff46.  call `<init>`(v3, v2, v0, v1) @signature `Lrx/internal/operators/SingleOnSubscribeDelaySubscriptionOther$2;.<init>:(Lrx/internal/operators/SingleOnSubscribeDelaySubscriptionOther;Lrx/SingleSubscriber;Lrx/subscriptions/SerialSubscription;)V` @kind direct;
  #L4aff4c.  call `set`(v1, v3) @signature `Lrx/subscriptions/SerialSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L4aff52.  v0:= v2.`rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther.other` @type ^`rx.Observable` @kind object;
  #L4aff56.  call temp:= `subscribe`(v0, v3) @signature `Lrx/Observable;.subscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4aff5c.  return @kind void;
}
