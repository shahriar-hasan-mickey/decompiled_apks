record `rx.internal.operators.OnSubscribeFromEmitter$1` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@rx.internal.operators.OnSubscribeFromEmitter$1.$SwitchMap$rx$Emitter$BackpressureMode` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lrx/internal/operators/OnSubscribeFromEmitter$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L498e20.  call temp:= `values`() @signature `Lrx/Emitter$BackpressureMode;.values:()[Lrx/Emitter$BackpressureMode;` @kind static;
  #L498e26.  v0:= temp @kind object;
  #L498e28.  v0:= length @variable v0;
  #L498e2a.  v0:= new `int`[v0];
  #L498e2e.  `@@rx.internal.operators.OnSubscribeFromEmitter$1.$SwitchMap$rx$Emitter$BackpressureMode` @type ^`int`[] := v0 @kind object;
  #L498e32.  v0:= `@@rx.internal.operators.OnSubscribeFromEmitter$1.$SwitchMap$rx$Emitter$BackpressureMode` @type ^`int`[] @kind object;
  #L498e36.  v1:= `@@rx.Emitter$BackpressureMode.NONE` @type ^`rx.Emitter$BackpressureMode` @kind object;
  #L498e3a.  call temp:= `ordinal`(v1) @signature `Lrx/Emitter$BackpressureMode;.ordinal:()I` @kind virtual;
  #L498e40.  v1:= temp;
  #L498e42.  v2:= 1I;
  #L498e44.  v0[v1]:= v2;
  #L498e48.  v0:= `@@rx.internal.operators.OnSubscribeFromEmitter$1.$SwitchMap$rx$Emitter$BackpressureMode` @type ^`int`[] @kind object;
  #L498e4c.  v1:= `@@rx.Emitter$BackpressureMode.ERROR` @type ^`rx.Emitter$BackpressureMode` @kind object;
  #L498e50.  call temp:= `ordinal`(v1) @signature `Lrx/Emitter$BackpressureMode;.ordinal:()I` @kind virtual;
  #L498e56.  v1:= temp;
  #L498e58.  v2:= 2I;
  #L498e5a.  v0[v1]:= v2;
  #L498e5e.  v0:= `@@rx.internal.operators.OnSubscribeFromEmitter$1.$SwitchMap$rx$Emitter$BackpressureMode` @type ^`int`[] @kind object;
  #L498e62.  v1:= `@@rx.Emitter$BackpressureMode.DROP` @type ^`rx.Emitter$BackpressureMode` @kind object;
  #L498e66.  call temp:= `ordinal`(v1) @signature `Lrx/Emitter$BackpressureMode;.ordinal:()I` @kind virtual;
  #L498e6c.  v1:= temp;
  #L498e6e.  v2:= 3I;
  #L498e70.  v0[v1]:= v2;
  #L498e74.  v0:= `@@rx.internal.operators.OnSubscribeFromEmitter$1.$SwitchMap$rx$Emitter$BackpressureMode` @type ^`int`[] @kind object;
  #L498e78.  v1:= `@@rx.Emitter$BackpressureMode.LATEST` @type ^`rx.Emitter$BackpressureMode` @kind object;
  #L498e7c.  call temp:= `ordinal`(v1) @signature `Lrx/Emitter$BackpressureMode;.ordinal:()I` @kind virtual;
  #L498e82.  v1:= temp;
  #L498e84.  v2:= 4I;
  #L498e86.  v0[v1]:= v2;
  #L498e8a.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L498e32..L498e48] goto L498e48;
  catch `java.lang.NoSuchFieldError` @[L498e48..L498e5e] goto L498e5e;
  catch `java.lang.NoSuchFieldError` @[L498e5e..L498e74] goto L498e74;
  catch `java.lang.NoSuchFieldError` @[L498e74..L498e8a] goto L498e8a;
}
