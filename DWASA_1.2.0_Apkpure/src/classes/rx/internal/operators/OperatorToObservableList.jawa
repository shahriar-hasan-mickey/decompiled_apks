record `rx.internal.operators.OperatorToObservableList` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
}
procedure `void` `<init>`(`rx.internal.operators.OperatorToObservableList` v0 @kind this) @signature `Lrx/internal/operators/OperatorToObservableList;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ab75c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ab762.  return @kind void;
}
procedure `rx.internal.operators.OperatorToObservableList` `instance`() @signature `Lrx/internal/operators/OperatorToObservableList;.instance:()Lrx/internal/operators/OperatorToObservableList;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ab744.  v0:= `@@rx.internal.operators.OperatorToObservableList$Holder.INSTANCE` @type ^`rx.internal.operators.OperatorToObservableList` @kind object;
  #L4ab748.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorToObservableList` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorToObservableList;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ab6f0.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4ab6f4.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorToObservableList;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4ab6fa.  v1:= temp @kind object;
  #L4ab6fc.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorToObservableList` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorToObservableList;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab710.  v0:= new `rx.internal.producers.SingleDelayedProducer`;
  #L4ab714.  call `<init>`(v0, v3) @signature `Lrx/internal/producers/SingleDelayedProducer;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4ab71a.  v1:= new `rx.internal.operators.OperatorToObservableList$1`;
  #L4ab71e.  call `<init>`(v1, v2, v0, v3) @signature `Lrx/internal/operators/OperatorToObservableList$1;.<init>:(Lrx/internal/operators/OperatorToObservableList;Lrx/internal/producers/SingleDelayedProducer;Lrx/Subscriber;)V` @kind direct;
  #L4ab724.  call `add`(v3, v1) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4ab72a.  call `setProducer`(v3, v0) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4ab730.  return v1 @kind object;
}
