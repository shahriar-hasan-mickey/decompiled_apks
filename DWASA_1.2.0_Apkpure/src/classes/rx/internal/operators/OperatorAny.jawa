record `rx.internal.operators.OperatorAny` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.functions.Func1` `rx.internal.operators.OperatorAny.predicate` @AccessFlag FINAL;
  `boolean` `rx.internal.operators.OperatorAny.returnOnEmpty` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorAny` v0 @kind this, `rx.functions.Func1` v1 @kind object, `boolean` v2 ) @signature `Lrx/internal/operators/OperatorAny;.<init>:(Lrx/functions/Func1;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49dfb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49dfba.  v0.`rx.internal.operators.OperatorAny.predicate` @type ^`rx.functions.Func1` := v1 @kind object;
  #L49dfbe.  v0.`rx.internal.operators.OperatorAny.returnOnEmpty` @type ^`boolean` := v2 @kind boolean;
  #L49dfc2.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorAny` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorAny;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49df60.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L49df64.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorAny;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L49df6a.  v1:= temp @kind object;
  #L49df6c.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorAny` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorAny;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49df80.  v0:= new `rx.internal.producers.SingleDelayedProducer`;
  #L49df84.  call `<init>`(v0, v3) @signature `Lrx/internal/producers/SingleDelayedProducer;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49df8a.  v1:= new `rx.internal.operators.OperatorAny$1`;
  #L49df8e.  call `<init>`(v1, v2, v0, v3) @signature `Lrx/internal/operators/OperatorAny$1;.<init>:(Lrx/internal/operators/OperatorAny;Lrx/internal/producers/SingleDelayedProducer;Lrx/Subscriber;)V` @kind direct;
  #L49df94.  call `add`(v3, v1) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49df9a.  call `setProducer`(v3, v0) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L49dfa0.  return v1 @kind object;
}
