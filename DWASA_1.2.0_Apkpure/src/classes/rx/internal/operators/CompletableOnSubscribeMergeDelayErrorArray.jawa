record `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Completable`[] `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray.sources` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray` v0 @kind this, `rx.Completable`[] v1 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorArray;.<init>:([Lrx/Completable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L495394.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49539a.  v0.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray.sources` @type ^`rx.Completable`[] := v1 @kind object;
  #L49539e.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorArray;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4953b0.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L4953b4.  call `call`(v0, v1) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorArray;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L4953ba.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray` v14 @kind this, `rx.CompletableSubscriber` v15 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorArray;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L4953cc.  v6:= new `rx.subscriptions.CompositeSubscription`;
  #L4953d0.  call `<init>`(v6) @signature `Lrx/subscriptions/CompositeSubscription;.<init>:()V` @kind direct;
  #L4953d6.  v7:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L4953da.  v0:= v14.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray.sources` @type ^`rx.Completable`[] @kind object;
  #L4953de.  v0:= length @variable v0;
  #L4953e0.  v0:= v0 + 1;
  #L4953e4.  call `<init>`(v7, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L4953ea.  v8:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L4953ee.  call `<init>`(v8) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L4953f4.  call `onSubscribe`(v15, v6) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L4953fa.  v9:= v14.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray.sources` @type ^`rx.Completable`[] @kind object;
  #L4953fe.  v10:= length @variable v9;
  #L495400.  v0:= 0I;
  #L495402.  v11:= 0I;
  #L495404.  if v11 >= v10 then goto L49545c;
  #L495408.  v12:= v9[v11] @kind object;
  #L49540c.  call temp:= `isUnsubscribed`(v6) @signature `Lrx/subscriptions/CompositeSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L495412.  v0:= temp;
  #L495414.  if v0 == 0 then goto L49541a;
  #L495418.  return @kind void;
  #L49541a.  if v12 != 0 then goto L49543a;
  #L49541e.  v0:= new `java.lang.NullPointerException`;
  #L495422.  v1:= "A completable source is null" @kind object;
  #L495426.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49542c.  call temp:= `offer`(v8, v0) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L495432.  call temp:= `decrementAndGet`(v7) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L495438.  goto L495456;
  #L49543a.  v13:= new `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray$1`;
  #L49543e.  v0:= v13 @kind object;
  #L495440.  v1:= v14 @kind object;
  #L495442.  v2:= v6 @kind object;
  #L495444.  v3:= v8 @kind object;
  #L495446.  v4:= v7 @kind object;
  #L495448.  v5:= v15 @kind object;
  #L49544a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorArray$1;.<init>:(Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorArray;Lrx/subscriptions/CompositeSubscription;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicInteger;Lrx/CompletableSubscriber;)V` @kind direct;
  #L495450.  call `unsafeSubscribe`(v12, v13) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L495456.  v11:= v11 + 1;
  #L49545a.  goto L495404;
  #L49545c.  call temp:= `decrementAndGet`(v7) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L495462.  v0:= temp;
  #L495464.  if v0 != 0 then goto L49548a;
  #L495468.  call temp:= `isEmpty`(v8) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L49546e.  v0:= temp;
  #L495470.  if v0 == 0 then goto L49547c;
  #L495474.  call `onCompleted`(v15) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L49547a.  goto L49548a;
  #L49547c.  call temp:= `collectErrors`(v8) @signature `Lrx/internal/operators/CompletableOnSubscribeMerge;.collectErrors:(Ljava/util/Queue;)Ljava/lang/Throwable;` @kind static;
  #L495482.  v0:= temp @kind object;
  #L495484.  call `onError`(v15, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L49548a.  return @kind void;
}
