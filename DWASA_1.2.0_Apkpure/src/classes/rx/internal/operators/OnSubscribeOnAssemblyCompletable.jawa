record `rx.internal.operators.OnSubscribeOnAssemblyCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Completable$OnSubscribe` `rx.internal.operators.OnSubscribeOnAssemblyCompletable.source` @AccessFlag FINAL;
  `java.lang.String` `rx.internal.operators.OnSubscribeOnAssemblyCompletable.stacktrace` @AccessFlag FINAL;
}
global `boolean` `@@rx.internal.operators.OnSubscribeOnAssemblyCompletable.fullStackTrace` @AccessFlag PUBLIC_STATIC_VOLATILE;
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeOnAssemblyCompletable` v0 @kind this, `rx.Completable$OnSubscribe` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeOnAssemblyCompletable;.<init>:(Lrx/Completable$OnSubscribe;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49afd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49afd6.  v0.`rx.internal.operators.OnSubscribeOnAssemblyCompletable.source` @type ^`rx.Completable$OnSubscribe` := v1 @kind object;
  #L49afda.  call temp:= `createStacktrace`() @signature `Lrx/internal/operators/OnSubscribeOnAssembly;.createStacktrace:()Ljava/lang/String;` @kind static;
  #L49afe0.  v1:= temp @kind object;
  #L49afe2.  v0.`rx.internal.operators.OnSubscribeOnAssemblyCompletable.stacktrace` @type ^`java.lang.String` := v1 @kind object;
  #L49afe6.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeOnAssemblyCompletable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeOnAssemblyCompletable;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49aff8.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L49affc.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeOnAssemblyCompletable;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L49b002.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeOnAssemblyCompletable` v3 @kind this, `rx.CompletableSubscriber` v4 @kind object) @signature `Lrx/internal/operators/OnSubscribeOnAssemblyCompletable;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49b014.  v0:= v3.`rx.internal.operators.OnSubscribeOnAssemblyCompletable.source` @type ^`rx.Completable$OnSubscribe` @kind object;
  #L49b018.  v1:= new `rx.internal.operators.OnSubscribeOnAssemblyCompletable$OnAssemblyCompletableSubscriber`;
  #L49b01c.  v2:= v3.`rx.internal.operators.OnSubscribeOnAssemblyCompletable.stacktrace` @type ^`java.lang.String` @kind object;
  #L49b020.  call `<init>`(v1, v4, v2) @signature `Lrx/internal/operators/OnSubscribeOnAssemblyCompletable$OnAssemblyCompletableSubscriber;.<init>:(Lrx/CompletableSubscriber;Ljava/lang/String;)V` @kind direct;
  #L49b026.  call `call`(v0, v1) @signature `Lrx/Completable$OnSubscribe;.call:(Ljava/lang/Object;)V` @kind interface;
  #L49b02c.  return @kind void;
}
