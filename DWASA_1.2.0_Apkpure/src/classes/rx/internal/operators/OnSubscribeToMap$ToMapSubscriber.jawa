record `rx.internal.operators.OnSubscribeToMap$ToMapSubscriber` @kind class @AccessFlag FINAL extends `rx.internal.operators.DeferredScalarSubscriberSafe` @kind class {
  `rx.functions.Func1` `rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.keySelector` @AccessFlag FINAL;
  `rx.functions.Func1` `rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.valueSelector` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber` v0 @kind this, `rx.Subscriber` v1 @kind object, `java.util.Map` v2 @kind object, `rx.functions.Func1` v3 @kind object, `rx.functions.Func1` v4 @kind object) @signature `Lrx/internal/operators/OnSubscribeToMap$ToMapSubscriber;.<init>:(Lrx/Subscriber;Ljava/util/Map;Lrx/functions/Func1;Lrx/functions/Func1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49d46c.  call `<init>`(v0, v1) @signature `Lrx/internal/operators/DeferredScalarSubscriberSafe;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49d472.  v0.`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.value` @type ^`java.lang.Object` := v2 @kind object;
  #L49d476.  v1:= 1I;
  #L49d478.  v0.`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.hasValue` @type ^`boolean` := v1 @kind boolean;
  #L49d47c.  v0.`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.keySelector` @type ^`rx.functions.Func1` := v3 @kind object;
  #L49d480.  v0.`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.valueSelector` @type ^`rx.functions.Func1` := v4 @kind object;
  #L49d484.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeToMap$ToMapSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49d498.  v0:= v2.`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.done` @type ^`boolean` @kind boolean;
  #L49d49c.  if v0 == 0 then goto L49d4a2;
  #L49d4a0.  return @kind void;
  #L49d4a2.  v0:= v2.`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.keySelector` @type ^`rx.functions.Func1` @kind object;
  #L49d4a6.  call temp:= `call`(v0, v3) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49d4ac.  v0:= temp @kind object;
  #L49d4ae.  v1:= v2.`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.valueSelector` @type ^`rx.functions.Func1` @kind object;
  #L49d4b2.  call temp:= `call`(v1, v3) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49d4b8.  v3:= temp @kind object;
  #L49d4ba.  v1:= v2.`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L49d4be.  v1:= (`java.util.Map`) v1 @kind object;
  #L49d4c2.  call temp:= `put`(v1, v0, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49d4c8.  goto L49d4de;
  #L49d4ca.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49d4cc.  call `throwIfFatal`(v3) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49d4d2.  call `unsubscribe`(v2) @signature `Lrx/internal/operators/OnSubscribeToMap$ToMapSubscriber;.unsubscribe:()V` @kind virtual;
  #L49d4d8.  call `onError`(v2, v3) @signature `Lrx/internal/operators/OnSubscribeToMap$ToMapSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49d4de.  return @kind void;
  catch `java.lang.Throwable` @[L49d4a2..L49d4c8] goto L49d4ca;
}
procedure `void` `onStart`(`rx.internal.operators.OnSubscribeToMap$ToMapSubscriber` v2 @kind this) @signature `Lrx/internal/operators/OnSubscribeToMap$ToMapSubscriber;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49d4fc.  v0:= 9223372036854775807L;
  #L49d506.  call `request`(v2, v0) @signature `Lrx/internal/operators/OnSubscribeToMap$ToMapSubscriber;.request:(J)V` @kind virtual;
  #L49d50c.  return @kind void;
}
