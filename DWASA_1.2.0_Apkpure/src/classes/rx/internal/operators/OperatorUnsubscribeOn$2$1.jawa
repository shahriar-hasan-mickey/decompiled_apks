record `rx.internal.operators.OperatorUnsubscribeOn$2$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OperatorUnsubscribeOn$2` `rx.internal.operators.OperatorUnsubscribeOn$2$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler$Worker` `rx.internal.operators.OperatorUnsubscribeOn$2$1.val$inner` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorUnsubscribeOn$2$1` v0 @kind this, `rx.internal.operators.OperatorUnsubscribeOn$2` v1 @kind object, `rx.Scheduler$Worker` v2 @kind object) @signature `Lrx/internal/operators/OperatorUnsubscribeOn$2$1;.<init>:(Lrx/internal/operators/OperatorUnsubscribeOn$2;Lrx/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aba2c.  v0.`rx.internal.operators.OperatorUnsubscribeOn$2$1.this$1` @type ^`rx.internal.operators.OperatorUnsubscribeOn$2` := v1 @kind object;
  #L4aba30.  v0.`rx.internal.operators.OperatorUnsubscribeOn$2$1.val$inner` @type ^`rx.Scheduler$Worker` := v2 @kind object;
  #L4aba34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aba3a.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorUnsubscribeOn$2$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorUnsubscribeOn$2$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aba4c.  v0:= v1.`rx.internal.operators.OperatorUnsubscribeOn$2$1.this$1` @type ^`rx.internal.operators.OperatorUnsubscribeOn$2` @kind object;
  #L4aba50.  v0:= v0.`rx.internal.operators.OperatorUnsubscribeOn$2.val$parent` @type ^`rx.Subscriber` @kind object;
  #L4aba54.  call `unsubscribe`(v0) @signature `Lrx/Subscriber;.unsubscribe:()V` @kind virtual;
  #L4aba5a.  v0:= v1.`rx.internal.operators.OperatorUnsubscribeOn$2$1.val$inner` @type ^`rx.Scheduler$Worker` @kind object;
  #L4aba5e.  call `unsubscribe`(v0) @signature `Lrx/Scheduler$Worker;.unsubscribe:()V` @kind virtual;
  #L4aba64.  return @kind void;
}
