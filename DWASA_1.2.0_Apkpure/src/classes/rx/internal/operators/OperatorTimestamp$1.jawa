record `rx.internal.operators.OperatorTimestamp$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorTimestamp` `rx.internal.operators.OperatorTimestamp$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorTimestamp$1.val$o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorTimestamp$1` v0 @kind this, `rx.internal.operators.OperatorTimestamp` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorTimestamp$1;.<init>:(Lrx/internal/operators/OperatorTimestamp;Lrx/Subscriber;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ab4e4.  v0.`rx.internal.operators.OperatorTimestamp$1.this$0` @type ^`rx.internal.operators.OperatorTimestamp` := v1 @kind object;
  #L4ab4e8.  v0.`rx.internal.operators.OperatorTimestamp$1.val$o` @type ^`rx.Subscriber` := v3 @kind object;
  #L4ab4ec.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4ab4f2.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorTimestamp$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorTimestamp$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab504.  v0:= v1.`rx.internal.operators.OperatorTimestamp$1.val$o` @type ^`rx.Subscriber` @kind object;
  #L4ab508.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4ab50e.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorTimestamp$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorTimestamp$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab520.  v0:= v1.`rx.internal.operators.OperatorTimestamp$1.val$o` @type ^`rx.Subscriber` @kind object;
  #L4ab524.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ab52a.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorTimestamp$1` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lrx/internal/operators/OperatorTimestamp$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ab53c.  v0:= v4.`rx.internal.operators.OperatorTimestamp$1.val$o` @type ^`rx.Subscriber` @kind object;
  #L4ab540.  v1:= new `rx.schedulers.Timestamped`;
  #L4ab544.  v2:= v4.`rx.internal.operators.OperatorTimestamp$1.this$0` @type ^`rx.internal.operators.OperatorTimestamp` @kind object;
  #L4ab548.  v2:= v2.`rx.internal.operators.OperatorTimestamp.scheduler` @type ^`rx.Scheduler` @kind object;
  #L4ab54c.  call temp:= `now`(v2) @signature `Lrx/Scheduler;.now:()J` @kind virtual;
  #L4ab552.  v2:= temp @kind wide;
  #L4ab554.  call `<init>`(v1, v2, v5) @signature `Lrx/schedulers/Timestamped;.<init>:(JLjava/lang/Object;)V` @kind direct;
  #L4ab55a.  call `onNext`(v0, v1) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4ab560.  return @kind void;
}
