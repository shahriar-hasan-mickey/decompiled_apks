record `rx.internal.operators.EmptyObservableHolder` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `rx.Observable$OnSubscribe` @kind interface {
}
global `rx.internal.operators.EmptyObservableHolder`[] `@@rx.internal.operators.EmptyObservableHolder.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `rx.Observable` `@@rx.internal.operators.EmptyObservableHolder.EMPTY` @AccessFlag STATIC_FINAL;
global `rx.internal.operators.EmptyObservableHolder` `@@rx.internal.operators.EmptyObservableHolder.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lrx/internal/operators/EmptyObservableHolder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4960f8.  v0:= new `rx.internal.operators.EmptyObservableHolder`;
  #L4960fc.  v1:= 0I;
  #L4960fe.  v2:= "INSTANCE" @kind object;
  #L496102.  call `<init>`(v0, v2, v1) @signature `Lrx/internal/operators/EmptyObservableHolder;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L496108.  `@@rx.internal.operators.EmptyObservableHolder.INSTANCE` @type ^`rx.internal.operators.EmptyObservableHolder` := v0 @kind object;
  #L49610c.  v0:= 1I;
  #L49610e.  v0:= new `rx.internal.operators.EmptyObservableHolder`[v0];
  #L496112.  v2:= `@@rx.internal.operators.EmptyObservableHolder.INSTANCE` @type ^`rx.internal.operators.EmptyObservableHolder` @kind object;
  #L496116.  v0[v1]:= v2 @kind object;
  #L49611a.  `@@rx.internal.operators.EmptyObservableHolder.$VALUES` @type ^`rx.internal.operators.EmptyObservableHolder`[] := v0 @kind object;
  #L49611e.  call temp:= `create`(v2) @signature `Lrx/Observable;.create:(Lrx/Observable$OnSubscribe;)Lrx/Observable;` @kind static;
  #L496124.  v0:= temp @kind object;
  #L496126.  `@@rx.internal.operators.EmptyObservableHolder.EMPTY` @type ^`rx.Observable` := v0 @kind object;
  #L49612a.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.EmptyObservableHolder` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lrx/internal/operators/EmptyObservableHolder;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L49613c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L496142.  return @kind void;
}
procedure `rx.Observable` `instance`() @signature `Lrx/internal/operators/EmptyObservableHolder;.instance:()Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496098.  v0:= `@@rx.internal.operators.EmptyObservableHolder.EMPTY` @type ^`rx.Observable` @kind object;
  #L49609c.  return v0 @kind object;
}
procedure `rx.internal.operators.EmptyObservableHolder` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lrx/internal/operators/EmptyObservableHolder;.valueOf:(Ljava/lang/String;)Lrx/internal/operators/EmptyObservableHolder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4960b0.  v0:= constclass @type ^`rx.internal.operators.EmptyObservableHolder` @kind object;
  #L4960b4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4960ba.  v1:= temp @kind object;
  #L4960bc.  v1:= (`rx.internal.operators.EmptyObservableHolder`) v1 @kind object;
  #L4960c0.  return v1 @kind object;
}
procedure `rx.internal.operators.EmptyObservableHolder`[] `values`() @signature `Lrx/internal/operators/EmptyObservableHolder;.values:()[Lrx/internal/operators/EmptyObservableHolder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4960d4.  v0:= `@@rx.internal.operators.EmptyObservableHolder.$VALUES` @type ^`rx.internal.operators.EmptyObservableHolder`[] @kind object;
  #L4960d8.  call temp:= `clone`(v0) @signature `[Lrx/internal/operators/EmptyObservableHolder;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4960de.  v0:= temp @kind object;
  #L4960e0.  v0:= (`rx.internal.operators.EmptyObservableHolder`[]) v0 @kind object;
  #L4960e4.  return v0 @kind object;
}
procedure `void` `call`(`rx.internal.operators.EmptyObservableHolder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/EmptyObservableHolder;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L496154.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L496158.  call `call`(v0, v1) @signature `Lrx/internal/operators/EmptyObservableHolder;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L49615e.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.EmptyObservableHolder` v0 @kind this, `rx.Subscriber` v1 @kind object) @signature `Lrx/internal/operators/EmptyObservableHolder;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;

  #L496170.  call `onCompleted`(v1) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L496176.  return @kind void;
}
