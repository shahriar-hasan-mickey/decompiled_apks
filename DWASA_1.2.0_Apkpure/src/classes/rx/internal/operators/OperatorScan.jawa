record `rx.internal.operators.OperatorScan` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.functions.Func2` `rx.internal.operators.OperatorScan.accumulator` @AccessFlag FINAL;
  `rx.functions.Func0` `rx.internal.operators.OperatorScan.initialValueFactory` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.Object` `@@rx.internal.operators.OperatorScan.NO_INITIAL_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/operators/OperatorScan;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4a8244.  v0:= new `java.lang.Object`;
  #L4a8248.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a824e.  `@@rx.internal.operators.OperatorScan.NO_INITIAL_VALUE` @type ^`java.lang.Object` := v0 @kind object;
  #L4a8252.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorScan` v1 @kind this, `java.lang.Object` v2 @kind object, `rx.functions.Func2` v3 @kind object) @signature `Lrx/internal/operators/OperatorScan;.<init>:(Ljava/lang/Object;Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4a8264.  v0:= new `rx.internal.operators.OperatorScan$1`;
  #L4a8268.  call `<init>`(v0, v2) @signature `Lrx/internal/operators/OperatorScan$1;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4a826e.  call `<init>`(v1, v0, v3) @signature `Lrx/internal/operators/OperatorScan;.<init>:(Lrx/functions/Func0;Lrx/functions/Func2;)V` @kind direct;
  #L4a8274.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorScan` v0 @kind this, `rx.functions.Func0` v1 @kind object, `rx.functions.Func2` v2 @kind object) @signature `Lrx/internal/operators/OperatorScan;.<init>:(Lrx/functions/Func0;Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a8288.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a828e.  v0.`rx.internal.operators.OperatorScan.initialValueFactory` @type ^`rx.functions.Func0` := v1 @kind object;
  #L4a8292.  v0.`rx.internal.operators.OperatorScan.accumulator` @type ^`rx.functions.Func2` := v2 @kind object;
  #L4a8296.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorScan` v1 @kind this, `rx.functions.Func2` v2 @kind object) @signature `Lrx/internal/operators/OperatorScan;.<init>:(Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4a82a8.  v0:= `@@rx.internal.operators.OperatorScan.NO_INITIAL_VALUE` @type ^`java.lang.Object` @kind object;
  #L4a82ac.  call `<init>`(v1, v0, v2) @signature `Lrx/internal/operators/OperatorScan;.<init>:(Ljava/lang/Object;Lrx/functions/Func2;)V` @kind direct;
  #L4a82b2.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorScan` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorScan;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a81d0.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a81d4.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorScan;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4a81da.  v1:= temp @kind object;
  #L4a81dc.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorScan` v3 @kind this, `rx.Subscriber` v4 @kind object) @signature `Lrx/internal/operators/OperatorScan;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a81f0.  v0:= v3.`rx.internal.operators.OperatorScan.initialValueFactory` @type ^`rx.functions.Func0` @kind object;
  #L4a81f4.  call temp:= `call`(v0) @signature `Lrx/functions/Func0;.call:()Ljava/lang/Object;` @kind interface;
  #L4a81fa.  v0:= temp @kind object;
  #L4a81fc.  v1:= `@@rx.internal.operators.OperatorScan.NO_INITIAL_VALUE` @type ^`java.lang.Object` @kind object;
  #L4a8200.  if v0 != v1 then goto L4a8210;
  #L4a8204.  v0:= new `rx.internal.operators.OperatorScan$2`;
  #L4a8208.  call `<init>`(v0, v3, v4, v4) @signature `Lrx/internal/operators/OperatorScan$2;.<init>:(Lrx/internal/operators/OperatorScan;Lrx/Subscriber;Lrx/Subscriber;)V` @kind direct;
  #L4a820e.  return v0 @kind object;
  #L4a8210.  v1:= new `rx.internal.operators.OperatorScan$InitialProducer`;
  #L4a8214.  call `<init>`(v1, v0, v4) @signature `Lrx/internal/operators/OperatorScan$InitialProducer;.<init>:(Ljava/lang/Object;Lrx/Subscriber;)V` @kind direct;
  #L4a821a.  v2:= new `rx.internal.operators.OperatorScan$3`;
  #L4a821e.  call `<init>`(v2, v3, v0, v1) @signature `Lrx/internal/operators/OperatorScan$3;.<init>:(Lrx/internal/operators/OperatorScan;Ljava/lang/Object;Lrx/internal/operators/OperatorScan$InitialProducer;)V` @kind direct;
  #L4a8224.  call `add`(v4, v2) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4a822a.  call `setProducer`(v4, v1) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4a8230.  return v2 @kind object;
}
