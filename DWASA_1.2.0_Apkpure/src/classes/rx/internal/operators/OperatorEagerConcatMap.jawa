record `rx.internal.operators.OperatorEagerConcatMap` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `int` `rx.internal.operators.OperatorEagerConcatMap.bufferSize` @AccessFlag FINAL;
  `rx.functions.Func1` `rx.internal.operators.OperatorEagerConcatMap.mapper` @AccessFlag FINAL;
  `int` `rx.internal.operators.OperatorEagerConcatMap.maxConcurrent` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorEagerConcatMap` v0 @kind this, `rx.functions.Func1` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lrx/internal/operators/OperatorEagerConcatMap;.<init>:(Lrx/functions/Func1;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a1184.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a118a.  v0.`rx.internal.operators.OperatorEagerConcatMap.mapper` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4a118e.  v0.`rx.internal.operators.OperatorEagerConcatMap.bufferSize` @type ^`int` := v2;
  #L4a1192.  v0.`rx.internal.operators.OperatorEagerConcatMap.maxConcurrent` @type ^`int` := v3;
  #L4a1196.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorEagerConcatMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorEagerConcatMap;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a1134.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a1138.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorEagerConcatMap;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4a113e.  v1:= temp @kind object;
  #L4a1140.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorEagerConcatMap` v4 @kind this, `rx.Subscriber` v5 @kind object) @signature `Lrx/internal/operators/OperatorEagerConcatMap;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a1154.  v0:= new `rx.internal.operators.OperatorEagerConcatMap$EagerOuterSubscriber`;
  #L4a1158.  v1:= v4.`rx.internal.operators.OperatorEagerConcatMap.mapper` @type ^`rx.functions.Func1` @kind object;
  #L4a115c.  v2:= v4.`rx.internal.operators.OperatorEagerConcatMap.bufferSize` @type ^`int`;
  #L4a1160.  v3:= v4.`rx.internal.operators.OperatorEagerConcatMap.maxConcurrent` @type ^`int`;
  #L4a1164.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lrx/internal/operators/OperatorEagerConcatMap$EagerOuterSubscriber;.<init>:(Lrx/functions/Func1;IILrx/Subscriber;)V` @kind direct;
  #L4a116a.  call `init`(v0) @signature `Lrx/internal/operators/OperatorEagerConcatMap$EagerOuterSubscriber;.init:()V` @kind virtual;
  #L4a1170.  return v0 @kind object;
}
