record `rx.internal.operators.OperatorSwitch` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `boolean` `rx.internal.operators.OperatorSwitch.delayError` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorSwitch` v0 @kind this, `boolean` v1 ) @signature `Lrx/internal/operators/OperatorSwitch;.<init>:(Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a9c9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a9ca2.  v0.`rx.internal.operators.OperatorSwitch.delayError` @type ^`boolean` := v1 @kind boolean;
  #L4a9ca6.  return @kind void;
}
procedure `rx.internal.operators.OperatorSwitch` `instance`(`boolean` v0 ) @signature `Lrx/internal/operators/OperatorSwitch;.instance:(Z)Lrx/internal/operators/OperatorSwitch;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4a9c7c.  if v0 == 0 then goto L4a9c86;
  #L4a9c80.  v0:= `@@rx.internal.operators.OperatorSwitch$HolderDelayError.INSTANCE` @type ^`rx.internal.operators.OperatorSwitch` @kind object;
  #L4a9c84.  return v0 @kind object;
  #L4a9c86.  v0:= `@@rx.internal.operators.OperatorSwitch$Holder.INSTANCE` @type ^`rx.internal.operators.OperatorSwitch` @kind object;
  #L4a9c8a.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorSwitch` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorSwitch;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a9c30.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a9c34.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorSwitch;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4a9c3a.  v1:= temp @kind object;
  #L4a9c3c.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorSwitch` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorSwitch;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a9c50.  v0:= new `rx.internal.operators.OperatorSwitch$SwitchSubscriber`;
  #L4a9c54.  v1:= v2.`rx.internal.operators.OperatorSwitch.delayError` @type ^`boolean` @kind boolean;
  #L4a9c58.  call `<init>`(v0, v3, v1) @signature `Lrx/internal/operators/OperatorSwitch$SwitchSubscriber;.<init>:(Lrx/Subscriber;Z)V` @kind direct;
  #L4a9c5e.  call `add`(v3, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4a9c64.  call `init`(v0) @signature `Lrx/internal/operators/OperatorSwitch$SwitchSubscriber;.init:()V` @kind virtual;
  #L4a9c6a.  return v0 @kind object;
}
