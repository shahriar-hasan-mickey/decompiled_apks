record `rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber` @kind class @AccessFlag FINAL extends `rx.SingleSubscriber` @kind class {
  `rx.functions.Action0` `rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber.action` @AccessFlag FINAL;
  `rx.SingleSubscriber` `rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber.actual` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber` v0 @kind this, `rx.SingleSubscriber` v1 @kind object, `rx.functions.Action0` v2 @kind object) @signature `Lrx/internal/operators/SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber;.<init>:(Lrx/SingleSubscriber;Lrx/functions/Action0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af4bc.  call `<init>`(v0) @signature `Lrx/SingleSubscriber;.<init>:()V` @kind direct;
  #L4af4c2.  v0.`rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber.actual` @type ^`rx.SingleSubscriber` := v1 @kind object;
  #L4af4c6.  v0.`rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber.action` @type ^`rx.functions.Action0` := v2 @kind object;
  #L4af4ca.  return @kind void;
}
procedure `void` `doAction`(`rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber` v1 @kind this) @signature `Lrx/internal/operators/SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber;.doAction:()V` @AccessFlag  {
    temp;
    v0;

  #L4af4dc.  v0:= v1.`rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber.action` @type ^`rx.functions.Action0` @kind object;
  #L4af4e0.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L4af4e6.  goto L4af4f6;
  #L4af4e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4af4ea.  call `throwIfFatal`(v0) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4af4f0.  call `onError`(v0) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4af4f6.  return @kind void;
  catch `java.lang.Throwable` @[L4af4dc..L4af4e6] goto L4af4e8;
}
procedure `void` `onError`(`rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4af514.  v0:= v1.`rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber.actual` @type ^`rx.SingleSubscriber` @kind object;
  #L4af518.  call `onError`(v0, v2) @signature `Lrx/SingleSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4af51e.  call `doAction`(v1) @signature `Lrx/internal/operators/SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber;.doAction:()V` @kind virtual;
  #L4af524.  return @kind void;
  #L4af526.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4af528.  call `doAction`(v1) @signature `Lrx/internal/operators/SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber;.doAction:()V` @kind virtual;
  #L4af52e.  throw v2;
  catch `java.lang.Throwable` @[L4af514..L4af51e] goto L4af526;
}
procedure `void` `onSuccess`(`rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4af54c.  v0:= v1.`rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber.actual` @type ^`rx.SingleSubscriber` @kind object;
  #L4af550.  call `onSuccess`(v0, v2) @signature `Lrx/SingleSubscriber;.onSuccess:(Ljava/lang/Object;)V` @kind virtual;
  #L4af556.  call `doAction`(v1) @signature `Lrx/internal/operators/SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber;.doAction:()V` @kind virtual;
  #L4af55c.  return @kind void;
  #L4af55e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4af560.  call `doAction`(v1) @signature `Lrx/internal/operators/SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber;.doAction:()V` @kind virtual;
  #L4af566.  throw v2;
  catch `java.lang.Throwable` @[L4af54c..L4af556] goto L4af55e;
}
