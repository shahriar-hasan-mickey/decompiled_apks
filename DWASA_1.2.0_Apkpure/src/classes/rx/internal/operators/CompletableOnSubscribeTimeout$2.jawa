record `rx.internal.operators.CompletableOnSubscribeTimeout$2` @kind class @AccessFlag  extends `rx.CompletableSubscriber` @kind interface {
  `rx.internal.operators.CompletableOnSubscribeTimeout` `rx.internal.operators.CompletableOnSubscribeTimeout$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicBoolean` `rx.internal.operators.CompletableOnSubscribeTimeout$2.val$once` @AccessFlag FINAL_SYNTHETIC;
  `rx.CompletableSubscriber` `rx.internal.operators.CompletableOnSubscribeTimeout$2.val$s` @AccessFlag FINAL_SYNTHETIC;
  `rx.subscriptions.CompositeSubscription` `rx.internal.operators.CompletableOnSubscribeTimeout$2.val$set` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.CompletableOnSubscribeTimeout$2` v0 @kind this, `rx.internal.operators.CompletableOnSubscribeTimeout` v1 @kind object, `rx.subscriptions.CompositeSubscription` v2 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v3 @kind object, `rx.CompletableSubscriber` v4 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout$2;.<init>:(Lrx/internal/operators/CompletableOnSubscribeTimeout;Lrx/subscriptions/CompositeSubscription;Ljava/util/concurrent/atomic/AtomicBoolean;Lrx/CompletableSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L495c2c.  v0.`rx.internal.operators.CompletableOnSubscribeTimeout$2.this$0` @type ^`rx.internal.operators.CompletableOnSubscribeTimeout` := v1 @kind object;
  #L495c30.  v0.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$set` @type ^`rx.subscriptions.CompositeSubscription` := v2 @kind object;
  #L495c34.  v0.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$once` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v3 @kind object;
  #L495c38.  v0.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$s` @type ^`rx.CompletableSubscriber` := v4 @kind object;
  #L495c3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L495c42.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.CompletableOnSubscribeTimeout$2` v3 @kind this) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout$2;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L495c54.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$once` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L495c58.  v1:= 0I;
  #L495c5a.  v2:= 1I;
  #L495c5c.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L495c62.  v0:= temp;
  #L495c64.  if v0 == 0 then goto L495c7c;
  #L495c68.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$set` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L495c6c.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L495c72.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L495c76.  call `onCompleted`(v0) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L495c7c.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.CompletableOnSubscribeTimeout$2` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout$2;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L495c90.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$once` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L495c94.  v1:= 0I;
  #L495c96.  v2:= 1I;
  #L495c98.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L495c9e.  v0:= temp;
  #L495ca0.  if v0 == 0 then goto L495cba;
  #L495ca4.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$set` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L495ca8.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L495cae.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L495cb2.  call `onError`(v0, v4) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L495cb8.  goto L495cc0;
  #L495cba.  call `onError`(v4) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L495cc0.  return @kind void;
}
procedure `void` `onSubscribe`(`rx.internal.operators.CompletableOnSubscribeTimeout$2` v1 @kind this, `rx.Subscription` v2 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeTimeout$2;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L495cd4.  v0:= v1.`rx.internal.operators.CompletableOnSubscribeTimeout$2.val$set` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L495cd8.  call `add`(v0, v2) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L495cde.  return @kind void;
}
