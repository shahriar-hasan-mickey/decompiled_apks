record `rx.internal.operators.OnSubscribeSingle` @kind class @AccessFlag PUBLIC extends `rx.Single$OnSubscribe` @kind interface {
  `rx.Observable` `rx.internal.operators.OnSubscribeSingle.observable` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeSingle` v0 @kind this, `rx.Observable` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeSingle;.<init>:(Lrx/Observable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49cf78.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49cf7e.  v0.`rx.internal.operators.OnSubscribeSingle.observable` @type ^`rx.Observable` := v1 @kind object;
  #L49cf82.  return @kind void;
}
procedure `rx.internal.operators.OnSubscribeSingle` `create`(`rx.Observable` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeSingle;.create:(Lrx/Observable;)Lrx/internal/operators/OnSubscribeSingle;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49cf5c.  v0:= new `rx.internal.operators.OnSubscribeSingle`;
  #L49cf60.  call `<init>`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeSingle;.<init>:(Lrx/Observable;)V` @kind direct;
  #L49cf66.  return v0 @kind object;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeSingle` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeSingle;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49cf94.  v1:= (`rx.SingleSubscriber`) v1 @kind object;
  #L49cf98.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeSingle;.call:(Lrx/SingleSubscriber;)V` @kind virtual;
  #L49cf9e.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeSingle` v1 @kind this, `rx.SingleSubscriber` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeSingle;.call:(Lrx/SingleSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49cfb0.  v0:= new `rx.internal.operators.OnSubscribeSingle$1`;
  #L49cfb4.  call `<init>`(v0, v1, v2) @signature `Lrx/internal/operators/OnSubscribeSingle$1;.<init>:(Lrx/internal/operators/OnSubscribeSingle;Lrx/SingleSubscriber;)V` @kind direct;
  #L49cfba.  call `add`(v2, v0) @signature `Lrx/SingleSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49cfc0.  v2:= v1.`rx.internal.operators.OnSubscribeSingle.observable` @type ^`rx.Observable` @kind object;
  #L49cfc4.  call temp:= `unsafeSubscribe`(v2, v0) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L49cfca.  return @kind void;
}
