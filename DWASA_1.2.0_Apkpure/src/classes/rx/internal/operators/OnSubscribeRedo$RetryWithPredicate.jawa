record `rx.internal.operators.OnSubscribeRedo$RetryWithPredicate` @kind class @AccessFlag PUBLIC_FINAL extends `rx.functions.Func1` @kind interface {
  `rx.functions.Func2` `rx.internal.operators.OnSubscribeRedo$RetryWithPredicate.predicate` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate` v0 @kind this, `rx.functions.Func2` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate;.<init>:(Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49c38c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49c392.  v0.`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate.predicate` @type ^`rx.functions.Func2` := v1 @kind object;
  #L49c396.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49c334.  v1:= (`rx.Observable`) v1 @kind object;
  #L49c338.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate;.call:(Lrx/Observable;)Lrx/Observable;` @kind virtual;
  #L49c33e.  v1:= temp @kind object;
  #L49c340.  return v1 @kind object;
}
procedure `rx.Observable` `call`(`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate` v2 @kind this, `rx.Observable` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate;.call:(Lrx/Observable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49c354.  v0:= 0I;
  #L49c356.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c35c.  v0:= temp @kind object;
  #L49c35e.  call temp:= `createOnNext`(v0) @signature `Lrx/Notification;.createOnNext:(Ljava/lang/Object;)Lrx/Notification;` @kind static;
  #L49c364.  v0:= temp @kind object;
  #L49c366.  v1:= new `rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1`;
  #L49c36a.  call `<init>`(v1, v2) @signature `Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate$1;.<init>:(Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate;)V` @kind direct;
  #L49c370.  call temp:= `scan`(v3, v0, v1) @signature `Lrx/Observable;.scan:(Ljava/lang/Object;Lrx/functions/Func2;)Lrx/Observable;` @kind virtual;
  #L49c376.  v3:= temp @kind object;
  #L49c378.  return v3 @kind object;
}
