record `rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OnSubscribePublishMulticast` `rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber.state` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber` v0 @kind this, `rx.internal.operators.OnSubscribePublishMulticast` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribePublishMulticast$ParentSubscriber;.<init>:(Lrx/internal/operators/OnSubscribePublishMulticast;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49b2d0.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L49b2d6.  v0.`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber.state` @type ^`rx.internal.operators.OnSubscribePublishMulticast` := v1 @kind object;
  #L49b2da.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber` v1 @kind this) @signature `Lrx/internal/operators/OnSubscribePublishMulticast$ParentSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49b2ec.  v0:= v1.`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber.state` @type ^`rx.internal.operators.OnSubscribePublishMulticast` @kind object;
  #L49b2f0.  call `onCompleted`(v0) @signature `Lrx/internal/operators/OnSubscribePublishMulticast;.onCompleted:()V` @kind virtual;
  #L49b2f6.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribePublishMulticast$ParentSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49b308.  v0:= v1.`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber.state` @type ^`rx.internal.operators.OnSubscribePublishMulticast` @kind object;
  #L49b30c.  call `onError`(v0, v2) @signature `Lrx/internal/operators/OnSubscribePublishMulticast;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49b312.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribePublishMulticast$ParentSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49b324.  v0:= v1.`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber.state` @type ^`rx.internal.operators.OnSubscribePublishMulticast` @kind object;
  #L49b328.  call `onNext`(v0, v2) @signature `Lrx/internal/operators/OnSubscribePublishMulticast;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L49b32e.  return @kind void;
}
procedure `void` `setProducer`(`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber` v1 @kind this, `rx.Producer` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribePublishMulticast$ParentSubscriber;.setProducer:(Lrx/Producer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49b340.  v0:= v1.`rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber.state` @type ^`rx.internal.operators.OnSubscribePublishMulticast` @kind object;
  #L49b344.  call `setProducer`(v0, v2) @signature `Lrx/internal/operators/OnSubscribePublishMulticast;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L49b34a.  return @kind void;
}
