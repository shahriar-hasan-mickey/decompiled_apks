record `rx.internal.operators.OperatorSubscribeOn$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OperatorSubscribeOn` `rx.internal.operators.OperatorSubscribeOn$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler$Worker` `rx.internal.operators.OperatorSubscribeOn$1.val$inner` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorSubscribeOn$1.val$subscriber` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorSubscribeOn$1` v0 @kind this, `rx.internal.operators.OperatorSubscribeOn` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Scheduler$Worker` v3 @kind object) @signature `Lrx/internal/operators/OperatorSubscribeOn$1;.<init>:(Lrx/internal/operators/OperatorSubscribeOn;Lrx/Subscriber;Lrx/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a90b0.  v0.`rx.internal.operators.OperatorSubscribeOn$1.this$0` @type ^`rx.internal.operators.OperatorSubscribeOn` := v1 @kind object;
  #L4a90b4.  v0.`rx.internal.operators.OperatorSubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` := v2 @kind object;
  #L4a90b8.  v0.`rx.internal.operators.OperatorSubscribeOn$1.val$inner` @type ^`rx.Scheduler$Worker` := v3 @kind object;
  #L4a90bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a90c2.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorSubscribeOn$1` v3 @kind this) @signature `Lrx/internal/operators/OperatorSubscribeOn$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a90d4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4a90da.  v0:= temp @kind object;
  #L4a90dc.  v1:= new `rx.internal.operators.OperatorSubscribeOn$1$1`;
  #L4a90e0.  v2:= v3.`rx.internal.operators.OperatorSubscribeOn$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4a90e4.  call `<init>`(v1, v3, v2, v0) @signature `Lrx/internal/operators/OperatorSubscribeOn$1$1;.<init>:(Lrx/internal/operators/OperatorSubscribeOn$1;Lrx/Subscriber;Ljava/lang/Thread;)V` @kind direct;
  #L4a90ea.  v0:= v3.`rx.internal.operators.OperatorSubscribeOn$1.this$0` @type ^`rx.internal.operators.OperatorSubscribeOn` @kind object;
  #L4a90ee.  v0:= v0.`rx.internal.operators.OperatorSubscribeOn.source` @type ^`rx.Observable` @kind object;
  #L4a90f2.  call temp:= `unsafeSubscribe`(v0, v1) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4a90f8.  return @kind void;
}
