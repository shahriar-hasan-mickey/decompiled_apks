record `rx.internal.operators.OnSubscribeJoin` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.Observable` `rx.internal.operators.OnSubscribeJoin.left` @AccessFlag FINAL;
  `rx.functions.Func1` `rx.internal.operators.OnSubscribeJoin.leftDurationSelector` @AccessFlag FINAL;
  `rx.functions.Func2` `rx.internal.operators.OnSubscribeJoin.resultSelector` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.OnSubscribeJoin.right` @AccessFlag FINAL;
  `rx.functions.Func1` `rx.internal.operators.OnSubscribeJoin.rightDurationSelector` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeJoin` v0 @kind this, `rx.Observable` v1 @kind object, `rx.Observable` v2 @kind object, `rx.functions.Func1` v3 @kind object, `rx.functions.Func1` v4 @kind object, `rx.functions.Func2` v5 @kind object) @signature `Lrx/internal/operators/OnSubscribeJoin;.<init>:(Lrx/Observable;Lrx/Observable;Lrx/functions/Func1;Lrx/functions/Func1;Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49ac3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49ac42.  v0.`rx.internal.operators.OnSubscribeJoin.left` @type ^`rx.Observable` := v1 @kind object;
  #L49ac46.  v0.`rx.internal.operators.OnSubscribeJoin.right` @type ^`rx.Observable` := v2 @kind object;
  #L49ac4a.  v0.`rx.internal.operators.OnSubscribeJoin.leftDurationSelector` @type ^`rx.functions.Func1` := v3 @kind object;
  #L49ac4e.  v0.`rx.internal.operators.OnSubscribeJoin.rightDurationSelector` @type ^`rx.functions.Func1` := v4 @kind object;
  #L49ac52.  v0.`rx.internal.operators.OnSubscribeJoin.resultSelector` @type ^`rx.functions.Func2` := v5 @kind object;
  #L49ac56.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeJoin` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeJoin;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49ac68.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L49ac6c.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeJoin;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L49ac72.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeJoin` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeJoin;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49ac84.  v0:= new `rx.internal.operators.OnSubscribeJoin$ResultSink`;
  #L49ac88.  v1:= new `rx.observers.SerializedSubscriber`;
  #L49ac8c.  call `<init>`(v1, v3) @signature `Lrx/observers/SerializedSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49ac92.  call `<init>`(v0, v2, v1) @signature `Lrx/internal/operators/OnSubscribeJoin$ResultSink;.<init>:(Lrx/internal/operators/OnSubscribeJoin;Lrx/Subscriber;)V` @kind direct;
  #L49ac98.  call `run`(v0) @signature `Lrx/internal/operators/OnSubscribeJoin$ResultSink;.run:()V` @kind virtual;
  #L49ac9e.  return @kind void;
}
