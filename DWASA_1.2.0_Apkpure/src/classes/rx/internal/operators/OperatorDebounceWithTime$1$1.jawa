record `rx.internal.operators.OperatorDebounceWithTime$1$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OperatorDebounceWithTime$1` `rx.internal.operators.OperatorDebounceWithTime$1$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `int` `rx.internal.operators.OperatorDebounceWithTime$1$1.val$index` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDebounceWithTime$1$1` v0 @kind this, `rx.internal.operators.OperatorDebounceWithTime$1` v1 @kind object, `int` v2 ) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1$1;.<init>:(Lrx/internal/operators/OperatorDebounceWithTime$1;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49fa94.  v0.`rx.internal.operators.OperatorDebounceWithTime$1$1.this$1` @type ^`rx.internal.operators.OperatorDebounceWithTime$1` := v1 @kind object;
  #L49fa98.  v0.`rx.internal.operators.OperatorDebounceWithTime$1$1.val$index` @type ^`int` := v2;
  #L49fa9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49faa2.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorDebounceWithTime$1$1` v4 @kind this) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49fab4.  v0:= v4.`rx.internal.operators.OperatorDebounceWithTime$1$1.this$1` @type ^`rx.internal.operators.OperatorDebounceWithTime$1` @kind object;
  #L49fab8.  v0:= v0.`rx.internal.operators.OperatorDebounceWithTime$1.state` @type ^`rx.internal.operators.OperatorDebounceWithTime$DebounceState` @kind object;
  #L49fabc.  v1:= v4.`rx.internal.operators.OperatorDebounceWithTime$1$1.val$index` @type ^`int`;
  #L49fac0.  v2:= v4.`rx.internal.operators.OperatorDebounceWithTime$1$1.this$1` @type ^`rx.internal.operators.OperatorDebounceWithTime$1` @kind object;
  #L49fac4.  v2:= v2.`rx.internal.operators.OperatorDebounceWithTime$1.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L49fac8.  v3:= v4.`rx.internal.operators.OperatorDebounceWithTime$1$1.this$1` @type ^`rx.internal.operators.OperatorDebounceWithTime$1` @kind object;
  #L49facc.  v3:= v3.`rx.internal.operators.OperatorDebounceWithTime$1.self` @type ^`rx.Subscriber` @kind object;
  #L49fad0.  call `emit`(v0, v1, v2, v3) @signature `Lrx/internal/operators/OperatorDebounceWithTime$DebounceState;.emit:(ILrx/Subscriber;Lrx/Subscriber;)V` @kind virtual;
  #L49fad6.  return @kind void;
}
