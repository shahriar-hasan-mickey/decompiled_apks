record `rx.internal.operators.SingleDoAfterTerminate` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Single$OnSubscribe` @kind interface {
  `rx.functions.Action0` `rx.internal.operators.SingleDoAfterTerminate.action` @AccessFlag FINAL;
  `rx.Single` `rx.internal.operators.SingleDoAfterTerminate.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.SingleDoAfterTerminate` v0 @kind this, `rx.Single` v1 @kind object, `rx.functions.Action0` v2 @kind object) @signature `Lrx/internal/operators/SingleDoAfterTerminate;.<init>:(Lrx/Single;Lrx/functions/Action0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af584.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af58a.  v0.`rx.internal.operators.SingleDoAfterTerminate.source` @type ^`rx.Single` := v1 @kind object;
  #L4af58e.  v0.`rx.internal.operators.SingleDoAfterTerminate.action` @type ^`rx.functions.Action0` := v2 @kind object;
  #L4af592.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.SingleDoAfterTerminate` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/SingleDoAfterTerminate;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af5a4.  v1:= (`rx.SingleSubscriber`) v1 @kind object;
  #L4af5a8.  call `call`(v0, v1) @signature `Lrx/internal/operators/SingleDoAfterTerminate;.call:(Lrx/SingleSubscriber;)V` @kind virtual;
  #L4af5ae.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.SingleDoAfterTerminate` v2 @kind this, `rx.SingleSubscriber` v3 @kind object) @signature `Lrx/internal/operators/SingleDoAfterTerminate;.call:(Lrx/SingleSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4af5c0.  v0:= new `rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber`;
  #L4af5c4.  v1:= v2.`rx.internal.operators.SingleDoAfterTerminate.action` @type ^`rx.functions.Action0` @kind object;
  #L4af5c8.  call `<init>`(v0, v3, v1) @signature `Lrx/internal/operators/SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber;.<init>:(Lrx/SingleSubscriber;Lrx/functions/Action0;)V` @kind direct;
  #L4af5ce.  call `add`(v3, v0) @signature `Lrx/SingleSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4af5d4.  v3:= v2.`rx.internal.operators.SingleDoAfterTerminate.source` @type ^`rx.Single` @kind object;
  #L4af5d8.  call temp:= `subscribe`(v3, v0) @signature `Lrx/Single;.subscribe:(Lrx/SingleSubscriber;)Lrx/Subscription;` @kind virtual;
  #L4af5de.  return @kind void;
}
