record `rx.internal.operators.OperatorDoAfterTerminate$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorDoAfterTerminate` `rx.internal.operators.OperatorDoAfterTerminate$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorDoAfterTerminate$1.val$child` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDoAfterTerminate$1` v0 @kind this, `rx.internal.operators.OperatorDoAfterTerminate` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorDoAfterTerminate$1;.<init>:(Lrx/internal/operators/OperatorDoAfterTerminate;Lrx/Subscriber;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a0814.  v0.`rx.internal.operators.OperatorDoAfterTerminate$1.this$0` @type ^`rx.internal.operators.OperatorDoAfterTerminate` := v1 @kind object;
  #L4a0818.  v0.`rx.internal.operators.OperatorDoAfterTerminate$1.val$child` @type ^`rx.Subscriber` := v3 @kind object;
  #L4a081c.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4a0822.  return @kind void;
}
procedure `void` `callAction`(`rx.internal.operators.OperatorDoAfterTerminate$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorDoAfterTerminate$1;.callAction:()V` @AccessFlag  {
    temp;
    v0;

  #L4a0834.  v0:= v1.`rx.internal.operators.OperatorDoAfterTerminate$1.this$0` @type ^`rx.internal.operators.OperatorDoAfterTerminate` @kind object;
  #L4a0838.  v0:= v0.`rx.internal.operators.OperatorDoAfterTerminate.action` @type ^`rx.functions.Action0` @kind object;
  #L4a083c.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L4a0842.  goto L4a0852;
  #L4a0844.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a0846.  call `throwIfFatal`(v0) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a084c.  call `onError`(v0) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a0852.  return @kind void;
  catch `java.lang.Throwable` @[L4a0834..L4a0842] goto L4a0844;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorDoAfterTerminate$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorDoAfterTerminate$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a0870.  v0:= v1.`rx.internal.operators.OperatorDoAfterTerminate$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a0874.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4a087a.  call `callAction`(v1) @signature `Lrx/internal/operators/OperatorDoAfterTerminate$1;.callAction:()V` @kind virtual;
  #L4a0880.  return @kind void;
  #L4a0882.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a0884.  call `callAction`(v1) @signature `Lrx/internal/operators/OperatorDoAfterTerminate$1;.callAction:()V` @kind virtual;
  #L4a088a.  throw v0;
  catch `java.lang.Throwable` @[L4a0870..L4a087a] goto L4a0882;
}
procedure `void` `onError`(`rx.internal.operators.OperatorDoAfterTerminate$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorDoAfterTerminate$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a08a8.  v0:= v1.`rx.internal.operators.OperatorDoAfterTerminate$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a08ac.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a08b2.  call `callAction`(v1) @signature `Lrx/internal/operators/OperatorDoAfterTerminate$1;.callAction:()V` @kind virtual;
  #L4a08b8.  return @kind void;
  #L4a08ba.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a08bc.  call `callAction`(v1) @signature `Lrx/internal/operators/OperatorDoAfterTerminate$1;.callAction:()V` @kind virtual;
  #L4a08c2.  throw v2;
  catch `java.lang.Throwable` @[L4a08a8..L4a08b2] goto L4a08ba;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorDoAfterTerminate$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OperatorDoAfterTerminate$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a08e0.  v0:= v1.`rx.internal.operators.OperatorDoAfterTerminate$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a08e4.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4a08ea.  return @kind void;
}
