record `rx.internal.operators.OnSubscribeRefCount$3` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OnSubscribeRefCount` `rx.internal.operators.OnSubscribeRefCount$3.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.subscriptions.CompositeSubscription` `rx.internal.operators.OnSubscribeRefCount$3.val$current` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeRefCount$3` v0 @kind this, `rx.internal.operators.OnSubscribeRefCount` v1 @kind object, `rx.subscriptions.CompositeSubscription` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeRefCount$3;.<init>:(Lrx/internal/operators/OnSubscribeRefCount;Lrx/subscriptions/CompositeSubscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49cc28.  v0.`rx.internal.operators.OnSubscribeRefCount$3.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` := v1 @kind object;
  #L49cc2c.  v0.`rx.internal.operators.OnSubscribeRefCount$3.val$current` @type ^`rx.subscriptions.CompositeSubscription` := v2 @kind object;
  #L49cc30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49cc36.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeRefCount$3` v2 @kind this) @signature `Lrx/internal/operators/OnSubscribeRefCount$3;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49cc48.  v0:= v2.`rx.internal.operators.OnSubscribeRefCount$3.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cc4c.  v0:= v0.`rx.internal.operators.OnSubscribeRefCount.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L49cc50.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L49cc56.  v0:= v2.`rx.internal.operators.OnSubscribeRefCount$3.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cc5a.  v0:= v0.`rx.internal.operators.OnSubscribeRefCount.baseSubscription` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L49cc5e.  v1:= v2.`rx.internal.operators.OnSubscribeRefCount$3.val$current` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L49cc62.  if v0 != v1 then goto L49cc9a;
  #L49cc66.  v0:= v2.`rx.internal.operators.OnSubscribeRefCount$3.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cc6a.  v0:= v0.`rx.internal.operators.OnSubscribeRefCount.subscriptionCount` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L49cc6e.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L49cc74.  v0:= temp;
  #L49cc76.  if v0 != 0 then goto L49cc9a;
  #L49cc7a.  v0:= v2.`rx.internal.operators.OnSubscribeRefCount$3.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cc7e.  v0:= v0.`rx.internal.operators.OnSubscribeRefCount.baseSubscription` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L49cc82.  call `unsubscribe`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L49cc88.  v0:= v2.`rx.internal.operators.OnSubscribeRefCount$3.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cc8c.  v1:= new `rx.subscriptions.CompositeSubscription`;
  #L49cc90.  call `<init>`(v1) @signature `Lrx/subscriptions/CompositeSubscription;.<init>:()V` @kind direct;
  #L49cc96.  v0.`rx.internal.operators.OnSubscribeRefCount.baseSubscription` @type ^`rx.subscriptions.CompositeSubscription` := v1 @kind object;
  #L49cc9a.  v0:= v2.`rx.internal.operators.OnSubscribeRefCount$3.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cc9e.  v0:= v0.`rx.internal.operators.OnSubscribeRefCount.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L49cca2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L49cca8.  return @kind void;
  #L49ccaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49ccac.  v1:= v2.`rx.internal.operators.OnSubscribeRefCount$3.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49ccb0.  v1:= v1.`rx.internal.operators.OnSubscribeRefCount.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L49ccb4.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L49ccba.  throw v0;
  catch `java.lang.Throwable` @[L49cc56..L49cc9a] goto L49ccaa;
}
