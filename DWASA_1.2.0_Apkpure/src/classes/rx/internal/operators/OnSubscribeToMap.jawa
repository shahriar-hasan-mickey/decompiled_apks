record `rx.internal.operators.OnSubscribeToMap` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$OnSubscribe` @kind interface, `rx.functions.Func0` @kind interface {
  `rx.functions.Func1` `rx.internal.operators.OnSubscribeToMap.keySelector` @AccessFlag FINAL;
  `rx.functions.Func0` `rx.internal.operators.OnSubscribeToMap.mapFactory` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.OnSubscribeToMap.source` @AccessFlag FINAL;
  `rx.functions.Func1` `rx.internal.operators.OnSubscribeToMap.valueSelector` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeToMap` v1 @kind this, `rx.Observable` v2 @kind object, `rx.functions.Func1` v3 @kind object, `rx.functions.Func1` v4 @kind object) @signature `Lrx/internal/operators/OnSubscribeToMap;.<init>:(Lrx/Observable;Lrx/functions/Func1;Lrx/functions/Func1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L49d558.  v0:= 0I;
  #L49d55a.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lrx/internal/operators/OnSubscribeToMap;.<init>:(Lrx/Observable;Lrx/functions/Func1;Lrx/functions/Func1;Lrx/functions/Func0;)V` @kind direct;
  #L49d560.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeToMap` v0 @kind this, `rx.Observable` v1 @kind object, `rx.functions.Func1` v2 @kind object, `rx.functions.Func1` v3 @kind object, `rx.functions.Func0` v4 @kind object) @signature `Lrx/internal/operators/OnSubscribeToMap;.<init>:(Lrx/Observable;Lrx/functions/Func1;Lrx/functions/Func1;Lrx/functions/Func0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49d574.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49d57a.  v0.`rx.internal.operators.OnSubscribeToMap.source` @type ^`rx.Observable` := v1 @kind object;
  #L49d57e.  v0.`rx.internal.operators.OnSubscribeToMap.keySelector` @type ^`rx.functions.Func1` := v2 @kind object;
  #L49d582.  v0.`rx.internal.operators.OnSubscribeToMap.valueSelector` @type ^`rx.functions.Func1` := v3 @kind object;
  #L49d586.  if v4 != 0 then goto L49d590;
  #L49d58a.  v0.`rx.internal.operators.OnSubscribeToMap.mapFactory` @type ^`rx.functions.Func0` := v0 @kind object;
  #L49d58e.  goto L49d594;
  #L49d590.  v0.`rx.internal.operators.OnSubscribeToMap.mapFactory` @type ^`rx.functions.Func0` := v4 @kind object;
  #L49d594.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OnSubscribeToMap` v1 @kind this) @signature `Lrx/internal/operators/OnSubscribeToMap;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L49d520.  call temp:= `call`(v1) @signature `Lrx/internal/operators/OnSubscribeToMap;.call:()Ljava/util/Map;` @kind virtual;
  #L49d526.  v0:= temp @kind object;
  #L49d528.  return v0 @kind object;
}
procedure `java.util.Map` `call`(`rx.internal.operators.OnSubscribeToMap` v1 @kind this) @signature `Lrx/internal/operators/OnSubscribeToMap;.call:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49d53c.  v0:= new `java.util.HashMap`;
  #L49d540.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L49d546.  return v0 @kind object;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeToMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeToMap;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49d5a8.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L49d5ac.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeToMap;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L49d5b2.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeToMap` v4 @kind this, `rx.Subscriber` v5 @kind object) @signature `Lrx/internal/operators/OnSubscribeToMap;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49d5c4.  v0:= v4.`rx.internal.operators.OnSubscribeToMap.mapFactory` @type ^`rx.functions.Func0` @kind object;
  #L49d5c8.  call temp:= `call`(v0) @signature `Lrx/functions/Func0;.call:()Ljava/lang/Object;` @kind interface;
  #L49d5ce.  v0:= temp @kind object;
  #L49d5d0.  v0:= (`java.util.Map`) v0 @kind object;
  #L49d5d4.  v1:= new `rx.internal.operators.OnSubscribeToMap$ToMapSubscriber`;
  #L49d5d8.  v2:= v4.`rx.internal.operators.OnSubscribeToMap.keySelector` @type ^`rx.functions.Func1` @kind object;
  #L49d5dc.  v3:= v4.`rx.internal.operators.OnSubscribeToMap.valueSelector` @type ^`rx.functions.Func1` @kind object;
  #L49d5e0.  call `<init>`(v1, v5, v0, v2, v3) @signature `Lrx/internal/operators/OnSubscribeToMap$ToMapSubscriber;.<init>:(Lrx/Subscriber;Ljava/util/Map;Lrx/functions/Func1;Lrx/functions/Func1;)V` @kind direct;
  #L49d5e6.  v5:= v4.`rx.internal.operators.OnSubscribeToMap.source` @type ^`rx.Observable` @kind object;
  #L49d5ea.  call `subscribeTo`(v1, v5) @signature `Lrx/internal/operators/OnSubscribeToMap$ToMapSubscriber;.subscribeTo:(Lrx/Observable;)V` @kind virtual;
  #L49d5f0.  return @kind void;
  #L49d5f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49d5f4.  call `throwOrReport`(v0, v5) @signature `Lrx/exceptions/Exceptions;.throwOrReport:(Ljava/lang/Throwable;Lrx/Observer;)V` @kind static;
  #L49d5fa.  return @kind void;
  catch `java.lang.Throwable` @[L49d5c4..L49d5d4] goto L49d5f2;
}
