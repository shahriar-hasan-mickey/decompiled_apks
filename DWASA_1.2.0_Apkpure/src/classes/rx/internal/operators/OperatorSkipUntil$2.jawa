record `rx.internal.operators.OperatorSkipUntil$2` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorSkipUntil` `rx.internal.operators.OperatorSkipUntil$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicBoolean` `rx.internal.operators.OperatorSkipUntil$2.val$gate` @AccessFlag FINAL_SYNTHETIC;
  `rx.observers.SerializedSubscriber` `rx.internal.operators.OperatorSkipUntil$2.val$s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorSkipUntil$2` v0 @kind this, `rx.internal.operators.OperatorSkipUntil` v1 @kind object, `rx.Subscriber` v2 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v3 @kind object, `rx.observers.SerializedSubscriber` v4 @kind object) @signature `Lrx/internal/operators/OperatorSkipUntil$2;.<init>:(Lrx/internal/operators/OperatorSkipUntil;Lrx/Subscriber;Ljava/util/concurrent/atomic/AtomicBoolean;Lrx/observers/SerializedSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a8b7c.  v0.`rx.internal.operators.OperatorSkipUntil$2.this$0` @type ^`rx.internal.operators.OperatorSkipUntil` := v1 @kind object;
  #L4a8b80.  v0.`rx.internal.operators.OperatorSkipUntil$2.val$gate` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v3 @kind object;
  #L4a8b84.  v0.`rx.internal.operators.OperatorSkipUntil$2.val$s` @type ^`rx.observers.SerializedSubscriber` := v4 @kind object;
  #L4a8b88.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4a8b8e.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorSkipUntil$2` v1 @kind this) @signature `Lrx/internal/operators/OperatorSkipUntil$2;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a8ba0.  v0:= v1.`rx.internal.operators.OperatorSkipUntil$2.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L4a8ba4.  call `onCompleted`(v0) @signature `Lrx/observers/SerializedSubscriber;.onCompleted:()V` @kind virtual;
  #L4a8baa.  call `unsubscribe`(v1) @signature `Lrx/internal/operators/OperatorSkipUntil$2;.unsubscribe:()V` @kind virtual;
  #L4a8bb0.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorSkipUntil$2` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorSkipUntil$2;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a8bc4.  v0:= v1.`rx.internal.operators.OperatorSkipUntil$2.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L4a8bc8.  call `onError`(v0, v2) @signature `Lrx/observers/SerializedSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a8bce.  call `unsubscribe`(v1) @signature `Lrx/internal/operators/OperatorSkipUntil$2;.unsubscribe:()V` @kind virtual;
  #L4a8bd4.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorSkipUntil$2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OperatorSkipUntil$2;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a8be8.  v0:= v2.`rx.internal.operators.OperatorSkipUntil$2.val$gate` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4a8bec.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4a8bf2.  v0:= temp;
  #L4a8bf4.  if v0 == 0 then goto L4a8c04;
  #L4a8bf8.  v0:= v2.`rx.internal.operators.OperatorSkipUntil$2.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L4a8bfc.  call `onNext`(v0, v3) @signature `Lrx/observers/SerializedSubscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4a8c02.  goto L4a8c0e;
  #L4a8c04.  v0:= 1L;
  #L4a8c08.  call `request`(v2, v0) @signature `Lrx/internal/operators/OperatorSkipUntil$2;.request:(J)V` @kind virtual;
  #L4a8c0e.  return @kind void;
}
