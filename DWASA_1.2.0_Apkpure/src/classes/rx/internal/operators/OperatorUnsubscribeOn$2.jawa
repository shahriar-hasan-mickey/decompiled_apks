record `rx.internal.operators.OperatorUnsubscribeOn$2` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OperatorUnsubscribeOn` `rx.internal.operators.OperatorUnsubscribeOn$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorUnsubscribeOn$2.val$parent` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorUnsubscribeOn$2` v0 @kind this, `rx.internal.operators.OperatorUnsubscribeOn` v1 @kind object, `rx.Subscriber` v2 @kind object) @signature `Lrx/internal/operators/OperatorUnsubscribeOn$2;.<init>:(Lrx/internal/operators/OperatorUnsubscribeOn;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aba78.  v0.`rx.internal.operators.OperatorUnsubscribeOn$2.this$0` @type ^`rx.internal.operators.OperatorUnsubscribeOn` := v1 @kind object;
  #L4aba7c.  v0.`rx.internal.operators.OperatorUnsubscribeOn$2.val$parent` @type ^`rx.Subscriber` := v2 @kind object;
  #L4aba80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aba86.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorUnsubscribeOn$2` v2 @kind this) @signature `Lrx/internal/operators/OperatorUnsubscribeOn$2;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aba98.  v0:= v2.`rx.internal.operators.OperatorUnsubscribeOn$2.this$0` @type ^`rx.internal.operators.OperatorUnsubscribeOn` @kind object;
  #L4aba9c.  v0:= v0.`rx.internal.operators.OperatorUnsubscribeOn.scheduler` @type ^`rx.Scheduler` @kind object;
  #L4abaa0.  call temp:= `createWorker`(v0) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L4abaa6.  v0:= temp @kind object;
  #L4abaa8.  v1:= new `rx.internal.operators.OperatorUnsubscribeOn$2$1`;
  #L4abaac.  call `<init>`(v1, v2, v0) @signature `Lrx/internal/operators/OperatorUnsubscribeOn$2$1;.<init>:(Lrx/internal/operators/OperatorUnsubscribeOn$2;Lrx/Scheduler$Worker;)V` @kind direct;
  #L4abab2.  call temp:= `schedule`(v0, v1) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;)Lrx/Subscription;` @kind virtual;
  #L4abab8.  return @kind void;
}
