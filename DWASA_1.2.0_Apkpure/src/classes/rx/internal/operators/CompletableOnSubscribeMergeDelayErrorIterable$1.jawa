record `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1` @kind class @AccessFlag  extends `rx.CompletableSubscriber` @kind interface {
  `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable` `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Queue` `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$queue` @AccessFlag FINAL_SYNTHETIC;
  `rx.CompletableSubscriber` `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$s` @AccessFlag FINAL_SYNTHETIC;
  `rx.subscriptions.CompositeSubscription` `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$set` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicInteger` `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$wip` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1` v0 @kind this, `rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable` v1 @kind object, `rx.subscriptions.CompositeSubscription` v2 @kind object, `java.util.Queue` v3 @kind object, `java.util.concurrent.atomic.AtomicInteger` v4 @kind object, `rx.CompletableSubscriber` v5 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable$1;.<init>:(Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable;Lrx/subscriptions/CompositeSubscription;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicInteger;Lrx/CompletableSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49549c.  v0.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.this$0` @type ^`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable` := v1 @kind object;
  #L4954a0.  v0.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$set` @type ^`rx.subscriptions.CompositeSubscription` := v2 @kind object;
  #L4954a4.  v0.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$queue` @type ^`java.util.Queue` := v3 @kind object;
  #L4954a8.  v0.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$wip` @type ^`java.util.concurrent.atomic.AtomicInteger` := v4 @kind object;
  #L4954ac.  v0.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$s` @type ^`rx.CompletableSubscriber` := v5 @kind object;
  #L4954b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4954b6.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1` v0 @kind this) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;

  #L4954c8.  call `tryTerminate`(v0) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable$1;.tryTerminate:()V` @kind virtual;
  #L4954ce.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4954e0.  v0:= v1.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$queue` @type ^`java.util.Queue` @kind object;
  #L4954e4.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4954ea.  call `tryTerminate`(v1) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable$1;.tryTerminate:()V` @kind virtual;
  #L4954f0.  return @kind void;
}
procedure `void` `onSubscribe`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1` v1 @kind this, `rx.Subscription` v2 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable$1;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L495504.  v0:= v1.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$set` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L495508.  call `add`(v0, v2) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49550e.  return @kind void;
}
procedure `void` `tryTerminate`(`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1` v2 @kind this) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable$1;.tryTerminate:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L495520.  v0:= v2.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$wip` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L495524.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L49552a.  v0:= temp;
  #L49552c.  if v0 != 0 then goto L495562;
  #L495530.  v0:= v2.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$queue` @type ^`java.util.Queue` @kind object;
  #L495534.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L49553a.  v0:= temp;
  #L49553c.  if v0 == 0 then goto L49554c;
  #L495540.  v0:= v2.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L495544.  call `onCompleted`(v0) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L49554a.  goto L495562;
  #L49554c.  v0:= v2.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L495550.  v1:= v2.`rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1.val$queue` @type ^`java.util.Queue` @kind object;
  #L495554.  call temp:= `collectErrors`(v1) @signature `Lrx/internal/operators/CompletableOnSubscribeMerge;.collectErrors:(Ljava/util/Queue;)Ljava/lang/Throwable;` @kind static;
  #L49555a.  v1:= temp @kind object;
  #L49555c.  call `onError`(v0, v1) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L495562.  return @kind void;
}
