record `rx.internal.operators.OperatorZip` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.functions.FuncN` `rx.internal.operators.OperatorZip.zipFunction` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorZip` v0 @kind this, `rx.functions.Func2` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.<init>:(Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af214.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af21a.  call temp:= `fromFunc`(v1) @signature `Lrx/functions/Functions;.fromFunc:(Lrx/functions/Func2;)Lrx/functions/FuncN;` @kind static;
  #L4af220.  v1:= temp @kind object;
  #L4af222.  v0.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` := v1 @kind object;
  #L4af226.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorZip` v0 @kind this, `rx.functions.Func3` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.<init>:(Lrx/functions/Func3;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af238.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af23e.  call temp:= `fromFunc`(v1) @signature `Lrx/functions/Functions;.fromFunc:(Lrx/functions/Func3;)Lrx/functions/FuncN;` @kind static;
  #L4af244.  v1:= temp @kind object;
  #L4af246.  v0.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` := v1 @kind object;
  #L4af24a.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorZip` v0 @kind this, `rx.functions.Func4` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.<init>:(Lrx/functions/Func4;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af25c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af262.  call temp:= `fromFunc`(v1) @signature `Lrx/functions/Functions;.fromFunc:(Lrx/functions/Func4;)Lrx/functions/FuncN;` @kind static;
  #L4af268.  v1:= temp @kind object;
  #L4af26a.  v0.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` := v1 @kind object;
  #L4af26e.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorZip` v0 @kind this, `rx.functions.Func5` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.<init>:(Lrx/functions/Func5;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af280.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af286.  call temp:= `fromFunc`(v1) @signature `Lrx/functions/Functions;.fromFunc:(Lrx/functions/Func5;)Lrx/functions/FuncN;` @kind static;
  #L4af28c.  v1:= temp @kind object;
  #L4af28e.  v0.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` := v1 @kind object;
  #L4af292.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorZip` v0 @kind this, `rx.functions.Func6` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.<init>:(Lrx/functions/Func6;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af2a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af2aa.  call temp:= `fromFunc`(v1) @signature `Lrx/functions/Functions;.fromFunc:(Lrx/functions/Func6;)Lrx/functions/FuncN;` @kind static;
  #L4af2b0.  v1:= temp @kind object;
  #L4af2b2.  v0.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` := v1 @kind object;
  #L4af2b6.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorZip` v0 @kind this, `rx.functions.Func7` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.<init>:(Lrx/functions/Func7;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af2c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af2ce.  call temp:= `fromFunc`(v1) @signature `Lrx/functions/Functions;.fromFunc:(Lrx/functions/Func7;)Lrx/functions/FuncN;` @kind static;
  #L4af2d4.  v1:= temp @kind object;
  #L4af2d6.  v0.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` := v1 @kind object;
  #L4af2da.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorZip` v0 @kind this, `rx.functions.Func8` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.<init>:(Lrx/functions/Func8;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af2ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af2f2.  call temp:= `fromFunc`(v1) @signature `Lrx/functions/Functions;.fromFunc:(Lrx/functions/Func8;)Lrx/functions/FuncN;` @kind static;
  #L4af2f8.  v1:= temp @kind object;
  #L4af2fa.  v0.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` := v1 @kind object;
  #L4af2fe.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorZip` v0 @kind this, `rx.functions.Func9` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.<init>:(Lrx/functions/Func9;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af310.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af316.  call temp:= `fromFunc`(v1) @signature `Lrx/functions/Functions;.fromFunc:(Lrx/functions/Func9;)Lrx/functions/FuncN;` @kind static;
  #L4af31c.  v1:= temp @kind object;
  #L4af31e.  v0.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` := v1 @kind object;
  #L4af322.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorZip` v0 @kind this, `rx.functions.FuncN` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.<init>:(Lrx/functions/FuncN;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af334.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af33a.  v0.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` := v1 @kind object;
  #L4af33e.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorZip` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorZip;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af1b4.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4af1b8.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorZip;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4af1be.  v1:= temp @kind object;
  #L4af1c0.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorZip` v3 @kind this, `rx.Subscriber` v4 @kind object) @signature `Lrx/internal/operators/OperatorZip;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4af1d4.  v0:= new `rx.internal.operators.OperatorZip$Zip`;
  #L4af1d8.  v1:= v3.`rx.internal.operators.OperatorZip.zipFunction` @type ^`rx.functions.FuncN` @kind object;
  #L4af1dc.  call `<init>`(v0, v4, v1) @signature `Lrx/internal/operators/OperatorZip$Zip;.<init>:(Lrx/Subscriber;Lrx/functions/FuncN;)V` @kind direct;
  #L4af1e2.  v1:= new `rx.internal.operators.OperatorZip$ZipProducer`;
  #L4af1e6.  call `<init>`(v1, v0) @signature `Lrx/internal/operators/OperatorZip$ZipProducer;.<init>:(Lrx/internal/operators/OperatorZip$Zip;)V` @kind direct;
  #L4af1ec.  v2:= new `rx.internal.operators.OperatorZip$ZipSubscriber`;
  #L4af1f0.  call `<init>`(v2, v3, v4, v0, v1) @signature `Lrx/internal/operators/OperatorZip$ZipSubscriber;.<init>:(Lrx/internal/operators/OperatorZip;Lrx/Subscriber;Lrx/internal/operators/OperatorZip$Zip;Lrx/internal/operators/OperatorZip$ZipProducer;)V` @kind direct;
  #L4af1f6.  call `add`(v4, v2) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4af1fc.  call `setProducer`(v4, v1) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4af202.  return v2 @kind object;
}
