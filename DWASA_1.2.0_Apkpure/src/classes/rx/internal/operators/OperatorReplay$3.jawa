record `rx.internal.operators.OperatorReplay$3` @kind class @AccessFlag FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.Observable` `rx.internal.operators.OperatorReplay$3.val$observable` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorReplay$3` v0 @kind this, `rx.Observable` v1 @kind object) @signature `Lrx/internal/operators/OperatorReplay$3;.<init>:(Lrx/Observable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a5f98.  v0.`rx.internal.operators.OperatorReplay$3.val$observable` @type ^`rx.Observable` := v1 @kind object;
  #L4a5f9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a5fa2.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorReplay$3` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorReplay$3;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a5fb4.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a5fb8.  call `call`(v0, v1) @signature `Lrx/internal/operators/OperatorReplay$3;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L4a5fbe.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorReplay$3` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorReplay$3;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a5fd0.  v0:= v2.`rx.internal.operators.OperatorReplay$3.val$observable` @type ^`rx.Observable` @kind object;
  #L4a5fd4.  v1:= new `rx.internal.operators.OperatorReplay$3$1`;
  #L4a5fd8.  call `<init>`(v1, v2, v3, v3) @signature `Lrx/internal/operators/OperatorReplay$3$1;.<init>:(Lrx/internal/operators/OperatorReplay$3;Lrx/Subscriber;Lrx/Subscriber;)V` @kind direct;
  #L4a5fde.  call temp:= `unsafeSubscribe`(v0, v1) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4a5fe4.  return @kind void;
}
