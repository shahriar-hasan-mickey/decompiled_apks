record `rx.internal.operators.OperatorToObservableList$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `boolean` `rx.internal.operators.OperatorToObservableList$1.completed` @AccessFlag ;
  `java.util.List` `rx.internal.operators.OperatorToObservableList$1.list` @AccessFlag ;
  `rx.internal.operators.OperatorToObservableList` `rx.internal.operators.OperatorToObservableList$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorToObservableList$1.val$o` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.producers.SingleDelayedProducer` `rx.internal.operators.OperatorToObservableList$1.val$producer` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorToObservableList$1` v0 @kind this, `rx.internal.operators.OperatorToObservableList` v1 @kind object, `rx.internal.producers.SingleDelayedProducer` v2 @kind object, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorToObservableList$1;.<init>:(Lrx/internal/operators/OperatorToObservableList;Lrx/internal/producers/SingleDelayedProducer;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ab5cc.  v0.`rx.internal.operators.OperatorToObservableList$1.this$0` @type ^`rx.internal.operators.OperatorToObservableList` := v1 @kind object;
  #L4ab5d0.  v0.`rx.internal.operators.OperatorToObservableList$1.val$producer` @type ^`rx.internal.producers.SingleDelayedProducer` := v2 @kind object;
  #L4ab5d4.  v0.`rx.internal.operators.OperatorToObservableList$1.val$o` @type ^`rx.Subscriber` := v3 @kind object;
  #L4ab5d8.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4ab5de.  v1:= new `java.util.LinkedList`;
  #L4ab5e2.  call `<init>`(v1) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4ab5e8.  v0.`rx.internal.operators.OperatorToObservableList$1.list` @type ^`java.util.List` := v1 @kind object;
  #L4ab5ec.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorToObservableList$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorToObservableList$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab600.  v0:= v2.`rx.internal.operators.OperatorToObservableList$1.completed` @type ^`boolean` @kind boolean;
  #L4ab604.  if v0 != 0 then goto L4ab636;
  #L4ab608.  v0:= 1I;
  #L4ab60a.  v2.`rx.internal.operators.OperatorToObservableList$1.completed` @type ^`boolean` := v0 @kind boolean;
  #L4ab60e.  v0:= new `java.util.ArrayList`;
  #L4ab612.  v1:= v2.`rx.internal.operators.OperatorToObservableList$1.list` @type ^`java.util.List` @kind object;
  #L4ab616.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4ab61c.  v1:= 0I;
  #L4ab61e.  v2.`rx.internal.operators.OperatorToObservableList$1.list` @type ^`java.util.List` := v1 @kind object;
  #L4ab622.  v1:= v2.`rx.internal.operators.OperatorToObservableList$1.val$producer` @type ^`rx.internal.producers.SingleDelayedProducer` @kind object;
  #L4ab626.  call `setValue`(v1, v0) @signature `Lrx/internal/producers/SingleDelayedProducer;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L4ab62c.  goto L4ab636;
  #L4ab62e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab630.  call `throwOrReport`(v0, v2) @signature `Lrx/exceptions/Exceptions;.throwOrReport:(Ljava/lang/Throwable;Lrx/Observer;)V` @kind static;
  #L4ab636.  return @kind void;
  catch `java.lang.Throwable` @[L4ab60e..L4ab61c] goto L4ab62e;
}
procedure `void` `onError`(`rx.internal.operators.OperatorToObservableList$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorToObservableList$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab654.  v0:= v1.`rx.internal.operators.OperatorToObservableList$1.val$o` @type ^`rx.Subscriber` @kind object;
  #L4ab658.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ab65e.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorToObservableList$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OperatorToObservableList$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab670.  v0:= v1.`rx.internal.operators.OperatorToObservableList$1.completed` @type ^`boolean` @kind boolean;
  #L4ab674.  if v0 != 0 then goto L4ab682;
  #L4ab678.  v0:= v1.`rx.internal.operators.OperatorToObservableList$1.list` @type ^`java.util.List` @kind object;
  #L4ab67c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4ab682.  return @kind void;
}
procedure `void` `onStart`(`rx.internal.operators.OperatorToObservableList$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorToObservableList$1;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab694.  v0:= 9223372036854775807L;
  #L4ab69e.  call `request`(v2, v0) @signature `Lrx/internal/operators/OperatorToObservableList$1;.request:(J)V` @kind virtual;
  #L4ab6a4.  return @kind void;
}
