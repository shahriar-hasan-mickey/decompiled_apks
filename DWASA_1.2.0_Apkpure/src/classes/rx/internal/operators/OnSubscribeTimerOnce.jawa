record `rx.internal.operators.OnSubscribeTimerOnce` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.Scheduler` `rx.internal.operators.OnSubscribeTimerOnce.scheduler` @AccessFlag FINAL;
  `long` `rx.internal.operators.OnSubscribeTimerOnce.time` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `rx.internal.operators.OnSubscribeTimerOnce.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeTimerOnce` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `rx.Scheduler` v4 @kind object) @signature `Lrx/internal/operators/OnSubscribeTimerOnce;.<init>:(JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49d2d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49d2de.  v0.`rx.internal.operators.OnSubscribeTimerOnce.time` @type ^`long` := v1 @kind wide;
  #L49d2e2.  v0.`rx.internal.operators.OnSubscribeTimerOnce.unit` @type ^`java.util.concurrent.TimeUnit` := v3 @kind object;
  #L49d2e6.  v0.`rx.internal.operators.OnSubscribeTimerOnce.scheduler` @type ^`rx.Scheduler` := v4 @kind object;
  #L49d2ea.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeTimerOnce` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeTimerOnce;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49d2fc.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L49d300.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeTimerOnce;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L49d306.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeTimerOnce` v4 @kind this, `rx.Subscriber` v5 @kind object) @signature `Lrx/internal/operators/OnSubscribeTimerOnce;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49d318.  v0:= v4.`rx.internal.operators.OnSubscribeTimerOnce.scheduler` @type ^`rx.Scheduler` @kind object;
  #L49d31c.  call temp:= `createWorker`(v0) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L49d322.  v0:= temp @kind object;
  #L49d324.  call `add`(v5, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49d32a.  v1:= new `rx.internal.operators.OnSubscribeTimerOnce$1`;
  #L49d32e.  call `<init>`(v1, v4, v5) @signature `Lrx/internal/operators/OnSubscribeTimerOnce$1;.<init>:(Lrx/internal/operators/OnSubscribeTimerOnce;Lrx/Subscriber;)V` @kind direct;
  #L49d334.  v2:= v4.`rx.internal.operators.OnSubscribeTimerOnce.time` @type ^`long` @kind wide;
  #L49d338.  v5:= v4.`rx.internal.operators.OnSubscribeTimerOnce.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L49d33c.  call temp:= `schedule`(v0, v1, v2, v5) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L49d342.  return @kind void;
}
