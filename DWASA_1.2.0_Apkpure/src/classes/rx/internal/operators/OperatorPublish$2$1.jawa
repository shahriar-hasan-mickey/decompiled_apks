record `rx.internal.operators.OperatorPublish$2$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorPublish$2` `rx.internal.operators.OperatorPublish$2$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorPublish$2$1.val$child` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.operators.OnSubscribePublishMulticast` `rx.internal.operators.OperatorPublish$2$1.val$op` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorPublish$2$1` v0 @kind this, `rx.internal.operators.OperatorPublish$2` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.internal.operators.OnSubscribePublishMulticast` v3 @kind object) @signature `Lrx/internal/operators/OperatorPublish$2$1;.<init>:(Lrx/internal/operators/OperatorPublish$2;Lrx/Subscriber;Lrx/internal/operators/OnSubscribePublishMulticast;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a5370.  v0.`rx.internal.operators.OperatorPublish$2$1.this$0` @type ^`rx.internal.operators.OperatorPublish$2` := v1 @kind object;
  #L4a5374.  v0.`rx.internal.operators.OperatorPublish$2$1.val$child` @type ^`rx.Subscriber` := v2 @kind object;
  #L4a5378.  v0.`rx.internal.operators.OperatorPublish$2$1.val$op` @type ^`rx.internal.operators.OnSubscribePublishMulticast` := v3 @kind object;
  #L4a537c.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4a5382.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorPublish$2$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorPublish$2$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a5394.  v0:= v1.`rx.internal.operators.OperatorPublish$2$1.val$op` @type ^`rx.internal.operators.OnSubscribePublishMulticast` @kind object;
  #L4a5398.  call `unsubscribe`(v0) @signature `Lrx/internal/operators/OnSubscribePublishMulticast;.unsubscribe:()V` @kind virtual;
  #L4a539e.  v0:= v1.`rx.internal.operators.OperatorPublish$2$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a53a2.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4a53a8.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorPublish$2$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorPublish$2$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a53bc.  v0:= v1.`rx.internal.operators.OperatorPublish$2$1.val$op` @type ^`rx.internal.operators.OnSubscribePublishMulticast` @kind object;
  #L4a53c0.  call `unsubscribe`(v0) @signature `Lrx/internal/operators/OnSubscribePublishMulticast;.unsubscribe:()V` @kind virtual;
  #L4a53c6.  v0:= v1.`rx.internal.operators.OperatorPublish$2$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a53ca.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a53d0.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorPublish$2$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OperatorPublish$2$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a53e4.  v0:= v1.`rx.internal.operators.OperatorPublish$2$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a53e8.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4a53ee.  return @kind void;
}
procedure `void` `setProducer`(`rx.internal.operators.OperatorPublish$2$1` v1 @kind this, `rx.Producer` v2 @kind object) @signature `Lrx/internal/operators/OperatorPublish$2$1;.setProducer:(Lrx/Producer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a5400.  v0:= v1.`rx.internal.operators.OperatorPublish$2$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a5404.  call `setProducer`(v0, v2) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4a540a.  return @kind void;
}
