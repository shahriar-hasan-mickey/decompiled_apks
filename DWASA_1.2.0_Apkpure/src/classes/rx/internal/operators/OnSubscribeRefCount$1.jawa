record `rx.internal.operators.OnSubscribeRefCount$1` @kind class @AccessFlag  extends `rx.functions.Action1` @kind interface {
  `rx.internal.operators.OnSubscribeRefCount` `rx.internal.operators.OnSubscribeRefCount$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OnSubscribeRefCount$1.val$subscriber` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicBoolean` `rx.internal.operators.OnSubscribeRefCount$1.val$writeLocked` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeRefCount$1` v0 @kind this, `rx.internal.operators.OnSubscribeRefCount` v1 @kind object, `rx.Subscriber` v2 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeRefCount$1;.<init>:(Lrx/internal/operators/OnSubscribeRefCount;Lrx/Subscriber;Ljava/util/concurrent/atomic/AtomicBoolean;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49ca5c.  v0.`rx.internal.operators.OnSubscribeRefCount$1.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` := v1 @kind object;
  #L49ca60.  v0.`rx.internal.operators.OnSubscribeRefCount$1.val$subscriber` @type ^`rx.Subscriber` := v2 @kind object;
  #L49ca64.  v0.`rx.internal.operators.OnSubscribeRefCount$1.val$writeLocked` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v3 @kind object;
  #L49ca68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49ca6e.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeRefCount$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRefCount$1;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49ca80.  v1:= (`rx.Subscription`) v1 @kind object;
  #L49ca84.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeRefCount$1;.call:(Lrx/Subscription;)V` @kind virtual;
  #L49ca8a.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeRefCount$1` v3 @kind this, `rx.Subscription` v4 @kind object) @signature `Lrx/internal/operators/OnSubscribeRefCount$1;.call:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49ca9c.  v0:= 0I;
  #L49ca9e.  v1:= v3.`rx.internal.operators.OnSubscribeRefCount$1.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49caa2.  v1:= v1.`rx.internal.operators.OnSubscribeRefCount.baseSubscription` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L49caa6.  call `add`(v1, v4) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49caac.  v4:= v3.`rx.internal.operators.OnSubscribeRefCount$1.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cab0.  v1:= v3.`rx.internal.operators.OnSubscribeRefCount$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L49cab4.  v2:= v3.`rx.internal.operators.OnSubscribeRefCount$1.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cab8.  v2:= v2.`rx.internal.operators.OnSubscribeRefCount.baseSubscription` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L49cabc.  call `doSubscribe`(v4, v1, v2) @signature `Lrx/internal/operators/OnSubscribeRefCount;.doSubscribe:(Lrx/Subscriber;Lrx/subscriptions/CompositeSubscription;)V` @kind virtual;
  #L49cac2.  v4:= v3.`rx.internal.operators.OnSubscribeRefCount$1.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cac6.  v4:= v4.`rx.internal.operators.OnSubscribeRefCount.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L49caca.  call `unlock`(v4) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L49cad0.  v4:= v3.`rx.internal.operators.OnSubscribeRefCount$1.val$writeLocked` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L49cad4.  call `set`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L49cada.  return @kind void;
  #L49cadc.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49cade.  v1:= v3.`rx.internal.operators.OnSubscribeRefCount$1.this$0` @type ^`rx.internal.operators.OnSubscribeRefCount` @kind object;
  #L49cae2.  v1:= v1.`rx.internal.operators.OnSubscribeRefCount.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L49cae6.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L49caec.  v1:= v3.`rx.internal.operators.OnSubscribeRefCount$1.val$writeLocked` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L49caf0.  call `set`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L49caf6.  throw v4;
  catch `java.lang.Throwable` @[L49ca9e..L49cac2] goto L49cadc;
}
