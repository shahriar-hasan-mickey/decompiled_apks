record `rx.internal.operators.OperatorDelayWithSelector` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.functions.Func1` `rx.internal.operators.OperatorDelayWithSelector.itemDelay` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.OperatorDelayWithSelector.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDelayWithSelector` v0 @kind this, `rx.Observable` v1 @kind object, `rx.functions.Func1` v2 @kind object) @signature `Lrx/internal/operators/OperatorDelayWithSelector;.<init>:(Lrx/Observable;Lrx/functions/Func1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a016c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a0172.  v0.`rx.internal.operators.OperatorDelayWithSelector.source` @type ^`rx.Observable` := v1 @kind object;
  #L4a0176.  v0.`rx.internal.operators.OperatorDelayWithSelector.itemDelay` @type ^`rx.functions.Func1` := v2 @kind object;
  #L4a017a.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorDelayWithSelector` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorDelayWithSelector;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a0100.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a0104.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorDelayWithSelector;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4a010a.  v1:= temp @kind object;
  #L4a010c.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorDelayWithSelector` v4 @kind this, `rx.Subscriber` v5 @kind object) @signature `Lrx/internal/operators/OperatorDelayWithSelector;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a0120.  v0:= new `rx.observers.SerializedSubscriber`;
  #L4a0124.  call `<init>`(v0, v5) @signature `Lrx/observers/SerializedSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4a012a.  call temp:= `create`() @signature `Lrx/subjects/PublishSubject;.create:()Lrx/subjects/PublishSubject;` @kind static;
  #L4a0130.  v1:= temp @kind object;
  #L4a0132.  call temp:= `merge`(v1) @signature `Lrx/Observable;.merge:(Lrx/Observable;)Lrx/Observable;` @kind static;
  #L4a0138.  v2:= temp @kind object;
  #L4a013a.  call temp:= `from`(v0) @signature `Lrx/observers/Subscribers;.from:(Lrx/Observer;)Lrx/Subscriber;` @kind static;
  #L4a0140.  v3:= temp @kind object;
  #L4a0142.  call temp:= `unsafeSubscribe`(v2, v3) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4a0148.  v2:= temp @kind object;
  #L4a014a.  call `add`(v5, v2) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4a0150.  v2:= new `rx.internal.operators.OperatorDelayWithSelector$1`;
  #L4a0154.  call `<init>`(v2, v4, v5, v1, v0) @signature `Lrx/internal/operators/OperatorDelayWithSelector$1;.<init>:(Lrx/internal/operators/OperatorDelayWithSelector;Lrx/Subscriber;Lrx/subjects/PublishSubject;Lrx/observers/SerializedSubscriber;)V` @kind direct;
  #L4a015a.  return v2 @kind object;
}
