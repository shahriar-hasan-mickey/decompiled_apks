record `rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `rx.CompletableSubscriber` @kind interface {
  `rx.CompletableSubscriber` `rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.actual` @AccessFlag FINAL;
  `rx.subscriptions.SerialSubscription` `rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.sd` @AccessFlag FINAL;
  `java.util.Iterator` `rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.sources` @AccessFlag FINAL;
}
global `long` `@@rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber` v0 @kind this, `rx.CompletableSubscriber` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber;.<init>:(Lrx/CompletableSubscriber;Ljava/util/Iterator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L494aac.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L494ab2.  v0.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.actual` @type ^`rx.CompletableSubscriber` := v1 @kind object;
  #L494ab6.  v0.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.sources` @type ^`java.util.Iterator` := v2 @kind object;
  #L494aba.  v1:= new `rx.subscriptions.SerialSubscription`;
  #L494abe.  call `<init>`(v1) @signature `Lrx/subscriptions/SerialSubscription;.<init>:()V` @kind direct;
  #L494ac4.  v0.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.sd` @type ^`rx.subscriptions.SerialSubscription` := v1 @kind object;
  #L494ac8.  return @kind void;
}
procedure `void` `next`(`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber` v3 @kind this) @signature `Lrx/internal/operators/CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber;.next:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L494adc.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.sd` @type ^`rx.subscriptions.SerialSubscription` @kind object;
  #L494ae0.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/subscriptions/SerialSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L494ae6.  v0:= temp;
  #L494ae8.  if v0 == 0 then goto L494aee;
  #L494aec.  return @kind void;
  #L494aee.  call temp:= `getAndIncrement`(v3) @signature `Lrx/internal/operators/CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber;.getAndIncrement:()I` @kind virtual;
  #L494af4.  v0:= temp;
  #L494af6.  if v0 == 0 then goto L494afc;
  #L494afa.  return @kind void;
  #L494afc.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.sources` @type ^`java.util.Iterator` @kind object;
  #L494b00.  v1:= v3.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.sd` @type ^`rx.subscriptions.SerialSubscription` @kind object;
  #L494b04.  call temp:= `isUnsubscribed`(v1) @signature `Lrx/subscriptions/SerialSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L494b0a.  v1:= temp;
  #L494b0c.  if v1 == 0 then goto L494b12;
  #L494b10.  return @kind void;
  #L494b12.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L494b18.  v1:= temp;
  #L494b1a.  if v1 != 0 then goto L494b2a;
  #L494b1e.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L494b22.  call `onCompleted`(v0) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L494b28.  return @kind void;
  #L494b2a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L494b30.  v1:= temp @kind object;
  #L494b32.  v1:= (`rx.Completable`) v1 @kind object;
  #L494b36.  if v1 != 0 then goto L494b54;
  #L494b3a.  v0:= v3.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L494b3e.  v1:= new `java.lang.NullPointerException`;
  #L494b42.  v2:= "The completable returned is null" @kind object;
  #L494b46.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L494b4c.  call `onError`(v0, v1) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L494b52.  return @kind void;
  #L494b54.  call `unsafeSubscribe`(v1, v3) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L494b5a.  call temp:= `decrementAndGet`(v3) @signature `Lrx/internal/operators/CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber;.decrementAndGet:()I` @kind virtual;
  #L494b60.  v1:= temp;
  #L494b62.  if v1 != 0 then goto L494b00;
  #L494b66.  return @kind void;
  #L494b68.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L494b6a.  v1:= v3.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L494b6e.  call `onError`(v1, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L494b74.  return @kind void;
  #L494b76.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L494b78.  v1:= v3.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L494b7c.  call `onError`(v1, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L494b82.  return @kind void;
  catch `java.lang.Throwable` @[L494b12..L494b1a] goto L494b76;
  catch `java.lang.Throwable` @[L494b2a..L494b36] goto L494b68;
}
procedure `void` `onCompleted`(`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber` v0 @kind this) @signature `Lrx/internal/operators/CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;

  #L494bac.  call `next`(v0) @signature `Lrx/internal/operators/CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber;.next:()V` @kind virtual;
  #L494bb2.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L494bc4.  v0:= v1.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L494bc8.  call `onError`(v0, v2) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L494bce.  return @kind void;
}
procedure `void` `onSubscribe`(`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber` v1 @kind this, `rx.Subscription` v2 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L494be0.  v0:= v1.`rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber.sd` @type ^`rx.subscriptions.SerialSubscription` @kind object;
  #L494be4.  call `set`(v0, v2) @signature `Lrx/subscriptions/SerialSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L494bea.  return @kind void;
}
