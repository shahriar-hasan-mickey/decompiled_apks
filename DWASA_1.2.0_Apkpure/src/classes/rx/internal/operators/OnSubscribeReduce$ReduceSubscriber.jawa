record `rx.internal.operators.OnSubscribeReduce$ReduceSubscriber` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `rx.Subscriber` `rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.actual` @AccessFlag FINAL;
  `boolean` `rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.done` @AccessFlag ;
  `rx.functions.Func2` `rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.reducer` @AccessFlag FINAL;
  `java.lang.Object` `rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.value` @AccessFlag ;
}
global `java.lang.Object` `@@rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.EMPTY` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L49c758.  v0:= new `java.lang.Object`;
  #L49c75c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49c762.  `@@rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.EMPTY` @type ^`java.lang.Object` := v0 @kind object;
  #L49c766.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber` v0 @kind this, `rx.Subscriber` v1 @kind object, `rx.functions.Func2` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.<init>:(Lrx/Subscriber;Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49c778.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L49c77e.  v0.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.actual` @type ^`rx.Subscriber` := v1 @kind object;
  #L49c782.  v0.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.reducer` @type ^`rx.functions.Func2` := v2 @kind object;
  #L49c786.  v1:= `@@rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.EMPTY` @type ^`java.lang.Object` @kind object;
  #L49c78a.  v0.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.value` @type ^`java.lang.Object` := v1 @kind object;
  #L49c78e.  v1:= 0L;
  #L49c792.  call `request`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.request:(J)V` @kind virtual;
  #L49c798.  return @kind void;
}
procedure `void` `downstreamRequest`(`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber` v3 @kind this, `long` v4 ) @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.downstreamRequest:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L49c7ac.  v0:= 0L;
  #L49c7b0.  v2:= lcmp(v4, v0);
  #L49c7b4.  if v2 < 0 then goto L49c7d2;
  #L49c7b8.  v2:= lcmp(v4, v0);
  #L49c7bc.  if v2 == 0 then goto L49c7d0;
  #L49c7c0.  v4:= 9223372036854775807L;
  #L49c7ca.  call `request`(v3, v4) @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.request:(J)V` @kind virtual;
  #L49c7d0.  return @kind void;
  #L49c7d2.  v0:= new `java.lang.IllegalArgumentException`;
  #L49c7d6.  v1:= new `java.lang.StringBuilder`;
  #L49c7da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49c7e0.  v2:= "n >= 0 required but it was " @kind object;
  #L49c7e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c7ea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c7f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49c7f6.  v4:= temp @kind object;
  #L49c7f8.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49c7fe.  throw v0;
}
procedure `void` `onCompleted`(`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber` v2 @kind this) @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49c810.  v0:= v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.done` @type ^`boolean` @kind boolean;
  #L49c814.  if v0 == 0 then goto L49c81a;
  #L49c818.  return @kind void;
  #L49c81a.  v0:= 1I;
  #L49c81c.  v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L49c820.  v0:= v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L49c824.  v1:= `@@rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.EMPTY` @type ^`java.lang.Object` @kind object;
  #L49c828.  if v0 == v1 then goto L49c842;
  #L49c82c.  v1:= v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.actual` @type ^`rx.Subscriber` @kind object;
  #L49c830.  call `onNext`(v1, v0) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L49c836.  v0:= v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.actual` @type ^`rx.Subscriber` @kind object;
  #L49c83a.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L49c840.  goto L49c856;
  #L49c842.  v0:= v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.actual` @type ^`rx.Subscriber` @kind object;
  #L49c846.  v1:= new `java.util.NoSuchElementException`;
  #L49c84a.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L49c850.  call `onError`(v0, v1) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49c856.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49c868.  v0:= v1.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.done` @type ^`boolean` @kind boolean;
  #L49c86c.  if v0 != 0 then goto L49c882;
  #L49c870.  v0:= 1I;
  #L49c872.  v1.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L49c876.  v0:= v1.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.actual` @type ^`rx.Subscriber` @kind object;
  #L49c87a.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49c880.  goto L49c888;
  #L49c882.  call `onError`(v2) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L49c888.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49c89c.  v0:= v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.done` @type ^`boolean` @kind boolean;
  #L49c8a0.  if v0 == 0 then goto L49c8a6;
  #L49c8a4.  return @kind void;
  #L49c8a6.  v0:= v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L49c8aa.  v1:= `@@rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.EMPTY` @type ^`java.lang.Object` @kind object;
  #L49c8ae.  if v0 != v1 then goto L49c8b8;
  #L49c8b2.  v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.value` @type ^`java.lang.Object` := v3 @kind object;
  #L49c8b6.  goto L49c8de;
  #L49c8b8.  v1:= v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.reducer` @type ^`rx.functions.Func2` @kind object;
  #L49c8bc.  call temp:= `call`(v1, v0, v3) @signature `Lrx/functions/Func2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49c8c2.  v3:= temp @kind object;
  #L49c8c4.  v2.`rx.internal.operators.OnSubscribeReduce$ReduceSubscriber.value` @type ^`java.lang.Object` := v3 @kind object;
  #L49c8c8.  goto L49c8de;
  #L49c8ca.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49c8cc.  call `throwIfFatal`(v3) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49c8d2.  call `unsubscribe`(v2) @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.unsubscribe:()V` @kind virtual;
  #L49c8d8.  call `onError`(v2, v3) @signature `Lrx/internal/operators/OnSubscribeReduce$ReduceSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49c8de.  return @kind void;
  catch `java.lang.Throwable` @[L49c8b8..L49c8c8] goto L49c8ca;
}
