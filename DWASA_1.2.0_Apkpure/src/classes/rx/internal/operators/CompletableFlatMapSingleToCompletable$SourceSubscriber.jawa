record `rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber` @kind class @AccessFlag FINAL extends `rx.SingleSubscriber` @kind class, `rx.CompletableSubscriber` @kind interface {
  `rx.CompletableSubscriber` `rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber.actual` @AccessFlag FINAL;
  `rx.functions.Func1` `rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber.mapper` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber` v0 @kind this, `rx.CompletableSubscriber` v1 @kind object, `rx.functions.Func1` v2 @kind object) @signature `Lrx/internal/operators/CompletableFlatMapSingleToCompletable$SourceSubscriber;.<init>:(Lrx/CompletableSubscriber;Lrx/functions/Func1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4943a0.  call `<init>`(v0) @signature `Lrx/SingleSubscriber;.<init>:()V` @kind direct;
  #L4943a6.  v0.`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber.actual` @type ^`rx.CompletableSubscriber` := v1 @kind object;
  #L4943aa.  v0.`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber.mapper` @type ^`rx.functions.Func1` := v2 @kind object;
  #L4943ae.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber` v1 @kind this) @signature `Lrx/internal/operators/CompletableFlatMapSingleToCompletable$SourceSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4943c0.  v0:= v1.`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L4943c4.  call `onCompleted`(v0) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L4943ca.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/CompletableFlatMapSingleToCompletable$SourceSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4943dc.  v0:= v1.`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber.actual` @type ^`rx.CompletableSubscriber` @kind object;
  #L4943e0.  call `onError`(v0, v2) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4943e6.  return @kind void;
}
procedure `void` `onSubscribe`(`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber` v0 @kind this, `rx.Subscription` v1 @kind object) @signature `Lrx/internal/operators/CompletableFlatMapSingleToCompletable$SourceSubscriber;.onSubscribe:(Lrx/Subscription;)V` @AccessFlag PUBLIC {
    temp;

  #L4943f8.  call `add`(v0, v1) @signature `Lrx/internal/operators/CompletableFlatMapSingleToCompletable$SourceSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4943fe.  return @kind void;
}
procedure `void` `onSuccess`(`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/CompletableFlatMapSingleToCompletable$SourceSubscriber;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L494410.  v0:= v1.`rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber.mapper` @type ^`rx.functions.Func1` @kind object;
  #L494414.  call temp:= `call`(v0, v2) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49441a.  v2:= temp @kind object;
  #L49441c.  v2:= (`rx.Completable`) v2 @kind object;
  #L494420.  if v2 != 0 then goto L49443a;
  #L494424.  v2:= new `java.lang.NullPointerException`;
  #L494428.  v0:= "The mapper returned a null Completable" @kind object;
  #L49442c.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L494432.  call `onError`(v1, v2) @signature `Lrx/internal/operators/CompletableFlatMapSingleToCompletable$SourceSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L494438.  return @kind void;
  #L49443a.  call `subscribe`(v2, v1) @signature `Lrx/Completable;.subscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L494440.  return @kind void;
  #L494442.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L494444.  call `throwIfFatal`(v2) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49444a.  call `onError`(v1, v2) @signature `Lrx/internal/operators/CompletableFlatMapSingleToCompletable$SourceSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L494450.  return @kind void;
  catch `java.lang.Throwable` @[L494410..L494420] goto L494442;
}
