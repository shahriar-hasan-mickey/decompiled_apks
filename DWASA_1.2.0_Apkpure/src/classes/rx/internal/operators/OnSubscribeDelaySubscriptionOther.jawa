record `rx.internal.operators.OnSubscribeDelaySubscriptionOther` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.Observable` `rx.internal.operators.OnSubscribeDelaySubscriptionOther.main` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.OnSubscribeDelaySubscriptionOther.other` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeDelaySubscriptionOther` v0 @kind this, `rx.Observable` v1 @kind object, `rx.Observable` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionOther;.<init>:(Lrx/Observable;Lrx/Observable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L497ce0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L497ce6.  v0.`rx.internal.operators.OnSubscribeDelaySubscriptionOther.main` @type ^`rx.Observable` := v1 @kind object;
  #L497cea.  v0.`rx.internal.operators.OnSubscribeDelaySubscriptionOther.other` @type ^`rx.Observable` := v2 @kind object;
  #L497cee.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeDelaySubscriptionOther` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionOther;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L497d00.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L497d04.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionOther;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L497d0a.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeDelaySubscriptionOther` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionOther;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L497d1c.  v0:= new `rx.subscriptions.SerialSubscription`;
  #L497d20.  call `<init>`(v0) @signature `Lrx/subscriptions/SerialSubscription;.<init>:()V` @kind direct;
  #L497d26.  call `add`(v3, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L497d2c.  call temp:= `wrap`(v3) @signature `Lrx/observers/Subscribers;.wrap:(Lrx/Subscriber;)Lrx/Subscriber;` @kind static;
  #L497d32.  v3:= temp @kind object;
  #L497d34.  v1:= new `rx.internal.operators.OnSubscribeDelaySubscriptionOther$1`;
  #L497d38.  call `<init>`(v1, v2, v3, v0) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionOther$1;.<init>:(Lrx/internal/operators/OnSubscribeDelaySubscriptionOther;Lrx/Subscriber;Lrx/subscriptions/SerialSubscription;)V` @kind direct;
  #L497d3e.  call `set`(v0, v1) @signature `Lrx/subscriptions/SerialSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L497d44.  v3:= v2.`rx.internal.operators.OnSubscribeDelaySubscriptionOther.other` @type ^`rx.Observable` @kind object;
  #L497d48.  call temp:= `unsafeSubscribe`(v3, v1) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L497d4e.  return @kind void;
}
