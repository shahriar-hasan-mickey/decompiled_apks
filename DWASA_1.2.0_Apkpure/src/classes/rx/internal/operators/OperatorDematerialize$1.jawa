record `rx.internal.operators.OperatorDematerialize$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `boolean` `rx.internal.operators.OperatorDematerialize$1.terminated` @AccessFlag ;
  `rx.internal.operators.OperatorDematerialize` `rx.internal.operators.OperatorDematerialize$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorDematerialize$1.val$child` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDematerialize$1` v0 @kind this, `rx.internal.operators.OperatorDematerialize` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorDematerialize$1;.<init>:(Lrx/internal/operators/OperatorDematerialize;Lrx/Subscriber;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a0200.  v0.`rx.internal.operators.OperatorDematerialize$1.this$0` @type ^`rx.internal.operators.OperatorDematerialize` := v1 @kind object;
  #L4a0204.  v0.`rx.internal.operators.OperatorDematerialize$1.val$child` @type ^`rx.Subscriber` := v3 @kind object;
  #L4a0208.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4a020e.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorDematerialize$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorDematerialize$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a0220.  v0:= v1.`rx.internal.operators.OperatorDematerialize$1.terminated` @type ^`boolean` @kind boolean;
  #L4a0224.  if v0 != 0 then goto L4a0238;
  #L4a0228.  v0:= 1I;
  #L4a022a.  v1.`rx.internal.operators.OperatorDematerialize$1.terminated` @type ^`boolean` := v0 @kind boolean;
  #L4a022e.  v0:= v1.`rx.internal.operators.OperatorDematerialize$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a0232.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4a0238.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorDematerialize$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorDematerialize$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a024c.  v0:= v1.`rx.internal.operators.OperatorDematerialize$1.terminated` @type ^`boolean` @kind boolean;
  #L4a0250.  if v0 != 0 then goto L4a0264;
  #L4a0254.  v0:= 1I;
  #L4a0256.  v1.`rx.internal.operators.OperatorDematerialize$1.terminated` @type ^`boolean` := v0 @kind boolean;
  #L4a025a.  v0:= v1.`rx.internal.operators.OperatorDematerialize$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a025e.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a0264.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorDematerialize$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorDematerialize$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a0278.  v1:= (`rx.Notification`) v1 @kind object;
  #L4a027c.  call `onNext`(v0, v1) @signature `Lrx/internal/operators/OperatorDematerialize$1;.onNext:(Lrx/Notification;)V` @kind virtual;
  #L4a0282.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorDematerialize$1` v3 @kind this, `rx.Notification` v4 @kind object) @signature `Lrx/internal/operators/OperatorDematerialize$1;.onNext:(Lrx/Notification;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a0294.  v0:= `@@rx.internal.operators.OperatorDematerialize$2.$SwitchMap$rx$Notification$Kind` @type ^`int`[] @kind object;
  #L4a0298.  call temp:= `getKind`(v4) @signature `Lrx/Notification;.getKind:()Lrx/Notification$Kind;` @kind virtual;
  #L4a029e.  v1:= temp @kind object;
  #L4a02a0.  call temp:= `ordinal`(v1) @signature `Lrx/Notification$Kind;.ordinal:()I` @kind virtual;
  #L4a02a6.  v1:= temp;
  #L4a02a8.  v0:= v0[v1];
  #L4a02ac.  v1:= 1I;
  #L4a02ae.  if v0 == v1 then goto L4a030a;
  #L4a02b2.  v1:= 2I;
  #L4a02b4.  if v0 == v1 then goto L4a02fa;
  #L4a02b8.  v1:= 3I;
  #L4a02ba.  if v0 == v1 then goto L4a02f2;
  #L4a02be.  v0:= new `java.lang.IllegalArgumentException`;
  #L4a02c2.  v1:= new `java.lang.StringBuilder`;
  #L4a02c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a02cc.  v2:= "Unsupported notification type: " @kind object;
  #L4a02d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a02d6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a02dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a02e2.  v4:= temp @kind object;
  #L4a02e4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a02ea.  call `onError`(v3, v0) @signature `Lrx/internal/operators/OperatorDematerialize$1;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a02f0.  goto L4a0324;
  #L4a02f2.  call `onCompleted`(v3) @signature `Lrx/internal/operators/OperatorDematerialize$1;.onCompleted:()V` @kind virtual;
  #L4a02f8.  goto L4a0324;
  #L4a02fa.  call temp:= `getThrowable`(v4) @signature `Lrx/Notification;.getThrowable:()Ljava/lang/Throwable;` @kind virtual;
  #L4a0300.  v4:= temp @kind object;
  #L4a0302.  call `onError`(v3, v4) @signature `Lrx/internal/operators/OperatorDematerialize$1;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a0308.  goto L4a0324;
  #L4a030a.  v0:= v3.`rx.internal.operators.OperatorDematerialize$1.terminated` @type ^`boolean` @kind boolean;
  #L4a030e.  if v0 != 0 then goto L4a0324;
  #L4a0312.  v0:= v3.`rx.internal.operators.OperatorDematerialize$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a0316.  call temp:= `getValue`(v4) @signature `Lrx/Notification;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4a031c.  v4:= temp @kind object;
  #L4a031e.  call `onNext`(v0, v4) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4a0324.  return @kind void;
}
