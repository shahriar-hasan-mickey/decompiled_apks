record `rx.internal.operators.OperatorOnBackpressureDrop` @kind class @AccessFlag PUBLIC extends `rx.Observable$Operator` @kind interface {
  `rx.functions.Action1` `rx.internal.operators.OperatorOnBackpressureDrop.onDrop` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorOnBackpressureDrop` v1 @kind this) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4a49f4.  v0:= 0I;
  #L4a49f6.  call `<init>`(v1, v0) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop;.<init>:(Lrx/functions/Action1;)V` @kind direct;
  #L4a49fc.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorOnBackpressureDrop` v0 @kind this, `rx.functions.Action1` v1 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop;.<init>:(Lrx/functions/Action1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a4a10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a4a16.  v0.`rx.internal.operators.OperatorOnBackpressureDrop.onDrop` @type ^`rx.functions.Action1` := v1 @kind object;
  #L4a4a1a.  return @kind void;
}
procedure `rx.internal.operators.OperatorOnBackpressureDrop` `instance`() @signature `Lrx/internal/operators/OperatorOnBackpressureDrop;.instance:()Lrx/internal/operators/OperatorOnBackpressureDrop;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a49dc.  v0:= `@@rx.internal.operators.OperatorOnBackpressureDrop$Holder.INSTANCE` @type ^`rx.internal.operators.OperatorOnBackpressureDrop` @kind object;
  #L4a49e0.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorOnBackpressureDrop` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a4984.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a4988.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4a498e.  v1:= temp @kind object;
  #L4a4990.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorOnBackpressureDrop` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a49a4.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4a49a8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4a49ae.  v1:= new `rx.internal.operators.OperatorOnBackpressureDrop$1`;
  #L4a49b2.  call `<init>`(v1, v2, v0) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop$1;.<init>:(Lrx/internal/operators/OperatorOnBackpressureDrop;Ljava/util/concurrent/atomic/AtomicLong;)V` @kind direct;
  #L4a49b8.  call `setProducer`(v3, v1) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4a49be.  v1:= new `rx.internal.operators.OperatorOnBackpressureDrop$2`;
  #L4a49c2.  call `<init>`(v1, v2, v3, v3, v0) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop$2;.<init>:(Lrx/internal/operators/OperatorOnBackpressureDrop;Lrx/Subscriber;Lrx/Subscriber;Ljava/util/concurrent/atomic/AtomicLong;)V` @kind direct;
  #L4a49c8.  return v1 @kind object;
}
