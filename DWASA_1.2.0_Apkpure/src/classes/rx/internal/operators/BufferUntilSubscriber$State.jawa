record `rx.internal.operators.BufferUntilSubscriber$State` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class {
  `java.util.concurrent.ConcurrentLinkedQueue` `rx.internal.operators.BufferUntilSubscriber$State.buffer` @AccessFlag FINAL;
  `boolean` `rx.internal.operators.BufferUntilSubscriber$State.emitting` @AccessFlag ;
  `java.lang.Object` `rx.internal.operators.BufferUntilSubscriber$State.guard` @AccessFlag FINAL;
}
global `long` `@@rx.internal.operators.BufferUntilSubscriber$State.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.internal.operators.BufferUntilSubscriber$State` v1 @kind this) @signature `Lrx/internal/operators/BufferUntilSubscriber$State;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L49399c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4939a2.  v0:= new `java.lang.Object`;
  #L4939a6.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4939ac.  v1.`rx.internal.operators.BufferUntilSubscriber$State.guard` @type ^`java.lang.Object` := v0 @kind object;
  #L4939b0.  v0:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L4939b4.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L4939ba.  v1.`rx.internal.operators.BufferUntilSubscriber$State.buffer` @type ^`java.util.concurrent.ConcurrentLinkedQueue` := v0 @kind object;
  #L4939be.  return @kind void;
}
procedure `boolean` `casObserverRef`(`rx.internal.operators.BufferUntilSubscriber$State` v0 @kind this, `rx.Observer` v1 @kind object, `rx.Observer` v2 @kind object) @signature `Lrx/internal/operators/BufferUntilSubscriber$State;.casObserverRef:(Lrx/Observer;Lrx/Observer;)Z` @AccessFlag  {
    temp;

  #L493980.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Lrx/internal/operators/BufferUntilSubscriber$State;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L493986.  v1:= temp;
  #L493988.  return v1;
}
