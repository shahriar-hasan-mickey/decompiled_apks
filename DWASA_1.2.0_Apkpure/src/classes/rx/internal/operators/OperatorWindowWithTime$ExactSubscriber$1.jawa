record `rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OperatorWindowWithTime$ExactSubscriber` `rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.operators.OperatorWindowWithTime` `rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1.val$this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1` v0 @kind this, `rx.internal.operators.OperatorWindowWithTime$ExactSubscriber` v1 @kind object, `rx.internal.operators.OperatorWindowWithTime` v2 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithTime$ExactSubscriber$1;.<init>:(Lrx/internal/operators/OperatorWindowWithTime$ExactSubscriber;Lrx/internal/operators/OperatorWindowWithTime;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ad8e8.  v0.`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1.this$1` @type ^`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber` := v1 @kind object;
  #L4ad8ec.  v0.`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1.val$this$0` @type ^`rx.internal.operators.OperatorWindowWithTime` := v2 @kind object;
  #L4ad8f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ad8f6.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithTime$ExactSubscriber$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad908.  v0:= v1.`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1.this$1` @type ^`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber` @kind object;
  #L4ad90c.  v0:= v0.`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber.state` @type ^`rx.internal.operators.OperatorWindowWithTime$State` @kind object;
  #L4ad910.  v0:= v0.`rx.internal.operators.OperatorWindowWithTime$State.consumer` @type ^`rx.Observer` @kind object;
  #L4ad914.  if v0 != 0 then goto L4ad922;
  #L4ad918.  v0:= v1.`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1.this$1` @type ^`rx.internal.operators.OperatorWindowWithTime$ExactSubscriber` @kind object;
  #L4ad91c.  call `unsubscribe`(v0) @signature `Lrx/internal/operators/OperatorWindowWithTime$ExactSubscriber;.unsubscribe:()V` @kind virtual;
  #L4ad922.  return @kind void;
}
