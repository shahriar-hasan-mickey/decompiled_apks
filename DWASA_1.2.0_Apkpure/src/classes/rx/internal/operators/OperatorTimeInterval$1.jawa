record `rx.internal.operators.OperatorTimeInterval$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `long` `rx.internal.operators.OperatorTimeInterval$1.lastTimestamp` @AccessFlag PRIVATE;
  `rx.internal.operators.OperatorTimeInterval` `rx.internal.operators.OperatorTimeInterval$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorTimeInterval$1.val$subscriber` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorTimeInterval$1` v0 @kind this, `rx.internal.operators.OperatorTimeInterval` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorTimeInterval$1;.<init>:(Lrx/internal/operators/OperatorTimeInterval;Lrx/Subscriber;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aabd4.  v0.`rx.internal.operators.OperatorTimeInterval$1.this$0` @type ^`rx.internal.operators.OperatorTimeInterval` := v1 @kind object;
  #L4aabd8.  v0.`rx.internal.operators.OperatorTimeInterval$1.val$subscriber` @type ^`rx.Subscriber` := v3 @kind object;
  #L4aabdc.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4aabe2.  v1:= v0.`rx.internal.operators.OperatorTimeInterval$1.this$0` @type ^`rx.internal.operators.OperatorTimeInterval` @kind object;
  #L4aabe6.  v1:= v1.`rx.internal.operators.OperatorTimeInterval.scheduler` @type ^`rx.Scheduler` @kind object;
  #L4aabea.  call temp:= `now`(v1) @signature `Lrx/Scheduler;.now:()J` @kind virtual;
  #L4aabf0.  v1:= temp @kind wide;
  #L4aabf2.  v0.`rx.internal.operators.OperatorTimeInterval$1.lastTimestamp` @type ^`long` := v1 @kind wide;
  #L4aabf6.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorTimeInterval$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorTimeInterval$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aac08.  v0:= v1.`rx.internal.operators.OperatorTimeInterval$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4aac0c.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4aac12.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorTimeInterval$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorTimeInterval$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aac24.  v0:= v1.`rx.internal.operators.OperatorTimeInterval$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4aac28.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4aac2e.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorTimeInterval$1` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lrx/internal/operators/OperatorTimeInterval$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4aac40.  v0:= v6.`rx.internal.operators.OperatorTimeInterval$1.this$0` @type ^`rx.internal.operators.OperatorTimeInterval` @kind object;
  #L4aac44.  v0:= v0.`rx.internal.operators.OperatorTimeInterval.scheduler` @type ^`rx.Scheduler` @kind object;
  #L4aac48.  call temp:= `now`(v0) @signature `Lrx/Scheduler;.now:()J` @kind virtual;
  #L4aac4e.  v0:= temp @kind wide;
  #L4aac50.  v2:= v6.`rx.internal.operators.OperatorTimeInterval$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4aac54.  v3:= new `rx.schedulers.TimeInterval`;
  #L4aac58.  v4:= v6.`rx.internal.operators.OperatorTimeInterval$1.lastTimestamp` @type ^`long` @kind wide;
  #L4aac5c.  v4:= v0 - v4 @kind long;
  #L4aac60.  call `<init>`(v3, v4, v7) @signature `Lrx/schedulers/TimeInterval;.<init>:(JLjava/lang/Object;)V` @kind direct;
  #L4aac66.  call `onNext`(v2, v3) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4aac6c.  v6.`rx.internal.operators.OperatorTimeInterval$1.lastTimestamp` @type ^`long` := v0 @kind wide;
  #L4aac70.  return @kind void;
}
