record `rx.internal.operators.CompletableOnSubscribeMergeArray` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Completable`[] `rx.internal.operators.CompletableOnSubscribeMergeArray.sources` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.CompletableOnSubscribeMergeArray` v0 @kind this, `rx.Completable`[] v1 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeArray;.<init>:([Lrx/Completable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L495198.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49519e.  v0.`rx.internal.operators.CompletableOnSubscribeMergeArray.sources` @type ^`rx.Completable`[] := v1 @kind object;
  #L4951a2.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeMergeArray` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeArray;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4951b4.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L4951b8.  call `call`(v0, v1) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeArray;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L4951be.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeMergeArray` v16 @kind this, `rx.CompletableSubscriber` v17 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeArray;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L4951d0.  v6:= v16 @kind object;
  #L4951d4.  v7:= v17 @kind object;
  #L4951d8.  v8:= new `rx.subscriptions.CompositeSubscription`;
  #L4951dc.  call `<init>`(v8) @signature `Lrx/subscriptions/CompositeSubscription;.<init>:()V` @kind direct;
  #L4951e2.  v9:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L4951e6.  v0:= v6.`rx.internal.operators.CompletableOnSubscribeMergeArray.sources` @type ^`rx.Completable`[] @kind object;
  #L4951ea.  v0:= length @variable v0;
  #L4951ec.  v10:= 1I;
  #L4951ee.  v0:= v0 + v10 @kind int;
  #L4951f0.  call `<init>`(v9, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L4951f6.  v11:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4951fa.  call `<init>`(v11) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L495200.  call `onSubscribe`(v7, v8) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L495206.  v12:= v6.`rx.internal.operators.CompletableOnSubscribeMergeArray.sources` @type ^`rx.Completable`[] @kind object;
  #L49520a.  v13:= length @variable v12;
  #L49520c.  v14:= 0I;
  #L49520e.  v15:= 0I;
  #L495210.  if v15 >= v13 then goto L495286;
  #L495214.  v5:= v12[v15] @kind object;
  #L495218.  call temp:= `isUnsubscribed`(v8) @signature `Lrx/subscriptions/CompositeSubscription;.isUnsubscribed:()Z` @kind virtual;
  #L49521e.  v0:= temp;
  #L495220.  if v0 == 0 then goto L495226;
  #L495224.  return @kind void;
  #L495226.  if v5 != 0 then goto L495258;
  #L49522a.  call `unsubscribe`(v8) @signature `Lrx/subscriptions/CompositeSubscription;.unsubscribe:()V` @kind virtual;
  #L495230.  v0:= new `java.lang.NullPointerException`;
  #L495234.  v1:= "A completable source is null" @kind object;
  #L495238.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49523e.  call temp:= `compareAndSet`(v11, v14, v10) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L495244.  v1:= temp;
  #L495246.  if v1 == 0 then goto L495252;
  #L49524a.  call `onError`(v7, v0) @signature `Lrx/CompletableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L495250.  return @kind void;
  #L495252.  call `onError`(v0) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L495258.  v4:= new `rx.internal.operators.CompletableOnSubscribeMergeArray$1`;
  #L49525c.  v0:= v4 @kind object;
  #L49525e.  v1:= v16 @kind object;
  #L495262.  v2:= v8 @kind object;
  #L495264.  v3:= v11 @kind object;
  #L495266.  v10:= v4 @kind object;
  #L495268.  v4:= v17 @kind object;
  #L49526c.  v14:= v5 @kind object;
  #L49526e.  v5:= v9 @kind object;
  #L495270.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lrx/internal/operators/CompletableOnSubscribeMergeArray$1;.<init>:(Lrx/internal/operators/CompletableOnSubscribeMergeArray;Lrx/subscriptions/CompositeSubscription;Ljava/util/concurrent/atomic/AtomicBoolean;Lrx/CompletableSubscriber;Ljava/util/concurrent/atomic/AtomicInteger;)V` @kind direct;
  #L495276.  call `unsafeSubscribe`(v14, v10) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L49527c.  v15:= v15 + 1;
  #L495280.  v10:= 1I;
  #L495282.  v14:= 0I;
  #L495284.  goto L495210;
  #L495286.  call temp:= `decrementAndGet`(v9) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L49528c.  v0:= temp;
  #L49528e.  if v0 != 0 then goto L4952a8;
  #L495292.  v0:= 0I;
  #L495294.  v1:= 1I;
  #L495296.  call temp:= `compareAndSet`(v11, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L49529c.  v0:= temp;
  #L49529e.  if v0 == 0 then goto L4952a8;
  #L4952a2.  call `onCompleted`(v17) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L4952a8.  return @kind void;
}
