record `rx.internal.operators.OperatorMapPair$OuterInnerMapper` @kind class @AccessFlag FINAL extends `rx.functions.Func1` @kind interface {
  `java.lang.Object` `rx.internal.operators.OperatorMapPair$OuterInnerMapper.outer` @AccessFlag FINAL;
  `rx.functions.Func2` `rx.internal.operators.OperatorMapPair$OuterInnerMapper.resultSelector` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorMapPair$OuterInnerMapper` v0 @kind this, `java.lang.Object` v1 @kind object, `rx.functions.Func2` v2 @kind object) @signature `Lrx/internal/operators/OperatorMapPair$OuterInnerMapper;.<init>:(Ljava/lang/Object;Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a270c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a2712.  v0.`rx.internal.operators.OperatorMapPair$OuterInnerMapper.outer` @type ^`java.lang.Object` := v1 @kind object;
  #L4a2716.  v0.`rx.internal.operators.OperatorMapPair$OuterInnerMapper.resultSelector` @type ^`rx.functions.Func2` := v2 @kind object;
  #L4a271a.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorMapPair$OuterInnerMapper` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OperatorMapPair$OuterInnerMapper;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a26e8.  v0:= v2.`rx.internal.operators.OperatorMapPair$OuterInnerMapper.resultSelector` @type ^`rx.functions.Func2` @kind object;
  #L4a26ec.  v1:= v2.`rx.internal.operators.OperatorMapPair$OuterInnerMapper.outer` @type ^`java.lang.Object` @kind object;
  #L4a26f0.  call temp:= `call`(v0, v1, v3) @signature `Lrx/functions/Func2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4a26f6.  v3:= temp @kind object;
  #L4a26f8.  return v3 @kind object;
}
