record `rx.internal.operators.CompletableOnSubscribeConcat` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Completable$OnSubscribe` @kind interface {
  `int` `rx.internal.operators.CompletableOnSubscribeConcat.prefetch` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.CompletableOnSubscribeConcat.sources` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.CompletableOnSubscribeConcat` v0 @kind this, `rx.Observable` v1 @kind object, `int` v2 ) @signature `Lrx/internal/operators/CompletableOnSubscribeConcat;.<init>:(Lrx/Observable;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L494cb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L494cbe.  v0.`rx.internal.operators.CompletableOnSubscribeConcat.sources` @type ^`rx.Observable` := v1 @kind object;
  #L494cc2.  v0.`rx.internal.operators.CompletableOnSubscribeConcat.prefetch` @type ^`int` := v2;
  #L494cc6.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeConcat` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeConcat;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L494cd8.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L494cdc.  call `call`(v0, v1) @signature `Lrx/internal/operators/CompletableOnSubscribeConcat;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L494ce2.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.CompletableOnSubscribeConcat` v2 @kind this, `rx.CompletableSubscriber` v3 @kind object) @signature `Lrx/internal/operators/CompletableOnSubscribeConcat;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L494cf4.  v0:= new `rx.internal.operators.CompletableOnSubscribeConcat$CompletableConcatSubscriber`;
  #L494cf8.  v1:= v2.`rx.internal.operators.CompletableOnSubscribeConcat.prefetch` @type ^`int`;
  #L494cfc.  call `<init>`(v0, v3, v1) @signature `Lrx/internal/operators/CompletableOnSubscribeConcat$CompletableConcatSubscriber;.<init>:(Lrx/CompletableSubscriber;I)V` @kind direct;
  #L494d02.  call `onSubscribe`(v3, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L494d08.  v3:= v2.`rx.internal.operators.CompletableOnSubscribeConcat.sources` @type ^`rx.Observable` @kind object;
  #L494d0c.  call temp:= `subscribe`(v3, v0) @signature `Lrx/Observable;.subscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L494d12.  return @kind void;
}
