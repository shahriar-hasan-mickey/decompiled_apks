record `rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `boolean` `rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.done` @AccessFlag ;
  `rx.internal.operators.OperatorWindowWithObservableFactory$SourceSubscriber` `rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.sub` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber` v0 @kind this, `rx.internal.operators.OperatorWindowWithObservableFactory$SourceSubscriber` v1 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithObservableFactory$BoundarySubscriber;.<init>:(Lrx/internal/operators/OperatorWindowWithObservableFactory$SourceSubscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ac13c.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4ac142.  v0.`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.sub` @type ^`rx.internal.operators.OperatorWindowWithObservableFactory$SourceSubscriber` := v1 @kind object;
  #L4ac146.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber` v1 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithObservableFactory$BoundarySubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ac158.  v0:= v1.`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.done` @type ^`boolean` @kind boolean;
  #L4ac15c.  if v0 != 0 then goto L4ac170;
  #L4ac160.  v0:= 1I;
  #L4ac162.  v1.`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4ac166.  v0:= v1.`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.sub` @type ^`rx.internal.operators.OperatorWindowWithObservableFactory$SourceSubscriber` @kind object;
  #L4ac16a.  call `onCompleted`(v0) @signature `Lrx/internal/operators/OperatorWindowWithObservableFactory$SourceSubscriber;.onCompleted:()V` @kind virtual;
  #L4ac170.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithObservableFactory$BoundarySubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ac184.  v0:= v1.`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.sub` @type ^`rx.internal.operators.OperatorWindowWithObservableFactory$SourceSubscriber` @kind object;
  #L4ac188.  call `onError`(v0, v2) @signature `Lrx/internal/operators/OperatorWindowWithObservableFactory$SourceSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ac18e.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithObservableFactory$BoundarySubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4ac1a0.  v1:= v0.`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.done` @type ^`boolean` @kind boolean;
  #L4ac1a4.  if v1 != 0 then goto L4ac1b8;
  #L4ac1a8.  v1:= 1I;
  #L4ac1aa.  v0.`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.done` @type ^`boolean` := v1 @kind boolean;
  #L4ac1ae.  v1:= v0.`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber.sub` @type ^`rx.internal.operators.OperatorWindowWithObservableFactory$SourceSubscriber` @kind object;
  #L4ac1b2.  call `replaceWindow`(v1) @signature `Lrx/internal/operators/OperatorWindowWithObservableFactory$SourceSubscriber;.replaceWindow:()V` @kind virtual;
  #L4ac1b8.  return @kind void;
}
procedure `void` `onStart`(`rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber` v2 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithObservableFactory$BoundarySubscriber;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ac1cc.  v0:= 9223372036854775807L;
  #L4ac1d6.  call `request`(v2, v0) @signature `Lrx/internal/operators/OperatorWindowWithObservableFactory$BoundarySubscriber;.request:(J)V` @kind virtual;
  #L4ac1dc.  return @kind void;
}
