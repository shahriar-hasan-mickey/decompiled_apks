record `rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector` `rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1.val$child` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1` v0 @kind this, `rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector` v1 @kind object, `rx.Subscriber` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector$1;.<init>:(Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L497d60.  v0.`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1.this$0` @type ^`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector` := v1 @kind object;
  #L497d64.  v0.`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1.val$child` @type ^`rx.Subscriber` := v2 @kind object;
  #L497d68.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L497d6e.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1` v2 @kind this) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L497d80.  v0:= v2.`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1.this$0` @type ^`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector` @kind object;
  #L497d84.  v0:= v0.`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector.source` @type ^`rx.Observable` @kind object;
  #L497d88.  v1:= v2.`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L497d8c.  call temp:= `wrap`(v1) @signature `Lrx/observers/Subscribers;.wrap:(Lrx/Subscriber;)Lrx/Subscriber;` @kind static;
  #L497d92.  v1:= temp @kind object;
  #L497d94.  call temp:= `unsafeSubscribe`(v0, v1) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L497d9a.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L497dac.  v0:= v1.`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L497db0.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L497db6.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L497dc8.  return @kind void;
}
