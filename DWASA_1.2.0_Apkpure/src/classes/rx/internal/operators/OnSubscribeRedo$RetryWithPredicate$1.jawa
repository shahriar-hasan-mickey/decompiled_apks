record `rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1` @kind class @AccessFlag  extends `rx.functions.Func2` @kind interface {
  `rx.internal.operators.OnSubscribeRedo$RetryWithPredicate` `rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1` v0 @kind this, `rx.internal.operators.OnSubscribeRedo$RetryWithPredicate` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate$1;.<init>:(Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49c318.  v0.`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1.this$0` @type ^`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate` := v1 @kind object;
  #L49c31c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49c322.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate$1;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49c288.  v1:= (`rx.Notification`) v1 @kind object;
  #L49c28c.  v2:= (`rx.Notification`) v2 @kind object;
  #L49c290.  call temp:= `call`(v0, v1, v2) @signature `Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate$1;.call:(Lrx/Notification;Lrx/Notification;)Lrx/Notification;` @kind virtual;
  #L49c296.  v1:= temp @kind object;
  #L49c298.  return v1 @kind object;
}
procedure `rx.Notification` `call`(`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1` v3 @kind this, `rx.Notification` v4 @kind object, `rx.Notification` v5 @kind object) @signature `Lrx/internal/operators/OnSubscribeRedo$RetryWithPredicate$1;.call:(Lrx/Notification;Lrx/Notification;)Lrx/Notification;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49c2ac.  call temp:= `getValue`(v4) @signature `Lrx/Notification;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L49c2b2.  v4:= temp @kind object;
  #L49c2b4.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L49c2b8.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L49c2be.  v4:= temp;
  #L49c2c0.  v0:= v3.`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1.this$0` @type ^`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate` @kind object;
  #L49c2c4.  v0:= v0.`rx.internal.operators.OnSubscribeRedo$RetryWithPredicate.predicate` @type ^`rx.functions.Func2` @kind object;
  #L49c2c8.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c2ce.  v1:= temp @kind object;
  #L49c2d0.  call temp:= `getThrowable`(v5) @signature `Lrx/Notification;.getThrowable:()Ljava/lang/Throwable;` @kind virtual;
  #L49c2d6.  v2:= temp @kind object;
  #L49c2d8.  call temp:= `call`(v0, v1, v2) @signature `Lrx/functions/Func2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49c2de.  v0:= temp @kind object;
  #L49c2e0.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L49c2e4.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L49c2ea.  v0:= temp;
  #L49c2ec.  if v0 == 0 then goto L49c306;
  #L49c2f0.  v4:= v4 + 1;
  #L49c2f4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c2fa.  v4:= temp @kind object;
  #L49c2fc.  call temp:= `createOnNext`(v4) @signature `Lrx/Notification;.createOnNext:(Ljava/lang/Object;)Lrx/Notification;` @kind static;
  #L49c302.  v4:= temp @kind object;
  #L49c304.  return v4 @kind object;
  #L49c306.  return v5 @kind object;
}
