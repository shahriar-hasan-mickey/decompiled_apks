record `rx.internal.operators.OperatorOnBackpressureDrop$2` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `boolean` `rx.internal.operators.OperatorOnBackpressureDrop$2.done` @AccessFlag ;
  `rx.internal.operators.OperatorOnBackpressureDrop` `rx.internal.operators.OperatorOnBackpressureDrop$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorOnBackpressureDrop$2.val$child` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicLong` `rx.internal.operators.OperatorOnBackpressureDrop$2.val$requested` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorOnBackpressureDrop$2` v0 @kind this, `rx.internal.operators.OperatorOnBackpressureDrop` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Subscriber` v3 @kind object, `java.util.concurrent.atomic.AtomicLong` v4 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop$2;.<init>:(Lrx/internal/operators/OperatorOnBackpressureDrop;Lrx/Subscriber;Lrx/Subscriber;Ljava/util/concurrent/atomic/AtomicLong;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a4828.  v0.`rx.internal.operators.OperatorOnBackpressureDrop$2.this$0` @type ^`rx.internal.operators.OperatorOnBackpressureDrop` := v1 @kind object;
  #L4a482c.  v0.`rx.internal.operators.OperatorOnBackpressureDrop$2.val$child` @type ^`rx.Subscriber` := v3 @kind object;
  #L4a4830.  v0.`rx.internal.operators.OperatorOnBackpressureDrop$2.val$requested` @type ^`java.util.concurrent.atomic.AtomicLong` := v4 @kind object;
  #L4a4834.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4a483a.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorOnBackpressureDrop$2` v1 @kind this) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop$2;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a484c.  v0:= v1.`rx.internal.operators.OperatorOnBackpressureDrop$2.done` @type ^`boolean` @kind boolean;
  #L4a4850.  if v0 != 0 then goto L4a4864;
  #L4a4854.  v0:= 1I;
  #L4a4856.  v1.`rx.internal.operators.OperatorOnBackpressureDrop$2.done` @type ^`boolean` := v0 @kind boolean;
  #L4a485a.  v0:= v1.`rx.internal.operators.OperatorOnBackpressureDrop$2.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a485e.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4a4864.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorOnBackpressureDrop$2` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop$2;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a4878.  v0:= v1.`rx.internal.operators.OperatorOnBackpressureDrop$2.done` @type ^`boolean` @kind boolean;
  #L4a487c.  if v0 != 0 then goto L4a4892;
  #L4a4880.  v0:= 1I;
  #L4a4882.  v1.`rx.internal.operators.OperatorOnBackpressureDrop$2.done` @type ^`boolean` := v0 @kind boolean;
  #L4a4886.  v0:= v1.`rx.internal.operators.OperatorOnBackpressureDrop$2.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a488a.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a4890.  goto L4a4898;
  #L4a4892.  call `onError`(v2) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a4898.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorOnBackpressureDrop$2` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop$2;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4a48ac.  v0:= v5.`rx.internal.operators.OperatorOnBackpressureDrop$2.done` @type ^`boolean` @kind boolean;
  #L4a48b0.  if v0 == 0 then goto L4a48b6;
  #L4a48b4.  return @kind void;
  #L4a48b6.  v0:= v5.`rx.internal.operators.OperatorOnBackpressureDrop$2.val$requested` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a48ba.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4a48c0.  v0:= temp @kind wide;
  #L4a48c2.  v2:= 0L;
  #L4a48c6.  v4:= lcmp(v0, v2);
  #L4a48ca.  if v4 <= 0 then goto L4a48e4;
  #L4a48ce.  v0:= v5.`rx.internal.operators.OperatorOnBackpressureDrop$2.val$child` @type ^`rx.Subscriber` @kind object;
  #L4a48d2.  call `onNext`(v0, v6) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4a48d8.  v6:= v5.`rx.internal.operators.OperatorOnBackpressureDrop$2.val$requested` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4a48dc.  call temp:= `decrementAndGet`(v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.decrementAndGet:()J` @kind virtual;
  #L4a48e2.  goto L4a4908;
  #L4a48e4.  v0:= v5.`rx.internal.operators.OperatorOnBackpressureDrop$2.this$0` @type ^`rx.internal.operators.OperatorOnBackpressureDrop` @kind object;
  #L4a48e8.  v0:= v0.`rx.internal.operators.OperatorOnBackpressureDrop.onDrop` @type ^`rx.functions.Action1` @kind object;
  #L4a48ec.  if v0 == 0 then goto L4a4908;
  #L4a48f0.  v0:= v5.`rx.internal.operators.OperatorOnBackpressureDrop$2.this$0` @type ^`rx.internal.operators.OperatorOnBackpressureDrop` @kind object;
  #L4a48f4.  v0:= v0.`rx.internal.operators.OperatorOnBackpressureDrop.onDrop` @type ^`rx.functions.Action1` @kind object;
  #L4a48f8.  call `call`(v0, v6) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4a48fe.  goto L4a4908;
  #L4a4900.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a4902.  call `throwOrReport`(v0, v5, v6) @signature `Lrx/exceptions/Exceptions;.throwOrReport:(Ljava/lang/Throwable;Lrx/Observer;Ljava/lang/Object;)V` @kind static;
  #L4a4908.  return @kind void;
  catch `java.lang.Throwable` @[L4a48f0..L4a48fe] goto L4a4900;
}
procedure `void` `onStart`(`rx.internal.operators.OperatorOnBackpressureDrop$2` v2 @kind this) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop$2;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a4928.  v0:= 9223372036854775807L;
  #L4a4932.  call `request`(v2, v0) @signature `Lrx/internal/operators/OperatorOnBackpressureDrop$2;.request:(J)V` @kind virtual;
  #L4a4938.  return @kind void;
}
