record `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `boolean` `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.done` @AccessFlag ;
  `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Action0` `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.val$_self` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1` v0 @kind this, `rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` v1 @kind object, `rx.functions.Action0` v2 @kind object) @signature `Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1$1;.<init>:(Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1;Lrx/functions/Action0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a7570.  v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` := v1 @kind object;
  #L4a7574.  v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.val$_self` @type ^`rx.functions.Action0` := v2 @kind object;
  #L4a7578.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4a757e.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a7590.  v0:= v1.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.done` @type ^`boolean` @kind boolean;
  #L4a7594.  if v0 != 0 then goto L4a75b0;
  #L4a7598.  v0:= 1I;
  #L4a759a.  v1.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.done` @type ^`boolean` := v0 @kind boolean;
  #L4a759e.  v0:= v1.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind object;
  #L4a75a2.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a75a6.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.child` @type ^`rx.Subscriber` @kind object;
  #L4a75aa.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4a75b0.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a75c4.  v0:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.done` @type ^`boolean` @kind boolean;
  #L4a75c8.  if v0 != 0 then goto L4a7654;
  #L4a75cc.  v0:= 1I;
  #L4a75ce.  v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.done` @type ^`boolean` := v0 @kind boolean;
  #L4a75d2.  v0:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind object;
  #L4a75d6.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a75da.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.predicate` @type ^`rx.functions.Func2` @kind object;
  #L4a75de.  v1:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind object;
  #L4a75e2.  v1:= v1.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a75e6.  v1:= v1.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.attempts` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4a75ea.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L4a75f0.  v1:= temp;
  #L4a75f2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4a75f8.  v1:= temp @kind object;
  #L4a75fa.  call temp:= `call`(v0, v1, v3) @signature `Lrx/functions/Func2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4a7600.  v0:= temp @kind object;
  #L4a7602.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L4a7606.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4a760c.  v0:= temp;
  #L4a760e.  if v0 == 0 then goto L4a7642;
  #L4a7612.  v0:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind object;
  #L4a7616.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a761a.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.inner` @type ^`rx.Scheduler$Worker` @kind object;
  #L4a761e.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/Scheduler$Worker;.isUnsubscribed:()Z` @kind virtual;
  #L4a7624.  v0:= temp;
  #L4a7626.  if v0 != 0 then goto L4a7642;
  #L4a762a.  v3:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind object;
  #L4a762e.  v3:= v3.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a7632.  v3:= v3.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.inner` @type ^`rx.Scheduler$Worker` @kind object;
  #L4a7636.  v0:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.val$_self` @type ^`rx.functions.Action0` @kind object;
  #L4a763a.  call temp:= `schedule`(v3, v0) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;)Lrx/Subscription;` @kind virtual;
  #L4a7640.  goto L4a7654;
  #L4a7642.  v0:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind object;
  #L4a7646.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a764a.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.child` @type ^`rx.Subscriber` @kind object;
  #L4a764e.  call `onError`(v0, v3) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a7654.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a7668.  v0:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.done` @type ^`boolean` @kind boolean;
  #L4a766c.  if v0 != 0 then goto L4a7698;
  #L4a7670.  v0:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind object;
  #L4a7674.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a7678.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.child` @type ^`rx.Subscriber` @kind object;
  #L4a767c.  call `onNext`(v0, v3) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4a7682.  v3:= v2.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind object;
  #L4a7686.  v3:= v3.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a768a.  v3:= v3.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.pa` @type ^`rx.internal.producers.ProducerArbiter` @kind object;
  #L4a768e.  v0:= 1L;
  #L4a7692.  call `produced`(v3, v0) @signature `Lrx/internal/producers/ProducerArbiter;.produced:(J)V` @kind virtual;
  #L4a7698.  return @kind void;
}
procedure `void` `setProducer`(`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1` v1 @kind this, `rx.Producer` v2 @kind object) @signature `Lrx/internal/operators/OperatorRetryWithPredicate$SourceSubscriber$1$1;.setProducer:(Lrx/Producer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a76ac.  v0:= v1.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1.this$1` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1` @kind object;
  #L4a76b0.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.this$0` @type ^`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber` @kind object;
  #L4a76b4.  v0:= v0.`rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.pa` @type ^`rx.internal.producers.ProducerArbiter` @kind object;
  #L4a76b8.  call `setProducer`(v0, v2) @signature `Lrx/internal/producers/ProducerArbiter;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4a76be.  return @kind void;
}
