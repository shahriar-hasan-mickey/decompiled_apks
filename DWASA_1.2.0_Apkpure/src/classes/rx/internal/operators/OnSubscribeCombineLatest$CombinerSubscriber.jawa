record `rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `boolean` `rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.done` @AccessFlag ;
  `int` `rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.index` @AccessFlag FINAL;
  `rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator` `rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.parent` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber` v0 @kind this, `rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator` v1 @kind object, `int` v2 ) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$CombinerSubscriber;.<init>:(Lrx/internal/operators/OnSubscribeCombineLatest$LatestCoordinator;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L496cfc.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L496d02.  v0.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.parent` @type ^`rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator` := v1 @kind object;
  #L496d06.  v0.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.index` @type ^`int` := v2;
  #L496d0a.  v1:= v1.`rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator.bufferSize` @type ^`int`;
  #L496d0e.  v1:= (`long`) v1 @kind i2l;
  #L496d10.  call `request`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$CombinerSubscriber;.request:(J)V` @kind virtual;
  #L496d16.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber` v3 @kind this) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$CombinerSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L496d28.  v0:= v3.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.done` @type ^`boolean` @kind boolean;
  #L496d2c.  if v0 == 0 then goto L496d32;
  #L496d30.  return @kind void;
  #L496d32.  v0:= 1I;
  #L496d34.  v3.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L496d38.  v0:= v3.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.parent` @type ^`rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator` @kind object;
  #L496d3c.  v1:= 0I;
  #L496d3e.  v2:= v3.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.index` @type ^`int`;
  #L496d42.  call `combine`(v0, v1, v2) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$LatestCoordinator;.combine:(Ljava/lang/Object;I)V` @kind virtual;
  #L496d48.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$CombinerSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L496d5c.  v0:= v2.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.done` @type ^`boolean` @kind boolean;
  #L496d60.  if v0 == 0 then goto L496d6c;
  #L496d64.  call `onError`(v3) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L496d6a.  return @kind void;
  #L496d6c.  v0:= v2.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.parent` @type ^`rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator` @kind object;
  #L496d70.  call `onError`(v0, v3) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$LatestCoordinator;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L496d76.  v3:= 1I;
  #L496d78.  v2.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.done` @type ^`boolean` := v3 @kind boolean;
  #L496d7c.  v3:= v2.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.parent` @type ^`rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator` @kind object;
  #L496d80.  v0:= 0I;
  #L496d82.  v1:= v2.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.index` @type ^`int`;
  #L496d86.  call `combine`(v3, v0, v1) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$LatestCoordinator;.combine:(Ljava/lang/Object;I)V` @kind virtual;
  #L496d8c.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$CombinerSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L496da0.  v0:= v2.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.done` @type ^`boolean` @kind boolean;
  #L496da4.  if v0 == 0 then goto L496daa;
  #L496da8.  return @kind void;
  #L496daa.  v0:= v2.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.parent` @type ^`rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator` @kind object;
  #L496dae.  call temp:= `next`(v3) @signature `Lrx/internal/operators/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L496db4.  v3:= temp @kind object;
  #L496db6.  v1:= v2.`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber.index` @type ^`int`;
  #L496dba.  call `combine`(v0, v3, v1) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$LatestCoordinator;.combine:(Ljava/lang/Object;I)V` @kind virtual;
  #L496dc0.  return @kind void;
}
procedure `void` `requestMore`(`rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber` v0 @kind this, `long` v1 ) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$CombinerSubscriber;.requestMore:(J)V` @AccessFlag PUBLIC {
    temp;

  #L496dd4.  call `request`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$CombinerSubscriber;.request:(J)V` @kind virtual;
  #L496dda.  return @kind void;
}
