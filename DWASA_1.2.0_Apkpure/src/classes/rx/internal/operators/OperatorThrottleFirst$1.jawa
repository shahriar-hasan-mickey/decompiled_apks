record `rx.internal.operators.OperatorThrottleFirst$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `long` `rx.internal.operators.OperatorThrottleFirst$1.lastOnNext` @AccessFlag PRIVATE;
  `rx.internal.operators.OperatorThrottleFirst` `rx.internal.operators.OperatorThrottleFirst$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OperatorThrottleFirst$1.val$subscriber` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorThrottleFirst$1` v0 @kind this, `rx.internal.operators.OperatorThrottleFirst` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorThrottleFirst$1;.<init>:(Lrx/internal/operators/OperatorThrottleFirst;Lrx/Subscriber;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aaa98.  v0.`rx.internal.operators.OperatorThrottleFirst$1.this$0` @type ^`rx.internal.operators.OperatorThrottleFirst` := v1 @kind object;
  #L4aaa9c.  v0.`rx.internal.operators.OperatorThrottleFirst$1.val$subscriber` @type ^`rx.Subscriber` := v3 @kind object;
  #L4aaaa0.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4aaaa6.  v1:= -1L;
  #L4aaaaa.  v0.`rx.internal.operators.OperatorThrottleFirst$1.lastOnNext` @type ^`long` := v1 @kind wide;
  #L4aaaae.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorThrottleFirst$1` v1 @kind this) @signature `Lrx/internal/operators/OperatorThrottleFirst$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aaac0.  v0:= v1.`rx.internal.operators.OperatorThrottleFirst$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4aaac4.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4aaaca.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorThrottleFirst$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorThrottleFirst$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aaadc.  v0:= v1.`rx.internal.operators.OperatorThrottleFirst$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4aaae0.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4aaae6.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorThrottleFirst$1` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lrx/internal/operators/OperatorThrottleFirst$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4aaaf8.  v0:= v7.`rx.internal.operators.OperatorThrottleFirst$1.this$0` @type ^`rx.internal.operators.OperatorThrottleFirst` @kind object;
  #L4aaafc.  v0:= v0.`rx.internal.operators.OperatorThrottleFirst.scheduler` @type ^`rx.Scheduler` @kind object;
  #L4aab00.  call temp:= `now`(v0) @signature `Lrx/Scheduler;.now:()J` @kind virtual;
  #L4aab06.  v0:= temp @kind wide;
  #L4aab08.  v2:= v7.`rx.internal.operators.OperatorThrottleFirst$1.lastOnNext` @type ^`long` @kind wide;
  #L4aab0c.  v4:= -1L;
  #L4aab10.  v6:= lcmp(v2, v4);
  #L4aab14.  if v6 == 0 then goto L4aab2c;
  #L4aab18.  v2:= v0 - v2 @kind long;
  #L4aab1c.  v4:= v7.`rx.internal.operators.OperatorThrottleFirst$1.this$0` @type ^`rx.internal.operators.OperatorThrottleFirst` @kind object;
  #L4aab20.  v4:= v4.`rx.internal.operators.OperatorThrottleFirst.timeInMilliseconds` @type ^`long` @kind wide;
  #L4aab24.  v6:= lcmp(v2, v4);
  #L4aab28.  if v6 < 0 then goto L4aab3a;
  #L4aab2c.  v7.`rx.internal.operators.OperatorThrottleFirst$1.lastOnNext` @type ^`long` := v0 @kind wide;
  #L4aab30.  v0:= v7.`rx.internal.operators.OperatorThrottleFirst$1.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L4aab34.  call `onNext`(v0, v8) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4aab3a.  return @kind void;
}
procedure `void` `onStart`(`rx.internal.operators.OperatorThrottleFirst$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorThrottleFirst$1;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aab4c.  v0:= 9223372036854775807L;
  #L4aab56.  call `request`(v2, v0) @signature `Lrx/internal/operators/OperatorThrottleFirst$1;.request:(J)V` @kind virtual;
  #L4aab5c.  return @kind void;
}
