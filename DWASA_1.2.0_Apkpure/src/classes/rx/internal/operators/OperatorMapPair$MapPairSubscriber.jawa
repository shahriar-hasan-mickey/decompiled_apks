record `rx.internal.operators.OperatorMapPair$MapPairSubscriber` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `rx.Subscriber` `rx.internal.operators.OperatorMapPair$MapPairSubscriber.actual` @AccessFlag FINAL;
  `rx.functions.Func1` `rx.internal.operators.OperatorMapPair$MapPairSubscriber.collectionSelector` @AccessFlag FINAL;
  `boolean` `rx.internal.operators.OperatorMapPair$MapPairSubscriber.done` @AccessFlag ;
  `rx.functions.Func2` `rx.internal.operators.OperatorMapPair$MapPairSubscriber.resultSelector` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorMapPair$MapPairSubscriber` v0 @kind this, `rx.Subscriber` v1 @kind object, `rx.functions.Func1` v2 @kind object, `rx.functions.Func2` v3 @kind object) @signature `Lrx/internal/operators/OperatorMapPair$MapPairSubscriber;.<init>:(Lrx/Subscriber;Lrx/functions/Func1;Lrx/functions/Func2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a25e0.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4a25e6.  v0.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.actual` @type ^`rx.Subscriber` := v1 @kind object;
  #L4a25ea.  v0.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.collectionSelector` @type ^`rx.functions.Func1` := v2 @kind object;
  #L4a25ee.  v0.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.resultSelector` @type ^`rx.functions.Func2` := v3 @kind object;
  #L4a25f2.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorMapPair$MapPairSubscriber` v1 @kind this) @signature `Lrx/internal/operators/OperatorMapPair$MapPairSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a2604.  v0:= v1.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.done` @type ^`boolean` @kind boolean;
  #L4a2608.  if v0 == 0 then goto L4a260e;
  #L4a260c.  return @kind void;
  #L4a260e.  v0:= v1.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.actual` @type ^`rx.Subscriber` @kind object;
  #L4a2612.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4a2618.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorMapPair$MapPairSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorMapPair$MapPairSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a262c.  v0:= v1.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.done` @type ^`boolean` @kind boolean;
  #L4a2630.  if v0 == 0 then goto L4a263c;
  #L4a2634.  call `onError`(v2) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a263a.  return @kind void;
  #L4a263c.  v0:= 1I;
  #L4a263e.  v1.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4a2642.  v0:= v1.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.actual` @type ^`rx.Subscriber` @kind object;
  #L4a2646.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a264c.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorMapPair$MapPairSubscriber` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lrx/internal/operators/OperatorMapPair$MapPairSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a2660.  v0:= v4.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.collectionSelector` @type ^`rx.functions.Func1` @kind object;
  #L4a2664.  call temp:= `call`(v0, v5) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4a266a.  v0:= temp @kind object;
  #L4a266c.  v0:= (`rx.Observable`) v0 @kind object;
  #L4a2670.  v1:= v4.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.actual` @type ^`rx.Subscriber` @kind object;
  #L4a2674.  v2:= new `rx.internal.operators.OperatorMapPair$OuterInnerMapper`;
  #L4a2678.  v3:= v4.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.resultSelector` @type ^`rx.functions.Func2` @kind object;
  #L4a267c.  call `<init>`(v2, v5, v3) @signature `Lrx/internal/operators/OperatorMapPair$OuterInnerMapper;.<init>:(Ljava/lang/Object;Lrx/functions/Func2;)V` @kind direct;
  #L4a2682.  call temp:= `map`(v0, v2) @signature `Lrx/Observable;.map:(Lrx/functions/Func1;)Lrx/Observable;` @kind virtual;
  #L4a2688.  v5:= temp @kind object;
  #L4a268a.  call `onNext`(v1, v5) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4a2690.  return @kind void;
  #L4a2692.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a2694.  call `throwIfFatal`(v0) @signature `Lrx/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a269a.  call `unsubscribe`(v4) @signature `Lrx/internal/operators/OperatorMapPair$MapPairSubscriber;.unsubscribe:()V` @kind virtual;
  #L4a26a0.  call temp:= `addValueAsLastCause`(v0, v5) @signature `Lrx/exceptions/OnErrorThrowable;.addValueAsLastCause:(Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L4a26a6.  v5:= temp @kind object;
  #L4a26a8.  call `onError`(v4, v5) @signature `Lrx/internal/operators/OperatorMapPair$MapPairSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4a26ae.  return @kind void;
  catch `java.lang.Throwable` @[L4a2660..L4a2670] goto L4a2692;
}
procedure `void` `setProducer`(`rx.internal.operators.OperatorMapPair$MapPairSubscriber` v1 @kind this, `rx.Producer` v2 @kind object) @signature `Lrx/internal/operators/OperatorMapPair$MapPairSubscriber;.setProducer:(Lrx/Producer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a26cc.  v0:= v1.`rx.internal.operators.OperatorMapPair$MapPairSubscriber.actual` @type ^`rx.Subscriber` @kind object;
  #L4a26d0.  call `setProducer`(v0, v2) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4a26d6.  return @kind void;
}
