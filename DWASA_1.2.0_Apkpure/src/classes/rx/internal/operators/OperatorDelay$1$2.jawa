record `rx.internal.operators.OperatorDelay$1$2` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OperatorDelay$1` `rx.internal.operators.OperatorDelay$1$2.this$1` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Throwable` `rx.internal.operators.OperatorDelay$1$2.val$e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDelay$1$2` v0 @kind this, `rx.internal.operators.OperatorDelay$1` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorDelay$1$2;.<init>:(Lrx/internal/operators/OperatorDelay$1;Ljava/lang/Throwable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49fe90.  v0.`rx.internal.operators.OperatorDelay$1$2.this$1` @type ^`rx.internal.operators.OperatorDelay$1` := v1 @kind object;
  #L49fe94.  v0.`rx.internal.operators.OperatorDelay$1$2.val$e` @type ^`java.lang.Throwable` := v2 @kind object;
  #L49fe98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49fe9e.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OperatorDelay$1$2` v2 @kind this) @signature `Lrx/internal/operators/OperatorDelay$1$2;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49feb0.  v0:= v2.`rx.internal.operators.OperatorDelay$1$2.this$1` @type ^`rx.internal.operators.OperatorDelay$1` @kind object;
  #L49feb4.  v0:= v0.`rx.internal.operators.OperatorDelay$1.done` @type ^`boolean` @kind boolean;
  #L49feb8.  if v0 != 0 then goto L49fee2;
  #L49febc.  v0:= v2.`rx.internal.operators.OperatorDelay$1$2.this$1` @type ^`rx.internal.operators.OperatorDelay$1` @kind object;
  #L49fec0.  v1:= 1I;
  #L49fec2.  v0.`rx.internal.operators.OperatorDelay$1.done` @type ^`boolean` := v1 @kind boolean;
  #L49fec6.  v0:= v0.`rx.internal.operators.OperatorDelay$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L49feca.  v1:= v2.`rx.internal.operators.OperatorDelay$1$2.val$e` @type ^`java.lang.Throwable` @kind object;
  #L49fece.  call `onError`(v0, v1) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49fed4.  v0:= v2.`rx.internal.operators.OperatorDelay$1$2.this$1` @type ^`rx.internal.operators.OperatorDelay$1` @kind object;
  #L49fed8.  v0:= v0.`rx.internal.operators.OperatorDelay$1.val$worker` @type ^`rx.Scheduler$Worker` @kind object;
  #L49fedc.  call `unsubscribe`(v0) @signature `Lrx/Scheduler$Worker;.unsubscribe:()V` @kind virtual;
  #L49fee2.  return @kind void;
}
