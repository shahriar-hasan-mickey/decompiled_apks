record `rx.internal.operators.OperatorReplay$Node` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class {
  `long` `rx.internal.operators.OperatorReplay$Node.index` @AccessFlag FINAL;
  `java.lang.Object` `rx.internal.operators.OperatorReplay$Node.value` @AccessFlag FINAL;
}
global `long` `@@rx.internal.operators.OperatorReplay$Node.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`rx.internal.operators.OperatorReplay$Node` v0 @kind this, `java.lang.Object` v1 @kind object, `long` v2 ) @signature `Lrx/internal/operators/OperatorReplay$Node;.<init>:(Ljava/lang/Object;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a68b4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4a68ba.  v0.`rx.internal.operators.OperatorReplay$Node.value` @type ^`java.lang.Object` := v1 @kind object;
  #L4a68be.  v0.`rx.internal.operators.OperatorReplay$Node.index` @type ^`long` := v2 @kind wide;
  #L4a68c2.  return @kind void;
}
