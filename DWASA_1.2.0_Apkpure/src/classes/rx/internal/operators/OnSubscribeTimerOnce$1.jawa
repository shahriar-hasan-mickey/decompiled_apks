record `rx.internal.operators.OnSubscribeTimerOnce$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.internal.operators.OnSubscribeTimerOnce` `rx.internal.operators.OnSubscribeTimerOnce$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `rx.internal.operators.OnSubscribeTimerOnce$1.val$child` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeTimerOnce$1` v0 @kind this, `rx.internal.operators.OnSubscribeTimerOnce` v1 @kind object, `rx.Subscriber` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeTimerOnce$1;.<init>:(Lrx/internal/operators/OnSubscribeTimerOnce;Lrx/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49d26c.  v0.`rx.internal.operators.OnSubscribeTimerOnce$1.this$0` @type ^`rx.internal.operators.OnSubscribeTimerOnce` := v1 @kind object;
  #L49d270.  v0.`rx.internal.operators.OnSubscribeTimerOnce$1.val$child` @type ^`rx.Subscriber` := v2 @kind object;
  #L49d274.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49d27a.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeTimerOnce$1` v3 @kind this) @signature `Lrx/internal/operators/OnSubscribeTimerOnce$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49d28c.  v0:= v3.`rx.internal.operators.OnSubscribeTimerOnce$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L49d290.  v1:= 0L;
  #L49d294.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L49d29a.  v1:= temp @kind object;
  #L49d29c.  call `onNext`(v0, v1) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L49d2a2.  v0:= v3.`rx.internal.operators.OnSubscribeTimerOnce$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L49d2a6.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L49d2ac.  return @kind void;
  #L49d2ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49d2b0.  v1:= v3.`rx.internal.operators.OnSubscribeTimerOnce$1.val$child` @type ^`rx.Subscriber` @kind object;
  #L49d2b4.  call `throwOrReport`(v0, v1) @signature `Lrx/exceptions/Exceptions;.throwOrReport:(Ljava/lang/Throwable;Lrx/Observer;)V` @kind static;
  #L49d2ba.  return @kind void;
  catch `java.lang.Throwable` @[L49d28c..L49d2a2] goto L49d2ae;
}
