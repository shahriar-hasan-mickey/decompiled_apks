record `rx.internal.operators.OnSubscribeAmb$AmbSubscriber` @kind class @AccessFlag FINAL extends `rx.Subscriber` @kind class {
  `boolean` `rx.internal.operators.OnSubscribeAmb$AmbSubscriber.chosen` @AccessFlag PRIVATE;
  `rx.internal.operators.OnSubscribeAmb$Selection` `rx.internal.operators.OnSubscribeAmb$AmbSubscriber.selection` @AccessFlag PRIVATE_FINAL;
  `rx.Subscriber` `rx.internal.operators.OnSubscribeAmb$AmbSubscriber.subscriber` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeAmb$AmbSubscriber` v0 @kind this, `long` v1 , `rx.Subscriber` v3 @kind object, `rx.internal.operators.OnSubscribeAmb$Selection` v4 @kind object) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.<init>:(JLrx/Subscriber;Lrx/internal/operators/OnSubscribeAmb$Selection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49665c.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L496662.  v0.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.subscriber` @type ^`rx.Subscriber` := v3 @kind object;
  #L496666.  v0.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.selection` @type ^`rx.internal.operators.OnSubscribeAmb$Selection` := v4 @kind object;
  #L49666a.  call `request`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.request:(J)V` @kind virtual;
  #L496670.  return @kind void;
}
procedure `void` `access$000`(`rx.internal.operators.OnSubscribeAmb$AmbSubscriber` v0 @kind object, `long` v1 ) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.access$000:(Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;J)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L496684.  call `requestMore`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.requestMore:(J)V` @kind direct;
  #L49668a.  return @kind void;
}
procedure `boolean` `isSelected`(`rx.internal.operators.OnSubscribeAmb$AmbSubscriber` v3 @kind this) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.isSelected:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4965f8.  v0:= v3.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.chosen` @type ^`boolean` @kind boolean;
  #L4965fc.  v1:= 1I;
  #L4965fe.  if v0 == 0 then goto L496604;
  #L496602.  return v1;
  #L496604.  v0:= v3.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.selection` @type ^`rx.internal.operators.OnSubscribeAmb$Selection` @kind object;
  #L496608.  call temp:= `get`(v0) @signature `Lrx/internal/operators/OnSubscribeAmb$Selection;.get:()Ljava/lang/Object;` @kind virtual;
  #L49660e.  v0:= temp @kind object;
  #L496610.  if v0 != v3 then goto L49661a;
  #L496614.  v3.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.chosen` @type ^`boolean` := v1 @kind boolean;
  #L496618.  return v1;
  #L49661a.  v0:= v3.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.selection` @type ^`rx.internal.operators.OnSubscribeAmb$Selection` @kind object;
  #L49661e.  v2:= 0I;
  #L496620.  call temp:= `compareAndSet`(v0, v2, v3) @signature `Lrx/internal/operators/OnSubscribeAmb$Selection;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L496626.  v0:= temp;
  #L496628.  if v0 == 0 then goto L49663c;
  #L49662c.  v0:= v3.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.selection` @type ^`rx.internal.operators.OnSubscribeAmb$Selection` @kind object;
  #L496630.  call `unsubscribeOthers`(v0, v3) @signature `Lrx/internal/operators/OnSubscribeAmb$Selection;.unsubscribeOthers:(Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;)V` @kind virtual;
  #L496636.  v3.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.chosen` @type ^`boolean` := v1 @kind boolean;
  #L49663a.  return v1;
  #L49663c.  v0:= v3.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.selection` @type ^`rx.internal.operators.OnSubscribeAmb$Selection` @kind object;
  #L496640.  call `unsubscribeLosers`(v0) @signature `Lrx/internal/operators/OnSubscribeAmb$Selection;.unsubscribeLosers:()V` @kind virtual;
  #L496646.  v0:= 0I;
  #L496648.  return v0;
}
procedure `void` `requestMore`(`rx.internal.operators.OnSubscribeAmb$AmbSubscriber` v0 @kind this, `long` v1 ) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.requestMore:(J)V` @AccessFlag PRIVATE {
    temp;

  #L496714.  call `request`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.request:(J)V` @kind virtual;
  #L49671a.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OnSubscribeAmb$AmbSubscriber` v1 @kind this) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49669c.  call temp:= `isSelected`(v1) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.isSelected:()Z` @kind direct;
  #L4966a2.  v0:= temp;
  #L4966a4.  if v0 == 0 then goto L4966b2;
  #L4966a8.  v0:= v1.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.subscriber` @type ^`rx.Subscriber` @kind object;
  #L4966ac.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L4966b2.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OnSubscribeAmb$AmbSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4966c4.  call temp:= `isSelected`(v1) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.isSelected:()Z` @kind direct;
  #L4966ca.  v0:= temp;
  #L4966cc.  if v0 == 0 then goto L4966da;
  #L4966d0.  v0:= v1.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.subscriber` @type ^`rx.Subscriber` @kind object;
  #L4966d4.  call `onError`(v0, v2) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4966da.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OnSubscribeAmb$AmbSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4966ec.  call temp:= `isSelected`(v1) @signature `Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber;.isSelected:()Z` @kind direct;
  #L4966f2.  v0:= temp;
  #L4966f4.  if v0 == 0 then goto L496702;
  #L4966f8.  v0:= v1.`rx.internal.operators.OnSubscribeAmb$AmbSubscriber.subscriber` @type ^`rx.Subscriber` @kind object;
  #L4966fc.  call `onNext`(v0, v2) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L496702.  return @kind void;
}
