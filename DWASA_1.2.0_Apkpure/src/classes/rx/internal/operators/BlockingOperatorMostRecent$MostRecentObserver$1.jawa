record `rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @AccessFlag PRIVATE;
  `rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver` `rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1` v0 @kind this, `rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver` v1 @kind object) @signature `Lrx/internal/operators/BlockingOperatorMostRecent$MostRecentObserver$1;.<init>:(Lrx/internal/operators/BlockingOperatorMostRecent$MostRecentObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L492df8.  v0.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.this$0` @type ^`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver` := v1 @kind object;
  #L492dfc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L492e02.  return @kind void;
}
procedure `boolean` `hasNext`(`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1` v1 @kind this) @signature `Lrx/internal/operators/BlockingOperatorMostRecent$MostRecentObserver$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492d30.  v0:= v1.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.this$0` @type ^`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver` @kind object;
  #L492d34.  v0:= v0.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver.value` @type ^`java.lang.Object` @kind object;
  #L492d38.  v1.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` := v0 @kind object;
  #L492d3c.  v0:= v1.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` @kind object;
  #L492d40.  call temp:= `isCompleted`(v0) @signature `Lrx/internal/operators/NotificationLite;.isCompleted:(Ljava/lang/Object;)Z` @kind static;
  #L492d46.  v0:= temp;
  #L492d48.  v0:= v0 ^~ 1;
  #L492d4c.  return v0;
}
procedure `java.lang.Object` `next`(`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1` v2 @kind this) @signature `Lrx/internal/operators/BlockingOperatorMostRecent$MostRecentObserver$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L492d60.  v0:= 0I;
  #L492d62.  v1:= v2.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` @kind object;
  #L492d66.  if v1 != 0 then goto L492d76;
  #L492d6a.  v1:= v2.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.this$0` @type ^`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver` @kind object;
  #L492d6e.  v1:= v1.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver.value` @type ^`java.lang.Object` @kind object;
  #L492d72.  v2.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` := v1 @kind object;
  #L492d76.  v1:= v2.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` @kind object;
  #L492d7a.  call temp:= `isCompleted`(v1) @signature `Lrx/internal/operators/NotificationLite;.isCompleted:(Ljava/lang/Object;)Z` @kind static;
  #L492d80.  v1:= temp;
  #L492d82.  if v1 != 0 then goto L492dbe;
  #L492d86.  v1:= v2.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` @kind object;
  #L492d8a.  call temp:= `isError`(v1) @signature `Lrx/internal/operators/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L492d90.  v1:= temp;
  #L492d92.  if v1 != 0 then goto L492da8;
  #L492d96.  v1:= v2.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` @kind object;
  #L492d9a.  call temp:= `getValue`(v1) @signature `Lrx/internal/operators/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L492da0.  v1:= temp @kind object;
  #L492da2.  v2.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` := v0 @kind object;
  #L492da6.  return v1 @kind object;
  #L492da8.  v1:= v2.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` @kind object;
  #L492dac.  call temp:= `getError`(v1) @signature `Lrx/internal/operators/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L492db2.  v1:= temp @kind object;
  #L492db4.  call temp:= `propagate`(v1) @signature `Lrx/exceptions/Exceptions;.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L492dba.  v1:= temp @kind object;
  #L492dbc.  throw v1;
  #L492dbe.  v1:= new `java.util.NoSuchElementException`;
  #L492dc2.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L492dc8.  throw v1;
  #L492dca.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L492dcc.  v2.`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1.buf` @type ^`java.lang.Object` := v0 @kind object;
  #L492dd0.  throw v1;
  catch `java.lang.Throwable` @[L492d62..L492da2] goto L492dca;
  catch `java.lang.Throwable` @[L492da8..L492dca] goto L492dca;
}
procedure `void` `remove`(`rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1` v2 @kind this) @signature `Lrx/internal/operators/BlockingOperatorMostRecent$MostRecentObserver$1;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L492e14.  v0:= new `java.lang.UnsupportedOperationException`;
  #L492e18.  v1:= "Read only iterator" @kind object;
  #L492e1c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L492e22.  throw v0;
}
