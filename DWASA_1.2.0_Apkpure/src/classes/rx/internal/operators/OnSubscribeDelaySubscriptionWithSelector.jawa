record `rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.Observable` `rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector.source` @AccessFlag FINAL;
  `rx.functions.Func0` `rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector.subscriptionDelay` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector` v0 @kind this, `rx.Observable` v1 @kind object, `rx.functions.Func0` v2 @kind object) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector;.<init>:(Lrx/Observable;Lrx/functions/Func0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L497ddc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L497de2.  v0.`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector.source` @type ^`rx.Observable` := v1 @kind object;
  #L497de6.  v0.`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector.subscriptionDelay` @type ^`rx.functions.Func0` := v2 @kind object;
  #L497dea.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L497dfc.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L497e00.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L497e06.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L497e18.  v0:= v2.`rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector.subscriptionDelay` @type ^`rx.functions.Func0` @kind object;
  #L497e1c.  call temp:= `call`(v0) @signature `Lrx/functions/Func0;.call:()Ljava/lang/Object;` @kind interface;
  #L497e22.  v0:= temp @kind object;
  #L497e24.  v0:= (`rx.Observable`) v0 @kind object;
  #L497e28.  v1:= 1I;
  #L497e2a.  call temp:= `take`(v0, v1) @signature `Lrx/Observable;.take:(I)Lrx/Observable;` @kind virtual;
  #L497e30.  v0:= temp @kind object;
  #L497e32.  v1:= new `rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1`;
  #L497e36.  call `<init>`(v1, v2, v3) @signature `Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector$1;.<init>:(Lrx/internal/operators/OnSubscribeDelaySubscriptionWithSelector;Lrx/Subscriber;)V` @kind direct;
  #L497e3c.  call temp:= `unsafeSubscribe`(v0, v1) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L497e42.  goto L497e4c;
  #L497e44.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L497e46.  call `throwOrReport`(v0, v3) @signature `Lrx/exceptions/Exceptions;.throwOrReport:(Ljava/lang/Throwable;Lrx/Observer;)V` @kind static;
  #L497e4c.  return @kind void;
  catch `java.lang.Throwable` @[L497e18..L497e42] goto L497e44;
}
