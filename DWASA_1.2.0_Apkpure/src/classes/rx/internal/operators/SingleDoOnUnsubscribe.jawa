record `rx.internal.operators.SingleDoOnUnsubscribe` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Single$OnSubscribe` @kind interface {
  `rx.functions.Action0` `rx.internal.operators.SingleDoOnUnsubscribe.onUnsubscribe` @AccessFlag FINAL;
  `rx.Single$OnSubscribe` `rx.internal.operators.SingleDoOnUnsubscribe.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.SingleDoOnUnsubscribe` v0 @kind this, `rx.Single$OnSubscribe` v1 @kind object, `rx.functions.Action0` v2 @kind object) @signature `Lrx/internal/operators/SingleDoOnUnsubscribe;.<init>:(Lrx/Single$OnSubscribe;Lrx/functions/Action0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4af7a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4af7ae.  v0.`rx.internal.operators.SingleDoOnUnsubscribe.source` @type ^`rx.Single$OnSubscribe` := v1 @kind object;
  #L4af7b2.  v0.`rx.internal.operators.SingleDoOnUnsubscribe.onUnsubscribe` @type ^`rx.functions.Action0` := v2 @kind object;
  #L4af7b6.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.SingleDoOnUnsubscribe` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/SingleDoOnUnsubscribe;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af7c8.  v1:= (`rx.SingleSubscriber`) v1 @kind object;
  #L4af7cc.  call `call`(v0, v1) @signature `Lrx/internal/operators/SingleDoOnUnsubscribe;.call:(Lrx/SingleSubscriber;)V` @kind virtual;
  #L4af7d2.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.SingleDoOnUnsubscribe` v1 @kind this, `rx.SingleSubscriber` v2 @kind object) @signature `Lrx/internal/operators/SingleDoOnUnsubscribe;.call:(Lrx/SingleSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4af7e4.  v0:= v1.`rx.internal.operators.SingleDoOnUnsubscribe.onUnsubscribe` @type ^`rx.functions.Action0` @kind object;
  #L4af7e8.  call temp:= `create`(v0) @signature `Lrx/subscriptions/Subscriptions;.create:(Lrx/functions/Action0;)Lrx/Subscription;` @kind static;
  #L4af7ee.  v0:= temp @kind object;
  #L4af7f0.  call `add`(v2, v0) @signature `Lrx/SingleSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4af7f6.  v0:= v1.`rx.internal.operators.SingleDoOnUnsubscribe.source` @type ^`rx.Single$OnSubscribe` @kind object;
  #L4af7fa.  call `call`(v0, v2) @signature `Lrx/Single$OnSubscribe;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4af800.  return @kind void;
}
