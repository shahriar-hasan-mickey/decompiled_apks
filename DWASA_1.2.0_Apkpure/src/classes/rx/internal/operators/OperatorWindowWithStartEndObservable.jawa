record `rx.internal.operators.OperatorWindowWithStartEndObservable` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.functions.Func1` `rx.internal.operators.OperatorWindowWithStartEndObservable.windowClosingSelector` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.OperatorWindowWithStartEndObservable.windowOpenings` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorWindowWithStartEndObservable` v0 @kind this, `rx.Observable` v1 @kind object, `rx.functions.Func1` v2 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable;.<init>:(Lrx/Observable;Lrx/functions/Func1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ad89c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ad8a2.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable.windowOpenings` @type ^`rx.Observable` := v1 @kind object;
  #L4ad8a6.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable.windowClosingSelector` @type ^`rx.functions.Func1` := v2 @kind object;
  #L4ad8aa.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorWindowWithStartEndObservable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ad830.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4ad834.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4ad83a.  v1:= temp @kind object;
  #L4ad83c.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorWindowWithStartEndObservable` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad850.  v0:= new `rx.subscriptions.CompositeSubscription`;
  #L4ad854.  call `<init>`(v0) @signature `Lrx/subscriptions/CompositeSubscription;.<init>:()V` @kind direct;
  #L4ad85a.  call `add`(v3, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4ad860.  v1:= new `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber`;
  #L4ad864.  call `<init>`(v1, v2, v3, v0) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.<init>:(Lrx/internal/operators/OperatorWindowWithStartEndObservable;Lrx/Subscriber;Lrx/subscriptions/CompositeSubscription;)V` @kind direct;
  #L4ad86a.  v3:= new `rx.internal.operators.OperatorWindowWithStartEndObservable$1`;
  #L4ad86e.  call `<init>`(v3, v2, v1) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$1;.<init>:(Lrx/internal/operators/OperatorWindowWithStartEndObservable;Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;)V` @kind direct;
  #L4ad874.  call `add`(v0, v1) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4ad87a.  call `add`(v0, v3) @signature `Lrx/subscriptions/CompositeSubscription;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4ad880.  v0:= v2.`rx.internal.operators.OperatorWindowWithStartEndObservable.windowOpenings` @type ^`rx.Observable` @kind object;
  #L4ad884.  call temp:= `unsafeSubscribe`(v0, v3) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L4ad88a.  return v1 @kind object;
}
