record `rx.internal.operators.OperatorMaterialize` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
}
procedure `void` `<init>`(`rx.internal.operators.OperatorMaterialize` v0 @kind this) @signature `Lrx/internal/operators/OperatorMaterialize;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a2aa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a2aa6.  return @kind void;
}
procedure `rx.internal.operators.OperatorMaterialize` `instance`() @signature `Lrx/internal/operators/OperatorMaterialize;.instance:()Lrx/internal/operators/OperatorMaterialize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2a88.  v0:= `@@rx.internal.operators.OperatorMaterialize$Holder.INSTANCE` @type ^`rx.internal.operators.OperatorMaterialize` @kind object;
  #L4a2a8c.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorMaterialize` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorMaterialize;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a2a34.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4a2a38.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorMaterialize;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L4a2a3e.  v1:= temp @kind object;
  #L4a2a40.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorMaterialize` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorMaterialize;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a2a54.  v0:= new `rx.internal.operators.OperatorMaterialize$ParentSubscriber`;
  #L4a2a58.  call `<init>`(v0, v3) @signature `Lrx/internal/operators/OperatorMaterialize$ParentSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L4a2a5e.  call `add`(v3, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4a2a64.  v1:= new `rx.internal.operators.OperatorMaterialize$1`;
  #L4a2a68.  call `<init>`(v1, v2, v0) @signature `Lrx/internal/operators/OperatorMaterialize$1;.<init>:(Lrx/internal/operators/OperatorMaterialize;Lrx/internal/operators/OperatorMaterialize$ParentSubscriber;)V` @kind direct;
  #L4a2a6e.  call `setProducer`(v3, v1) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L4a2a74.  return v0 @kind object;
}
