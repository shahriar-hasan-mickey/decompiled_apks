record `rx.internal.operators.OperatorMaterialize$1` @kind class @AccessFlag  extends `rx.Producer` @kind interface {
  `rx.internal.operators.OperatorMaterialize` `rx.internal.operators.OperatorMaterialize$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.operators.OperatorMaterialize$ParentSubscriber` `rx.internal.operators.OperatorMaterialize$1.val$parent` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorMaterialize$1` v0 @kind this, `rx.internal.operators.OperatorMaterialize` v1 @kind object, `rx.internal.operators.OperatorMaterialize$ParentSubscriber` v2 @kind object) @signature `Lrx/internal/operators/OperatorMaterialize$1;.<init>:(Lrx/internal/operators/OperatorMaterialize;Lrx/internal/operators/OperatorMaterialize$ParentSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a27b4.  v0.`rx.internal.operators.OperatorMaterialize$1.this$0` @type ^`rx.internal.operators.OperatorMaterialize` := v1 @kind object;
  #L4a27b8.  v0.`rx.internal.operators.OperatorMaterialize$1.val$parent` @type ^`rx.internal.operators.OperatorMaterialize$ParentSubscriber` := v2 @kind object;
  #L4a27bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a27c2.  return @kind void;
}
procedure `void` `request`(`rx.internal.operators.OperatorMaterialize$1` v3 @kind this, `long` v4 ) @signature `Lrx/internal/operators/OperatorMaterialize$1;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a27d4.  v0:= 0L;
  #L4a27d8.  v2:= lcmp(v4, v0);
  #L4a27dc.  if v2 <= 0 then goto L4a27ea;
  #L4a27e0.  v0:= v3.`rx.internal.operators.OperatorMaterialize$1.val$parent` @type ^`rx.internal.operators.OperatorMaterialize$ParentSubscriber` @kind object;
  #L4a27e4.  call `requestMore`(v0, v4) @signature `Lrx/internal/operators/OperatorMaterialize$ParentSubscriber;.requestMore:(J)V` @kind virtual;
  #L4a27ea.  return @kind void;
}
