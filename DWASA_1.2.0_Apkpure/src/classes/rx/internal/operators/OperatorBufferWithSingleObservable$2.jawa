record `rx.internal.operators.OperatorBufferWithSingleObservable$2` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.internal.operators.OperatorBufferWithSingleObservable` `rx.internal.operators.OperatorBufferWithSingleObservable$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber` `rx.internal.operators.OperatorBufferWithSingleObservable$2.val$s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorBufferWithSingleObservable$2` v0 @kind this, `rx.internal.operators.OperatorBufferWithSingleObservable` v1 @kind object, `rx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber` v2 @kind object) @signature `Lrx/internal/operators/OperatorBufferWithSingleObservable$2;.<init>:(Lrx/internal/operators/OperatorBufferWithSingleObservable;Lrx/internal/operators/OperatorBufferWithSingleObservable$BufferingSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49e0c4.  v0.`rx.internal.operators.OperatorBufferWithSingleObservable$2.this$0` @type ^`rx.internal.operators.OperatorBufferWithSingleObservable` := v1 @kind object;
  #L49e0c8.  v0.`rx.internal.operators.OperatorBufferWithSingleObservable$2.val$s` @type ^`rx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber` := v2 @kind object;
  #L49e0cc.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L49e0d2.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorBufferWithSingleObservable$2` v1 @kind this) @signature `Lrx/internal/operators/OperatorBufferWithSingleObservable$2;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49e0e4.  v0:= v1.`rx.internal.operators.OperatorBufferWithSingleObservable$2.val$s` @type ^`rx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber` @kind object;
  #L49e0e8.  call `onCompleted`(v0) @signature `Lrx/internal/operators/OperatorBufferWithSingleObservable$BufferingSubscriber;.onCompleted:()V` @kind virtual;
  #L49e0ee.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorBufferWithSingleObservable$2` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorBufferWithSingleObservable$2;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49e100.  v0:= v1.`rx.internal.operators.OperatorBufferWithSingleObservable$2.val$s` @type ^`rx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber` @kind object;
  #L49e104.  call `onError`(v0, v2) @signature `Lrx/internal/operators/OperatorBufferWithSingleObservable$BufferingSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49e10a.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorBufferWithSingleObservable$2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorBufferWithSingleObservable$2;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L49e11c.  v1:= v0.`rx.internal.operators.OperatorBufferWithSingleObservable$2.val$s` @type ^`rx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber` @kind object;
  #L49e120.  call `emit`(v1) @signature `Lrx/internal/operators/OperatorBufferWithSingleObservable$BufferingSubscriber;.emit:()V` @kind virtual;
  #L49e126.  return @kind void;
}
