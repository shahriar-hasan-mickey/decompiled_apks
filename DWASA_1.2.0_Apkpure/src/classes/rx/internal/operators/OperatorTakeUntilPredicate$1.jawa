record `rx.internal.operators.OperatorTakeUntilPredicate$1` @kind class @AccessFlag  extends `rx.Producer` @kind interface {
  `rx.internal.operators.OperatorTakeUntilPredicate` `rx.internal.operators.OperatorTakeUntilPredicate$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.operators.OperatorTakeUntilPredicate$ParentSubscriber` `rx.internal.operators.OperatorTakeUntilPredicate$1.val$parent` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorTakeUntilPredicate$1` v0 @kind this, `rx.internal.operators.OperatorTakeUntilPredicate` v1 @kind object, `rx.internal.operators.OperatorTakeUntilPredicate$ParentSubscriber` v2 @kind object) @signature `Lrx/internal/operators/OperatorTakeUntilPredicate$1;.<init>:(Lrx/internal/operators/OperatorTakeUntilPredicate;Lrx/internal/operators/OperatorTakeUntilPredicate$ParentSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aa5e8.  v0.`rx.internal.operators.OperatorTakeUntilPredicate$1.this$0` @type ^`rx.internal.operators.OperatorTakeUntilPredicate` := v1 @kind object;
  #L4aa5ec.  v0.`rx.internal.operators.OperatorTakeUntilPredicate$1.val$parent` @type ^`rx.internal.operators.OperatorTakeUntilPredicate$ParentSubscriber` := v2 @kind object;
  #L4aa5f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aa5f6.  return @kind void;
}
procedure `void` `request`(`rx.internal.operators.OperatorTakeUntilPredicate$1` v1 @kind this, `long` v2 ) @signature `Lrx/internal/operators/OperatorTakeUntilPredicate$1;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa608.  v0:= v1.`rx.internal.operators.OperatorTakeUntilPredicate$1.val$parent` @type ^`rx.internal.operators.OperatorTakeUntilPredicate$ParentSubscriber` @kind object;
  #L4aa60c.  call `downstreamRequest`(v0, v2) @signature `Lrx/internal/operators/OperatorTakeUntilPredicate$ParentSubscriber;.downstreamRequest:(J)V` @kind virtual;
  #L4aa612.  return @kind void;
}
