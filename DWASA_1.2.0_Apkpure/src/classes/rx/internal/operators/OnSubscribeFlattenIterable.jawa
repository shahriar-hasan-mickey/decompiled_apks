record `rx.internal.operators.OnSubscribeFlattenIterable` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `rx.functions.Func1` `rx.internal.operators.OnSubscribeFlattenIterable.mapper` @AccessFlag FINAL;
  `int` `rx.internal.operators.OnSubscribeFlattenIterable.prefetch` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.OnSubscribeFlattenIterable.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeFlattenIterable` v0 @kind this, `rx.Observable` v1 @kind object, `rx.functions.Func1` v2 @kind object, `int` v3 ) @signature `Lrx/internal/operators/OnSubscribeFlattenIterable;.<init>:(Lrx/Observable;Lrx/functions/Func1;I)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L498b18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L498b1e.  v0.`rx.internal.operators.OnSubscribeFlattenIterable.source` @type ^`rx.Observable` := v1 @kind object;
  #L498b22.  v0.`rx.internal.operators.OnSubscribeFlattenIterable.mapper` @type ^`rx.functions.Func1` := v2 @kind object;
  #L498b26.  v0.`rx.internal.operators.OnSubscribeFlattenIterable.prefetch` @type ^`int` := v3;
  #L498b2a.  return @kind void;
}
procedure `rx.Observable` `createFrom`(`rx.Observable` v1 @kind object, `rx.functions.Func1` v2 @kind object, `int` v3 ) @signature `Lrx/internal/operators/OnSubscribeFlattenIterable;.createFrom:(Lrx/Observable;Lrx/functions/Func1;I)Lrx/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498acc.  v0:= instanceof @variable v1 @type ^`rx.internal.util.ScalarSynchronousObservable` @kind boolean;
  #L498ad0.  if v0 == 0 then goto L498af4;
  #L498ad4.  v1:= (`rx.internal.util.ScalarSynchronousObservable`) v1 @kind object;
  #L498ad8.  call temp:= `get`(v1) @signature `Lrx/internal/util/ScalarSynchronousObservable;.get:()Ljava/lang/Object;` @kind virtual;
  #L498ade.  v1:= temp @kind object;
  #L498ae0.  v3:= new `rx.internal.operators.OnSubscribeFlattenIterable$OnSubscribeScalarFlattenIterable`;
  #L498ae4.  call `<init>`(v3, v1, v2) @signature `Lrx/internal/operators/OnSubscribeFlattenIterable$OnSubscribeScalarFlattenIterable;.<init>:(Ljava/lang/Object;Lrx/functions/Func1;)V` @kind direct;
  #L498aea.  call temp:= `create`(v3) @signature `Lrx/Observable;.create:(Lrx/Observable$OnSubscribe;)Lrx/Observable;` @kind static;
  #L498af0.  v1:= temp @kind object;
  #L498af2.  return v1 @kind object;
  #L498af4.  v0:= new `rx.internal.operators.OnSubscribeFlattenIterable`;
  #L498af8.  call `<init>`(v0, v1, v2, v3) @signature `Lrx/internal/operators/OnSubscribeFlattenIterable;.<init>:(Lrx/Observable;Lrx/functions/Func1;I)V` @kind direct;
  #L498afe.  call temp:= `create`(v0) @signature `Lrx/Observable;.create:(Lrx/Observable$OnSubscribe;)Lrx/Observable;` @kind static;
  #L498b04.  v1:= temp @kind object;
  #L498b06.  return v1 @kind object;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeFlattenIterable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeFlattenIterable;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L498b3c.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L498b40.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeFlattenIterable;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L498b46.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeFlattenIterable` v3 @kind this, `rx.Subscriber` v4 @kind object) @signature `Lrx/internal/operators/OnSubscribeFlattenIterable;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L498b58.  v0:= new `rx.internal.operators.OnSubscribeFlattenIterable$FlattenIterableSubscriber`;
  #L498b5c.  v1:= v3.`rx.internal.operators.OnSubscribeFlattenIterable.mapper` @type ^`rx.functions.Func1` @kind object;
  #L498b60.  v2:= v3.`rx.internal.operators.OnSubscribeFlattenIterable.prefetch` @type ^`int`;
  #L498b64.  call `<init>`(v0, v4, v1, v2) @signature `Lrx/internal/operators/OnSubscribeFlattenIterable$FlattenIterableSubscriber;.<init>:(Lrx/Subscriber;Lrx/functions/Func1;I)V` @kind direct;
  #L498b6a.  call `add`(v4, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L498b70.  v1:= new `rx.internal.operators.OnSubscribeFlattenIterable$1`;
  #L498b74.  call `<init>`(v1, v3, v0) @signature `Lrx/internal/operators/OnSubscribeFlattenIterable$1;.<init>:(Lrx/internal/operators/OnSubscribeFlattenIterable;Lrx/internal/operators/OnSubscribeFlattenIterable$FlattenIterableSubscriber;)V` @kind direct;
  #L498b7a.  call `setProducer`(v4, v1) @signature `Lrx/Subscriber;.setProducer:(Lrx/Producer;)V` @kind virtual;
  #L498b80.  v4:= v3.`rx.internal.operators.OnSubscribeFlattenIterable.source` @type ^`rx.Observable` @kind object;
  #L498b84.  call temp:= `unsafeSubscribe`(v4, v0) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L498b8a.  return @kind void;
}
