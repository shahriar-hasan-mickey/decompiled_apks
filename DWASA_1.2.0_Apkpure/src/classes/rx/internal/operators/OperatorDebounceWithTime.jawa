record `rx.internal.operators.OperatorDebounceWithTime` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.Scheduler` `rx.internal.operators.OperatorDebounceWithTime.scheduler` @AccessFlag FINAL;
  `long` `rx.internal.operators.OperatorDebounceWithTime.timeout` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `rx.internal.operators.OperatorDebounceWithTime.unit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDebounceWithTime` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `rx.Scheduler` v4 @kind object) @signature `Lrx/internal/operators/OperatorDebounceWithTime;.<init>:(JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49fe1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49fe22.  v0.`rx.internal.operators.OperatorDebounceWithTime.timeout` @type ^`long` := v1 @kind wide;
  #L49fe26.  v0.`rx.internal.operators.OperatorDebounceWithTime.unit` @type ^`java.util.concurrent.TimeUnit` := v3 @kind object;
  #L49fe2a.  v0.`rx.internal.operators.OperatorDebounceWithTime.scheduler` @type ^`rx.Scheduler` := v4 @kind object;
  #L49fe2e.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorDebounceWithTime` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorDebounceWithTime;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49fdac.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L49fdb0.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorDebounceWithTime;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L49fdb6.  v1:= temp @kind object;
  #L49fdb8.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorDebounceWithTime` v7 @kind this, `rx.Subscriber` v8 @kind object) @signature `Lrx/internal/operators/OperatorDebounceWithTime;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49fdcc.  v0:= v7.`rx.internal.operators.OperatorDebounceWithTime.scheduler` @type ^`rx.Scheduler` @kind object;
  #L49fdd0.  call temp:= `createWorker`(v0) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L49fdd6.  v5:= temp @kind object;
  #L49fdd8.  v6:= new `rx.observers.SerializedSubscriber`;
  #L49fddc.  call `<init>`(v6, v8) @signature `Lrx/observers/SerializedSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49fde2.  v4:= new `rx.subscriptions.SerialSubscription`;
  #L49fde6.  call `<init>`(v4) @signature `Lrx/subscriptions/SerialSubscription;.<init>:()V` @kind direct;
  #L49fdec.  call `add`(v6, v5) @signature `Lrx/observers/SerializedSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49fdf2.  call `add`(v6, v4) @signature `Lrx/observers/SerializedSubscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49fdf8.  v0:= new `rx.internal.operators.OperatorDebounceWithTime$1`;
  #L49fdfc.  v1:= v0 @kind object;
  #L49fdfe.  v2:= v7 @kind object;
  #L49fe00.  v3:= v8 @kind object;
  #L49fe02.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1;.<init>:(Lrx/internal/operators/OperatorDebounceWithTime;Lrx/Subscriber;Lrx/subscriptions/SerialSubscription;Lrx/Scheduler$Worker;Lrx/observers/SerializedSubscriber;)V` @kind direct;
  #L49fe08.  return v0 @kind object;
}
