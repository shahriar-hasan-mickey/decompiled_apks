record `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `boolean` `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.once` @AccessFlag ;
  `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject` `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.val$s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1` v0 @kind this, `rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` v1 @kind object, `rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject` v2 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber$1;.<init>:(Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;Lrx/internal/operators/OperatorWindowWithStartEndObservable$SerializedSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ad398.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.this$1` @type ^`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` := v1 @kind object;
  #L4ad39c.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.val$s` @type ^`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject` := v2 @kind object;
  #L4ad3a0.  call `<init>`(v0) @signature `Lrx/Subscriber;.<init>:()V` @kind direct;
  #L4ad3a6.  v1:= 1I;
  #L4ad3a8.  v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.once` @type ^`boolean` := v1 @kind boolean;
  #L4ad3ac.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad3c0.  v0:= v2.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.once` @type ^`boolean` @kind boolean;
  #L4ad3c4.  if v0 == 0 then goto L4ad3ea;
  #L4ad3c8.  v0:= 0I;
  #L4ad3ca.  v2.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.once` @type ^`boolean` := v0 @kind boolean;
  #L4ad3ce.  v0:= v2.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.this$1` @type ^`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` @kind object;
  #L4ad3d2.  v1:= v2.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.val$s` @type ^`rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject` @kind object;
  #L4ad3d6.  call `endWindow`(v0, v1) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.endWindow:(Lrx/internal/operators/OperatorWindowWithStartEndObservable$SerializedSubject;)V` @kind virtual;
  #L4ad3dc.  v0:= v2.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.this$1` @type ^`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` @kind object;
  #L4ad3e0.  v0:= v0.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber.composite` @type ^`rx.subscriptions.CompositeSubscription` @kind object;
  #L4ad3e4.  call `remove`(v0, v2) @signature `Lrx/subscriptions/CompositeSubscription;.remove:(Lrx/Subscription;)V` @kind virtual;
  #L4ad3ea.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad3fc.  v0:= v1.`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1.this$1` @type ^`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber` @kind object;
  #L4ad400.  call `onError`(v0, v2) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ad406.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4ad418.  call `onCompleted`(v0) @signature `Lrx/internal/operators/OperatorWindowWithStartEndObservable$SourceSubscriber$1;.onCompleted:()V` @kind virtual;
  #L4ad41e.  return @kind void;
}
