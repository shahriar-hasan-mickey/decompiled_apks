record `rx.internal.operators.OperatorToObservableSortedList$1` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
  `rx.internal.operators.OperatorToObservableSortedList` `rx.internal.operators.OperatorToObservableSortedList$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.functions.Func2` `rx.internal.operators.OperatorToObservableSortedList$1.val$sortFunction` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorToObservableSortedList$1` v0 @kind this, `rx.internal.operators.OperatorToObservableSortedList` v1 @kind object, `rx.functions.Func2` v2 @kind object) @signature `Lrx/internal/operators/OperatorToObservableSortedList$1;.<init>:(Lrx/internal/operators/OperatorToObservableSortedList;Lrx/functions/Func2;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ab7a0.  v0.`rx.internal.operators.OperatorToObservableSortedList$1.this$0` @type ^`rx.internal.operators.OperatorToObservableSortedList` := v1 @kind object;
  #L4ab7a4.  v0.`rx.internal.operators.OperatorToObservableSortedList$1.val$sortFunction` @type ^`rx.functions.Func2` := v2 @kind object;
  #L4ab7a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ab7ae.  return @kind void;
}
procedure `int` `compare`(`rx.internal.operators.OperatorToObservableSortedList$1` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OperatorToObservableSortedList$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab774.  v0:= v1.`rx.internal.operators.OperatorToObservableSortedList$1.val$sortFunction` @type ^`rx.functions.Func2` @kind object;
  #L4ab778.  call temp:= `call`(v0, v2, v3) @signature `Lrx/functions/Func2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ab77e.  v2:= temp @kind object;
  #L4ab780.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L4ab784.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4ab78a.  v2:= temp;
  #L4ab78c.  return v2;
}
