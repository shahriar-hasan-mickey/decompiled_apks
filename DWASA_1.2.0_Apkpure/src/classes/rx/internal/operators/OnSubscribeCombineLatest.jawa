record `rx.internal.operators.OnSubscribeCombineLatest` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$OnSubscribe` @kind interface {
  `int` `rx.internal.operators.OnSubscribeCombineLatest.bufferSize` @AccessFlag FINAL;
  `rx.functions.FuncN` `rx.internal.operators.OnSubscribeCombineLatest.combiner` @AccessFlag FINAL;
  `boolean` `rx.internal.operators.OnSubscribeCombineLatest.delayError` @AccessFlag FINAL;
  `rx.Observable`[] `rx.internal.operators.OnSubscribeCombineLatest.sources` @AccessFlag FINAL;
  `java.lang.Iterable` `rx.internal.operators.OnSubscribeCombineLatest.sourcesIterable` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeCombineLatest` v6 @kind this, `java.lang.Iterable` v7 @kind object, `rx.functions.FuncN` v8 @kind object) @signature `Lrx/internal/operators/OnSubscribeCombineLatest;.<init>:(Ljava/lang/Iterable;Lrx/functions/FuncN;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L497360.  v4:= `@@rx.internal.util.RxRingBuffer.SIZE` @type ^`int`;
  #L497364.  v1:= 0I;
  #L497366.  v5:= 0I;
  #L497368.  v0:= v6 @kind object;
  #L49736a.  v2:= v7 @kind object;
  #L49736c.  v3:= v8 @kind object;
  #L49736e.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lrx/internal/operators/OnSubscribeCombineLatest;.<init>:([Lrx/Observable;Ljava/lang/Iterable;Lrx/functions/FuncN;IZ)V` @kind direct;
  #L497374.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.operators.OnSubscribeCombineLatest` v0 @kind this, `rx.Observable`[] v1 @kind object, `java.lang.Iterable` v2 @kind object, `rx.functions.FuncN` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lrx/internal/operators/OnSubscribeCombineLatest;.<init>:([Lrx/Observable;Ljava/lang/Iterable;Lrx/functions/FuncN;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L497388.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49738e.  v0.`rx.internal.operators.OnSubscribeCombineLatest.sources` @type ^`rx.Observable`[] := v1 @kind object;
  #L497392.  v0.`rx.internal.operators.OnSubscribeCombineLatest.sourcesIterable` @type ^`java.lang.Iterable` := v2 @kind object;
  #L497396.  v0.`rx.internal.operators.OnSubscribeCombineLatest.combiner` @type ^`rx.functions.FuncN` := v3 @kind object;
  #L49739a.  v0.`rx.internal.operators.OnSubscribeCombineLatest.bufferSize` @type ^`int` := v4;
  #L49739e.  v0.`rx.internal.operators.OnSubscribeCombineLatest.delayError` @type ^`boolean` := v5 @kind boolean;
  #L4973a2.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeCombineLatest` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OnSubscribeCombineLatest;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4973b4.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L4973b8.  call `call`(v0, v1) @signature `Lrx/internal/operators/OnSubscribeCombineLatest;.call:(Lrx/Subscriber;)V` @kind virtual;
  #L4973be.  return @kind void;
}
procedure `void` `call`(`rx.internal.operators.OnSubscribeCombineLatest` v8 @kind this, `rx.Subscriber` v9 @kind object) @signature `Lrx/internal/operators/OnSubscribeCombineLatest;.call:(Lrx/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4973d0.  v0:= v8.`rx.internal.operators.OnSubscribeCombineLatest.sources` @type ^`rx.Observable`[] @kind object;
  #L4973d4.  if v0 != 0 then goto L49745e;
  #L4973d8.  v0:= v8.`rx.internal.operators.OnSubscribeCombineLatest.sourcesIterable` @type ^`java.lang.Iterable` @kind object;
  #L4973dc.  v1:= instanceof @variable v0 @type ^`java.util.List` @kind boolean;
  #L4973e0.  if v1 == 0 then goto L497408;
  #L4973e4.  v0:= (`java.util.List`) v0 @kind object;
  #L4973e8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4973ee.  v1:= temp;
  #L4973f0.  v1:= new `rx.Observable`[v1];
  #L4973f4.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L4973fa.  v0:= temp @kind object;
  #L4973fc.  v0:= (`rx.Observable`[]) v0 @kind object;
  #L497400.  v0:= (`rx.Observable`[]) v0 @kind object;
  #L497404.  v1:= length @variable v0;
  #L497406.  goto L497460;
  #L497408.  v1:= 8I;
  #L49740c.  v1:= new `rx.Observable`[v1];
  #L497410.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L497416.  v0:= temp @kind object;
  #L497418.  v2:= 0I;
  #L49741a.  v3:= 0I;
  #L49741c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L497422.  v4:= temp;
  #L497424.  if v4 == 0 then goto L497458;
  #L497428.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L49742e.  v4:= temp @kind object;
  #L497430.  v4:= (`rx.Observable`) v4 @kind object;
  #L497434.  v5:= length @variable v1;
  #L497436.  if v3 != v5 then goto L49744c;
  #L49743a.  v5:= v3 ^> 2;
  #L49743e.  v5:= v5 + v3 @kind int;
  #L497440.  v5:= new `rx.Observable`[v5];
  #L497444.  call `arraycopy`(v1, v2, v5, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L49744a.  v1:= v5 @kind object;
  #L49744c.  v5:= v3 + 1;
  #L497450.  v1[v3]:= v4 @kind object;
  #L497454.  v3:= v5;
  #L497456.  goto L49741c;
  #L497458.  v0:= v1 @kind object;
  #L49745a.  v5:= v3;
  #L49745c.  goto L497462;
  #L49745e.  v1:= length @variable v0;
  #L497460.  v5:= v1;
  #L497462.  if v5 != 0 then goto L49746e;
  #L497466.  call `onCompleted`(v9) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L49746c.  return @kind void;
  #L49746e.  v1:= new `rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator`;
  #L497472.  v4:= v8.`rx.internal.operators.OnSubscribeCombineLatest.combiner` @type ^`rx.functions.FuncN` @kind object;
  #L497476.  v6:= v8.`rx.internal.operators.OnSubscribeCombineLatest.bufferSize` @type ^`int`;
  #L49747a.  v7:= v8.`rx.internal.operators.OnSubscribeCombineLatest.delayError` @type ^`boolean` @kind boolean;
  #L49747e.  v2:= v1 @kind object;
  #L497480.  v3:= v9 @kind object;
  #L497482.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$LatestCoordinator;.<init>:(Lrx/Subscriber;Lrx/functions/FuncN;IIZ)V` @kind direct;
  #L497488.  call `subscribe`(v1, v0) @signature `Lrx/internal/operators/OnSubscribeCombineLatest$LatestCoordinator;.subscribe:([Lrx/Observable;)V` @kind virtual;
  #L49748e.  return @kind void;
}
