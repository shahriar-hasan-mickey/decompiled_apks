record `rx.internal.operators.OperatorDebounceWithTime$1` @kind class @AccessFlag  extends `rx.Subscriber` @kind class {
  `rx.Subscriber` `rx.internal.operators.OperatorDebounceWithTime$1.self` @AccessFlag FINAL;
  `rx.internal.operators.OperatorDebounceWithTime$DebounceState` `rx.internal.operators.OperatorDebounceWithTime$1.state` @AccessFlag FINAL;
  `rx.internal.operators.OperatorDebounceWithTime` `rx.internal.operators.OperatorDebounceWithTime$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.observers.SerializedSubscriber` `rx.internal.operators.OperatorDebounceWithTime$1.val$s` @AccessFlag FINAL_SYNTHETIC;
  `rx.subscriptions.SerialSubscription` `rx.internal.operators.OperatorDebounceWithTime$1.val$serial` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler$Worker` `rx.internal.operators.OperatorDebounceWithTime$1.val$worker` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorDebounceWithTime$1` v0 @kind this, `rx.internal.operators.OperatorDebounceWithTime` v1 @kind object, `rx.Subscriber` v2 @kind object, `rx.subscriptions.SerialSubscription` v3 @kind object, `rx.Scheduler$Worker` v4 @kind object, `rx.observers.SerializedSubscriber` v5 @kind object) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1;.<init>:(Lrx/internal/operators/OperatorDebounceWithTime;Lrx/Subscriber;Lrx/subscriptions/SerialSubscription;Lrx/Scheduler$Worker;Lrx/observers/SerializedSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49fae8.  v0.`rx.internal.operators.OperatorDebounceWithTime$1.this$0` @type ^`rx.internal.operators.OperatorDebounceWithTime` := v1 @kind object;
  #L49faec.  v0.`rx.internal.operators.OperatorDebounceWithTime$1.val$serial` @type ^`rx.subscriptions.SerialSubscription` := v3 @kind object;
  #L49faf0.  v0.`rx.internal.operators.OperatorDebounceWithTime$1.val$worker` @type ^`rx.Scheduler$Worker` := v4 @kind object;
  #L49faf4.  v0.`rx.internal.operators.OperatorDebounceWithTime$1.val$s` @type ^`rx.observers.SerializedSubscriber` := v5 @kind object;
  #L49faf8.  call `<init>`(v0, v2) @signature `Lrx/Subscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49fafe.  v1:= new `rx.internal.operators.OperatorDebounceWithTime$DebounceState`;
  #L49fb02.  call `<init>`(v1) @signature `Lrx/internal/operators/OperatorDebounceWithTime$DebounceState;.<init>:()V` @kind direct;
  #L49fb08.  v0.`rx.internal.operators.OperatorDebounceWithTime$1.state` @type ^`rx.internal.operators.OperatorDebounceWithTime$DebounceState` := v1 @kind object;
  #L49fb0c.  v0.`rx.internal.operators.OperatorDebounceWithTime$1.self` @type ^`rx.Subscriber` := v0 @kind object;
  #L49fb10.  return @kind void;
}
procedure `void` `onCompleted`(`rx.internal.operators.OperatorDebounceWithTime$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1;.onCompleted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49fb24.  v0:= v2.`rx.internal.operators.OperatorDebounceWithTime$1.state` @type ^`rx.internal.operators.OperatorDebounceWithTime$DebounceState` @kind object;
  #L49fb28.  v1:= v2.`rx.internal.operators.OperatorDebounceWithTime$1.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L49fb2c.  call `emitAndComplete`(v0, v1, v2) @signature `Lrx/internal/operators/OperatorDebounceWithTime$DebounceState;.emitAndComplete:(Lrx/Subscriber;Lrx/Subscriber;)V` @kind virtual;
  #L49fb32.  return @kind void;
}
procedure `void` `onError`(`rx.internal.operators.OperatorDebounceWithTime$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49fb44.  v0:= v1.`rx.internal.operators.OperatorDebounceWithTime$1.val$s` @type ^`rx.observers.SerializedSubscriber` @kind object;
  #L49fb48.  call `onError`(v0, v2) @signature `Lrx/observers/SerializedSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L49fb4e.  call `unsubscribe`(v1) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1;.unsubscribe:()V` @kind virtual;
  #L49fb54.  v2:= v1.`rx.internal.operators.OperatorDebounceWithTime$1.state` @type ^`rx.internal.operators.OperatorDebounceWithTime$DebounceState` @kind object;
  #L49fb58.  call `clear`(v2) @signature `Lrx/internal/operators/OperatorDebounceWithTime$DebounceState;.clear:()V` @kind virtual;
  #L49fb5e.  return @kind void;
}
procedure `void` `onNext`(`rx.internal.operators.OperatorDebounceWithTime$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49fb70.  v0:= v5.`rx.internal.operators.OperatorDebounceWithTime$1.state` @type ^`rx.internal.operators.OperatorDebounceWithTime$DebounceState` @kind object;
  #L49fb74.  call temp:= `next`(v0, v6) @signature `Lrx/internal/operators/OperatorDebounceWithTime$DebounceState;.next:(Ljava/lang/Object;)I` @kind virtual;
  #L49fb7a.  v6:= temp;
  #L49fb7c.  v0:= v5.`rx.internal.operators.OperatorDebounceWithTime$1.val$serial` @type ^`rx.subscriptions.SerialSubscription` @kind object;
  #L49fb80.  v1:= v5.`rx.internal.operators.OperatorDebounceWithTime$1.val$worker` @type ^`rx.Scheduler$Worker` @kind object;
  #L49fb84.  v2:= new `rx.internal.operators.OperatorDebounceWithTime$1$1`;
  #L49fb88.  call `<init>`(v2, v5, v6) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1$1;.<init>:(Lrx/internal/operators/OperatorDebounceWithTime$1;I)V` @kind direct;
  #L49fb8e.  v6:= v5.`rx.internal.operators.OperatorDebounceWithTime$1.this$0` @type ^`rx.internal.operators.OperatorDebounceWithTime` @kind object;
  #L49fb92.  v3:= v6.`rx.internal.operators.OperatorDebounceWithTime.timeout` @type ^`long` @kind wide;
  #L49fb96.  v6:= v5.`rx.internal.operators.OperatorDebounceWithTime$1.this$0` @type ^`rx.internal.operators.OperatorDebounceWithTime` @kind object;
  #L49fb9a.  v6:= v6.`rx.internal.operators.OperatorDebounceWithTime.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L49fb9e.  call temp:= `schedule`(v1, v2, v3, v6) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L49fba4.  v6:= temp @kind object;
  #L49fba6.  call `set`(v0, v6) @signature `Lrx/subscriptions/SerialSubscription;.set:(Lrx/Subscription;)V` @kind virtual;
  #L49fbac.  return @kind void;
}
procedure `void` `onStart`(`rx.internal.operators.OperatorDebounceWithTime$1` v2 @kind this) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49fbc0.  v0:= 9223372036854775807L;
  #L49fbca.  call `request`(v2, v0) @signature `Lrx/internal/operators/OperatorDebounceWithTime$1;.request:(J)V` @kind virtual;
  #L49fbd0.  return @kind void;
}
