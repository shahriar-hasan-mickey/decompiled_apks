record `rx.internal.operators.OperatorTimeout$1` @kind class @AccessFlag  extends `rx.internal.operators.OperatorTimeoutBase$FirstTimeoutStub` @kind interface {
  `java.util.concurrent.TimeUnit` `rx.internal.operators.OperatorTimeout$1.val$timeUnit` @AccessFlag FINAL_SYNTHETIC;
  `long` `rx.internal.operators.OperatorTimeout$1.val$timeout` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorTimeout$1` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lrx/internal/operators/OperatorTimeout$1;.<init>:(JLjava/util/concurrent/TimeUnit;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4aad7c.  v0.`rx.internal.operators.OperatorTimeout$1.val$timeout` @type ^`long` := v1 @kind wide;
  #L4aad80.  v0.`rx.internal.operators.OperatorTimeout$1.val$timeUnit` @type ^`java.util.concurrent.TimeUnit` := v3 @kind object;
  #L4aad84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aad8a.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorTimeout$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lrx/internal/operators/OperatorTimeout$1;.call:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4aad28.  v1:= (`rx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber`) v1 @kind object;
  #L4aad2c.  v2:= (`java.lang.Long`) v2 @kind object;
  #L4aad30.  v3:= (`rx.Scheduler$Worker`) v3 @kind object;
  #L4aad34.  call temp:= `call`(v0, v1, v2, v3) @signature `Lrx/internal/operators/OperatorTimeout$1;.call:(Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber;Ljava/lang/Long;Lrx/Scheduler$Worker;)Lrx/Subscription;` @kind virtual;
  #L4aad3a.  v1:= temp @kind object;
  #L4aad3c.  return v1 @kind object;
}
procedure `rx.Subscription` `call`(`rx.internal.operators.OperatorTimeout$1` v2 @kind this, `rx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber` v3 @kind object, `java.lang.Long` v4 @kind object, `rx.Scheduler$Worker` v5 @kind object) @signature `Lrx/internal/operators/OperatorTimeout$1;.call:(Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber;Ljava/lang/Long;Lrx/Scheduler$Worker;)Lrx/Subscription;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aad50.  v0:= new `rx.internal.operators.OperatorTimeout$1$1`;
  #L4aad54.  call `<init>`(v0, v2, v3, v4) @signature `Lrx/internal/operators/OperatorTimeout$1$1;.<init>:(Lrx/internal/operators/OperatorTimeout$1;Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber;Ljava/lang/Long;)V` @kind direct;
  #L4aad5a.  v3:= v2.`rx.internal.operators.OperatorTimeout$1.val$timeout` @type ^`long` @kind wide;
  #L4aad5e.  v1:= v2.`rx.internal.operators.OperatorTimeout$1.val$timeUnit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4aad62.  call temp:= `schedule`(v5, v0, v3, v1) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L4aad68.  v3:= temp @kind object;
  #L4aad6a.  return v3 @kind object;
}
