record `rx.internal.operators.OperatorBufferWithStartEndObservable` @kind class @AccessFlag PUBLIC_FINAL extends `rx.Observable$Operator` @kind interface {
  `rx.functions.Func1` `rx.internal.operators.OperatorBufferWithStartEndObservable.bufferClosing` @AccessFlag FINAL;
  `rx.Observable` `rx.internal.operators.OperatorBufferWithStartEndObservable.bufferOpening` @AccessFlag FINAL;
}
procedure `void` `<init>`(`rx.internal.operators.OperatorBufferWithStartEndObservable` v0 @kind this, `rx.Observable` v1 @kind object, `rx.functions.Func1` v2 @kind object) @signature `Lrx/internal/operators/OperatorBufferWithStartEndObservable;.<init>:(Lrx/Observable;Lrx/functions/Func1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49efd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49efde.  v0.`rx.internal.operators.OperatorBufferWithStartEndObservable.bufferOpening` @type ^`rx.Observable` := v1 @kind object;
  #L49efe2.  v0.`rx.internal.operators.OperatorBufferWithStartEndObservable.bufferClosing` @type ^`rx.functions.Func1` := v2 @kind object;
  #L49efe6.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.internal.operators.OperatorBufferWithStartEndObservable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/internal/operators/OperatorBufferWithStartEndObservable;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49ef70.  v1:= (`rx.Subscriber`) v1 @kind object;
  #L49ef74.  call temp:= `call`(v0, v1) @signature `Lrx/internal/operators/OperatorBufferWithStartEndObservable;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @kind virtual;
  #L49ef7a.  v1:= temp @kind object;
  #L49ef7c.  return v1 @kind object;
}
procedure `rx.Subscriber` `call`(`rx.internal.operators.OperatorBufferWithStartEndObservable` v2 @kind this, `rx.Subscriber` v3 @kind object) @signature `Lrx/internal/operators/OperatorBufferWithStartEndObservable;.call:(Lrx/Subscriber;)Lrx/Subscriber;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49ef90.  v0:= new `rx.internal.operators.OperatorBufferWithStartEndObservable$BufferingSubscriber`;
  #L49ef94.  v1:= new `rx.observers.SerializedSubscriber`;
  #L49ef98.  call `<init>`(v1, v3) @signature `Lrx/observers/SerializedSubscriber;.<init>:(Lrx/Subscriber;)V` @kind direct;
  #L49ef9e.  call `<init>`(v0, v2, v1) @signature `Lrx/internal/operators/OperatorBufferWithStartEndObservable$BufferingSubscriber;.<init>:(Lrx/internal/operators/OperatorBufferWithStartEndObservable;Lrx/Subscriber;)V` @kind direct;
  #L49efa4.  v1:= new `rx.internal.operators.OperatorBufferWithStartEndObservable$1`;
  #L49efa8.  call `<init>`(v1, v2, v0) @signature `Lrx/internal/operators/OperatorBufferWithStartEndObservable$1;.<init>:(Lrx/internal/operators/OperatorBufferWithStartEndObservable;Lrx/internal/operators/OperatorBufferWithStartEndObservable$BufferingSubscriber;)V` @kind direct;
  #L49efae.  call `add`(v3, v1) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49efb4.  call `add`(v3, v0) @signature `Lrx/Subscriber;.add:(Lrx/Subscription;)V` @kind virtual;
  #L49efba.  v3:= v2.`rx.internal.operators.OperatorBufferWithStartEndObservable.bufferOpening` @type ^`rx.Observable` @kind object;
  #L49efbe.  call temp:= `unsafeSubscribe`(v3, v1) @signature `Lrx/Observable;.unsafeSubscribe:(Lrx/Subscriber;)Lrx/Subscription;` @kind virtual;
  #L49efc4.  return v0 @kind object;
}
