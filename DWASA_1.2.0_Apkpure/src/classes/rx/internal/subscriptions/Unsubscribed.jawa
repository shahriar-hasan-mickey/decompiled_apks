record `rx.internal.subscriptions.Unsubscribed` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `rx.Subscription` @kind interface {
}
global `rx.internal.subscriptions.Unsubscribed`[] `@@rx.internal.subscriptions.Unsubscribed.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `rx.internal.subscriptions.Unsubscribed` `@@rx.internal.subscriptions.Unsubscribed.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lrx/internal/subscriptions/Unsubscribed;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4b424c.  v0:= new `rx.internal.subscriptions.Unsubscribed`;
  #L4b4250.  v1:= 0I;
  #L4b4252.  v2:= "INSTANCE" @kind object;
  #L4b4256.  call `<init>`(v0, v2, v1) @signature `Lrx/internal/subscriptions/Unsubscribed;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b425c.  `@@rx.internal.subscriptions.Unsubscribed.INSTANCE` @type ^`rx.internal.subscriptions.Unsubscribed` := v0 @kind object;
  #L4b4260.  v0:= 1I;
  #L4b4262.  v0:= new `rx.internal.subscriptions.Unsubscribed`[v0];
  #L4b4266.  v2:= `@@rx.internal.subscriptions.Unsubscribed.INSTANCE` @type ^`rx.internal.subscriptions.Unsubscribed` @kind object;
  #L4b426a.  v0[v1]:= v2 @kind object;
  #L4b426e.  `@@rx.internal.subscriptions.Unsubscribed.$VALUES` @type ^`rx.internal.subscriptions.Unsubscribed`[] := v0 @kind object;
  #L4b4272.  return @kind void;
}
procedure `void` `<init>`(`rx.internal.subscriptions.Unsubscribed` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lrx/internal/subscriptions/Unsubscribed;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4b4284.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b428a.  return @kind void;
}
procedure `rx.internal.subscriptions.Unsubscribed` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lrx/internal/subscriptions/Unsubscribed;.valueOf:(Ljava/lang/String;)Lrx/internal/subscriptions/Unsubscribed;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b4204.  v0:= constclass @type ^`rx.internal.subscriptions.Unsubscribed` @kind object;
  #L4b4208.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4b420e.  v1:= temp @kind object;
  #L4b4210.  v1:= (`rx.internal.subscriptions.Unsubscribed`) v1 @kind object;
  #L4b4214.  return v1 @kind object;
}
procedure `rx.internal.subscriptions.Unsubscribed`[] `values`() @signature `Lrx/internal/subscriptions/Unsubscribed;.values:()[Lrx/internal/subscriptions/Unsubscribed;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b4228.  v0:= `@@rx.internal.subscriptions.Unsubscribed.$VALUES` @type ^`rx.internal.subscriptions.Unsubscribed`[] @kind object;
  #L4b422c.  call temp:= `clone`(v0) @signature `[Lrx/internal/subscriptions/Unsubscribed;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4b4232.  v0:= temp @kind object;
  #L4b4234.  v0:= (`rx.internal.subscriptions.Unsubscribed`[]) v0 @kind object;
  #L4b4238.  return v0 @kind object;
}
procedure `boolean` `isUnsubscribed`(`rx.internal.subscriptions.Unsubscribed` v1 @kind this) @signature `Lrx/internal/subscriptions/Unsubscribed;.isUnsubscribed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b41f0.  v0:= 1I;
  #L4b41f2.  return v0;
}
procedure `void` `unsubscribe`(`rx.internal.subscriptions.Unsubscribed` v0 @kind this) @signature `Lrx/internal/subscriptions/Unsubscribed;.unsubscribe:()V` @AccessFlag PUBLIC {
    temp;

  #L4b429c.  return @kind void;
}
