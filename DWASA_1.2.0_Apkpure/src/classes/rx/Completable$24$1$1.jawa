record `rx.Completable$24$1$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.Completable$24$1` `rx.Completable$24$1$1.this$2` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$24$1$1` v0 @kind this, `rx.Completable$24$1` v1 @kind object) @signature `Lrx/Completable$24$1$1;.<init>:(Lrx/Completable$24$1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48742c.  v0.`rx.Completable$24$1$1.this$2` @type ^`rx.Completable$24$1` := v1 @kind object;
  #L487430.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L487436.  return @kind void;
}
procedure `void` `call`(`rx.Completable$24$1$1` v2 @kind this) @signature `Lrx/Completable$24$1$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L487448.  v0:= v2.`rx.Completable$24$1$1.this$2` @type ^`rx.Completable$24$1` @kind object;
  #L48744c.  v0:= v0.`rx.Completable$24$1.val$s` @type ^`rx.CompletableSubscriber` @kind object;
  #L487450.  call `onCompleted`(v0) @signature `Lrx/CompletableSubscriber;.onCompleted:()V` @kind interface;
  #L487456.  v0:= v2.`rx.Completable$24$1$1.this$2` @type ^`rx.Completable$24$1` @kind object;
  #L48745a.  v0:= v0.`rx.Completable$24$1.val$ad` @type ^`rx.internal.util.SubscriptionList` @kind object;
  #L48745e.  call `unsubscribe`(v0) @signature `Lrx/internal/util/SubscriptionList;.unsubscribe:()V` @kind virtual;
  #L487464.  return @kind void;
  #L487466.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L487468.  v1:= v2.`rx.Completable$24$1$1.this$2` @type ^`rx.Completable$24$1` @kind object;
  #L48746c.  v1:= v1.`rx.Completable$24$1.val$ad` @type ^`rx.internal.util.SubscriptionList` @kind object;
  #L487470.  call `unsubscribe`(v1) @signature `Lrx/internal/util/SubscriptionList;.unsubscribe:()V` @kind virtual;
  #L487476.  throw v0;
  catch `java.lang.Throwable` @[L487448..L487456] goto L487466;
}
