record `rx.Completable$35$1$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.Completable$35$1` `rx.Completable$35$1$1.this$2` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscription` `rx.Completable$35$1$1.val$d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$35$1$1` v0 @kind this, `rx.Completable$35$1` v1 @kind object, `rx.Subscription` v2 @kind object) @signature `Lrx/Completable$35$1$1;.<init>:(Lrx/Completable$35$1;Lrx/Subscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L488064.  v0.`rx.Completable$35$1$1.this$2` @type ^`rx.Completable$35$1` := v1 @kind object;
  #L488068.  v0.`rx.Completable$35$1$1.val$d` @type ^`rx.Subscription` := v2 @kind object;
  #L48806c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L488072.  return @kind void;
}
procedure `void` `call`(`rx.Completable$35$1$1` v2 @kind this) @signature `Lrx/Completable$35$1$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L488084.  v0:= v2.`rx.Completable$35$1$1.this$2` @type ^`rx.Completable$35$1` @kind object;
  #L488088.  v0:= v0.`rx.Completable$35$1.this$1` @type ^`rx.Completable$35` @kind object;
  #L48808c.  v0:= v0.`rx.Completable$35.val$scheduler` @type ^`rx.Scheduler` @kind object;
  #L488090.  call temp:= `createWorker`(v0) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L488096.  v0:= temp @kind object;
  #L488098.  v1:= new `rx.Completable$35$1$1$1`;
  #L48809c.  call `<init>`(v1, v2, v0) @signature `Lrx/Completable$35$1$1$1;.<init>:(Lrx/Completable$35$1$1;Lrx/Scheduler$Worker;)V` @kind direct;
  #L4880a2.  call temp:= `schedule`(v0, v1) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;)Lrx/Subscription;` @kind virtual;
  #L4880a8.  return @kind void;
}
