record `rx.Completable$24` @kind class @AccessFlag  extends `rx.Completable$OnSubscribe` @kind interface {
  `rx.Completable` `rx.Completable$24.this$0` @AccessFlag FINAL_SYNTHETIC;
  `rx.Scheduler` `rx.Completable$24.val$scheduler` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$24` v0 @kind this, `rx.Completable` v1 @kind object, `rx.Scheduler` v2 @kind object) @signature `Lrx/Completable$24;.<init>:(Lrx/Completable;Lrx/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L487598.  v0.`rx.Completable$24.this$0` @type ^`rx.Completable` := v1 @kind object;
  #L48759c.  v0.`rx.Completable$24.val$scheduler` @type ^`rx.Scheduler` := v2 @kind object;
  #L4875a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4875a6.  return @kind void;
}
procedure `void` `call`(`rx.Completable$24` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/Completable$24;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4875b8.  v1:= (`rx.CompletableSubscriber`) v1 @kind object;
  #L4875bc.  call `call`(v0, v1) @signature `Lrx/Completable$24;.call:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L4875c2.  return @kind void;
}
procedure `void` `call`(`rx.Completable$24` v4 @kind this, `rx.CompletableSubscriber` v5 @kind object) @signature `Lrx/Completable$24;.call:(Lrx/CompletableSubscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4875d4.  v0:= new `rx.internal.util.SubscriptionList`;
  #L4875d8.  call `<init>`(v0) @signature `Lrx/internal/util/SubscriptionList;.<init>:()V` @kind direct;
  #L4875de.  v1:= v4.`rx.Completable$24.val$scheduler` @type ^`rx.Scheduler` @kind object;
  #L4875e2.  call temp:= `createWorker`(v1) @signature `Lrx/Scheduler;.createWorker:()Lrx/Scheduler$Worker;` @kind virtual;
  #L4875e8.  v1:= temp @kind object;
  #L4875ea.  call `add`(v0, v1) @signature `Lrx/internal/util/SubscriptionList;.add:(Lrx/Subscription;)V` @kind virtual;
  #L4875f0.  call `onSubscribe`(v5, v0) @signature `Lrx/CompletableSubscriber;.onSubscribe:(Lrx/Subscription;)V` @kind interface;
  #L4875f6.  v2:= v4.`rx.Completable$24.this$0` @type ^`rx.Completable` @kind object;
  #L4875fa.  v3:= new `rx.Completable$24$1`;
  #L4875fe.  call `<init>`(v3, v4, v1, v5, v0) @signature `Lrx/Completable$24$1;.<init>:(Lrx/Completable$24;Lrx/Scheduler$Worker;Lrx/CompletableSubscriber;Lrx/internal/util/SubscriptionList;)V` @kind direct;
  #L487604.  call `unsafeSubscribe`(v2, v3) @signature `Lrx/Completable;.unsafeSubscribe:(Lrx/CompletableSubscriber;)V` @kind virtual;
  #L48760a.  return @kind void;
}
