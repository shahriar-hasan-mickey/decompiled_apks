record `rx.Scheduler$Worker` @kind class @AccessFlag PUBLIC_ABSTRACT extends `rx.Subscription` @kind interface {
}
procedure `void` `<init>`(`rx.Scheduler$Worker` v0 @kind this) @signature `Lrx/Scheduler$Worker;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48e8f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48e8fa.  return @kind void;
}
procedure `long` `now`(`rx.Scheduler$Worker` v2 @kind this) @signature `Lrx/Scheduler$Worker;.now:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48e854.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L48e85a.  v0:= temp @kind wide;
  #L48e85c.  return v0 @kind wide;
}
procedure `rx.Subscription` `schedule`(`rx.functions.Action0` v0 @kind object) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;)Lrx/Subscription;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `rx.Subscription` `schedule`(`rx.functions.Action0` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `rx.Subscription` `schedulePeriodically`(`rx.Scheduler$Worker` v16 @kind this, `rx.functions.Action0` v17 @kind object, `long` v18 , `long` v20 , `java.util.concurrent.TimeUnit` v22 @kind object) @signature `Lrx/Scheduler$Worker;.schedulePeriodically:(Lrx/functions/Action0;JJLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L48e870.  v0:= v18 @kind wide;
  #L48e874.  v2:= v20 @kind wide;
  #L48e878.  v4:= v22 @kind object;
  #L48e87c.  call temp:= `toNanos`(v4, v2) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L48e882.  v13:= temp @kind wide;
  #L48e884.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L48e888.  call temp:= `now`(v16) @signature `Lrx/Scheduler$Worker;.now:()J` @kind virtual;
  #L48e88e.  v5:= temp @kind wide;
  #L48e890.  call temp:= `toNanos`(v2, v5) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L48e896.  v7:= temp @kind wide;
  #L48e898.  call temp:= `toNanos`(v4, v0) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L48e89e.  v2:= temp @kind wide;
  #L48e8a0.  v9:= v7 + v2 @kind long;
  #L48e8a4.  v2:= new `rx.internal.subscriptions.SequentialSubscription`;
  #L48e8a8.  call `<init>`(v2) @signature `Lrx/internal/subscriptions/SequentialSubscription;.<init>:()V` @kind direct;
  #L48e8ae.  v3:= new `rx.internal.subscriptions.SequentialSubscription`;
  #L48e8b2.  call `<init>`(v3, v2) @signature `Lrx/internal/subscriptions/SequentialSubscription;.<init>:(Lrx/Subscription;)V` @kind direct;
  #L48e8b8.  v15:= new `rx.Scheduler$Worker$1`;
  #L48e8bc.  v5:= v15 @kind object;
  #L48e8be.  v6:= v16 @kind object;
  #L48e8c2.  v11:= v17 @kind object;
  #L48e8c6.  v12:= v3 @kind object;
  #L48e8c8.  call `<init>`(v5, v6, v7, v9, v11, v12, v13) @signature `Lrx/Scheduler$Worker$1;.<init>:(Lrx/Scheduler$Worker;JJLrx/functions/Action0;Lrx/internal/subscriptions/SequentialSubscription;J)V` @kind direct;
  #L48e8ce.  v5:= v16 @kind object;
  #L48e8d2.  call temp:= `schedule`(v5, v15, v0, v4) @signature `Lrx/Scheduler$Worker;.schedule:(Lrx/functions/Action0;JLjava/util/concurrent/TimeUnit;)Lrx/Subscription;` @kind virtual;
  #L48e8d8.  v0:= temp @kind object;
  #L48e8da.  call temp:= `replace`(v2, v0) @signature `Lrx/internal/subscriptions/SequentialSubscription;.replace:(Lrx/Subscription;)Z` @kind virtual;
  #L48e8e0.  return v3 @kind object;
}
