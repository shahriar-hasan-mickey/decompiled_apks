record `rx.Completable$19$1$1` @kind class @AccessFlag  extends `rx.functions.Action0` @kind interface {
  `rx.Completable$19$1` `rx.Completable$19$1$1.this$2` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscription` `rx.Completable$19$1$1.val$d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`rx.Completable$19$1$1` v0 @kind this, `rx.Completable$19$1` v1 @kind object, `rx.Subscription` v2 @kind object) @signature `Lrx/Completable$19$1$1;.<init>:(Lrx/Completable$19$1;Lrx/Subscription;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L486fc0.  v0.`rx.Completable$19$1$1.this$2` @type ^`rx.Completable$19$1` := v1 @kind object;
  #L486fc4.  v0.`rx.Completable$19$1$1.val$d` @type ^`rx.Subscription` := v2 @kind object;
  #L486fc8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486fce.  return @kind void;
}
procedure `void` `call`(`rx.Completable$19$1$1` v1 @kind this) @signature `Lrx/Completable$19$1$1;.call:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486fe0.  v0:= v1.`rx.Completable$19$1$1.this$2` @type ^`rx.Completable$19$1` @kind object;
  #L486fe4.  v0:= v0.`rx.Completable$19$1.this$1` @type ^`rx.Completable$19` @kind object;
  #L486fe8.  v0:= v0.`rx.Completable$19.val$onUnsubscribe` @type ^`rx.functions.Action0` @kind object;
  #L486fec.  call `call`(v0) @signature `Lrx/functions/Action0;.call:()V` @kind interface;
  #L486ff2.  goto L486ffc;
  #L486ff4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L486ff6.  call `onError`(v0) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L486ffc.  v0:= v1.`rx.Completable$19$1$1.val$d` @type ^`rx.Subscription` @kind object;
  #L487000.  call `unsubscribe`(v0) @signature `Lrx/Subscription;.unsubscribe:()V` @kind interface;
  #L487006.  return @kind void;
  catch `java.lang.Throwable` @[L486fe0..L486ff2] goto L486ff4;
}
