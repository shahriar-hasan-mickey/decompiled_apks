record `rx.plugins.RxJavaHooks$14` @kind class @AccessFlag FINAL extends `rx.functions.Func1` @kind interface {
}
procedure `void` `<init>`(`rx.plugins.RxJavaHooks$14` v0 @kind this) @signature `Lrx/plugins/RxJavaHooks$14;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c0810.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c0816.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.plugins.RxJavaHooks$14` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks$14;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4c07c4.  v1:= (`rx.Observable$OnSubscribe`) v1 @kind object;
  #L4c07c8.  call temp:= `call`(v0, v1) @signature `Lrx/plugins/RxJavaHooks$14;.call:(Lrx/Observable$OnSubscribe;)Lrx/Observable$OnSubscribe;` @kind virtual;
  #L4c07ce.  v1:= temp @kind object;
  #L4c07d0.  return v1 @kind object;
}
procedure `rx.Observable$OnSubscribe` `call`(`rx.plugins.RxJavaHooks$14` v1 @kind this, `rx.Observable$OnSubscribe` v2 @kind object) @signature `Lrx/plugins/RxJavaHooks$14;.call:(Lrx/Observable$OnSubscribe;)Lrx/Observable$OnSubscribe;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c07e4.  call temp:= `getInstance`() @signature `Lrx/plugins/RxJavaPlugins;.getInstance:()Lrx/plugins/RxJavaPlugins;` @kind static;
  #L4c07ea.  v0:= temp @kind object;
  #L4c07ec.  call temp:= `getObservableExecutionHook`(v0) @signature `Lrx/plugins/RxJavaPlugins;.getObservableExecutionHook:()Lrx/plugins/RxJavaObservableExecutionHook;` @kind virtual;
  #L4c07f2.  v0:= temp @kind object;
  #L4c07f4.  call temp:= `onCreate`(v0, v2) @signature `Lrx/plugins/RxJavaObservableExecutionHook;.onCreate:(Lrx/Observable$OnSubscribe;)Lrx/Observable$OnSubscribe;` @kind virtual;
  #L4c07fa.  v2:= temp @kind object;
  #L4c07fc.  return v2 @kind object;
}
