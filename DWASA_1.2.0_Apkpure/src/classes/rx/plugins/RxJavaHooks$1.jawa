record `rx.plugins.RxJavaHooks$1` @kind class @AccessFlag FINAL extends `rx.functions.Action1` @kind interface {
}
procedure `void` `<init>`(`rx.plugins.RxJavaHooks$1` v0 @kind this) @signature `Lrx/plugins/RxJavaHooks$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c09ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c09f2.  return @kind void;
}
procedure `void` `call`(`rx.plugins.RxJavaHooks$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks$1;.call:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4c0a04.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L4c0a08.  call `call`(v0, v1) @signature `Lrx/plugins/RxJavaHooks$1;.call:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c0a0e.  return @kind void;
}
procedure `void` `call`(`rx.plugins.RxJavaHooks$1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lrx/plugins/RxJavaHooks$1;.call:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c0a20.  call temp:= `getInstance`() @signature `Lrx/plugins/RxJavaPlugins;.getInstance:()Lrx/plugins/RxJavaPlugins;` @kind static;
  #L4c0a26.  v0:= temp @kind object;
  #L4c0a28.  call temp:= `getErrorHandler`(v0) @signature `Lrx/plugins/RxJavaPlugins;.getErrorHandler:()Lrx/plugins/RxJavaErrorHandler;` @kind virtual;
  #L4c0a2e.  v0:= temp @kind object;
  #L4c0a30.  call `handleError`(v0, v2) @signature `Lrx/plugins/RxJavaErrorHandler;.handleError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c0a36.  return @kind void;
}
