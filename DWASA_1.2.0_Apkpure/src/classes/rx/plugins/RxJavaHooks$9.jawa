record `rx.plugins.RxJavaHooks$9` @kind class @AccessFlag FINAL extends `rx.functions.Func1` @kind interface {
}
procedure `void` `<init>`(`rx.plugins.RxJavaHooks$9` v0 @kind this) @signature `Lrx/plugins/RxJavaHooks$9;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c0d7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c0d82.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.plugins.RxJavaHooks$9` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks$9;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4c0d30.  v1:= (`rx.Observable$Operator`) v1 @kind object;
  #L4c0d34.  call temp:= `call`(v0, v1) @signature `Lrx/plugins/RxJavaHooks$9;.call:(Lrx/Observable$Operator;)Lrx/Observable$Operator;` @kind virtual;
  #L4c0d3a.  v1:= temp @kind object;
  #L4c0d3c.  return v1 @kind object;
}
procedure `rx.Observable$Operator` `call`(`rx.plugins.RxJavaHooks$9` v1 @kind this, `rx.Observable$Operator` v2 @kind object) @signature `Lrx/plugins/RxJavaHooks$9;.call:(Lrx/Observable$Operator;)Lrx/Observable$Operator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c0d50.  call temp:= `getInstance`() @signature `Lrx/plugins/RxJavaPlugins;.getInstance:()Lrx/plugins/RxJavaPlugins;` @kind static;
  #L4c0d56.  v0:= temp @kind object;
  #L4c0d58.  call temp:= `getObservableExecutionHook`(v0) @signature `Lrx/plugins/RxJavaPlugins;.getObservableExecutionHook:()Lrx/plugins/RxJavaObservableExecutionHook;` @kind virtual;
  #L4c0d5e.  v0:= temp @kind object;
  #L4c0d60.  call temp:= `onLift`(v0, v2) @signature `Lrx/plugins/RxJavaObservableExecutionHook;.onLift:(Lrx/Observable$Operator;)Lrx/Observable$Operator;` @kind virtual;
  #L4c0d66.  v2:= temp @kind object;
  #L4c0d68.  return v2 @kind object;
}
