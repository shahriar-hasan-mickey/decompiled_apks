record `rx.plugins.RxJavaObservableExecutionHook` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`rx.plugins.RxJavaObservableExecutionHook` v0 @kind this) @signature `Lrx/plugins/RxJavaObservableExecutionHook;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c18d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c18d6.  return @kind void;
}
procedure `rx.Observable$OnSubscribe` `onCreate`(`rx.plugins.RxJavaObservableExecutionHook` v0 @kind this, `rx.Observable$OnSubscribe` v1 @kind object) @signature `Lrx/plugins/RxJavaObservableExecutionHook;.onCreate:(Lrx/Observable$OnSubscribe;)Lrx/Observable$OnSubscribe;` @AccessFlag PUBLIC {
    temp;

  #L4c1880.  return v1 @kind object;
}
procedure `rx.Observable$Operator` `onLift`(`rx.plugins.RxJavaObservableExecutionHook` v0 @kind this, `rx.Observable$Operator` v1 @kind object) @signature `Lrx/plugins/RxJavaObservableExecutionHook;.onLift:(Lrx/Observable$Operator;)Lrx/Observable$Operator;` @AccessFlag PUBLIC {
    temp;

  #L4c18a8.  return v1 @kind object;
}
procedure `java.lang.Throwable` `onSubscribeError`(`rx.plugins.RxJavaObservableExecutionHook` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lrx/plugins/RxJavaObservableExecutionHook;.onSubscribeError:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L4c186c.  return v1 @kind object;
}
procedure `rx.Subscription` `onSubscribeReturn`(`rx.plugins.RxJavaObservableExecutionHook` v0 @kind this, `rx.Subscription` v1 @kind object) @signature `Lrx/plugins/RxJavaObservableExecutionHook;.onSubscribeReturn:(Lrx/Subscription;)Lrx/Subscription;` @AccessFlag PUBLIC {
    temp;

  #L4c18bc.  return v1 @kind object;
}
procedure `rx.Observable$OnSubscribe` `onSubscribeStart`(`rx.plugins.RxJavaObservableExecutionHook` v0 @kind this, `rx.Observable` v1 @kind object, `rx.Observable$OnSubscribe` v2 @kind object) @signature `Lrx/plugins/RxJavaObservableExecutionHook;.onSubscribeStart:(Lrx/Observable;Lrx/Observable$OnSubscribe;)Lrx/Observable$OnSubscribe;` @AccessFlag PUBLIC {
    temp;

  #L4c1894.  return v2 @kind object;
}
