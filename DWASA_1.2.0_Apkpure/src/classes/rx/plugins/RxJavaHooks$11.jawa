record `rx.plugins.RxJavaHooks$11` @kind class @AccessFlag FINAL extends `rx.functions.Func1` @kind interface {
}
procedure `void` `<init>`(`rx.plugins.RxJavaHooks$11` v0 @kind this) @signature `Lrx/plugins/RxJavaHooks$11;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c06e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c06ea.  return @kind void;
}
procedure `java.lang.Object` `call`(`rx.plugins.RxJavaHooks$11` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks$11;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4c0698.  v1:= (`rx.Observable$Operator`) v1 @kind object;
  #L4c069c.  call temp:= `call`(v0, v1) @signature `Lrx/plugins/RxJavaHooks$11;.call:(Lrx/Observable$Operator;)Lrx/Observable$Operator;` @kind virtual;
  #L4c06a2.  v1:= temp @kind object;
  #L4c06a4.  return v1 @kind object;
}
procedure `rx.Observable$Operator` `call`(`rx.plugins.RxJavaHooks$11` v1 @kind this, `rx.Observable$Operator` v2 @kind object) @signature `Lrx/plugins/RxJavaHooks$11;.call:(Lrx/Observable$Operator;)Lrx/Observable$Operator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c06b8.  call temp:= `getInstance`() @signature `Lrx/plugins/RxJavaPlugins;.getInstance:()Lrx/plugins/RxJavaPlugins;` @kind static;
  #L4c06be.  v0:= temp @kind object;
  #L4c06c0.  call temp:= `getSingleExecutionHook`(v0) @signature `Lrx/plugins/RxJavaPlugins;.getSingleExecutionHook:()Lrx/plugins/RxJavaSingleExecutionHook;` @kind virtual;
  #L4c06c6.  v0:= temp @kind object;
  #L4c06c8.  call temp:= `onLift`(v0, v2) @signature `Lrx/plugins/RxJavaSingleExecutionHook;.onLift:(Lrx/Observable$Operator;)Lrx/Observable$Operator;` @kind virtual;
  #L4c06ce.  v2:= temp @kind object;
  #L4c06d0.  return v2 @kind object;
}
