record `rx.plugins.RxJavaHooks` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@rx.plugins.RxJavaHooks.lockdown` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onCompletableCreate` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onCompletableLift` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func2` `@@rx.plugins.RxJavaHooks.onCompletableStart` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onCompletableSubscribeError` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onComputationScheduler` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Action1` `@@rx.plugins.RxJavaHooks.onError` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func0` `@@rx.plugins.RxJavaHooks.onGenericScheduledExecutorService` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onIOScheduler` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onNewThreadScheduler` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onObservableCreate` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onObservableLift` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onObservableReturn` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func2` `@@rx.plugins.RxJavaHooks.onObservableStart` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onObservableSubscribeError` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onScheduleAction` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onSingleCreate` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onSingleLift` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onSingleReturn` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func2` `@@rx.plugins.RxJavaHooks.onSingleStart` @AccessFlag STATIC_VOLATILE;
global `rx.functions.Func1` `@@rx.plugins.RxJavaHooks.onSingleSubscribeError` @AccessFlag STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lrx/plugins/RxJavaHooks;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L4c125c.  call `init`() @signature `Lrx/plugins/RxJavaHooks;.init:()V` @kind static;
  #L4c1262.  return @kind void;
}
procedure `void` `<init>`(`rx.plugins.RxJavaHooks` v2 @kind this) @signature `Lrx/plugins/RxJavaHooks;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4c1274.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c127a.  v0:= new `java.lang.IllegalStateException`;
  #L4c127e.  v1:= "No instances!" @kind object;
  #L4c1282.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c1288.  throw v0;
}
procedure `void` `clear`() @signature `Lrx/plugins/RxJavaHooks;.clear:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c129c.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c12a0.  if v0 == 0 then goto L4c12a6;
  #L4c12a4.  return @kind void;
  #L4c12a6.  v0:= 0I;
  #L4c12a8.  `@@rx.plugins.RxJavaHooks.onError` @type ^`rx.functions.Action1` := v0 @kind object;
  #L4c12ac.  `@@rx.plugins.RxJavaHooks.onObservableCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12b0.  `@@rx.plugins.RxJavaHooks.onObservableStart` @type ^`rx.functions.Func2` := v0 @kind object;
  #L4c12b4.  `@@rx.plugins.RxJavaHooks.onObservableReturn` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12b8.  `@@rx.plugins.RxJavaHooks.onObservableSubscribeError` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12bc.  `@@rx.plugins.RxJavaHooks.onObservableLift` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12c0.  `@@rx.plugins.RxJavaHooks.onSingleCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12c4.  `@@rx.plugins.RxJavaHooks.onSingleStart` @type ^`rx.functions.Func2` := v0 @kind object;
  #L4c12c8.  `@@rx.plugins.RxJavaHooks.onSingleReturn` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12cc.  `@@rx.plugins.RxJavaHooks.onSingleSubscribeError` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12d0.  `@@rx.plugins.RxJavaHooks.onSingleLift` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12d4.  `@@rx.plugins.RxJavaHooks.onCompletableCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12d8.  `@@rx.plugins.RxJavaHooks.onCompletableStart` @type ^`rx.functions.Func2` := v0 @kind object;
  #L4c12dc.  `@@rx.plugins.RxJavaHooks.onCompletableSubscribeError` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12e0.  `@@rx.plugins.RxJavaHooks.onCompletableLift` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12e4.  `@@rx.plugins.RxJavaHooks.onComputationScheduler` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12e8.  `@@rx.plugins.RxJavaHooks.onIOScheduler` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12ec.  `@@rx.plugins.RxJavaHooks.onNewThreadScheduler` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12f0.  `@@rx.plugins.RxJavaHooks.onScheduleAction` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c12f4.  `@@rx.plugins.RxJavaHooks.onGenericScheduledExecutorService` @type ^`rx.functions.Func0` := v0 @kind object;
  #L4c12f8.  return @kind void;
}
procedure `void` `clearAssemblyTracking`() @signature `Lrx/plugins/RxJavaHooks;.clearAssemblyTracking:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c130c.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1310.  if v0 == 0 then goto L4c1316;
  #L4c1314.  return @kind void;
  #L4c1316.  v0:= 0I;
  #L4c1318.  `@@rx.plugins.RxJavaHooks.onObservableCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c131c.  `@@rx.plugins.RxJavaHooks.onSingleCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c1320.  `@@rx.plugins.RxJavaHooks.onCompletableCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c1324.  return @kind void;
}
procedure `void` `enableAssemblyTracking`() @signature `Lrx/plugins/RxJavaHooks;.enableAssemblyTracking:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1338.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c133c.  if v0 == 0 then goto L4c1342;
  #L4c1340.  return @kind void;
  #L4c1342.  v0:= new `rx.plugins.RxJavaHooks$17`;
  #L4c1346.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$17;.<init>:()V` @kind direct;
  #L4c134c.  `@@rx.plugins.RxJavaHooks.onObservableCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c1350.  v0:= new `rx.plugins.RxJavaHooks$18`;
  #L4c1354.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$18;.<init>:()V` @kind direct;
  #L4c135a.  `@@rx.plugins.RxJavaHooks.onSingleCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c135e.  v0:= new `rx.plugins.RxJavaHooks$19`;
  #L4c1362.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$19;.<init>:()V` @kind direct;
  #L4c1368.  `@@rx.plugins.RxJavaHooks.onCompletableCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c136c.  return @kind void;
}
procedure `rx.functions.Func1` `getOnCompletableCreate`() @signature `Lrx/plugins/RxJavaHooks;.getOnCompletableCreate:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c10ac.  v0:= `@@rx.plugins.RxJavaHooks.onCompletableCreate` @type ^`rx.functions.Func1` @kind object;
  #L4c10b0.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnCompletableLift`() @signature `Lrx/plugins/RxJavaHooks;.getOnCompletableLift:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c10c4.  v0:= `@@rx.plugins.RxJavaHooks.onCompletableLift` @type ^`rx.functions.Func1` @kind object;
  #L4c10c8.  return v0 @kind object;
}
procedure `rx.functions.Func2` `getOnCompletableStart`() @signature `Lrx/plugins/RxJavaHooks;.getOnCompletableStart:()Lrx/functions/Func2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1214.  v0:= `@@rx.plugins.RxJavaHooks.onCompletableStart` @type ^`rx.functions.Func2` @kind object;
  #L4c1218.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnCompletableSubscribeError`() @signature `Lrx/plugins/RxJavaHooks;.getOnCompletableSubscribeError:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c10dc.  v0:= `@@rx.plugins.RxJavaHooks.onCompletableSubscribeError` @type ^`rx.functions.Func1` @kind object;
  #L4c10e0.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnComputationScheduler`() @signature `Lrx/plugins/RxJavaHooks;.getOnComputationScheduler:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c10f4.  v0:= `@@rx.plugins.RxJavaHooks.onComputationScheduler` @type ^`rx.functions.Func1` @kind object;
  #L4c10f8.  return v0 @kind object;
}
procedure `rx.functions.Action1` `getOnError`() @signature `Lrx/plugins/RxJavaHooks;.getOnError:()Lrx/functions/Action1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c107c.  v0:= `@@rx.plugins.RxJavaHooks.onError` @type ^`rx.functions.Action1` @kind object;
  #L4c1080.  return v0 @kind object;
}
procedure `rx.functions.Func0` `getOnGenericScheduledExecutorService`() @signature `Lrx/plugins/RxJavaHooks;.getOnGenericScheduledExecutorService:()Lrx/functions/Func0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1094.  v0:= `@@rx.plugins.RxJavaHooks.onGenericScheduledExecutorService` @type ^`rx.functions.Func0` @kind object;
  #L4c1098.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnIOScheduler`() @signature `Lrx/plugins/RxJavaHooks;.getOnIOScheduler:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c110c.  v0:= `@@rx.plugins.RxJavaHooks.onIOScheduler` @type ^`rx.functions.Func1` @kind object;
  #L4c1110.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnNewThreadScheduler`() @signature `Lrx/plugins/RxJavaHooks;.getOnNewThreadScheduler:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1124.  v0:= `@@rx.plugins.RxJavaHooks.onNewThreadScheduler` @type ^`rx.functions.Func1` @kind object;
  #L4c1128.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnObservableCreate`() @signature `Lrx/plugins/RxJavaHooks;.getOnObservableCreate:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c113c.  v0:= `@@rx.plugins.RxJavaHooks.onObservableCreate` @type ^`rx.functions.Func1` @kind object;
  #L4c1140.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnObservableLift`() @signature `Lrx/plugins/RxJavaHooks;.getOnObservableLift:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1154.  v0:= `@@rx.plugins.RxJavaHooks.onObservableLift` @type ^`rx.functions.Func1` @kind object;
  #L4c1158.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnObservableReturn`() @signature `Lrx/plugins/RxJavaHooks;.getOnObservableReturn:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c116c.  v0:= `@@rx.plugins.RxJavaHooks.onObservableReturn` @type ^`rx.functions.Func1` @kind object;
  #L4c1170.  return v0 @kind object;
}
procedure `rx.functions.Func2` `getOnObservableStart`() @signature `Lrx/plugins/RxJavaHooks;.getOnObservableStart:()Lrx/functions/Func2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c122c.  v0:= `@@rx.plugins.RxJavaHooks.onObservableStart` @type ^`rx.functions.Func2` @kind object;
  #L4c1230.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnObservableSubscribeError`() @signature `Lrx/plugins/RxJavaHooks;.getOnObservableSubscribeError:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1184.  v0:= `@@rx.plugins.RxJavaHooks.onObservableSubscribeError` @type ^`rx.functions.Func1` @kind object;
  #L4c1188.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnScheduleAction`() @signature `Lrx/plugins/RxJavaHooks;.getOnScheduleAction:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c119c.  v0:= `@@rx.plugins.RxJavaHooks.onScheduleAction` @type ^`rx.functions.Func1` @kind object;
  #L4c11a0.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnSingleCreate`() @signature `Lrx/plugins/RxJavaHooks;.getOnSingleCreate:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c11b4.  v0:= `@@rx.plugins.RxJavaHooks.onSingleCreate` @type ^`rx.functions.Func1` @kind object;
  #L4c11b8.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnSingleLift`() @signature `Lrx/plugins/RxJavaHooks;.getOnSingleLift:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c11cc.  v0:= `@@rx.plugins.RxJavaHooks.onSingleLift` @type ^`rx.functions.Func1` @kind object;
  #L4c11d0.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnSingleReturn`() @signature `Lrx/plugins/RxJavaHooks;.getOnSingleReturn:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c11e4.  v0:= `@@rx.plugins.RxJavaHooks.onSingleReturn` @type ^`rx.functions.Func1` @kind object;
  #L4c11e8.  return v0 @kind object;
}
procedure `rx.functions.Func2` `getOnSingleStart`() @signature `Lrx/plugins/RxJavaHooks;.getOnSingleStart:()Lrx/functions/Func2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1244.  v0:= `@@rx.plugins.RxJavaHooks.onSingleStart` @type ^`rx.functions.Func2` @kind object;
  #L4c1248.  return v0 @kind object;
}
procedure `rx.functions.Func1` `getOnSingleSubscribeError`() @signature `Lrx/plugins/RxJavaHooks;.getOnSingleSubscribeError:()Lrx/functions/Func1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c11fc.  v0:= `@@rx.plugins.RxJavaHooks.onSingleSubscribeError` @type ^`rx.functions.Func1` @kind object;
  #L4c1200.  return v0 @kind object;
}
procedure `void` `init`() @signature `Lrx/plugins/RxJavaHooks;.init:()V` @AccessFlag STATIC {
    temp;
    v0;

  #L4c1380.  v0:= new `rx.plugins.RxJavaHooks$1`;
  #L4c1384.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$1;.<init>:()V` @kind direct;
  #L4c138a.  `@@rx.plugins.RxJavaHooks.onError` @type ^`rx.functions.Action1` := v0 @kind object;
  #L4c138e.  v0:= new `rx.plugins.RxJavaHooks$2`;
  #L4c1392.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$2;.<init>:()V` @kind direct;
  #L4c1398.  `@@rx.plugins.RxJavaHooks.onObservableStart` @type ^`rx.functions.Func2` := v0 @kind object;
  #L4c139c.  v0:= new `rx.plugins.RxJavaHooks$3`;
  #L4c13a0.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$3;.<init>:()V` @kind direct;
  #L4c13a6.  `@@rx.plugins.RxJavaHooks.onObservableReturn` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c13aa.  v0:= new `rx.plugins.RxJavaHooks$4`;
  #L4c13ae.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$4;.<init>:()V` @kind direct;
  #L4c13b4.  `@@rx.plugins.RxJavaHooks.onSingleStart` @type ^`rx.functions.Func2` := v0 @kind object;
  #L4c13b8.  v0:= new `rx.plugins.RxJavaHooks$5`;
  #L4c13bc.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$5;.<init>:()V` @kind direct;
  #L4c13c2.  `@@rx.plugins.RxJavaHooks.onSingleReturn` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c13c6.  v0:= new `rx.plugins.RxJavaHooks$6`;
  #L4c13ca.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$6;.<init>:()V` @kind direct;
  #L4c13d0.  `@@rx.plugins.RxJavaHooks.onCompletableStart` @type ^`rx.functions.Func2` := v0 @kind object;
  #L4c13d4.  v0:= new `rx.plugins.RxJavaHooks$7`;
  #L4c13d8.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$7;.<init>:()V` @kind direct;
  #L4c13de.  `@@rx.plugins.RxJavaHooks.onScheduleAction` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c13e2.  v0:= new `rx.plugins.RxJavaHooks$8`;
  #L4c13e6.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$8;.<init>:()V` @kind direct;
  #L4c13ec.  `@@rx.plugins.RxJavaHooks.onObservableSubscribeError` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c13f0.  v0:= new `rx.plugins.RxJavaHooks$9`;
  #L4c13f4.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$9;.<init>:()V` @kind direct;
  #L4c13fa.  `@@rx.plugins.RxJavaHooks.onObservableLift` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c13fe.  v0:= new `rx.plugins.RxJavaHooks$10`;
  #L4c1402.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$10;.<init>:()V` @kind direct;
  #L4c1408.  `@@rx.plugins.RxJavaHooks.onSingleSubscribeError` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c140c.  v0:= new `rx.plugins.RxJavaHooks$11`;
  #L4c1410.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$11;.<init>:()V` @kind direct;
  #L4c1416.  `@@rx.plugins.RxJavaHooks.onSingleLift` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c141a.  v0:= new `rx.plugins.RxJavaHooks$12`;
  #L4c141e.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$12;.<init>:()V` @kind direct;
  #L4c1424.  `@@rx.plugins.RxJavaHooks.onCompletableSubscribeError` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c1428.  v0:= new `rx.plugins.RxJavaHooks$13`;
  #L4c142c.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$13;.<init>:()V` @kind direct;
  #L4c1432.  `@@rx.plugins.RxJavaHooks.onCompletableLift` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c1436.  call `initCreate`() @signature `Lrx/plugins/RxJavaHooks;.initCreate:()V` @kind static;
  #L4c143c.  return @kind void;
}
procedure `void` `initCreate`() @signature `Lrx/plugins/RxJavaHooks;.initCreate:()V` @AccessFlag STATIC {
    temp;
    v0;

  #L4c1450.  v0:= new `rx.plugins.RxJavaHooks$14`;
  #L4c1454.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$14;.<init>:()V` @kind direct;
  #L4c145a.  `@@rx.plugins.RxJavaHooks.onObservableCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c145e.  v0:= new `rx.plugins.RxJavaHooks$15`;
  #L4c1462.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$15;.<init>:()V` @kind direct;
  #L4c1468.  `@@rx.plugins.RxJavaHooks.onSingleCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c146c.  v0:= new `rx.plugins.RxJavaHooks$16`;
  #L4c1470.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaHooks$16;.<init>:()V` @kind direct;
  #L4c1476.  `@@rx.plugins.RxJavaHooks.onCompletableCreate` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c147a.  return @kind void;
}
procedure `boolean` `isLockdown`() @signature `Lrx/plugins/RxJavaHooks;.isLockdown:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0d94.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c0d98.  return v0;
}
procedure `void` `lockdown`() @signature `Lrx/plugins/RxJavaHooks;.lockdown:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c148c.  v0:= 1I;
  #L4c148e.  `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` := v0 @kind boolean;
  #L4c1492.  return @kind void;
}
procedure `java.lang.Throwable` `onCompletableError`(`java.lang.Throwable` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onCompletableError:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0dac.  v0:= `@@rx.plugins.RxJavaHooks.onCompletableSubscribeError` @type ^`rx.functions.Func1` @kind object;
  #L4c0db0.  if v0 == 0 then goto L4c0dc0;
  #L4c0db4.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0dba.  v1:= temp @kind object;
  #L4c0dbc.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L4c0dc0.  return v1 @kind object;
}
procedure `rx.Completable$Operator` `onCompletableLift`(`rx.Completable$Operator` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onCompletableLift:(Lrx/Completable$Operator;)Lrx/Completable$Operator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0e74.  v0:= `@@rx.plugins.RxJavaHooks.onCompletableLift` @type ^`rx.functions.Func1` @kind object;
  #L4c0e78.  if v0 == 0 then goto L4c0e88;
  #L4c0e7c.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0e82.  v1:= temp @kind object;
  #L4c0e84.  v1:= (`rx.Completable$Operator`) v1 @kind object;
  #L4c0e88.  return v1 @kind object;
}
procedure `rx.Completable$OnSubscribe` `onCompletableStart`(`rx.Completable` v1 @kind object, `rx.Completable$OnSubscribe` v2 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onCompletableStart:(Lrx/Completable;Lrx/Completable$OnSubscribe;)Lrx/Completable$OnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0e24.  v0:= `@@rx.plugins.RxJavaHooks.onCompletableStart` @type ^`rx.functions.Func2` @kind object;
  #L4c0e28.  if v0 == 0 then goto L4c0e3a;
  #L4c0e2c.  call temp:= `call`(v0, v1, v2) @signature `Lrx/functions/Func2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0e32.  v1:= temp @kind object;
  #L4c0e34.  v1:= (`rx.Completable$OnSubscribe`) v1 @kind object;
  #L4c0e38.  return v1 @kind object;
  #L4c0e3a.  return v2 @kind object;
}
procedure `rx.Scheduler` `onComputationScheduler`(`rx.Scheduler` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onComputationScheduler:(Lrx/Scheduler;)Lrx/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0f3c.  v0:= `@@rx.plugins.RxJavaHooks.onComputationScheduler` @type ^`rx.functions.Func1` @kind object;
  #L4c0f40.  if v0 == 0 then goto L4c0f50;
  #L4c0f44.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0f4a.  v1:= temp @kind object;
  #L4c0f4c.  v1:= (`rx.Scheduler`) v1 @kind object;
  #L4c0f50.  return v1 @kind object;
}
procedure `rx.Completable$OnSubscribe` `onCreate`(`rx.Completable$OnSubscribe` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onCreate:(Lrx/Completable$OnSubscribe;)Lrx/Completable$OnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0e4c.  v0:= `@@rx.plugins.RxJavaHooks.onCompletableCreate` @type ^`rx.functions.Func1` @kind object;
  #L4c0e50.  if v0 == 0 then goto L4c0e60;
  #L4c0e54.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0e5a.  v1:= temp @kind object;
  #L4c0e5c.  v1:= (`rx.Completable$OnSubscribe`) v1 @kind object;
  #L4c0e60.  return v1 @kind object;
}
procedure `rx.Observable$OnSubscribe` `onCreate`(`rx.Observable$OnSubscribe` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onCreate:(Lrx/Observable$OnSubscribe;)Lrx/Observable$OnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0e9c.  v0:= `@@rx.plugins.RxJavaHooks.onObservableCreate` @type ^`rx.functions.Func1` @kind object;
  #L4c0ea0.  if v0 == 0 then goto L4c0eb0;
  #L4c0ea4.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0eaa.  v1:= temp @kind object;
  #L4c0eac.  v1:= (`rx.Observable$OnSubscribe`) v1 @kind object;
  #L4c0eb0.  return v1 @kind object;
}
procedure `rx.Single$OnSubscribe` `onCreate`(`rx.Single$OnSubscribe` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onCreate:(Lrx/Single$OnSubscribe;)Lrx/Single$OnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0fb4.  v0:= `@@rx.plugins.RxJavaHooks.onSingleCreate` @type ^`rx.functions.Func1` @kind object;
  #L4c0fb8.  if v0 == 0 then goto L4c0fc8;
  #L4c0fbc.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0fc2.  v1:= temp @kind object;
  #L4c0fc4.  v1:= (`rx.Single$OnSubscribe`) v1 @kind object;
  #L4c0fc8.  return v1 @kind object;
}
procedure `void` `onError`(`java.lang.Throwable` v4 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c14a4.  v0:= `@@rx.plugins.RxJavaHooks.onError` @type ^`rx.functions.Action1` @kind object;
  #L4c14a8.  if v0 == 0 then goto L4c14f6;
  #L4c14ac.  call `call`(v0, v4) @signature `Lrx/functions/Action1;.call:(Ljava/lang/Object;)V` @kind interface;
  #L4c14b2.  return @kind void;
  #L4c14b4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c14b6.  v1:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L4c14ba.  v2:= new `java.lang.StringBuilder`;
  #L4c14be.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c14c4.  v3:= "The onError handler threw an Exception. It shouldn't. => " @kind object;
  #L4c14c8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c14ce.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L4c14d4.  v3:= temp @kind object;
  #L4c14d6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c14dc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c14e2.  v2:= temp @kind object;
  #L4c14e4.  call `println`(v1, v2) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L4c14ea.  call `printStackTrace`(v0) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L4c14f0.  call `signalUncaught`(v0) @signature `Lrx/plugins/RxJavaHooks;.signalUncaught:(Ljava/lang/Throwable;)V` @kind static;
  #L4c14f6.  call `signalUncaught`(v4) @signature `Lrx/plugins/RxJavaHooks;.signalUncaught:(Ljava/lang/Throwable;)V` @kind static;
  #L4c14fc.  return @kind void;
  catch `java.lang.Throwable` @[L4c14ac..L4c14b2] goto L4c14b4;
}
procedure `rx.Scheduler` `onIOScheduler`(`rx.Scheduler` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onIOScheduler:(Lrx/Scheduler;)Lrx/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0f64.  v0:= `@@rx.plugins.RxJavaHooks.onIOScheduler` @type ^`rx.functions.Func1` @kind object;
  #L4c0f68.  if v0 == 0 then goto L4c0f78;
  #L4c0f6c.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0f72.  v1:= temp @kind object;
  #L4c0f74.  v1:= (`rx.Scheduler`) v1 @kind object;
  #L4c0f78.  return v1 @kind object;
}
procedure `rx.Scheduler` `onNewThreadScheduler`(`rx.Scheduler` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onNewThreadScheduler:(Lrx/Scheduler;)Lrx/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0f8c.  v0:= `@@rx.plugins.RxJavaHooks.onNewThreadScheduler` @type ^`rx.functions.Func1` @kind object;
  #L4c0f90.  if v0 == 0 then goto L4c0fa0;
  #L4c0f94.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0f9a.  v1:= temp @kind object;
  #L4c0f9c.  v1:= (`rx.Scheduler`) v1 @kind object;
  #L4c0fa0.  return v1 @kind object;
}
procedure `java.lang.Throwable` `onObservableError`(`java.lang.Throwable` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onObservableError:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0dd4.  v0:= `@@rx.plugins.RxJavaHooks.onObservableSubscribeError` @type ^`rx.functions.Func1` @kind object;
  #L4c0dd8.  if v0 == 0 then goto L4c0de8;
  #L4c0ddc.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0de2.  v1:= temp @kind object;
  #L4c0de4.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L4c0de8.  return v1 @kind object;
}
procedure `rx.Observable$Operator` `onObservableLift`(`rx.Observable$Operator` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onObservableLift:(Lrx/Observable$Operator;)Lrx/Observable$Operator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0eec.  v0:= `@@rx.plugins.RxJavaHooks.onObservableLift` @type ^`rx.functions.Func1` @kind object;
  #L4c0ef0.  if v0 == 0 then goto L4c0f00;
  #L4c0ef4.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0efa.  v1:= temp @kind object;
  #L4c0efc.  v1:= (`rx.Observable$Operator`) v1 @kind object;
  #L4c0f00.  return v1 @kind object;
}
procedure `rx.Subscription` `onObservableReturn`(`rx.Subscription` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onObservableReturn:(Lrx/Subscription;)Lrx/Subscription;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1004.  v0:= `@@rx.plugins.RxJavaHooks.onObservableReturn` @type ^`rx.functions.Func1` @kind object;
  #L4c1008.  if v0 == 0 then goto L4c1018;
  #L4c100c.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c1012.  v1:= temp @kind object;
  #L4c1014.  v1:= (`rx.Subscription`) v1 @kind object;
  #L4c1018.  return v1 @kind object;
}
procedure `rx.Observable$OnSubscribe` `onObservableStart`(`rx.Observable` v1 @kind object, `rx.Observable$OnSubscribe` v2 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onObservableStart:(Lrx/Observable;Lrx/Observable$OnSubscribe;)Lrx/Observable$OnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0ec4.  v0:= `@@rx.plugins.RxJavaHooks.onObservableStart` @type ^`rx.functions.Func2` @kind object;
  #L4c0ec8.  if v0 == 0 then goto L4c0eda;
  #L4c0ecc.  call temp:= `call`(v0, v1, v2) @signature `Lrx/functions/Func2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0ed2.  v1:= temp @kind object;
  #L4c0ed4.  v1:= (`rx.Observable$OnSubscribe`) v1 @kind object;
  #L4c0ed8.  return v1 @kind object;
  #L4c0eda.  return v2 @kind object;
}
procedure `rx.functions.Action0` `onScheduledAction`(`rx.functions.Action0` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onScheduledAction:(Lrx/functions/Action0;)Lrx/functions/Action0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1054.  v0:= `@@rx.plugins.RxJavaHooks.onScheduleAction` @type ^`rx.functions.Func1` @kind object;
  #L4c1058.  if v0 == 0 then goto L4c1068;
  #L4c105c.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c1062.  v1:= temp @kind object;
  #L4c1064.  v1:= (`rx.functions.Action0`) v1 @kind object;
  #L4c1068.  return v1 @kind object;
}
procedure `java.lang.Throwable` `onSingleError`(`java.lang.Throwable` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onSingleError:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0dfc.  v0:= `@@rx.plugins.RxJavaHooks.onSingleSubscribeError` @type ^`rx.functions.Func1` @kind object;
  #L4c0e00.  if v0 == 0 then goto L4c0e10;
  #L4c0e04.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0e0a.  v1:= temp @kind object;
  #L4c0e0c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L4c0e10.  return v1 @kind object;
}
procedure `rx.Observable$Operator` `onSingleLift`(`rx.Observable$Operator` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onSingleLift:(Lrx/Observable$Operator;)Lrx/Observable$Operator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0f14.  v0:= `@@rx.plugins.RxJavaHooks.onSingleLift` @type ^`rx.functions.Func1` @kind object;
  #L4c0f18.  if v0 == 0 then goto L4c0f28;
  #L4c0f1c.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0f22.  v1:= temp @kind object;
  #L4c0f24.  v1:= (`rx.Observable$Operator`) v1 @kind object;
  #L4c0f28.  return v1 @kind object;
}
procedure `rx.Subscription` `onSingleReturn`(`rx.Subscription` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onSingleReturn:(Lrx/Subscription;)Lrx/Subscription;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c102c.  v0:= `@@rx.plugins.RxJavaHooks.onSingleReturn` @type ^`rx.functions.Func1` @kind object;
  #L4c1030.  if v0 == 0 then goto L4c1040;
  #L4c1034.  call temp:= `call`(v0, v1) @signature `Lrx/functions/Func1;.call:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c103a.  v1:= temp @kind object;
  #L4c103c.  v1:= (`rx.Subscription`) v1 @kind object;
  #L4c1040.  return v1 @kind object;
}
procedure `rx.Single$OnSubscribe` `onSingleStart`(`rx.Single` v1 @kind object, `rx.Single$OnSubscribe` v2 @kind object) @signature `Lrx/plugins/RxJavaHooks;.onSingleStart:(Lrx/Single;Lrx/Single$OnSubscribe;)Lrx/Single$OnSubscribe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c0fdc.  v0:= `@@rx.plugins.RxJavaHooks.onSingleStart` @type ^`rx.functions.Func2` @kind object;
  #L4c0fe0.  if v0 == 0 then goto L4c0ff2;
  #L4c0fe4.  call temp:= `call`(v0, v1, v2) @signature `Lrx/functions/Func2;.call:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c0fea.  v1:= temp @kind object;
  #L4c0fec.  v1:= (`rx.Single$OnSubscribe`) v1 @kind object;
  #L4c0ff0.  return v1 @kind object;
  #L4c0ff2.  return v2 @kind object;
}
procedure `void` `reset`() @signature `Lrx/plugins/RxJavaHooks;.reset:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c151c.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1520.  if v0 == 0 then goto L4c1526;
  #L4c1524.  return @kind void;
  #L4c1526.  call `init`() @signature `Lrx/plugins/RxJavaHooks;.init:()V` @kind static;
  #L4c152c.  v0:= 0I;
  #L4c152e.  `@@rx.plugins.RxJavaHooks.onComputationScheduler` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c1532.  `@@rx.plugins.RxJavaHooks.onIOScheduler` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c1536.  `@@rx.plugins.RxJavaHooks.onNewThreadScheduler` @type ^`rx.functions.Func1` := v0 @kind object;
  #L4c153a.  `@@rx.plugins.RxJavaHooks.onGenericScheduledExecutorService` @type ^`rx.functions.Func0` := v0 @kind object;
  #L4c153e.  return @kind void;
}
procedure `void` `resetAssemblyTracking`() @signature `Lrx/plugins/RxJavaHooks;.resetAssemblyTracking:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1550.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1554.  if v0 == 0 then goto L4c155a;
  #L4c1558.  return @kind void;
  #L4c155a.  call `initCreate`() @signature `Lrx/plugins/RxJavaHooks;.initCreate:()V` @kind static;
  #L4c1560.  return @kind void;
}
procedure `void` `setOnCompletableCreate`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnCompletableCreate:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1574.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1578.  if v0 == 0 then goto L4c157e;
  #L4c157c.  return @kind void;
  #L4c157e.  `@@rx.plugins.RxJavaHooks.onCompletableCreate` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c1582.  return @kind void;
}
procedure `void` `setOnCompletableLift`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnCompletableLift:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1594.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1598.  if v0 == 0 then goto L4c159e;
  #L4c159c.  return @kind void;
  #L4c159e.  `@@rx.plugins.RxJavaHooks.onCompletableLift` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c15a2.  return @kind void;
}
procedure `void` `setOnCompletableStart`(`rx.functions.Func2` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnCompletableStart:(Lrx/functions/Func2;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c15b4.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c15b8.  if v0 == 0 then goto L4c15be;
  #L4c15bc.  return @kind void;
  #L4c15be.  `@@rx.plugins.RxJavaHooks.onCompletableStart` @type ^`rx.functions.Func2` := v1 @kind object;
  #L4c15c2.  return @kind void;
}
procedure `void` `setOnCompletableSubscribeError`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnCompletableSubscribeError:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c15d4.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c15d8.  if v0 == 0 then goto L4c15de;
  #L4c15dc.  return @kind void;
  #L4c15de.  `@@rx.plugins.RxJavaHooks.onCompletableSubscribeError` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c15e2.  return @kind void;
}
procedure `void` `setOnComputationScheduler`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnComputationScheduler:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c15f4.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c15f8.  if v0 == 0 then goto L4c15fe;
  #L4c15fc.  return @kind void;
  #L4c15fe.  `@@rx.plugins.RxJavaHooks.onComputationScheduler` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c1602.  return @kind void;
}
procedure `void` `setOnError`(`rx.functions.Action1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnError:(Lrx/functions/Action1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1614.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1618.  if v0 == 0 then goto L4c161e;
  #L4c161c.  return @kind void;
  #L4c161e.  `@@rx.plugins.RxJavaHooks.onError` @type ^`rx.functions.Action1` := v1 @kind object;
  #L4c1622.  return @kind void;
}
procedure `void` `setOnGenericScheduledExecutorService`(`rx.functions.Func0` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnGenericScheduledExecutorService:(Lrx/functions/Func0;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1634.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1638.  if v0 == 0 then goto L4c163e;
  #L4c163c.  return @kind void;
  #L4c163e.  `@@rx.plugins.RxJavaHooks.onGenericScheduledExecutorService` @type ^`rx.functions.Func0` := v1 @kind object;
  #L4c1642.  return @kind void;
}
procedure `void` `setOnIOScheduler`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnIOScheduler:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1654.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1658.  if v0 == 0 then goto L4c165e;
  #L4c165c.  return @kind void;
  #L4c165e.  `@@rx.plugins.RxJavaHooks.onIOScheduler` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c1662.  return @kind void;
}
procedure `void` `setOnNewThreadScheduler`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnNewThreadScheduler:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1674.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1678.  if v0 == 0 then goto L4c167e;
  #L4c167c.  return @kind void;
  #L4c167e.  `@@rx.plugins.RxJavaHooks.onNewThreadScheduler` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c1682.  return @kind void;
}
procedure `void` `setOnObservableCreate`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnObservableCreate:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1694.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1698.  if v0 == 0 then goto L4c169e;
  #L4c169c.  return @kind void;
  #L4c169e.  `@@rx.plugins.RxJavaHooks.onObservableCreate` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c16a2.  return @kind void;
}
procedure `void` `setOnObservableLift`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnObservableLift:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c16b4.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c16b8.  if v0 == 0 then goto L4c16be;
  #L4c16bc.  return @kind void;
  #L4c16be.  `@@rx.plugins.RxJavaHooks.onObservableLift` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c16c2.  return @kind void;
}
procedure `void` `setOnObservableReturn`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnObservableReturn:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c16d4.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c16d8.  if v0 == 0 then goto L4c16de;
  #L4c16dc.  return @kind void;
  #L4c16de.  `@@rx.plugins.RxJavaHooks.onObservableReturn` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c16e2.  return @kind void;
}
procedure `void` `setOnObservableStart`(`rx.functions.Func2` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnObservableStart:(Lrx/functions/Func2;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c16f4.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c16f8.  if v0 == 0 then goto L4c16fe;
  #L4c16fc.  return @kind void;
  #L4c16fe.  `@@rx.plugins.RxJavaHooks.onObservableStart` @type ^`rx.functions.Func2` := v1 @kind object;
  #L4c1702.  return @kind void;
}
procedure `void` `setOnObservableSubscribeError`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnObservableSubscribeError:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1714.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1718.  if v0 == 0 then goto L4c171e;
  #L4c171c.  return @kind void;
  #L4c171e.  `@@rx.plugins.RxJavaHooks.onObservableSubscribeError` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c1722.  return @kind void;
}
procedure `void` `setOnScheduleAction`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnScheduleAction:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1734.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1738.  if v0 == 0 then goto L4c173e;
  #L4c173c.  return @kind void;
  #L4c173e.  `@@rx.plugins.RxJavaHooks.onScheduleAction` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c1742.  return @kind void;
}
procedure `void` `setOnSingleCreate`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnSingleCreate:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1754.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1758.  if v0 == 0 then goto L4c175e;
  #L4c175c.  return @kind void;
  #L4c175e.  `@@rx.plugins.RxJavaHooks.onSingleCreate` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c1762.  return @kind void;
}
procedure `void` `setOnSingleLift`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnSingleLift:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1774.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1778.  if v0 == 0 then goto L4c177e;
  #L4c177c.  return @kind void;
  #L4c177e.  `@@rx.plugins.RxJavaHooks.onSingleLift` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c1782.  return @kind void;
}
procedure `void` `setOnSingleReturn`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnSingleReturn:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c1794.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c1798.  if v0 == 0 then goto L4c179e;
  #L4c179c.  return @kind void;
  #L4c179e.  `@@rx.plugins.RxJavaHooks.onSingleReturn` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c17a2.  return @kind void;
}
procedure `void` `setOnSingleStart`(`rx.functions.Func2` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnSingleStart:(Lrx/functions/Func2;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c17b4.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c17b8.  if v0 == 0 then goto L4c17be;
  #L4c17bc.  return @kind void;
  #L4c17be.  `@@rx.plugins.RxJavaHooks.onSingleStart` @type ^`rx.functions.Func2` := v1 @kind object;
  #L4c17c2.  return @kind void;
}
procedure `void` `setOnSingleSubscribeError`(`rx.functions.Func1` v1 @kind object) @signature `Lrx/plugins/RxJavaHooks;.setOnSingleSubscribeError:(Lrx/functions/Func1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c17d4.  v0:= `@@rx.plugins.RxJavaHooks.lockdown` @type ^`boolean` @kind boolean;
  #L4c17d8.  if v0 == 0 then goto L4c17de;
  #L4c17dc.  return @kind void;
  #L4c17de.  `@@rx.plugins.RxJavaHooks.onSingleSubscribeError` @type ^`rx.functions.Func1` := v1 @kind object;
  #L4c17e2.  return @kind void;
}
procedure `void` `signalUncaught`(`java.lang.Throwable` v2 @kind object) @signature `Lrx/plugins/RxJavaHooks;.signalUncaught:(Ljava/lang/Throwable;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4c17f4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4c17fa.  v0:= temp @kind object;
  #L4c17fc.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L4c1802.  v1:= temp @kind object;
  #L4c1804.  call `uncaughtException`(v1, v0, v2) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L4c180a.  return @kind void;
}
