record `rx.plugins.RxJavaObservableExecutionHookDefault` @kind class @AccessFlag FINAL extends `rx.plugins.RxJavaObservableExecutionHook` @kind class {
}
global `rx.plugins.RxJavaObservableExecutionHookDefault` `@@rx.plugins.RxJavaObservableExecutionHookDefault.INSTANCE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/plugins/RxJavaObservableExecutionHookDefault;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4c1834.  v0:= new `rx.plugins.RxJavaObservableExecutionHookDefault`;
  #L4c1838.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaObservableExecutionHookDefault;.<init>:()V` @kind direct;
  #L4c183e.  `@@rx.plugins.RxJavaObservableExecutionHookDefault.INSTANCE` @type ^`rx.plugins.RxJavaObservableExecutionHookDefault` := v0 @kind object;
  #L4c1842.  return @kind void;
}
procedure `void` `<init>`(`rx.plugins.RxJavaObservableExecutionHookDefault` v0 @kind this) @signature `Lrx/plugins/RxJavaObservableExecutionHookDefault;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4c1854.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaObservableExecutionHook;.<init>:()V` @kind direct;
  #L4c185a.  return @kind void;
}
procedure `rx.plugins.RxJavaObservableExecutionHook` `getInstance`() @signature `Lrx/plugins/RxJavaObservableExecutionHookDefault;.getInstance:()Lrx/plugins/RxJavaObservableExecutionHook;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c181c.  v0:= `@@rx.plugins.RxJavaObservableExecutionHookDefault.INSTANCE` @type ^`rx.plugins.RxJavaObservableExecutionHookDefault` @kind object;
  #L4c1820.  return v0 @kind object;
}
