record `rx.plugins.RxJavaSchedulersHook` @kind class @AccessFlag PUBLIC {
}
global `rx.plugins.RxJavaSchedulersHook` `@@rx.plugins.RxJavaSchedulersHook.DEFAULT_INSTANCE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrx/plugins/RxJavaSchedulersHook;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4c2228.  v0:= new `rx.plugins.RxJavaSchedulersHook`;
  #L4c222c.  call `<init>`(v0) @signature `Lrx/plugins/RxJavaSchedulersHook;.<init>:()V` @kind direct;
  #L4c2232.  `@@rx.plugins.RxJavaSchedulersHook.DEFAULT_INSTANCE` @type ^`rx.plugins.RxJavaSchedulersHook` := v0 @kind object;
  #L4c2236.  return @kind void;
}
procedure `void` `<init>`(`rx.plugins.RxJavaSchedulersHook` v0 @kind this) @signature `Lrx/plugins/RxJavaSchedulersHook;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c2248.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c224e.  return @kind void;
}
procedure `rx.Scheduler` `createComputationScheduler`() @signature `Lrx/plugins/RxJavaSchedulersHook;.createComputationScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4c20b8.  v0:= new `rx.internal.util.RxThreadFactory`;
  #L4c20bc.  v1:= "RxComputationScheduler-" @kind object;
  #L4c20c0.  call `<init>`(v0, v1) @signature `Lrx/internal/util/RxThreadFactory;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c20c6.  call temp:= `createComputationScheduler`(v0) @signature `Lrx/plugins/RxJavaSchedulersHook;.createComputationScheduler:(Ljava/util/concurrent/ThreadFactory;)Lrx/Scheduler;` @kind static;
  #L4c20cc.  v0:= temp @kind object;
  #L4c20ce.  return v0 @kind object;
}
procedure `rx.Scheduler` `createComputationScheduler`(`java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lrx/plugins/RxJavaSchedulersHook;.createComputationScheduler:(Ljava/util/concurrent/ThreadFactory;)Lrx/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c20e0.  if v1 == 0 then goto L4c20f0;
  #L4c20e4.  v0:= new `rx.internal.schedulers.EventLoopsScheduler`;
  #L4c20e8.  call `<init>`(v0, v1) @signature `Lrx/internal/schedulers/EventLoopsScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L4c20ee.  return v0 @kind object;
  #L4c20f0.  v1:= new `java.lang.NullPointerException`;
  #L4c20f4.  v0:= "threadFactory == null" @kind object;
  #L4c20f8.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c20fe.  throw v1;
}
procedure `rx.Scheduler` `createIoScheduler`() @signature `Lrx/plugins/RxJavaSchedulersHook;.createIoScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4c2110.  v0:= new `rx.internal.util.RxThreadFactory`;
  #L4c2114.  v1:= "RxIoScheduler-" @kind object;
  #L4c2118.  call `<init>`(v0, v1) @signature `Lrx/internal/util/RxThreadFactory;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c211e.  call temp:= `createIoScheduler`(v0) @signature `Lrx/plugins/RxJavaSchedulersHook;.createIoScheduler:(Ljava/util/concurrent/ThreadFactory;)Lrx/Scheduler;` @kind static;
  #L4c2124.  v0:= temp @kind object;
  #L4c2126.  return v0 @kind object;
}
procedure `rx.Scheduler` `createIoScheduler`(`java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lrx/plugins/RxJavaSchedulersHook;.createIoScheduler:(Ljava/util/concurrent/ThreadFactory;)Lrx/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c2138.  if v1 == 0 then goto L4c2148;
  #L4c213c.  v0:= new `rx.internal.schedulers.CachedThreadScheduler`;
  #L4c2140.  call `<init>`(v0, v1) @signature `Lrx/internal/schedulers/CachedThreadScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L4c2146.  return v0 @kind object;
  #L4c2148.  v1:= new `java.lang.NullPointerException`;
  #L4c214c.  v0:= "threadFactory == null" @kind object;
  #L4c2150.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c2156.  throw v1;
}
procedure `rx.Scheduler` `createNewThreadScheduler`() @signature `Lrx/plugins/RxJavaSchedulersHook;.createNewThreadScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4c2168.  v0:= new `rx.internal.util.RxThreadFactory`;
  #L4c216c.  v1:= "RxNewThreadScheduler-" @kind object;
  #L4c2170.  call `<init>`(v0, v1) @signature `Lrx/internal/util/RxThreadFactory;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c2176.  call temp:= `createNewThreadScheduler`(v0) @signature `Lrx/plugins/RxJavaSchedulersHook;.createNewThreadScheduler:(Ljava/util/concurrent/ThreadFactory;)Lrx/Scheduler;` @kind static;
  #L4c217c.  v0:= temp @kind object;
  #L4c217e.  return v0 @kind object;
}
procedure `rx.Scheduler` `createNewThreadScheduler`(`java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lrx/plugins/RxJavaSchedulersHook;.createNewThreadScheduler:(Ljava/util/concurrent/ThreadFactory;)Lrx/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c2190.  if v1 == 0 then goto L4c21a0;
  #L4c2194.  v0:= new `rx.internal.schedulers.NewThreadScheduler`;
  #L4c2198.  call `<init>`(v0, v1) @signature `Lrx/internal/schedulers/NewThreadScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L4c219e.  return v0 @kind object;
  #L4c21a0.  v1:= new `java.lang.NullPointerException`;
  #L4c21a4.  v0:= "threadFactory == null" @kind object;
  #L4c21a8.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c21ae.  throw v1;
}
procedure `rx.plugins.RxJavaSchedulersHook` `getDefaultInstance`() @signature `Lrx/plugins/RxJavaSchedulersHook;.getDefaultInstance:()Lrx/plugins/RxJavaSchedulersHook;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c2210.  v0:= `@@rx.plugins.RxJavaSchedulersHook.DEFAULT_INSTANCE` @type ^`rx.plugins.RxJavaSchedulersHook` @kind object;
  #L4c2214.  return v0 @kind object;
}
procedure `rx.Scheduler` `getComputationScheduler`(`rx.plugins.RxJavaSchedulersHook` v1 @kind this) @signature `Lrx/plugins/RxJavaSchedulersHook;.getComputationScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c21c0.  v0:= 0I;
  #L4c21c2.  return v0 @kind object;
}
procedure `rx.Scheduler` `getIOScheduler`(`rx.plugins.RxJavaSchedulersHook` v1 @kind this) @signature `Lrx/plugins/RxJavaSchedulersHook;.getIOScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c21d4.  v0:= 0I;
  #L4c21d6.  return v0 @kind object;
}
procedure `rx.Scheduler` `getNewThreadScheduler`(`rx.plugins.RxJavaSchedulersHook` v1 @kind this) @signature `Lrx/plugins/RxJavaSchedulersHook;.getNewThreadScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c21e8.  v0:= 0I;
  #L4c21ea.  return v0 @kind object;
}
procedure `rx.functions.Action0` `onSchedule`(`rx.plugins.RxJavaSchedulersHook` v0 @kind this, `rx.functions.Action0` v1 @kind object) @signature `Lrx/plugins/RxJavaSchedulersHook;.onSchedule:(Lrx/functions/Action0;)Lrx/functions/Action0;` @AccessFlag PUBLIC {
    temp;

  #L4c21fc.  return v1 @kind object;
}
