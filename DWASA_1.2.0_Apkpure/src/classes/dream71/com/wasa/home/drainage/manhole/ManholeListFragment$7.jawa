record `dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7` @kind class @AccessFlag  extends `com.arasthel.asyncjob.AsyncJob$AsyncAction` @kind interface {
  `dream71.com.wasa.home.drainage.manhole.ManholeListFragment` `dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7.val$tubewellList` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7` v0 @kind this, `dream71.com.wasa.home.drainage.manhole.ManholeListFragment` v1 @kind object, `java.util.List` v2 @kind object) @signature `Ldream71/com/wasa/home/drainage/manhole/ManholeListFragment$7;.<init>:(Ldream71/com/wasa/home/drainage/manhole/ManholeListFragment;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L389df8.  v0.`dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7.this$0` @type ^`dream71.com.wasa.home.drainage.manhole.ManholeListFragment` := v1 @kind object;
  #L389dfc.  v0.`dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7.val$tubewellList` @type ^`java.util.List` := v2 @kind object;
  #L389e00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L389e06.  return @kind void;
}
procedure `java.lang.Boolean` `doAsync`(`dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7` v4 @kind this) @signature `Ldream71/com/wasa/home/drainage/manhole/ManholeListFragment$7;.doAsync:()Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L389d20.  v0:= v4.`dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7.this$0` @type ^`dream71.com.wasa.home.drainage.manhole.ManholeListFragment` @kind object;
  #L389d24.  v0:= v0.`dream71.com.wasa.home.drainage.manhole.ManholeListFragment.databaseHelper` @type ^`dream71.com.wasa.database.DatabaseHelper` @kind object;
  #L389d28.  call temp:= `ManholedaoAccess`(v0) @signature `Ldream71/com/wasa/database/DatabaseHelper;.ManholedaoAccess:()Ldream71/com/wasa/home/drainage/manhole/ManholeDaoAccess;` @kind virtual;
  #L389d2e.  v0:= temp @kind object;
  #L389d30.  call `DeleteAllData`(v0) @signature `Ldream71/com/wasa/home/drainage/manhole/ManholeDaoAccess;.DeleteAllData:()V` @kind interface;
  #L389d36.  v0:= v4.`dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7.this$0` @type ^`dream71.com.wasa.home.drainage.manhole.ManholeListFragment` @kind object;
  #L389d3a.  v0:= v0.`dream71.com.wasa.home.drainage.manhole.ManholeListFragment.databaseHelper` @type ^`dream71.com.wasa.database.DatabaseHelper` @kind object;
  #L389d3e.  call temp:= `ManholedaoAccess`(v0) @signature `Ldream71/com/wasa/database/DatabaseHelper;.ManholedaoAccess:()Ldream71/com/wasa/home/drainage/manhole/ManholeDaoAccess;` @kind virtual;
  #L389d44.  v0:= temp @kind object;
  #L389d46.  v1:= v4.`dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7.val$tubewellList` @type ^`java.util.List` @kind object;
  #L389d4a.  call `insertMultipleListRecord`(v0, v1) @signature `Ldream71/com/wasa/home/drainage/manhole/ManholeDaoAccess;.insertMultipleListRecord:(Ljava/util/List;)V` @kind interface;
  #L389d50.  v0:= "databaseHelper" @kind object;
  #L389d54.  v1:= new `java.lang.StringBuilder`;
  #L389d58.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L389d5e.  v2:= "" @kind object;
  #L389d62.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L389d68.  v2:= new `com.google.gson.Gson`;
  #L389d6c.  call `<init>`(v2) @signature `Lcom/google/gson/Gson;.<init>:()V` @kind direct;
  #L389d72.  v3:= v4.`dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7.this$0` @type ^`dream71.com.wasa.home.drainage.manhole.ManholeListFragment` @kind object;
  #L389d76.  v3:= v3.`dream71.com.wasa.home.drainage.manhole.ManholeListFragment.databaseHelper` @type ^`dream71.com.wasa.database.DatabaseHelper` @kind object;
  #L389d7a.  call temp:= `ManholedaoAccess`(v3) @signature `Ldream71/com/wasa/database/DatabaseHelper;.ManholedaoAccess:()Ldream71/com/wasa/home/drainage/manhole/ManholeDaoAccess;` @kind virtual;
  #L389d80.  v3:= temp @kind object;
  #L389d82.  call temp:= `fetchAllData`(v3) @signature `Ldream71/com/wasa/home/drainage/manhole/ManholeDaoAccess;.fetchAllData:()Ljava/util/List;` @kind interface;
  #L389d88.  v3:= temp @kind object;
  #L389d8a.  call temp:= `toJson`(v2, v3) @signature `Lcom/google/gson/Gson;.toJson:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L389d90.  v2:= temp @kind object;
  #L389d92.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L389d98.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L389d9e.  v1:= temp @kind object;
  #L389da0.  call temp:= `e`(v0, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L389da6.  goto L389db0;
  #L389da8.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L389daa.  call `printStackTrace`(v0) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L389db0.  v0:= 1I;
  #L389db2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L389db8.  v0:= temp @kind object;
  #L389dba.  return v0 @kind object;
  catch `java.lang.Exception` @[L389d20..L389da6] goto L389da8;
}
procedure `java.lang.Object` `doAsync`(`dream71.com.wasa.home.drainage.manhole.ManholeListFragment$7` v1 @kind this) @signature `Ldream71/com/wasa/home/drainage/manhole/ManholeListFragment$7;.doAsync:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L389ddc.  call temp:= `doAsync`(v1) @signature `Ldream71/com/wasa/home/drainage/manhole/ManholeListFragment$7;.doAsync:()Ljava/lang/Boolean;` @kind virtual;
  #L389de2.  v0:= temp @kind object;
  #L389de4.  return v0 @kind object;
}
