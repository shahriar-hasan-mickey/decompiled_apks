record `retrofit.RestAdapter$Builder` @kind class @AccessFlag PUBLIC {
  `java.util.concurrent.Executor` `retrofit.RestAdapter$Builder.callbackExecutor` @AccessFlag PRIVATE;
  `retrofit.client.Client$Provider` `retrofit.RestAdapter$Builder.clientProvider` @AccessFlag PRIVATE;
  `retrofit.converter.Converter` `retrofit.RestAdapter$Builder.converter` @AccessFlag PRIVATE;
  `retrofit.Endpoint` `retrofit.RestAdapter$Builder.endpoint` @AccessFlag PRIVATE;
  `retrofit.ErrorHandler` `retrofit.RestAdapter$Builder.errorHandler` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `retrofit.RestAdapter$Builder.httpExecutor` @AccessFlag PRIVATE;
  `retrofit.RestAdapter$Log` `retrofit.RestAdapter$Builder.log` @AccessFlag PRIVATE;
  `retrofit.RestAdapter$LogLevel` `retrofit.RestAdapter$Builder.logLevel` @AccessFlag PRIVATE;
  `retrofit.Profiler` `retrofit.RestAdapter$Builder.profiler` @AccessFlag PRIVATE;
  `retrofit.RequestInterceptor` `retrofit.RestAdapter$Builder.requestInterceptor` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`retrofit.RestAdapter$Builder` v1 @kind this) @signature `Lretrofit/RestAdapter$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L24dde0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24dde6.  v0:= `@@retrofit.RestAdapter$LogLevel.NONE` @type ^`retrofit.RestAdapter$LogLevel` @kind object;
  #L24ddea.  v1.`retrofit.RestAdapter$Builder.logLevel` @type ^`retrofit.RestAdapter$LogLevel` := v0 @kind object;
  #L24ddee.  return @kind void;
}
procedure `void` `ensureSaneDefaults`(`retrofit.RestAdapter$Builder` v1 @kind this) @signature `Lretrofit/RestAdapter$Builder;.ensureSaneDefaults:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L24de00.  v0:= v1.`retrofit.RestAdapter$Builder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L24de04.  if v0 != 0 then goto L24de1c;
  #L24de08.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L24de0e.  v0:= temp @kind object;
  #L24de10.  call temp:= `defaultConverter`(v0) @signature `Lretrofit/Platform;.defaultConverter:()Lretrofit/converter/Converter;` @kind virtual;
  #L24de16.  v0:= temp @kind object;
  #L24de18.  v1.`retrofit.RestAdapter$Builder.converter` @type ^`retrofit.converter.Converter` := v0 @kind object;
  #L24de1c.  v0:= v1.`retrofit.RestAdapter$Builder.clientProvider` @type ^`retrofit.client.Client$Provider` @kind object;
  #L24de20.  if v0 != 0 then goto L24de38;
  #L24de24.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L24de2a.  v0:= temp @kind object;
  #L24de2c.  call temp:= `defaultClient`(v0) @signature `Lretrofit/Platform;.defaultClient:()Lretrofit/client/Client$Provider;` @kind virtual;
  #L24de32.  v0:= temp @kind object;
  #L24de34.  v1.`retrofit.RestAdapter$Builder.clientProvider` @type ^`retrofit.client.Client$Provider` := v0 @kind object;
  #L24de38.  v0:= v1.`retrofit.RestAdapter$Builder.httpExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L24de3c.  if v0 != 0 then goto L24de54;
  #L24de40.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L24de46.  v0:= temp @kind object;
  #L24de48.  call temp:= `defaultHttpExecutor`(v0) @signature `Lretrofit/Platform;.defaultHttpExecutor:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L24de4e.  v0:= temp @kind object;
  #L24de50.  v1.`retrofit.RestAdapter$Builder.httpExecutor` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L24de54.  v0:= v1.`retrofit.RestAdapter$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L24de58.  if v0 != 0 then goto L24de70;
  #L24de5c.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L24de62.  v0:= temp @kind object;
  #L24de64.  call temp:= `defaultCallbackExecutor`(v0) @signature `Lretrofit/Platform;.defaultCallbackExecutor:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L24de6a.  v0:= temp @kind object;
  #L24de6c.  v1.`retrofit.RestAdapter$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L24de70.  v0:= v1.`retrofit.RestAdapter$Builder.errorHandler` @type ^`retrofit.ErrorHandler` @kind object;
  #L24de74.  if v0 != 0 then goto L24de80;
  #L24de78.  v0:= `@@retrofit.ErrorHandler.DEFAULT` @type ^`retrofit.ErrorHandler` @kind object;
  #L24de7c.  v1.`retrofit.RestAdapter$Builder.errorHandler` @type ^`retrofit.ErrorHandler` := v0 @kind object;
  #L24de80.  v0:= v1.`retrofit.RestAdapter$Builder.log` @type ^`retrofit.RestAdapter$Log` @kind object;
  #L24de84.  if v0 != 0 then goto L24de9c;
  #L24de88.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L24de8e.  v0:= temp @kind object;
  #L24de90.  call temp:= `defaultLog`(v0) @signature `Lretrofit/Platform;.defaultLog:()Lretrofit/RestAdapter$Log;` @kind virtual;
  #L24de96.  v0:= temp @kind object;
  #L24de98.  v1.`retrofit.RestAdapter$Builder.log` @type ^`retrofit.RestAdapter$Log` := v0 @kind object;
  #L24de9c.  v0:= v1.`retrofit.RestAdapter$Builder.requestInterceptor` @type ^`retrofit.RequestInterceptor` @kind object;
  #L24dea0.  if v0 != 0 then goto L24deac;
  #L24dea4.  v0:= `@@retrofit.RequestInterceptor.NONE` @type ^`retrofit.RequestInterceptor` @kind object;
  #L24dea8.  v1.`retrofit.RestAdapter$Builder.requestInterceptor` @type ^`retrofit.RequestInterceptor` := v0 @kind object;
  #L24deac.  return @kind void;
}
procedure `retrofit.RestAdapter` `build`(`retrofit.RestAdapter$Builder` v13 @kind this) @signature `Lretrofit/RestAdapter$Builder;.build:()Lretrofit/RestAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L24db5c.  v0:= v13.`retrofit.RestAdapter$Builder.endpoint` @type ^`retrofit.Endpoint` @kind object;
  #L24db60.  if v0 == 0 then goto L24dba2;
  #L24db64.  call `ensureSaneDefaults`(v13) @signature `Lretrofit/RestAdapter$Builder;.ensureSaneDefaults:()V` @kind direct;
  #L24db6a.  v0:= new `retrofit.RestAdapter`;
  #L24db6e.  v2:= v13.`retrofit.RestAdapter$Builder.endpoint` @type ^`retrofit.Endpoint` @kind object;
  #L24db72.  v3:= v13.`retrofit.RestAdapter$Builder.clientProvider` @type ^`retrofit.client.Client$Provider` @kind object;
  #L24db76.  v4:= v13.`retrofit.RestAdapter$Builder.httpExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L24db7a.  v5:= v13.`retrofit.RestAdapter$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L24db7e.  v6:= v13.`retrofit.RestAdapter$Builder.requestInterceptor` @type ^`retrofit.RequestInterceptor` @kind object;
  #L24db82.  v7:= v13.`retrofit.RestAdapter$Builder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L24db86.  v8:= v13.`retrofit.RestAdapter$Builder.profiler` @type ^`retrofit.Profiler` @kind object;
  #L24db8a.  v9:= v13.`retrofit.RestAdapter$Builder.errorHandler` @type ^`retrofit.ErrorHandler` @kind object;
  #L24db8e.  v10:= v13.`retrofit.RestAdapter$Builder.log` @type ^`retrofit.RestAdapter$Log` @kind object;
  #L24db92.  v11:= v13.`retrofit.RestAdapter$Builder.logLevel` @type ^`retrofit.RestAdapter$LogLevel` @kind object;
  #L24db96.  v12:= 0I;
  #L24db98.  v1:= v0 @kind object;
  #L24db9a.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lretrofit/RestAdapter;.<init>:(Lretrofit/Endpoint;Lretrofit/client/Client$Provider;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lretrofit/RequestInterceptor;Lretrofit/converter/Converter;Lretrofit/Profiler;Lretrofit/ErrorHandler;Lretrofit/RestAdapter$Log;Lretrofit/RestAdapter$LogLevel;Lretrofit/RestAdapter$1;)V` @kind direct;
  #L24dba0.  return v0 @kind object;
  #L24dba2.  v0:= new `java.lang.IllegalArgumentException`;
  #L24dba6.  v1:= "Endpoint may not be null." @kind object;
  #L24dbaa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dbb0.  throw v0;
}
procedure `retrofit.RestAdapter$Builder` `setClient`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.client.Client$Provider` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setClient:(Lretrofit/client/Client$Provider;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24dbc4.  if v2 == 0 then goto L24dbce;
  #L24dbc8.  v1.`retrofit.RestAdapter$Builder.clientProvider` @type ^`retrofit.client.Client$Provider` := v2 @kind object;
  #L24dbcc.  return v1 @kind object;
  #L24dbce.  v2:= new `java.lang.NullPointerException`;
  #L24dbd2.  v0:= "Client provider may not be null." @kind object;
  #L24dbd6.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dbdc.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setClient`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.client.Client` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setClient:(Lretrofit/client/Client;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24dbf0.  if v2 == 0 then goto L24dc08;
  #L24dbf4.  v0:= new `retrofit.RestAdapter$Builder$1`;
  #L24dbf8.  call `<init>`(v0, v1, v2) @signature `Lretrofit/RestAdapter$Builder$1;.<init>:(Lretrofit/RestAdapter$Builder;Lretrofit/client/Client;)V` @kind direct;
  #L24dbfe.  call temp:= `setClient`(v1, v0) @signature `Lretrofit/RestAdapter$Builder;.setClient:(Lretrofit/client/Client$Provider;)Lretrofit/RestAdapter$Builder;` @kind virtual;
  #L24dc04.  v2:= temp @kind object;
  #L24dc06.  return v2 @kind object;
  #L24dc08.  v2:= new `java.lang.NullPointerException`;
  #L24dc0c.  v0:= "Client may not be null." @kind object;
  #L24dc10.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dc16.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setConverter`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.converter.Converter` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setConverter:(Lretrofit/converter/Converter;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24dc28.  if v2 == 0 then goto L24dc32;
  #L24dc2c.  v1.`retrofit.RestAdapter$Builder.converter` @type ^`retrofit.converter.Converter` := v2 @kind object;
  #L24dc30.  return v1 @kind object;
  #L24dc32.  v2:= new `java.lang.NullPointerException`;
  #L24dc36.  v0:= "Converter may not be null." @kind object;
  #L24dc3a.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dc40.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setEndpoint`(`retrofit.RestAdapter$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setEndpoint:(Ljava/lang/String;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24dc54.  if v2 == 0 then goto L24dc7a;
  #L24dc58.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L24dc5e.  v0:= temp @kind object;
  #L24dc60.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24dc66.  v0:= temp;
  #L24dc68.  if v0 == 0 then goto L24dc7a;
  #L24dc6c.  call temp:= `newFixedEndpoint`(v2) @signature `Lretrofit/Endpoints;.newFixedEndpoint:(Ljava/lang/String;)Lretrofit/Endpoint;` @kind static;
  #L24dc72.  v2:= temp @kind object;
  #L24dc74.  v1.`retrofit.RestAdapter$Builder.endpoint` @type ^`retrofit.Endpoint` := v2 @kind object;
  #L24dc78.  return v1 @kind object;
  #L24dc7a.  v2:= new `java.lang.NullPointerException`;
  #L24dc7e.  v0:= "Endpoint may not be blank." @kind object;
  #L24dc82.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dc88.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setEndpoint`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.Endpoint` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setEndpoint:(Lretrofit/Endpoint;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24dc9c.  if v2 == 0 then goto L24dca6;
  #L24dca0.  v1.`retrofit.RestAdapter$Builder.endpoint` @type ^`retrofit.Endpoint` := v2 @kind object;
  #L24dca4.  return v1 @kind object;
  #L24dca6.  v2:= new `java.lang.NullPointerException`;
  #L24dcaa.  v0:= "Endpoint may not be null." @kind object;
  #L24dcae.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dcb4.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setErrorHandler`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.ErrorHandler` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setErrorHandler:(Lretrofit/ErrorHandler;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24dcc8.  if v2 == 0 then goto L24dcd2;
  #L24dccc.  v1.`retrofit.RestAdapter$Builder.errorHandler` @type ^`retrofit.ErrorHandler` := v2 @kind object;
  #L24dcd0.  return v1 @kind object;
  #L24dcd2.  v2:= new `java.lang.NullPointerException`;
  #L24dcd6.  v0:= "Error handler may not be null." @kind object;
  #L24dcda.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dce0.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setExecutors`(`retrofit.RestAdapter$Builder` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setExecutors:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;

  #L24dcf4.  if v1 == 0 then goto L24dd10;
  #L24dcf8.  if v2 != 0 then goto L24dd06;
  #L24dcfc.  v2:= new `retrofit.Utils$SynchronousExecutor`;
  #L24dd00.  call `<init>`(v2) @signature `Lretrofit/Utils$SynchronousExecutor;.<init>:()V` @kind direct;
  #L24dd06.  v0.`retrofit.RestAdapter$Builder.httpExecutor` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L24dd0a.  v0.`retrofit.RestAdapter$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L24dd0e.  return v0 @kind object;
  #L24dd10.  v1:= new `java.lang.NullPointerException`;
  #L24dd14.  v2:= "HTTP executor may not be null." @kind object;
  #L24dd18.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dd1e.  throw v1;
}
procedure `retrofit.RestAdapter$Builder` `setLog`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.RestAdapter$Log` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setLog:(Lretrofit/RestAdapter$Log;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24dd30.  if v2 == 0 then goto L24dd3a;
  #L24dd34.  v1.`retrofit.RestAdapter$Builder.log` @type ^`retrofit.RestAdapter$Log` := v2 @kind object;
  #L24dd38.  return v1 @kind object;
  #L24dd3a.  v2:= new `java.lang.NullPointerException`;
  #L24dd3e.  v0:= "Log may not be null." @kind object;
  #L24dd42.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dd48.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setLogLevel`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.RestAdapter$LogLevel` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setLogLevel:(Lretrofit/RestAdapter$LogLevel;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24dd5c.  if v2 == 0 then goto L24dd66;
  #L24dd60.  v1.`retrofit.RestAdapter$Builder.logLevel` @type ^`retrofit.RestAdapter$LogLevel` := v2 @kind object;
  #L24dd64.  return v1 @kind object;
  #L24dd66.  v2:= new `java.lang.NullPointerException`;
  #L24dd6a.  v0:= "Log level may not be null." @kind object;
  #L24dd6e.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dd74.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setProfiler`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.Profiler` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setProfiler:(Lretrofit/Profiler;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24dd88.  if v2 == 0 then goto L24dd92;
  #L24dd8c.  v1.`retrofit.RestAdapter$Builder.profiler` @type ^`retrofit.Profiler` := v2 @kind object;
  #L24dd90.  return v1 @kind object;
  #L24dd92.  v2:= new `java.lang.NullPointerException`;
  #L24dd96.  v0:= "Profiler may not be null." @kind object;
  #L24dd9a.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dda0.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setRequestInterceptor`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.RequestInterceptor` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setRequestInterceptor:(Lretrofit/RequestInterceptor;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24ddb4.  if v2 == 0 then goto L24ddbe;
  #L24ddb8.  v1.`retrofit.RestAdapter$Builder.requestInterceptor` @type ^`retrofit.RequestInterceptor` := v2 @kind object;
  #L24ddbc.  return v1 @kind object;
  #L24ddbe.  v2:= new `java.lang.NullPointerException`;
  #L24ddc2.  v0:= "Request interceptor may not be null." @kind object;
  #L24ddc6.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ddcc.  throw v2;
}
