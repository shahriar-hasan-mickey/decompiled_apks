record `retrofit.appengine.UrlFetchClient` @kind class @AccessFlag PUBLIC extends `retrofit.client.Client` @kind interface {
  `com.google.appengine.api.urlfetch.URLFetchService` `retrofit.appengine.UrlFetchClient.urlFetchService` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.appengine.UrlFetchClient` v1 @kind this) @signature `Lretrofit/appengine/UrlFetchClient;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L251290.  call temp:= `getURLFetchService`() @signature `Lcom/google/appengine/api/urlfetch/URLFetchServiceFactory;.getURLFetchService:()Lcom/google/appengine/api/urlfetch/URLFetchService;` @kind static;
  #L251296.  v0:= temp @kind object;
  #L251298.  call `<init>`(v1, v0) @signature `Lretrofit/appengine/UrlFetchClient;.<init>:(Lcom/google/appengine/api/urlfetch/URLFetchService;)V` @kind direct;
  #L25129e.  return @kind void;
}
procedure `void` `<init>`(`retrofit.appengine.UrlFetchClient` v0 @kind this, `com.google.appengine.api.urlfetch.URLFetchService` v1 @kind object) @signature `Lretrofit/appengine/UrlFetchClient;.<init>:(Lcom/google/appengine/api/urlfetch/URLFetchService;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2512b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2512b6.  v0.`retrofit.appengine.UrlFetchClient.urlFetchService` @type ^`com.google.appengine.api.urlfetch.URLFetchService` := v1 @kind object;
  #L2512ba.  return @kind void;
}
procedure `com.google.appengine.api.urlfetch.HTTPRequest` `createRequest`(`retrofit.client.Request` v5 @kind object) @signature `Lretrofit/appengine/UrlFetchClient;.createRequest:(Lretrofit/client/Request;)Lcom/google/appengine/api/urlfetch/HTTPRequest;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25109c.  call temp:= `getMethod`(v5) @signature `Lretrofit/client/Request;.getMethod:()Ljava/lang/String;` @kind virtual;
  #L2510a2.  v0:= temp @kind object;
  #L2510a4.  call temp:= `getHttpMethod`(v0) @signature `Lretrofit/appengine/UrlFetchClient;.getHttpMethod:(Ljava/lang/String;)Lcom/google/appengine/api/urlfetch/HTTPMethod;` @kind static;
  #L2510aa.  v0:= temp @kind object;
  #L2510ac.  v1:= new `java.net.URL`;
  #L2510b0.  call temp:= `getUrl`(v5) @signature `Lretrofit/client/Request;.getUrl:()Ljava/lang/String;` @kind virtual;
  #L2510b6.  v2:= temp @kind object;
  #L2510b8.  call `<init>`(v1, v2) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2510be.  v2:= new `com.google.appengine.api.urlfetch.HTTPRequest`;
  #L2510c2.  call `<init>`(v2, v1, v0) @signature `Lcom/google/appengine/api/urlfetch/HTTPRequest;.<init>:(Ljava/net/URL;Lcom/google/appengine/api/urlfetch/HTTPMethod;)V` @kind direct;
  #L2510c8.  call temp:= `getHeaders`(v5) @signature `Lretrofit/client/Request;.getHeaders:()Ljava/util/List;` @kind virtual;
  #L2510ce.  v0:= temp @kind object;
  #L2510d0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2510d6.  v0:= temp @kind object;
  #L2510d8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2510de.  v1:= temp;
  #L2510e0.  if v1 == 0 then goto L251112;
  #L2510e4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2510ea.  v1:= temp @kind object;
  #L2510ec.  v1:= (`retrofit.client.Header`) v1 @kind object;
  #L2510f0.  v3:= new `com.google.appengine.api.urlfetch.HTTPHeader`;
  #L2510f4.  call temp:= `getName`(v1) @signature `Lretrofit/client/Header;.getName:()Ljava/lang/String;` @kind virtual;
  #L2510fa.  v4:= temp @kind object;
  #L2510fc.  call temp:= `getValue`(v1) @signature `Lretrofit/client/Header;.getValue:()Ljava/lang/String;` @kind virtual;
  #L251102.  v1:= temp @kind object;
  #L251104.  call `<init>`(v3, v4, v1) @signature `Lcom/google/appengine/api/urlfetch/HTTPHeader;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L25110a.  call `addHeader`(v2, v3) @signature `Lcom/google/appengine/api/urlfetch/HTTPRequest;.addHeader:(Lcom/google/appengine/api/urlfetch/HTTPHeader;)V` @kind virtual;
  #L251110.  goto L2510d8;
  #L251112.  call temp:= `getBody`(v5) @signature `Lretrofit/client/Request;.getBody:()Lretrofit/mime/TypedOutput;` @kind virtual;
  #L251118.  v5:= temp @kind object;
  #L25111a.  if v5 == 0 then goto L25115c;
  #L25111e.  call temp:= `mimeType`(v5) @signature `Lretrofit/mime/TypedOutput;.mimeType:()Ljava/lang/String;` @kind interface;
  #L251124.  v0:= temp @kind object;
  #L251126.  if v0 == 0 then goto L25113e;
  #L25112a.  v1:= new `com.google.appengine.api.urlfetch.HTTPHeader`;
  #L25112e.  v3:= "Content-Type" @kind object;
  #L251132.  call `<init>`(v1, v3, v0) @signature `Lcom/google/appengine/api/urlfetch/HTTPHeader;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L251138.  call `addHeader`(v2, v1) @signature `Lcom/google/appengine/api/urlfetch/HTTPRequest;.addHeader:(Lcom/google/appengine/api/urlfetch/HTTPHeader;)V` @kind virtual;
  #L25113e.  v0:= new `java.io.ByteArrayOutputStream`;
  #L251142.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L251148.  call `writeTo`(v5, v0) @signature `Lretrofit/mime/TypedOutput;.writeTo:(Ljava/io/OutputStream;)V` @kind interface;
  #L25114e.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L251154.  v5:= temp @kind object;
  #L251156.  call `setPayload`(v2, v5) @signature `Lcom/google/appengine/api/urlfetch/HTTPRequest;.setPayload:([B)V` @kind virtual;
  #L25115c.  return v2 @kind object;
}
procedure `com.google.appengine.api.urlfetch.HTTPMethod` `getHttpMethod`(`java.lang.String` v3 @kind object) @signature `Lretrofit/appengine/UrlFetchClient;.getHttpMethod:(Ljava/lang/String;)Lcom/google/appengine/api/urlfetch/HTTPMethod;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L250fd8.  v0:= "GET" @kind object;
  #L250fdc.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L250fe2.  v0:= temp;
  #L250fe4.  if v0 == 0 then goto L250fee;
  #L250fe8.  v3:= `@@com.google.appengine.api.urlfetch.HTTPMethod.GET` @type ^`com.google.appengine.api.urlfetch.HTTPMethod` @kind object;
  #L250fec.  return v3 @kind object;
  #L250fee.  v0:= "POST" @kind object;
  #L250ff2.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L250ff8.  v0:= temp;
  #L250ffa.  if v0 == 0 then goto L251004;
  #L250ffe.  v3:= `@@com.google.appengine.api.urlfetch.HTTPMethod.POST` @type ^`com.google.appengine.api.urlfetch.HTTPMethod` @kind object;
  #L251002.  return v3 @kind object;
  #L251004.  v0:= "PATCH" @kind object;
  #L251008.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L25100e.  v0:= temp;
  #L251010.  if v0 == 0 then goto L25101a;
  #L251014.  v3:= `@@com.google.appengine.api.urlfetch.HTTPMethod.PATCH` @type ^`com.google.appengine.api.urlfetch.HTTPMethod` @kind object;
  #L251018.  return v3 @kind object;
  #L25101a.  v0:= "PUT" @kind object;
  #L25101e.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L251024.  v0:= temp;
  #L251026.  if v0 == 0 then goto L251030;
  #L25102a.  v3:= `@@com.google.appengine.api.urlfetch.HTTPMethod.PUT` @type ^`com.google.appengine.api.urlfetch.HTTPMethod` @kind object;
  #L25102e.  return v3 @kind object;
  #L251030.  v0:= "DELETE" @kind object;
  #L251034.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L25103a.  v0:= temp;
  #L25103c.  if v0 == 0 then goto L251046;
  #L251040.  v3:= `@@com.google.appengine.api.urlfetch.HTTPMethod.DELETE` @type ^`com.google.appengine.api.urlfetch.HTTPMethod` @kind object;
  #L251044.  return v3 @kind object;
  #L251046.  v0:= "HEAD" @kind object;
  #L25104a.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L251050.  v0:= temp;
  #L251052.  if v0 == 0 then goto L25105c;
  #L251056.  v3:= `@@com.google.appengine.api.urlfetch.HTTPMethod.HEAD` @type ^`com.google.appengine.api.urlfetch.HTTPMethod` @kind object;
  #L25105a.  return v3 @kind object;
  #L25105c.  v0:= new `java.lang.IllegalStateException`;
  #L251060.  v1:= new `java.lang.StringBuilder`;
  #L251064.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25106a.  v2:= "Illegal HTTP method: " @kind object;
  #L25106e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251074.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25107a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L251080.  v3:= temp @kind object;
  #L251082.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251088.  throw v0;
}
procedure `retrofit.client.Response` `parseResponse`(`com.google.appengine.api.urlfetch.HTTPResponse` v7 @kind object, `com.google.appengine.api.urlfetch.HTTPRequest` v8 @kind object) @signature `Lretrofit/appengine/UrlFetchClient;.parseResponse:(Lcom/google/appengine/api/urlfetch/HTTPResponse;Lcom/google/appengine/api/urlfetch/HTTPRequest;)Lretrofit/client/Response;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2511bc.  call temp:= `getFinalUrl`(v7) @signature `Lcom/google/appengine/api/urlfetch/HTTPResponse;.getFinalUrl:()Ljava/net/URL;` @kind virtual;
  #L2511c2.  v0:= temp @kind object;
  #L2511c4.  if v0 == 0 then goto L2511ca;
  #L2511c8.  goto L2511d2;
  #L2511ca.  call temp:= `getURL`(v8) @signature `Lcom/google/appengine/api/urlfetch/HTTPRequest;.getURL:()Ljava/net/URL;` @kind virtual;
  #L2511d0.  v0:= temp @kind object;
  #L2511d2.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L2511d8.  v2:= temp @kind object;
  #L2511da.  call temp:= `getResponseCode`(v7) @signature `Lcom/google/appengine/api/urlfetch/HTTPResponse;.getResponseCode:()I` @kind virtual;
  #L2511e0.  v3:= temp;
  #L2511e2.  call temp:= `getHeaders`(v7) @signature `Lcom/google/appengine/api/urlfetch/HTTPResponse;.getHeaders:()Ljava/util/List;` @kind virtual;
  #L2511e8.  v8:= temp @kind object;
  #L2511ea.  v5:= new `java.util.ArrayList`;
  #L2511ee.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2511f4.  v0:= temp;
  #L2511f6.  call `<init>`(v5, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2511fc.  call temp:= `iterator`(v8) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L251202.  v8:= temp @kind object;
  #L251204.  v0:= "application/octet-stream" @kind object;
  #L251208.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L25120e.  v1:= temp;
  #L251210.  if v1 == 0 then goto L251254;
  #L251214.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L25121a.  v1:= temp @kind object;
  #L25121c.  v1:= (`com.google.appengine.api.urlfetch.HTTPHeader`) v1 @kind object;
  #L251220.  call temp:= `getName`(v1) @signature `Lcom/google/appengine/api/urlfetch/HTTPHeader;.getName:()Ljava/lang/String;` @kind virtual;
  #L251226.  v4:= temp @kind object;
  #L251228.  call temp:= `getValue`(v1) @signature `Lcom/google/appengine/api/urlfetch/HTTPHeader;.getValue:()Ljava/lang/String;` @kind virtual;
  #L25122e.  v1:= temp @kind object;
  #L251230.  v6:= "Content-Type" @kind object;
  #L251234.  call temp:= `equalsIgnoreCase`(v6, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L25123a.  v6:= temp;
  #L25123c.  if v6 == 0 then goto L251242;
  #L251240.  v0:= v1 @kind object;
  #L251242.  v6:= new `retrofit.client.Header`;
  #L251246.  call `<init>`(v6, v4, v1) @signature `Lretrofit/client/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L25124c.  call temp:= `add`(v5, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L251252.  goto L251208;
  #L251254.  v8:= 0I;
  #L251256.  call temp:= `getContent`(v7) @signature `Lcom/google/appengine/api/urlfetch/HTTPResponse;.getContent:()[B` @kind virtual;
  #L25125c.  v7:= temp @kind object;
  #L25125e.  if v7 == 0 then goto L25126c;
  #L251262.  v8:= new `retrofit.mime.TypedByteArray`;
  #L251266.  call `<init>`(v8, v0, v7) @signature `Lretrofit/mime/TypedByteArray;.<init>:(Ljava/lang/String;[B)V` @kind direct;
  #L25126c.  v6:= v8 @kind object;
  #L25126e.  v7:= new `retrofit.client.Response`;
  #L251272.  v4:= "" @kind object;
  #L251276.  v1:= v7 @kind object;
  #L251278.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lretrofit/client/Response;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Lretrofit/mime/TypedInput;)V` @kind direct;
  #L25127e.  return v7 @kind object;
}
procedure `com.google.appengine.api.urlfetch.HTTPResponse` `execute`(`retrofit.appengine.UrlFetchClient` v0 @kind this, `com.google.appengine.api.urlfetch.URLFetchService` v1 @kind object, `com.google.appengine.api.urlfetch.HTTPRequest` v2 @kind object) @signature `Lretrofit/appengine/UrlFetchClient;.execute:(Lcom/google/appengine/api/urlfetch/URLFetchService;Lcom/google/appengine/api/urlfetch/HTTPRequest;)Lcom/google/appengine/api/urlfetch/HTTPResponse;` @AccessFlag PROTECTED {
    temp;

  #L251170.  call temp:= `fetch`(v1, v2) @signature `Lcom/google/appengine/api/urlfetch/URLFetchService;.fetch:(Lcom/google/appengine/api/urlfetch/HTTPRequest;)Lcom/google/appengine/api/urlfetch/HTTPResponse;` @kind interface;
  #L251176.  v1:= temp @kind object;
  #L251178.  return v1 @kind object;
}
procedure `retrofit.client.Response` `execute`(`retrofit.appengine.UrlFetchClient` v1 @kind this, `retrofit.client.Request` v2 @kind object) @signature `Lretrofit/appengine/UrlFetchClient;.execute:(Lretrofit/client/Request;)Lretrofit/client/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25118c.  call temp:= `createRequest`(v2) @signature `Lretrofit/appengine/UrlFetchClient;.createRequest:(Lretrofit/client/Request;)Lcom/google/appengine/api/urlfetch/HTTPRequest;` @kind static;
  #L251192.  v2:= temp @kind object;
  #L251194.  v0:= v1.`retrofit.appengine.UrlFetchClient.urlFetchService` @type ^`com.google.appengine.api.urlfetch.URLFetchService` @kind object;
  #L251198.  call temp:= `execute`(v1, v0, v2) @signature `Lretrofit/appengine/UrlFetchClient;.execute:(Lcom/google/appengine/api/urlfetch/URLFetchService;Lcom/google/appengine/api/urlfetch/HTTPRequest;)Lcom/google/appengine/api/urlfetch/HTTPResponse;` @kind virtual;
  #L25119e.  v0:= temp @kind object;
  #L2511a0.  call temp:= `parseResponse`(v0, v2) @signature `Lretrofit/appengine/UrlFetchClient;.parseResponse:(Lcom/google/appengine/api/urlfetch/HTTPResponse;Lcom/google/appengine/api/urlfetch/HTTPRequest;)Lretrofit/client/Response;` @kind static;
  #L2511a6.  v2:= temp @kind object;
  #L2511a8.  return v2 @kind object;
}
