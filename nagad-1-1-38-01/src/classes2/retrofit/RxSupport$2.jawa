record `retrofit.RxSupport$2` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `retrofit.RxSupport` `retrofit.RxSupport$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `retrofit.RequestInterceptorTape` `retrofit.RxSupport$2.val$interceptorTape` @AccessFlag FINAL_SYNTHETIC;
  `retrofit.RxSupport$Invoker` `retrofit.RxSupport$2.val$invoker` @AccessFlag FINAL_SYNTHETIC;
  `rx.Subscriber` `retrofit.RxSupport$2.val$subscriber` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit.RxSupport$2` v0 @kind this, `retrofit.RxSupport` v1 @kind object, `rx.Subscriber` v2 @kind object, `retrofit.RxSupport$Invoker` v3 @kind object, `retrofit.RequestInterceptorTape` v4 @kind object) @signature `Lretrofit/RxSupport$2;.<init>:(Lretrofit/RxSupport;Lrx/Subscriber;Lretrofit/RxSupport$Invoker;Lretrofit/RequestInterceptorTape;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24ff34.  v0.`retrofit.RxSupport$2.this$0` @type ^`retrofit.RxSupport` := v1 @kind object;
  #L24ff38.  v0.`retrofit.RxSupport$2.val$subscriber` @type ^`rx.Subscriber` := v2 @kind object;
  #L24ff3c.  v0.`retrofit.RxSupport$2.val$invoker` @type ^`retrofit.RxSupport$Invoker` := v3 @kind object;
  #L24ff40.  v0.`retrofit.RxSupport$2.val$interceptorTape` @type ^`retrofit.RequestInterceptorTape` := v4 @kind object;
  #L24ff44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24ff4a.  return @kind void;
}
procedure `void` `run`(`retrofit.RxSupport$2` v3 @kind this) @signature `Lretrofit/RxSupport$2;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24ff5c.  v0:= v3.`retrofit.RxSupport$2.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L24ff60.  call temp:= `isUnsubscribed`(v0) @signature `Lrx/Subscriber;.isUnsubscribed:()Z` @kind virtual;
  #L24ff66.  v0:= temp;
  #L24ff68.  if v0 == 0 then goto L24ff6e;
  #L24ff6c.  return @kind void;
  #L24ff6e.  v0:= v3.`retrofit.RxSupport$2.val$invoker` @type ^`retrofit.RxSupport$Invoker` @kind object;
  #L24ff72.  v1:= v3.`retrofit.RxSupport$2.val$interceptorTape` @type ^`retrofit.RequestInterceptorTape` @kind object;
  #L24ff76.  call temp:= `invoke`(v0, v1) @signature `Lretrofit/RxSupport$Invoker;.invoke:(Lretrofit/RequestInterceptor;)Lretrofit/ResponseWrapper;` @kind interface;
  #L24ff7c.  v0:= temp @kind object;
  #L24ff7e.  v1:= v3.`retrofit.RxSupport$2.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L24ff82.  v0:= v0.`retrofit.ResponseWrapper.responseBody` @type ^`java.lang.Object` @kind object;
  #L24ff86.  call `onNext`(v1, v0) @signature `Lrx/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L24ff8c.  v0:= v3.`retrofit.RxSupport$2.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L24ff90.  call `onCompleted`(v0) @signature `Lrx/Subscriber;.onCompleted:()V` @kind virtual;
  #L24ff96.  goto L24ffb8;
  #L24ff98.  v0:= Exception @type ^`retrofit.RetrofitError` @kind object;
  #L24ff9a.  v1:= v3.`retrofit.RxSupport$2.val$subscriber` @type ^`rx.Subscriber` @kind object;
  #L24ff9e.  v2:= v3.`retrofit.RxSupport$2.this$0` @type ^`retrofit.RxSupport` @kind object;
  #L24ffa2.  call temp:= `access$300`(v2) @signature `Lretrofit/RxSupport;.access$300:(Lretrofit/RxSupport;)Lretrofit/ErrorHandler;` @kind static;
  #L24ffa8.  v2:= temp @kind object;
  #L24ffaa.  call temp:= `handleError`(v2, v0) @signature `Lretrofit/ErrorHandler;.handleError:(Lretrofit/RetrofitError;)Ljava/lang/Throwable;` @kind interface;
  #L24ffb0.  v0:= temp @kind object;
  #L24ffb2.  call `onError`(v1, v0) @signature `Lrx/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L24ffb8.  return @kind void;
  catch `retrofit.RetrofitError` @[L24ff5c..L24ff96] goto L24ff98;
}
