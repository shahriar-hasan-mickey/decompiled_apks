record `retrofit.RequestInterceptorTape` @kind class @AccessFlag FINAL extends `retrofit.RequestInterceptor$RequestFacade` @kind interface, `retrofit.RequestInterceptor` @kind interface {
  `java.util.List` `retrofit.RequestInterceptorTape.tape` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.RequestInterceptorTape` v1 @kind this) @signature `Lretrofit/RequestInterceptorTape;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L24d948.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24d94e.  v0:= new `java.util.ArrayList`;
  #L24d952.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24d958.  v1.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` := v0 @kind object;
  #L24d95c.  return @kind void;
}
procedure `void` `addEncodedPathParam`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addEncodedPathParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24d970.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L24d974.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L24d978.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_ENCODED_PATH_PARAM` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L24d97c.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L24d982.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24d988.  return @kind void;
}
procedure `void` `addEncodedQueryParam`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addEncodedQueryParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24d99c.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L24d9a0.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L24d9a4.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_ENCODED_QUERY_PARAM` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L24d9a8.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L24d9ae.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24d9b4.  return @kind void;
}
procedure `void` `addHeader`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24d9c8.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L24d9cc.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L24d9d0.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_HEADER` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L24d9d4.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L24d9da.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24d9e0.  return @kind void;
}
procedure `void` `addPathParam`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addPathParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24d9f4.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L24d9f8.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L24d9fc.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_PATH_PARAM` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L24da00.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L24da06.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24da0c.  return @kind void;
}
procedure `void` `addQueryParam`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24da20.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L24da24.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L24da28.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_QUERY_PARAM` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L24da2c.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L24da32.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24da38.  return @kind void;
}
procedure `void` `intercept`(`retrofit.RequestInterceptorTape` v4 @kind this, `retrofit.RequestInterceptor$RequestFacade` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.intercept:(Lretrofit/RequestInterceptor$RequestFacade;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24da4c.  v0:= v4.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L24da50.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24da56.  v0:= temp @kind object;
  #L24da58.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24da5e.  v1:= temp;
  #L24da60.  if v1 == 0 then goto L24da84;
  #L24da64.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24da6a.  v1:= temp @kind object;
  #L24da6c.  v1:= (`retrofit.RequestInterceptorTape$CommandWithParams`) v1 @kind object;
  #L24da70.  v2:= v1.`retrofit.RequestInterceptorTape$CommandWithParams.command` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L24da74.  v3:= v1.`retrofit.RequestInterceptorTape$CommandWithParams.name` @type ^`java.lang.String` @kind object;
  #L24da78.  v1:= v1.`retrofit.RequestInterceptorTape$CommandWithParams.value` @type ^`java.lang.String` @kind object;
  #L24da7c.  call `intercept`(v2, v5, v3, v1) @signature `Lretrofit/RequestInterceptorTape$Command;.intercept:(Lretrofit/RequestInterceptor$RequestFacade;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L24da82.  goto L24da58;
  #L24da84.  return @kind void;
}
