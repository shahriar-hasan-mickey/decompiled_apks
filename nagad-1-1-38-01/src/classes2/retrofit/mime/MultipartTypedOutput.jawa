record `retrofit.mime.MultipartTypedOutput` @kind class @AccessFlag PUBLIC_FINAL extends `retrofit.mime.TypedOutput` @kind interface {
  `java.lang.String` `retrofit.mime.MultipartTypedOutput.boundary` @AccessFlag PRIVATE_FINAL;
  `byte`[] `retrofit.mime.MultipartTypedOutput.footer` @AccessFlag PRIVATE_FINAL;
  `long` `retrofit.mime.MultipartTypedOutput.length` @AccessFlag PRIVATE;
  `java.util.List` `retrofit.mime.MultipartTypedOutput.mimeParts` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@retrofit.mime.MultipartTypedOutput.DEFAULT_TRANSFER_ENCODING` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`retrofit.mime.MultipartTypedOutput` v1 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L252888.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L25288e.  v0:= temp @kind object;
  #L252890.  call temp:= `toString`(v0) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L252896.  v0:= temp @kind object;
  #L252898.  call `<init>`(v1, v0) @signature `Lretrofit/mime/MultipartTypedOutput;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25289e.  return @kind void;
}
procedure `void` `<init>`(`retrofit.mime.MultipartTypedOutput` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2528b0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2528b6.  v0:= new `java.util.LinkedList`;
  #L2528ba.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L2528c0.  v2.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` := v0 @kind object;
  #L2528c4.  v2.`retrofit.mime.MultipartTypedOutput.boundary` @type ^`java.lang.String` := v3 @kind object;
  #L2528c8.  v0:= 0I;
  #L2528ca.  v1:= 1I;
  #L2528cc.  call temp:= `buildBoundary`(v3, v0, v1) @signature `Lretrofit/mime/MultipartTypedOutput;.buildBoundary:(Ljava/lang/String;ZZ)[B` @kind static;
  #L2528d2.  v3:= temp @kind object;
  #L2528d4.  v2.`retrofit.mime.MultipartTypedOutput.footer` @type ^`byte`[] := v3 @kind object;
  #L2528d8.  v3:= v2.`retrofit.mime.MultipartTypedOutput.footer` @type ^`byte`[] @kind object;
  #L2528dc.  v3:= length @variable v3;
  #L2528de.  v0:= (`long`) v3 @kind i2l;
  #L2528e0.  v2.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` := v0 @kind wide;
  #L2528e4.  return @kind void;
}
procedure `byte`[] `access$000`(`java.lang.String` v0 @kind object, `boolean` v1 , `boolean` v2 ) @signature `Lretrofit/mime/MultipartTypedOutput;.access$000:(Ljava/lang/String;ZZ)[B` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2525f4.  call temp:= `buildBoundary`(v0, v1, v2) @signature `Lretrofit/mime/MultipartTypedOutput;.buildBoundary:(Ljava/lang/String;ZZ)[B` @kind static;
  #L2525fa.  v0:= temp @kind object;
  #L2525fc.  return v0 @kind object;
}
procedure `byte`[] `access$100`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `retrofit.mime.TypedOutput` v2 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.access$100:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)[B` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L252610.  call temp:= `buildHeader`(v0, v1, v2) @signature `Lretrofit/mime/MultipartTypedOutput;.buildHeader:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)[B` @kind static;
  #L252616.  v0:= temp @kind object;
  #L252618.  return v0 @kind object;
}
procedure `byte`[] `buildBoundary`(`java.lang.String` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lretrofit/mime/MultipartTypedOutput;.buildBoundary:(Ljava/lang/String;ZZ)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L25262c.  v0:= "--" @kind object;
  #L252630.  v1:= new `java.lang.StringBuilder`;
  #L252634.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L25263a.  v2:= temp;
  #L25263c.  v2:= v2 + 8;
  #L252640.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L252646.  v2:= "\r\n" @kind object;
  #L25264a.  if v4 != 0 then goto L252654;
  #L25264e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252654.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25265a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252660.  if v5 == 0 then goto L25266a;
  #L252664.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25266a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252670.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L252676.  v3:= temp @kind object;
  #L252678.  v4:= "UTF-8" @kind object;
  #L25267c.  call temp:= `getBytes`(v3, v4) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L252682.  v3:= temp @kind object;
  #L252684.  return v3 @kind object;
  #L252686.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L252688.  v4:= new `java.lang.RuntimeException`;
  #L25268c.  v5:= "Unable to write multipart boundary" @kind object;
  #L252690.  call `<init>`(v4, v5, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L252696.  throw v4;
  catch `java.io.IOException` @[L252630..L252646] goto L252686;
  catch `java.io.IOException` @[L25264e..L252684] goto L252686;
}
procedure `byte`[] `buildHeader`(`java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `retrofit.mime.TypedOutput` v7 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.buildHeader:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2526c0.  v0:= new `java.lang.StringBuilder`;
  #L2526c4.  v1:= 128I;
  #L2526c8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2526ce.  v1:= "Content-Disposition: form-data; name=\"" @kind object;
  #L2526d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2526d8.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2526de.  call temp:= `fileName`(v7) @signature `Lretrofit/mime/TypedOutput;.fileName:()Ljava/lang/String;` @kind interface;
  #L2526e4.  v5:= temp @kind object;
  #L2526e6.  if v5 == 0 then goto L2526fa;
  #L2526ea.  v1:= "\"; filename=\"" @kind object;
  #L2526ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2526f4.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2526fa.  v5:= "\"\r\nContent-Type: " @kind object;
  #L2526fe.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252704.  call temp:= `mimeType`(v7) @signature `Lretrofit/mime/TypedOutput;.mimeType:()Ljava/lang/String;` @kind interface;
  #L25270a.  v5:= temp @kind object;
  #L25270c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252712.  call temp:= `length`(v7) @signature `Lretrofit/mime/TypedOutput;.length:()J` @kind interface;
  #L252718.  v1:= temp @kind wide;
  #L25271a.  v3:= -1L;
  #L25271e.  v5:= lcmp(v1, v3);
  #L252722.  if v5 == 0 then goto L252736;
  #L252726.  v5:= "\r\nContent-Length: " @kind object;
  #L25272a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252730.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L252736.  v5:= "\r\nContent-Transfer-Encoding: " @kind object;
  #L25273a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252740.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252746.  v5:= "\r\n\r\n" @kind object;
  #L25274a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252750.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L252756.  v5:= temp @kind object;
  #L252758.  v6:= "UTF-8" @kind object;
  #L25275c.  call temp:= `getBytes`(v5, v6) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L252762.  v5:= temp @kind object;
  #L252764.  return v5 @kind object;
  #L252766.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L252768.  v6:= new `java.lang.RuntimeException`;
  #L25276c.  v7:= "Unable to write multipart header" @kind object;
  #L252770.  call `<init>`(v6, v7, v5) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L252776.  throw v6;
  catch `java.io.IOException` @[L2526c0..L252764] goto L252766;
}
procedure `void` `addPart`(`retrofit.mime.MultipartTypedOutput` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `retrofit.mime.TypedOutput` v10 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2528f8.  if v8 == 0 then goto L25297e;
  #L2528fc.  if v9 == 0 then goto L25296e;
  #L252900.  if v10 == 0 then goto L25295e;
  #L252904.  v6:= new `retrofit.mime.MultipartTypedOutput$MimePart`;
  #L252908.  v4:= v7.`retrofit.mime.MultipartTypedOutput.boundary` @type ^`java.lang.String` @kind object;
  #L25290c.  v0:= v7.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L252910.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L252916.  v5:= temp;
  #L252918.  v0:= v6 @kind object;
  #L25291a.  v1:= v8 @kind object;
  #L25291c.  v2:= v9 @kind object;
  #L25291e.  v3:= v10 @kind object;
  #L252920.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lretrofit/mime/MultipartTypedOutput$MimePart;.<init>:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;Ljava/lang/String;Z)V` @kind direct;
  #L252926.  v8:= v7.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L25292a.  call temp:= `add`(v8, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L252930.  call temp:= `size`(v6) @signature `Lretrofit/mime/MultipartTypedOutput$MimePart;.size:()J` @kind virtual;
  #L252936.  v8:= temp @kind wide;
  #L252938.  v0:= -1L;
  #L25293c.  v10:= lcmp(v8, v0);
  #L252940.  if v10 != 0 then goto L25294a;
  #L252944.  v7.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` := v0 @kind wide;
  #L252948.  goto L25295c;
  #L25294a.  v2:= v7.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` @kind wide;
  #L25294e.  v10:= lcmp(v2, v0);
  #L252952.  if v10 == 0 then goto L25295c;
  #L252956.  v2:= v2 + v8 @kind long;
  #L252958.  v7.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` := v2 @kind wide;
  #L25295c.  return @kind void;
  #L25295e.  v8:= new `java.lang.NullPointerException`;
  #L252962.  v9:= "Part body must not be null." @kind object;
  #L252966.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25296c.  throw v8;
  #L25296e.  v8:= new `java.lang.NullPointerException`;
  #L252972.  v9:= "Transfer encoding must not be null." @kind object;
  #L252976.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25297c.  throw v8;
  #L25297e.  v8:= new `java.lang.NullPointerException`;
  #L252982.  v9:= "Part name must not be null." @kind object;
  #L252986.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25298c.  throw v8;
}
procedure `void` `addPart`(`retrofit.mime.MultipartTypedOutput` v1 @kind this, `java.lang.String` v2 @kind object, `retrofit.mime.TypedOutput` v3 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2529a0.  v0:= "binary" @kind object;
  #L2529a4.  call `addPart`(v1, v2, v0, v3) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L2529aa.  return @kind void;
}
procedure `java.lang.String` `fileName`(`retrofit.mime.MultipartTypedOutput` v1 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.fileName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2527b8.  v0:= 0I;
  #L2527ba.  return v0 @kind object;
}
procedure `int` `getPartCount`(`retrofit.mime.MultipartTypedOutput` v1 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.getPartCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L252798.  v0:= v1.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L25279c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2527a2.  v0:= temp;
  #L2527a4.  return v0;
}
procedure `java.util.List` `getParts`(`retrofit.mime.MultipartTypedOutput` v4 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.getParts:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L252804.  v0:= new `java.util.ArrayList`;
  #L252808.  v1:= v4.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L25280c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L252812.  v1:= temp;
  #L252814.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L25281a.  v1:= v4.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L25281e.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L252824.  v1:= temp @kind object;
  #L252826.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L25282c.  v2:= temp;
  #L25282e.  if v2 == 0 then goto L25285e;
  #L252832.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L252838.  v2:= temp @kind object;
  #L25283a.  v2:= (`retrofit.mime.MultipartTypedOutput$MimePart`) v2 @kind object;
  #L25283e.  v3:= new `java.io.ByteArrayOutputStream`;
  #L252842.  call `<init>`(v3) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L252848.  call `writeTo`(v2, v3) @signature `Lretrofit/mime/MultipartTypedOutput$MimePart;.writeTo:(Ljava/io/OutputStream;)V` @kind virtual;
  #L25284e.  call temp:= `toByteArray`(v3) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L252854.  v2:= temp @kind object;
  #L252856.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L25285c.  goto L252826;
  #L25285e.  return v0 @kind object;
}
procedure `long` `length`(`retrofit.mime.MultipartTypedOutput` v2 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.length:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L252870.  v0:= v2.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` @kind wide;
  #L252874.  return v0 @kind wide;
}
procedure `java.lang.String` `mimeType`(`retrofit.mime.MultipartTypedOutput` v2 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.mimeType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2527cc.  v0:= new `java.lang.StringBuilder`;
  #L2527d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2527d6.  v1:= "multipart/form-data; boundary=" @kind object;
  #L2527da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2527e0.  v1:= v2.`retrofit.mime.MultipartTypedOutput.boundary` @type ^`java.lang.String` @kind object;
  #L2527e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2527ea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2527f0.  v0:= temp @kind object;
  #L2527f2.  return v0 @kind object;
}
procedure `void` `writeTo`(`retrofit.mime.MultipartTypedOutput` v2 @kind this, `java.io.OutputStream` v3 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2529bc.  v0:= v2.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L2529c0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2529c6.  v0:= temp @kind object;
  #L2529c8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2529ce.  v1:= temp;
  #L2529d0.  if v1 == 0 then goto L2529e8;
  #L2529d4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2529da.  v1:= temp @kind object;
  #L2529dc.  v1:= (`retrofit.mime.MultipartTypedOutput$MimePart`) v1 @kind object;
  #L2529e0.  call `writeTo`(v1, v3) @signature `Lretrofit/mime/MultipartTypedOutput$MimePart;.writeTo:(Ljava/io/OutputStream;)V` @kind virtual;
  #L2529e6.  goto L2529c8;
  #L2529e8.  v0:= v2.`retrofit.mime.MultipartTypedOutput.footer` @type ^`byte`[] @kind object;
  #L2529ec.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L2529f2.  return @kind void;
}
