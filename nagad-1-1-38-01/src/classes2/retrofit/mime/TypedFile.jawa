record `retrofit.mime.TypedFile` @kind class @AccessFlag PUBLIC extends `retrofit.mime.TypedInput` @kind interface, `retrofit.mime.TypedOutput` @kind interface {
  `java.io.File` `retrofit.mime.TypedFile.file` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.mime.TypedFile.mimeType` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@retrofit.mime.TypedFile.BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`retrofit.mime.TypedFile` v0 @kind this, `java.lang.String` v1 @kind object, `java.io.File` v2 @kind object) @signature `Lretrofit/mime/TypedFile;.<init>:(Ljava/lang/String;Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L252d00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L252d06.  if v1 == 0 then goto L252d28;
  #L252d0a.  if v2 == 0 then goto L252d18;
  #L252d0e.  v0.`retrofit.mime.TypedFile.mimeType` @type ^`java.lang.String` := v1 @kind object;
  #L252d12.  v0.`retrofit.mime.TypedFile.file` @type ^`java.io.File` := v2 @kind object;
  #L252d16.  return @kind void;
  #L252d18.  v1:= new `java.lang.NullPointerException`;
  #L252d1c.  v2:= "file" @kind object;
  #L252d20.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252d26.  throw v1;
  #L252d28.  v1:= new `java.lang.NullPointerException`;
  #L252d2c.  v2:= "mimeType" @kind object;
  #L252d30.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252d36.  throw v1;
}
procedure `boolean` `equals`(`retrofit.mime.TypedFile` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lretrofit/mime/TypedFile;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L252bbc.  if v1 != v2 then goto L252bc4;
  #L252bc0.  v2:= 1I;
  #L252bc2.  return v2;
  #L252bc4.  v0:= instanceof @variable v2 @type ^`retrofit.mime.TypedFile` @kind boolean;
  #L252bc8.  if v0 == 0 then goto L252be2;
  #L252bcc.  v2:= (`retrofit.mime.TypedFile`) v2 @kind object;
  #L252bd0.  v0:= v1.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252bd4.  v2:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252bd8.  call temp:= `equals`(v0, v2) @signature `Ljava/io/File;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L252bde.  v2:= temp;
  #L252be0.  return v2;
  #L252be2.  v2:= 0I;
  #L252be4.  return v2;
}
procedure `java.io.File` `file`(`retrofit.mime.TypedFile` v1 @kind this) @signature `Lretrofit/mime/TypedFile;.file:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L252c18.  v0:= v1.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252c1c.  return v0 @kind object;
}
procedure `java.lang.String` `fileName`(`retrofit.mime.TypedFile` v1 @kind this) @signature `Lretrofit/mime/TypedFile;.fileName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L252c50.  v0:= v1.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252c54.  call temp:= `getName`(v0) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L252c5a.  v0:= temp @kind object;
  #L252c5c.  return v0 @kind object;
}
procedure `int` `hashCode`(`retrofit.mime.TypedFile` v1 @kind this) @signature `Lretrofit/mime/TypedFile;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L252bf8.  v0:= v1.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252bfc.  call temp:= `hashCode`(v0) @signature `Ljava/io/File;.hashCode:()I` @kind virtual;
  #L252c02.  v0:= temp;
  #L252c04.  return v0;
}
procedure `java.io.InputStream` `in`(`retrofit.mime.TypedFile` v2 @kind this) @signature `Lretrofit/mime/TypedFile;.in:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L252c30.  v0:= new `java.io.FileInputStream`;
  #L252c34.  v1:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252c38.  call `<init>`(v0, v1) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L252c3e.  return v0 @kind object;
}
procedure `long` `length`(`retrofit.mime.TypedFile` v2 @kind this) @signature `Lretrofit/mime/TypedFile;.length:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L252ce0.  v0:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252ce4.  call temp:= `length`(v0) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L252cea.  v0:= temp @kind wide;
  #L252cec.  return v0 @kind wide;
}
procedure `java.lang.String` `mimeType`(`retrofit.mime.TypedFile` v1 @kind this) @signature `Lretrofit/mime/TypedFile;.mimeType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L252c70.  v0:= v1.`retrofit.mime.TypedFile.mimeType` @type ^`java.lang.String` @kind object;
  #L252c74.  return v0 @kind object;
}
procedure `void` `moveTo`(`retrofit.mime.TypedFile` v2 @kind this, `retrofit.mime.TypedFile` v3 @kind object) @signature `Lretrofit/mime/TypedFile;.moveTo:(Lretrofit/mime/TypedFile;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L252d48.  call temp:= `mimeType`(v2) @signature `Lretrofit/mime/TypedFile;.mimeType:()Ljava/lang/String;` @kind virtual;
  #L252d4e.  v0:= temp @kind object;
  #L252d50.  call temp:= `mimeType`(v3) @signature `Lretrofit/mime/TypedFile;.mimeType:()Ljava/lang/String;` @kind virtual;
  #L252d56.  v1:= temp @kind object;
  #L252d58.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L252d5e.  v0:= temp;
  #L252d60.  if v0 == 0 then goto L252d8e;
  #L252d64.  v0:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252d68.  call temp:= `file`(v3) @signature `Lretrofit/mime/TypedFile;.file:()Ljava/io/File;` @kind virtual;
  #L252d6e.  v3:= temp @kind object;
  #L252d70.  call temp:= `renameTo`(v0, v3) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L252d76.  v3:= temp;
  #L252d78.  if v3 == 0 then goto L252d7e;
  #L252d7c.  return @kind void;
  #L252d7e.  v3:= new `java.io.IOException`;
  #L252d82.  v0:= "Rename failed!" @kind object;
  #L252d86.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252d8c.  throw v3;
  #L252d8e.  v3:= new `java.io.IOException`;
  #L252d92.  v0:= "Type mismatch." @kind object;
  #L252d96.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252d9c.  throw v3;
}
procedure `java.lang.String` `toString`(`retrofit.mime.TypedFile` v2 @kind this) @signature `Lretrofit/mime/TypedFile;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L252c88.  v0:= new `java.lang.StringBuilder`;
  #L252c8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L252c92.  v1:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252c96.  call temp:= `getAbsolutePath`(v1) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L252c9c.  v1:= temp @kind object;
  #L252c9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252ca4.  v1:= " (" @kind object;
  #L252ca8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252cae.  call temp:= `mimeType`(v2) @signature `Lretrofit/mime/TypedFile;.mimeType:()Ljava/lang/String;` @kind virtual;
  #L252cb4.  v1:= temp @kind object;
  #L252cb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252cbc.  v1:= ")" @kind object;
  #L252cc0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252cc6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L252ccc.  v0:= temp @kind object;
  #L252cce.  return v0 @kind object;
}
procedure `void` `writeTo`(`retrofit.mime.TypedFile` v4 @kind this, `java.io.OutputStream` v5 @kind object) @signature `Lretrofit/mime/TypedFile;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L252db0.  v0:= 4096I;
  #L252db4.  v0:= new `byte`[v0];
  #L252db8.  v1:= new `java.io.FileInputStream`;
  #L252dbc.  v2:= v4.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L252dc0.  call `<init>`(v1, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L252dc6.  call temp:= `read`(v1, v0) @signature `Ljava/io/FileInputStream;.read:([B)I` @kind virtual;
  #L252dcc.  v2:= temp;
  #L252dce.  v3:= -1I;
  #L252dd0.  if v2 == v3 then goto L252dde;
  #L252dd4.  v3:= 0I;
  #L252dd6.  call `write`(v5, v0, v3, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L252ddc.  goto L252dc6;
  #L252dde.  call `close`(v1) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L252de4.  return @kind void;
  #L252de6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L252de8.  call `close`(v1) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L252dee.  throw v5;
  catch `java.lang.Throwable` @[L252dc6..L252ddc] goto L252de6;
}
