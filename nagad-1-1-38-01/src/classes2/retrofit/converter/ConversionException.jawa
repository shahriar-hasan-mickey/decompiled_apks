record `retrofit.converter.ConversionException` @kind class @AccessFlag PUBLIC extends `java.lang.Exception` @kind class {
}
procedure `void` `<init>`(`retrofit.converter.ConversionException` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lretrofit/converter/ConversionException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L252070.  call `<init>`(v0, v1) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252076.  return @kind void;
}
procedure `void` `<init>`(`retrofit.converter.ConversionException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lretrofit/converter/ConversionException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L252088.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L25208e.  return @kind void;
}
procedure `void` `<init>`(`retrofit.converter.ConversionException` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lretrofit/converter/ConversionException;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2520a0.  call `<init>`(v0, v1) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2520a6.  return @kind void;
}
