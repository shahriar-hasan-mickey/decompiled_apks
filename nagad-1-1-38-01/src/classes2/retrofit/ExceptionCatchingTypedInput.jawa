record `retrofit.ExceptionCatchingTypedInput` @kind class @AccessFlag  extends `retrofit.mime.TypedInput` @kind interface {
  `retrofit.mime.TypedInput` `retrofit.ExceptionCatchingTypedInput.delegate` @AccessFlag PRIVATE_FINAL;
  `retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` `retrofit.ExceptionCatchingTypedInput.delegateStream` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this, `retrofit.mime.TypedInput` v2 @kind object) @signature `Lretrofit/ExceptionCatchingTypedInput;.<init>:(Lretrofit/mime/TypedInput;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L24c2b4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24c2ba.  v1.`retrofit.ExceptionCatchingTypedInput.delegate` @type ^`retrofit.mime.TypedInput` := v2 @kind object;
  #L24c2be.  v0:= new `retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream`;
  #L24c2c2.  call temp:= `in`(v2) @signature `Lretrofit/mime/TypedInput;.in:()Ljava/io/InputStream;` @kind interface;
  #L24c2c8.  v2:= temp @kind object;
  #L24c2ca.  call `<init>`(v0, v2) @signature `Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L24c2d0.  v1.`retrofit.ExceptionCatchingTypedInput.delegateStream` @type ^`retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` := v0 @kind object;
  #L24c2d4.  return @kind void;
}
procedure `java.io.IOException` `getThrownException`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.getThrownException:()Ljava/io/IOException;` @AccessFlag  {
    temp;
    v0;

  #L24c23c.  v0:= v1.`retrofit.ExceptionCatchingTypedInput.delegateStream` @type ^`retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` @kind object;
  #L24c240.  call temp:= `access$000`(v0) @signature `Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;.access$000:(Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;)Ljava/io/IOException;` @kind static;
  #L24c246.  v0:= temp @kind object;
  #L24c248.  return v0 @kind object;
}
procedure `java.io.InputStream` `in`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.in:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24c25c.  v0:= v1.`retrofit.ExceptionCatchingTypedInput.delegateStream` @type ^`retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` @kind object;
  #L24c260.  return v0 @kind object;
}
procedure `long` `length`(`retrofit.ExceptionCatchingTypedInput` v2 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.length:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24c294.  v0:= v2.`retrofit.ExceptionCatchingTypedInput.delegate` @type ^`retrofit.mime.TypedInput` @kind object;
  #L24c298.  call temp:= `length`(v0) @signature `Lretrofit/mime/TypedInput;.length:()J` @kind interface;
  #L24c29e.  v0:= temp @kind wide;
  #L24c2a0.  return v0 @kind wide;
}
procedure `java.lang.String` `mimeType`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.mimeType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24c274.  v0:= v1.`retrofit.ExceptionCatchingTypedInput.delegate` @type ^`retrofit.mime.TypedInput` @kind object;
  #L24c278.  call temp:= `mimeType`(v0) @signature `Lretrofit/mime/TypedInput;.mimeType:()Ljava/lang/String;` @kind interface;
  #L24c27e.  v0:= temp @kind object;
  #L24c280.  return v0 @kind object;
}
procedure `boolean` `threwException`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.threwException:()Z` @AccessFlag  {
    temp;
    v0;

  #L24c214.  v0:= v1.`retrofit.ExceptionCatchingTypedInput.delegateStream` @type ^`retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` @kind object;
  #L24c218.  call temp:= `access$000`(v0) @signature `Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;.access$000:(Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;)Ljava/io/IOException;` @kind static;
  #L24c21e.  v0:= temp @kind object;
  #L24c220.  if v0 == 0 then goto L24c228;
  #L24c224.  v0:= 1I;
  #L24c226.  goto L24c22a;
  #L24c228.  v0:= 0I;
  #L24c22a.  return v0;
}
