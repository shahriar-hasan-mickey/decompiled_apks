record `retrofit.client.OkClient$2` @kind class @AccessFlag FINAL extends `retrofit.mime.TypedInput` @kind interface {
  `com.squareup.okhttp.ResponseBody` `retrofit.client.OkClient$2.val$body` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit.client.OkClient$2` v0 @kind this, `com.squareup.okhttp.ResponseBody` v1 @kind object) @signature `Lretrofit/client/OkClient$2;.<init>:(Lcom/squareup/okhttp/ResponseBody;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L251900.  v0.`retrofit.client.OkClient$2.val$body` @type ^`com.squareup.okhttp.ResponseBody` := v1 @kind object;
  #L251904.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25190a.  return @kind void;
}
procedure `java.io.InputStream` `in`(`retrofit.client.OkClient$2` v1 @kind this) @signature `Lretrofit/client/OkClient$2;.in:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251890.  v0:= v1.`retrofit.client.OkClient$2.val$body` @type ^`com.squareup.okhttp.ResponseBody` @kind object;
  #L251894.  call temp:= `byteStream`(v0) @signature `Lcom/squareup/okhttp/ResponseBody;.byteStream:()Ljava/io/InputStream;` @kind virtual;
  #L25189a.  v0:= temp @kind object;
  #L25189c.  return v0 @kind object;
}
procedure `long` `length`(`retrofit.client.OkClient$2` v2 @kind this) @signature `Lretrofit/client/OkClient$2;.length:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2518e0.  v0:= v2.`retrofit.client.OkClient$2.val$body` @type ^`com.squareup.okhttp.ResponseBody` @kind object;
  #L2518e4.  call temp:= `contentLength`(v0) @signature `Lcom/squareup/okhttp/ResponseBody;.contentLength:()J` @kind virtual;
  #L2518ea.  v0:= temp @kind wide;
  #L2518ec.  return v0 @kind wide;
}
procedure `java.lang.String` `mimeType`(`retrofit.client.OkClient$2` v1 @kind this) @signature `Lretrofit/client/OkClient$2;.mimeType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2518b0.  v0:= v1.`retrofit.client.OkClient$2.val$body` @type ^`com.squareup.okhttp.ResponseBody` @kind object;
  #L2518b4.  call temp:= `contentType`(v0) @signature `Lcom/squareup/okhttp/ResponseBody;.contentType:()Lcom/squareup/okhttp/MediaType;` @kind virtual;
  #L2518ba.  v0:= temp @kind object;
  #L2518bc.  if v0 != 0 then goto L2518c4;
  #L2518c0.  v0:= 0I;
  #L2518c2.  goto L2518cc;
  #L2518c4.  call temp:= `toString`(v0) @signature `Lcom/squareup/okhttp/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L2518ca.  v0:= temp @kind object;
  #L2518cc.  return v0 @kind object;
}
