record `retrofit.client.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `retrofit.mime.TypedOutput` `retrofit.client.Request.body` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `retrofit.client.Request.headers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.client.Request.method` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.client.Request.url` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.client.Request` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object, `retrofit.mime.TypedOutput` v4 @kind object) @signature `Lretrofit/client/Request;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lretrofit/mime/TypedOutput;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L251bf0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L251bf6.  if v1 == 0 then goto L251c44;
  #L251bfa.  if v2 == 0 then goto L251c34;
  #L251bfe.  v0.`retrofit.client.Request.method` @type ^`java.lang.String` := v1 @kind object;
  #L251c02.  v0.`retrofit.client.Request.url` @type ^`java.lang.String` := v2 @kind object;
  #L251c06.  if v3 != 0 then goto L251c18;
  #L251c0a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L251c10.  v1:= temp @kind object;
  #L251c12.  v0.`retrofit.client.Request.headers` @type ^`java.util.List` := v1 @kind object;
  #L251c16.  goto L251c2e;
  #L251c18.  v1:= new `java.util.ArrayList`;
  #L251c1c.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L251c22.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L251c28.  v1:= temp @kind object;
  #L251c2a.  v0.`retrofit.client.Request.headers` @type ^`java.util.List` := v1 @kind object;
  #L251c2e.  v0.`retrofit.client.Request.body` @type ^`retrofit.mime.TypedOutput` := v4 @kind object;
  #L251c32.  return @kind void;
  #L251c34.  v1:= new `java.lang.NullPointerException`;
  #L251c38.  v2:= "URL must not be null." @kind object;
  #L251c3c.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251c42.  throw v1;
  #L251c44.  v1:= new `java.lang.NullPointerException`;
  #L251c48.  v2:= "Method must not be null." @kind object;
  #L251c4c.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251c52.  throw v1;
}
procedure `retrofit.mime.TypedOutput` `getBody`(`retrofit.client.Request` v1 @kind this) @signature `Lretrofit/client/Request;.getBody:()Lretrofit/mime/TypedOutput;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251bd8.  v0:= v1.`retrofit.client.Request.body` @type ^`retrofit.mime.TypedOutput` @kind object;
  #L251bdc.  return v0 @kind object;
}
procedure `java.util.List` `getHeaders`(`retrofit.client.Request` v1 @kind this) @signature `Lretrofit/client/Request;.getHeaders:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251bc0.  v0:= v1.`retrofit.client.Request.headers` @type ^`java.util.List` @kind object;
  #L251bc4.  return v0 @kind object;
}
procedure `java.lang.String` `getMethod`(`retrofit.client.Request` v1 @kind this) @signature `Lretrofit/client/Request;.getMethod:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251b90.  v0:= v1.`retrofit.client.Request.method` @type ^`java.lang.String` @kind object;
  #L251b94.  return v0 @kind object;
}
procedure `java.lang.String` `getUrl`(`retrofit.client.Request` v1 @kind this) @signature `Lretrofit/client/Request;.getUrl:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251ba8.  v0:= v1.`retrofit.client.Request.url` @type ^`java.lang.String` @kind object;
  #L251bac.  return v0 @kind object;
}
