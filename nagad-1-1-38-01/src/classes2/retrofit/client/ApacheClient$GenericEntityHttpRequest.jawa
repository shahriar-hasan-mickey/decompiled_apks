record `retrofit.client.ApacheClient$GenericEntityHttpRequest` @kind class @AccessFlag  extends `org.apache.http.client.methods.HttpEntityEnclosingRequestBase` @kind class {
  `java.lang.String` `retrofit.client.ApacheClient$GenericEntityHttpRequest.method` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.client.ApacheClient$GenericEntityHttpRequest` v4 @kind this, `retrofit.client.Request` v5 @kind object) @signature `Lretrofit/client/ApacheClient$GenericEntityHttpRequest;.<init>:(Lretrofit/client/Request;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2512e4.  call `<init>`(v4) @signature `Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;.<init>:()V` @kind direct;
  #L2512ea.  call temp:= `getMethod`(v5) @signature `Lretrofit/client/Request;.getMethod:()Ljava/lang/String;` @kind virtual;
  #L2512f0.  v0:= temp @kind object;
  #L2512f2.  v4.`retrofit.client.ApacheClient$GenericEntityHttpRequest.method` @type ^`java.lang.String` := v0 @kind object;
  #L2512f6.  call temp:= `getUrl`(v5) @signature `Lretrofit/client/Request;.getUrl:()Ljava/lang/String;` @kind virtual;
  #L2512fc.  v0:= temp @kind object;
  #L2512fe.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L251304.  v0:= temp @kind object;
  #L251306.  call `setURI`(v4, v0) @signature `Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;.setURI:(Ljava/net/URI;)V` @kind virtual;
  #L25130c.  call temp:= `getHeaders`(v5) @signature `Lretrofit/client/Request;.getHeaders:()Ljava/util/List;` @kind virtual;
  #L251312.  v0:= temp @kind object;
  #L251314.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L25131a.  v0:= temp @kind object;
  #L25131c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L251322.  v1:= temp;
  #L251324.  if v1 == 0 then goto L251356;
  #L251328.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L25132e.  v1:= temp @kind object;
  #L251330.  v1:= (`retrofit.client.Header`) v1 @kind object;
  #L251334.  v2:= new `org.apache.http.message.BasicHeader`;
  #L251338.  call temp:= `getName`(v1) @signature `Lretrofit/client/Header;.getName:()Ljava/lang/String;` @kind virtual;
  #L25133e.  v3:= temp @kind object;
  #L251340.  call temp:= `getValue`(v1) @signature `Lretrofit/client/Header;.getValue:()Ljava/lang/String;` @kind virtual;
  #L251346.  v1:= temp @kind object;
  #L251348.  call `<init>`(v2, v3, v1) @signature `Lorg/apache/http/message/BasicHeader;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L25134e.  call `addHeader`(v4, v2) @signature `Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;.addHeader:(Lorg/apache/http/Header;)V` @kind virtual;
  #L251354.  goto L25131c;
  #L251356.  v0:= new `retrofit.client.ApacheClient$TypedOutputEntity`;
  #L25135a.  call temp:= `getBody`(v5) @signature `Lretrofit/client/Request;.getBody:()Lretrofit/mime/TypedOutput;` @kind virtual;
  #L251360.  v5:= temp @kind object;
  #L251362.  call `<init>`(v0, v5) @signature `Lretrofit/client/ApacheClient$TypedOutputEntity;.<init>:(Lretrofit/mime/TypedOutput;)V` @kind direct;
  #L251368.  call `setEntity`(v4, v0) @signature `Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;.setEntity:(Lorg/apache/http/HttpEntity;)V` @kind virtual;
  #L25136e.  return @kind void;
}
procedure `java.lang.String` `getMethod`(`retrofit.client.ApacheClient$GenericEntityHttpRequest` v1 @kind this) @signature `Lretrofit/client/ApacheClient$GenericEntityHttpRequest;.getMethod:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2512cc.  v0:= v1.`retrofit.client.ApacheClient$GenericEntityHttpRequest.method` @type ^`java.lang.String` @kind object;
  #L2512d0.  return v0 @kind object;
}
