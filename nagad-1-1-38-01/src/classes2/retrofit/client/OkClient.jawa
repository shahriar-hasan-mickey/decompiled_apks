record `retrofit.client.OkClient` @kind class @AccessFlag PUBLIC extends `retrofit.client.Client` @kind interface {
  `com.squareup.okhttp.OkHttpClient` `retrofit.client.OkClient.client` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.client.OkClient` v1 @kind this) @signature `Lretrofit/client/OkClient;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L251b40.  call temp:= `generateDefaultOkHttp`() @signature `Lretrofit/client/OkClient;.generateDefaultOkHttp:()Lcom/squareup/okhttp/OkHttpClient;` @kind static;
  #L251b46.  v0:= temp @kind object;
  #L251b48.  call `<init>`(v1, v0) @signature `Lretrofit/client/OkClient;.<init>:(Lcom/squareup/okhttp/OkHttpClient;)V` @kind direct;
  #L251b4e.  return @kind void;
}
procedure `void` `<init>`(`retrofit.client.OkClient` v1 @kind this, `com.squareup.okhttp.OkHttpClient` v2 @kind object) @signature `Lretrofit/client/OkClient;.<init>:(Lcom/squareup/okhttp/OkHttpClient;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L251b60.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L251b66.  if v2 == 0 then goto L251b70;
  #L251b6a.  v1.`retrofit.client.OkClient.client` @type ^`com.squareup.okhttp.OkHttpClient` := v2 @kind object;
  #L251b6e.  return @kind void;
  #L251b70.  v2:= new `java.lang.NullPointerException`;
  #L251b74.  v0:= "client == null" @kind object;
  #L251b78.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251b7e.  throw v2;
}
procedure `java.util.List` `createHeaders`(`com.squareup.okhttp.Headers` v6 @kind object) @signature `Lretrofit/client/OkClient;.createHeaders:(Lcom/squareup/okhttp/Headers;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L251a24.  call temp:= `size`(v6) @signature `Lcom/squareup/okhttp/Headers;.size:()I` @kind virtual;
  #L251a2a.  v0:= temp;
  #L251a2c.  v1:= new `java.util.ArrayList`;
  #L251a30.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L251a36.  v2:= 0I;
  #L251a38.  if v2 >= v0 then goto L251a62;
  #L251a3c.  v3:= new `retrofit.client.Header`;
  #L251a40.  call temp:= `name`(v6, v2) @signature `Lcom/squareup/okhttp/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L251a46.  v4:= temp @kind object;
  #L251a48.  call temp:= `value`(v6, v2) @signature `Lcom/squareup/okhttp/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L251a4e.  v5:= temp @kind object;
  #L251a50.  call `<init>`(v3, v4, v5) @signature `Lretrofit/client/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L251a56.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L251a5c.  v2:= v2 + 1;
  #L251a60.  goto L251a38;
  #L251a62.  return v1 @kind object;
}
procedure `com.squareup.okhttp.Request` `createRequest`(`retrofit.client.Request` v5 @kind object) @signature `Lretrofit/client/OkClient;.createRequest:(Lretrofit/client/Request;)Lcom/squareup/okhttp/Request;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L251954.  v0:= new `com.squareup.okhttp.Request$Builder`;
  #L251958.  call `<init>`(v0) @signature `Lcom/squareup/okhttp/Request$Builder;.<init>:()V` @kind direct;
  #L25195e.  call temp:= `getUrl`(v5) @signature `Lretrofit/client/Request;.getUrl:()Ljava/lang/String;` @kind virtual;
  #L251964.  v1:= temp @kind object;
  #L251966.  call temp:= `url`(v0, v1) @signature `Lcom/squareup/okhttp/Request$Builder;.url:(Ljava/lang/String;)Lcom/squareup/okhttp/Request$Builder;` @kind virtual;
  #L25196c.  v0:= temp @kind object;
  #L25196e.  call temp:= `getMethod`(v5) @signature `Lretrofit/client/Request;.getMethod:()Ljava/lang/String;` @kind virtual;
  #L251974.  v1:= temp @kind object;
  #L251976.  call temp:= `getBody`(v5) @signature `Lretrofit/client/Request;.getBody:()Lretrofit/mime/TypedOutput;` @kind virtual;
  #L25197c.  v2:= temp @kind object;
  #L25197e.  call temp:= `createRequestBody`(v2) @signature `Lretrofit/client/OkClient;.createRequestBody:(Lretrofit/mime/TypedOutput;)Lcom/squareup/okhttp/RequestBody;` @kind static;
  #L251984.  v2:= temp @kind object;
  #L251986.  call temp:= `method`(v0, v1, v2) @signature `Lcom/squareup/okhttp/Request$Builder;.method:(Ljava/lang/String;Lcom/squareup/okhttp/RequestBody;)Lcom/squareup/okhttp/Request$Builder;` @kind virtual;
  #L25198c.  v0:= temp @kind object;
  #L25198e.  call temp:= `getHeaders`(v5) @signature `Lretrofit/client/Request;.getHeaders:()Ljava/util/List;` @kind virtual;
  #L251994.  v5:= temp @kind object;
  #L251996.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L25199c.  v1:= temp;
  #L25199e.  v2:= 0I;
  #L2519a0.  if v2 >= v1 then goto L2519d4;
  #L2519a4.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2519aa.  v3:= temp @kind object;
  #L2519ac.  v3:= (`retrofit.client.Header`) v3 @kind object;
  #L2519b0.  call temp:= `getValue`(v3) @signature `Lretrofit/client/Header;.getValue:()Ljava/lang/String;` @kind virtual;
  #L2519b6.  v4:= temp @kind object;
  #L2519b8.  if v4 != 0 then goto L2519c0;
  #L2519bc.  v4:= "" @kind object;
  #L2519c0.  call temp:= `getName`(v3) @signature `Lretrofit/client/Header;.getName:()Ljava/lang/String;` @kind virtual;
  #L2519c6.  v3:= temp @kind object;
  #L2519c8.  call temp:= `addHeader`(v0, v3, v4) @signature `Lcom/squareup/okhttp/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/okhttp/Request$Builder;` @kind virtual;
  #L2519ce.  v2:= v2 + 1;
  #L2519d2.  goto L2519a0;
  #L2519d4.  call temp:= `build`(v0) @signature `Lcom/squareup/okhttp/Request$Builder;.build:()Lcom/squareup/okhttp/Request;` @kind virtual;
  #L2519da.  v5:= temp @kind object;
  #L2519dc.  return v5 @kind object;
}
procedure `com.squareup.okhttp.RequestBody` `createRequestBody`(`retrofit.mime.TypedOutput` v2 @kind object) @signature `Lretrofit/client/OkClient;.createRequestBody:(Lretrofit/mime/TypedOutput;)Lcom/squareup/okhttp/RequestBody;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2519f0.  if v2 != 0 then goto L2519f8;
  #L2519f4.  v2:= 0I;
  #L2519f6.  return v2 @kind object;
  #L2519f8.  call temp:= `mimeType`(v2) @signature `Lretrofit/mime/TypedOutput;.mimeType:()Ljava/lang/String;` @kind interface;
  #L2519fe.  v0:= temp @kind object;
  #L251a00.  call temp:= `parse`(v0) @signature `Lcom/squareup/okhttp/MediaType;.parse:(Ljava/lang/String;)Lcom/squareup/okhttp/MediaType;` @kind static;
  #L251a06.  v0:= temp @kind object;
  #L251a08.  v1:= new `retrofit.client.OkClient$1`;
  #L251a0c.  call `<init>`(v1, v0, v2) @signature `Lretrofit/client/OkClient$1;.<init>:(Lcom/squareup/okhttp/MediaType;Lretrofit/mime/TypedOutput;)V` @kind direct;
  #L251a12.  return v1 @kind object;
}
procedure `retrofit.mime.TypedInput` `createResponseBody`(`com.squareup.okhttp.ResponseBody` v5 @kind object) @signature `Lretrofit/client/OkClient;.createResponseBody:(Lcom/squareup/okhttp/ResponseBody;)Lretrofit/mime/TypedInput;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L251b0c.  call temp:= `contentLength`(v5) @signature `Lcom/squareup/okhttp/ResponseBody;.contentLength:()J` @kind virtual;
  #L251b12.  v0:= temp @kind wide;
  #L251b14.  v2:= 0L;
  #L251b18.  v4:= lcmp(v0, v2);
  #L251b1c.  if v4 != 0 then goto L251b24;
  #L251b20.  v5:= 0I;
  #L251b22.  return v5 @kind object;
  #L251b24.  v0:= new `retrofit.client.OkClient$2`;
  #L251b28.  call `<init>`(v0, v5) @signature `Lretrofit/client/OkClient$2;.<init>:(Lcom/squareup/okhttp/ResponseBody;)V` @kind direct;
  #L251b2e.  return v0 @kind object;
}
procedure `com.squareup.okhttp.OkHttpClient` `generateDefaultOkHttp`() @signature `Lretrofit/client/OkClient;.generateDefaultOkHttp:()Lcom/squareup/okhttp/OkHttpClient;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25191c.  v0:= new `com.squareup.okhttp.OkHttpClient`;
  #L251920.  call `<init>`(v0) @signature `Lcom/squareup/okhttp/OkHttpClient;.<init>:()V` @kind direct;
  #L251926.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L25192a.  v2:= 15000L;
  #L25192e.  call `setConnectTimeout`(v0, v2, v1) @signature `Lcom/squareup/okhttp/OkHttpClient;.setConnectTimeout:(JLjava/util/concurrent/TimeUnit;)V` @kind virtual;
  #L251934.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L251938.  v2:= 20000L;
  #L25193c.  call `setReadTimeout`(v0, v2, v1) @signature `Lcom/squareup/okhttp/OkHttpClient;.setReadTimeout:(JLjava/util/concurrent/TimeUnit;)V` @kind virtual;
  #L251942.  return v0 @kind object;
}
procedure `retrofit.client.Response` `parseResponse`(`com.squareup.okhttp.Response` v7 @kind object) @signature `Lretrofit/client/OkClient;.parseResponse:(Lcom/squareup/okhttp/Response;)Lretrofit/client/Response;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L251aac.  v6:= new `retrofit.client.Response`;
  #L251ab0.  call temp:= `request`(v7) @signature `Lcom/squareup/okhttp/Response;.request:()Lcom/squareup/okhttp/Request;` @kind virtual;
  #L251ab6.  v0:= temp @kind object;
  #L251ab8.  call temp:= `urlString`(v0) @signature `Lcom/squareup/okhttp/Request;.urlString:()Ljava/lang/String;` @kind virtual;
  #L251abe.  v1:= temp @kind object;
  #L251ac0.  call temp:= `code`(v7) @signature `Lcom/squareup/okhttp/Response;.code:()I` @kind virtual;
  #L251ac6.  v2:= temp;
  #L251ac8.  call temp:= `message`(v7) @signature `Lcom/squareup/okhttp/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L251ace.  v3:= temp @kind object;
  #L251ad0.  call temp:= `headers`(v7) @signature `Lcom/squareup/okhttp/Response;.headers:()Lcom/squareup/okhttp/Headers;` @kind virtual;
  #L251ad6.  v0:= temp @kind object;
  #L251ad8.  call temp:= `createHeaders`(v0) @signature `Lretrofit/client/OkClient;.createHeaders:(Lcom/squareup/okhttp/Headers;)Ljava/util/List;` @kind static;
  #L251ade.  v4:= temp @kind object;
  #L251ae0.  call temp:= `body`(v7) @signature `Lcom/squareup/okhttp/Response;.body:()Lcom/squareup/okhttp/ResponseBody;` @kind virtual;
  #L251ae6.  v7:= temp @kind object;
  #L251ae8.  call temp:= `createResponseBody`(v7) @signature `Lretrofit/client/OkClient;.createResponseBody:(Lcom/squareup/okhttp/ResponseBody;)Lretrofit/mime/TypedInput;` @kind static;
  #L251aee.  v5:= temp @kind object;
  #L251af0.  v0:= v6 @kind object;
  #L251af2.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lretrofit/client/Response;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Lretrofit/mime/TypedInput;)V` @kind direct;
  #L251af8.  return v6 @kind object;
}
procedure `retrofit.client.Response` `execute`(`retrofit.client.OkClient` v1 @kind this, `retrofit.client.Request` v2 @kind object) @signature `Lretrofit/client/OkClient;.execute:(Lretrofit/client/Request;)Lretrofit/client/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251a74.  v0:= v1.`retrofit.client.OkClient.client` @type ^`com.squareup.okhttp.OkHttpClient` @kind object;
  #L251a78.  call temp:= `createRequest`(v2) @signature `Lretrofit/client/OkClient;.createRequest:(Lretrofit/client/Request;)Lcom/squareup/okhttp/Request;` @kind static;
  #L251a7e.  v2:= temp @kind object;
  #L251a80.  call temp:= `newCall`(v0, v2) @signature `Lcom/squareup/okhttp/OkHttpClient;.newCall:(Lcom/squareup/okhttp/Request;)Lcom/squareup/okhttp/Call;` @kind virtual;
  #L251a86.  v2:= temp @kind object;
  #L251a88.  call temp:= `execute`(v2) @signature `Lcom/squareup/okhttp/Call;.execute:()Lcom/squareup/okhttp/Response;` @kind virtual;
  #L251a8e.  v2:= temp @kind object;
  #L251a90.  call temp:= `parseResponse`(v2) @signature `Lretrofit/client/OkClient;.parseResponse:(Lcom/squareup/okhttp/Response;)Lretrofit/client/Response;` @kind static;
  #L251a96.  v2:= temp @kind object;
  #L251a98.  return v2 @kind object;
}
