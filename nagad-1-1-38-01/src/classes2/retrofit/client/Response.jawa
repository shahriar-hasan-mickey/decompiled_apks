record `retrofit.client.Response` @kind class @AccessFlag PUBLIC_FINAL {
  `retrofit.mime.TypedInput` `retrofit.client.Response.body` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `retrofit.client.Response.headers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.client.Response.reason` @AccessFlag PRIVATE_FINAL;
  `int` `retrofit.client.Response.status` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.client.Response.url` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.client.Response` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object, `java.util.List` v5 @kind object, `retrofit.mime.TypedInput` v6 @kind object) @signature `Lretrofit/client/Response;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Lretrofit/mime/TypedInput;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L251cdc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L251ce2.  if v2 == 0 then goto L251d6c;
  #L251ce6.  v0:= 200I;
  #L251cea.  if v3 < v0 then goto L251d3e;
  #L251cee.  if v4 == 0 then goto L251d2e;
  #L251cf2.  if v5 == 0 then goto L251d1e;
  #L251cf6.  v1.`retrofit.client.Response.url` @type ^`java.lang.String` := v2 @kind object;
  #L251cfa.  v1.`retrofit.client.Response.status` @type ^`int` := v3;
  #L251cfe.  v1.`retrofit.client.Response.reason` @type ^`java.lang.String` := v4 @kind object;
  #L251d02.  v2:= new `java.util.ArrayList`;
  #L251d06.  call `<init>`(v2, v5) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L251d0c.  call temp:= `unmodifiableList`(v2) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L251d12.  v2:= temp @kind object;
  #L251d14.  v1.`retrofit.client.Response.headers` @type ^`java.util.List` := v2 @kind object;
  #L251d18.  v1.`retrofit.client.Response.body` @type ^`retrofit.mime.TypedInput` := v6 @kind object;
  #L251d1c.  return @kind void;
  #L251d1e.  v2:= new `java.lang.IllegalArgumentException`;
  #L251d22.  v3:= "headers == null" @kind object;
  #L251d26.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251d2c.  throw v2;
  #L251d2e.  v2:= new `java.lang.IllegalArgumentException`;
  #L251d32.  v3:= "reason == null" @kind object;
  #L251d36.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251d3c.  throw v2;
  #L251d3e.  v2:= new `java.lang.IllegalArgumentException`;
  #L251d42.  v4:= new `java.lang.StringBuilder`;
  #L251d46.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L251d4c.  v5:= "Invalid status code: " @kind object;
  #L251d50.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251d56.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L251d5c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L251d62.  v3:= temp @kind object;
  #L251d64.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251d6a.  throw v2;
  #L251d6c.  v2:= new `java.lang.IllegalArgumentException`;
  #L251d70.  v3:= "url == null" @kind object;
  #L251d74.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251d7a.  throw v2;
}
procedure `retrofit.mime.TypedInput` `getBody`(`retrofit.client.Response` v1 @kind this) @signature `Lretrofit/client/Response;.getBody:()Lretrofit/mime/TypedInput;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251cc4.  v0:= v1.`retrofit.client.Response.body` @type ^`retrofit.mime.TypedInput` @kind object;
  #L251cc8.  return v0 @kind object;
}
procedure `java.util.List` `getHeaders`(`retrofit.client.Response` v1 @kind this) @signature `Lretrofit/client/Response;.getHeaders:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251cac.  v0:= v1.`retrofit.client.Response.headers` @type ^`java.util.List` @kind object;
  #L251cb0.  return v0 @kind object;
}
procedure `java.lang.String` `getReason`(`retrofit.client.Response` v1 @kind this) @signature `Lretrofit/client/Response;.getReason:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251c7c.  v0:= v1.`retrofit.client.Response.reason` @type ^`java.lang.String` @kind object;
  #L251c80.  return v0 @kind object;
}
procedure `int` `getStatus`(`retrofit.client.Response` v1 @kind this) @signature `Lretrofit/client/Response;.getStatus:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251c64.  v0:= v1.`retrofit.client.Response.status` @type ^`int`;
  #L251c68.  return v0;
}
procedure `java.lang.String` `getUrl`(`retrofit.client.Response` v1 @kind this) @signature `Lretrofit/client/Response;.getUrl:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251c94.  v0:= v1.`retrofit.client.Response.url` @type ^`java.lang.String` @kind object;
  #L251c98.  return v0 @kind object;
}
