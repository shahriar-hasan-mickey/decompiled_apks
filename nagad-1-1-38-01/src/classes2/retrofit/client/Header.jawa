record `retrofit.client.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `retrofit.client.Header.name` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.client.Header.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.client.Header` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lretrofit/client/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2517f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2517fa.  v0.`retrofit.client.Header.name` @type ^`java.lang.String` := v1 @kind object;
  #L2517fe.  v0.`retrofit.client.Header.value` @type ^`java.lang.String` := v2 @kind object;
  #L251802.  return @kind void;
}
procedure `boolean` `equals`(`retrofit.client.Header` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lretrofit/client/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2516b0.  v0:= 1I;
  #L2516b2.  if v4 != v5 then goto L2516b8;
  #L2516b6.  return v0;
  #L2516b8.  v1:= 0I;
  #L2516ba.  if v5 == 0 then goto L25171a;
  #L2516be.  v2:= constclass @type ^`retrofit.client.Header` @kind object;
  #L2516c2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2516c8.  v3:= temp @kind object;
  #L2516ca.  if v2 == v3 then goto L2516d0;
  #L2516ce.  goto L25171a;
  #L2516d0.  v5:= (`retrofit.client.Header`) v5 @kind object;
  #L2516d4.  v2:= v4.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L2516d8.  if v2 == 0 then goto L2516ee;
  #L2516dc.  v3:= v5.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L2516e0.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2516e6.  v2:= temp;
  #L2516e8.  if v2 != 0 then goto L2516f8;
  #L2516ec.  goto L2516f6;
  #L2516ee.  v2:= v5.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L2516f2.  if v2 == 0 then goto L2516f8;
  #L2516f6.  return v1;
  #L2516f8.  v2:= v4.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L2516fc.  v5:= v5.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L251700.  if v2 == 0 then goto L251712;
  #L251704.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L25170a.  v5:= temp;
  #L25170c.  if v5 != 0 then goto L251718;
  #L251710.  goto L251716;
  #L251712.  if v5 == 0 then goto L251718;
  #L251716.  return v1;
  #L251718.  return v0;
  #L25171a.  return v1;
}
procedure `java.lang.String` `getName`(`retrofit.client.Header` v1 @kind this) @signature `Lretrofit/client/Header;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25176c.  v0:= v1.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L251770.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`retrofit.client.Header` v1 @kind this) @signature `Lretrofit/client/Header;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251784.  v0:= v1.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L251788.  return v0 @kind object;
}
procedure `int` `hashCode`(`retrofit.client.Header` v3 @kind this) @signature `Lretrofit/client/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L25172c.  v0:= v3.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L251730.  v1:= 0I;
  #L251732.  if v0 == 0 then goto L251740;
  #L251736.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L25173c.  v0:= temp;
  #L25173e.  goto L251742;
  #L251740.  v0:= 0I;
  #L251742.  v0:= v0 * 31;
  #L251746.  v2:= v3.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L25174a.  if v2 == 0 then goto L251756;
  #L25174e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L251754.  v1:= temp;
  #L251756.  v0:= v0 + v1 @kind int;
  #L251758.  return v0;
}
procedure `java.lang.String` `toString`(`retrofit.client.Header` v3 @kind this) @signature `Lretrofit/client/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L25179c.  v0:= new `java.lang.StringBuilder`;
  #L2517a0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2517a6.  v1:= v3.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L2517aa.  v2:= "" @kind object;
  #L2517ae.  if v1 == 0 then goto L2517b4;
  #L2517b2.  goto L2517b6;
  #L2517b4.  v1:= v2 @kind object;
  #L2517b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2517bc.  v1:= ": " @kind object;
  #L2517c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2517c6.  v1:= v3.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L2517ca.  if v1 == 0 then goto L2517d0;
  #L2517ce.  goto L2517d2;
  #L2517d0.  v1:= v2 @kind object;
  #L2517d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2517d8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2517de.  v0:= temp @kind object;
  #L2517e0.  return v0 @kind object;
}
