record `retrofit.Platform$Base$2$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `retrofit.Platform$Base$2` `retrofit.Platform$Base$2$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Runnable` `retrofit.Platform$Base$2$1.val$r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit.Platform$Base$2$1` v0 @kind this, `retrofit.Platform$Base$2` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lretrofit/Platform$Base$2$1;.<init>:(Lretrofit/Platform$Base$2;Ljava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24c588.  v0.`retrofit.Platform$Base$2$1.this$1` @type ^`retrofit.Platform$Base$2` := v1 @kind object;
  #L24c58c.  v0.`retrofit.Platform$Base$2$1.val$r` @type ^`java.lang.Runnable` := v2 @kind object;
  #L24c590.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24c596.  return @kind void;
}
procedure `void` `run`(`retrofit.Platform$Base$2$1` v2 @kind this) @signature `Lretrofit/Platform$Base$2$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24c5a8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L24c5ae.  v0:= temp @kind object;
  #L24c5b0.  v1:= 1I;
  #L24c5b2.  call `setPriority`(v0, v1) @signature `Ljava/lang/Thread;.setPriority:(I)V` @kind virtual;
  #L24c5b8.  v0:= v2.`retrofit.Platform$Base$2$1.val$r` @type ^`java.lang.Runnable` @kind object;
  #L24c5bc.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L24c5c2.  return @kind void;
}
