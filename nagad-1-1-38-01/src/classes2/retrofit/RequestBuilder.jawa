record `retrofit.RequestBuilder` @kind class @AccessFlag FINAL extends `retrofit.RequestInterceptor$RequestFacade` @kind interface {
  `java.lang.String` `retrofit.RequestBuilder.apiUrl` @AccessFlag PRIVATE_FINAL;
  `retrofit.mime.TypedOutput` `retrofit.RequestBuilder.body` @AccessFlag PRIVATE;
  `java.lang.String` `retrofit.RequestBuilder.contentTypeHeader` @AccessFlag PRIVATE;
  `retrofit.converter.Converter` `retrofit.RequestBuilder.converter` @AccessFlag PRIVATE_FINAL;
  `retrofit.mime.FormUrlEncodedTypedOutput` `retrofit.RequestBuilder.formBody` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `retrofit.RequestBuilder.headers` @AccessFlag PRIVATE;
  `boolean` `retrofit.RequestBuilder.isObservable` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit.RequestBuilder.isSynchronous` @AccessFlag PRIVATE_FINAL;
  `retrofit.mime.MultipartTypedOutput` `retrofit.RequestBuilder.multipartBody` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation`[] `retrofit.RequestBuilder.paramAnnotations` @AccessFlag PRIVATE_FINAL;
  `java.lang.StringBuilder` `retrofit.RequestBuilder.queryParams` @AccessFlag PRIVATE;
  `java.lang.String` `retrofit.RequestBuilder.relativeUrl` @AccessFlag PRIVATE;
  `java.lang.String` `retrofit.RequestBuilder.requestMethod` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object, `retrofit.RestMethodInfo` v3 @kind object, `retrofit.converter.Converter` v4 @kind object) @signature `Lretrofit/RequestBuilder;.<init>:(Ljava/lang/String;Lretrofit/RestMethodInfo;Lretrofit/converter/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L24cb68.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24cb6e.  v1.`retrofit.RequestBuilder.apiUrl` @type ^`java.lang.String` := v2 @kind object;
  #L24cb72.  v1.`retrofit.RequestBuilder.converter` @type ^`retrofit.converter.Converter` := v4 @kind object;
  #L24cb76.  v2:= v3.`retrofit.RestMethodInfo.requestParamAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L24cb7a.  v1.`retrofit.RequestBuilder.paramAnnotations` @type ^`java.lang.annotation.Annotation`[] := v2 @kind object;
  #L24cb7e.  v2:= v3.`retrofit.RestMethodInfo.requestMethod` @type ^`java.lang.String` @kind object;
  #L24cb82.  v1.`retrofit.RequestBuilder.requestMethod` @type ^`java.lang.String` := v2 @kind object;
  #L24cb86.  v2:= v3.`retrofit.RestMethodInfo.isSynchronous` @type ^`boolean` @kind boolean;
  #L24cb8a.  v1.`retrofit.RequestBuilder.isSynchronous` @type ^`boolean` := v2 @kind boolean;
  #L24cb8e.  v2:= v3.`retrofit.RestMethodInfo.isObservable` @type ^`boolean` @kind boolean;
  #L24cb92.  v1.`retrofit.RequestBuilder.isObservable` @type ^`boolean` := v2 @kind boolean;
  #L24cb96.  v2:= v3.`retrofit.RestMethodInfo.headers` @type ^`java.util.List` @kind object;
  #L24cb9a.  if v2 == 0 then goto L24cbac;
  #L24cb9e.  v4:= new `java.util.ArrayList`;
  #L24cba2.  call `<init>`(v4, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L24cba8.  v1.`retrofit.RequestBuilder.headers` @type ^`java.util.List` := v4 @kind object;
  #L24cbac.  v2:= v3.`retrofit.RestMethodInfo.contentTypeHeader` @type ^`java.lang.String` @kind object;
  #L24cbb0.  v1.`retrofit.RequestBuilder.contentTypeHeader` @type ^`java.lang.String` := v2 @kind object;
  #L24cbb4.  v2:= v3.`retrofit.RestMethodInfo.requestUrl` @type ^`java.lang.String` @kind object;
  #L24cbb8.  v1.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v2 @kind object;
  #L24cbbc.  v2:= v3.`retrofit.RestMethodInfo.requestQuery` @type ^`java.lang.String` @kind object;
  #L24cbc0.  if v2 == 0 then goto L24cbe2;
  #L24cbc4.  v4:= new `java.lang.StringBuilder`;
  #L24cbc8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24cbce.  v0:= 63I;
  #L24cbd2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cbd8.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cbde.  v1.`retrofit.RequestBuilder.queryParams` @type ^`java.lang.StringBuilder` := v4 @kind object;
  #L24cbe2.  v2:= `@@retrofit.RequestBuilder$1.$SwitchMap$retrofit$RestMethodInfo$RequestType` @type ^`int`[] @kind object;
  #L24cbe6.  v4:= v3.`retrofit.RestMethodInfo.requestType` @type ^`retrofit.RestMethodInfo$RequestType` @kind object;
  #L24cbea.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L24cbf0.  v4:= temp;
  #L24cbf2.  v2:= v2[v4];
  #L24cbf6.  v4:= 1I;
  #L24cbf8.  v0:= 0I;
  #L24cbfa.  if v2 == v4 then goto L24cc62;
  #L24cbfe.  v4:= 2I;
  #L24cc00.  if v2 == v4 then goto L24cc46;
  #L24cc04.  v4:= 3I;
  #L24cc06.  if v2 != v4 then goto L24cc14;
  #L24cc0a.  v1.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` := v0 @kind object;
  #L24cc0e.  v1.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` := v0 @kind object;
  #L24cc12.  goto L24cc7c;
  #L24cc14.  v2:= new `java.lang.IllegalArgumentException`;
  #L24cc18.  v4:= new `java.lang.StringBuilder`;
  #L24cc1c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24cc22.  v0:= "Unknown request type: " @kind object;
  #L24cc26.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cc2c.  v3:= v3.`retrofit.RestMethodInfo.requestType` @type ^`retrofit.RestMethodInfo$RequestType` @kind object;
  #L24cc30.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cc36.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24cc3c.  v3:= temp @kind object;
  #L24cc3e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24cc44.  throw v2;
  #L24cc46.  v1.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` := v0 @kind object;
  #L24cc4a.  v2:= new `retrofit.mime.MultipartTypedOutput`;
  #L24cc4e.  call `<init>`(v2) @signature `Lretrofit/mime/MultipartTypedOutput;.<init>:()V` @kind direct;
  #L24cc54.  v1.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` := v2 @kind object;
  #L24cc58.  v2:= v1.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L24cc5c.  v1.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` := v2 @kind object;
  #L24cc60.  goto L24cc7c;
  #L24cc62.  v2:= new `retrofit.mime.FormUrlEncodedTypedOutput`;
  #L24cc66.  call `<init>`(v2) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.<init>:()V` @kind direct;
  #L24cc6c.  v1.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` := v2 @kind object;
  #L24cc70.  v1.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` := v0 @kind object;
  #L24cc74.  v2:= v1.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` @kind object;
  #L24cc78.  v1.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` := v2 @kind object;
  #L24cc7c.  return @kind void;
}
procedure `void` `addPathParam`(`retrofit.RequestBuilder` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `boolean` v7 ) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24cd48.  if v5 == 0 then goto L24ce6c;
  #L24cd4c.  if v6 == 0 then goto L24ce34;
  #L24cd50.  v0:= "}" @kind object;
  #L24cd54.  v1:= "{" @kind object;
  #L24cd58.  if v7 == 0 then goto L24cdb6;
  #L24cd5c.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L24cd62.  v7:= temp @kind object;
  #L24cd64.  v2:= "UTF-8" @kind object;
  #L24cd68.  call temp:= `encode`(v7, v2) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L24cd6e.  v7:= temp @kind object;
  #L24cd70.  v2:= "+" @kind object;
  #L24cd74.  v3:= "%20" @kind object;
  #L24cd78.  call temp:= `replace`(v7, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L24cd7e.  v7:= temp @kind object;
  #L24cd80.  v2:= v4.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L24cd84.  v3:= new `java.lang.StringBuilder`;
  #L24cd88.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24cd8e.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cd94.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cd9a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cda0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24cda6.  v0:= temp @kind object;
  #L24cda8.  call temp:= `replace`(v2, v0, v7) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L24cdae.  v7:= temp @kind object;
  #L24cdb0.  v4.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v7 @kind object;
  #L24cdb4.  goto L24cdf2;
  #L24cdb6.  v7:= v4.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L24cdba.  v2:= new `java.lang.StringBuilder`;
  #L24cdbe.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24cdc4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cdca.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cdd0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cdd6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24cddc.  v0:= temp @kind object;
  #L24cdde.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L24cde4.  v1:= temp @kind object;
  #L24cde6.  call temp:= `replace`(v7, v0, v1) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L24cdec.  v7:= temp @kind object;
  #L24cdee.  v4.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v7 @kind object;
  #L24cdf2.  return @kind void;
  #L24cdf4.  v7:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L24cdf6.  v0:= new `java.lang.RuntimeException`;
  #L24cdfa.  v1:= new `java.lang.StringBuilder`;
  #L24cdfe.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24ce04.  v2:= "Unable to convert path parameter \"" @kind object;
  #L24ce08.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ce0e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ce14.  v5:= "\" value to UTF-8:" @kind object;
  #L24ce18.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ce1e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ce24.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24ce2a.  v5:= temp @kind object;
  #L24ce2c.  call `<init>`(v0, v5, v7) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L24ce32.  throw v0;
  #L24ce34.  v6:= new `java.lang.IllegalArgumentException`;
  #L24ce38.  v7:= new `java.lang.StringBuilder`;
  #L24ce3c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24ce42.  v0:= "Path replacement \"" @kind object;
  #L24ce46.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ce4c.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ce52.  v5:= "\" value must not be null." @kind object;
  #L24ce56.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ce5c.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24ce62.  v5:= temp @kind object;
  #L24ce64.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ce6a.  throw v6;
  #L24ce6c.  v5:= new `java.lang.IllegalArgumentException`;
  #L24ce70.  v6:= "Path replacement name must not be null." @kind object;
  #L24ce74.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ce7a.  throw v5;
  catch `java.io.UnsupportedEncodingException` @[L24cd5c..L24cdf2] goto L24cdf4;
}
procedure `void` `addQueryParam`(`retrofit.RequestBuilder` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object, `boolean` v6 , `boolean` v7 ) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/Object;ZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L24ce9c.  v0:= instanceof @variable v5 @type ^`java.lang.Iterable` @kind boolean;
  #L24cea0.  if v0 == 0 then goto L24ced8;
  #L24cea4.  v5:= (`java.lang.Iterable`) v5 @kind object;
  #L24cea8.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24ceae.  v5:= temp @kind object;
  #L24ceb0.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24ceb6.  v0:= temp;
  #L24ceb8.  if v0 == 0 then goto L24cf28;
  #L24cebc.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24cec2.  v0:= temp @kind object;
  #L24cec4.  if v0 == 0 then goto L24ceb0;
  #L24cec8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24cece.  v0:= temp @kind object;
  #L24ced0.  call `addQueryParam`(v3, v4, v0, v6, v7) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L24ced6.  goto L24ceb0;
  #L24ced8.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L24cede.  v0:= temp @kind object;
  #L24cee0.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L24cee6.  v0:= temp;
  #L24cee8.  if v0 == 0 then goto L24cf1a;
  #L24ceec.  v0:= 0I;
  #L24ceee.  call temp:= `getLength`(v5) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L24cef4.  v1:= temp;
  #L24cef6.  if v0 >= v1 then goto L24cf28;
  #L24cefa.  call temp:= `get`(v5, v0) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L24cf00.  v2:= temp @kind object;
  #L24cf02.  if v2 == 0 then goto L24cf14;
  #L24cf06.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24cf0c.  v2:= temp @kind object;
  #L24cf0e.  call `addQueryParam`(v3, v4, v2, v6, v7) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L24cf14.  v0:= v0 + 1;
  #L24cf18.  goto L24cef6;
  #L24cf1a.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24cf20.  v5:= temp @kind object;
  #L24cf22.  call `addQueryParam`(v3, v4, v5, v6, v7) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L24cf28.  return @kind void;
}
procedure `void` `addQueryParam`(`retrofit.RequestBuilder` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `boolean` v5 , `boolean` v6 ) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L24cf58.  if v3 == 0 then goto L24d03e;
  #L24cf5c.  if v4 == 0 then goto L24d006;
  #L24cf60.  v0:= v2.`retrofit.RequestBuilder.queryParams` @type ^`java.lang.StringBuilder` @kind object;
  #L24cf64.  if v0 != 0 then goto L24cf76;
  #L24cf68.  v0:= new `java.lang.StringBuilder`;
  #L24cf6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24cf72.  v2.`retrofit.RequestBuilder.queryParams` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L24cf76.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L24cf7c.  v1:= temp;
  #L24cf7e.  if v1 <= 0 then goto L24cf88;
  #L24cf82.  v1:= 38I;
  #L24cf86.  goto L24cf8c;
  #L24cf88.  v1:= 63I;
  #L24cf8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cf92.  v1:= "UTF-8" @kind object;
  #L24cf96.  if v5 == 0 then goto L24cfa2;
  #L24cf9a.  call temp:= `encode`(v3, v1) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L24cfa0.  v3:= temp @kind object;
  #L24cfa2.  if v6 == 0 then goto L24cfae;
  #L24cfa6.  call temp:= `encode`(v4, v1) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L24cfac.  v4:= temp @kind object;
  #L24cfae.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cfb4.  v5:= 61I;
  #L24cfb8.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cfbe.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cfc4.  return @kind void;
  #L24cfc6.  v5:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L24cfc8.  v6:= new `java.lang.RuntimeException`;
  #L24cfcc.  v0:= new `java.lang.StringBuilder`;
  #L24cfd0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24cfd6.  v1:= "Unable to convert query parameter \"" @kind object;
  #L24cfda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cfe0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cfe6.  v3:= "\" value to UTF-8: " @kind object;
  #L24cfea.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cff0.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cff6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24cffc.  v3:= temp @kind object;
  #L24cffe.  call `<init>`(v6, v3, v5) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L24d004.  throw v6;
  #L24d006.  v4:= new `java.lang.IllegalArgumentException`;
  #L24d00a.  v5:= new `java.lang.StringBuilder`;
  #L24d00e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24d014.  v6:= "Query param \"" @kind object;
  #L24d018.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d01e.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d024.  v3:= "\" value must not be null." @kind object;
  #L24d028.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d02e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d034.  v3:= temp @kind object;
  #L24d036.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d03c.  throw v4;
  #L24d03e.  v3:= new `java.lang.IllegalArgumentException`;
  #L24d042.  v4:= "Query param name must not be null." @kind object;
  #L24d046.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d04c.  throw v3;
  catch `java.io.UnsupportedEncodingException` @[L24cf60..L24cf92] goto L24cfc6;
  catch `java.io.UnsupportedEncodingException` @[L24cf9a..L24cfc4] goto L24cfc6;
}
procedure `void` `addQueryParamMap`(`retrofit.RequestBuilder` v2 @kind this, `int` v3 , `java.util.Map` v4 @kind object, `boolean` v5 , `boolean` v6 ) @signature `Lretrofit/RequestBuilder;.addQueryParamMap:(ILjava/util/Map;ZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L24d078.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L24d07e.  v4:= temp @kind object;
  #L24d080.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24d086.  v4:= temp @kind object;
  #L24d088.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24d08e.  v0:= temp;
  #L24d090.  if v0 == 0 then goto L24d10c;
  #L24d094.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24d09a.  v0:= temp @kind object;
  #L24d09c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L24d0a0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L24d0a6.  v1:= temp @kind object;
  #L24d0a8.  if v1 == 0 then goto L24d0d0;
  #L24d0ac.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L24d0b2.  v0:= temp @kind object;
  #L24d0b4.  if v0 == 0 then goto L24d088;
  #L24d0b8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d0be.  v1:= temp @kind object;
  #L24d0c0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d0c6.  v0:= temp @kind object;
  #L24d0c8.  call `addQueryParam`(v2, v1, v0, v5, v6) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L24d0ce.  goto L24d088;
  #L24d0d0.  v4:= new `java.lang.IllegalArgumentException`;
  #L24d0d4.  v5:= new `java.lang.StringBuilder`;
  #L24d0d8.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24d0de.  v6:= "Parameter #" @kind object;
  #L24d0e2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d0e8.  v3:= v3 + 1;
  #L24d0ec.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d0f2.  v3:= " query map contained null key." @kind object;
  #L24d0f6.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d0fc.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d102.  v3:= temp @kind object;
  #L24d104.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d10a.  throw v4;
  #L24d10c.  return @kind void;
}
procedure `void` `addEncodedPathParam`(`retrofit.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lretrofit/RequestBuilder;.addEncodedPathParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24cc90.  v0:= 0I;
  #L24cc92.  call `addPathParam`(v1, v2, v3, v0) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L24cc98.  return @kind void;
}
procedure `void` `addEncodedQueryParam`(`retrofit.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lretrofit/RequestBuilder;.addEncodedQueryParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24ccac.  v0:= 0I;
  #L24ccae.  call `addQueryParam`(v1, v2, v3, v0, v0) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L24ccb4.  return @kind void;
}
procedure `void` `addHeader`(`retrofit.RequestBuilder` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lretrofit/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24ccc8.  if v3 == 0 then goto L24cd0c;
  #L24cccc.  v0:= "Content-Type" @kind object;
  #L24ccd0.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L24ccd6.  v0:= temp;
  #L24ccd8.  if v0 == 0 then goto L24cce2;
  #L24ccdc.  v2.`retrofit.RequestBuilder.contentTypeHeader` @type ^`java.lang.String` := v4 @kind object;
  #L24cce0.  return @kind void;
  #L24cce2.  v0:= v2.`retrofit.RequestBuilder.headers` @type ^`java.util.List` @kind object;
  #L24cce6.  if v0 != 0 then goto L24ccfa;
  #L24ccea.  v0:= new `java.util.ArrayList`;
  #L24ccee.  v1:= 2I;
  #L24ccf0.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L24ccf6.  v2.`retrofit.RequestBuilder.headers` @type ^`java.util.List` := v0 @kind object;
  #L24ccfa.  v1:= new `retrofit.client.Header`;
  #L24ccfe.  call `<init>`(v1, v3, v4) @signature `Lretrofit/client/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L24cd04.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24cd0a.  return @kind void;
  #L24cd0c.  v3:= new `java.lang.IllegalArgumentException`;
  #L24cd10.  v4:= "Header name must not be null." @kind object;
  #L24cd14.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24cd1a.  throw v3;
}
procedure `void` `addPathParam`(`retrofit.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24cd2c.  v0:= 1I;
  #L24cd2e.  call `addPathParam`(v1, v2, v3, v0) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L24cd34.  return @kind void;
}
procedure `void` `addQueryParam`(`retrofit.RequestBuilder` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24cf3c.  v0:= 0I;
  #L24cf3e.  v1:= 1I;
  #L24cf40.  call `addQueryParam`(v2, v3, v4, v0, v1) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L24cf46.  return @kind void;
}
procedure `retrofit.client.Request` `build`(`retrofit.RequestBuilder` v6 @kind this) @signature `Lretrofit/RequestBuilder;.build:()Lretrofit/client/Request;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24ca8c.  v0:= v6.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L24ca90.  if v0 == 0 then goto L24cab2;
  #L24ca94.  call temp:= `getPartCount`(v0) @signature `Lretrofit/mime/MultipartTypedOutput;.getPartCount:()I` @kind virtual;
  #L24ca9a.  v0:= temp;
  #L24ca9c.  if v0 == 0 then goto L24caa2;
  #L24caa0.  goto L24cab2;
  #L24caa2.  v0:= new `java.lang.IllegalStateException`;
  #L24caa6.  v1:= "Multipart requests must contain at least one part." @kind object;
  #L24caaa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24cab0.  throw v0;
  #L24cab2.  v0:= v6.`retrofit.RequestBuilder.apiUrl` @type ^`java.lang.String` @kind object;
  #L24cab6.  v1:= new `java.lang.StringBuilder`;
  #L24caba.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24cac0.  v2:= "/" @kind object;
  #L24cac4.  call temp:= `endsWith`(v0, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24caca.  v0:= temp;
  #L24cacc.  if v0 == 0 then goto L24cae2;
  #L24cad0.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L24cad6.  v0:= temp;
  #L24cad8.  v0:= v0 + -1;
  #L24cadc.  call temp:= `deleteCharAt`(v1, v0) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cae2.  v0:= v6.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L24cae6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24caec.  v0:= v6.`retrofit.RequestBuilder.queryParams` @type ^`java.lang.StringBuilder` @kind object;
  #L24caf0.  if v0 == 0 then goto L24cafa;
  #L24caf4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24cafa.  v0:= v6.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` @kind object;
  #L24cafe.  v2:= v6.`retrofit.RequestBuilder.headers` @type ^`java.util.List` @kind object;
  #L24cb02.  v3:= v6.`retrofit.RequestBuilder.contentTypeHeader` @type ^`java.lang.String` @kind object;
  #L24cb06.  if v3 == 0 then goto L24cb3e;
  #L24cb0a.  if v0 == 0 then goto L24cb1c;
  #L24cb0e.  v4:= new `retrofit.RequestBuilder$MimeOverridingTypedOutput`;
  #L24cb12.  call `<init>`(v4, v0, v3) @signature `Lretrofit/RequestBuilder$MimeOverridingTypedOutput;.<init>:(Lretrofit/mime/TypedOutput;Ljava/lang/String;)V` @kind direct;
  #L24cb18.  v0:= v4 @kind object;
  #L24cb1a.  goto L24cb3e;
  #L24cb1c.  v4:= new `retrofit.client.Header`;
  #L24cb20.  v5:= "Content-Type" @kind object;
  #L24cb24.  call `<init>`(v4, v5, v3) @signature `Lretrofit/client/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L24cb2a.  if v2 != 0 then goto L24cb38;
  #L24cb2e.  call temp:= `singletonList`(v4) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L24cb34.  v2:= temp @kind object;
  #L24cb36.  goto L24cb3e;
  #L24cb38.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24cb3e.  v3:= new `retrofit.client.Request`;
  #L24cb42.  v4:= v6.`retrofit.RequestBuilder.requestMethod` @type ^`java.lang.String` @kind object;
  #L24cb46.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24cb4c.  v1:= temp @kind object;
  #L24cb4e.  call `<init>`(v3, v4, v1, v2, v0) @signature `Lretrofit/client/Request;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lretrofit/mime/TypedOutput;)V` @kind direct;
  #L24cb54.  return v3 @kind object;
}
procedure `void` `setArguments`(`retrofit.RequestBuilder` v11 @kind this, `java.lang.Object`[] v12 @kind object) @signature `Lretrofit/RequestBuilder;.setArguments:([Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L24d120.  if v12 != 0 then goto L24d126;
  #L24d124.  return @kind void;
  #L24d126.  v0:= length @variable v12;
  #L24d128.  v1:= v11.`retrofit.RequestBuilder.isSynchronous` @type ^`boolean` @kind boolean;
  #L24d12c.  if v1 != 0 then goto L24d13c;
  #L24d130.  v1:= v11.`retrofit.RequestBuilder.isObservable` @type ^`boolean` @kind boolean;
  #L24d134.  if v1 != 0 then goto L24d13c;
  #L24d138.  v0:= v0 + -1;
  #L24d13c.  v1:= 0I;
  #L24d13e.  v2:= 0I;
  #L24d140.  if v2 >= v0 then goto L24d6c2;
  #L24d144.  v3:= v12[v2] @kind object;
  #L24d148.  v4:= v11.`retrofit.RequestBuilder.paramAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L24d14c.  v4:= v4[v2] @kind object;
  #L24d150.  call temp:= `annotationType`(v4) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L24d156.  v5:= temp @kind object;
  #L24d158.  v6:= constclass @type ^`retrofit.http.Path` @kind object;
  #L24d15c.  v7:= "\" value must not be null." @kind object;
  #L24d160.  v8:= "Path parameter \"" @kind object;
  #L24d164.  if v5 != v6 then goto L24d1c2;
  #L24d168.  v4:= (`retrofit.http.Path`) v4 @kind object;
  #L24d16c.  call temp:= `value`(v4) @signature `Lretrofit/http/Path;.value:()Ljava/lang/String;` @kind interface;
  #L24d172.  v5:= temp @kind object;
  #L24d174.  if v3 == 0 then goto L24d192;
  #L24d178.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d17e.  v3:= temp @kind object;
  #L24d180.  call temp:= `encode`(v4) @signature `Lretrofit/http/Path;.encode:()Z` @kind interface;
  #L24d186.  v4:= temp;
  #L24d188.  call `addPathParam`(v11, v5, v3, v4) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L24d18e.  goto L24d674;
  #L24d192.  v12:= new `java.lang.IllegalArgumentException`;
  #L24d196.  v0:= new `java.lang.StringBuilder`;
  #L24d19a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24d1a0.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d1a6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d1ac.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d1b2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d1b8.  v0:= temp @kind object;
  #L24d1ba.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d1c0.  throw v12;
  #L24d1c2.  v6:= constclass @type ^`retrofit.http.EncodedPath` @kind object;
  #L24d1c6.  if v5 != v6 then goto L24d21c;
  #L24d1ca.  v4:= (`retrofit.http.EncodedPath`) v4 @kind object;
  #L24d1ce.  call temp:= `value`(v4) @signature `Lretrofit/http/EncodedPath;.value:()Ljava/lang/String;` @kind interface;
  #L24d1d4.  v4:= temp @kind object;
  #L24d1d6.  if v3 == 0 then goto L24d1ec;
  #L24d1da.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d1e0.  v3:= temp @kind object;
  #L24d1e2.  call `addPathParam`(v11, v4, v3, v1) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L24d1e8.  goto L24d674;
  #L24d1ec.  v12:= new `java.lang.IllegalArgumentException`;
  #L24d1f0.  v0:= new `java.lang.StringBuilder`;
  #L24d1f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24d1fa.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d200.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d206.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d20c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d212.  v0:= temp @kind object;
  #L24d214.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d21a.  throw v12;
  #L24d21c.  v6:= constclass @type ^`retrofit.http.Query` @kind object;
  #L24d220.  if v5 != v6 then goto L24d24e;
  #L24d224.  if v3 == 0 then goto L24d674;
  #L24d228.  v4:= (`retrofit.http.Query`) v4 @kind object;
  #L24d22c.  call temp:= `value`(v4) @signature `Lretrofit/http/Query;.value:()Ljava/lang/String;` @kind interface;
  #L24d232.  v5:= temp @kind object;
  #L24d234.  call temp:= `encodeName`(v4) @signature `Lretrofit/http/Query;.encodeName:()Z` @kind interface;
  #L24d23a.  v6:= temp;
  #L24d23c.  call temp:= `encodeValue`(v4) @signature `Lretrofit/http/Query;.encodeValue:()Z` @kind interface;
  #L24d242.  v4:= temp;
  #L24d244.  call `addQueryParam`(v11, v5, v3, v6, v4) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/Object;ZZ)V` @kind direct;
  #L24d24a.  goto L24d674;
  #L24d24e.  v6:= constclass @type ^`retrofit.http.EncodedQuery` @kind object;
  #L24d252.  if v5 != v6 then goto L24d270;
  #L24d256.  if v3 == 0 then goto L24d674;
  #L24d25a.  v4:= (`retrofit.http.EncodedQuery`) v4 @kind object;
  #L24d25e.  call temp:= `value`(v4) @signature `Lretrofit/http/EncodedQuery;.value:()Ljava/lang/String;` @kind interface;
  #L24d264.  v4:= temp @kind object;
  #L24d266.  call `addQueryParam`(v11, v4, v3, v1, v1) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/Object;ZZ)V` @kind direct;
  #L24d26c.  goto L24d674;
  #L24d270.  v6:= constclass @type ^`retrofit.http.QueryMap` @kind object;
  #L24d274.  if v5 != v6 then goto L24d29e;
  #L24d278.  if v3 == 0 then goto L24d674;
  #L24d27c.  v4:= (`retrofit.http.QueryMap`) v4 @kind object;
  #L24d280.  v3:= (`java.util.Map`) v3 @kind object;
  #L24d284.  call temp:= `encodeNames`(v4) @signature `Lretrofit/http/QueryMap;.encodeNames:()Z` @kind interface;
  #L24d28a.  v5:= temp;
  #L24d28c.  call temp:= `encodeValues`(v4) @signature `Lretrofit/http/QueryMap;.encodeValues:()Z` @kind interface;
  #L24d292.  v4:= temp;
  #L24d294.  call `addQueryParamMap`(v11, v2, v3, v5, v4) @signature `Lretrofit/RequestBuilder;.addQueryParamMap:(ILjava/util/Map;ZZ)V` @kind direct;
  #L24d29a.  goto L24d674;
  #L24d29e.  v6:= constclass @type ^`retrofit.http.EncodedQueryMap` @kind object;
  #L24d2a2.  if v5 != v6 then goto L24d2b8;
  #L24d2a6.  if v3 == 0 then goto L24d674;
  #L24d2aa.  v3:= (`java.util.Map`) v3 @kind object;
  #L24d2ae.  call `addQueryParamMap`(v11, v2, v3, v1, v1) @signature `Lretrofit/RequestBuilder;.addQueryParamMap:(ILjava/util/Map;ZZ)V` @kind direct;
  #L24d2b4.  goto L24d674;
  #L24d2b8.  v6:= constclass @type ^`retrofit.http.Header` @kind object;
  #L24d2bc.  if v5 != v6 then goto L24d360;
  #L24d2c0.  if v3 == 0 then goto L24d674;
  #L24d2c4.  v4:= (`retrofit.http.Header`) v4 @kind object;
  #L24d2c8.  call temp:= `value`(v4) @signature `Lretrofit/http/Header;.value:()Ljava/lang/String;` @kind interface;
  #L24d2ce.  v4:= temp @kind object;
  #L24d2d0.  v5:= instanceof @variable v3 @type ^`java.lang.Iterable` @kind boolean;
  #L24d2d4.  if v5 == 0 then goto L24d30c;
  #L24d2d8.  v3:= (`java.lang.Iterable`) v3 @kind object;
  #L24d2dc.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24d2e2.  v3:= temp @kind object;
  #L24d2e4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24d2ea.  v5:= temp;
  #L24d2ec.  if v5 == 0 then goto L24d674;
  #L24d2f0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24d2f6.  v5:= temp @kind object;
  #L24d2f8.  if v5 == 0 then goto L24d2e4;
  #L24d2fc.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d302.  v5:= temp @kind object;
  #L24d304.  call `addHeader`(v11, v4, v5) @signature `Lretrofit/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L24d30a.  goto L24d2e4;
  #L24d30c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L24d312.  v5:= temp @kind object;
  #L24d314.  call temp:= `isArray`(v5) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L24d31a.  v5:= temp;
  #L24d31c.  if v5 == 0 then goto L24d34e;
  #L24d320.  call temp:= `getLength`(v3) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L24d326.  v5:= temp;
  #L24d328.  v6:= 0I;
  #L24d32a.  if v6 >= v5 then goto L24d674;
  #L24d32e.  call temp:= `get`(v3, v6) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L24d334.  v7:= temp @kind object;
  #L24d336.  if v7 == 0 then goto L24d348;
  #L24d33a.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d340.  v7:= temp @kind object;
  #L24d342.  call `addHeader`(v11, v4, v7) @signature `Lretrofit/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L24d348.  v6:= v6 + 1;
  #L24d34c.  goto L24d32a;
  #L24d34e.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d354.  v3:= temp @kind object;
  #L24d356.  call `addHeader`(v11, v4, v3) @signature `Lretrofit/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L24d35c.  goto L24d674;
  #L24d360.  v6:= constclass @type ^`retrofit.http.Field` @kind object;
  #L24d364.  if v5 != v6 then goto L24d424;
  #L24d368.  if v3 == 0 then goto L24d674;
  #L24d36c.  v4:= (`retrofit.http.Field`) v4 @kind object;
  #L24d370.  call temp:= `value`(v4) @signature `Lretrofit/http/Field;.value:()Ljava/lang/String;` @kind interface;
  #L24d376.  v5:= temp @kind object;
  #L24d378.  call temp:= `encodeName`(v4) @signature `Lretrofit/http/Field;.encodeName:()Z` @kind interface;
  #L24d37e.  v6:= temp;
  #L24d380.  call temp:= `encodeValue`(v4) @signature `Lretrofit/http/Field;.encodeValue:()Z` @kind interface;
  #L24d386.  v4:= temp;
  #L24d388.  v7:= instanceof @variable v3 @type ^`java.lang.Iterable` @kind boolean;
  #L24d38c.  if v7 == 0 then goto L24d3c8;
  #L24d390.  v3:= (`java.lang.Iterable`) v3 @kind object;
  #L24d394.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24d39a.  v3:= temp @kind object;
  #L24d39c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24d3a2.  v7:= temp;
  #L24d3a4.  if v7 == 0 then goto L24d674;
  #L24d3a8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24d3ae.  v7:= temp @kind object;
  #L24d3b0.  if v7 == 0 then goto L24d39c;
  #L24d3b4.  v8:= v11.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` @kind object;
  #L24d3b8.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d3be.  v7:= temp @kind object;
  #L24d3c0.  call `addField`(v8, v5, v6, v7, v4) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.addField:(Ljava/lang/String;ZLjava/lang/String;Z)V` @kind virtual;
  #L24d3c6.  goto L24d39c;
  #L24d3c8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L24d3ce.  v7:= temp @kind object;
  #L24d3d0.  call temp:= `isArray`(v7) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L24d3d6.  v7:= temp;
  #L24d3d8.  if v7 == 0 then goto L24d40e;
  #L24d3dc.  call temp:= `getLength`(v3) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L24d3e2.  v7:= temp;
  #L24d3e4.  v8:= 0I;
  #L24d3e6.  if v8 >= v7 then goto L24d674;
  #L24d3ea.  call temp:= `get`(v3, v8) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L24d3f0.  v9:= temp @kind object;
  #L24d3f2.  if v9 == 0 then goto L24d408;
  #L24d3f6.  v10:= v11.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` @kind object;
  #L24d3fa.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d400.  v9:= temp @kind object;
  #L24d402.  call `addField`(v10, v5, v6, v9, v4) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.addField:(Ljava/lang/String;ZLjava/lang/String;Z)V` @kind virtual;
  #L24d408.  v8:= v8 + 1;
  #L24d40c.  goto L24d3e6;
  #L24d40e.  v7:= v11.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` @kind object;
  #L24d412.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d418.  v3:= temp @kind object;
  #L24d41a.  call `addField`(v7, v5, v6, v3, v4) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.addField:(Ljava/lang/String;ZLjava/lang/String;Z)V` @kind virtual;
  #L24d420.  goto L24d674;
  #L24d424.  v6:= constclass @type ^`retrofit.http.FieldMap` @kind object;
  #L24d428.  v7:= "Parameter #" @kind object;
  #L24d42c.  if v5 != v6 then goto L24d4e0;
  #L24d430.  if v3 == 0 then goto L24d674;
  #L24d434.  v4:= (`retrofit.http.FieldMap`) v4 @kind object;
  #L24d438.  call temp:= `encodeNames`(v4) @signature `Lretrofit/http/FieldMap;.encodeNames:()Z` @kind interface;
  #L24d43e.  v5:= temp;
  #L24d440.  call temp:= `encodeValues`(v4) @signature `Lretrofit/http/FieldMap;.encodeValues:()Z` @kind interface;
  #L24d446.  v4:= temp;
  #L24d448.  v3:= (`java.util.Map`) v3 @kind object;
  #L24d44c.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L24d452.  v3:= temp @kind object;
  #L24d454.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24d45a.  v3:= temp @kind object;
  #L24d45c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24d462.  v6:= temp;
  #L24d464.  if v6 == 0 then goto L24d674;
  #L24d468.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24d46e.  v6:= temp @kind object;
  #L24d470.  v6:= (`java.util.Map$Entry`) v6 @kind object;
  #L24d474.  call temp:= `getKey`(v6) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L24d47a.  v8:= temp @kind object;
  #L24d47c.  if v8 == 0 then goto L24d4a8;
  #L24d480.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L24d486.  v6:= temp @kind object;
  #L24d488.  if v6 == 0 then goto L24d45c;
  #L24d48c.  v9:= v11.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` @kind object;
  #L24d490.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d496.  v8:= temp @kind object;
  #L24d498.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d49e.  v6:= temp @kind object;
  #L24d4a0.  call `addField`(v9, v8, v5, v6, v4) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.addField:(Ljava/lang/String;ZLjava/lang/String;Z)V` @kind virtual;
  #L24d4a6.  goto L24d45c;
  #L24d4a8.  v12:= new `java.lang.IllegalArgumentException`;
  #L24d4ac.  v0:= new `java.lang.StringBuilder`;
  #L24d4b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24d4b6.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d4bc.  v2:= v2 + 1;
  #L24d4c0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d4c6.  v1:= " field map contained null key." @kind object;
  #L24d4ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d4d0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d4d6.  v0:= temp @kind object;
  #L24d4d8.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d4de.  throw v12;
  #L24d4e0.  v6:= constclass @type ^`retrofit.http.Part` @kind object;
  #L24d4e4.  if v5 != v6 then goto L24d558;
  #L24d4e8.  if v3 == 0 then goto L24d674;
  #L24d4ec.  v4:= (`retrofit.http.Part`) v4 @kind object;
  #L24d4f0.  call temp:= `value`(v4) @signature `Lretrofit/http/Part;.value:()Ljava/lang/String;` @kind interface;
  #L24d4f6.  v5:= temp @kind object;
  #L24d4f8.  call temp:= `encoding`(v4) @signature `Lretrofit/http/Part;.encoding:()Ljava/lang/String;` @kind interface;
  #L24d4fe.  v4:= temp @kind object;
  #L24d500.  v6:= instanceof @variable v3 @type ^`retrofit.mime.TypedOutput` @kind boolean;
  #L24d504.  if v6 == 0 then goto L24d51a;
  #L24d508.  v6:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L24d50c.  v3:= (`retrofit.mime.TypedOutput`) v3 @kind object;
  #L24d510.  call `addPart`(v6, v5, v4, v3) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L24d516.  goto L24d674;
  #L24d51a.  v6:= instanceof @variable v3 @type ^`java.lang.String` @kind boolean;
  #L24d51e.  if v6 == 0 then goto L24d53e;
  #L24d522.  v6:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L24d526.  v7:= new `retrofit.mime.TypedString`;
  #L24d52a.  v3:= (`java.lang.String`) v3 @kind object;
  #L24d52e.  call `<init>`(v7, v3) @signature `Lretrofit/mime/TypedString;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d534.  call `addPart`(v6, v5, v4, v7) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L24d53a.  goto L24d674;
  #L24d53e.  v6:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L24d542.  v7:= v11.`retrofit.RequestBuilder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L24d546.  call temp:= `toBody`(v7, v3) @signature `Lretrofit/converter/Converter;.toBody:(Ljava/lang/Object;)Lretrofit/mime/TypedOutput;` @kind interface;
  #L24d54c.  v3:= temp @kind object;
  #L24d54e.  call `addPart`(v6, v5, v4, v3) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L24d554.  goto L24d674;
  #L24d558.  v6:= constclass @type ^`retrofit.http.PartMap` @kind object;
  #L24d55c.  if v5 != v6 then goto L24d646;
  #L24d560.  if v3 == 0 then goto L24d674;
  #L24d564.  v4:= (`retrofit.http.PartMap`) v4 @kind object;
  #L24d568.  call temp:= `encoding`(v4) @signature `Lretrofit/http/PartMap;.encoding:()Ljava/lang/String;` @kind interface;
  #L24d56e.  v4:= temp @kind object;
  #L24d570.  v3:= (`java.util.Map`) v3 @kind object;
  #L24d574.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L24d57a.  v3:= temp @kind object;
  #L24d57c.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24d582.  v3:= temp @kind object;
  #L24d584.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24d58a.  v5:= temp;
  #L24d58c.  if v5 == 0 then goto L24d674;
  #L24d590.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24d596.  v5:= temp @kind object;
  #L24d598.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L24d59c.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L24d5a2.  v6:= temp @kind object;
  #L24d5a4.  if v6 == 0 then goto L24d60e;
  #L24d5a8.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d5ae.  v6:= temp @kind object;
  #L24d5b0.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L24d5b6.  v5:= temp @kind object;
  #L24d5b8.  if v5 == 0 then goto L24d584;
  #L24d5bc.  v8:= instanceof @variable v5 @type ^`retrofit.mime.TypedOutput` @kind boolean;
  #L24d5c0.  if v8 == 0 then goto L24d5d4;
  #L24d5c4.  v8:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L24d5c8.  v5:= (`retrofit.mime.TypedOutput`) v5 @kind object;
  #L24d5cc.  call `addPart`(v8, v6, v4, v5) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L24d5d2.  goto L24d584;
  #L24d5d4.  v8:= instanceof @variable v5 @type ^`java.lang.String` @kind boolean;
  #L24d5d8.  if v8 == 0 then goto L24d5f6;
  #L24d5dc.  v8:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L24d5e0.  v9:= new `retrofit.mime.TypedString`;
  #L24d5e4.  v5:= (`java.lang.String`) v5 @kind object;
  #L24d5e8.  call `<init>`(v9, v5) @signature `Lretrofit/mime/TypedString;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d5ee.  call `addPart`(v8, v6, v4, v9) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L24d5f4.  goto L24d584;
  #L24d5f6.  v8:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L24d5fa.  v9:= v11.`retrofit.RequestBuilder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L24d5fe.  call temp:= `toBody`(v9, v5) @signature `Lretrofit/converter/Converter;.toBody:(Ljava/lang/Object;)Lretrofit/mime/TypedOutput;` @kind interface;
  #L24d604.  v5:= temp @kind object;
  #L24d606.  call `addPart`(v8, v6, v4, v5) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L24d60c.  goto L24d584;
  #L24d60e.  v12:= new `java.lang.IllegalArgumentException`;
  #L24d612.  v0:= new `java.lang.StringBuilder`;
  #L24d616.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24d61c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d622.  v2:= v2 + 1;
  #L24d626.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d62c.  v1:= " part map contained null key." @kind object;
  #L24d630.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d636.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d63c.  v0:= temp @kind object;
  #L24d63e.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d644.  throw v12;
  #L24d646.  v4:= constclass @type ^`retrofit.http.Body` @kind object;
  #L24d64a.  if v5 != v4 then goto L24d68c;
  #L24d64e.  if v3 == 0 then goto L24d67c;
  #L24d652.  v4:= instanceof @variable v3 @type ^`retrofit.mime.TypedOutput` @kind boolean;
  #L24d656.  if v4 == 0 then goto L24d664;
  #L24d65a.  v3:= (`retrofit.mime.TypedOutput`) v3 @kind object;
  #L24d65e.  v11.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` := v3 @kind object;
  #L24d662.  goto L24d674;
  #L24d664.  v4:= v11.`retrofit.RequestBuilder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L24d668.  call temp:= `toBody`(v4, v3) @signature `Lretrofit/converter/Converter;.toBody:(Ljava/lang/Object;)Lretrofit/mime/TypedOutput;` @kind interface;
  #L24d66e.  v3:= temp @kind object;
  #L24d670.  v11.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` := v3 @kind object;
  #L24d674.  v2:= v2 + 1;
  #L24d678.  goto L24d140;
  #L24d67c.  v12:= new `java.lang.IllegalArgumentException`;
  #L24d680.  v0:= "Body parameter value must not be null." @kind object;
  #L24d684.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d68a.  throw v12;
  #L24d68c.  v12:= new `java.lang.IllegalArgumentException`;
  #L24d690.  v0:= new `java.lang.StringBuilder`;
  #L24d694.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24d69a.  v1:= "Unknown annotation: " @kind object;
  #L24d69e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d6a4.  call temp:= `getCanonicalName`(v5) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L24d6aa.  v1:= temp @kind object;
  #L24d6ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d6b2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d6b8.  v0:= temp @kind object;
  #L24d6ba.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24d6c0.  throw v12;
  #L24d6c2.  return @kind void;
}
