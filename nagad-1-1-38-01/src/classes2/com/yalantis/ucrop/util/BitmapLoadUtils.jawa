record `com.yalantis.ucrop.util.BitmapLoadUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@com.yalantis.ucrop.util.BitmapLoadUtils.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.yalantis.ucrop.util.BitmapLoadUtils` v0 @kind this) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1bccc4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bccca.  return @kind void;
}
procedure `int` `calculateInSampleSize`(`android.graphics.BitmapFactory$Options` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.calculateInSampleSize:(Landroid/graphics/BitmapFactory$Options;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1bcaa8.  v0:= v3.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L1bcaac.  v3:= v3.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L1bcab0.  v1:= 1I;
  #L1bcab2.  if v0 > v5 then goto L1bcaba;
  #L1bcab6.  if v3 <= v4 then goto L1bcacc;
  #L1bcaba.  v2:= v0 / v1 @kind int;
  #L1bcabe.  if v2 > v5 then goto L1bcace;
  #L1bcac2.  v2:= v3 / v1 @kind int;
  #L1bcac6.  if v2 <= v4 then goto L1bcacc;
  #L1bcaca.  goto L1bcace;
  #L1bcacc.  return v1;
  #L1bcace.  v1:= v1 * 2;
  #L1bcad2.  goto L1bcaba;
}
procedure `int` `calculateMaxBitmapSize`(`android.content.Context` v7 @kind object) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.calculateMaxBitmapSize:(Landroid/content/Context;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1bcae4.  v0:= "window" @kind object;
  #L1bcae8.  call temp:= `getSystemService`(v7, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1bcaee.  v7:= temp @kind object;
  #L1bcaf0.  v7:= (`android.view.WindowManager`) v7 @kind object;
  #L1bcaf4.  v0:= new `android.graphics.Point`;
  #L1bcaf8.  call `<init>`(v0) @signature `Landroid/graphics/Point;.<init>:()V` @kind direct;
  #L1bcafe.  if v7 == 0 then goto L1bcb10;
  #L1bcb02.  call temp:= `getDefaultDisplay`(v7) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L1bcb08.  v7:= temp @kind object;
  #L1bcb0a.  call `getSize`(v7, v0) @signature `Landroid/view/Display;.getSize:(Landroid/graphics/Point;)V` @kind virtual;
  #L1bcb10.  v7:= v0.`android.graphics.Point.x` @type ^`int`;
  #L1bcb14.  v0:= v0.`android.graphics.Point.y` @type ^`int`;
  #L1bcb18.  v1:= (`double`) v7 @kind i2d;
  #L1bcb1a.  v3:= 2.0D;
  #L1bcb1e.  call temp:= `pow`(v1, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L1bcb24.  v1:= temp @kind wide;
  #L1bcb26.  v5:= (`double`) v0 @kind i2d;
  #L1bcb28.  call temp:= `pow`(v5, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L1bcb2e.  v3:= temp @kind wide;
  #L1bcb30.  v1:= v1 + v3 @kind double;
  #L1bcb32.  call temp:= `sqrt`(v1) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L1bcb38.  v0:= temp @kind wide;
  #L1bcb3a.  v7:= (`int`) v0 @kind d2i;
  #L1bcb3c.  v0:= new `android.graphics.Canvas`;
  #L1bcb40.  call `<init>`(v0) @signature `Landroid/graphics/Canvas;.<init>:()V` @kind direct;
  #L1bcb46.  call temp:= `getMaximumBitmapWidth`(v0) @signature `Landroid/graphics/Canvas;.getMaximumBitmapWidth:()I` @kind virtual;
  #L1bcb4c.  v1:= temp;
  #L1bcb4e.  call temp:= `getMaximumBitmapHeight`(v0) @signature `Landroid/graphics/Canvas;.getMaximumBitmapHeight:()I` @kind virtual;
  #L1bcb54.  v0:= temp;
  #L1bcb56.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1bcb5c.  v0:= temp;
  #L1bcb5e.  if v0 <= 0 then goto L1bcb6a;
  #L1bcb62.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1bcb68.  v7:= temp;
  #L1bcb6a.  call temp:= `getMaxTextureSize`() @signature `Lcom/yalantis/ucrop/util/EglUtils;.getMaxTextureSize:()I` @kind static;
  #L1bcb70.  v0:= temp;
  #L1bcb72.  if v0 <= 0 then goto L1bcb7e;
  #L1bcb76.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1bcb7c.  v7:= temp;
  #L1bcb7e.  v0:= new `java.lang.StringBuilder`;
  #L1bcb82.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bcb88.  v1:= "maxBitmapSize: " @kind object;
  #L1bcb8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bcb92.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bcb98.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bcb9e.  v0:= temp @kind object;
  #L1bcba0.  v1:= "BitmapLoadUtils" @kind object;
  #L1bcba4.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bcbaa.  return v7;
}
procedure `void` `close`(`java.io.Closeable` v1 @kind object) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1bccdc.  if v1 == 0 then goto L1bccee;
  #L1bcce0.  v0:= instanceof @variable v1 @type ^`java.io.Closeable` @kind boolean;
  #L1bcce4.  if v0 == 0 then goto L1bccee;
  #L1bcce8.  call `close`(v1) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L1bccee.  return @kind void;
  catch `java.io.IOException` @[L1bcce8..L1bccee] goto L1bccee;
}
procedure `void` `decodeBitmapInBackground`(`android.content.Context` v8 @kind object, `android.net.Uri` v9 @kind object, `android.net.Uri` v10 @kind object, `int` v11 , `int` v12 , `com.yalantis.ucrop.callback.BitmapLoadCallback` v13 @kind object) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.decodeBitmapInBackground:(Landroid/content/Context;Landroid/net/Uri;Landroid/net/Uri;IILcom/yalantis/ucrop/callback/BitmapLoadCallback;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1bcd10.  v7:= new `com.yalantis.ucrop.task.BitmapLoadTask`;
  #L1bcd14.  v0:= v7 @kind object;
  #L1bcd16.  v1:= v8 @kind object;
  #L1bcd18.  v2:= v9 @kind object;
  #L1bcd1a.  v3:= v10 @kind object;
  #L1bcd1c.  v4:= v11;
  #L1bcd1e.  v5:= v12;
  #L1bcd20.  v6:= v13 @kind object;
  #L1bcd22.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.<init>:(Landroid/content/Context;Landroid/net/Uri;Landroid/net/Uri;IILcom/yalantis/ucrop/callback/BitmapLoadCallback;)V` @kind direct;
  #L1bcd28.  v8:= 0I;
  #L1bcd2a.  v8:= new `java.lang.Void`[v8];
  #L1bcd2e.  call temp:= `execute`(v7, v8) @signature `Landroid/os/AsyncTask;.execute:([Ljava/lang/Object;)Landroid/os/AsyncTask;` @kind virtual;
  #L1bcd34.  return @kind void;
}
procedure `int` `exifToDegrees`(`int` v0 ) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.exifToDegrees:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1bcbbc.  goto L1bcbd8;
  #L1bcbc2.  v0:= 0I;
  #L1bcbc4.  goto L1bcbd6;
  #L1bcbc6.  v0:= 270I;
  #L1bcbca.  goto L1bcbd6;
  #L1bcbcc.  v0:= 90I;
  #L1bcbd0.  goto L1bcbd6;
  #L1bcbd2.  v0:= 180I;
  #L1bcbd6.  return v0;
  #L1bcbd8.  switch v0
                  | 3 => goto L1bcbd2
                  | 4 => goto L1bcbd2
                  | 5 => goto L1bcbcc
                  | 6 => goto L1bcbcc
                  | 7 => goto L1bcbc6
                  | 8 => goto L1bcbc6
                  | else => goto L1bcbc2;
}
procedure `int` `exifToTranslation`(`int` v1 ) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.exifToTranslation:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1bcc08.  v0:= 2I;
  #L1bcc0a.  if v1 == v0 then goto L1bcc24;
  #L1bcc0e.  v0:= 7I;
  #L1bcc10.  if v1 == v0 then goto L1bcc24;
  #L1bcc14.  v0:= 4I;
  #L1bcc16.  if v1 == v0 then goto L1bcc24;
  #L1bcc1a.  v0:= 5I;
  #L1bcc1c.  if v1 == v0 then goto L1bcc24;
  #L1bcc20.  v1:= 1I;
  #L1bcc22.  goto L1bcc26;
  #L1bcc24.  v1:= -1I;
  #L1bcc26.  return v1;
}
procedure `int` `getExifOrientation`(`android.content.Context` v3 @kind object, `android.net.Uri` v4 @kind object) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.getExifOrientation:(Landroid/content/Context;Landroid/net/Uri;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1bcc38.  v0:= 0I;
  #L1bcc3a.  call temp:= `getContentResolver`(v3) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L1bcc40.  v3:= temp @kind object;
  #L1bcc42.  call temp:= `openInputStream`(v3, v4) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L1bcc48.  v3:= temp @kind object;
  #L1bcc4a.  if v3 != 0 then goto L1bcc50;
  #L1bcc4e.  return v0;
  #L1bcc50.  v1:= new `com.yalantis.ucrop.util.ImageHeaderParser`;
  #L1bcc54.  call `<init>`(v1, v3) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1bcc5a.  call temp:= `getOrientation`(v1) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.getOrientation:()I` @kind virtual;
  #L1bcc60.  v0:= temp;
  #L1bcc62.  call `close`(v3) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L1bcc68.  goto L1bcca0;
  #L1bcc6a.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L1bcc6c.  v1:= new `java.lang.StringBuilder`;
  #L1bcc70.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bcc76.  v2:= "getExifOrientation: " @kind object;
  #L1bcc7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bcc80.  call temp:= `toString`(v4) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bcc86.  v4:= temp @kind object;
  #L1bcc88.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bcc8e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bcc94.  v4:= temp @kind object;
  #L1bcc96.  v1:= "BitmapLoadUtils" @kind object;
  #L1bcc9a.  call temp:= `e`(v1, v4, v3) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1bcca0.  return v0;
  catch `java.io.IOException` @[L1bcc3a..L1bcc68] goto L1bcc6a;
}
procedure `android.graphics.Bitmap` `transformBitmap`(`android.graphics.Bitmap` v7 @kind object, `android.graphics.Matrix` v8 @kind object) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.transformBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1bca44.  v1:= 0I;
  #L1bca46.  v2:= 0I;
  #L1bca48.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L1bca4e.  v3:= temp;
  #L1bca50.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L1bca56.  v4:= temp;
  #L1bca58.  v6:= 1I;
  #L1bca5a.  v0:= v7 @kind object;
  #L1bca5c.  v5:= v8 @kind object;
  #L1bca5e.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L1bca64.  v8:= temp @kind object;
  #L1bca66.  call temp:= `sameAs`(v7, v8) @signature `Landroid/graphics/Bitmap;.sameAs:(Landroid/graphics/Bitmap;)Z` @kind virtual;
  #L1bca6c.  v0:= temp;
  #L1bca6e.  if v0 != 0 then goto L1bca86;
  #L1bca72.  v7:= v8 @kind object;
  #L1bca74.  goto L1bca86;
  #L1bca76.  v8:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L1bca78.  v0:= "BitmapLoadUtils" @kind object;
  #L1bca7c.  v1:= "transformBitmap: " @kind object;
  #L1bca80.  call temp:= `e`(v0, v1, v8) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1bca86.  return v7 @kind object;
  catch `java.lang.OutOfMemoryError` @[L1bca48..L1bca6e] goto L1bca76;
}
