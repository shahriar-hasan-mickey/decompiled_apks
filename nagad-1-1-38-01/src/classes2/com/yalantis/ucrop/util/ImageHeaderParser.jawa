record `com.yalantis.ucrop.util.ImageHeaderParser` @kind class @AccessFlag PUBLIC {
  `com.yalantis.ucrop.util.ImageHeaderParser$Reader` `com.yalantis.ucrop.util.ImageHeaderParser.reader` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@com.yalantis.ucrop.util.ImageHeaderParser.BYTES_PER_FORMAT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.yalantis.ucrop.util.ImageHeaderParser.EXIF_MAGIC_NUMBER` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.yalantis.ucrop.util.ImageHeaderParser.EXIF_SEGMENT_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.yalantis.ucrop.util.ImageHeaderParser.INTEL_TIFF_MAGIC_NUMBER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.yalantis.ucrop.util.ImageHeaderParser.JPEG_EXIF_SEGMENT_PREAMBLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@com.yalantis.ucrop.util.ImageHeaderParser.JPEG_EXIF_SEGMENT_PREAMBLE_BYTES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.yalantis.ucrop.util.ImageHeaderParser.MARKER_EOI` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.yalantis.ucrop.util.ImageHeaderParser.MOTOROLA_TIFF_MAGIC_NUMBER` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.yalantis.ucrop.util.ImageHeaderParser.ORIENTATION_TAG_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.yalantis.ucrop.util.ImageHeaderParser.SEGMENT_SOS` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.yalantis.ucrop.util.ImageHeaderParser.SEGMENT_START_ID` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.yalantis.ucrop.util.ImageHeaderParser.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.yalantis.ucrop.util.ImageHeaderParser.UNKNOWN_ORIENTATION` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1bde34.  v0:= "UTF-8" @kind object;
  #L1bde38.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L1bde3e.  v0:= temp @kind object;
  #L1bde40.  v1:= "Exif\u0000\u0000" @kind object;
  #L1bde44.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1bde4a.  v0:= temp @kind object;
  #L1bde4c.  `@@com.yalantis.ucrop.util.ImageHeaderParser.JPEG_EXIF_SEGMENT_PREAMBLE_BYTES` @type ^`byte`[] := v0 @kind object;
  #L1bde50.  v0:= 13I;
  #L1bde54.  v0:= new `int`[v0];
  #L1bde58.  goto L1bde64;
  #L1bde5e.  `@@com.yalantis.ucrop.util.ImageHeaderParser.BYTES_PER_FORMAT` @type ^`int`[] := v0 @kind object;
  #L1bde62.  return @kind void;
  #L1bde64.  v0:= (0I, 1I, 1I, 2I, 4I, 8I, 1I, 1I, 2I, 4I, 8I, 4I, 8I) @kind object;
  #L1bde9f.  goto L1bde5e;
}
procedure `void` `<init>`(`com.yalantis.ucrop.util.ImageHeaderParser` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1bdeb0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bdeb6.  v0:= new `com.yalantis.ucrop.util.ImageHeaderParser$StreamReader`;
  #L1bdeba.  call `<init>`(v0, v2) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$StreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1bdec0.  v1.`com.yalantis.ucrop.util.ImageHeaderParser.reader` @type ^`com.yalantis.ucrop.util.ImageHeaderParser$Reader` := v0 @kind object;
  #L1bdec4.  return @kind void;
}
procedure `int` `calcTagOffset`(`int` v0 , `int` v1 ) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.calcTagOffset:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1bd924.  v0:= v0 + 2;
  #L1bd928.  v1:= v1 * 12;
  #L1bd92c.  v0:= v0 + v1 @kind int;
  #L1bd92e.  return v0;
}
procedure `void` `copyExif`(`c.k.a.a` v23 @kind object, `int` v24 , `int` v25 , `java.lang.String` v26 @kind object) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.copyExif:(Lc/k/a/a;IILjava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L1bded8.  v1:= "FNumber" @kind object;
  #L1bdedc.  v2:= "DateTime" @kind object;
  #L1bdee0.  v3:= "DateTimeDigitized" @kind object;
  #L1bdee4.  v4:= "ExposureTime" @kind object;
  #L1bdee8.  v5:= "Flash" @kind object;
  #L1bdeec.  v6:= "FocalLength" @kind object;
  #L1bdef0.  v7:= "GPSAltitude" @kind object;
  #L1bdef4.  v8:= "GPSAltitudeRef" @kind object;
  #L1bdef8.  v9:= "GPSDateStamp" @kind object;
  #L1bdefc.  v10:= "GPSLatitude" @kind object;
  #L1bdf00.  v11:= "GPSLatitudeRef" @kind object;
  #L1bdf04.  v12:= "GPSLongitude" @kind object;
  #L1bdf08.  v13:= "GPSLongitudeRef" @kind object;
  #L1bdf0c.  v14:= "GPSProcessingMethod" @kind object;
  #L1bdf10.  v15:= "GPSTimeStamp" @kind object;
  #L1bdf14.  v16:= "PhotographicSensitivity" @kind object;
  #L1bdf18.  v17:= "Make" @kind object;
  #L1bdf1c.  v18:= "Model" @kind object;
  #L1bdf20.  v19:= "SubSecTime" @kind object;
  #L1bdf24.  v20:= "SubSecTimeDigitized" @kind object;
  #L1bdf28.  v21:= "SubSecTimeOriginal" @kind object;
  #L1bdf2c.  v22:= "WhiteBalance" @kind object;
  #L1bdf30.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22];
  #L1bdf36.  v0:= temp @kind object;
  #L1bdf38.  v1:= new `c.k.a.a`;
  #L1bdf3c.  v2:= v26 @kind object;
  #L1bdf40.  call `<init>`(v1, v2) @signature `Lc/k/a/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bdf46.  v2:= length @variable v0;
  #L1bdf48.  v3:= 0I;
  #L1bdf4a.  if v3 >= v2 then goto L1bdf76;
  #L1bdf4e.  v4:= v0[v3] @kind object;
  #L1bdf52.  v5:= v23 @kind object;
  #L1bdf56.  call temp:= `getAttribute`(v5, v4) @signature `Lc/k/a/a;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1bdf5c.  v6:= temp @kind object;
  #L1bdf5e.  call temp:= `isEmpty`(v6) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1bdf64.  v7:= temp;
  #L1bdf66.  if v7 != 0 then goto L1bdf70;
  #L1bdf6a.  call `setAttribute`(v1, v4, v6) @signature `Lc/k/a/a;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1bdf70.  v3:= v3 + 1;
  #L1bdf74.  goto L1bdf4a;
  #L1bdf76.  v0:= "ImageWidth" @kind object;
  #L1bdf7a.  call temp:= `valueOf`(v24) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L1bdf80.  v2:= temp @kind object;
  #L1bdf82.  call `setAttribute`(v1, v0, v2) @signature `Lc/k/a/a;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1bdf88.  v0:= "ImageLength" @kind object;
  #L1bdf8c.  call temp:= `valueOf`(v25) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L1bdf92.  v2:= temp @kind object;
  #L1bdf94.  call `setAttribute`(v1, v0, v2) @signature `Lc/k/a/a;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1bdf9a.  v0:= "Orientation" @kind object;
  #L1bdf9e.  v2:= "0" @kind object;
  #L1bdfa2.  call `setAttribute`(v1, v0, v2) @signature `Lc/k/a/a;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1bdfa8.  call `saveAttributes`(v1) @signature `Lc/k/a/a;.saveAttributes:()V` @kind virtual;
  #L1bdfae.  goto L1bdfc4;
  #L1bdfb0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1bdfb2.  call temp:= `getMessage`(v0) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1bdfb8.  v0:= temp @kind object;
  #L1bdfba.  v1:= "ImageHeaderParser" @kind object;
  #L1bdfbe.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdfc4.  return @kind void;
  catch `java.io.IOException` @[L1bdf38..L1bdfae] goto L1bdfb0;
}
procedure `boolean` `handles`(`int` v2 ) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.handles:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1bd89c.  v0:= 65496I;
  #L1bd8a2.  v1:= v2 ^& v0 @kind int;
  #L1bd8a6.  if v1 == v0 then goto L1bd8c0;
  #L1bd8aa.  v0:= 19789I;
  #L1bd8ae.  if v2 == v0 then goto L1bd8c0;
  #L1bd8b2.  v0:= 18761I;
  #L1bd8b6.  if v2 != v0 then goto L1bd8bc;
  #L1bd8ba.  goto L1bd8c0;
  #L1bd8bc.  v2:= 0I;
  #L1bd8be.  goto L1bd8c2;
  #L1bd8c0.  v2:= 1I;
  #L1bd8c2.  return v2;
}
procedure `boolean` `hasJpegExifPreamble`(`com.yalantis.ucrop.util.ImageHeaderParser` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.hasJpegExifPreamble:([BI)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bd8d4.  v0:= 0I;
  #L1bd8d6.  if v5 == 0 then goto L1bd8e8;
  #L1bd8da.  v1:= `@@com.yalantis.ucrop.util.ImageHeaderParser.JPEG_EXIF_SEGMENT_PREAMBLE_BYTES` @type ^`byte`[] @kind object;
  #L1bd8de.  v1:= length @variable v1;
  #L1bd8e0.  if v6 <= v1 then goto L1bd8e8;
  #L1bd8e4.  v6:= 1I;
  #L1bd8e6.  goto L1bd8ea;
  #L1bd8e8.  v6:= 0I;
  #L1bd8ea.  if v6 == 0 then goto L1bd910;
  #L1bd8ee.  v1:= 0I;
  #L1bd8f0.  v2:= `@@com.yalantis.ucrop.util.ImageHeaderParser.JPEG_EXIF_SEGMENT_PREAMBLE_BYTES` @type ^`byte`[] @kind object;
  #L1bd8f4.  v3:= length @variable v2;
  #L1bd8f6.  if v1 >= v3 then goto L1bd910;
  #L1bd8fa.  v3:= v5[v1] @kind byte;
  #L1bd8fe.  v2:= v2[v1] @kind byte;
  #L1bd902.  if v3 == v2 then goto L1bd90a;
  #L1bd906.  v6:= 0I;
  #L1bd908.  goto L1bd910;
  #L1bd90a.  v1:= v1 + 1;
  #L1bd90e.  goto L1bd8f0;
  #L1bd910.  return v6;
}
procedure `int` `moveToExifSegmentAndGetLength`(`com.yalantis.ucrop.util.ImageHeaderParser` v10 @kind this) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.moveToExifSegmentAndGetLength:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1bd9d8.  v0:= v10.`com.yalantis.ucrop.util.ImageHeaderParser.reader` @type ^`com.yalantis.ucrop.util.ImageHeaderParser$Reader` @kind object;
  #L1bd9dc.  call temp:= `getUInt8`(v0) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L1bd9e2.  v0:= temp;
  #L1bd9e4.  v1:= 255I;
  #L1bd9e8.  v2:= 3I;
  #L1bd9ea.  v3:= -1I;
  #L1bd9ec.  v4:= "ImageHeaderParser" @kind object;
  #L1bd9f0.  if v0 == v1 then goto L1bda2a;
  #L1bd9f4.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bd9fa.  v1:= temp;
  #L1bd9fc.  if v1 == 0 then goto L1bda28;
  #L1bda00.  v1:= new `java.lang.StringBuilder`;
  #L1bda04.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bda0a.  v2:= "Unknown segmentId=" @kind object;
  #L1bda0e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bda14.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bda1a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bda20.  v0:= temp @kind object;
  #L1bda22.  call temp:= `d`(v4, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bda28.  return v3;
  #L1bda2a.  v0:= v10.`com.yalantis.ucrop.util.ImageHeaderParser.reader` @type ^`com.yalantis.ucrop.util.ImageHeaderParser$Reader` @kind object;
  #L1bda2e.  call temp:= `getUInt8`(v0) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L1bda34.  v0:= temp;
  #L1bda36.  v1:= 218I;
  #L1bda3a.  if v0 != v1 then goto L1bda40;
  #L1bda3e.  return v3;
  #L1bda40.  v1:= 217I;
  #L1bda44.  if v0 != v1 then goto L1bda60;
  #L1bda48.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bda4e.  v0:= temp;
  #L1bda50.  if v0 == 0 then goto L1bda5e;
  #L1bda54.  v0:= "Found MARKER_EOI in exif segment" @kind object;
  #L1bda58.  call temp:= `d`(v4, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bda5e.  return v3;
  #L1bda60.  v1:= v10.`com.yalantis.ucrop.util.ImageHeaderParser.reader` @type ^`com.yalantis.ucrop.util.ImageHeaderParser$Reader` @kind object;
  #L1bda64.  call temp:= `getUInt16`(v1) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L1bda6a.  v1:= temp;
  #L1bda6c.  v1:= v1 + -2;
  #L1bda70.  v5:= 225I;
  #L1bda74.  if v0 == v5 then goto L1bdae4;
  #L1bda78.  v5:= v10.`com.yalantis.ucrop.util.ImageHeaderParser.reader` @type ^`com.yalantis.ucrop.util.ImageHeaderParser$Reader` @kind object;
  #L1bda7c.  v6:= (`long`) v1 @kind i2l;
  #L1bda7e.  call temp:= `skip`(v5, v6) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L1bda84.  v8:= temp @kind wide;
  #L1bda86.  v5:= lcmp(v8, v6);
  #L1bda8a.  if v5 == 0 then goto L1bd9d8;
  #L1bda8e.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bda94.  v2:= temp;
  #L1bda96.  if v2 == 0 then goto L1bdae2;
  #L1bda9a.  v2:= new `java.lang.StringBuilder`;
  #L1bda9e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bdaa4.  v5:= "Unable to skip enough data, type: " @kind object;
  #L1bdaa8.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdaae.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdab4.  v0:= ", wanted to skip: " @kind object;
  #L1bdab8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdabe.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdac4.  v0:= ", but actually skipped: " @kind object;
  #L1bdac8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdace.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdad4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bdada.  v0:= temp @kind object;
  #L1bdadc.  call temp:= `d`(v4, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdae2.  return v3;
  #L1bdae4.  return v1;
}
procedure `int` `parseExifSegment`(`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader` v12 @kind object) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.parseExifSegment:(Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1bdba0.  v0:= 6I;
  #L1bdba2.  call temp:= `getInt16`(v12, v0) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.getInt16:(I)S` @kind virtual;
  #L1bdba8.  v1:= temp;
  #L1bdbaa.  v2:= 3I;
  #L1bdbac.  v3:= "ImageHeaderParser" @kind object;
  #L1bdbb0.  v4:= 19789I;
  #L1bdbb4.  if v1 != v4 then goto L1bdbbe;
  #L1bdbb8.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L1bdbbc.  goto L1bdc04;
  #L1bdbbe.  v4:= 18761I;
  #L1bdbc2.  if v1 != v4 then goto L1bdbcc;
  #L1bdbc6.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L1bdbca.  goto L1bdc04;
  #L1bdbcc.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bdbd2.  v4:= temp;
  #L1bdbd4.  if v4 == 0 then goto L1bdc00;
  #L1bdbd8.  v4:= new `java.lang.StringBuilder`;
  #L1bdbdc.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bdbe2.  v5:= "Unknown endianness = " @kind object;
  #L1bdbe6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdbec.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdbf2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bdbf8.  v1:= temp @kind object;
  #L1bdbfa.  call temp:= `d`(v3, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdc00.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L1bdc04.  call `order`(v12, v1) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.order:(Ljava/nio/ByteOrder;)V` @kind virtual;
  #L1bdc0a.  v1:= 10I;
  #L1bdc0e.  call temp:= `getInt32`(v12, v1) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.getInt32:(I)I` @kind virtual;
  #L1bdc14.  v1:= temp;
  #L1bdc16.  v1:= v1 + v0 @kind int;
  #L1bdc18.  call temp:= `getInt16`(v12, v1) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.getInt16:(I)S` @kind virtual;
  #L1bdc1e.  v0:= temp;
  #L1bdc20.  v4:= 0I;
  #L1bdc22.  if v4 >= v0 then goto L1bde1e;
  #L1bdc26.  call temp:= `calcTagOffset`(v1, v4) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.calcTagOffset:(II)I` @kind static;
  #L1bdc2c.  v5:= temp;
  #L1bdc2e.  call temp:= `getInt16`(v12, v5) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.getInt16:(I)S` @kind virtual;
  #L1bdc34.  v6:= temp;
  #L1bdc36.  v7:= 274I;
  #L1bdc3a.  if v6 == v7 then goto L1bdc42;
  #L1bdc3e.  goto L1bde16;
  #L1bdc42.  v7:= v5 + 2;
  #L1bdc46.  call temp:= `getInt16`(v12, v7) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.getInt16:(I)S` @kind virtual;
  #L1bdc4c.  v7:= temp;
  #L1bdc4e.  v8:= 1I;
  #L1bdc50.  if v7 < v8 then goto L1bdde2;
  #L1bdc54.  v8:= 12I;
  #L1bdc58.  if v7 <= v8 then goto L1bdc60;
  #L1bdc5c.  goto L1bdde2;
  #L1bdc60.  v8:= v5 + 4;
  #L1bdc64.  call temp:= `getInt32`(v12, v8) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.getInt32:(I)I` @kind virtual;
  #L1bdc6a.  v8:= temp;
  #L1bdc6c.  if v8 >= 0 then goto L1bdc8a;
  #L1bdc70.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bdc76.  v5:= temp;
  #L1bdc78.  if v5 == 0 then goto L1bde16;
  #L1bdc7c.  v5:= "Negative tiff component count" @kind object;
  #L1bdc80.  call temp:= `d`(v3, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdc86.  goto L1bde16;
  #L1bdc8a.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bdc90.  v9:= temp;
  #L1bdc92.  v10:= " tagType=" @kind object;
  #L1bdc96.  if v9 == 0 then goto L1bdcee;
  #L1bdc9a.  v9:= new `java.lang.StringBuilder`;
  #L1bdc9e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bdca4.  v11:= "Got tagIndex=" @kind object;
  #L1bdca8.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdcae.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdcb4.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdcba.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdcc0.  v11:= " formatCode=" @kind object;
  #L1bdcc4.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdcca.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdcd0.  v11:= " componentCount=" @kind object;
  #L1bdcd4.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdcda.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdce0.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bdce6.  v9:= temp @kind object;
  #L1bdce8.  call temp:= `d`(v3, v9) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdcee.  v9:= `@@com.yalantis.ucrop.util.ImageHeaderParser.BYTES_PER_FORMAT` @type ^`int`[] @kind object;
  #L1bdcf2.  v9:= v9[v7];
  #L1bdcf6.  v8:= v8 + v9 @kind int;
  #L1bdcf8.  v9:= 4I;
  #L1bdcfa.  if v8 <= v9 then goto L1bdd36;
  #L1bdcfe.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bdd04.  v5:= temp;
  #L1bdd06.  if v5 == 0 then goto L1bde16;
  #L1bdd0a.  v5:= new `java.lang.StringBuilder`;
  #L1bdd0e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bdd14.  v6:= "Got byte count > 4, not orientation, continuing, formatCode=" @kind object;
  #L1bdd18.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdd1e.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdd24.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bdd2a.  v5:= temp @kind object;
  #L1bdd2c.  call temp:= `d`(v3, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdd32.  goto L1bde16;
  #L1bdd36.  v5:= v5 + 8;
  #L1bdd3a.  if v5 < 0 then goto L1bdda0;
  #L1bdd3e.  call temp:= `length`(v12) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.length:()I` @kind virtual;
  #L1bdd44.  v7:= temp;
  #L1bdd46.  if v5 <= v7 then goto L1bdd4c;
  #L1bdd4a.  goto L1bdda0;
  #L1bdd4c.  if v8 < 0 then goto L1bdd6a;
  #L1bdd50.  v8:= v8 + v5 @kind int;
  #L1bdd52.  call temp:= `length`(v12) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.length:()I` @kind virtual;
  #L1bdd58.  v7:= temp;
  #L1bdd5a.  if v8 <= v7 then goto L1bdd60;
  #L1bdd5e.  goto L1bdd6a;
  #L1bdd60.  call temp:= `getInt16`(v12, v5) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.getInt16:(I)S` @kind virtual;
  #L1bdd66.  v12:= temp;
  #L1bdd68.  return v12;
  #L1bdd6a.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bdd70.  v5:= temp;
  #L1bdd72.  if v5 == 0 then goto L1bde16;
  #L1bdd76.  v5:= new `java.lang.StringBuilder`;
  #L1bdd7a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bdd80.  v7:= "Illegal number of bytes for TI tag data tagType=" @kind object;
  #L1bdd84.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdd8a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdd90.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bdd96.  v5:= temp @kind object;
  #L1bdd98.  call temp:= `d`(v3, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdd9e.  goto L1bde16;
  #L1bdda0.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bdda6.  v7:= temp;
  #L1bdda8.  if v7 == 0 then goto L1bde16;
  #L1bddac.  v7:= new `java.lang.StringBuilder`;
  #L1bddb0.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bddb6.  v8:= "Illegal tagValueOffset=" @kind object;
  #L1bddba.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bddc0.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bddc6.  call temp:= `append`(v7, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bddcc.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bddd2.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bddd8.  v5:= temp @kind object;
  #L1bddda.  call temp:= `d`(v3, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdde0.  goto L1bde16;
  #L1bdde2.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bdde8.  v5:= temp;
  #L1bddea.  if v5 == 0 then goto L1bde16;
  #L1bddee.  v5:= new `java.lang.StringBuilder`;
  #L1bddf2.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bddf8.  v6:= "Got invalid format code = " @kind object;
  #L1bddfc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bde02.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bde08.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bde0e.  v5:= temp @kind object;
  #L1bde10.  call temp:= `d`(v3, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bde16.  v4:= v4 + 1;
  #L1bde1a.  goto L1bdc22;
  #L1bde1e.  v12:= -1I;
  #L1bde20.  return v12;
}
procedure `int` `parseExifSegment`(`com.yalantis.ucrop.util.ImageHeaderParser` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.parseExifSegment:([BI)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bdaf8.  v0:= v4.`com.yalantis.ucrop.util.ImageHeaderParser.reader` @type ^`com.yalantis.ucrop.util.ImageHeaderParser$Reader` @kind object;
  #L1bdafc.  call temp:= `read`(v0, v5, v6) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$Reader;.read:([BI)I` @kind interface;
  #L1bdb02.  v0:= temp;
  #L1bdb04.  v1:= -1I;
  #L1bdb06.  v2:= 3I;
  #L1bdb08.  v3:= "ImageHeaderParser" @kind object;
  #L1bdb0c.  if v0 == v6 then goto L1bdb56;
  #L1bdb10.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bdb16.  v5:= temp;
  #L1bdb18.  if v5 == 0 then goto L1bdb54;
  #L1bdb1c.  v5:= new `java.lang.StringBuilder`;
  #L1bdb20.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bdb26.  v2:= "Unable to read exif segment data, length: " @kind object;
  #L1bdb2a.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdb30.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdb36.  v6:= ", actually read: " @kind object;
  #L1bdb3a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdb40.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdb46.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bdb4c.  v5:= temp @kind object;
  #L1bdb4e.  call temp:= `d`(v3, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdb54.  return v1;
  #L1bdb56.  call temp:= `hasJpegExifPreamble`(v4, v5, v6) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.hasJpegExifPreamble:([BI)Z` @kind direct;
  #L1bdb5c.  v0:= temp;
  #L1bdb5e.  if v0 == 0 then goto L1bdb76;
  #L1bdb62.  v0:= new `com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader`;
  #L1bdb66.  call `<init>`(v0, v5, v6) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.<init>:([BI)V` @kind direct;
  #L1bdb6c.  call temp:= `parseExifSegment`(v0) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.parseExifSegment:(Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;)I` @kind static;
  #L1bdb72.  v5:= temp;
  #L1bdb74.  return v5;
  #L1bdb76.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bdb7c.  v5:= temp;
  #L1bdb7e.  if v5 == 0 then goto L1bdb8c;
  #L1bdb82.  v5:= "Missing jpeg exif preamble" @kind object;
  #L1bdb86.  call temp:= `d`(v3, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bdb8c.  return v1;
}
procedure `int` `getOrientation`(`com.yalantis.ucrop.util.ImageHeaderParser` v5 @kind this) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.getOrientation:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1bd940.  v0:= v5.`com.yalantis.ucrop.util.ImageHeaderParser.reader` @type ^`com.yalantis.ucrop.util.ImageHeaderParser$Reader` @kind object;
  #L1bd944.  call temp:= `getUInt16`(v0) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L1bd94a.  v0:= temp;
  #L1bd94c.  call temp:= `handles`(v0) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.handles:(I)Z` @kind static;
  #L1bd952.  v1:= temp;
  #L1bd954.  v2:= 3I;
  #L1bd956.  v3:= -1I;
  #L1bd958.  v4:= "ImageHeaderParser" @kind object;
  #L1bd95c.  if v1 != 0 then goto L1bd996;
  #L1bd960.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bd966.  v1:= temp;
  #L1bd968.  if v1 == 0 then goto L1bd994;
  #L1bd96c.  v1:= new `java.lang.StringBuilder`;
  #L1bd970.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bd976.  v2:= "Parser doesn't handle magic number: " @kind object;
  #L1bd97a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bd980.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bd986.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bd98c.  v0:= temp @kind object;
  #L1bd98e.  call temp:= `d`(v4, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bd994.  return v3;
  #L1bd996.  call temp:= `moveToExifSegmentAndGetLength`(v5) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.moveToExifSegmentAndGetLength:()I` @kind direct;
  #L1bd99c.  v0:= temp;
  #L1bd99e.  if v0 != v3 then goto L1bd9ba;
  #L1bd9a2.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L1bd9a8.  v0:= temp;
  #L1bd9aa.  if v0 == 0 then goto L1bd9b8;
  #L1bd9ae.  v0:= "Failed to parse exif segment length, or exif segment not found" @kind object;
  #L1bd9b2.  call temp:= `d`(v4, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bd9b8.  return v3;
  #L1bd9ba.  v1:= new `byte`[v0];
  #L1bd9be.  call temp:= `parseExifSegment`(v5, v1, v0) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.parseExifSegment:([BI)I` @kind direct;
  #L1bd9c4.  v0:= temp;
  #L1bd9c6.  return v0;
}
