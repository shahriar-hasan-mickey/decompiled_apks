record `com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader` @kind class @AccessFlag  {
  `java.nio.ByteBuffer` `com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader.data` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1bd734.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bd73a.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L1bd740.  v2:= temp @kind object;
  #L1bd742.  v0:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L1bd746.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1bd74c.  v2:= temp @kind object;
  #L1bd74e.  call temp:= `limit`(v2, v3) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1bd754.  v2:= temp @kind object;
  #L1bd756.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L1bd75a.  v1.`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L1bd75e.  return @kind void;
}
procedure `short` `getInt16`(`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader` v1 @kind this, `int` v2 ) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.getInt16:(I)S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bd714.  v0:= v1.`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` @kind object;
  #L1bd718.  call temp:= `getShort`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L1bd71e.  v2:= temp;
  #L1bd720.  return v2;
}
procedure `int` `getInt32`(`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader` v1 @kind this, `int` v2 ) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.getInt32:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bd6d4.  v0:= v1.`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` @kind object;
  #L1bd6d8.  call temp:= `getInt`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L1bd6de.  v2:= temp;
  #L1bd6e0.  return v2;
}
procedure `int` `length`(`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader` v1 @kind this) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.length:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bd6f4.  v0:= v1.`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` @kind object;
  #L1bd6f8.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1bd6fe.  v0:= temp;
  #L1bd700.  return v0;
}
procedure `void` `order`(`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader` v1 @kind this, `java.nio.ByteOrder` v2 @kind object) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser$RandomAccessReader;.order:(Ljava/nio/ByteOrder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bd770.  v0:= v1.`com.yalantis.ucrop.util.ImageHeaderParser$RandomAccessReader.data` @type ^`java.nio.ByteBuffer` @kind object;
  #L1bd774.  call temp:= `order`(v0, v2) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1bd77a.  return @kind void;
}
