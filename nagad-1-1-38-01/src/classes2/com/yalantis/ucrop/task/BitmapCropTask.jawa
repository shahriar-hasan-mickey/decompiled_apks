record `com.yalantis.ucrop.task.BitmapCropTask` @kind class @AccessFlag PUBLIC extends `android.os.AsyncTask` @kind class {
  `int` `com.yalantis.ucrop.task.BitmapCropTask.cropOffsetX` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.cropOffsetY` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$CompressFormat` `com.yalantis.ucrop.task.BitmapCropTask.mCompressFormat` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mCompressQuality` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.yalantis.ucrop.task.BitmapCropTask.mContext` @AccessFlag PRIVATE_FINAL;
  `com.yalantis.ucrop.callback.BitmapCropCallback` `com.yalantis.ucrop.task.BitmapCropTask.mCropCallback` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @AccessFlag PRIVATE;
  `float` `com.yalantis.ucrop.task.BitmapCropTask.mCurrentAngle` @AccessFlag PRIVATE;
  `android.graphics.RectF` `com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @AccessFlag PRIVATE_FINAL;
  `float` `com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @AccessFlag PRIVATE;
  `com.yalantis.ucrop.model.ExifInfo` `com.yalantis.ucrop.task.BitmapCropTask.mExifInfo` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.yalantis.ucrop.task.BitmapCropTask.mImageInputPath` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Bitmap` `com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.yalantis.ucrop.task.BitmapCropTask.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.yalantis.ucrop.task.BitmapCropTask` v1 @kind this, `android.content.Context` v2 @kind object, `android.graphics.Bitmap` v3 @kind object, `com.yalantis.ucrop.model.ImageState` v4 @kind object, `com.yalantis.ucrop.model.CropParameters` v5 @kind object, `com.yalantis.ucrop.callback.BitmapCropCallback` v6 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.<init>:(Landroid/content/Context;Landroid/graphics/Bitmap;Lcom/yalantis/ucrop/model/ImageState;Lcom/yalantis/ucrop/model/CropParameters;Lcom/yalantis/ucrop/callback/BitmapCropCallback;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1bc164.  call `<init>`(v1) @signature `Landroid/os/AsyncTask;.<init>:()V` @kind direct;
  #L1bc16a.  v0:= new `java.lang.ref.WeakReference`;
  #L1bc16e.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1bc174.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mContext` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L1bc178.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` := v3 @kind object;
  #L1bc17c.  call temp:= `getCropRect`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCropRect:()Landroid/graphics/RectF;` @kind virtual;
  #L1bc182.  v2:= temp @kind object;
  #L1bc184.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` := v2 @kind object;
  #L1bc188.  call temp:= `getCurrentImageRect`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCurrentImageRect:()Landroid/graphics/RectF;` @kind virtual;
  #L1bc18e.  v2:= temp @kind object;
  #L1bc190.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` := v2 @kind object;
  #L1bc194.  call temp:= `getCurrentScale`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCurrentScale:()F` @kind virtual;
  #L1bc19a.  v2:= temp;
  #L1bc19c.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float` := v2;
  #L1bc1a0.  call temp:= `getCurrentAngle`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCurrentAngle:()F` @kind virtual;
  #L1bc1a6.  v2:= temp;
  #L1bc1a8.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentAngle` @type ^`float` := v2;
  #L1bc1ac.  call temp:= `getMaxResultImageSizeX`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getMaxResultImageSizeX:()I` @kind virtual;
  #L1bc1b2.  v2:= temp;
  #L1bc1b4.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int` := v2;
  #L1bc1b8.  call temp:= `getMaxResultImageSizeY`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getMaxResultImageSizeY:()I` @kind virtual;
  #L1bc1be.  v2:= temp;
  #L1bc1c0.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int` := v2;
  #L1bc1c4.  call temp:= `getCompressFormat`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getCompressFormat:()Landroid/graphics/Bitmap$CompressFormat;` @kind virtual;
  #L1bc1ca.  v2:= temp @kind object;
  #L1bc1cc.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCompressFormat` @type ^`android.graphics.Bitmap$CompressFormat` := v2 @kind object;
  #L1bc1d0.  call temp:= `getCompressQuality`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getCompressQuality:()I` @kind virtual;
  #L1bc1d6.  v2:= temp;
  #L1bc1d8.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCompressQuality` @type ^`int` := v2;
  #L1bc1dc.  call temp:= `getImageInputPath`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getImageInputPath:()Ljava/lang/String;` @kind virtual;
  #L1bc1e2.  v2:= temp @kind object;
  #L1bc1e4.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputPath` @type ^`java.lang.String` := v2 @kind object;
  #L1bc1e8.  call temp:= `getImageOutputPath`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getImageOutputPath:()Ljava/lang/String;` @kind virtual;
  #L1bc1ee.  v2:= temp @kind object;
  #L1bc1f0.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @type ^`java.lang.String` := v2 @kind object;
  #L1bc1f4.  call temp:= `getExifInfo`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getExifInfo:()Lcom/yalantis/ucrop/model/ExifInfo;` @kind virtual;
  #L1bc1fa.  v2:= temp @kind object;
  #L1bc1fc.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mExifInfo` @type ^`com.yalantis.ucrop.model.ExifInfo` := v2 @kind object;
  #L1bc200.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCropCallback` @type ^`com.yalantis.ucrop.callback.BitmapCropCallback` := v6 @kind object;
  #L1bc204.  return @kind void;
}
procedure `boolean` `crop`(`com.yalantis.ucrop.task.BitmapCropTask` v9 @kind this) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.crop:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1bbd3c.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int`;
  #L1bbd40.  v1:= 0I;
  #L1bbd42.  if v0 <= 0 then goto L1bbdfe;
  #L1bbd46.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int`;
  #L1bbd4a.  if v0 <= 0 then goto L1bbdfe;
  #L1bbd4e.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bbd52.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1bbd58.  v0:= temp;
  #L1bbd5a.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L1bbd5e.  v0:= v0 / v2 @kind float;
  #L1bbd60.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bbd64.  call temp:= `height`(v2) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1bbd6a.  v2:= temp;
  #L1bbd6c.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L1bbd70.  v2:= v2 / v3 @kind float;
  #L1bbd72.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int`;
  #L1bbd76.  v3:= (`float`) v3 @kind i2f;
  #L1bbd78.  v3:= fcmpl(v0, v3);
  #L1bbd7c.  if v3 > 0 then goto L1bbd8e;
  #L1bbd80.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int`;
  #L1bbd84.  v3:= (`float`) v3 @kind i2f;
  #L1bbd86.  v3:= fcmpl(v2, v3);
  #L1bbd8a.  if v3 <= 0 then goto L1bbdfe;
  #L1bbd8e.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int`;
  #L1bbd92.  v3:= (`float`) v3 @kind i2f;
  #L1bbd94.  v3:= v3 / v0 @kind float;
  #L1bbd96.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int`;
  #L1bbd9a.  v0:= (`float`) v0 @kind i2f;
  #L1bbd9c.  v0:= v0 / v2 @kind float;
  #L1bbd9e.  call temp:= `min`(v3, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1bbda4.  v0:= temp;
  #L1bbda6.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bbdaa.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L1bbdb0.  v3:= temp;
  #L1bbdb2.  v3:= (`float`) v3 @kind i2f;
  #L1bbdb4.  v3:= v3 * v0 @kind float;
  #L1bbdb8.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1bbdbe.  v3:= temp;
  #L1bbdc0.  v4:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bbdc4.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L1bbdca.  v4:= temp;
  #L1bbdcc.  v4:= (`float`) v4 @kind i2f;
  #L1bbdce.  v4:= v4 * v0 @kind float;
  #L1bbdd2.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1bbdd8.  v4:= temp;
  #L1bbdda.  call temp:= `createScaledBitmap`(v2, v3, v4, v1) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L1bbde0.  v2:= temp @kind object;
  #L1bbde2.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bbde6.  if v3 == v2 then goto L1bbdf0;
  #L1bbdea.  call `recycle`(v3) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1bbdf0.  v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L1bbdf4.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L1bbdf8.  v2:= v2 / v0 @kind float;
  #L1bbdfa.  v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float` := v2;
  #L1bbdfe.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentAngle` @type ^`float`;
  #L1bbe02.  v2:= 0I;
  #L1bbe04.  v0:= fcmpl(v0, v2);
  #L1bbe08.  if v0 == 0 then goto L1bbe7c;
  #L1bbe0c.  v7:= new `android.graphics.Matrix`;
  #L1bbe10.  call `<init>`(v7) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L1bbe16.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentAngle` @type ^`float`;
  #L1bbe1a.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bbe1e.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L1bbe24.  v2:= temp;
  #L1bbe26.  v2:= v2 / 2;
  #L1bbe2a.  v2:= (`float`) v2 @kind i2f;
  #L1bbe2c.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bbe30.  call temp:= `getHeight`(v3) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L1bbe36.  v3:= temp;
  #L1bbe38.  v3:= v3 / 2;
  #L1bbe3c.  v3:= (`float`) v3 @kind i2f;
  #L1bbe3e.  call `setRotate`(v7, v0, v2, v3) @signature `Landroid/graphics/Matrix;.setRotate:(FFF)V` @kind virtual;
  #L1bbe44.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bbe48.  v3:= 0I;
  #L1bbe4a.  v4:= 0I;
  #L1bbe4c.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L1bbe52.  v5:= temp;
  #L1bbe54.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bbe58.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L1bbe5e.  v6:= temp;
  #L1bbe60.  v8:= 1I;
  #L1bbe62.  call temp:= `createBitmap`(v2, v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L1bbe68.  v0:= temp @kind object;
  #L1bbe6a.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bbe6e.  if v2 == v0 then goto L1bbe78;
  #L1bbe72.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1bbe78.  v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L1bbe7c.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bbe80.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1bbe84.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L1bbe88.  v2:= v2.`android.graphics.RectF.left` @type ^`float`;
  #L1bbe8c.  v0:= v0 - v2 @kind float;
  #L1bbe8e.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L1bbe92.  v0:= v0 / v2 @kind float;
  #L1bbe94.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1bbe9a.  v0:= temp;
  #L1bbe9c.  v9.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetX` @type ^`int` := v0;
  #L1bbea0.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bbea4.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L1bbea8.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L1bbeac.  v2:= v2.`android.graphics.RectF.top` @type ^`float`;
  #L1bbeb0.  v0:= v0 - v2 @kind float;
  #L1bbeb2.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L1bbeb6.  v0:= v0 / v2 @kind float;
  #L1bbeb8.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1bbebe.  v0:= temp;
  #L1bbec0.  v9.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetY` @type ^`int` := v0;
  #L1bbec4.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bbec8.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1bbece.  v0:= temp;
  #L1bbed0.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L1bbed4.  v0:= v0 / v2 @kind float;
  #L1bbed6.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1bbedc.  v0:= temp;
  #L1bbede.  v9.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int` := v0;
  #L1bbee2.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bbee6.  call temp:= `height`(v0) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1bbeec.  v0:= temp;
  #L1bbeee.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L1bbef2.  v0:= v0 / v2 @kind float;
  #L1bbef4.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1bbefa.  v0:= temp;
  #L1bbefc.  v9.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int` := v0;
  #L1bbf00.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L1bbf04.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L1bbf08.  call temp:= `shouldCrop`(v9, v0, v2) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.shouldCrop:(II)Z` @kind direct;
  #L1bbf0e.  v0:= temp;
  #L1bbf10.  v2:= new `java.lang.StringBuilder`;
  #L1bbf14.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bbf1a.  v3:= "Should crop: " @kind object;
  #L1bbf1e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbf24.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbf2a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bbf30.  v2:= temp @kind object;
  #L1bbf32.  v3:= "BitmapCropTask" @kind object;
  #L1bbf36.  call temp:= `i`(v3, v2) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bbf3c.  if v0 == 0 then goto L1bbfb4;
  #L1bbf40.  v0:= new `c.k.a.a`;
  #L1bbf44.  v1:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputPath` @type ^`java.lang.String` @kind object;
  #L1bbf48.  call `<init>`(v0, v1) @signature `Lc/k/a/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbf4e.  v1:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bbf52.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetX` @type ^`int`;
  #L1bbf56.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetY` @type ^`int`;
  #L1bbf5a.  v4:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L1bbf5e.  v5:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L1bbf62.  call temp:= `createBitmap`(v1, v2, v3, v4, v5) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;` @kind static;
  #L1bbf68.  v1:= temp @kind object;
  #L1bbf6a.  call `saveImage`(v9, v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.saveImage:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L1bbf70.  v1:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCompressFormat` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L1bbf74.  v2:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L1bbf78.  call temp:= `equals`(v1, v2) @signature `Landroid/graphics/Bitmap$CompressFormat;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1bbf7e.  v1:= temp;
  #L1bbf80.  v2:= "Cropping" @kind object;
  #L1bbf84.  if v1 == 0 then goto L1bbfa6;
  #L1bbf88.  v1:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L1bbf8c.  v3:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L1bbf90.  v4:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @type ^`java.lang.String` @kind object;
  #L1bbf94.  call `copyExif`(v0, v1, v3, v4) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.copyExif:(Lc/k/a/a;IILjava/lang/String;)V` @kind static;
  #L1bbf9a.  v0:= " Copying exif interface" @kind object;
  #L1bbf9e.  call temp:= `d`(v2, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bbfa4.  goto L1bbfb0;
  #L1bbfa6.  v0:= "Not jpeg format" @kind object;
  #L1bbfaa.  call temp:= `d`(v2, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bbfb0.  v0:= 1I;
  #L1bbfb2.  return v0;
  #L1bbfb4.  v0:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputPath` @type ^`java.lang.String` @kind object;
  #L1bbfb8.  v2:= v9.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @type ^`java.lang.String` @kind object;
  #L1bbfbc.  call `copyFile`(v0, v2) @signature `Lcom/yalantis/ucrop/util/FileUtils;.copyFile:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1bbfc2.  return v1;
}
procedure `void` `saveImage`(`com.yalantis.ucrop.task.BitmapCropTask` v4 @kind this, `android.graphics.Bitmap` v5 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.saveImage:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bc29c.  v0:= v4.`com.yalantis.ucrop.task.BitmapCropTask.mContext` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1bc2a0.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1bc2a6.  v0:= temp @kind object;
  #L1bc2a8.  v0:= (`android.content.Context`) v0 @kind object;
  #L1bc2ac.  if v0 != 0 then goto L1bc2b2;
  #L1bc2b0.  return @kind void;
  #L1bc2b2.  v1:= 0I;
  #L1bc2b4.  call temp:= `getContentResolver`(v0) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L1bc2ba.  v0:= temp @kind object;
  #L1bc2bc.  v2:= new `java.io.File`;
  #L1bc2c0.  v3:= v4.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @type ^`java.lang.String` @kind object;
  #L1bc2c4.  call `<init>`(v2, v3) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bc2ca.  call temp:= `fromFile`(v2) @signature `Landroid/net/Uri;.fromFile:(Ljava/io/File;)Landroid/net/Uri;` @kind static;
  #L1bc2d0.  v2:= temp @kind object;
  #L1bc2d2.  call temp:= `openOutputStream`(v0, v2) @signature `Landroid/content/ContentResolver;.openOutputStream:(Landroid/net/Uri;)Ljava/io/OutputStream;` @kind virtual;
  #L1bc2d8.  v1:= temp @kind object;
  #L1bc2da.  v0:= v4.`com.yalantis.ucrop.task.BitmapCropTask.mCompressFormat` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L1bc2de.  v2:= v4.`com.yalantis.ucrop.task.BitmapCropTask.mCompressQuality` @type ^`int`;
  #L1bc2e2.  call temp:= `compress`(v5, v0, v2, v1) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L1bc2e8.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1bc2ee.  call `close`(v1) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L1bc2f4.  return @kind void;
  #L1bc2f6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bc2f8.  call `close`(v1) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L1bc2fe.  throw v5;
  catch `java.lang.Throwable` @[L1bc2b4..L1bc2ee] goto L1bc2f6;
}
procedure `boolean` `shouldCrop`(`com.yalantis.ucrop.task.BitmapCropTask` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.shouldCrop:(II)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1bbfd4.  call temp:= `max`(v3, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1bbfda.  v3:= temp;
  #L1bbfdc.  v3:= (`float`) v3 @kind i2f;
  #L1bbfde.  v4:= 1000.0F;
  #L1bbfe2.  v3:= v3 / v4 @kind float;
  #L1bbfe4.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1bbfea.  v3:= temp;
  #L1bbfec.  v4:= 1I;
  #L1bbfee.  v3:= v3 + v4 @kind int;
  #L1bbff0.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int`;
  #L1bbff4.  if v0 <= 0 then goto L1bc000;
  #L1bbff8.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int`;
  #L1bbffc.  if v0 > 0 then goto L1bc08e;
  #L1bc000.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bc004.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1bc008.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L1bc00c.  v1:= v1.`android.graphics.RectF.left` @type ^`float`;
  #L1bc010.  v0:= v0 - v1 @kind float;
  #L1bc012.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1bc018.  v0:= temp;
  #L1bc01a.  v3:= (`float`) v3 @kind i2f;
  #L1bc01c.  v0:= fcmpl(v0, v3);
  #L1bc020.  if v0 > 0 then goto L1bc08e;
  #L1bc024.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bc028.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L1bc02c.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L1bc030.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L1bc034.  v0:= v0 - v1 @kind float;
  #L1bc036.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1bc03c.  v0:= temp;
  #L1bc03e.  v0:= fcmpl(v0, v3);
  #L1bc042.  if v0 > 0 then goto L1bc08e;
  #L1bc046.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bc04a.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L1bc04e.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L1bc052.  v1:= v1.`android.graphics.RectF.bottom` @type ^`float`;
  #L1bc056.  v0:= v0 - v1 @kind float;
  #L1bc058.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1bc05e.  v0:= temp;
  #L1bc060.  v0:= fcmpl(v0, v3);
  #L1bc064.  if v0 > 0 then goto L1bc08e;
  #L1bc068.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L1bc06c.  v0:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1bc070.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L1bc074.  v1:= v1.`android.graphics.RectF.right` @type ^`float`;
  #L1bc078.  v0:= v0 - v1 @kind float;
  #L1bc07a.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1bc080.  v0:= temp;
  #L1bc082.  v3:= fcmpl(v0, v3);
  #L1bc086.  if v3 <= 0 then goto L1bc08c;
  #L1bc08a.  goto L1bc08e;
  #L1bc08c.  v4:= 0I;
  #L1bc08e.  return v4;
}
procedure `java.lang.Object` `doInBackground`(`com.yalantis.ucrop.task.BitmapCropTask` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.doInBackground:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L1bc0a0.  v1:= (`java.lang.Void`[]) v1 @kind object;
  #L1bc0a4.  call temp:= `doInBackground`(v0, v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.doInBackground:([Ljava/lang/Void;)Ljava/lang/Throwable;` @kind virtual;
  #L1bc0aa.  v1:= temp @kind object;
  #L1bc0ac.  return v1 @kind object;
}
procedure `java.lang.Throwable` `doInBackground`(`com.yalantis.ucrop.task.BitmapCropTask` v1 @kind this, `java.lang.Void`[] v2 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.doInBackground:([Ljava/lang/Void;)Ljava/lang/Throwable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1bc0c0.  v2:= "Cropping" @kind object;
  #L1bc0c4.  v0:= " Cropping doing in background" @kind object;
  #L1bc0c8.  call temp:= `d`(v2, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bc0ce.  v0:= v1.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L1bc0d2.  if v0 != 0 then goto L1bc0e6;
  #L1bc0d6.  v2:= new `java.lang.NullPointerException`;
  #L1bc0da.  v0:= "ViewBitmap is null" @kind object;
  #L1bc0de.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bc0e4.  return v2 @kind object;
  #L1bc0e6.  call temp:= `isRecycled`(v0) @signature `Landroid/graphics/Bitmap;.isRecycled:()Z` @kind virtual;
  #L1bc0ec.  v0:= temp;
  #L1bc0ee.  if v0 == 0 then goto L1bc102;
  #L1bc0f2.  v2:= new `java.lang.NullPointerException`;
  #L1bc0f6.  v0:= "ViewBitmap is recycled" @kind object;
  #L1bc0fa.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bc100.  return v2 @kind object;
  #L1bc102.  v0:= v1.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L1bc106.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/RectF;.isEmpty:()Z` @kind virtual;
  #L1bc10c.  v0:= temp;
  #L1bc10e.  if v0 == 0 then goto L1bc122;
  #L1bc112.  v2:= new `java.lang.NullPointerException`;
  #L1bc116.  v0:= "CurrentImageRect is empty" @kind object;
  #L1bc11a.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bc120.  return v2 @kind object;
  #L1bc122.  v0:= "Cropping task - no error yet" @kind object;
  #L1bc126.  call temp:= `d`(v2, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bc12c.  v0:= "Cropping task - calling crop" @kind object;
  #L1bc130.  call temp:= `d`(v2, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bc136.  call temp:= `crop`(v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.crop:()Z` @kind direct;
  #L1bc13c.  v2:= 0I;
  #L1bc13e.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L1bc142.  return v2 @kind object;
  #L1bc144.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bc146.  return v2 @kind object;
  catch `java.lang.Throwable` @[L1bc12c..L1bc142] goto L1bc144;
}
procedure `void` `onPostExecute`(`com.yalantis.ucrop.task.BitmapCropTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.onPostExecute:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L1bc218.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1bc21c.  call `onPostExecute`(v0, v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.onPostExecute:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1bc222.  return @kind void;
}
procedure `void` `onPostExecute`(`com.yalantis.ucrop.task.BitmapCropTask` v7 @kind this, `java.lang.Throwable` v8 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.onPostExecute:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1bc234.  v0:= v7.`com.yalantis.ucrop.task.BitmapCropTask.mCropCallback` @type ^`com.yalantis.ucrop.callback.BitmapCropCallback` @kind object;
  #L1bc238.  if v0 == 0 then goto L1bc27a;
  #L1bc23c.  if v8 != 0 then goto L1bc272;
  #L1bc240.  v8:= new `java.io.File`;
  #L1bc244.  v0:= v7.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @type ^`java.lang.String` @kind object;
  #L1bc248.  call `<init>`(v8, v0) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bc24e.  call temp:= `fromFile`(v8) @signature `Landroid/net/Uri;.fromFile:(Ljava/io/File;)Landroid/net/Uri;` @kind static;
  #L1bc254.  v2:= temp @kind object;
  #L1bc256.  v1:= v7.`com.yalantis.ucrop.task.BitmapCropTask.mCropCallback` @type ^`com.yalantis.ucrop.callback.BitmapCropCallback` @kind object;
  #L1bc25a.  v3:= v7.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetX` @type ^`int`;
  #L1bc25e.  v4:= v7.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetY` @type ^`int`;
  #L1bc262.  v5:= v7.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L1bc266.  v6:= v7.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L1bc26a.  call `onBitmapCropped`(v1, v2, v3, v4, v5, v6) @signature `Lcom/yalantis/ucrop/callback/BitmapCropCallback;.onBitmapCropped:(Landroid/net/Uri;IIII)V` @kind interface;
  #L1bc270.  goto L1bc288;
  #L1bc272.  call `onCropFailure`(v0, v8) @signature `Lcom/yalantis/ucrop/callback/BitmapCropCallback;.onCropFailure:(Ljava/lang/Throwable;)V` @kind interface;
  #L1bc278.  goto L1bc288;
  #L1bc27a.  v8:= "Cropping" @kind object;
  #L1bc27e.  v0:= "Cropping task - Post execute - call back is null" @kind object;
  #L1bc282.  call temp:= `d`(v8, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1bc288.  return @kind void;
}
