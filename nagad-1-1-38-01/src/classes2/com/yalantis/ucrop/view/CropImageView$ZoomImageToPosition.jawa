record `com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.lang.ref.WeakReference` `com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mCropImageView` @AccessFlag PRIVATE_FINAL;
  `float` `com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDeltaScale` @AccessFlag PRIVATE_FINAL;
  `float` `com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDestX` @AccessFlag PRIVATE_FINAL;
  `float` `com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDestY` @AccessFlag PRIVATE_FINAL;
  `long` `com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDurationMs` @AccessFlag PRIVATE_FINAL;
  `float` `com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mOldScale` @AccessFlag PRIVATE_FINAL;
  `long` `com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mStartTime` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition` v2 @kind this, `com.yalantis.ucrop.view.CropImageView` v3 @kind object, `long` v4 , `float` v6 , `float` v7 , `float` v8 , `float` v9 ) @signature `Lcom/yalantis/ucrop/view/CropImageView$ZoomImageToPosition;.<init>:(Lcom/yalantis/ucrop/view/CropImageView;JFFFF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1be650.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1be656.  v0:= new `java.lang.ref.WeakReference`;
  #L1be65a.  call `<init>`(v0, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1be660.  v2.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mCropImageView` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L1be664.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1be66a.  v0:= temp @kind wide;
  #L1be66c.  v2.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mStartTime` @type ^`long` := v0 @kind wide;
  #L1be670.  v2.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDurationMs` @type ^`long` := v4 @kind wide;
  #L1be674.  v2.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mOldScale` @type ^`float` := v6;
  #L1be678.  v2.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDeltaScale` @type ^`float` := v7;
  #L1be67c.  v2.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDestX` @type ^`float` := v8;
  #L1be680.  v2.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDestY` @type ^`float` := v9;
  #L1be684.  return @kind void;
}
procedure `void` `run`(`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition` v7 @kind this) @signature `Lcom/yalantis/ucrop/view/CropImageView$ZoomImageToPosition;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1be698.  v0:= v7.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mCropImageView` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1be69c.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1be6a2.  v0:= temp @kind object;
  #L1be6a4.  v0:= (`com.yalantis.ucrop.view.CropImageView`) v0 @kind object;
  #L1be6a8.  if v0 != 0 then goto L1be6ae;
  #L1be6ac.  return @kind void;
  #L1be6ae.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1be6b4.  v1:= temp @kind wide;
  #L1be6b6.  v3:= v7.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDurationMs` @type ^`long` @kind wide;
  #L1be6ba.  v5:= v7.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mStartTime` @type ^`long` @kind wide;
  #L1be6be.  v1:= v1 - v5 @kind long;
  #L1be6c0.  call temp:= `min`(v3, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1be6c6.  v1:= temp @kind wide;
  #L1be6c8.  v1:= (`float`) v1 @kind l2f;
  #L1be6ca.  v2:= 0I;
  #L1be6cc.  v3:= v7.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDeltaScale` @type ^`float`;
  #L1be6d0.  v4:= v7.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDurationMs` @type ^`long` @kind wide;
  #L1be6d4.  v4:= (`float`) v4 @kind l2f;
  #L1be6d6.  call temp:= `easeInOut`(v1, v2, v3, v4) @signature `Lcom/yalantis/ucrop/util/CubicEasing;.easeInOut:(FFFF)F` @kind static;
  #L1be6dc.  v2:= temp;
  #L1be6de.  v3:= v7.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDurationMs` @type ^`long` @kind wide;
  #L1be6e2.  v3:= (`float`) v3 @kind l2f;
  #L1be6e4.  v1:= fcmpg(v1, v3);
  #L1be6e8.  if v1 >= 0 then goto L1be708;
  #L1be6ec.  v1:= v7.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mOldScale` @type ^`float`;
  #L1be6f0.  v1:= v1 + v2 @kind float;
  #L1be6f2.  v2:= v7.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDestX` @type ^`float`;
  #L1be6f6.  v3:= v7.`com.yalantis.ucrop.view.CropImageView$ZoomImageToPosition.mDestY` @type ^`float`;
  #L1be6fa.  call `zoomInImage`(v0, v1, v2, v3) @signature `Lcom/yalantis/ucrop/view/CropImageView;.zoomInImage:(FFF)V` @kind virtual;
  #L1be700.  call temp:= `post`(v0, v7) @signature `Landroid/widget/ImageView;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L1be706.  goto L1be70e;
  #L1be708.  call `setImageToWrapCropBounds`(v0) @signature `Lcom/yalantis/ucrop/view/CropImageView;.setImageToWrapCropBounds:()V` @kind virtual;
  #L1be70e.  return @kind void;
}
