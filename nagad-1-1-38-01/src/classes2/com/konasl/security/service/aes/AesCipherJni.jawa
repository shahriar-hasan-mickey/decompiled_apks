record `com.konasl.security.service.aes.AesCipherJni` @kind class @AccessFlag PUBLIC extends `com.konasl.security.service.aes.a` @kind interface {
  `long` `com.konasl.security.service.aes.AesCipherJni.context` @AccessFlag PRIVATE;
  `int` `com.konasl.security.service.aes.AesCipherJni.option` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.konasl.security.service.aes.AesCipherJni` v0 @kind this) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15b378.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b37e.  return @kind void;
}
procedure `byte`[][] `decrypt`(`long` v0 , `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.decrypt:(J[B[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `void` `destroy_context`(`long` v0 ) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.destroy_context:(J)V` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[][] `encrypt`(`long` v0 , `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.encrypt:(J[B[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `long` `init_context`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.init_context:([BI)J` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[] `decrypt`(`com.konasl.security.service.aes.AesCipherJni` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.decrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b278.  v0:= 16I;
  #L15b27c.  v0:= new `byte`[v0];
  #L15b280.  v1:= 0I;
  #L15b282.  call `fillArray`(v0, v1) @signature `Le/b/b/b/a;.fillArray:([BB)V` @kind static;
  #L15b288.  call temp:= `decrypt`(v2, v3, v0) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.decrypt:([B[B)[B` @kind virtual;
  #L15b28e.  v3:= temp @kind object;
  #L15b290.  return v3 @kind object;
}
procedure `byte`[] `decrypt`(`com.konasl.security.service.aes.AesCipherJni` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15b2a4.  v0:= v3.`com.konasl.security.service.aes.AesCipherJni.context` @type ^`long` @kind wide;
  #L15b2a8.  v2:= v3.`com.konasl.security.service.aes.AesCipherJni.option` @type ^`int`;
  #L15b2ac.  call temp:= `decrypt`(v0, v4, v5, v2) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.decrypt:(J[B[BI)[[B` @kind static;
  #L15b2b2.  v4:= temp @kind object;
  #L15b2b4.  if v4 != 0 then goto L15b2bc;
  #L15b2b8.  v5:= 0I;
  #L15b2ba.  goto L15b2c2;
  #L15b2bc.  v5:= 0I;
  #L15b2be.  v5:= v4[v5] @kind object;
  #L15b2c2.  call temp:= `extractStatusCode`(v5) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15b2c8.  v5:= temp;
  #L15b2ca.  if v5 != 0 then goto L15b2d6;
  #L15b2ce.  v5:= 1I;
  #L15b2d0.  v4:= v4[v5] @kind object;
  #L15b2d4.  return v4 @kind object;
  #L15b2d6.  v4:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b2da.  v5:= "AES Decryption Failed" @kind object;
  #L15b2de.  call `<init>`(v4, v5) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b2e4.  throw v4;
}
procedure `void` `destroy`(`com.konasl.security.service.aes.AesCipherJni` v5 @kind this) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.destroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15b390.  v0:= v5.`com.konasl.security.service.aes.AesCipherJni.context` @type ^`long` @kind wide;
  #L15b394.  v2:= 0L;
  #L15b398.  v4:= lcmp(v0, v2);
  #L15b39c.  if v4 <= 0 then goto L15b3aa;
  #L15b3a0.  call `destroy_context`(v0) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.destroy_context:(J)V` @kind static;
  #L15b3a6.  v5.`com.konasl.security.service.aes.AesCipherJni.context` @type ^`long` := v2 @kind wide;
  #L15b3aa.  return @kind void;
}
procedure `byte`[] `encrypt`(`com.konasl.security.service.aes.AesCipherJni` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.encrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b2f8.  v0:= 16I;
  #L15b2fc.  v0:= new `byte`[v0];
  #L15b300.  v1:= 0I;
  #L15b302.  call `fillArray`(v0, v1) @signature `Le/b/b/b/a;.fillArray:([BB)V` @kind static;
  #L15b308.  call temp:= `encrypt`(v2, v3, v0) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.encrypt:([B[B)[B` @kind virtual;
  #L15b30e.  v3:= temp @kind object;
  #L15b310.  return v3 @kind object;
}
procedure `byte`[] `encrypt`(`com.konasl.security.service.aes.AesCipherJni` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15b324.  v0:= v3.`com.konasl.security.service.aes.AesCipherJni.context` @type ^`long` @kind wide;
  #L15b328.  v2:= v3.`com.konasl.security.service.aes.AesCipherJni.option` @type ^`int`;
  #L15b32c.  call temp:= `encrypt`(v0, v4, v5, v2) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.encrypt:(J[B[BI)[[B` @kind static;
  #L15b332.  v4:= temp @kind object;
  #L15b334.  if v4 != 0 then goto L15b33c;
  #L15b338.  v5:= 0I;
  #L15b33a.  goto L15b342;
  #L15b33c.  v5:= 0I;
  #L15b33e.  v5:= v4[v5] @kind object;
  #L15b342.  call temp:= `extractStatusCode`(v5) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15b348.  v5:= temp;
  #L15b34a.  if v5 != 0 then goto L15b356;
  #L15b34e.  v5:= 1I;
  #L15b350.  v4:= v4[v5] @kind object;
  #L15b354.  return v4 @kind object;
  #L15b356.  v4:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b35a.  v5:= "AES Encryption Failed" @kind object;
  #L15b35e.  call `<init>`(v4, v5) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b364.  throw v4;
}
procedure `void` `init`(`com.konasl.security.service.aes.AesCipherJni` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.init:([BI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b3bc.  v0:= v4 ^& 240;
  #L15b3c0.  if v0 == 0 then goto L15b3e6;
  #L15b3c4.  v1:= 16I;
  #L15b3c8.  if v0 == v1 then goto L15b3ea;
  #L15b3cc.  v1:= 32I;
  #L15b3d0.  if v0 != v1 then goto L15b3d6;
  #L15b3d4.  goto L15b3ea;
  #L15b3d6.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b3da.  v4:= "Unsupported Block Operation Mode" @kind object;
  #L15b3de.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b3e4.  throw v3;
  #L15b3e6.  v4:= v4 ^| 16;
  #L15b3ea.  v0:= v4 ^& 3840;
  #L15b3ee.  if v0 == 0 then goto L15b414;
  #L15b3f2.  v1:= 256I;
  #L15b3f6.  if v0 == v1 then goto L15b418;
  #L15b3fa.  v1:= 512I;
  #L15b3fe.  if v0 != v1 then goto L15b404;
  #L15b402.  goto L15b418;
  #L15b404.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b408.  v4:= "Unsupported Padding Type Operation Mode" @kind object;
  #L15b40c.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b412.  throw v3;
  #L15b414.  v4:= v4 ^| 512;
  #L15b418.  call temp:= `init_context`(v3, v4) @signature `Lcom/konasl/security/service/aes/AesCipherJni;.init_context:([BI)J` @kind static;
  #L15b41e.  v0:= temp @kind wide;
  #L15b420.  v2.`com.konasl.security.service.aes.AesCipherJni.context` @type ^`long` := v0 @kind wide;
  #L15b424.  v2.`com.konasl.security.service.aes.AesCipherJni.option` @type ^`int` := v4;
  #L15b428.  return @kind void;
}
