record `com.konasl.security.service.rsa.RsaCipherJni` @kind class @AccessFlag PUBLIC extends `com.konasl.security.service.rsa.a` @kind interface {
  `long` `com.konasl.security.service.rsa.RsaCipherJni.context` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.konasl.security.service.rsa.RsaCipherJni` v0 @kind this) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15be64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15be6a.  return @kind void;
}
procedure `byte`[][] `decrypt`(`long` v0 , `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.decrypt:(J[B[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `void` `destroy_context`(`long` v0 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.destroy_context:(J)V` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[][] `encrypt`(`long` v0 , `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.encrypt:(J[B[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[][] `generate_key_pair`(`long` v0 , `int` v2 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.generate_key_pair:(JI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `long` `init_context`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.init_context:([BI)J` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[][] `sign`(`long` v0 , `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.sign:(J[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[][] `sign_after_hash`(`long` v0 , `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.sign_after_hash:(J[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[][] `verify`(`long` v0 , `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.verify:(J[B[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[][] `verify_after_hash`(`long` v0 , `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.verify_after_hash:(J[B[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[] `decrypt`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.decrypt:([B[BI)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bc04.  v0:= v2.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` @kind wide;
  #L15bc08.  call temp:= `decrypt`(v0, v3, v4, v5) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.decrypt:(J[B[BI)[[B` @kind static;
  #L15bc0e.  v3:= temp @kind object;
  #L15bc10.  if v3 != 0 then goto L15bc18;
  #L15bc14.  v4:= 0I;
  #L15bc16.  goto L15bc1e;
  #L15bc18.  v4:= 0I;
  #L15bc1a.  v4:= v3[v4] @kind object;
  #L15bc1e.  call temp:= `extractStatusCode`(v4) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15bc24.  v4:= temp;
  #L15bc26.  if v4 != 0 then goto L15bc32;
  #L15bc2a.  v4:= 1I;
  #L15bc2c.  v3:= v3[v4] @kind object;
  #L15bc30.  return v3 @kind object;
  #L15bc32.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15bc36.  v4:= "RSA Decryption Failed" @kind object;
  #L15bc3a.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15bc40.  throw v3;
}
procedure `void` `destroy`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.destroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15be7c.  v0:= v2.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` @kind wide;
  #L15be80.  call `destroy_context`(v0) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.destroy_context:(J)V` @kind static;
  #L15be86.  return @kind void;
}
procedure `byte`[] `encrypt`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.encrypt:([B[BI)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bc54.  v0:= v2.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` @kind wide;
  #L15bc58.  call temp:= `encrypt`(v0, v3, v4, v5) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.encrypt:(J[B[BI)[[B` @kind static;
  #L15bc5e.  v3:= temp @kind object;
  #L15bc60.  if v3 != 0 then goto L15bc68;
  #L15bc64.  v4:= 0I;
  #L15bc66.  goto L15bc6e;
  #L15bc68.  v4:= 0I;
  #L15bc6a.  v4:= v3[v4] @kind object;
  #L15bc6e.  call temp:= `extractStatusCode`(v4) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15bc74.  v4:= temp;
  #L15bc76.  if v4 != 0 then goto L15bc82;
  #L15bc7a.  v4:= 1I;
  #L15bc7c.  v3:= v3[v4] @kind object;
  #L15bc80.  return v3 @kind object;
  #L15bc82.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15bc86.  v4:= "RSA Encryption Failed" @kind object;
  #L15bc8a.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15bc90.  throw v3;
}
procedure `byte`[][] `generateKeyPair`(`com.konasl.security.service.rsa.RsaCipherJni` v5 @kind this, `int` v6 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.generateKeyPair:(I)[[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15be04.  v0:= v5.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` @kind wide;
  #L15be08.  call temp:= `generate_key_pair`(v0, v6) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.generate_key_pair:(JI)[[B` @kind static;
  #L15be0e.  v6:= temp @kind object;
  #L15be10.  v0:= 0I;
  #L15be12.  if v6 != 0 then goto L15be1a;
  #L15be16.  v1:= 0I;
  #L15be18.  goto L15be1e;
  #L15be1a.  v1:= v6[v0] @kind object;
  #L15be1e.  call temp:= `extractStatusCode`(v1) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15be24.  v1:= temp;
  #L15be26.  if v1 != 0 then goto L15be44;
  #L15be2a.  v1:= 2I;
  #L15be2c.  v2:= new `byte`[][v1];
  #L15be30.  v3:= 1I;
  #L15be32.  v4:= v6[v3] @kind object;
  #L15be36.  v2[v0]:= v4 @kind object;
  #L15be3a.  v6:= v6[v1] @kind object;
  #L15be3e.  v2[v3]:= v6 @kind object;
  #L15be42.  return v2 @kind object;
  #L15be44.  v6:= new `com.konasl.security.exception.KonaCipherException`;
  #L15be48.  v0:= "RSA Key Generation Failed" @kind object;
  #L15be4c.  call `<init>`(v6, v0) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15be52.  throw v6;
}
procedure `void` `init`(`com.konasl.security.service.rsa.RsaCipherJni` v1 @kind this, `int` v2 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.init:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15bed8.  v0:= 0I;
  #L15beda.  call `init`(v1, v0, v2) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.init:([BI)V` @kind virtual;
  #L15bee0.  return @kind void;
}
procedure `void` `init`(`com.konasl.security.service.rsa.RsaCipherJni` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.init:([BI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15be98.  call temp:= `init_context`(v4, v5) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.init_context:([BI)J` @kind static;
  #L15be9e.  v4:= temp @kind wide;
  #L15bea0.  v3.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` := v4 @kind wide;
  #L15bea4.  v4:= v3.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` @kind wide;
  #L15bea8.  v0:= 0L;
  #L15beac.  v2:= lcmp(v4, v0);
  #L15beb0.  if v2 <= 0 then goto L15beb6;
  #L15beb4.  return @kind void;
  #L15beb6.  v4:= new `com.konasl.security.exception.KonaCipherException`;
  #L15beba.  v5:= "Can not Initialize RSA with provided parameter" @kind object;
  #L15bebe.  call `<init>`(v4, v5) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15bec4.  throw v4;
}
procedure `byte`[] `oaepDecrypt`(`com.konasl.security.service.rsa.RsaCipherJni` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.oaepDecrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15bca4.  v3:= 0I;
  #L15bca6.  v0:= 176I;
  #L15bcaa.  call temp:= `decrypt`(v1, v2, v3, v0) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.decrypt:([B[BI)[B` @kind virtual;
  #L15bcb0.  v2:= temp @kind object;
  #L15bcb2.  return v2 @kind object;
}
procedure `byte`[] `oaepEncrypt`(`com.konasl.security.service.rsa.RsaCipherJni` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.oaepEncrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15bcc4.  v3:= 0I;
  #L15bcc6.  v0:= 176I;
  #L15bcca.  call temp:= `encrypt`(v1, v2, v3, v0) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.encrypt:([B[BI)[B` @kind virtual;
  #L15bcd0.  v2:= temp @kind object;
  #L15bcd2.  return v2 @kind object;
}
procedure `byte`[] `pkcs1Decrypt`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.pkcs1Decrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bce4.  v0:= 0I;
  #L15bce6.  v1:= 112I;
  #L15bcea.  call temp:= `decrypt`(v2, v3, v0, v1) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.decrypt:([B[BI)[B` @kind virtual;
  #L15bcf0.  v3:= temp @kind object;
  #L15bcf2.  return v3 @kind object;
}
procedure `byte`[] `pkcs1Encrypt`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.pkcs1Encrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bd04.  v0:= 0I;
  #L15bd06.  v1:= 112I;
  #L15bd0a.  call temp:= `encrypt`(v2, v3, v0, v1) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.encrypt:([B[BI)[B` @kind virtual;
  #L15bd10.  v3:= temp @kind object;
  #L15bd12.  return v3 @kind object;
}
procedure `byte`[] `pkcs1v15Decrypt`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.pkcs1v15Decrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bd24.  v0:= 0I;
  #L15bd26.  v1:= 128I;
  #L15bd2a.  call temp:= `decrypt`(v2, v3, v0, v1) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.decrypt:([B[BI)[B` @kind virtual;
  #L15bd30.  v3:= temp @kind object;
  #L15bd32.  return v3 @kind object;
}
procedure `byte`[] `pkcs1v15Encrypt`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.pkcs1v15Encrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bd44.  v0:= 0I;
  #L15bd46.  v1:= 128I;
  #L15bd4a.  call temp:= `encrypt`(v2, v3, v0, v1) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.encrypt:([B[BI)[B` @kind virtual;
  #L15bd50.  v3:= temp @kind object;
  #L15bd52.  return v3 @kind object;
}
procedure `byte`[] `sign`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.sign:([BI)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bd64.  v0:= v2.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` @kind wide;
  #L15bd68.  call temp:= `sign`(v0, v3, v4) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.sign:(J[BI)[[B` @kind static;
  #L15bd6e.  v3:= temp @kind object;
  #L15bd70.  if v3 != 0 then goto L15bd78;
  #L15bd74.  v4:= 0I;
  #L15bd76.  goto L15bd7e;
  #L15bd78.  v4:= 0I;
  #L15bd7a.  v4:= v3[v4] @kind object;
  #L15bd7e.  call temp:= `extractStatusCode`(v4) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15bd84.  v4:= temp;
  #L15bd86.  if v4 != 0 then goto L15bd92;
  #L15bd8a.  v4:= 1I;
  #L15bd8c.  v3:= v3[v4] @kind object;
  #L15bd90.  return v3 @kind object;
  #L15bd92.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15bd96.  v4:= "RSA Signing Failed" @kind object;
  #L15bd9a.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15bda0.  throw v3;
}
procedure `byte`[] `signAfterHash`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.signAfterHash:([BI)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bdb4.  v0:= v2.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` @kind wide;
  #L15bdb8.  call temp:= `sign_after_hash`(v0, v3, v4) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.sign_after_hash:(J[BI)[[B` @kind static;
  #L15bdbe.  v3:= temp @kind object;
  #L15bdc0.  if v3 != 0 then goto L15bdc8;
  #L15bdc4.  v4:= 0I;
  #L15bdc6.  goto L15bdce;
  #L15bdc8.  v4:= 0I;
  #L15bdca.  v4:= v3[v4] @kind object;
  #L15bdce.  call temp:= `extractStatusCode`(v4) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15bdd4.  v4:= temp;
  #L15bdd6.  if v4 != 0 then goto L15bde2;
  #L15bdda.  v4:= 1I;
  #L15bddc.  v3:= v3[v4] @kind object;
  #L15bde0.  return v3 @kind object;
  #L15bde2.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15bde6.  v4:= "RSA Signing After Hashing Failed" @kind object;
  #L15bdea.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15bdf0.  throw v3;
}
procedure `boolean` `verify`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.verify:([B[BI)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bb54.  v0:= v2.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` @kind wide;
  #L15bb58.  call temp:= `verify`(v0, v3, v4, v5) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.verify:(J[B[BI)[[B` @kind static;
  #L15bb5e.  v3:= temp @kind object;
  #L15bb60.  v4:= 0I;
  #L15bb62.  if v3 != 0 then goto L15bb6a;
  #L15bb66.  v5:= 0I;
  #L15bb68.  goto L15bb6e;
  #L15bb6a.  v5:= v3[v4] @kind object;
  #L15bb6e.  call temp:= `extractStatusCode`(v5) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15bb74.  v5:= temp;
  #L15bb76.  if v5 != 0 then goto L15bb8c;
  #L15bb7a.  v5:= 1I;
  #L15bb7c.  v3:= v3[v5] @kind object;
  #L15bb80.  v3:= v3[v4] @kind byte;
  #L15bb84.  if v3 != 0 then goto L15bb8a;
  #L15bb88.  v4:= 1I;
  #L15bb8a.  return v4;
  #L15bb8c.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15bb90.  v4:= "RSA Verification Failed" @kind object;
  #L15bb94.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15bb9a.  throw v3;
}
procedure `boolean` `verifyAfterHash`(`com.konasl.security.service.rsa.RsaCipherJni` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.verifyAfterHash:([B[BI)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bbac.  v0:= v2.`com.konasl.security.service.rsa.RsaCipherJni.context` @type ^`long` @kind wide;
  #L15bbb0.  call temp:= `verify_after_hash`(v0, v3, v4, v5) @signature `Lcom/konasl/security/service/rsa/RsaCipherJni;.verify_after_hash:(J[B[BI)[[B` @kind static;
  #L15bbb6.  v3:= temp @kind object;
  #L15bbb8.  v4:= 0I;
  #L15bbba.  if v3 != 0 then goto L15bbc2;
  #L15bbbe.  v5:= 0I;
  #L15bbc0.  goto L15bbc6;
  #L15bbc2.  v5:= v3[v4] @kind object;
  #L15bbc6.  call temp:= `extractStatusCode`(v5) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15bbcc.  v5:= temp;
  #L15bbce.  if v5 != 0 then goto L15bbe4;
  #L15bbd2.  v5:= 1I;
  #L15bbd4.  v3:= v3[v5] @kind object;
  #L15bbd8.  v3:= v3[v4] @kind byte;
  #L15bbdc.  if v3 != 0 then goto L15bbe2;
  #L15bbe0.  v4:= 1I;
  #L15bbe2.  return v4;
  #L15bbe4.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15bbe8.  v4:= "RSA Verification After Hashing Failed" @kind object;
  #L15bbec.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15bbf2.  throw v3;
}
