record `com.konasl.security.service.des3.Des3CipherJni` @kind class @AccessFlag PUBLIC extends `com.konasl.security.service.des3.a` @kind interface {
  `long` `com.konasl.security.service.des3.Des3CipherJni.context` @AccessFlag PRIVATE;
  `int` `com.konasl.security.service.des3.Des3CipherJni.option` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.konasl.security.service.des3.Des3CipherJni` v0 @kind this) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15b700.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b706.  return @kind void;
}
procedure `byte`[][] `decrypt`(`long` v0 , `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.decrypt:(J[B[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `void` `destroy_context`(`long` v0 ) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.destroy_context:(J)V` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[][] `encrypt`(`long` v0 , `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.encrypt:(J[B[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `long` `init_context`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.init_context:([BI)J` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[] `decrypt`(`com.konasl.security.service.des3.Des3CipherJni` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.decrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b600.  v0:= 8I;
  #L15b604.  v0:= new `byte`[v0];
  #L15b608.  v1:= 0I;
  #L15b60a.  call `fillArray`(v0, v1) @signature `Le/b/b/b/a;.fillArray:([BB)V` @kind static;
  #L15b610.  call temp:= `decrypt`(v2, v3, v0) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.decrypt:([B[B)[B` @kind virtual;
  #L15b616.  v3:= temp @kind object;
  #L15b618.  return v3 @kind object;
}
procedure `byte`[] `decrypt`(`com.konasl.security.service.des3.Des3CipherJni` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15b62c.  v0:= v3.`com.konasl.security.service.des3.Des3CipherJni.context` @type ^`long` @kind wide;
  #L15b630.  v2:= v3.`com.konasl.security.service.des3.Des3CipherJni.option` @type ^`int`;
  #L15b634.  call temp:= `decrypt`(v0, v4, v5, v2) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.decrypt:(J[B[BI)[[B` @kind static;
  #L15b63a.  v4:= temp @kind object;
  #L15b63c.  if v4 != 0 then goto L15b644;
  #L15b640.  v5:= 0I;
  #L15b642.  goto L15b64a;
  #L15b644.  v5:= 0I;
  #L15b646.  v5:= v4[v5] @kind object;
  #L15b64a.  call temp:= `extractStatusCode`(v5) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15b650.  v5:= temp;
  #L15b652.  if v5 != 0 then goto L15b65e;
  #L15b656.  v5:= 1I;
  #L15b658.  v4:= v4[v5] @kind object;
  #L15b65c.  return v4 @kind object;
  #L15b65e.  v4:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b662.  v5:= "DES3 Encryption Failed" @kind object;
  #L15b666.  call `<init>`(v4, v5) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b66c.  throw v4;
}
procedure `void` `destroy`(`com.konasl.security.service.des3.Des3CipherJni` v5 @kind this) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.destroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15b718.  v0:= v5.`com.konasl.security.service.des3.Des3CipherJni.context` @type ^`long` @kind wide;
  #L15b71c.  v2:= 0L;
  #L15b720.  v4:= lcmp(v0, v2);
  #L15b724.  if v4 <= 0 then goto L15b732;
  #L15b728.  call `destroy_context`(v0) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.destroy_context:(J)V` @kind static;
  #L15b72e.  v5.`com.konasl.security.service.des3.Des3CipherJni.context` @type ^`long` := v2 @kind wide;
  #L15b732.  return @kind void;
}
procedure `byte`[] `encrypt`(`com.konasl.security.service.des3.Des3CipherJni` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.encrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b680.  v0:= 8I;
  #L15b684.  v0:= new `byte`[v0];
  #L15b688.  v1:= 0I;
  #L15b68a.  call `fillArray`(v0, v1) @signature `Le/b/b/b/a;.fillArray:([BB)V` @kind static;
  #L15b690.  call temp:= `encrypt`(v2, v3, v0) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.encrypt:([B[B)[B` @kind virtual;
  #L15b696.  v3:= temp @kind object;
  #L15b698.  return v3 @kind object;
}
procedure `byte`[] `encrypt`(`com.konasl.security.service.des3.Des3CipherJni` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15b6ac.  v0:= v3.`com.konasl.security.service.des3.Des3CipherJni.context` @type ^`long` @kind wide;
  #L15b6b0.  v2:= v3.`com.konasl.security.service.des3.Des3CipherJni.option` @type ^`int`;
  #L15b6b4.  call temp:= `encrypt`(v0, v4, v5, v2) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.encrypt:(J[B[BI)[[B` @kind static;
  #L15b6ba.  v4:= temp @kind object;
  #L15b6bc.  if v4 != 0 then goto L15b6c4;
  #L15b6c0.  v5:= 0I;
  #L15b6c2.  goto L15b6ca;
  #L15b6c4.  v5:= 0I;
  #L15b6c6.  v5:= v4[v5] @kind object;
  #L15b6ca.  call temp:= `extractStatusCode`(v5) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15b6d0.  v5:= temp;
  #L15b6d2.  if v5 != 0 then goto L15b6de;
  #L15b6d6.  v5:= 1I;
  #L15b6d8.  v4:= v4[v5] @kind object;
  #L15b6dc.  return v4 @kind object;
  #L15b6de.  v4:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b6e2.  v5:= "DES3 Encryption Failed" @kind object;
  #L15b6e6.  call `<init>`(v4, v5) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b6ec.  throw v4;
}
procedure `void` `init`(`com.konasl.security.service.des3.Des3CipherJni` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.init:([BI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b744.  v0:= v4 ^& 240;
  #L15b748.  if v0 == 0 then goto L15b76e;
  #L15b74c.  v1:= 16I;
  #L15b750.  if v0 == v1 then goto L15b772;
  #L15b754.  v1:= 32I;
  #L15b758.  if v0 != v1 then goto L15b75e;
  #L15b75c.  goto L15b772;
  #L15b75e.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b762.  v4:= "Unsupported Block Operation Mode" @kind object;
  #L15b766.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b76c.  throw v3;
  #L15b76e.  v4:= v4 ^| 16;
  #L15b772.  v0:= v4 ^& 3840;
  #L15b776.  if v0 == 0 then goto L15b79c;
  #L15b77a.  v1:= 256I;
  #L15b77e.  if v0 == v1 then goto L15b7a0;
  #L15b782.  v1:= 512I;
  #L15b786.  if v0 != v1 then goto L15b78c;
  #L15b78a.  goto L15b7a0;
  #L15b78c.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b790.  v4:= "Unsupported Padding Type Operation Mode" @kind object;
  #L15b794.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b79a.  throw v3;
  #L15b79c.  v4:= v4 ^| 512;
  #L15b7a0.  call temp:= `init_context`(v3, v4) @signature `Lcom/konasl/security/service/des3/Des3CipherJni;.init_context:([BI)J` @kind static;
  #L15b7a6.  v0:= temp @kind wide;
  #L15b7a8.  v2.`com.konasl.security.service.des3.Des3CipherJni.context` @type ^`long` := v0 @kind wide;
  #L15b7ac.  v2.`com.konasl.security.service.des3.Des3CipherJni.option` @type ^`int` := v4;
  #L15b7b0.  return @kind void;
}
