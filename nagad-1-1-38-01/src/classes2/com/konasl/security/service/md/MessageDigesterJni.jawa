record `com.konasl.security.service.md.MessageDigesterJni` @kind class @AccessFlag PUBLIC extends `com.konasl.security.service.md.a` @kind interface {
}
procedure `void` `<init>`(`com.konasl.security.service.md.MessageDigesterJni` v0 @kind this) @signature `Lcom/konasl/security/service/md/MessageDigesterJni;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15b954.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b95a.  return @kind void;
}
procedure `byte`[][] `hash`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lcom/konasl/security/service/md/MessageDigesterJni;.hash:([BI)[[B` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `byte`[] `digest`(`com.konasl.security.service.md.MessageDigesterJni` v0 @kind this, `byte`[] v1 @kind object, `int` v2 ) @signature `Lcom/konasl/security/service/md/MessageDigesterJni;.digest:([BI)[B` @AccessFlag PUBLIC {
    temp;

  #L15b8c8.  call temp:= `hash`(v0, v1, v2) @signature `Lcom/konasl/security/service/md/MessageDigesterJni;.hash:([BI)[[B` @kind direct;
  #L15b8ce.  v1:= temp @kind object;
  #L15b8d0.  if v1 != 0 then goto L15b8d8;
  #L15b8d4.  v2:= 0I;
  #L15b8d6.  goto L15b8de;
  #L15b8d8.  v2:= 0I;
  #L15b8da.  v2:= v1[v2] @kind object;
  #L15b8de.  call temp:= `extractStatusCode`(v2) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15b8e4.  v2:= temp;
  #L15b8e6.  if v2 != 0 then goto L15b8f2;
  #L15b8ea.  v2:= 1I;
  #L15b8ec.  v1:= v1[v2] @kind object;
  #L15b8f0.  return v1 @kind object;
  #L15b8f2.  v1:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b8f6.  v2:= "Message Digestion Failed" @kind object;
  #L15b8fa.  call `<init>`(v1, v2) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b900.  throw v1;
}
procedure `byte`[] `sha1`(`com.konasl.security.service.md.MessageDigesterJni` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/konasl/security/service/md/MessageDigesterJni;.sha1:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b914.  v0:= 4194304I;
  #L15b918.  call temp:= `digest`(v1, v2, v0) @signature `Lcom/konasl/security/service/md/MessageDigesterJni;.digest:([BI)[B` @kind virtual;
  #L15b91e.  v2:= temp @kind object;
  #L15b920.  return v2 @kind object;
}
procedure `byte`[] `sha256`(`com.konasl.security.service.md.MessageDigesterJni` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/konasl/security/service/md/MessageDigesterJni;.sha256:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b934.  v0:= 6291456I;
  #L15b938.  call temp:= `digest`(v1, v2, v0) @signature `Lcom/konasl/security/service/md/MessageDigesterJni;.digest:([BI)[B` @kind virtual;
  #L15b93e.  v2:= temp @kind object;
  #L15b940.  return v2 @kind object;
}
