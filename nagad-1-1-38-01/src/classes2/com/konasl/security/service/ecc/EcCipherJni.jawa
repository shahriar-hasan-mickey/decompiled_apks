record `com.konasl.security.service.ecc.EcCipherJni` @kind class @AccessFlag PUBLIC extends `com.konasl.security.service.ecc.a` @kind interface {
  `long` `com.konasl.security.service.ecc.EcCipherJni.context` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.konasl.security.service.ecc.EcCipherJni` v0 @kind this) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15b874.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b87a.  return @kind void;
}
procedure `byte`[][] `compute_shared_secret`(`long` v0 , `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.compute_shared_secret:(J[B[BI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `void` `destroy_context`(`long` v0 ) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.destroy_context:(J)V` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[][] `generate_key_pair`(`long` v0 , `int` v2 ) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.generate_key_pair:(JI)[[B` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `long` `init_context`(`int` v0 ) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.init_context:(I)J` @AccessFlag PRIVATE_STATIC_NATIVE {

  # return;
}
procedure `byte`[] `deriveSharedKey`(`com.konasl.security.service.ecc.EcCipherJni` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.deriveSharedKey:([B[BI)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b7c4.  v0:= v2.`com.konasl.security.service.ecc.EcCipherJni.context` @type ^`long` @kind wide;
  #L15b7c8.  call temp:= `compute_shared_secret`(v0, v3, v4, v5) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.compute_shared_secret:(J[B[BI)[[B` @kind static;
  #L15b7ce.  v3:= temp @kind object;
  #L15b7d0.  if v3 != 0 then goto L15b7d8;
  #L15b7d4.  v4:= 0I;
  #L15b7d6.  goto L15b7de;
  #L15b7d8.  v4:= 0I;
  #L15b7da.  v4:= v3[v4] @kind object;
  #L15b7de.  call temp:= `extractStatusCode`(v4) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15b7e4.  v4:= temp;
  #L15b7e6.  if v4 != 0 then goto L15b7f2;
  #L15b7ea.  v4:= 1I;
  #L15b7ec.  v3:= v3[v4] @kind object;
  #L15b7f0.  return v3 @kind object;
  #L15b7f2.  v3:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b7f6.  v4:= "ECC SharedKey Derivation Failed" @kind object;
  #L15b7fa.  call `<init>`(v3, v4) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b800.  throw v3;
}
procedure `void` `destroy`(`com.konasl.security.service.ecc.EcCipherJni` v2 @kind this) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.destroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b88c.  v0:= v2.`com.konasl.security.service.ecc.EcCipherJni.context` @type ^`long` @kind wide;
  #L15b890.  call `destroy_context`(v0) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.destroy_context:(J)V` @kind static;
  #L15b896.  return @kind void;
}
procedure `byte`[][] `generateKeyPair`(`com.konasl.security.service.ecc.EcCipherJni` v5 @kind this, `int` v6 ) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.generateKeyPair:(I)[[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15b814.  v0:= v5.`com.konasl.security.service.ecc.EcCipherJni.context` @type ^`long` @kind wide;
  #L15b818.  call temp:= `generate_key_pair`(v0, v6) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.generate_key_pair:(JI)[[B` @kind static;
  #L15b81e.  v6:= temp @kind object;
  #L15b820.  v0:= 0I;
  #L15b822.  if v6 != 0 then goto L15b82a;
  #L15b826.  v1:= 0I;
  #L15b828.  goto L15b82e;
  #L15b82a.  v1:= v6[v0] @kind object;
  #L15b82e.  call temp:= `extractStatusCode`(v1) @signature `Le/b/b/b/a;.extractStatusCode:([B)S` @kind static;
  #L15b834.  v1:= temp;
  #L15b836.  if v1 != 0 then goto L15b854;
  #L15b83a.  v1:= 2I;
  #L15b83c.  v2:= new `byte`[][v1];
  #L15b840.  v3:= 1I;
  #L15b842.  v4:= v6[v3] @kind object;
  #L15b846.  v2[v0]:= v4 @kind object;
  #L15b84a.  v6:= v6[v1] @kind object;
  #L15b84e.  v2[v3]:= v6 @kind object;
  #L15b852.  return v2 @kind object;
  #L15b854.  v6:= new `com.konasl.security.exception.KonaCipherException`;
  #L15b858.  v0:= "ECC Key Generation Failed" @kind object;
  #L15b85c.  call `<init>`(v6, v0) @signature `Lcom/konasl/security/exception/KonaCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b862.  throw v6;
}
procedure `void` `init`(`com.konasl.security.service.ecc.EcCipherJni` v2 @kind this, `int` v3 ) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.init:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b8a8.  call temp:= `init_context`(v3) @signature `Lcom/konasl/security/service/ecc/EcCipherJni;.init_context:(I)J` @kind static;
  #L15b8ae.  v0:= temp @kind wide;
  #L15b8b0.  v2.`com.konasl.security.service.ecc.EcCipherJni.context` @type ^`long` := v0 @kind wide;
  #L15b8b4.  return @kind void;
}
