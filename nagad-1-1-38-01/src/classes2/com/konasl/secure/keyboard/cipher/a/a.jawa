record `com.konasl.secure.keyboard.cipher.a.a` @kind class @AccessFlag PUBLIC extends `com.konasl.secure.keyboard.cipher.a.b` @kind interface {
  `byte`[] `com.konasl.secure.keyboard.cipher.a.a.a` @AccessFlag PRIVATE;
  `byte`[] `com.konasl.secure.keyboard.cipher.a.a.b` @AccessFlag PRIVATE;
  `e.b.b.a.c` `com.konasl.secure.keyboard.cipher.a.a.c` @AccessFlag PRIVATE;
  `com.konasl.security.service.ecc.a` `com.konasl.secure.keyboard.cipher.a.a.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.konasl.secure.keyboard.cipher.a.a` v4 @kind this, `byte`[] v5 @kind object, `byte`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.<init>:([B[B[B)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L159dc4.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L159dca.  call temp:= `getInstance`() @signature `Le/b/b/a/b;.getInstance:()Le/b/b/a/b;` @kind static;
  #L159dd0.  v0:= temp @kind object;
  #L159dd2.  call temp:= `newEcCipher`(v0) @signature `Le/b/b/a/b;.newEcCipher:()Lcom/konasl/security/service/ecc/a;` @kind virtual;
  #L159dd8.  v1:= temp @kind object;
  #L159dda.  v4.`com.konasl.secure.keyboard.cipher.a.a.d` @type ^`com.konasl.security.service.ecc.a` := v1 @kind object;
  #L159dde.  v1:= v4.`com.konasl.secure.keyboard.cipher.a.a.d` @type ^`com.konasl.security.service.ecc.a` @kind object;
  #L159de2.  v2:= 311296I;
  #L159de8.  call `init`(v1, v2) @signature `Lcom/konasl/security/service/ecc/a;.init:(I)V` @kind interface;
  #L159dee.  if v7 == 0 then goto L159e66;
  #L159df2.  if v5 != 0 then goto L159e28;
  #L159df6.  if v6 != 0 then goto L159e28;
  #L159dfa.  v5:= v4.`com.konasl.secure.keyboard.cipher.a.a.d` @type ^`com.konasl.security.service.ecc.a` @kind object;
  #L159dfe.  v6:= 262144I;
  #L159e02.  call temp:= `generateKeyPair`(v5, v6) @signature `Lcom/konasl/security/service/ecc/a;.generateKeyPair:(I)[[B` @kind interface;
  #L159e08.  v5:= temp @kind object;
  #L159e0a.  v6:= 0I;
  #L159e0c.  v6:= v5[v6] @kind object;
  #L159e10.  v1:= 1I;
  #L159e12.  v5:= v5[v1] @kind object;
  #L159e16.  goto L159e2e;
  #L159e18.  v5:= new `com.konasl.secure.keyboard.cipher.exception.KeyboardCipherException`;
  #L159e1c.  v6:= "Can not generate Keypair" @kind object;
  #L159e20.  call `<init>`(v5, v6) @signature `Lcom/konasl/secure/keyboard/cipher/exception/KeyboardCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L159e26.  throw v5;
  #L159e28.  v3:= v6 @kind object;
  #L159e2a.  v6:= v5 @kind object;
  #L159e2c.  v5:= v3 @kind object;
  #L159e2e.  v4.`com.konasl.secure.keyboard.cipher.a.a.a` @type ^`byte`[] := v5 @kind object;
  #L159e32.  call temp:= `a`(v4, v6, v7) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.a:([B[B)[B` @kind direct;
  #L159e38.  v5:= temp @kind object;
  #L159e3a.  v4.`com.konasl.secure.keyboard.cipher.a.a.b` @type ^`byte`[] := v5 @kind object;
  #L159e3e.  call temp:= `newKisaSeedCipher`(v0) @signature `Le/b/b/a/b;.newKisaSeedCipher:()Lcom/konasl/security/service/seed/a;` @kind virtual;
  #L159e44.  v5:= temp @kind object;
  #L159e46.  v4.`com.konasl.secure.keyboard.cipher.a.a.c` @type ^`e.b.b.a.c` := v5 @kind object;
  #L159e4a.  v5:= v4.`com.konasl.secure.keyboard.cipher.a.a.c` @type ^`e.b.b.a.c` @kind object;
  #L159e4e.  v6:= v4.`com.konasl.secure.keyboard.cipher.a.a.b` @type ^`byte`[] @kind object;
  #L159e52.  v7:= 528I;
  #L159e56.  call `init`(v5, v6, v7) @signature `Le/b/b/a/c;.init:([BI)V` @kind interface;
  #L159e5c.  goto L159e66;
  #L159e5e.  v5:= Exception @type ^`com.konasl.security.exception.KonaCipherException` @kind object;
  #L159e60.  call `printStackTrace`(v5) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L159e66.  return @kind void;
  catch `com.konasl.security.exception.KonaCipherException` @[L159dfa..L159e0a] goto L159e18;
  catch `com.konasl.security.exception.KonaCipherException` @[L159e32..L159e5c] goto L159e5e;
}
procedure `byte`[] `a`(`com.konasl.secure.keyboard.cipher.a.a` v4 @kind this, `byte`[] v5 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.a:([B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L159ba0.  v0:= 1I;
  #L159ba2.  v1:= new `byte`[v0];
  #L159ba6.  v2:= 0I;
  #L159ba8.  v1[v2]:= v0 @kind byte;
  #L159bac.  v3:= 3I;
  #L159bae.  v3:= new `byte`[][v3];
  #L159bb2.  v3[v2]:= v1 @kind object;
  #L159bb6.  v1:= v4.`com.konasl.secure.keyboard.cipher.a.a.a` @type ^`byte`[] @kind object;
  #L159bba.  v3[v0]:= v1 @kind object;
  #L159bbe.  if v5 == 0 then goto L159bc4;
  #L159bc2.  goto L159bc8;
  #L159bc4.  v5:= new `byte`[v2];
  #L159bc8.  v0:= 2I;
  #L159bca.  v3[v0]:= v5 @kind object;
  #L159bce.  call temp:= `concat`(v3) @signature `Le/b/b/b/a;.concat:([[B)[B` @kind static;
  #L159bd4.  v5:= temp @kind object;
  #L159bd6.  return v5 @kind object;
}
procedure `byte`[] `a`(`com.konasl.secure.keyboard.cipher.a.a` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.a:([B[B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L159b08.  v0:= v2.`com.konasl.secure.keyboard.cipher.a.a.d` @type ^`com.konasl.security.service.ecc.a` @kind object;
  #L159b0c.  v1:= 6553600I;
  #L159b10.  call temp:= `deriveSharedKey`(v0, v3, v4, v1) @signature `Lcom/konasl/security/service/ecc/a;.deriveSharedKey:([B[BI)[B` @kind interface;
  #L159b16.  v3:= temp @kind object;
  #L159b18.  v4:= 0I;
  #L159b1a.  v0:= 16I;
  #L159b1e.  call temp:= `subArray`(v3, v4, v0) @signature `Le/b/b/b/a;.subArray:([BII)[B` @kind static;
  #L159b24.  v3:= temp @kind object;
  #L159b26.  return v3 @kind object;
  #L159b28.  v3:= new `com.konasl.secure.keyboard.cipher.exception.KeyboardCipherException`;
  #L159b2c.  v4:= "Can not derive session key" @kind object;
  #L159b30.  call `<init>`(v3, v4) @signature `Lcom/konasl/secure/keyboard/cipher/exception/KeyboardCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L159b36.  throw v3;
  catch `com.konasl.security.exception.KonaCipherException` @[L159b08..L159b18] goto L159b28;
}
procedure `byte`[] `b`(`com.konasl.secure.keyboard.cipher.a.a` v4 @kind this, `byte`[] v5 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.b:([B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L159be8.  v0:= 0I;
  #L159bea.  v1:= v5[v0] @kind byte;
  #L159bee.  v2:= "Unsupported Encoding" @kind object;
  #L159bf2.  v3:= 1I;
  #L159bf4.  if v1 != v3 then goto L159c1e;
  #L159bf8.  v1:= 89I;
  #L159bfc.  v3:= length @variable v5;
  #L159bfe.  if v3 < v1 then goto L159c12;
  #L159c02.  v2:= length @variable v5;
  #L159c04.  v2:= v2 - v1 @kind int;
  #L159c06.  v3:= new `byte`[v2];
  #L159c0a.  call `copyArray`(v5, v1, v3, v0, v2) @signature `Le/b/b/b/a;.copyArray:([BI[BII)V` @kind static;
  #L159c10.  return v3 @kind object;
  #L159c12.  v5:= new `java.lang.IllegalArgumentException`;
  #L159c16.  call `<init>`(v5, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L159c1c.  throw v5;
  #L159c1e.  v5:= new `java.lang.IllegalArgumentException`;
  #L159c22.  call `<init>`(v5, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L159c28.  throw v5;
}
procedure `byte`[] `c`(`com.konasl.secure.keyboard.cipher.a.a` v3 @kind this, `byte`[] v4 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.c:([B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L159c3c.  if v4 == 0 then goto L159c9c;
  #L159c40.  v0:= length @variable v4;
  #L159c42.  v1:= 89I;
  #L159c46.  if v0 < v1 then goto L159c9c;
  #L159c4a.  v0:= 0I;
  #L159c4c.  v0:= v4[v0] @kind byte;
  #L159c50.  v1:= 1I;
  #L159c52.  if v0 != v1 then goto L159c64;
  #L159c56.  v0:= 88I;
  #L159c5a.  call temp:= `subArray`(v4, v1, v0) @signature `Le/b/b/b/a;.subArray:([BII)[B` @kind static;
  #L159c60.  v4:= temp @kind object;
  #L159c62.  return v4 @kind object;
  #L159c64.  v4:= new `com.konasl.secure.keyboard.cipher.exception.KeyboardCipherException`;
  #L159c68.  v1:= new `java.lang.StringBuilder`;
  #L159c6c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159c72.  v2:= "Keyboard version " @kind object;
  #L159c76.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159c7c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L159c82.  v0:= " not supported" @kind object;
  #L159c86.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159c8c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159c92.  v0:= temp @kind object;
  #L159c94.  call `<init>`(v4, v0) @signature `Lcom/konasl/secure/keyboard/cipher/exception/KeyboardCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L159c9a.  throw v4;
  #L159c9c.  v4:= new `com.konasl.secure.keyboard.cipher.exception.KeyboardCipherException`;
  #L159ca0.  v0:= "Could not find public from encoded data" @kind object;
  #L159ca4.  call `<init>`(v4, v0) @signature `Lcom/konasl/secure/keyboard/cipher/exception/KeyboardCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L159caa.  throw v4;
}
procedure `com.konasl.secure.keyboard.cipher.a.a` `newInstance`() @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.newInstance:()Lcom/konasl/secure/keyboard/cipher/a/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L159d00.  v0:= new `com.konasl.secure.keyboard.cipher.a.a`;
  #L159d04.  v1:= 0I;
  #L159d06.  call `<init>`(v0, v1, v1, v1) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.<init>:([B[B[B)V` @kind direct;
  #L159d0c.  return v0 @kind object;
}
procedure `com.konasl.secure.keyboard.cipher.a.a` `newInstanceWithGeneratedOwnKey`(`byte`[] v2 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.newInstanceWithGeneratedOwnKey:([B)Lcom/konasl/secure/keyboard/cipher/a/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L159d20.  v0:= new `com.konasl.secure.keyboard.cipher.a.a`;
  #L159d24.  v1:= 0I;
  #L159d26.  call `<init>`(v0, v1, v1, v2) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.<init>:([B[B[B)V` @kind direct;
  #L159d2c.  return v0 @kind object;
}
procedure `java.lang.String` `decode`(`com.konasl.secure.keyboard.cipher.a.a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.decode:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L159d40.  call temp:= `fromHex`(v1) @signature `Le/b/b/b/a;.fromHex:(Ljava/lang/String;)[B` @kind static;
  #L159d46.  v1:= temp @kind object;
  #L159d48.  call temp:= `decode`(v0, v1) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.decode:([B)[B` @kind virtual;
  #L159d4e.  v1:= temp @kind object;
  #L159d50.  call temp:= `toStringFromUtf`(v1) @signature `Le/b/b/b/a;.toStringFromUtf:([B)Ljava/lang/String;` @kind static;
  #L159d56.  v1:= temp @kind object;
  #L159d58.  return v1 @kind object;
}
procedure `java.lang.String` `decode`(`com.konasl.secure.keyboard.cipher.a.a` v0 @kind this, `java.lang.String` v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.decode:(Ljava/lang/String;[B)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L159d6c.  call temp:= `fromHex`(v1) @signature `Le/b/b/b/a;.fromHex:(Ljava/lang/String;)[B` @kind static;
  #L159d72.  v1:= temp @kind object;
  #L159d74.  call temp:= `decode`(v0, v1, v2) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.decode:([B[B)[B` @kind virtual;
  #L159d7a.  v1:= temp @kind object;
  #L159d7c.  call temp:= `toStringFromUtf`(v1) @signature `Le/b/b/b/a;.toStringFromUtf:([B)Ljava/lang/String;` @kind static;
  #L159d82.  v1:= temp @kind object;
  #L159d84.  return v1 @kind object;
}
procedure `byte`[] `decode`(`com.konasl.secure.keyboard.cipher.a.a` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.decode:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L159a4c.  call temp:= `b`(v2, v3) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.b:([B)[B` @kind direct;
  #L159a52.  v3:= temp @kind object;
  #L159a54.  v0:= v2.`com.konasl.secure.keyboard.cipher.a.a.c` @type ^`e.b.b.a.c` @kind object;
  #L159a58.  call temp:= `decrypt`(v0, v3) @signature `Le/b/b/a/c;.decrypt:([B)[B` @kind interface;
  #L159a5e.  v3:= temp @kind object;
  #L159a60.  return v3 @kind object;
  #L159a62.  v3:= Exception @type ^`com.konasl.security.exception.KonaCipherException` @kind object;
  #L159a64.  v0:= new `com.konasl.secure.keyboard.cipher.exception.KeyboardCipherException`;
  #L159a68.  v1:= "Can not decode provided buffer" @kind object;
  #L159a6c.  call `<init>`(v0, v1, v3) @signature `Lcom/konasl/secure/keyboard/cipher/exception/KeyboardCipherException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L159a72.  throw v0;
  catch `com.konasl.security.exception.KonaCipherException` @[L159a54..L159a60] goto L159a62;
}
procedure `byte`[] `decode`(`com.konasl.secure.keyboard.cipher.a.a` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.decode:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L159a94.  call temp:= `c`(v2, v3) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.c:([B)[B` @kind direct;
  #L159a9a.  v0:= temp @kind object;
  #L159a9c.  call temp:= `getInstance`() @signature `Le/b/b/a/b;.getInstance:()Le/b/b/a/b;` @kind static;
  #L159aa2.  v1:= temp @kind object;
  #L159aa4.  call temp:= `newKisaSeedCipher`(v1) @signature `Le/b/b/a/b;.newKisaSeedCipher:()Lcom/konasl/security/service/seed/a;` @kind virtual;
  #L159aaa.  v1:= temp @kind object;
  #L159aac.  call temp:= `a`(v2, v4, v0) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.a:([B[B)[B` @kind direct;
  #L159ab2.  v4:= temp @kind object;
  #L159ab4.  v0:= 528I;
  #L159ab8.  call `init`(v1, v4, v0) @signature `Le/b/b/a/c;.init:([BI)V` @kind interface;
  #L159abe.  call temp:= `b`(v2, v3) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.b:([B)[B` @kind direct;
  #L159ac4.  v3:= temp @kind object;
  #L159ac6.  call temp:= `decrypt`(v1, v3) @signature `Le/b/b/a/c;.decrypt:([B)[B` @kind interface;
  #L159acc.  v3:= temp @kind object;
  #L159ace.  call `destroy`(v1) @signature `Le/b/b/a/c;.destroy:()V` @kind interface;
  #L159ad4.  return v3 @kind object;
  #L159ad6.  v3:= new `com.konasl.secure.keyboard.cipher.exception.KeyboardCipherException`;
  #L159ada.  v4:= "Cannot decrypt keyboard input buffer" @kind object;
  #L159ade.  call `<init>`(v3, v4) @signature `Lcom/konasl/secure/keyboard/cipher/exception/KeyboardCipherException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L159ae4.  throw v3;
  catch `com.konasl.security.exception.KonaCipherException` @[L159ab8..L159ad4] goto L159ad6;
}
procedure `void` `destroy`(`com.konasl.secure.keyboard.cipher.a.a` v1 @kind this) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.destroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159e94.  v0:= v1.`com.konasl.secure.keyboard.cipher.a.a.d` @type ^`com.konasl.security.service.ecc.a` @kind object;
  #L159e98.  call `destroy`(v0) @signature `Lcom/konasl/security/service/ecc/a;.destroy:()V` @kind interface;
  #L159e9e.  v0:= v1.`com.konasl.secure.keyboard.cipher.a.a.c` @type ^`e.b.b.a.c` @kind object;
  #L159ea2.  if v0 == 0 then goto L159eac;
  #L159ea6.  call `destroy`(v0) @signature `Le/b/b/a/c;.destroy:()V` @kind interface;
  #L159eac.  return @kind void;
}
procedure `java.lang.String` `encode`(`com.konasl.secure.keyboard.cipher.a.a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.encode:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L159d98.  call temp:= `toUtf8Bytes`(v1) @signature `Le/b/b/b/a;.toUtf8Bytes:(Ljava/lang/String;)[B` @kind static;
  #L159d9e.  v1:= temp @kind object;
  #L159da0.  call temp:= `encode`(v0, v1) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.encode:([B)[B` @kind virtual;
  #L159da6.  v1:= temp @kind object;
  #L159da8.  call temp:= `toHex`(v1) @signature `Le/b/b/b/a;.toHex:([B)Ljava/lang/String;` @kind static;
  #L159dae.  v1:= temp @kind object;
  #L159db0.  return v1 @kind object;
}
procedure `byte`[] `encode`(`com.konasl.secure.keyboard.cipher.a.a` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.encode:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L159b58.  v0:= v2.`com.konasl.secure.keyboard.cipher.a.a.c` @type ^`e.b.b.a.c` @kind object;
  #L159b5c.  call temp:= `encrypt`(v0, v3) @signature `Le/b/b/a/c;.encrypt:([B)[B` @kind interface;
  #L159b62.  v3:= temp @kind object;
  #L159b64.  call temp:= `a`(v2, v3) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.a:([B)[B` @kind direct;
  #L159b6a.  v3:= temp @kind object;
  #L159b6c.  return v3 @kind object;
  #L159b6e.  v3:= Exception @type ^`com.konasl.security.exception.KonaCipherException` @kind object;
  #L159b70.  v0:= new `com.konasl.secure.keyboard.cipher.exception.KeyboardCipherException`;
  #L159b74.  v1:= "Can not encode provided buffer" @kind object;
  #L159b78.  call `<init>`(v0, v1, v3) @signature `Lcom/konasl/secure/keyboard/cipher/exception/KeyboardCipherException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L159b7e.  throw v0;
  catch `com.konasl.security.exception.KonaCipherException` @[L159b58..L159b6c] goto L159b6e;
}
procedure `byte`[][] `generateKeyPair`(`com.konasl.secure.keyboard.cipher.a.a` v3 @kind this) @signature `Lcom/konasl/secure/keyboard/cipher/a/a;.generateKeyPair:()[[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L159cbc.  v0:= v3.`com.konasl.secure.keyboard.cipher.a.a.d` @type ^`com.konasl.security.service.ecc.a` @kind object;
  #L159cc0.  v1:= 262144I;
  #L159cc4.  call temp:= `generateKeyPair`(v0, v1) @signature `Lcom/konasl/security/service/ecc/a;.generateKeyPair:(I)[[B` @kind interface;
  #L159cca.  v0:= temp @kind object;
  #L159ccc.  return v0 @kind object;
  #L159cce.  v0:= Exception @type ^`com.konasl.security.exception.KonaCipherException` @kind object;
  #L159cd0.  v1:= new `com.konasl.secure.keyboard.cipher.exception.KeyboardCipherException`;
  #L159cd4.  v2:= "Can not generate Keypair" @kind object;
  #L159cd8.  call `<init>`(v1, v2, v0) @signature `Lcom/konasl/secure/keyboard/cipher/exception/KeyboardCipherException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L159cde.  throw v1;
  catch `com.konasl.security.exception.KonaCipherException` @[L159cbc..L159ccc] goto L159cce;
}
