record `com.konasl.konapayment.sdk.card.TlvParser` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.konasl.konapayment.sdk.card.TlvParser` v0 @kind this) @signature `Lcom/konasl/konapayment/sdk/card/TlvParser;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L107d94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L107d9a.  return @kind void;
}
procedure `byte` `checkLenLength`(`byte` v0 ) @signature `Lcom/konasl/konapayment/sdk/card/TlvParser;.checkLenLength:(B)B` @AccessFlag PRIVATE_STATIC {
    temp;

  #L107bb0.  if v0 < 0 then goto L107bb8;
  #L107bb4.  v0:= 0I;
  #L107bb6.  return v0;
  #L107bb8.  v0:= v0 ^& 255;
  #L107bbc.  v0:= v0 + -128;
  #L107bc0.  v0:= (`byte`) v0 @kind i2b;
  #L107bc2.  return v0;
}
procedure `byte` `checkTagLength`(`byte` v1 ) @signature `Lcom/konasl/konapayment/sdk/card/TlvParser;.checkTagLength:(B)B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L107bd4.  v0:= 31I;
  #L107bd8.  v1:= v1 ^& v0 @kind int;
  #L107bda.  if v1 != v0 then goto L107be2;
  #L107bde.  v1:= 2I;
  #L107be0.  return v1;
  #L107be2.  v1:= 1I;
  #L107be4.  return v1;
}
procedure `com.konasl.konapayment.sdk.card.Tlv`[] `decodeTlv`(`byte`[] v11 @kind object) @signature `Lcom/konasl/konapayment/sdk/card/TlvParser;.decodeTlv:([B)[Lcom/konasl/konapayment/sdk/card/Tlv;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L107c6c.  v0:= length @variable v11;
  #L107c6e.  v1:= new `java.util.ArrayList`;
  #L107c72.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L107c78.  v2:= 0I;
  #L107c7a.  v3:= 0I;
  #L107c7c.  if v0 <= 0 then goto L107d38;
  #L107c80.  v4:= v11[v3] @kind byte;
  #L107c84.  call temp:= `checkTagLength`(v4) @signature `Lcom/konasl/konapayment/sdk/card/TlvParser;.checkTagLength:(B)B` @kind static;
  #L107c8a.  v4:= temp;
  #L107c8c.  v5:= new `byte`[v4];
  #L107c90.  v6:= v3;
  #L107c92.  v3:= 0I;
  #L107c94.  if v3 >= v4 then goto L107caa;
  #L107c98.  v7:= v11[v6] @kind byte;
  #L107c9c.  v5[v3]:= v7 @kind byte;
  #L107ca0.  v3:= v3 + 1;
  #L107ca4.  v6:= v6 + 1;
  #L107ca8.  goto L107c94;
  #L107caa.  v3:= v11[v6] @kind byte;
  #L107cae.  call temp:= `checkLenLength`(v3) @signature `Lcom/konasl/konapayment/sdk/card/TlvParser;.checkLenLength:(B)B` @kind static;
  #L107cb4.  v3:= temp;
  #L107cb6.  if v3 != 0 then goto L107cc4;
  #L107cba.  v7:= v6 + 1;
  #L107cbe.  v6:= v11[v6] @kind byte;
  #L107cc2.  goto L107cf0;
  #L107cc4.  v6:= v6 + 1;
  #L107cc8.  v8:= v6;
  #L107cca.  v6:= 0I;
  #L107ccc.  v7:= 0I;
  #L107cce.  if v6 >= v3 then goto L107cec;
  #L107cd2.  v7:= v7 ^< 8;
  #L107cd6.  v9:= v8 + 1;
  #L107cda.  v8:= v11[v8] @kind byte;
  #L107cde.  v8:= v8 ^& 255;
  #L107ce2.  v7:= v7 + v8 @kind int;
  #L107ce4.  v6:= v6 + 1;
  #L107ce8.  v8:= v9;
  #L107cea.  goto L107cce;
  #L107cec.  v6:= v7;
  #L107cee.  v7:= v8;
  #L107cf0.  v8:= new `byte`[v6];
  #L107cf4.  v9:= v7;
  #L107cf6.  v7:= 0I;
  #L107cf8.  if v7 >= v6 then goto L107d0e;
  #L107cfc.  v10:= v11[v9] @kind byte;
  #L107d00.  v8[v7]:= v10 @kind byte;
  #L107d04.  v7:= v7 + 1;
  #L107d08.  v9:= v9 + 1;
  #L107d0c.  goto L107cf8;
  #L107d0e.  v4:= v4 + v3 @kind int;
  #L107d10.  v4:= v4 + v6 @kind int;
  #L107d12.  v4:= v4 + 1;
  #L107d16.  v0:= v0 - v4 @kind int;
  #L107d18.  v3:= new `com.konasl.konapayment.sdk.card.Tlv`;
  #L107d1c.  call `<init>`(v3, v5, v8) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.<init>:([B[B)V` @kind direct;
  #L107d22.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L107d28.  v3:= v9;
  #L107d2a.  goto L107c7c;
  #L107d2c.  v11:= new `com.konasl.konapayment.sdk.card.TlvException`;
  #L107d30.  call `<init>`(v11) @signature `Lcom/konasl/konapayment/sdk/card/TlvException;.<init>:()V` @kind direct;
  #L107d36.  throw v11;
  #L107d38.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L107d3e.  v11:= temp;
  #L107d40.  v11:= new `com.konasl.konapayment.sdk.card.Tlv`[v11];
  #L107d44.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L107d4a.  v0:= temp @kind object;
  #L107d4c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L107d52.  v1:= temp;
  #L107d54.  if v1 == 0 then goto L107d70;
  #L107d58.  v1:= v2 + 1;
  #L107d5c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L107d62.  v3:= temp @kind object;
  #L107d64.  v3:= (`com.konasl.konapayment.sdk.card.Tlv`) v3 @kind object;
  #L107d68.  v11[v2]:= v3 @kind object;
  #L107d6c.  v2:= v1;
  #L107d6e.  goto L107d4c;
  #L107d70.  return v11 @kind object;
  catch `java.lang.Exception` @[L107c80..L107d28] goto L107d2c;
}
procedure `byte`[] `encodeTlv`(`com.konasl.konapayment.sdk.card.Tlv`[] v8 @kind object) @signature `Lcom/konasl/konapayment/sdk/card/TlvParser;.encodeTlv:([Lcom/konasl/konapayment/sdk/card/Tlv;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L107bf8.  v0:= 0I;
  #L107bfa.  v1:= 0I;
  #L107bfc.  v2:= 0I;
  #L107bfe.  v3:= length @variable v8;
  #L107c00.  if v1 >= v3 then goto L107c1a;
  #L107c04.  v3:= v8[v1] @kind object;
  #L107c08.  call temp:= `getEncoded`(v3) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.getEncoded:()[B` @kind virtual;
  #L107c0e.  v3:= temp @kind object;
  #L107c10.  v3:= length @variable v3;
  #L107c12.  v2:= v2 + v3 @kind int;
  #L107c14.  v1:= v1 + 1;
  #L107c18.  goto L107bfe;
  #L107c1a.  v1:= new `byte`[v2];
  #L107c1e.  v2:= 0I;
  #L107c20.  v3:= 0I;
  #L107c22.  v4:= length @variable v8;
  #L107c24.  if v2 >= v4 then goto L107c5a;
  #L107c28.  v4:= v8[v2] @kind object;
  #L107c2c.  call temp:= `getEncoded`(v4) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.getEncoded:()[B` @kind virtual;
  #L107c32.  v4:= temp @kind object;
  #L107c34.  v5:= v3;
  #L107c36.  v3:= 0I;
  #L107c38.  v6:= length @variable v4;
  #L107c3a.  if v3 >= v6 then goto L107c52;
  #L107c3e.  v6:= v5 + 1;
  #L107c42.  v7:= v4[v3] @kind byte;
  #L107c46.  v1[v5]:= v7 @kind byte;
  #L107c4a.  v3:= v3 + 1;
  #L107c4e.  v5:= v6;
  #L107c50.  goto L107c38;
  #L107c52.  v2:= v2 + 1;
  #L107c56.  v3:= v5;
  #L107c58.  goto L107c22;
  #L107c5a.  return v1 @kind object;
}
