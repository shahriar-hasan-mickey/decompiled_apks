record `com.konasl.konapayment.sdk.card.Tlv` @kind class @AccessFlag PUBLIC {
  `int` `com.konasl.konapayment.sdk.card.Tlv.length` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.konasl.konapayment.sdk.card.Tlv.tag` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.konasl.konapayment.sdk.card.Tlv.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.konasl.konapayment.sdk.card.Tlv` v0 @kind this, `java.lang.String` v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.<init>:(Ljava/lang/String;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L108000.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L108006.  call temp:= `convertHexStringToBytes`(v1) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.convertHexStringToBytes:(Ljava/lang/String;)[B` @kind static;
  #L10800c.  v1:= temp @kind object;
  #L10800e.  v0.`com.konasl.konapayment.sdk.card.Tlv.tag` @type ^`byte`[] := v1 @kind object;
  #L108012.  if v2 != 0 then goto L10801e;
  #L108016.  v1:= 0I;
  #L108018.  v0.`com.konasl.konapayment.sdk.card.Tlv.value` @type ^`byte`[] := v1 @kind object;
  #L10801c.  goto L10802e;
  #L10801e.  call temp:= `clone`(v2) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L108024.  v1:= temp @kind object;
  #L108026.  v1:= (`byte`[]) v1 @kind object;
  #L10802a.  v0.`com.konasl.konapayment.sdk.card.Tlv.value` @type ^`byte`[] := v1 @kind object;
  #L10802e.  v1:= length @variable v2;
  #L108030.  v0.`com.konasl.konapayment.sdk.card.Tlv.length` @type ^`int` := v1;
  #L108034.  return @kind void;
}
procedure `void` `<init>`(`com.konasl.konapayment.sdk.card.Tlv` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.<init>:([B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L107fac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L107fb2.  v0:= 0I;
  #L107fb4.  if v2 != 0 then goto L107fbe;
  #L107fb8.  v1.`com.konasl.konapayment.sdk.card.Tlv.tag` @type ^`byte`[] := v0 @kind object;
  #L107fbc.  goto L107fce;
  #L107fbe.  call temp:= `clone`(v2) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L107fc4.  v2:= temp @kind object;
  #L107fc6.  v2:= (`byte`[]) v2 @kind object;
  #L107fca.  v1.`com.konasl.konapayment.sdk.card.Tlv.tag` @type ^`byte`[] := v2 @kind object;
  #L107fce.  if v3 != 0 then goto L107fd8;
  #L107fd2.  v1.`com.konasl.konapayment.sdk.card.Tlv.value` @type ^`byte`[] := v0 @kind object;
  #L107fd6.  goto L107fe8;
  #L107fd8.  call temp:= `clone`(v3) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L107fde.  v2:= temp @kind object;
  #L107fe0.  v2:= (`byte`[]) v2 @kind object;
  #L107fe4.  v1.`com.konasl.konapayment.sdk.card.Tlv.value` @type ^`byte`[] := v2 @kind object;
  #L107fe8.  v2:= length @variable v3;
  #L107fea.  v1.`com.konasl.konapayment.sdk.card.Tlv.length` @type ^`int` := v2;
  #L107fee.  return @kind void;
}
procedure `byte` `charToByte`(`char` v1 , `char` v2 ) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.charToByte:(CC)B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L107dac.  v0:= 16I;
  #L107db0.  call temp:= `digit`(v1, v0) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L107db6.  v1:= temp;
  #L107db8.  v1:= v1 ^< 4;
  #L107dbc.  call temp:= `digit`(v2, v0) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L107dc2.  v2:= temp;
  #L107dc4.  v1:= v1 + v2 @kind int;
  #L107dc6.  v1:= (`byte`) v1 @kind i2b;
  #L107dc8.  return v1;
}
procedure `byte`[] `convertHexStringToBytes`(`java.lang.String` v5 @kind object) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.convertHexStringToBytes:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L107ddc.  if v5 != 0 then goto L107de4;
  #L107de0.  v5:= 0I;
  #L107de2.  return v5 @kind object;
  #L107de4.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L107dea.  v0:= temp;
  #L107dec.  v0:= v0 / 2;
  #L107df0.  v1:= new `byte`[v0];
  #L107df4.  v2:= 0I;
  #L107df6.  if v2 >= v0 then goto L107e24;
  #L107dfa.  v3:= v2 * 2;
  #L107dfe.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L107e04.  v4:= temp;
  #L107e06.  v3:= v3 + 1;
  #L107e0a.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L107e10.  v3:= temp;
  #L107e12.  call temp:= `charToByte`(v4, v3) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.charToByte:(CC)B` @kind static;
  #L107e18.  v3:= temp;
  #L107e1a.  v1[v2]:= v3 @kind byte;
  #L107e1e.  v2:= v2 + 1;
  #L107e22.  goto L107df6;
  #L107e24.  return v1 @kind object;
}
procedure `byte`[] `getEncoded`(`com.konasl.konapayment.sdk.card.Tlv` v9 @kind this) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.getEncoded:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L107e38.  v0:= v9.`com.konasl.konapayment.sdk.card.Tlv.value` @type ^`byte`[] @kind object;
  #L107e3c.  v1:= length @variable v0;
  #L107e3e.  v2:= 256I;
  #L107e42.  v3:= 128I;
  #L107e46.  if v1 < v3 then goto L107e76;
  #L107e4a.  if v1 >= v2 then goto L107e62;
  #L107e4e.  v4:= v9.`com.konasl.konapayment.sdk.card.Tlv.tag` @type ^`byte`[] @kind object;
  #L107e52.  v4:= length @variable v4;
  #L107e54.  v0:= length @variable v0;
  #L107e56.  v4:= v4 + v0 @kind int;
  #L107e58.  v4:= v4 + 2;
  #L107e5c.  v0:= new `byte`[v4];
  #L107e60.  goto L107e88;
  #L107e62.  v4:= v9.`com.konasl.konapayment.sdk.card.Tlv.tag` @type ^`byte`[] @kind object;
  #L107e66.  v4:= length @variable v4;
  #L107e68.  v0:= length @variable v0;
  #L107e6a.  v4:= v4 + v0 @kind int;
  #L107e6c.  v4:= v4 + 3;
  #L107e70.  v0:= new `byte`[v4];
  #L107e74.  goto L107e88;
  #L107e76.  v4:= v9.`com.konasl.konapayment.sdk.card.Tlv.tag` @type ^`byte`[] @kind object;
  #L107e7a.  v4:= length @variable v4;
  #L107e7c.  v0:= length @variable v0;
  #L107e7e.  v4:= v4 + v0 @kind int;
  #L107e80.  v4:= v4 + 1;
  #L107e84.  v0:= new `byte`[v4];
  #L107e88.  v4:= 0I;
  #L107e8a.  v5:= 0I;
  #L107e8c.  v6:= 0I;
  #L107e8e.  v7:= v9.`com.konasl.konapayment.sdk.card.Tlv.tag` @type ^`byte`[] @kind object;
  #L107e92.  v8:= length @variable v7;
  #L107e94.  if v5 >= v8 then goto L107eaa;
  #L107e98.  v7:= v7[v5] @kind byte;
  #L107e9c.  v0[v6]:= v7 @kind byte;
  #L107ea0.  v5:= v5 + 1;
  #L107ea4.  v6:= v6 + 1;
  #L107ea8.  goto L107e8e;
  #L107eaa.  if v1 < v3 then goto L107efe;
  #L107eae.  if v1 >= v2 then goto L107ece;
  #L107eb2.  v2:= v6 + 1;
  #L107eb6.  v3:= -127I;
  #L107eba.  v0[v6]:= v3 @kind byte;
  #L107ebe.  v3:= v2 + 1;
  #L107ec2.  v1:= v1 ^& 255;
  #L107ec6.  v1:= (`byte`) v1 @kind i2b;
  #L107ec8.  v0[v2]:= v1 @kind byte;
  #L107ecc.  goto L107f0c;
  #L107ece.  v2:= v6 + 1;
  #L107ed2.  v3:= -126I;
  #L107ed6.  v0[v6]:= v3 @kind byte;
  #L107eda.  v3:= v2 + 1;
  #L107ede.  v5:= v1 ^>> 8;
  #L107ee2.  v5:= v5 ^& 255;
  #L107ee6.  v5:= (`byte`) v5 @kind i2b;
  #L107ee8.  v0[v2]:= v5 @kind byte;
  #L107eec.  v2:= v3 + 1;
  #L107ef0.  v1:= v1 ^& 255;
  #L107ef4.  v1:= (`byte`) v1 @kind i2b;
  #L107ef6.  v0[v3]:= v1 @kind byte;
  #L107efa.  v3:= v2;
  #L107efc.  goto L107f0c;
  #L107efe.  v3:= v6 + 1;
  #L107f02.  v1:= v1 ^& 255;
  #L107f06.  v1:= (`byte`) v1 @kind i2b;
  #L107f08.  v0[v6]:= v1 @kind byte;
  #L107f0c.  v1:= v9.`com.konasl.konapayment.sdk.card.Tlv.value` @type ^`byte`[] @kind object;
  #L107f10.  v2:= length @variable v1;
  #L107f12.  if v4 >= v2 then goto L107f28;
  #L107f16.  v1:= v1[v4] @kind byte;
  #L107f1a.  v0[v3]:= v1 @kind byte;
  #L107f1e.  v4:= v4 + 1;
  #L107f22.  v3:= v3 + 1;
  #L107f26.  goto L107f0c;
  #L107f28.  return v0 @kind object;
}
procedure `int` `getLength`(`com.konasl.konapayment.sdk.card.Tlv` v1 @kind this) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L107f94.  v0:= v1.`com.konasl.konapayment.sdk.card.Tlv.length` @type ^`int`;
  #L107f98.  return v0;
}
procedure `byte`[] `getTag`(`com.konasl.konapayment.sdk.card.Tlv` v1 @kind this) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.getTag:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L107f3c.  v0:= v1.`com.konasl.konapayment.sdk.card.Tlv.tag` @type ^`byte`[] @kind object;
  #L107f40.  if v0 != 0 then goto L107f48;
  #L107f44.  v0:= 0I;
  #L107f46.  return v0 @kind object;
  #L107f48.  call temp:= `clone`(v0) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L107f4e.  v0:= temp @kind object;
  #L107f50.  v0:= (`byte`[]) v0 @kind object;
  #L107f54.  return v0 @kind object;
}
procedure `byte`[] `getValue`(`com.konasl.konapayment.sdk.card.Tlv` v1 @kind this) @signature `Lcom/konasl/konapayment/sdk/card/Tlv;.getValue:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L107f68.  v0:= v1.`com.konasl.konapayment.sdk.card.Tlv.value` @type ^`byte`[] @kind object;
  #L107f6c.  if v0 != 0 then goto L107f74;
  #L107f70.  v0:= 0I;
  #L107f72.  return v0 @kind object;
  #L107f74.  call temp:= `clone`(v0) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L107f7a.  v0:= temp @kind object;
  #L107f7c.  v0:= (`byte`[]) v0 @kind object;
  #L107f80.  return v0 @kind object;
}
