record `com.konasl.konapayment.sdk.i0.a.f.b` @kind class @AccessFlag PUBLIC {
}
procedure `byte` `a`(`char` v1 , `char` v2 ) @signature `Lcom/konasl/konapayment/sdk/i0/a/f/b;.a:(CC)B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L142d88.  v0:= 16I;
  #L142d8c.  call temp:= `digit`(v1, v0) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L142d92.  v1:= temp;
  #L142d94.  v1:= v1 ^< 4;
  #L142d98.  call temp:= `digit`(v2, v0) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L142d9e.  v2:= temp;
  #L142da0.  v1:= v1 + v2 @kind int;
  #L142da2.  v1:= (`byte`) v1 @kind i2b;
  #L142da4.  return v1;
}
procedure `byte`[] `convertHexStringToBytes`(`java.lang.String` v5 @kind object) @signature `Lcom/konasl/konapayment/sdk/i0/a/f/b;.convertHexStringToBytes:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L142db8.  if v5 != 0 then goto L142dc0;
  #L142dbc.  v5:= 0I;
  #L142dbe.  return v5 @kind object;
  #L142dc0.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L142dc6.  v0:= temp;
  #L142dc8.  v0:= v0 / 2;
  #L142dcc.  v1:= new `byte`[v0];
  #L142dd0.  v2:= 0I;
  #L142dd2.  if v2 >= v0 then goto L142e00;
  #L142dd6.  v3:= v2 * 2;
  #L142dda.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L142de0.  v4:= temp;
  #L142de2.  v3:= v3 + 1;
  #L142de6.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L142dec.  v3:= temp;
  #L142dee.  call temp:= `a`(v4, v3) @signature `Lcom/konasl/konapayment/sdk/i0/a/f/b;.a:(CC)B` @kind static;
  #L142df4.  v3:= temp;
  #L142df6.  v1[v2]:= v3 @kind byte;
  #L142dfa.  v2:= v2 + 1;
  #L142dfe.  goto L142dd2;
  #L142e00.  return v1 @kind object;
}
procedure `java.lang.String` `convertToHex`(`byte`[] v7 @kind object) @signature `Lcom/konasl/konapayment/sdk/i0/a/f/b;.convertToHex:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L142e14.  v0:= new `java.lang.StringBuffer`;
  #L142e18.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L142e1e.  v1:= 0I;
  #L142e20.  v2:= 0I;
  #L142e22.  v3:= length @variable v7;
  #L142e24.  if v2 >= v3 then goto L142e7c;
  #L142e28.  v3:= v7[v2] @kind byte;
  #L142e2c.  v3:= v3 ^>> 4;
  #L142e30.  v3:= v3 ^& 15;
  #L142e34.  v4:= 0I;
  #L142e36.  if v3 < 0 then goto L142e50;
  #L142e3a.  v5:= 9I;
  #L142e3e.  if v3 > v5 then goto L142e50;
  #L142e42.  v3:= v3 + 48;
  #L142e46.  v3:= (`char`) v3 @kind i2c;
  #L142e48.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L142e4e.  goto L142e60;
  #L142e50.  v3:= v3 + -10;
  #L142e54.  v3:= v3 + 65;
  #L142e58.  v3:= (`char`) v3 @kind i2c;
  #L142e5a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L142e60.  v3:= v7[v2] @kind byte;
  #L142e64.  v3:= v3 ^& 15;
  #L142e68.  v5:= v4 + 1;
  #L142e6c.  v6:= 1I;
  #L142e6e.  if v4 < v6 then goto L142e78;
  #L142e72.  v2:= v2 + 1;
  #L142e76.  goto L142e22;
  #L142e78.  v4:= v5;
  #L142e7a.  goto L142e36;
  #L142e7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L142e82.  v7:= temp @kind object;
  #L142e84.  return v7 @kind object;
}
