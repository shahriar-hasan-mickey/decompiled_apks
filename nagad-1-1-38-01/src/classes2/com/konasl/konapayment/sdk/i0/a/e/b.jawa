record `com.konasl.konapayment.sdk.i0.a.e.b` @kind class @AccessFlag PUBLIC extends `com.konasl.konapayment.sdk.i0.a.e.a` @kind interface {
  `com.mastercard.api.crypto.a` `com.konasl.konapayment.sdk.i0.a.e.b.a` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.konasl.konapayment.sdk.i0.a.e.b.b` @AccessFlag PUBLIC_STATIC;
procedure `void` `<init>`(`com.konasl.konapayment.sdk.i0.a.e.b` v1 @kind this) @signature `Lcom/konasl/konapayment/sdk/i0/a/e/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1426bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1426c2.  v0:= new `com.mastercard.api.crypto.a`;
  #L1426c6.  call `<init>`(v0) @signature `Lcom/mastercard/api/crypto/a;.<init>:()V` @kind direct;
  #L1426cc.  v1.`com.konasl.konapayment.sdk.i0.a.e.b.a` @type ^`com.mastercard.api.crypto.a` := v0 @kind object;
  #L1426d0.  return @kind void;
}
procedure `byte`[] `DES3`(`com.konasl.konapayment.sdk.i0.a.e.b` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object, `boolean` v4 ) @signature `Lcom/konasl/konapayment/sdk/i0/a/e/b;.DES3:([B[BZ)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14239c.  v0:= new `e.c.a.a.a`;
  #L1423a0.  call `<init>`(v0, v2) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L1423a6.  v2:= new `e.c.a.a.a`;
  #L1423aa.  call `<init>`(v2, v3) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L1423b0.  v3:= v1.`com.konasl.konapayment.sdk.i0.a.e.b.a` @type ^`com.mastercard.api.crypto.a` @kind object;
  #L1423b4.  call temp:= `DES3`(v3, v0, v2, v4) @signature `Lcom/mastercard/api/crypto/a;.DES3:(Le/c/a/a/c;Le/c/a/a/c;Z)Le/c/a/a/c;` @kind virtual;
  #L1423ba.  v2:= temp @kind object;
  #L1423bc.  call temp:= `getBytes`(v2) @signature `Le/c/a/a/c;.getBytes:()[B` @kind interface;
  #L1423c2.  v2:= temp @kind object;
  #L1423c4.  return v2 @kind object;
}
procedure `byte`[] `encryptDecryptUsingCTRMode`(`com.konasl.konapayment.sdk.i0.a.e.b` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object, `byte`[] v9 @kind object, `boolean` v10 , `boolean` v11 ) @signature `Lcom/konasl/konapayment/sdk/i0/a/e/b;.encryptDecryptUsingCTRMode:([B[B[BZZ)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1423d8.  v1:= new `e.c.a.a.a`;
  #L1423dc.  call `<init>`(v1, v7) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L1423e2.  v2:= new `e.c.a.a.a`;
  #L1423e6.  call `<init>`(v2, v8) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L1423ec.  v0:= v6.`com.konasl.konapayment.sdk.i0.a.e.b.a` @type ^`com.mastercard.api.crypto.a` @kind object;
  #L1423f0.  v3:= v9 @kind object;
  #L1423f2.  v4:= v10;
  #L1423f4.  v5:= v11;
  #L1423f6.  call temp:= `encryptDecryptUsingCTRMode`(v0, v1, v2, v3, v4, v5) @signature `Lcom/mastercard/api/crypto/a;.encryptDecryptUsingCTRMode:(Le/c/a/a/c;Le/c/a/a/c;[BZZ)Le/c/a/a/c;` @kind virtual;
  #L1423fc.  v7:= temp @kind object;
  #L1423fe.  call temp:= `getBytes`(v7) @signature `Le/c/a/a/c;.getBytes:()[B` @kind interface;
  #L142404.  v7:= temp @kind object;
  #L142406.  return v7 @kind object;
  #L142408.  v7:= Exception @type ^`com.mastercard.api.crypto.MMPPCryptoException` @kind object;
  #L14240a.  call `printStackTrace`(v7) @signature `Lcom/konasl/konapayment/sdk/i0/a/f/a;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L142410.  v7:= new `java.lang.Exception`;
  #L142414.  v8:= `@@com.konasl.konapayment.sdk.i0.a.e.b.b` @type ^`java.lang.String` @kind object;
  #L142418.  call `<init>`(v7, v8) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14241e.  throw v7;
  catch `com.mastercard.api.crypto.MMPPCryptoException` @[L1423ec..L1423fe] goto L142408;
}
procedure `byte`[] `get16ByteMessageCounter`(`com.konasl.konapayment.sdk.i0.a.e.b` v4 @kind this, `int` v5 , `boolean` v6 ) @signature `Lcom/konasl/konapayment/sdk/i0/a/e/b;.get16ByteMessageCounter:(IZ)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L142440.  v0:= 16I;
  #L142444.  v0:= new `byte`[v0];
  #L142448.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L14244e.  v0:= temp @kind object;
  #L142450.  v1:= 1I;
  #L142452.  v2:= 0I;
  #L142454.  if v6 == 0 then goto L142460;
  #L142458.  call temp:= `put`(v0, v1) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L14245e.  goto L142466;
  #L142460.  call temp:= `put`(v0, v2) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L142466.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L14246c.  v6:= temp @kind object;
  #L14246e.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L142474.  v3:= temp @kind object;
  #L142476.  call temp:= `integerToHex`(v3, v5) @signature `Le/c/a/a/d;.integerToHex:(I)Ljava/lang/String;` @kind virtual;
  #L14247c.  v5:= temp @kind object;
  #L14247e.  call temp:= `fromHexString`(v6, v5) @signature `Le/c/a/a/d;.fromHexString:(Ljava/lang/String;)Le/c/a/a/c;` @kind virtual;
  #L142484.  v5:= temp @kind object;
  #L142486.  call temp:= `getBytes`(v5) @signature `Le/c/a/a/c;.getBytes:()[B` @kind interface;
  #L14248c.  v5:= temp @kind object;
  #L14248e.  v6:= length @variable v5;
  #L142490.  if v6 == v1 then goto L1424b8;
  #L142494.  v1:= 2I;
  #L142496.  if v6 != v1 then goto L1424a8;
  #L14249a.  call temp:= `put`(v0, v2) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1424a0.  call temp:= `put`(v0, v5) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1424a6.  goto L1424ca;
  #L1424a8.  v5:= new `java.lang.Exception`;
  #L1424ac.  v6:= `@@com.konasl.konapayment.sdk.i0.a.e.b.b` @type ^`java.lang.String` @kind object;
  #L1424b0.  call `<init>`(v5, v6) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1424b6.  throw v5;
  #L1424b8.  call temp:= `put`(v0, v2) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1424be.  call temp:= `put`(v0, v2) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1424c4.  call temp:= `put`(v0, v5) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1424ca.  v5:= 12I;
  #L1424ce.  v5:= new `byte`[v5];
  #L1424d2.  goto L1424e8;
  #L1424d8.  call temp:= `put`(v0, v5) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1424de.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1424e4.  v5:= temp @kind object;
  #L1424e6.  return v5 @kind object;
  #L1424e8.  v5:= (0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I) @kind object;
  #L1424fb.  goto L1424d8;
}
procedure `byte`[] `getAESCBCMac`(`com.konasl.konapayment.sdk.i0.a.e.b` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/konasl/konapayment/sdk/i0/a/e/b;.getAESCBCMac:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14250c.  v0:= new `e.c.a.a.a`;
  #L142510.  call `<init>`(v0, v3) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L142516.  v3:= new `e.c.a.a.a`;
  #L14251a.  call `<init>`(v3, v2) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L142520.  v2:= v1.`com.konasl.konapayment.sdk.i0.a.e.b.a` @type ^`com.mastercard.api.crypto.a` @kind object;
  #L142524.  call temp:= `AESCBCMAC`(v2, v3, v0) @signature `Lcom/mastercard/api/crypto/a;.AESCBCMAC:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L14252a.  v2:= temp @kind object;
  #L14252c.  call temp:= `getBytes`(v2) @signature `Le/c/a/a/c;.getBytes:()[B` @kind interface;
  #L142532.  v2:= temp @kind object;
  #L142534.  return v2 @kind object;
  #L142536.  v2:= Exception @type ^`com.mastercard.api.crypto.MMPPCryptoException` @kind object;
  #L142538.  call `printStackTrace`(v2) @signature `Lcom/konasl/konapayment/sdk/i0/a/f/a;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L14253e.  v2:= new `java.lang.Exception`;
  #L142542.  v3:= `@@com.konasl.konapayment.sdk.i0.a.e.b.b` @type ^`java.lang.String` @kind object;
  #L142546.  call `<init>`(v2, v3) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14254c.  throw v2;
  catch `com.mastercard.api.crypto.MMPPCryptoException` @[L142520..L142534] goto L142536;
}
procedure `byte`[] `getAuthCode`(`com.konasl.konapayment.sdk.i0.a.e.b` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/konasl/konapayment/sdk/i0/a/e/b;.getAuthCode:([B[B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L142570.  v0:= new `e.c.a.a.a`;
  #L142574.  call `<init>`(v0, v2) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L14257a.  v2:= new `e.c.a.a.a`;
  #L14257e.  call `<init>`(v2, v3) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L142584.  v3:= new `e.c.a.a.a`;
  #L142588.  call `<init>`(v3, v4) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L14258e.  call temp:= `append`(v0, v2) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L142594.  call temp:= `append`(v0, v3) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L14259a.  v2:= v1.`com.konasl.konapayment.sdk.i0.a.e.b.a` @type ^`com.mastercard.api.crypto.a` @kind object;
  #L14259e.  call temp:= `SHA256`(v2, v0) @signature `Lcom/mastercard/api/crypto/a;.SHA256:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L1425a4.  v2:= temp @kind object;
  #L1425a6.  call temp:= `getBytes`(v2) @signature `Le/c/a/a/c;.getBytes:()[B` @kind interface;
  #L1425ac.  v2:= temp @kind object;
  #L1425ae.  return v2 @kind object;
  #L1425b0.  v2:= Exception @type ^`com.mastercard.api.crypto.MMPPCryptoException` @kind object;
  #L1425b2.  call `printStackTrace`(v2) @signature `Lcom/konasl/konapayment/sdk/i0/a/f/a;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L1425b8.  v2:= new `java.lang.Exception`;
  #L1425bc.  v3:= `@@com.konasl.konapayment.sdk.i0.a.e.b.b` @type ^`java.lang.String` @kind object;
  #L1425c0.  call `<init>`(v2, v3) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1425c6.  throw v2;
  catch `com.mastercard.api.crypto.MMPPCryptoException` @[L14259a..L1425ae] goto L1425b0;
}
procedure `byte`[] `getDecryptedRNSBuffer`(`com.konasl.konapayment.sdk.i0.a.e.b` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/konasl/konapayment/sdk/i0/a/e/b;.getDecryptedRNSBuffer:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1425e8.  v0:= new `e.c.a.a.a`;
  #L1425ec.  call `<init>`(v0, v3) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L1425f2.  v3:= new `e.c.a.a.a`;
  #L1425f6.  call `<init>`(v3, v4) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L1425fc.  v4:= v2.`com.konasl.konapayment.sdk.i0.a.e.b.a` @type ^`com.mastercard.api.crypto.a` @kind object;
  #L142600.  v1:= 0I;
  #L142602.  call temp:= `AES`(v4, v0, v3, v1) @signature `Lcom/mastercard/api/crypto/a;.AES:(Le/c/a/a/c;Le/c/a/a/c;Z)Le/c/a/a/c;` @kind virtual;
  #L142608.  v3:= temp @kind object;
  #L14260a.  call temp:= `getBytes`(v3) @signature `Le/c/a/a/c;.getBytes:()[B` @kind interface;
  #L142610.  v3:= temp @kind object;
  #L142612.  return v3 @kind object;
  #L142614.  v3:= Exception @type ^`com.mastercard.api.crypto.MMPPCryptoException` @kind object;
  #L142616.  call `printStackTrace`(v3) @signature `Lcom/konasl/konapayment/sdk/i0/a/f/a;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L14261c.  v3:= new `java.lang.Exception`;
  #L142620.  v4:= `@@com.konasl.konapayment.sdk.i0.a.e.b.b` @type ^`java.lang.String` @kind object;
  #L142624.  call `<init>`(v3, v4) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14262a.  throw v3;
  catch `com.mastercard.api.crypto.MMPPCryptoException` @[L1425fc..L142612] goto L142614;
}
procedure `byte`[] `getSessionKey`(`com.konasl.konapayment.sdk.i0.a.e.b` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/konasl/konapayment/sdk/i0/a/e/b;.getSessionKey:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14264c.  v0:= new `e.c.a.a.a`;
  #L142650.  call `<init>`(v0, v2) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L142656.  v2:= new `e.c.a.a.a`;
  #L14265a.  call `<init>`(v2, v3) @signature `Le/c/a/a/a;.<init>:([B)V` @kind direct;
  #L142660.  v3:= v1.`com.konasl.konapayment.sdk.i0.a.e.b.a` @type ^`com.mastercard.api.crypto.a` @kind object;
  #L142664.  call temp:= `macSHA256`(v3, v0, v2) @signature `Lcom/mastercard/api/crypto/a;.macSHA256:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L14266a.  v2:= temp @kind object;
  #L14266c.  call temp:= `getBytes`(v2) @signature `Le/c/a/a/c;.getBytes:()[B` @kind interface;
  #L142672.  v2:= temp @kind object;
  #L142674.  v3:= 0I;
  #L142676.  v0:= 16I;
  #L14267a.  call temp:= `copyOfRange`(v2, v3, v0) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L142680.  v2:= temp @kind object;
  #L142682.  return v2 @kind object;
  #L142684.  v2:= Exception @type ^`com.mastercard.api.crypto.MMPPCryptoException` @kind object;
  #L142686.  call `printStackTrace`(v2) @signature `Lcom/konasl/konapayment/sdk/i0/a/f/a;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L14268c.  v2:= new `java.lang.Exception`;
  #L142690.  v3:= `@@com.konasl.konapayment.sdk.i0.a.e.b.b` @type ^`java.lang.String` @kind object;
  #L142694.  call `<init>`(v2, v3) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14269a.  throw v2;
  catch `com.mastercard.api.crypto.MMPPCryptoException` @[L142660..L142674] goto L142684;
}
