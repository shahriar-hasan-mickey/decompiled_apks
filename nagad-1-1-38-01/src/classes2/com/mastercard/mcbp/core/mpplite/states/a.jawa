record `com.mastercard.mcbp.core.mpplite.states.a` @kind class @AccessFlag PUBLIC {
  `boolean` `com.mastercard.mcbp.core.mpplite.states.a.a` @AccessFlag PRIVATE;
  `e.c.a.a.c` `com.mastercard.mcbp.core.mpplite.states.a.b` @AccessFlag PRIVATE;
  `e.c.a.a.c` `com.mastercard.mcbp.core.mpplite.states.a.c` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mpplite.states.a.d` @AccessFlag PRIVATE;
  `e.c.a.a.c` `com.mastercard.mcbp.core.mpplite.states.a.e` @AccessFlag PRIVATE;
  `e.c.a.a.c` `com.mastercard.mcbp.core.mpplite.states.a.f` @AccessFlag PRIVATE;
  `e.c.b.a.e.b` `com.mastercard.mcbp.core.mpplite.states.a.g` @AccessFlag PRIVATE;
  `e.c.a.a.c` `com.mastercard.mcbp.core.mpplite.states.a.h` @AccessFlag PRIVATE;
  `e.c.b.a.d.b` `com.mastercard.mcbp.core.mpplite.states.a.i` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mpplite.states.a.j` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mpplite.states.a.k` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mpplite.states.a.l` @AccessFlag PRIVATE;
  `e.c.b.a.e.a` `com.mastercard.mcbp.core.mpplite.states.a.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L162c74.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L162c7a.  v0:= new `e.c.b.a.d.b`;
  #L162c7e.  call `<init>`(v0) @signature `Le/c/b/a/d/b;.<init>:()V` @kind direct;
  #L162c84.  v1.`com.mastercard.mcbp.core.mpplite.states.a.i` @type ^`e.c.b.a.d.b` := v0 @kind object;
  #L162c88.  return @kind void;
}
procedure `e.c.a.a.c` `getAIP`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getAIP:()Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162bb4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.b` @type ^`e.c.a.a.c` @kind object;
  #L162bb8.  return v0 @kind object;
}
procedure `e.c.a.a.c` `getBlAmount`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getBlAmount:()Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162bcc.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.e` @type ^`e.c.a.a.c` @kind object;
  #L162bd0.  return v0 @kind object;
}
procedure `e.c.a.a.c` `getBlCurrency`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getBlCurrency:()Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162be4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.f` @type ^`e.c.a.a.c` @kind object;
  #L162be8.  return v0 @kind object;
}
procedure `e.c.b.a.e.b` `getCryptoOut`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getCryptoOut:()Le/c/b/a/e/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162c5c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.g` @type ^`e.c.b.a.e.b` @kind object;
  #L162c60.  return v0 @kind object;
}
procedure `e.c.a.a.c` `getPOSCII`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162bfc.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.h` @type ^`e.c.a.a.c` @kind object;
  #L162c00.  return v0 @kind object;
}
procedure `e.c.a.a.c` `getPdol`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPdol:()Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162c14.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.c` @type ^`e.c.a.a.c` @kind object;
  #L162c18.  return v0 @kind object;
}
procedure `e.c.b.a.d.b` `getTransactionContext`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162c2c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.i` @type ^`e.c.b.a.d.b` @kind object;
  #L162c30.  return v0 @kind object;
}
procedure `e.c.b.a.e.a` `getTransactionListener`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionListener:()Le/c/b/a/e/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162c44.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.m` @type ^`e.c.b.a.e.a` @kind object;
  #L162c48.  return v0 @kind object;
}
procedure `boolean` `isAlternateAID`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isAlternateAID:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162b3c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.a` @type ^`boolean` @kind boolean;
  #L162b40.  return v0;
}
procedure `boolean` `isBlExactAmount`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isBlExactAmount:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162b54.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.d` @type ^`boolean` @kind boolean;
  #L162b58.  return v0;
}
procedure `boolean` `isCVMRequired`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCVMRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162b6c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.k` @type ^`boolean` @kind boolean;
  #L162b70.  return v0;
}
procedure `boolean` `isCvmEntered`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCvmEntered:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162b84.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.j` @type ^`boolean` @kind boolean;
  #L162b88.  return v0;
}
procedure `boolean` `isOnlineAllowed`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isOnlineAllowed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162b9c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.l` @type ^`boolean` @kind boolean;
  #L162ba0.  return v0;
}
procedure `void` `setAIP`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setAIP:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L162c9c.  call temp:= `clone`(v1) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L162ca2.  v1:= temp @kind object;
  #L162ca4.  v0.`com.mastercard.mcbp.core.mpplite.states.a.b` @type ^`e.c.a.a.c` := v1 @kind object;
  #L162ca8.  return @kind void;
}
procedure `void` `setAlternateAID`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setAlternateAID:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L162cbc.  v0.`com.mastercard.mcbp.core.mpplite.states.a.a` @type ^`boolean` := v1 @kind boolean;
  #L162cc0.  return @kind void;
}
procedure `void` `setBlAmount`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setBlAmount:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L162cd4.  v0.`com.mastercard.mcbp.core.mpplite.states.a.e` @type ^`e.c.a.a.c` := v1 @kind object;
  #L162cd8.  return @kind void;
}
procedure `void` `setBlCurrency`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setBlCurrency:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L162cec.  v0.`com.mastercard.mcbp.core.mpplite.states.a.f` @type ^`e.c.a.a.c` := v1 @kind object;
  #L162cf0.  return @kind void;
}
procedure `void` `setBlExactAmount`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setBlExactAmount:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L162d04.  v0.`com.mastercard.mcbp.core.mpplite.states.a.d` @type ^`boolean` := v1 @kind boolean;
  #L162d08.  return @kind void;
}
procedure `void` `setCVMEntered`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setCVMEntered:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L162d1c.  v0.`com.mastercard.mcbp.core.mpplite.states.a.j` @type ^`boolean` := v1 @kind boolean;
  #L162d20.  return @kind void;
}
procedure `void` `setCVMRequired`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setCVMRequired:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L162d34.  v0.`com.mastercard.mcbp.core.mpplite.states.a.k` @type ^`boolean` := v1 @kind boolean;
  #L162d38.  return @kind void;
}
procedure `void` `setCryptoOut`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `e.c.b.a.e.b` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setCryptoOut:(Le/c/b/a/e/b;)V` @AccessFlag PUBLIC {
    temp;

  #L162d4c.  v0.`com.mastercard.mcbp.core.mpplite.states.a.g` @type ^`e.c.b.a.e.b` := v1 @kind object;
  #L162d50.  return @kind void;
}
procedure `void` `setOnlineAllowed`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setOnlineAllowed:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L162d64.  v0.`com.mastercard.mcbp.core.mpplite.states.a.l` @type ^`boolean` := v1 @kind boolean;
  #L162d68.  return @kind void;
}
procedure `void` `setPDOL`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPDOL:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L162d7c.  call temp:= `clone`(v1) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L162d82.  v1:= temp @kind object;
  #L162d84.  v0.`com.mastercard.mcbp.core.mpplite.states.a.c` @type ^`e.c.a.a.c` := v1 @kind object;
  #L162d88.  return @kind void;
}
procedure `void` `setPOSCII`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L162d9c.  v0.`com.mastercard.mcbp.core.mpplite.states.a.h` @type ^`e.c.a.a.c` := v1 @kind object;
  #L162da0.  return @kind void;
}
procedure `void` `setTransactionListener`(`com.mastercard.mcbp.core.mpplite.states.a` v0 @kind this, `e.c.b.a.e.a` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setTransactionListener:(Le/c/b/a/e/a;)V` @AccessFlag PUBLIC {
    temp;

  #L162db4.  v0.`com.mastercard.mcbp.core.mpplite.states.a.m` @type ^`e.c.b.a.e.a` := v1 @kind object;
  #L162db8.  return @kind void;
}
procedure `void` `wipe`(`com.mastercard.mcbp.core.mpplite.states.a` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.wipe:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162dcc.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.b` @type ^`e.c.a.a.c` @kind object;
  #L162dd0.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L162dd6.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.c` @type ^`e.c.a.a.c` @kind object;
  #L162dda.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L162de0.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.e` @type ^`e.c.a.a.c` @kind object;
  #L162de4.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L162dea.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.f` @type ^`e.c.a.a.c` @kind object;
  #L162dee.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L162df4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.h` @type ^`e.c.a.a.c` @kind object;
  #L162df8.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L162dfe.  v0:= 0I;
  #L162e00.  v1.`com.mastercard.mcbp.core.mpplite.states.a.b` @type ^`e.c.a.a.c` := v0 @kind object;
  #L162e04.  v1.`com.mastercard.mcbp.core.mpplite.states.a.c` @type ^`e.c.a.a.c` := v0 @kind object;
  #L162e08.  v1.`com.mastercard.mcbp.core.mpplite.states.a.e` @type ^`e.c.a.a.c` := v0 @kind object;
  #L162e0c.  v1.`com.mastercard.mcbp.core.mpplite.states.a.f` @type ^`e.c.a.a.c` := v0 @kind object;
  #L162e10.  v1.`com.mastercard.mcbp.core.mpplite.states.a.h` @type ^`e.c.a.a.c` := v0 @kind object;
  #L162e14.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.a.i` @type ^`e.c.b.a.d.b` @kind object;
  #L162e18.  call `wipe`(v0) @signature `Le/c/b/a/d/b;.wipe:()V` @kind virtual;
  #L162e1e.  return @kind void;
}
